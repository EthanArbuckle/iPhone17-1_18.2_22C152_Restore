void sub_19B33CC()
{
  JUMPOUT(0x19B1574);
}

void sub_19B33D8()
{
}

void sub_19B33E8()
{
}

void sub_19B33F4()
{
}

void sub_19B3404()
{
}

void sub_19B3410()
{
}

void sub_19B3420()
{
}

void sub_19B342C()
{
}

void sub_19B343C()
{
}

void sub_19B3448()
{
}

void sub_19B3458()
{
}

void sub_19B3464()
{
}

void sub_19B3474()
{
}

void sub_19B3480()
{
}

void sub_19B3490()
{
}

void sub_19B349C()
{
}

void sub_19B34AC()
{
}

void sub_19B34B8()
{
}

void sub_19B34C8()
{
}

void sub_19B34D4()
{
}

void sub_19B34E4()
{
}

void sub_19B34F0()
{
}

void sub_19B3500()
{
}

void sub_19B350C()
{
}

void sub_19B351C()
{
}

void sub_19B3528()
{
}

void sub_19B3538()
{
}

void sub_19B3544()
{
}

void sub_19B3554()
{
}

void sub_19B3560()
{
}

void sub_19B3570()
{
}

void sub_19B357C()
{
}

void sub_19B358C()
{
}

void sub_19B3598()
{
}

void sub_19B35A8()
{
}

void sub_19B35B4()
{
}

void sub_19B35C4()
{
}

void sub_19B35D0()
{
}

void sub_19B35E0()
{
}

void sub_19B35EC()
{
}

void sub_19B35FC()
{
}

void sub_19B3608()
{
}

void sub_19B3618()
{
}

void sub_19B3624()
{
}

void sub_19B3634()
{
}

void sub_19B3640()
{
}

void sub_19B3650()
{
}

void sub_19B365C()
{
}

void sub_19B366C()
{
}

void sub_19B3678()
{
}

void sub_19B3688()
{
}

void sub_19B3694()
{
}

void sub_19B36A4()
{
}

void sub_19B36B0()
{
}

void sub_19B36C0()
{
}

void sub_19B36CC()
{
}

void sub_19B36DC()
{
}

void sub_19B36E8()
{
}

void sub_19B36F8()
{
}

void sub_19B3704()
{
}

void sub_19B3714()
{
}

void sub_19B3720()
{
}

void sub_19B3730()
{
}

void sub_19B373C()
{
}

void sub_19B374C()
{
}

void sub_19B3758()
{
}

void sub_19B3768()
{
}

void sub_19B3774()
{
}

void sub_19B3784()
{
}

void sub_19B3790()
{
}

void sub_19B37A0()
{
}

void sub_19B37AC()
{
}

void sub_19B37BC()
{
}

void sub_19B37C8()
{
}

void sub_19B37D8()
{
}

void sub_19B37E4()
{
}

void sub_19B37F4()
{
}

void sub_19B3800()
{
}

void sub_19B3810()
{
}

void sub_19B381C()
{
}

void sub_19B382C()
{
}

void sub_19B3838()
{
}

void sub_19B3848()
{
}

void sub_19B3854()
{
}

void sub_19B3864()
{
}

void sub_19B3870()
{
}

void sub_19B3880()
{
}

void sub_19B388C()
{
}

void sub_19B389C()
{
}

void sub_19B38A8()
{
}

void sub_19B38B8()
{
}

void sub_19B38C4()
{
}

void sub_19B38D4()
{
}

void sub_19B38E0()
{
}

void sub_19B38F0()
{
}

void sub_19B38FC()
{
}

void sub_19B390C()
{
}

void sub_19B3918()
{
}

void sub_19B3928()
{
}

void sub_19B3934()
{
}

void sub_19B3944()
{
}

void sub_19B3950()
{
}

void sub_19B3960()
{
}

void sub_19B396C()
{
}

void sub_19B397C()
{
}

void sub_19B3988()
{
}

void sub_19B3998()
{
}

void sub_19B39A4()
{
}

void sub_19B39B4()
{
}

void sub_19B39C0()
{
}

void sub_19B39D0()
{
}

void sub_19B39DC()
{
}

void sub_19B39EC()
{
}

void sub_19B39F8()
{
}

void sub_19B3A08()
{
}

void sub_19B3A14()
{
}

void sub_19B3A24()
{
}

void sub_19B3A30()
{
}

void sub_19B3A40()
{
}

void sub_19B3A4C()
{
}

void sub_19B3A5C()
{
}

void sub_19B3A68()
{
}

void sub_19B3A78()
{
}

void sub_19B3A84()
{
}

void sub_19B3A94()
{
}

void sub_19B3AA0()
{
}

void sub_19B3AB0()
{
}

void sub_19B3ABC()
{
}

void sub_19B3ACC()
{
}

void sub_19B3AD8()
{
}

void sub_19B3AE8()
{
}

void sub_19B3AF4()
{
}

void sub_19B3B04()
{
}

void sub_19B3B10()
{
}

void sub_19B3B20()
{
}

void sub_19B3B2C()
{
}

void sub_19B3B3C()
{
}

void sub_19B3B48()
{
}

void sub_19B3B58()
{
}

void sub_19B3B64()
{
}

void sub_19B3B74()
{
}

void sub_19B3B80()
{
}

void sub_19B3B90()
{
}

void sub_19B3B9C()
{
}

void sub_19B3BAC()
{
}

void sub_19B3BB8()
{
}

void sub_19B3BC8()
{
}

void sub_19B3BD4()
{
}

void sub_19B3BE4()
{
}

void sub_19B3BF0()
{
}

void sub_19B3C00()
{
}

void sub_19B3C0C()
{
}

void sub_19B3C1C()
{
}

void sub_19B3C28()
{
}

void sub_19B3C38()
{
}

void sub_19B3C44()
{
}

void sub_19B3C54()
{
}

void sub_19B3C60()
{
}

void sub_19B3C70()
{
}

void sub_19B3C7C()
{
}

void sub_19B3C8C()
{
}

void sub_19B3C98()
{
}

void sub_19B3CA8()
{
}

void sub_19B3CB4()
{
}

void sub_19B3CC4()
{
}

void sub_19B3CD0()
{
}

void sub_19B3CE0()
{
}

void sub_19B3CEC()
{
}

void sub_19B3CFC()
{
}

void sub_19B3D08()
{
}

void sub_19B3D18()
{
}

void sub_19B3D24()
{
}

void sub_19B3D34()
{
}

void sub_19B3D40()
{
}

void sub_19B3D50()
{
}

void sub_19B3D5C()
{
}

void sub_19B3D6C()
{
}

void sub_19B3D78()
{
}

void sub_19B3D88()
{
}

void sub_19B3D94()
{
}

void sub_19B3DA4()
{
}

void sub_19B3DB0()
{
}

void sub_19B3DC0()
{
}

void sub_19B3DCC()
{
}

void sub_19B3DDC()
{
}

void sub_19B3DE8()
{
}

void sub_19B3DF8()
{
}

void sub_19B3E04()
{
}

void sub_19B3E14()
{
}

void sub_19B3E20()
{
}

void sub_19B3E30()
{
}

void sub_19B3E3C()
{
}

void sub_19B3E4C()
{
}

void sub_19B3E58()
{
}

void sub_19B3E68()
{
}

void sub_19B3E74()
{
}

void sub_19B3E84()
{
}

void sub_19B3E90()
{
}

void sub_19B3EA0()
{
}

void sub_19B3EAC()
{
}

void sub_19B3EBC()
{
}

void sub_19B3EC8()
{
}

void sub_19B3ED8()
{
}

void sub_19B3EE4()
{
}

void sub_19B3EF4()
{
}

void sub_19B3F00()
{
}

void sub_19B3F10()
{
}

void sub_19B3F1C()
{
}

void sub_19B3F2C()
{
}

void sub_19B3F38()
{
}

void sub_19B3F48()
{
}

void sub_19B3F54()
{
}

void sub_19B3F64()
{
}

void sub_19B3F70()
{
}

void sub_19B3F80()
{
}

void sub_19B3F8C()
{
}

void sub_19B3F9C()
{
}

void sub_19B3FA8()
{
}

void sub_19B3FB8()
{
}

void sub_19B3FC4()
{
}

void sub_19B3FD4()
{
}

void sub_19B3FE0()
{
}

void sub_19B3FF0()
{
}

void sub_19B3FFC()
{
}

void sub_19B400C()
{
}

void sub_19B4018()
{
}

void sub_19B4028()
{
}

void sub_19B4034()
{
}

void sub_19B4044()
{
}

void sub_19B4050()
{
}

void sub_19B4060()
{
}

void sub_19B406C()
{
}

void sub_19B407C()
{
}

void sub_19B4088()
{
}

void sub_19B4098()
{
}

void sub_19B40A4()
{
}

void sub_19B40B4()
{
}

void sub_19B40C0()
{
}

void sub_19B40D0()
{
}

void sub_19B40DC()
{
}

void sub_19B40E8()
{
}

void sub_19B40F4()
{
}

void sub_19B4100()
{
}

void sub_19B4110()
{
}

void sub_19B411C()
{
}

void sub_19B412C()
{
}

void sub_19B4138()
{
}

void sub_19B4148()
{
}

void sub_19B4154()
{
}

void sub_19B4164()
{
}

void sub_19B4170()
{
}

void sub_19B4180()
{
}

void sub_19B418C()
{
}

void sub_19B419C()
{
}

void sub_19B41A8()
{
}

void sub_19B41B8()
{
}

void sub_19B41C4()
{
}

void sub_19B41D4()
{
}

void sub_19B41E0()
{
}

void sub_19B41F0()
{
}

void sub_19B41FC()
{
}

void sub_19B420C()
{
}

void sub_19B4218()
{
}

void sub_19B4228()
{
}

void sub_19B4234()
{
}

void sub_19B4244()
{
}

void sub_19B4250()
{
}

void sub_19B4260()
{
}

void sub_19B426C()
{
}

void sub_19B427C()
{
}

void sub_19B4288()
{
}

void sub_19B4298()
{
}

void sub_19B42A4()
{
}

void sub_19B42B4()
{
}

void sub_19B42C0()
{
}

void sub_19B42D0()
{
}

void sub_19B42DC()
{
}

void sub_19B42EC()
{
}

void sub_19B42F8()
{
}

void sub_19B4308()
{
}

void sub_19B4314()
{
}

void sub_19B4324()
{
}

void sub_19B4330()
{
}

void sub_19B4340()
{
}

void sub_19B434C()
{
}

void sub_19B435C()
{
}

void sub_19B4368()
{
}

void sub_19B4378()
{
}

void sub_19B4384()
{
}

void sub_19B4394()
{
}

void sub_19B43A0()
{
}

void sub_19B43B0()
{
}

void sub_19B43BC()
{
}

void sub_19B43CC()
{
}

void sub_19B43D8()
{
}

void sub_19B43E8()
{
}

void sub_19B43F4()
{
}

void sub_19B4404()
{
}

void sub_19B4410()
{
}

void sub_19B4420()
{
}

void sub_19B442C()
{
}

void sub_19B443C()
{
}

void sub_19B4448()
{
}

void sub_19B4458()
{
}

void sub_19B4464()
{
}

void sub_19B4474()
{
}

void sub_19B4480()
{
}

void sub_19B4490()
{
}

void sub_19B449C()
{
}

void sub_19B44AC()
{
}

void sub_19B44B8()
{
}

void sub_19B44C8()
{
}

void sub_19B44D4()
{
}

void sub_19B44E4()
{
}

void sub_19B44F0()
{
}

void sub_19B4500()
{
}

void sub_19B450C()
{
}

void sub_19B451C()
{
}

void sub_19B4528()
{
}

void sub_19B4538()
{
}

void sub_19B4544()
{
}

void sub_19B4554()
{
}

void sub_19B4560()
{
}

void sub_19B4570()
{
}

void sub_19B457C()
{
}

void sub_19B458C()
{
}

void sub_19B4598()
{
}

void sub_19B45A8()
{
}

void sub_19B45B4()
{
}

void sub_19B45C4()
{
}

void sub_19B45D0()
{
}

void sub_19B45E0()
{
}

void sub_19B45EC()
{
}

void sub_19B45FC()
{
}

void sub_19B4608()
{
}

void sub_19B4618()
{
}

void sub_19B4624()
{
}

void sub_19B4634()
{
}

void sub_19B4640()
{
}

void sub_19B4650()
{
}

void sub_19B465C()
{
}

void sub_19B466C()
{
}

void sub_19B4678()
{
}

void sub_19B4688()
{
}

void sub_19B4694()
{
}

void sub_19B46A4()
{
}

void sub_19B46B0()
{
}

void sub_19B46C0()
{
}

void sub_19B46CC()
{
}

void sub_19B46DC()
{
}

void sub_19B46E8()
{
}

void sub_19B46F8()
{
}

void sub_19B4704()
{
}

void sub_19B4714()
{
}

void sub_19B4720()
{
}

void sub_19B4730()
{
}

void sub_19B473C()
{
}

void sub_19B474C()
{
}

void sub_19B4758()
{
}

void sub_19B4768()
{
}

void sub_19B4774()
{
}

void sub_19B4784()
{
}

void sub_19B4790()
{
}

void sub_19B47A0()
{
}

void sub_19B47AC()
{
}

void sub_19B47BC()
{
}

void sub_19B47C8()
{
}

void sub_19B47D8()
{
}

void sub_19B47E4()
{
}

void sub_19B47F4()
{
}

void sub_19B4800()
{
}

void sub_19B4810()
{
}

void sub_19B481C()
{
}

void sub_19B482C()
{
}

void sub_19B4838()
{
}

void sub_19B4848()
{
}

void sub_19B4854()
{
}

void sub_19B4864()
{
}

void sub_19B4870()
{
}

void sub_19B4880()
{
}

void sub_19B488C()
{
}

void sub_19B489C()
{
}

void sub_19B48A8()
{
}

void sub_19B48B8()
{
}

void sub_19B48C4()
{
}

void sub_19B48D4()
{
}

void sub_19B48E0()
{
}

void sub_19B48F0()
{
}

void sub_19B48FC()
{
}

void sub_19B490C()
{
}

void sub_19B4918()
{
}

void sub_19B4928()
{
}

void sub_19B4934()
{
}

void sub_19B4944()
{
}

void sub_19B4950()
{
}

void sub_19B4960()
{
}

void sub_19B496C()
{
}

void sub_19B497C()
{
}

void sub_19B4988()
{
}

void sub_19B4998()
{
}

void sub_19B49A4()
{
}

void sub_19B49B4()
{
}

void sub_19B49C0()
{
}

void sub_19B49D0()
{
}

void sub_19B49DC()
{
}

void sub_19B49EC()
{
}

void sub_19B49F8()
{
}

void sub_19B4A08()
{
}

void sub_19B4A14()
{
}

void sub_19B4A24()
{
}

void sub_19B4A30()
{
}

void sub_19B4A40()
{
}

void sub_19B4A4C()
{
}

void sub_19B4A5C()
{
}

void sub_19B4A68()
{
}

void sub_19B4A78()
{
}

void sub_19B4A84()
{
}

void sub_19B4A94()
{
}

void sub_19B4AA0()
{
}

void sub_19B4AB0()
{
}

void sub_19B4ABC()
{
}

void sub_19B4ACC()
{
}

void sub_19B4AD8()
{
}

void sub_19B4AE8()
{
}

void sub_19B4AF4()
{
}

void sub_19B4B04()
{
}

void sub_19B4B10()
{
}

void sub_19B4B20()
{
}

void sub_19B4B2C()
{
}

void sub_19B4B3C()
{
}

void sub_19B4B48()
{
}

void sub_19B4B58()
{
}

void sub_19B4B64()
{
}

void sub_19B4B74()
{
}

void sub_19B4B80()
{
}

void sub_19B4B90()
{
}

void sub_19B4B9C()
{
}

void sub_19B4BAC()
{
}

void sub_19B4BB8()
{
}

void sub_19B4BC8()
{
}

void sub_19B4BD4()
{
}

void sub_19B4BE4()
{
}

void sub_19B4BF0()
{
}

void sub_19B4C00()
{
}

void sub_19B4C0C()
{
}

void sub_19B4C1C()
{
}

void sub_19B4C28()
{
}

void sub_19B4C34()
{
}

void sub_19B4C48()
{
}

void sub_19B4C5C()
{
}

void sub_19B4C64()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_254DCB8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_254DCB8))
  {
    sub_5E5C(v1, "PRICE_RANGE_INEXPENSIVE");
    sub_5E5C(v2, "PRICE_RANGE_MODERATE");
    sub_5E5C(v3, "PRICE_RANGE_EXPENSIVE");
    sub_5E5C(v4, "PRICE_RANGE_VERY_EXPENSIVE");
    sub_1976294((uint64_t)&unk_254DCA0, v1, 4);
    for (uint64_t i = 0; i != -12; i -= 3)
    {
      if (SHIBYTE(v4[i + 2]) < 0) {
        operator delete((void *)v4[i]);
      }
    }
    __cxa_guard_release(&qword_254DCB8);
  }
}

void sub_19B4D7C(_Unwind_Exception *a1)
{
  uint64_t v3 = 0;
  while (1)
  {
    if (*(char *)(v1 + v3 + 95) < 0) {
      operator delete(*(void **)(v1 + v3 + 72));
    }
    v3 -= 24;
    if (v3 == -96)
    {
      __cxa_guard_abort(&qword_254DCB8);
      _Unwind_Resume(a1);
    }
  }
}

void sub_19B4DE8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_254DCD8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_254DCD8))
  {
    sub_5E5C(v1, "EV_CONNECTOR_TYPE_CHADEMO");
    sub_5E5C(v2, "EV_CONNECTOR_TYPE_J1772");
    sub_5E5C(v3, "EV_CONNECTOR_TYPE_TESLA");
    sub_5E5C(v4, "EV_CONNECTOR_TYPE_CCS1");
    sub_5E5C(v5, "EV_CONNECTOR_TYPE_CCS2");
    sub_5E5C(v6, "EV_CONNECTOR_TYPE_GBT1");
    sub_5E5C(v7, "EV_CONNECTOR_TYPE_GBT2");
    sub_5E5C(v8, "EV_CONNECTOR_TYPE_MENNEKES");
    sub_5E5C(v9, "EV_CONNECTOR_TYPE_COMBO");
    sub_1976294((uint64_t)&unk_254DCC0, v1, 9);
    for (uint64_t i = 0; i != -27; i -= 3)
    {
      if (SHIBYTE(v9[i + 2]) < 0) {
        operator delete((void *)v9[i]);
      }
    }
    __cxa_guard_release(&qword_254DCD8);
  }
}

void sub_19B4F70(_Unwind_Exception *a1)
{
  uint64_t v3 = 0;
  while (1)
  {
    if (*(char *)(v1 + v3 + 215) < 0) {
      operator delete(*(void **)(v1 + v3 + 192));
    }
    v3 -= 24;
    if (v3 == -216)
    {
      __cxa_guard_abort(&qword_254DCD8);
      _Unwind_Resume(a1);
    }
  }
}

void sub_19B4FDC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_254DCF8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_254DCF8))
  {
    sub_5E5C(__p, "OPEN_NOW");
    sub_1976294((uint64_t)&unk_254DCE0, (const void **)__p, 1);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_guard_release(&qword_254DCF8);
  }
}

void sub_19B5090(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  __cxa_guard_abort(&qword_254DCF8);
  _Unwind_Resume(a1);
}

void sub_19B50C0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_254DD18, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_254DD18))
  {
    sub_5E5C(__p, "TOP_RATED");
    sub_1976294((uint64_t)&unk_254DD00, (const void **)__p, 1);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_guard_release(&qword_254DD18);
  }
}

void sub_19B5174(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  __cxa_guard_abort(&qword_254DD18);
  _Unwind_Resume(a1);
}

void sub_19B51A4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_254DD38, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_254DD38))
  {
    sub_1897AE4((uint64_t *)v1, (const void ***)&unk_254DCA0);
    sub_1897AE4(v2, (const void ***)&unk_254DCC0);
    sub_1897AE4(v3, (const void ***)&unk_254DCE0);
    sub_1897AE4(v4, (const void ***)&unk_254DD00);
    qword_254DD20 = 0;
    qword_254DD28 = 0;
    qword_254DD30 = 0;
    qword_254DD20 = (uint64_t)operator new(0x60uLL);
    qword_254DD28 = qword_254DD20;
    qword_254DD30 = qword_254DD20 + 96;
    uint64_t v0 = 0;
    qword_254DD28 = (uint64_t)sub_19A8248((uint64_t)&qword_254DD30, v1, &v5, (uint64_t *)qword_254DD20);
    do
    {
      sub_2F020((uint64_t)&v4[v0], (char *)v4[v0 + 1]);
      v0 -= 3;
    }
    while (v0 != -12);
    __cxa_guard_release(&qword_254DD38);
  }
}

void sub_19B52EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12)
{
  qword_254DD28 = v12;
  sub_19A8370(&a10);
  for (uint64_t i = 0; i != -96; i -= 24)
    sub_2F020((uint64_t)(&a12 + i + 72), *(char **)(&a12 + i + 80));
  __cxa_guard_abort(&qword_254DD38);
  _Unwind_Resume(a1);
}

void sub_19B5370()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2626578 = 0;
  qword_2626580 = 0;
  qword_2626588 = 0;
  qword_2626578 = (uint64_t)operator new(0x18uLL);
  qword_2626580 = qword_2626578;
  qword_2626588 = qword_2626578 + 24;
  qword_2626580 = (uint64_t)sub_18914E4((uint64_t)&qword_2626588, (long long *)__p, &v2, (char *)qword_2626578);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2626590 = 0;
  qword_2626598 = 0;
  qword_26265A0 = 0;
  qword_2626590 = (uint64_t)operator new(0x18uLL);
  qword_2626598 = qword_2626590;
  qword_26265A0 = qword_2626590 + 24;
  qword_2626598 = (uint64_t)sub_18914E4((uint64_t)&qword_26265A0, (long long *)__p, &v2, (char *)qword_2626590);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_26265A8 = 0;
  qword_26265B0 = 0;
  qword_26265B8 = 0;
  qword_26265A8 = (uint64_t)operator new(0x18uLL);
  qword_26265B0 = qword_26265A8;
  qword_26265B8 = qword_26265A8 + 24;
  qword_26265B0 = (uint64_t)sub_18914E4((uint64_t)&qword_26265B8, (long long *)__p, &v2, (char *)qword_26265A8);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_19AA1B0();
}

void sub_19B5514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  qword_26265B0 = v16;
  sub_1891624((void ***)&a9);
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

unint64_t sub_19B5578(int *a1, int *a2)
{
  int v4 = a1[2];
  int v5 = a2[2];
  BOOL v6 = v4 < v5;
  if (v4 != v5)
  {
    if (v4 >= v5) {
      uint64_t v12 = (unsigned int *)a2;
    }
    else {
      uint64_t v12 = (unsigned int *)a1;
    }
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    int v15 = v12[2];
    if (v6) {
      uint64_t v16 = a2;
    }
    else {
      uint64_t v16 = a1;
    }
    int v18 = *v16;
    int v17 = v16[1];
    unsigned int v19 = v16[2];
    unint64_t v20 = sub_1E435D0(v13, v15, v19);
    unint64_t v21 = sub_1E435D0(v14, v15, v19);
    int v22 = sub_1E42E9C(a1[2]);
    LODWORD(v11) = v18 - HIDWORD(v20);
    if (v18 <= SHIDWORD(v20))
    {
      LODWORD(v11) = v20 - v18;
      if ((int)v20 <= v18)
      {
        LODWORD(v11) = 0;
        goto LABEL_32;
      }
      int v23 = v18 - v20;
    }
    else
    {
      int v23 = HIDWORD(v20) - v18;
    }
    int v26 = v23 + v22;
    if (v26 + 1 >= 0) {
      unsigned int v27 = v26 + 1;
    }
    else {
      unsigned int v27 = ~v26;
    }
    if (v27 < v11) {
      LODWORD(v11) = v27;
    }
LABEL_32:
    unsigned int v34 = v17 - HIDWORD(v21);
    if (v17 <= SHIDWORD(v21))
    {
      unsigned int v34 = v21 - v17;
      if ((int)v21 <= v17)
      {
        unsigned int v34 = 0;
LABEL_52:
        if (v11 <= v34) {
          uint64_t v11 = v34;
        }
        else {
          uint64_t v11 = v11;
        }
        return v19 | (unint64_t)(v11 << 32);
      }
      int v35 = v17 - v21 + v22;
    }
    else
    {
      int v35 = v22 - v17 + HIDWORD(v21);
    }
    if (v35 + 1 >= 0) {
      unsigned int v36 = v35 + 1;
    }
    else {
      unsigned int v36 = ~v35;
    }
    if (v36 < v34) {
      unsigned int v34 = v36;
    }
    goto LABEL_52;
  }
  int v7 = sub_1E42E9C(v4);
  int v8 = *a1;
  int v9 = *a2;
  unsigned int v10 = *a1 - *a2;
  if (*a1 == *a2)
  {
    LODWORD(v11) = 0;
  }
  else
  {
    int v24 = v7 + 1;
    if (v8 <= v9)
    {
      unsigned int v10 = v9 - v8;
      LODWORD(v11) = v24 + v8 - v9;
      BOOL v25 = (int)v11 < 0;
    }
    else
    {
      LODWORD(v11) = v24 - v8 + v9;
      BOOL v25 = (int)v11 < 0;
    }
    if (v25) {
      LODWORD(v11) = -(int)v11;
    }
    if (v11 >= v10) {
      LODWORD(v11) = v10;
    }
  }
  int v28 = a1[1];
  int v29 = a2[1];
  unsigned int v30 = v28 - v29;
  if (v28 == v29)
  {
    int v31 = 0;
  }
  else
  {
    int v32 = v7 + 1;
    if (v28 <= v29)
    {
      unsigned int v30 = v29 - v28;
      int v31 = v28 + v32 - v29;
      BOOL v33 = v31 < 0;
    }
    else
    {
      int v31 = v32 - v28 + v29;
      BOOL v33 = v31 < 0;
    }
    if (v33) {
      int v31 = -v31;
    }
    if (v31 >= v30) {
      int v31 = v30;
    }
  }
  if (v11 <= v31) {
    uint64_t v11 = v31;
  }
  else {
    uint64_t v11 = v11;
  }
  unsigned int v19 = a1[2];
  return v19 | (unint64_t)(v11 << 32);
}

void sub_19B5738(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(unsigned __int8 *)(a3 + 23);
  if ((v5 & 0x80u) != 0) {
    uint64_t v5 = *(void *)(a3 + 8);
  }
  if (v5)
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    int v9 = sub_31B0D0(a1, a3);
    if (v9)
    {
      std::string::operator=((std::string *)a4, (const std::string *)(v9 + 5));
    }
    else
    {
      sub_5E5C(__p, "");
      sub_1DCA458(a2, a3, (uint64_t)__p, __dst);
      if (*(char *)(a4 + 23) < 0) {
        operator delete(*(void **)a4);
      }
      *(_OWORD *)a4 = *(_OWORD *)__dst;
      *(void *)(a4 + 16) = v11;
      HIBYTE(v11) = 0;
      LOBYTE(__dst[0]) = 0;
      if (v15 < 0) {
        operator delete(__p[0]);
      }
      sub_19B5EE0((char *)__dst, (long long *)a3, (long long *)a4);
      sub_19B608C((uint64_t)a1, (unsigned __int8 *)__dst, (uint64_t)__dst);
      if (v13 < 0) {
        operator delete(v12);
      }
      if (SHIBYTE(v11) < 0) {
        operator delete(__dst[0]);
      }
    }
  }
  else
  {
    sub_5E5C((void *)a4, "");
  }
}

void sub_19B587C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  sub_1B23C((uint64_t)&a10);
  if (*(char *)(v21 + 23) < 0) {
    operator delete(*(void **)v21);
  }
  _Unwind_Resume(a1);
}

void *sub_19B58C8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  long long v2 = (void *)result[2];
  if (v2)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = (long long *)(v2 + 2);
      if ((unint64_t)v4 >= *(void *)(a2 + 16))
      {
        result = sub_1D740((char **)a2, (uint64_t)v5);
        int v4 = result;
      }
      else
      {
        result = sub_1962E70((void *)a2, v5);
        v4 += 3;
      }
      *(void *)(a2 + 8) = v4;
      long long v2 = (void *)*v2;
    }
    while (v2);
  }
  return result;
}

void sub_19B5944(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1891624((void ***)va);
  _Unwind_Resume(a1);
}

void sub_19B595C(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(void *)a5 = 0;
  *(void *)(a5 + 8) = 0;
  *(void *)(a5 + 16) = 0;
  uint64_t v6 = *a3;
  if (a3[1] != *a3)
  {
    uint64_t v11 = 0;
    unint64_t v12 = 0;
    char v13 = 0;
    do
    {
      uint64_t v14 = (long long *)(v6 + v11);
      sub_19B5738(a1, a2, v6 + v11, (uint64_t)v22);
      unint64_t v15 = v23;
      if ((a4 & 1) != 0 && ((v23 & 0x80u) == 0 ? (unint64_t v16 = v23) : (unint64_t v16 = (unint64_t)v22[1]), !v16))
      {
        char v17 = 0;
        char v13 = 1;
        if ((v23 & 0x80) != 0) {
          goto LABEL_18;
        }
      }
      else
      {
        if ((v23 & 0x80u) != 0) {
          unint64_t v15 = (unint64_t)v22[1];
        }
        if (!v15)
        {
          char v17 = 1;
          if ((v23 & 0x80) == 0) {
            goto LABEL_19;
          }
LABEL_18:
          operator delete(v22[0]);
          goto LABEL_19;
        }
        sub_19B5F78((char *)__dst, v14, (long long *)v22);
        sub_19B5B00((char **)a5, (long long *)__dst);
        if (v21 < 0) {
          operator delete(__p);
        }
        if (v19 < 0) {
          operator delete(__dst[0]);
        }
        char v17 = 1;
        if ((v23 & 0x80) != 0) {
          goto LABEL_18;
        }
      }
LABEL_19:
      if ((v17 & 1) == 0)
      {
        if ((v13 & 1) == 0)
        {
          __dst[0] = (void *)a5;
          sub_1898078((void ***)__dst);
        }
        return;
      }
      ++v12;
      uint64_t v6 = *a3;
      v11 += 24;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 3) > v12);
  }
}

void sub_19B5AC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  sub_1898078((void ***)&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_19B5B00(char **a1, long long *a2)
{
  unint64_t v6 = (unint64_t)a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(result - 8);
  if (v7 >= v6)
  {
    unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - (void)*a1) >> 4);
    unint64_t v12 = v11 + 1;
    if (v11 + 1 > 0x555555555555555) {
      sub_2E00();
    }
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - (void)*a1) >> 4);
    if (2 * v13 > v12) {
      unint64_t v12 = 2 * v13;
    }
    if (v13 >= 0x2AAAAAAAAAAAAAALL) {
      unint64_t v14 = 0x555555555555555;
    }
    else {
      unint64_t v14 = v12;
    }
    uint64_t v29 = result;
    if (v14) {
      unint64_t v15 = (char *)sub_18959FC(result, v14);
    }
    else {
      unint64_t v15 = 0;
    }
    unint64_t v16 = &v15[48 * v11];
    long long v17 = *a2;
    *((void *)v16 + 2) = *((void *)a2 + 2);
    *(_OWORD *)unint64_t v16 = v17;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    long long v18 = *(long long *)((char *)a2 + 24);
    *((void *)v16 + 5) = *((void *)a2 + 5);
    *(_OWORD *)(v16 + 24) = v18;
    *((void *)a2 + 4) = 0;
    *((void *)a2 + 5) = 0;
    *((void *)a2 + 3) = 0;
    unint64_t v20 = *a1;
    unint64_t v19 = (unint64_t)a1[1];
    if ((char *)v19 == *a1)
    {
      int64x2_t v24 = vdupq_n_s64(v19);
      char v21 = &v15[48 * v11];
    }
    else
    {
      char v21 = &v15[48 * v11];
      do
      {
        long long v22 = *(_OWORD *)(v19 - 48);
        *((void *)v21 - 4) = *(void *)(v19 - 32);
        *((_OWORD *)v21 - 3) = v22;
        *(void *)(v19 - 40) = 0;
        *(void *)(v19 - 32) = 0;
        *(void *)(v19 - 48) = 0;
        long long v23 = *(_OWORD *)(v19 - 24);
        *((void *)v21 - 1) = *(void *)(v19 - 8);
        *(_OWORD *)(v21 - 24) = v23;
        v21 -= 48;
        *(void *)(v19 - 16) = 0;
        *(void *)(v19 - 8) = 0;
        *(void *)(v19 - 24) = 0;
        v19 -= 48;
      }
      while ((char *)v19 != v20);
      int64x2_t v24 = *(int64x2_t *)a1;
    }
    unsigned int v10 = v16 + 48;
    *a1 = v21;
    a1[1] = v16 + 48;
    int64x2_t v27 = v24;
    BOOL v25 = a1[2];
    a1[2] = &v15[48 * v14];
    int v28 = v25;
    uint64_t v26 = v24.i64[0];
    uint64_t result = sub_1987DE8((uint64_t)&v26);
  }
  else
  {
    long long v8 = *a2;
    *(void *)(v7 + 16) = *((void *)a2 + 2);
    *(_OWORD *)unint64_t v7 = v8;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    long long v9 = *(long long *)((char *)a2 + 24);
    *(void *)(v7 + 40) = *((void *)a2 + 5);
    *(_OWORD *)(v7 + 24) = v9;
    *((void *)a2 + 4) = 0;
    *((void *)a2 + 5) = 0;
    *((void *)a2 + 3) = 0;
    unsigned int v10 = (char *)(v7 + 48);
  }
  a1[1] = v10;
  return result;
}

void *sub_19B5CB8(uint64_t a1)
{
  return sub_1893D48((void *)(a1 + 80));
}

void sub_19B5CC0(uint64_t a1@<X0>, unsigned int **a2@<X1>, int a3@<W2>, char **a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 64);
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  unint64_t v6 = *a2;
  uint64_t v7 = (uint64_t)a2[1];
  if (v5)
  {
    if (v6 != (unsigned int *)v7)
    {
      long long v9 = (void *)(a1 + 40);
      uint64_t v10 = a1 + 80;
      do
      {
        unsigned int v25 = *v6;
        unint64_t v11 = sub_1891768(v9, &v25);
        if (v11)
        {
          *(void *)&long long v24 = v11[3];
          DWORD2(v24) = a3;
          sub_19B6508(v10, (unint64_t *)&v24, &v24);
        }
        else
        {
          unint64_t v13 = a4[1];
          unint64_t v12 = (unint64_t)a4[2];
          if ((unint64_t)v13 >= v12)
          {
            unint64_t v15 = *a4;
            uint64_t v16 = (v13 - *a4) >> 2;
            unint64_t v17 = v16 + 1;
            if ((unint64_t)(v16 + 1) >> 62) {
              sub_2E00();
            }
            uint64_t v18 = v12 - (void)v15;
            if (v18 >> 1 > v17) {
              unint64_t v17 = v18 >> 1;
            }
            if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v19 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v19 = v17;
            }
            if (v19)
            {
              unint64_t v20 = (char *)sub_1896AFC((uint64_t)(a4 + 2), v19);
              unint64_t v15 = *a4;
              unint64_t v13 = a4[1];
            }
            else
            {
              unint64_t v20 = 0;
            }
            char v21 = &v20[4 * v16];
            *(_DWORD *)char v21 = v25;
            unint64_t v14 = v21 + 4;
            while (v13 != v15)
            {
              int v22 = *((_DWORD *)v13 - 1);
              v13 -= 4;
              *((_DWORD *)v21 - 1) = v22;
              v21 -= 4;
            }
            *a4 = v21;
            a4[1] = v14;
            a4[2] = &v20[4 * v19];
            if (v15) {
              operator delete(v15);
            }
          }
          else
          {
            *(_DWORD *)unint64_t v13 = v25;
            unint64_t v14 = v13 + 4;
          }
          a4[1] = v14;
        }
        ++v6;
      }
      while (v6 != (unsigned int *)v7);
    }
  }
  else
  {
    long long v23 = *a2;
    sub_19B6010(a4, v23, v7, (v7 - (uint64_t)v6) >> 2);
  }
}

void sub_19B5E74(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_19B5E9C(uint64_t a1, int a2, uint64_t a3)
{
  LODWORD(v4) = a2;
  *((void *)&v4 + 1) = a3;
  return sub_19B6724(a1 + 40, (unsigned int *)&v4, &v4);
}

uint64_t sub_19B5ED0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 120) = a2;
  return result;
}

uint64_t sub_19B5ED8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 120);
}

char *sub_19B5EE0(char *__dst, long long *a2, long long *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)__dst = v5;
  }
  unint64_t v6 = __dst + 24;
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200(v6, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v7 = *a3;
    *((void *)__dst + 5) = *((void *)a3 + 2);
    *(_OWORD *)unint64_t v6 = v7;
  }
  return __dst;
}

void sub_19B5F5C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

char *sub_19B5F78(char *__dst, long long *a2, long long *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)__dst = v5;
  }
  unint64_t v6 = __dst + 24;
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200(v6, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v7 = *a3;
    *((void *)__dst + 5) = *((void *)a3 + 2);
    *(_OWORD *)unint64_t v6 = v7;
  }
  return __dst;
}

void sub_19B5FF4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_19B6010(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    uint64_t result = sub_1896AB8(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_19B6070(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

unsigned __int8 *sub_19B608C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_111EE48(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    unint64_t v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (sub_111EE88(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  sub_19B6310(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_19B63C0(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  int v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    *int v22 = v25[0];
  }
  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v25[0];
  v25[0] = 0;
  ++*v7;
  sub_19B64B0((uint64_t)v25, 0);
  return i;
}

void sub_19B62F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_19B64B0((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

__n128 sub_19B6310@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = (char *)operator new(0x40uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)unint64_t v8 = 0;
  *((void *)v8 + 1) = a2;
  unint64_t v9 = v8 + 16;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_4200(v9, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)unint64_t v9 = *(_OWORD *)a3;
    *((void *)v8 + 4) = *(void *)(a3 + 16);
  }
  __n128 result = *(__n128 *)(a3 + 24);
  *(__n128 *)(v8 + 40) = result;
  *((void *)v8 + 7) = *(void *)(a3 + 40);
  *(void *)(a3 + 32) = 0;
  *(void *)(a3 + 40) = 0;
  *(void *)(a3 + 24) = 0;
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_19B63A8(_Unwind_Exception *a1)
{
  sub_19B64B0(v1, 0);
  _Unwind_Resume(a1);
}

void sub_19B63C0(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      sub_B6C0(a1, prime);
    }
  }
}

void sub_19B64B0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_18963A8((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

void *sub_19B6508(uint64_t a1, unint64_t *a2, _OWORD *a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v6 >= v7) {
        unint64_t v3 = v6 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
    unint64_t v9 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      for (uint64_t i = *v9; i; uint64_t i = (void *)*i)
      {
        unint64_t v11 = i[1];
        if (v11 == v6)
        {
          if (i[2] == v6) {
            return i;
          }
        }
        else
        {
          if (v8.u32[0] > 1uLL)
          {
            if (v11 >= v7) {
              v11 %= v7;
            }
          }
          else
          {
            v11 &= v7 - 1;
          }
          if (v11 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x20uLL);
  *uint64_t i = 0;
  i[1] = v6;
  *((_OWORD *)i + 1) = *a3;
  float v12 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    BOOL v14 = 1;
    if (v7 >= 3) {
      BOOL v14 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v15 = v14 | (2 * v7);
    unint64_t v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v15;
    }
    sub_18925BC(a1, v17);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7) {
        unint64_t v3 = v6 % v7;
      }
      else {
        unint64_t v3 = v6;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
  }
  uint64_t v18 = *(void *)a1;
  unint64_t v19 = *(void **)(*(void *)a1 + 8 * v3);
  if (v19)
  {
    *uint64_t i = *v19;
LABEL_38:
    *unint64_t v19 = i;
    goto LABEL_39;
  }
  *uint64_t i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v18 + 8 * v3) = a1 + 16;
  if (*i)
  {
    unint64_t v20 = *(void *)(*i + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7) {
        v20 %= v7;
      }
    }
    else
    {
      v20 &= v7 - 1;
    }
    unint64_t v19 = (void *)(*(void *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_19B6710(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_19B6724(uint64_t a1, unsigned int *a2, _OWORD *a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
    unint64_t v9 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      unint64_t v10 = *v9;
      if (*v9)
      {
        do
        {
          unint64_t v11 = v10[1];
          if (v11 == v6)
          {
            if (*((_DWORD *)v10 + 4) == v6) {
              return v10;
            }
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v11 >= v7) {
                v11 %= v7;
              }
            }
            else
            {
              v11 &= v7 - 1;
            }
            if (v11 != v3) {
              break;
            }
          }
          unint64_t v10 = (void *)*v10;
        }
        while (v10);
      }
    }
  }
  unint64_t v10 = operator new(0x20uLL);
  *unint64_t v10 = 0;
  v10[1] = v6;
  *((_OWORD *)v10 + 1) = *a3;
  float v12 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    BOOL v14 = 1;
    if (v7 >= 3) {
      BOOL v14 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v15 = v14 | (2 * v7);
    unint64_t v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v15;
    }
    sub_19B63C0(a1, v17);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
      else {
        unint64_t v3 = v6;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
  }
  uint64_t v18 = *(void *)a1;
  unint64_t v19 = *(void **)(*(void *)a1 + 8 * v3);
  if (v19)
  {
    *unint64_t v10 = *v19;
LABEL_38:
    *unint64_t v19 = v10;
    goto LABEL_39;
  }
  *unint64_t v10 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  *(void *)(v18 + 8 * v3) = a1 + 16;
  if (*v10)
  {
    unint64_t v20 = *(void *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7) {
        v20 %= v7;
      }
    }
    else
    {
      v20 &= v7 - 1;
    }
    unint64_t v19 = (void *)(*(void *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v10;
}

void sub_19B6930(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_19B6944()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2626620, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_19BD924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_19BF930()
{
}

void sub_19BF93C()
{
}

void sub_19BF94C()
{
}

void sub_19BF958()
{
}

void sub_19BF968()
{
}

void sub_19BF974()
{
}

void sub_19BF984()
{
}

void sub_19BF990()
{
}

void sub_19BF9A0()
{
}

void sub_19BF9AC()
{
}

void sub_19BF9BC()
{
}

void sub_19BF9C8()
{
}

void sub_19BF9D8()
{
}

void sub_19BF9E4()
{
}

void sub_19BF9F4()
{
}

void sub_19BFA00()
{
}

void sub_19BFA10()
{
}

void sub_19BFA1C()
{
}

void sub_19BFA2C()
{
}

void sub_19BFA38()
{
}

void sub_19BFA48()
{
}

void sub_19BFA54()
{
}

void sub_19BFA64()
{
}

void sub_19BFA70()
{
}

void sub_19BFA80()
{
}

void sub_19BFA8C()
{
}

void sub_19BFA9C()
{
}

void sub_19BFAA8()
{
}

void sub_19BFAB8()
{
}

void sub_19BFAC4()
{
}

void sub_19BFAD4()
{
}

void sub_19BFAE0()
{
}

void sub_19BFAF0()
{
}

void sub_19BFAFC()
{
}

void sub_19BFB0C()
{
}

void sub_19BFB18()
{
}

void sub_19BFB28()
{
}

void sub_19BFB34()
{
}

void sub_19BFB44()
{
}

void sub_19BFB50()
{
}

void sub_19BFB60()
{
}

void sub_19BFB6C()
{
}

void sub_19BFB7C()
{
}

void sub_19BFB88()
{
}

void sub_19BFB98()
{
}

void sub_19BFBA4()
{
}

void sub_19BFBB4()
{
}

void sub_19BFBC0()
{
}

void sub_19BFBD0()
{
}

void sub_19BFBDC()
{
}

void sub_19BFBEC()
{
}

void sub_19BFBF8()
{
}

void sub_19BFC08()
{
}

void sub_19BFC14()
{
}

void sub_19BFC24()
{
}

void sub_19BFC30()
{
}

void sub_19BFC40()
{
}

void sub_19BFC4C()
{
}

void sub_19BFC5C()
{
}

void sub_19BFC68()
{
}

void sub_19BFC78()
{
}

void sub_19BFC84()
{
}

void sub_19BFC94()
{
}

void sub_19BFCA0()
{
}

void sub_19BFCB0()
{
}

void sub_19BFCBC()
{
}

void sub_19BFCCC()
{
}

void sub_19BFCD8()
{
}

void sub_19BFCE8()
{
}

void sub_19BFCF4()
{
}

void sub_19BFD04()
{
}

void sub_19BFD10()
{
}

void sub_19BFD20()
{
}

void sub_19BFD2C()
{
}

void sub_19BFD3C()
{
}

void sub_19BFD48()
{
}

void sub_19BFD58()
{
}

void sub_19BFD64()
{
}

void sub_19BFD74()
{
}

void sub_19BFD80()
{
}

void sub_19BFD90()
{
}

void sub_19BFD9C()
{
}

void sub_19BFDAC()
{
}

void sub_19BFDB8()
{
}

void sub_19BFDC8()
{
}

void sub_19BFDD4()
{
}

void sub_19BFDE4()
{
}

void sub_19BFDF0()
{
}

void sub_19BFE00()
{
}

void sub_19BFE0C()
{
}

void sub_19BFE1C()
{
}

void sub_19BFE28()
{
}

void sub_19BFE38()
{
}

void sub_19BFE44()
{
}

void sub_19BFE54()
{
}

void sub_19BFE60()
{
}

void sub_19BFE70()
{
}

void sub_19BFE7C()
{
}

void sub_19BFE8C()
{
}

void sub_19BFE98()
{
}

void sub_19BFEA8()
{
}

void sub_19BFEB4()
{
}

void sub_19BFEC4()
{
}

void sub_19BFED0()
{
}

void sub_19BFEE0()
{
}

void sub_19BFEEC()
{
}

void sub_19BFEFC()
{
}

void sub_19BFF08()
{
}

void sub_19BFF18()
{
}

void sub_19BFF24()
{
}

void sub_19BFF34()
{
}

void sub_19BFF40()
{
}

void sub_19BFF50()
{
}

void sub_19BFF5C()
{
}

void sub_19BFF6C()
{
}

void sub_19BFF78()
{
}

void sub_19BFF88()
{
}

void sub_19BFF94()
{
}

void sub_19BFFA4()
{
}

void sub_19BFFB0()
{
}

void sub_19BFFC0()
{
}

void sub_19BFFCC()
{
}

void sub_19BFFDC()
{
}

void sub_19BFFE8()
{
}

void sub_19BFFF8()
{
}

void sub_19C0004()
{
}

void sub_19C0014()
{
}

void sub_19C0020()
{
}

void sub_19C0030()
{
}

void sub_19C003C()
{
}

void sub_19C004C()
{
}

void sub_19C0058()
{
}

void sub_19C0068()
{
}

void sub_19C0074()
{
}

void sub_19C0084()
{
}

void sub_19C0090()
{
}

void sub_19C00A0()
{
}

void sub_19C00AC()
{
}

void sub_19C00BC()
{
}

void sub_19C00C8()
{
}

void sub_19C00D8()
{
}

void sub_19C00E4()
{
}

void sub_19C00F4()
{
}

void sub_19C0100()
{
}

void sub_19C0110()
{
}

void sub_19C011C()
{
}

void sub_19C012C()
{
}

void sub_19C0138()
{
}

void sub_19C0148()
{
}

void sub_19C0154()
{
}

void sub_19C0164()
{
}

void sub_19C0170()
{
}

void sub_19C0180()
{
}

void sub_19C018C()
{
}

void sub_19C019C()
{
}

void sub_19C01A8()
{
}

void sub_19C01B8()
{
}

void sub_19C01C4()
{
}

void sub_19C01D4()
{
}

void sub_19C01E0()
{
}

void sub_19C01F0()
{
}

void sub_19C01FC()
{
}

void sub_19C020C()
{
}

void sub_19C0218()
{
}

void sub_19C0228()
{
}

void sub_19C0234()
{
}

void sub_19C0244()
{
}

void sub_19C0250()
{
}

void sub_19C0260()
{
}

void sub_19C026C()
{
}

void sub_19C027C()
{
}

void sub_19C0288()
{
}

void sub_19C0298()
{
}

void sub_19C02A4()
{
}

void sub_19C02B4()
{
}

void sub_19C02C0()
{
}

void sub_19C02D0()
{
}

void sub_19C02DC()
{
}

void sub_19C02EC()
{
}

void sub_19C02F8()
{
}

void sub_19C0308()
{
}

void sub_19C0314()
{
}

void sub_19C0324()
{
}

void sub_19C0330()
{
}

void sub_19C0340()
{
}

void sub_19C034C()
{
}

void sub_19C035C()
{
}

void sub_19C0368()
{
}

void sub_19C0378()
{
}

void sub_19C0384()
{
}

void sub_19C0394()
{
}

void sub_19C03A0()
{
}

void sub_19C03B0()
{
}

void sub_19C03BC()
{
}

void sub_19C03CC()
{
}

void sub_19C03D8()
{
}

void sub_19C03E8()
{
}

void sub_19C03F4()
{
}

void sub_19C0404()
{
}

void sub_19C0410()
{
}

void sub_19C0420()
{
}

void sub_19C042C()
{
}

void sub_19C043C()
{
}

void sub_19C0448()
{
}

void sub_19C0458()
{
}

void sub_19C0464()
{
}

void sub_19C0474()
{
}

void sub_19C0480()
{
}

void sub_19C0490()
{
}

void sub_19C049C()
{
}

void sub_19C04AC()
{
}

void sub_19C04B8()
{
}

void sub_19C04C8()
{
}

void sub_19C04D4()
{
}

void sub_19C04E4()
{
}

void sub_19C04F0()
{
}

void sub_19C0500()
{
}

void sub_19C050C()
{
}

void sub_19C051C()
{
}

void sub_19C0528()
{
}

void sub_19C0538()
{
}

void sub_19C0544()
{
}

void sub_19C0554()
{
}

void sub_19C0560()
{
}

void sub_19C0570()
{
}

void sub_19C057C()
{
}

void sub_19C058C()
{
}

void sub_19C0598()
{
}

void sub_19C05A8()
{
}

void sub_19C05B4()
{
}

void sub_19C05C4()
{
}

void sub_19C05D0()
{
}

void sub_19C05E0()
{
}

void sub_19C05EC()
{
}

void sub_19C05FC()
{
}

void sub_19C0608()
{
}

void sub_19C0618()
{
}

void sub_19C0624()
{
}

void sub_19C0634()
{
}

void sub_19C0640()
{
}

void sub_19C0650()
{
}

void sub_19C065C()
{
}

void sub_19C066C()
{
}

void sub_19C0678()
{
}

void sub_19C0688()
{
}

void sub_19C0694()
{
}

void sub_19C06A4()
{
}

void sub_19C06B0()
{
}

void sub_19C06C0()
{
}

void sub_19C06CC()
{
}

void sub_19C06DC()
{
}

void sub_19C06E8()
{
}

void sub_19C06F8()
{
}

void sub_19C0704()
{
}

void sub_19C0714()
{
}

void sub_19C0720()
{
}

void sub_19C0730()
{
}

void sub_19C073C()
{
}

void sub_19C074C()
{
}

void sub_19C0758()
{
}

void sub_19C0768()
{
}

void sub_19C0774()
{
}

void sub_19C0784()
{
}

void sub_19C0790()
{
}

void sub_19C07A0()
{
}

void sub_19C07AC()
{
}

void sub_19C07BC()
{
}

void sub_19C07C8()
{
}

void sub_19C07D8()
{
}

void sub_19C07E4()
{
}

void sub_19C07F4()
{
}

void sub_19C0800()
{
}

void sub_19C0810()
{
}

void sub_19C081C()
{
}

void sub_19C082C()
{
}

void sub_19C0838()
{
}

void sub_19C0848()
{
}

void sub_19C0854()
{
}

void sub_19C0864()
{
}

void sub_19C0870()
{
}

void sub_19C087C()
{
}

void sub_19C0888()
{
}

void sub_19C0894()
{
}

void sub_19C08A4()
{
}

void sub_19C08B0()
{
}

void sub_19C08C0()
{
}

void sub_19C08CC()
{
}

void sub_19C08DC()
{
}

void sub_19C08E8()
{
}

void sub_19C08F8()
{
}

void sub_19C0904()
{
}

void sub_19C0914()
{
}

void sub_19C0920()
{
}

void sub_19C0930()
{
}

void sub_19C093C()
{
}

void sub_19C094C()
{
}

void sub_19C0958()
{
}

void sub_19C0968()
{
}

void sub_19C0974()
{
}

void sub_19C0984()
{
}

void sub_19C0990()
{
}

void sub_19C09A0()
{
}

void sub_19C09AC()
{
}

void sub_19C09BC()
{
}

void sub_19C09C8()
{
}

void sub_19C09D8()
{
}

void sub_19C09E4()
{
}

void sub_19C09F4()
{
}

void sub_19C0A00()
{
}

void sub_19C0A10()
{
}

void sub_19C0A1C()
{
}

void sub_19C0A2C()
{
}

void sub_19C0A38()
{
}

void sub_19C0A48()
{
}

void sub_19C0A54()
{
}

void sub_19C0A64()
{
}

void sub_19C0A70()
{
}

void sub_19C0A80()
{
}

void sub_19C0A8C()
{
}

void sub_19C0A9C()
{
}

void sub_19C0AA8()
{
}

void sub_19C0AB8()
{
}

void sub_19C0AC4()
{
}

void sub_19C0AD4()
{
}

void sub_19C0AE0()
{
}

void sub_19C0AF0()
{
}

void sub_19C0AFC()
{
}

void sub_19C0B0C()
{
}

void sub_19C0B18()
{
}

void sub_19C0B28()
{
}

void sub_19C0B34()
{
}

void sub_19C0B44()
{
}

void sub_19C0B50()
{
}

void sub_19C0B60()
{
}

void sub_19C0B6C()
{
}

void sub_19C0B7C()
{
}

void sub_19C0B88()
{
}

void sub_19C0B98()
{
}

void sub_19C0BA4()
{
}

void sub_19C0BB4()
{
}

void sub_19C0BC0()
{
}

void sub_19C0BD0()
{
}

void sub_19C0BDC()
{
}

void sub_19C0BEC()
{
}

void sub_19C0BF8()
{
}

void sub_19C0C08()
{
}

void sub_19C0C14()
{
}

void sub_19C0C24()
{
}

void sub_19C0C30()
{
}

void sub_19C0C40()
{
}

void sub_19C0C4C()
{
}

void sub_19C0C5C()
{
}

void sub_19C0C68()
{
}

void sub_19C0C78()
{
}

void sub_19C0C84()
{
}

void sub_19C0C94()
{
}

void sub_19C0CA0()
{
}

void sub_19C0CB0()
{
}

void sub_19C0CBC()
{
}

void sub_19C0CCC()
{
}

void sub_19C0CD8()
{
}

void sub_19C0CE8()
{
}

void sub_19C0CF4()
{
}

void sub_19C0D04()
{
}

void sub_19C0D10()
{
}

void sub_19C0D20()
{
}

void sub_19C0D2C()
{
}

void sub_19C0D3C()
{
}

void sub_19C0D48()
{
}

void sub_19C0D58()
{
}

void sub_19C0D64()
{
}

void sub_19C0D74()
{
}

void sub_19C0D80()
{
}

void sub_19C0D90()
{
}

void sub_19C0D9C()
{
}

void sub_19C0DAC()
{
}

void sub_19C0DB8()
{
}

void sub_19C0DC8()
{
}

void sub_19C0DD4()
{
}

void sub_19C0DE4()
{
}

void sub_19C0DF0()
{
}

void sub_19C0E00()
{
}

void sub_19C0E0C()
{
}

void sub_19C0E1C()
{
}

void sub_19C0E28()
{
}

void sub_19C0E38()
{
}

void sub_19C0E44()
{
}

void sub_19C0E54()
{
}

void sub_19C0E60()
{
}

void sub_19C0E70()
{
}

void sub_19C0E7C()
{
}

void sub_19C0E8C()
{
}

void sub_19C0E98()
{
}

void sub_19C0EA8()
{
}

void sub_19C0EB4()
{
}

void sub_19C0EC4()
{
}

void sub_19C0ED0()
{
}

void sub_19C0EE0()
{
}

void sub_19C0EEC()
{
}

void sub_19C0EFC()
{
}

void sub_19C0F08()
{
}

void sub_19C0F18()
{
}

void sub_19C0F24()
{
}

void sub_19C0F34()
{
}

void sub_19C0F40()
{
}

void sub_19C0F50()
{
}

void sub_19C0F5C()
{
}

void sub_19C0F6C()
{
}

void sub_19C0F78()
{
}

void sub_19C0F88()
{
}

void sub_19C0F94()
{
}

void sub_19C0FA4()
{
}

void sub_19C0FB0()
{
}

void sub_19C0FC0()
{
}

void sub_19C0FCC()
{
}

void sub_19C0FDC()
{
}

void sub_19C0FE8()
{
}

void sub_19C0FF8()
{
}

void sub_19C1004()
{
}

void sub_19C1014()
{
}

void sub_19C1020()
{
}

void sub_19C1030()
{
}

void sub_19C103C()
{
}

void sub_19C104C()
{
}

void sub_19C1058()
{
}

void sub_19C1068()
{
}

void sub_19C1074()
{
}

void sub_19C1084()
{
}

void sub_19C1090()
{
}

void sub_19C10A0()
{
}

void sub_19C10AC()
{
}

void sub_19C10BC()
{
}

void sub_19C10C8()
{
}

void sub_19C10D8()
{
}

void sub_19C10E4()
{
}

void sub_19C10F4()
{
}

void sub_19C1100()
{
}

void sub_19C1110()
{
}

void sub_19C111C()
{
}

void sub_19C112C()
{
}

void sub_19C1138()
{
}

void sub_19C1148()
{
}

void sub_19C1154()
{
}

void sub_19C1164()
{
}

void sub_19C1170()
{
}

void sub_19C1180()
{
}

void sub_19C118C()
{
}

void sub_19C119C()
{
}

void sub_19C11A8()
{
}

void sub_19C11B8()
{
}

void sub_19C11C4()
{
}

void sub_19C11D4()
{
}

void sub_19C11E0()
{
}

void sub_19C11F0()
{
}

void sub_19C11FC()
{
}

void sub_19C120C()
{
}

void sub_19C1218()
{
}

void sub_19C1228()
{
}

void sub_19C1234()
{
}

void sub_19C1244()
{
}

void sub_19C1250()
{
}

void sub_19C1260()
{
}

void sub_19C126C()
{
}

void sub_19C127C()
{
}

void sub_19C1288()
{
}

void sub_19C1298()
{
}

void sub_19C12A4()
{
}

void sub_19C12B4()
{
}

void sub_19C12C0()
{
}

void sub_19C12D0()
{
}

void sub_19C12DC()
{
}

void sub_19C12EC()
{
}

void sub_19C12F8()
{
}

void sub_19C1308()
{
}

void sub_19C1314()
{
}

void sub_19C1324()
{
}

void sub_19C1330()
{
}

void sub_19C1340()
{
}

void sub_19C134C()
{
}

void sub_19C135C()
{
}

void sub_19C1368()
{
}

void sub_19C1378()
{
}

void sub_19C1384()
{
}

void sub_19C1394()
{
}

void sub_19C13A0()
{
}

void sub_19C13B0()
{
}

void sub_19C13BC()
{
}

void sub_19C13C8()
{
}

void sub_19C13DC()
{
}

void sub_19C13F0()
{
}

void sub_19C13F8()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_26265D8 = 0;
  qword_26265E0 = 0;
  qword_26265E8 = 0;
  qword_26265D8 = (uint64_t)operator new(0x18uLL);
  qword_26265E0 = qword_26265D8;
  qword_26265E8 = qword_26265D8 + 24;
  qword_26265E0 = (uint64_t)sub_18914E4((uint64_t)&qword_26265E8, (long long *)__p, v4, (char *)qword_26265D8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_26265F0 = 0;
  qword_26265F8 = 0;
  qword_2626600 = 0;
  qword_26265F0 = (uint64_t)operator new(0x18uLL);
  qword_26265F8 = qword_26265F0;
  qword_2626600 = qword_26265F0 + 24;
  qword_26265F8 = (uint64_t)sub_18914E4((uint64_t)&qword_2626600, (long long *)__p, v4, (char *)qword_26265F0);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2626608 = 0;
  qword_2626610 = 0;
  qword_2626618 = 0;
  qword_2626608 = (uint64_t)operator new(0x18uLL);
  qword_2626610 = qword_2626608;
  qword_2626618 = qword_2626608 + 24;
  qword_2626610 = (uint64_t)sub_18914E4((uint64_t)&qword_2626618, (long long *)__p, v4, (char *)qword_2626608);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_19B6944();
  sub_5E5C(__p, "en_US");
  LODWORD(v4[0]) = 0;
  sub_5E5C((void *)v4 + 1, "en-US_US");
  int v5 = 0;
  sub_5E5C(v6, "en_AU");
  int v7 = 1;
  sub_5E5C(v8, "en-AU_AU");
  int v9 = 1;
  sub_5E5C(v10, "en_CA");
  int v11 = 2;
  sub_5E5C(v12, "en-CA_CA");
  int v13 = 2;
  sub_5E5C(v14, "en_GB");
  int v15 = 3;
  sub_5E5C(v16, "en-GB_GB");
  int v17 = 3;
  sub_5E5C(v18, "en_IE");
  int v19 = 4;
  sub_5E5C(v20, "en-IE_IE");
  int v21 = 4;
  sub_5E5C(v22, "en_NZ");
  int v23 = 4;
  sub_5E5C(v24, "en-NZ_NZ");
  int v25 = 4;
  sub_5E5C(v26, "en_ZA");
  int v27 = 4;
  sub_5E5C(v28, "en-ZA_ZA");
  int v29 = 4;
  sub_1898F60((uint64_t)&unk_2626638, (unsigned __int8 *)__p, 14);
  uint64_t v0 = 56;
  do
  {
    if (*((char *)&__p[v0 - 1] - 1) < 0) {
      operator delete(__p[v0 - 4]);
    }
    v0 -= 4;
  }
  while (v0 * 8);
  sub_5E5C(__p, "US");
  LODWORD(v4[0]) = 1;
  sub_5E5C((void *)v4 + 1, "AU");
  int v5 = 2;
  sub_5E5C(v6, "CA");
  int v7 = 3;
  sub_5E5C(v8, "GB");
  int v9 = 4;
  sub_5E5C(v10, "IE");
  int v11 = 5;
  sub_5E5C(v12, "NZ");
  int v13 = 5;
  sub_5E5C(v14, "ZA");
  int v15 = 5;
  sub_5E5C(v16, "ZA");
  int v17 = 5;
  sub_5E5C(v18, "IN");
  int v19 = 7;
  sub_5E5C(v20, "DE");
  int v21 = 6;
  sub_5E5C(v22, "CH");
  int v23 = 6;
  sub_5E5C(v24, "NL");
  int v25 = 6;
  sub_5E5C(v26, "DK");
  int v27 = 6;
  sub_5E5C(v28, "NO");
  int v29 = 6;
  sub_5E5C(v30, "FI");
  int v31 = 6;
  sub_5E5C(v32, "SE");
  int v33 = 6;
  sub_5E5C(v34, "BE");
  int v35 = 6;
  sub_5E5C(v36, "AT");
  int v37 = 6;
  sub_5E5C(v38, "MX");
  int v39 = 6;
  sub_5E5C(v40, "AR");
  int v41 = 6;
  sub_5E5C(v42, "CL");
  int v43 = 6;
  sub_5E5C(v44, "BR");
  int v45 = 6;
  sub_5E5C(v46, "SK");
  int v47 = 6;
  sub_5E5C(v48, "TR");
  int v49 = 6;
  sub_5E5C(v50, "PL");
  int v51 = 6;
  sub_5E5C(v52, "HR");
  int v53 = 6;
  sub_5E5C(v54, "RO");
  int v55 = 6;
  sub_5E5C(v56, "HU");
  int v57 = 6;
  sub_5E5C(v58, "VN");
  int v59 = 6;
  sub_5E5C(v60, "GR");
  int v61 = 6;
  sub_18993EC((uint64_t)&unk_2626660, (unsigned __int8 *)__p, 30);
  uint64_t v1 = 120;
  do
  {
    if (*((char *)&__p[v1 - 1] - 1) < 0) {
      operator delete(__p[v1 - 4]);
    }
    v1 -= 4;
  }
  while (v1 * 8);
}

void sub_19C1AB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v19 = 960;
  while (1)
  {
    if (*(char *)(v17 + v19 - 9) < 0) {
      operator delete(*(void **)(v17 + v19 - 32));
    }
    v19 -= 32;
    if (!v19) {
      _Unwind_Resume(exception_object);
    }
  }
}

uint64_t sub_19C1C64(uint64_t a1)
{
  uint64_t v2 = sub_647A98(a1);
  if (sub_1E64C10(v2)) {
    return 1;
  }
  uint64_t v4 = sub_647A98(a1);

  return sub_1E64C28(v4);
}

void sub_19C1CB8(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v5 = nullsub_1(a1);
  char v6 = *(int **)(v5 + 920);
  int v7 = *(int **)(v5 + 928);
  if (v6 == v7)
  {
    uint64_t v14 = v19;
  }
  else
  {
    while (1)
    {
      int v8 = *v6;
      uint64_t v9 = *a2;
      uint64_t v10 = a2[1];
      int v21 = &v18;
      if (v9 != v10)
      {
        double v11 = (double)v8;
        do
        {
          if (*(_DWORD *)(v9 + 768) == 1 && (sub_19C1C64(v9) & 1) == 0)
          {
            double v12 = 402336.0;
            if (*(_DWORD *)(v9 + 768) == 1) {
              double v12 = sub_1CDE700(v9);
            }
            if (v12 < v11) {
              sub_19C2020(&v21, v9);
            }
          }
          v9 += 776;
        }
        while (v9 != v10);
      }
      uint64_t v14 = v18;
      uint64_t v13 = v19;
      if (0xA3A0FD5C5F02A3A1 * ((v19 - v18) >> 3) >= v6[1]) {
        break;
      }
      while (v13 != v14)
        uint64_t v13 = sub_1907F60(v13 - 776);
      uint64_t v19 = v14;
      v6 += 2;
      if (v6 == v7) {
        goto LABEL_18;
      }
    }
    uint64_t v14 = v19;
  }
LABEL_18:
  uint64_t v15 = v18;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  if (v15 == v14) {
    uint64_t v16 = *a2;
  }
  else {
    uint64_t v16 = v15;
  }
  if (v15 == v14) {
    uint64_t v17 = a2[1];
  }
  else {
    uint64_t v17 = v14;
  }
  sub_19C23BC(a3, v16, v17, 0xA3A0FD5C5F02A3A1 * ((v17 - v16) >> 3));
  long long v22 = (void **)&v18;
  sub_1977124(&v22);
}

void sub_19C1E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void **a14)
{
  a14 = (void **)&a10;
  sub_1977124(&a14);
  _Unwind_Resume(a1);
}

void sub_19C1E64(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v5 = *(int **)(a1 + 920);
  char v6 = *(int **)(a1 + 928);
  if (v5 == v6)
  {
    uint64_t v11 = 0;
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 0;
    while (1)
    {
      int v8 = *v5;
      uint64_t v9 = *a2;
      uint64_t v10 = a2[1];
      uint64_t v18 = &v15;
      uint64_t v11 = v7;
      if (v9 != v10)
      {
        double v12 = (double)v8;
        do
        {
          if ((sub_19C1C64(v9) & 1) == 0 && sub_1CDE700(v9) < v12) {
            sub_19C2520(&v18, v9);
          }
          v9 += 768;
        }
        while (v9 != v10);
        uint64_t v11 = v16;
      }
      uint64_t v7 = v15;
      if (0xAAAAAAAAAAAAAAABLL * ((v11 - v15) >> 8) >= v5[1]) {
        break;
      }
      while (v11 != v7)
        uint64_t v11 = sub_1907B68(v11 - 768);
      uint64_t v16 = v7;
      v5 += 2;
      if (v5 == v6)
      {
        uint64_t v11 = v7;
        uint64_t v7 = v15;
        break;
      }
    }
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  if (v7 == v11) {
    uint64_t v13 = *a2;
  }
  else {
    uint64_t v13 = v7;
  }
  if (v7 == v11) {
    uint64_t v14 = a2[1];
  }
  else {
    uint64_t v14 = v11;
  }
  sub_1916FC0(a3, v13, v14, 0xAAAAAAAAAAAAAAABLL * ((v14 - v13) >> 8));
  uint64_t v19 = (void **)&v15;
  sub_1916270(&v19);
}

void sub_19C1FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void **a14)
{
  a14 = (void **)&a10;
  sub_1916270(&a14);
  _Unwind_Resume(a1);
}

void *sub_19C1FEC@<X0>(uint64_t *a1@<X1>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return sub_1894EF8(a2, *a1, a1[1], 0x8F9C18F9C18F9C19 * ((a1[1] - *a1) >> 4));
}

uint64_t **sub_19C2020(uint64_t **a1, uint64_t a2)
{
  char v3 = *a1;
  unint64_t v4 = (*a1)[1];
  if (v4 >= (*a1)[2])
  {
    uint64_t v5 = sub_19C2084(*a1, a2);
  }
  else
  {
    sub_1907A78((*a1)[1], a2);
    uint64_t v5 = v4 + 776;
    v3[1] = v4 + 776;
  }
  v3[1] = v5;
  return a1;
}

void sub_19C207C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_19C2084(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xA3A0FD5C5F02A3A1 * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x54741FAB8BE054) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xA3A0FD5C5F02A3A1 * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x2A3A0FD5C5F02ALL) {
    unint64_t v9 = 0x54741FAB8BE054;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_19C222C(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v13 = v10;
  uint64_t v14 = &v10[776 * v4];
  uint64_t v16 = &v10[776 * v9];
  sub_1907A78((uint64_t)v14, a2);
  uint64_t v15 = v14 + 776;
  sub_19C21A4(a1, &v13);
  uint64_t v11 = a1[1];
  sub_19C236C((uint64_t)&v13);
  return v11;
}

void sub_19C2190(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_19C236C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_19C21A4(uint64_t *a1, void *a2)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t result = a2[1];
  while (v4 != v5)
  {
    v4 -= 776;
    uint64_t result = sub_19C2278(result - 776, v4);
  }
  a2[1] = result;
  uint64_t v7 = *a1;
  *a1 = result;
  a2[1] = v7;
  uint64_t v8 = a1[1];
  a1[1] = a2[2];
  a2[2] = v8;
  uint64_t v9 = a1[2];
  a1[2] = a2[3];
  a2[3] = v9;
  *a2 = a2[1];
  return result;
}

void *sub_19C222C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x54741FAB8BE055) {
    sub_188D718();
  }
  return operator new(776 * a2);
}

uint64_t sub_19C2278(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(_DWORD *)(a1 + 768) = -1;
  sub_19C22B0(a1, a2);
  return a1;
}

uint64_t sub_19C22B0(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(unsigned int *)(result + 768);
  if (v4 != -1) {
    uint64_t result = ((uint64_t (*)(char *, uint64_t))off_24E7EB8[v4])(&v7, result);
  }
  *(_DWORD *)(v3 + 768) = -1;
  uint64_t v5 = *(unsigned int *)(a2 + 768);
  if (v5 != -1)
  {
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_24E7ED0[v5])(&v6, v3, a2);
    *(_DWORD *)(v3 + 768) = v5;
  }
  return result;
}

uint64_t sub_19C2340(uint64_t a1, uint64_t a2, long long *a3)
{
  return sub_18930D8(a2, a3);
}

uint64_t sub_19C234C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1915F70(a2, a3);
}

uint64_t sub_19C2358(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  *a2 = *(_OWORD *)a3;
  return sub_1893348((uint64_t)(a2 + 1), (uint64_t *)(a3 + 16));
}

uint64_t sub_19C236C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 776;
    sub_1907F60(i - 776);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void *sub_19C23BC(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    char v6 = result;
    sub_19C2444(result, a4);
    uint64_t result = (void *)sub_19C249C((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_19C2424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_1977124(&a9);
  _Unwind_Resume(a1);
}

char *sub_19C2444(void *a1, unint64_t a2)
{
  if (a2 >= 0x54741FAB8BE055) {
    sub_2E00();
  }
  uint64_t result = (char *)sub_19C222C((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[776 * v4];
  return result;
}

uint64_t sub_19C249C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_1907A78(a4 + v7, a2 + v7);
      v7 += 776;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_19C24FC(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 776;
    do
    {
      sub_1907F60(v4 + v2);
      v2 -= 776;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t **sub_19C2520(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = (*a1)[1];
  if (v4 >= (*a1)[2])
  {
    uint64_t v5 = sub_1915D98(*a1, a2);
  }
  else
  {
    sub_1907C7C((*a1)[1], a2);
    uint64_t v5 = v4 + 768;
    v3[1] = v4 + 768;
  }
  v3[1] = v5;
  return a1;
}

void sub_19C257C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_19C2584()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_26266D0, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_19C9564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_19CB570()
{
}

void sub_19CB57C()
{
}

void sub_19CB58C()
{
}

void sub_19CB598()
{
}

void sub_19CB5A8()
{
}

void sub_19CB5B4()
{
}

void sub_19CB5C4()
{
}

void sub_19CB5D0()
{
}

void sub_19CB5E0()
{
}

void sub_19CB5EC()
{
}

void sub_19CB5FC()
{
}

void sub_19CB608()
{
}

void sub_19CB618()
{
}

void sub_19CB624()
{
}

void sub_19CB634()
{
}

void sub_19CB640()
{
}

void sub_19CB650()
{
}

void sub_19CB65C()
{
}

void sub_19CB66C()
{
}

void sub_19CB678()
{
}

void sub_19CB688()
{
}

void sub_19CB694()
{
}

void sub_19CB6A4()
{
}

void sub_19CB6B0()
{
}

void sub_19CB6C0()
{
}

void sub_19CB6CC()
{
}

void sub_19CB6DC()
{
}

void sub_19CB6E8()
{
}

void sub_19CB6F8()
{
}

void sub_19CB704()
{
}

void sub_19CB714()
{
}

void sub_19CB720()
{
}

void sub_19CB730()
{
}

void sub_19CB73C()
{
}

void sub_19CB74C()
{
}

void sub_19CB758()
{
}

void sub_19CB768()
{
}

void sub_19CB774()
{
}

void sub_19CB784()
{
}

void sub_19CB790()
{
}

void sub_19CB7A0()
{
}

void sub_19CB7AC()
{
}

void sub_19CB7BC()
{
}

void sub_19CB7C8()
{
}

void sub_19CB7D8()
{
}

void sub_19CB7E4()
{
}

void sub_19CB7F4()
{
}

void sub_19CB800()
{
}

void sub_19CB810()
{
}

void sub_19CB81C()
{
}

void sub_19CB82C()
{
}

void sub_19CB838()
{
}

void sub_19CB848()
{
}

void sub_19CB854()
{
}

void sub_19CB864()
{
}

void sub_19CB870()
{
}

void sub_19CB880()
{
}

void sub_19CB88C()
{
}

void sub_19CB89C()
{
}

void sub_19CB8A8()
{
}

void sub_19CB8B8()
{
}

void sub_19CB8C4()
{
}

void sub_19CB8D4()
{
}

void sub_19CB8E0()
{
}

void sub_19CB8F0()
{
}

void sub_19CB8FC()
{
}

void sub_19CB90C()
{
}

void sub_19CB918()
{
}

void sub_19CB928()
{
}

void sub_19CB934()
{
}

void sub_19CB944()
{
}

void sub_19CB950()
{
}

void sub_19CB960()
{
}

void sub_19CB96C()
{
}

void sub_19CB97C()
{
}

void sub_19CB988()
{
}

void sub_19CB998()
{
}

void sub_19CB9A4()
{
}

void sub_19CB9B4()
{
}

void sub_19CB9C0()
{
}

void sub_19CB9D0()
{
}

void sub_19CB9DC()
{
}

void sub_19CB9EC()
{
}

void sub_19CB9F8()
{
}

void sub_19CBA08()
{
}

void sub_19CBA14()
{
}

void sub_19CBA24()
{
}

void sub_19CBA30()
{
}

void sub_19CBA40()
{
}

void sub_19CBA4C()
{
}

void sub_19CBA5C()
{
}

void sub_19CBA68()
{
}

void sub_19CBA78()
{
}

void sub_19CBA84()
{
}

void sub_19CBA94()
{
}

void sub_19CBAA0()
{
}

void sub_19CBAB0()
{
}

void sub_19CBABC()
{
}

void sub_19CBACC()
{
}

void sub_19CBAD8()
{
}

void sub_19CBAE8()
{
}

void sub_19CBAF4()
{
}

void sub_19CBB04()
{
}

void sub_19CBB10()
{
}

void sub_19CBB20()
{
}

void sub_19CBB2C()
{
}

void sub_19CBB3C()
{
}

void sub_19CBB48()
{
}

void sub_19CBB58()
{
}

void sub_19CBB64()
{
}

void sub_19CBB74()
{
}

void sub_19CBB80()
{
}

void sub_19CBB90()
{
}

void sub_19CBB9C()
{
}

void sub_19CBBAC()
{
}

void sub_19CBBB8()
{
}

void sub_19CBBC8()
{
}

void sub_19CBBD4()
{
}

void sub_19CBBE4()
{
}

void sub_19CBBF0()
{
}

void sub_19CBC00()
{
}

void sub_19CBC0C()
{
}

void sub_19CBC1C()
{
}

void sub_19CBC28()
{
}

void sub_19CBC38()
{
}

void sub_19CBC44()
{
}

void sub_19CBC54()
{
}

void sub_19CBC60()
{
}

void sub_19CBC70()
{
}

void sub_19CBC7C()
{
}

void sub_19CBC8C()
{
}

void sub_19CBC98()
{
}

void sub_19CBCA8()
{
}

void sub_19CBCB4()
{
}

void sub_19CBCC4()
{
}

void sub_19CBCD0()
{
}

void sub_19CBCE0()
{
}

void sub_19CBCEC()
{
}

void sub_19CBCFC()
{
}

void sub_19CBD08()
{
}

void sub_19CBD18()
{
}

void sub_19CBD24()
{
}

void sub_19CBD34()
{
}

void sub_19CBD40()
{
}

void sub_19CBD50()
{
}

void sub_19CBD5C()
{
}

void sub_19CBD6C()
{
}

void sub_19CBD78()
{
}

void sub_19CBD88()
{
}

void sub_19CBD94()
{
}

void sub_19CBDA4()
{
}

void sub_19CBDB0()
{
}

void sub_19CBDC0()
{
}

void sub_19CBDCC()
{
}

void sub_19CBDDC()
{
}

void sub_19CBDE8()
{
}

void sub_19CBDF8()
{
}

void sub_19CBE04()
{
}

void sub_19CBE14()
{
}

void sub_19CBE20()
{
}

void sub_19CBE30()
{
}

void sub_19CBE3C()
{
}

void sub_19CBE4C()
{
}

void sub_19CBE58()
{
}

void sub_19CBE68()
{
}

void sub_19CBE74()
{
}

void sub_19CBE84()
{
}

void sub_19CBE90()
{
}

void sub_19CBEA0()
{
}

void sub_19CBEAC()
{
}

void sub_19CBEBC()
{
}

void sub_19CBEC8()
{
}

void sub_19CBED8()
{
}

void sub_19CBEE4()
{
}

void sub_19CBEF4()
{
}

void sub_19CBF00()
{
}

void sub_19CBF10()
{
}

void sub_19CBF1C()
{
}

void sub_19CBF2C()
{
}

void sub_19CBF38()
{
}

void sub_19CBF48()
{
}

void sub_19CBF54()
{
}

void sub_19CBF64()
{
}

void sub_19CBF70()
{
}

void sub_19CBF80()
{
}

void sub_19CBF8C()
{
}

void sub_19CBF9C()
{
}

void sub_19CBFA8()
{
}

void sub_19CBFB8()
{
}

void sub_19CBFC4()
{
}

void sub_19CBFD4()
{
}

void sub_19CBFE0()
{
}

void sub_19CBFF0()
{
}

void sub_19CBFFC()
{
}

void sub_19CC00C()
{
}

void sub_19CC018()
{
}

void sub_19CC028()
{
}

void sub_19CC034()
{
}

void sub_19CC044()
{
}

void sub_19CC050()
{
}

void sub_19CC060()
{
}

void sub_19CC06C()
{
}

void sub_19CC07C()
{
}

void sub_19CC088()
{
}

void sub_19CC098()
{
}

void sub_19CC0A4()
{
}

void sub_19CC0B4()
{
}

void sub_19CC0C0()
{
}

void sub_19CC0D0()
{
}

void sub_19CC0DC()
{
}

void sub_19CC0EC()
{
}

void sub_19CC0F8()
{
}

void sub_19CC108()
{
}

void sub_19CC114()
{
}

void sub_19CC124()
{
}

void sub_19CC130()
{
}

void sub_19CC140()
{
}

void sub_19CC14C()
{
}

void sub_19CC15C()
{
}

void sub_19CC168()
{
}

void sub_19CC178()
{
}

void sub_19CC184()
{
}

void sub_19CC194()
{
}

void sub_19CC1A0()
{
}

void sub_19CC1B0()
{
}

void sub_19CC1BC()
{
}

void sub_19CC1CC()
{
}

void sub_19CC1D8()
{
}

void sub_19CC1E8()
{
}

void sub_19CC1F4()
{
}

void sub_19CC204()
{
}

void sub_19CC210()
{
}

void sub_19CC220()
{
}

void sub_19CC22C()
{
}

void sub_19CC23C()
{
}

void sub_19CC248()
{
}

void sub_19CC258()
{
}

void sub_19CC264()
{
}

void sub_19CC274()
{
}

void sub_19CC280()
{
}

void sub_19CC290()
{
}

void sub_19CC29C()
{
}

void sub_19CC2AC()
{
}

void sub_19CC2B8()
{
}

void sub_19CC2C8()
{
}

void sub_19CC2D4()
{
}

void sub_19CC2E4()
{
}

void sub_19CC2F0()
{
}

void sub_19CC300()
{
}

void sub_19CC30C()
{
}

void sub_19CC31C()
{
}

void sub_19CC328()
{
}

void sub_19CC338()
{
}

void sub_19CC344()
{
}

void sub_19CC354()
{
}

void sub_19CC360()
{
}

void sub_19CC370()
{
}

void sub_19CC37C()
{
}

void sub_19CC38C()
{
}

void sub_19CC398()
{
}

void sub_19CC3A8()
{
}

void sub_19CC3B4()
{
}

void sub_19CC3C4()
{
}

void sub_19CC3D0()
{
}

void sub_19CC3E0()
{
}

void sub_19CC3EC()
{
}

void sub_19CC3FC()
{
}

void sub_19CC408()
{
}

void sub_19CC418()
{
}

void sub_19CC424()
{
}

void sub_19CC434()
{
}

void sub_19CC440()
{
}

void sub_19CC450()
{
}

void sub_19CC45C()
{
}

void sub_19CC46C()
{
}

void sub_19CC478()
{
}

void sub_19CC488()
{
}

void sub_19CC494()
{
}

void sub_19CC4A4()
{
}

void sub_19CC4B0()
{
}

void sub_19CC4BC()
{
}

void sub_19CC4C8()
{
}

void sub_19CC4D4()
{
}

void sub_19CC4E4()
{
}

void sub_19CC4F0()
{
}

void sub_19CC500()
{
}

void sub_19CC50C()
{
}

void sub_19CC51C()
{
}

void sub_19CC528()
{
}

void sub_19CC538()
{
}

void sub_19CC544()
{
}

void sub_19CC554()
{
}

void sub_19CC560()
{
}

void sub_19CC570()
{
}

void sub_19CC57C()
{
}

void sub_19CC58C()
{
}

void sub_19CC598()
{
}

void sub_19CC5A8()
{
}

void sub_19CC5B4()
{
}

void sub_19CC5C4()
{
}

void sub_19CC5D0()
{
}

void sub_19CC5E0()
{
}

void sub_19CC5EC()
{
}

void sub_19CC5FC()
{
}

void sub_19CC608()
{
}

void sub_19CC618()
{
}

void sub_19CC624()
{
}

void sub_19CC634()
{
}

void sub_19CC640()
{
}

void sub_19CC650()
{
}

void sub_19CC65C()
{
}

void sub_19CC66C()
{
}

void sub_19CC678()
{
}

void sub_19CC688()
{
}

void sub_19CC694()
{
}

void sub_19CC6A4()
{
}

void sub_19CC6B0()
{
}

void sub_19CC6C0()
{
}

void sub_19CC6CC()
{
}

void sub_19CC6DC()
{
}

void sub_19CC6E8()
{
}

void sub_19CC6F8()
{
}

void sub_19CC704()
{
}

void sub_19CC714()
{
}

void sub_19CC720()
{
}

void sub_19CC730()
{
}

void sub_19CC73C()
{
}

void sub_19CC74C()
{
}

void sub_19CC758()
{
}

void sub_19CC768()
{
}

void sub_19CC774()
{
}

void sub_19CC784()
{
}

void sub_19CC790()
{
}

void sub_19CC7A0()
{
}

void sub_19CC7AC()
{
}

void sub_19CC7BC()
{
}

void sub_19CC7C8()
{
}

void sub_19CC7D8()
{
}

void sub_19CC7E4()
{
}

void sub_19CC7F4()
{
}

void sub_19CC800()
{
}

void sub_19CC810()
{
}

void sub_19CC81C()
{
}

void sub_19CC82C()
{
}

void sub_19CC838()
{
}

void sub_19CC848()
{
}

void sub_19CC854()
{
}

void sub_19CC864()
{
}

void sub_19CC870()
{
}

void sub_19CC880()
{
}

void sub_19CC88C()
{
}

void sub_19CC89C()
{
}

void sub_19CC8A8()
{
}

void sub_19CC8B8()
{
}

void sub_19CC8C4()
{
}

void sub_19CC8D4()
{
}

void sub_19CC8E0()
{
}

void sub_19CC8F0()
{
}

void sub_19CC8FC()
{
}

void sub_19CC90C()
{
}

void sub_19CC918()
{
}

void sub_19CC928()
{
}

void sub_19CC934()
{
}

void sub_19CC944()
{
}

void sub_19CC950()
{
}

void sub_19CC960()
{
}

void sub_19CC96C()
{
}

void sub_19CC97C()
{
}

void sub_19CC988()
{
}

void sub_19CC998()
{
}

void sub_19CC9A4()
{
}

void sub_19CC9B4()
{
}

void sub_19CC9C0()
{
}

void sub_19CC9D0()
{
}

void sub_19CC9DC()
{
}

void sub_19CC9EC()
{
}

void sub_19CC9F8()
{
}

void sub_19CCA08()
{
}

void sub_19CCA14()
{
}

void sub_19CCA24()
{
}

void sub_19CCA30()
{
}

void sub_19CCA40()
{
}

void sub_19CCA4C()
{
}

void sub_19CCA5C()
{
}

void sub_19CCA68()
{
}

void sub_19CCA78()
{
}

void sub_19CCA84()
{
}

void sub_19CCA94()
{
}

void sub_19CCAA0()
{
}

void sub_19CCAB0()
{
}

void sub_19CCABC()
{
}

void sub_19CCACC()
{
}

void sub_19CCAD8()
{
}

void sub_19CCAE8()
{
}

void sub_19CCAF4()
{
}

void sub_19CCB04()
{
}

void sub_19CCB10()
{
}

void sub_19CCB20()
{
}

void sub_19CCB2C()
{
}

void sub_19CCB3C()
{
}

void sub_19CCB48()
{
}

void sub_19CCB58()
{
}

void sub_19CCB64()
{
}

void sub_19CCB74()
{
}

void sub_19CCB80()
{
}

void sub_19CCB90()
{
}

void sub_19CCB9C()
{
}

void sub_19CCBAC()
{
}

void sub_19CCBB8()
{
}

void sub_19CCBC8()
{
}

void sub_19CCBD4()
{
}

void sub_19CCBE4()
{
}

void sub_19CCBF0()
{
}

void sub_19CCC00()
{
}

void sub_19CCC0C()
{
}

void sub_19CCC1C()
{
}

void sub_19CCC28()
{
}

void sub_19CCC38()
{
}

void sub_19CCC44()
{
}

void sub_19CCC54()
{
}

void sub_19CCC60()
{
}

void sub_19CCC70()
{
}

void sub_19CCC7C()
{
}

void sub_19CCC8C()
{
}

void sub_19CCC98()
{
}

void sub_19CCCA8()
{
}

void sub_19CCCB4()
{
}

void sub_19CCCC4()
{
}

void sub_19CCCD0()
{
}

void sub_19CCCE0()
{
}

void sub_19CCCEC()
{
}

void sub_19CCCFC()
{
}

void sub_19CCD08()
{
}

void sub_19CCD18()
{
}

void sub_19CCD24()
{
}

void sub_19CCD34()
{
}

void sub_19CCD40()
{
}

void sub_19CCD50()
{
}

void sub_19CCD5C()
{
}

void sub_19CCD6C()
{
}

void sub_19CCD78()
{
}

void sub_19CCD88()
{
}

void sub_19CCD94()
{
}

void sub_19CCDA4()
{
}

void sub_19CCDB0()
{
}

void sub_19CCDC0()
{
}

void sub_19CCDCC()
{
}

void sub_19CCDDC()
{
}

void sub_19CCDE8()
{
}

void sub_19CCDF8()
{
}

void sub_19CCE04()
{
}

void sub_19CCE14()
{
}

void sub_19CCE20()
{
}

void sub_19CCE30()
{
}

void sub_19CCE3C()
{
}

void sub_19CCE4C()
{
}

void sub_19CCE58()
{
}

void sub_19CCE68()
{
}

void sub_19CCE74()
{
}

void sub_19CCE84()
{
}

void sub_19CCE90()
{
}

void sub_19CCEA0()
{
}

void sub_19CCEAC()
{
}

void sub_19CCEBC()
{
}

void sub_19CCEC8()
{
}

void sub_19CCED8()
{
}

void sub_19CCEE4()
{
}

void sub_19CCEF4()
{
}

void sub_19CCF00()
{
}

void sub_19CCF10()
{
}

void sub_19CCF1C()
{
}

void sub_19CCF2C()
{
}

void sub_19CCF38()
{
}

void sub_19CCF48()
{
}

void sub_19CCF54()
{
}

void sub_19CCF64()
{
}

void sub_19CCF70()
{
}

void sub_19CCF80()
{
}

void sub_19CCF8C()
{
}

void sub_19CCF9C()
{
}

void sub_19CCFA8()
{
}

void sub_19CCFB8()
{
}

void sub_19CCFC4()
{
}

void sub_19CCFD4()
{
}

void sub_19CCFE0()
{
}

void sub_19CCFF0()
{
}

void sub_19CCFFC()
{
}

void sub_19CD008()
{
}

void sub_19CD01C()
{
}

void sub_19CD030()
{
}

void sub_19CD038()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2626688 = 0;
  qword_2626690 = 0;
  qword_2626698 = 0;
  qword_2626688 = (uint64_t)operator new(0x18uLL);
  qword_2626690 = qword_2626688;
  qword_2626698 = qword_2626688 + 24;
  qword_2626690 = (uint64_t)sub_18914E4((uint64_t)&qword_2626698, (long long *)__p, v4, (char *)qword_2626688);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_26266A0 = 0;
  qword_26266A8 = 0;
  qword_26266B0 = 0;
  qword_26266A0 = (uint64_t)operator new(0x18uLL);
  qword_26266A8 = qword_26266A0;
  qword_26266B0 = qword_26266A0 + 24;
  qword_26266A8 = (uint64_t)sub_18914E4((uint64_t)&qword_26266B0, (long long *)__p, v4, (char *)qword_26266A0);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_26266B8 = 0;
  qword_26266C0 = 0;
  qword_26266C8 = 0;
  qword_26266B8 = (uint64_t)operator new(0x18uLL);
  qword_26266C0 = qword_26266B8;
  qword_26266C8 = qword_26266B8 + 24;
  qword_26266C0 = (uint64_t)sub_18914E4((uint64_t)&qword_26266C8, (long long *)__p, v4, (char *)qword_26266B8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_19C2584();
  sub_5E5C(__p, "en_US");
  LODWORD(v4[0]) = 0;
  sub_5E5C((void *)v4 + 1, "en-US_US");
  int v5 = 0;
  sub_5E5C(v6, "en_AU");
  int v7 = 1;
  sub_5E5C(v8, "en-AU_AU");
  int v9 = 1;
  sub_5E5C(v10, "en_CA");
  int v11 = 2;
  sub_5E5C(v12, "en-CA_CA");
  int v13 = 2;
  sub_5E5C(v14, "en_GB");
  int v15 = 3;
  sub_5E5C(v16, "en-GB_GB");
  int v17 = 3;
  sub_5E5C(v18, "en_IE");
  int v19 = 4;
  sub_5E5C(v20, "en-IE_IE");
  int v21 = 4;
  sub_5E5C(v22, "en_NZ");
  int v23 = 4;
  sub_5E5C(v24, "en-NZ_NZ");
  int v25 = 4;
  sub_5E5C(v26, "en_ZA");
  int v27 = 4;
  sub_5E5C(v28, "en-ZA_ZA");
  int v29 = 4;
  sub_1898F60((uint64_t)&unk_26266E8, (unsigned __int8 *)__p, 14);
  uint64_t v0 = 56;
  do
  {
    if (*((char *)&__p[v0 - 1] - 1) < 0) {
      operator delete(__p[v0 - 4]);
    }
    v0 -= 4;
  }
  while (v0 * 8);
  sub_5E5C(__p, "US");
  LODWORD(v4[0]) = 1;
  sub_5E5C((void *)v4 + 1, "AU");
  int v5 = 2;
  sub_5E5C(v6, "CA");
  int v7 = 3;
  sub_5E5C(v8, "GB");
  int v9 = 4;
  sub_5E5C(v10, "IE");
  int v11 = 5;
  sub_5E5C(v12, "NZ");
  int v13 = 5;
  sub_5E5C(v14, "ZA");
  int v15 = 5;
  sub_5E5C(v16, "ZA");
  int v17 = 5;
  sub_5E5C(v18, "IN");
  int v19 = 7;
  sub_5E5C(v20, "DE");
  int v21 = 6;
  sub_5E5C(v22, "CH");
  int v23 = 6;
  sub_5E5C(v24, "NL");
  int v25 = 6;
  sub_5E5C(v26, "DK");
  int v27 = 6;
  sub_5E5C(v28, "NO");
  int v29 = 6;
  sub_5E5C(v30, "FI");
  int v31 = 6;
  sub_5E5C(v32, "SE");
  int v33 = 6;
  sub_5E5C(v34, "BE");
  int v35 = 6;
  sub_5E5C(v36, "AT");
  int v37 = 6;
  sub_5E5C(v38, "MX");
  int v39 = 6;
  sub_5E5C(v40, "AR");
  int v41 = 6;
  sub_5E5C(v42, "CL");
  int v43 = 6;
  sub_5E5C(v44, "BR");
  int v45 = 6;
  sub_5E5C(v46, "SK");
  int v47 = 6;
  sub_5E5C(v48, "TR");
  int v49 = 6;
  sub_5E5C(v50, "PL");
  int v51 = 6;
  sub_5E5C(v52, "HR");
  int v53 = 6;
  sub_5E5C(v54, "RO");
  int v55 = 6;
  sub_5E5C(v56, "HU");
  int v57 = 6;
  sub_5E5C(v58, "VN");
  int v59 = 6;
  sub_5E5C(v60, "GR");
  int v61 = 6;
  sub_18993EC((uint64_t)&unk_2626710, (unsigned __int8 *)__p, 30);
  uint64_t v1 = 120;
  do
  {
    if (*((char *)&__p[v1 - 1] - 1) < 0) {
      operator delete(__p[v1 - 4]);
    }
    v1 -= 4;
  }
  while (v1 * 8);
}

void sub_19CD6F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v19 = 960;
  while (1)
  {
    if (*(char *)(v17 + v19 - 9) < 0) {
      operator delete(*(void **)(v17 + v19 - 32));
    }
    v19 -= 32;
    if (!v19) {
      _Unwind_Resume(exception_object);
    }
  }
}

uint64_t sub_19CD8A4(_DWORD *a1, int a2, int a3, unsigned int a4)
{
  if (!*a1) {
    return 0xFFFFFFFFLL;
  }
  int v4 = a2 & ~(a2 >> 31);
  int v5 = *a1 - 1 >= a3 ? a3 : *a1 - 1;
  if (v4 > v5) {
    return 0xFFFFFFFFLL;
  }
  while (1)
  {
    int v8 = v5 + v4;
    if (v5 + v4 < 0 != __OFADD__(v5, v4)) {
      ++v8;
    }
    uint64_t v9 = (v8 >> 1);
    if (*(_DWORD *)sub_188C928((uint64_t)a1, v8 >> 1) == a4) {
      break;
    }
    if (*(_DWORD *)sub_188C928((uint64_t)a1, v9) >= a4) {
      int v5 = v9 - 1;
    }
    else {
      int v4 = v9 + 1;
    }
    if (v4 > v5) {
      return 0xFFFFFFFFLL;
    }
  }
  return v9;
}

uint64_t sub_19CD94C(void *a1, void *a2)
{
  sub_5E5C(&__p, "qu_data_local_store");
  char v3 = sub_1908254(a1, (unsigned __int8 *)&__p);
  int v4 = v3;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (v4) {
      goto LABEL_3;
    }
  }
  else if (v3)
  {
LABEL_3:
    int v5 = (void *)*((void *)v4 + 5);
    if (v5
    {
      char v6 = (std::__shared_weak_count *)*((void *)v4 + 6);
      if (v6) {
        atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      char v6 = 0;
    }
    int v7 = (uint64_t *)sub_638A44((uint64_t)v5);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    if (*v7 == v9)
    {
      if (!v6) {
        return 0;
      }
    }
    else
    {
      uint64_t v10 = a2 + 1;
      do
      {
        sub_5E5C(&__p, "category_trigger_");
        uint64_t v31 = sub_18E0618(v8, (std::string::size_type)&__p);
        uint64_t v32 = v11;
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(__p.__r_.__value_.__l.__data_);
          if (BYTE4(v32))
          {
LABEL_14:
            char v28 = 0;
            int v29 = 0;
            unint64_t v30 = 0;
            double v12 = (void *)*a2;
            if ((void *)*a2 != v10)
            {
              do
              {
                if (!BYTE4(v32)) {
                  sub_1907A2C();
                }
                int v13 = (int *)v12[11];
                int v14 = (int *)v12[12];
                if (v13 != v14)
                {
                  while (!sub_1E43098((int *)&v31, v13))
                  {
                    v13 += 3;
                    if (v13 == v14) {
                      goto LABEL_33;
                    }
                  }
                }
                unsigned int v15 = *((_DWORD *)v12 + 20);
                BOOL v16 = v15 > 7;
                int v17 = (1 << v15) & 0xE8;
                BOOL v18 = v16 || v17 == 0;
                if (!v18)
                {
                  sub_1ED0D1C((const void **)v12 + 4, &v33);
                  std::string __p = v33;
                  char v27 = 1;
                  uint64_t v19 = v29;
                  if ((unint64_t)v29 >= v30)
                  {
                    int v21 = sub_1D740(&v28, (uint64_t)&__p);
                  }
                  else
                  {
                    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                    {
                      sub_4200(v29, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
                    }
                    else
                    {
                      long long v20 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
                      *((void *)v29 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
                      *uint64_t v19 = v20;
                    }
                    int v21 = (char *)v19 + 24;
                  }
                  int v29 = v21;
                  if (v27 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                    operator delete(__p.__r_.__value_.__l.__data_);
                  }
                }
LABEL_33:
                long long v22 = (void *)v12[1];
                if (v22)
                {
                  do
                  {
                    int v23 = v22;
                    long long v22 = (void *)*v22;
                  }
                  while (v22);
                }
                else
                {
                  do
                  {
                    int v23 = (void *)v12[2];
                    BOOL v18 = *v23 == (void)v12;
                    double v12 = v23;
                  }
                  while (!v18);
                }
                double v12 = v23;
              }
              while (v23 != v10);
            }
            sub_1DCA148();
          }
        }
        else if (BYTE4(v11))
        {
          goto LABEL_14;
        }
        v8 += 48;
      }
      while (v8 != v9);
      if (!v6) {
        return 0;
      }
    }
    sub_20A69F0(v6);
    return 0;
  }
  return 0;
}

void sub_19CDE14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (v36) {
    sub_20A69F0(v36);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_19CDF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t **a4, int a5, uint64_t a6)
{
  int v53 = 0;
  int v54 = 0;
  int v55 = 0;
  uint64_t v10 = sub_1A5D644(a2, a5);
  uint64_t v11 = *(int **)v10;
  double v12 = *(int **)(v10 + 8);
  if (*(int **)v10 != v12)
  {
    do
    {
      if ((sub_19CF72C(v11, a3, a6) & 1) == 0)
      {
        int v13 = v54;
        if (v54 >= v55)
        {
          unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * (v54 - v53);
          unint64_t v17 = v16 + 1;
          if (v16 + 1 > 0x1555555555555555) {
            sub_2E00();
          }
          if (0x5555555555555556 * (v55 - v53) > v17) {
            unint64_t v17 = 0x5555555555555556 * (v55 - v53);
          }
          if (0xAAAAAAAAAAAAAAABLL * (v55 - v53) >= 0xAAAAAAAAAAAAAAALL) {
            unint64_t v18 = 0x1555555555555555;
          }
          else {
            unint64_t v18 = v17;
          }
          if (v18) {
            uint64_t v19 = (char *)sub_1956410((uint64_t)&v55, v18);
          }
          else {
            uint64_t v19 = 0;
          }
          long long v20 = &v19[4 * (v54 - v53)];
          uint64_t v21 = *(void *)v11;
          *((_DWORD *)v20 + 2) = v11[2];
          *(void *)long long v20 = v21;
          int v23 = v53;
          long long v22 = v54;
          int v24 = (unsigned int *)&v19[12 * v16];
          if (v54 != v53)
          {
            do
            {
              uint64_t v25 = *(void *)(v22 - 3);
              v22 -= 3;
              unsigned int v26 = v22[2];
              *(void *)(v24 - 3) = v25;
              v24 -= 3;
              v24[2] = v26;
            }
            while (v22 != v23);
            long long v22 = v53;
          }
          unsigned int v15 = (unsigned int *)(v20 + 12);
          int v53 = v24;
          int v54 = (unsigned int *)(v20 + 12);
          int v55 = (unsigned int *)&v19[12 * v18];
          if (v22) {
            operator delete(v22);
          }
        }
        else
        {
          uint64_t v14 = *(void *)v11;
          v54[2] = v11[2];
          *(void *)int v13 = v14;
          unsigned int v15 = v13 + 3;
        }
        int v54 = v15;
      }
      v11 += 3;
    }
    while (v11 != v12);
  }
  long long v50 = 0;
  int v51 = 0;
  uint64_t v52 = 0;
  char v28 = *(int **)(a1 + 56);
  char v27 = *(int **)(a1 + 64);
  if (v28 == v27)
  {
    uint64_t v31 = 0;
    goto LABEL_45;
  }
  do
  {
    sub_1B892F8(v28, &v53, (char **)__dst);
    int v29 = __dst[0];
    if (__dst[0] != __dst[1])
    {
      sub_19CF80C((char **)&v50, (uint64_t)v51, (uint64_t *)__dst[0], (long long *)__dst[1], ((char *)__dst[1] - (char *)__dst[0]) >> 4);
      int v29 = __dst[0];
    }
    if (v29)
    {
      __dst[1] = v29;
      operator delete(v29);
    }
    v28 += 20;
  }
  while (v28 != v27);
  uint64_t v31 = v50;
  unint64_t v30 = v51;
  if (v50 == v51)
  {
LABEL_45:
    long long v42 = 0u;
    long long v43 = 0u;
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  long long v42 = 0uLL;
  *(void *)&long long v43 = 0;
  DWORD2(v43) = 0;
  HIDWORD(v43) = a5;
  do
  {
    sub_18E0BA0(__p);
    unsigned int v32 = *(_DWORD *)(a2 + 16);
    unsigned int v33 = v31[3];
    if (SHIBYTE(v45) < 0)
    {
      sub_4200(__dst, __p[0], (unint64_t)__p[1]);
      unint64_t v48 = __PAIR64__(v33, v32);
      LODWORD(v49) = a5;
      if (SHIBYTE(v45) < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
      *(_OWORD *)__dst = *(_OWORD *)__p;
      uint64_t v47 = v45;
      unint64_t v48 = __PAIR64__(v33, v32);
      LODWORD(v49) = a5;
    }
    DWORD2(v43) += v31[3];
    uint64_t v34 = *((void *)&v42 + 1);
    if (*((void *)&v42 + 1) >= (unint64_t)v43)
    {
      uint64_t v36 = sub_19CFABC((uint64_t *)&v42, (long long *)__dst);
    }
    else
    {
      if (SHIBYTE(v47) < 0)
      {
        sub_4200(*((unsigned char **)&v42 + 1), __dst[0], (unint64_t)__dst[1]);
      }
      else
      {
        long long v35 = *(_OWORD *)__dst;
        *(void *)(*((void *)&v42 + 1) + 16) = v47;
        *(_OWORD *)uint64_t v34 = v35;
      }
      unint64_t v37 = v48;
      *(_DWORD *)(v34 + 32) = v49;
      *(void *)(v34 + 24) = v37;
      uint64_t v36 = v34 + 40;
    }
    *((void *)&v42 + 1) = v36;
    if (SHIBYTE(v47) < 0) {
      operator delete(__dst[0]);
    }
    v31 += 4;
  }
  while (v31 != v30);
  uint64_t v31 = v50;
  if (v50)
  {
LABEL_46:
    int v51 = v31;
    operator delete(v31);
  }
LABEL_47:
  if (v53)
  {
    int v54 = v53;
    operator delete(v53);
  }
  if ((void)v42 != *((void *)&v42 + 1))
  {
    LODWORD(__dst[0]) = a5;
    uint64_t v47 = 0;
    unint64_t v48 = 0;
    __dst[1] = 0;
    sub_19CFE34(&__dst[1], (long long *)v42, *((long long **)&v42 + 1), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*((void *)&v42 + 1) - v42) >> 3));
    uint64_t v49 = *((void *)&v43 + 1);
    sub_19D29E0(a4, (int *)__dst, (uint64_t)__dst);
    int v53 = (unsigned int *)&__dst[1];
    sub_19D0010((void ***)&v53);
  }
  uint64_t v38 = DWORD2(v43);
  __dst[0] = &v42;
  sub_19D0010((void ***)__dst);
  return v38;
}

void sub_19CE318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,char *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  *(void *)(v34 - 112) = v33;
  sub_19D0010((void ***)(v34 - 112));
  std::string __p = &a13;
  sub_19D0010((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_19CE3E4(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int *a4@<X3>, int a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v6 = a2[2];
  a6[1] = 0;
  a6[2] = 0;
  *a6 = 0;
  if (v6)
  {
    uint64_t v8 = a3;
    sub_1A5D3C4((uint64_t)v65, (_OWORD *)(a3 + 128), *a4);
    uint64_t v11 = (void *)*a2;
    int v53 = a2 + 1;
    if ((void *)*a2 != a2 + 1)
    {
      char v56 = a4;
      uint64_t v58 = a1;
      do
      {
        if (*((_DWORD *)v11 + 20) == a5)
        {
          double v12 = (uint64_t **)sub_1A5D644((uint64_t)v65, 0);
          int v13 = *v12;
          if (v12[1] == *v12) {
            sub_66748();
          }
          uint64_t v14 = *v13;
          int v80 = *((_DWORD *)v13 + 2);
          uint64_t v79 = v14;
          v78[0] = 0;
          v78[1] = 0;
          long long v77 = v78;
          uint64_t v16 = v11[14];
          uint64_t v15 = v11[15];
          if (v16 == v15)
          {
            int v17 = 0;
          }
          else
          {
            int v17 = 0;
            do
            {
              int v18 = sub_E9A9D4(v16);
              sub_637D84(v16);
              v17 += v18;
              v16 += 80;
            }
            while (v16 != v15);
          }
          __str = (std::string *)(v11 + 7);
          if (v56[80] <= v17
            && (uint64_t v19 = (void *)nullsub_1(a1), 0x8E38E38E38E38E39 * ((uint64_t)(v19[1] - *v19) >> 3) >= v56[80]))
          {
            int v47 = v56[81];
            if (v47 < 0)
            {
              int v49 = 0;
            }
            else
            {
              int v48 = 0;
              int v49 = 0;
              do
              {
                v49 += sub_19CDF58((uint64_t)__str, (uint64_t)v65, v8, (uint64_t **)&v77, v48, a1);
                int v47 = v56[81];
                BOOL v51 = v48++ < v47;
              }
              while (v51);
            }
            for (int i = v47 + 1; ; ++i)
            {
              BOOL v51 = v49 < v56[85] && i < v56[82];
              if (!v51) {
                break;
              }
              v49 += sub_19CDF58((uint64_t)__str, (uint64_t)v65, v8, (uint64_t **)&v77, i, a1);
            }
          }
          else
          {
            uint64_t v20 = v11[14];
            uint64_t v57 = v11[15];
            long long v60 = v11;
            if (v20 != v57)
            {
              do
              {
                uint64_t v59 = v20;
                sub_1B896AC(v20, (void **)&v75);
                uint64_t v21 = v75;
                long long v22 = v76;
                if (v75 != v76)
                {
                  do
                  {
                    if ((sub_19CF72C(v21, v8, a1) & 1) == 0)
                    {
                      unint64_t v23 = sub_19B5578(v21, (int *)&v79);
                      sub_18E0BA0(__p);
                      unint64_t v24 = HIDWORD(v23);
                      int v26 = v21[2];
                      int v25 = v21[3];
                      if (SHIBYTE(v68) < 0)
                      {
                        sub_4200(&__dst, __p[0], (unint64_t)__p[1]);
                        p_dst = (long long *)__PAIR64__(v25, v26);
                        int v85 = v24;
                        if (SHIBYTE(v68) < 0) {
                          operator delete(__p[0]);
                        }
                      }
                      else
                      {
                        long long __dst = *(_OWORD *)__p;
                        uint64_t v83 = v68;
                        p_dst = (long long *)__PAIR64__(v25, v26);
                        int v85 = v24;
                      }
                      char v27 = v78[0];
                      if (!v78[0]) {
                        goto LABEL_30;
                      }
                      char v28 = v78;
                      do
                      {
                        int v29 = v27;
                        unint64_t v30 = v28;
                        int v31 = *((_DWORD *)v27 + 8);
                        unsigned int v32 = (char **)(v27 + 8);
                        if (v31 >= (int)v24)
                        {
                          unsigned int v32 = (char **)v29;
                          char v28 = (char **)v29;
                        }
                        char v27 = *v32;
                      }
                      while (v27);
                      if (v28 != v78 && (v31 >= (int)v24 ? (uint64_t v33 = v29) : (uint64_t v33 = v30), v33[8] <= (int)v24))
                      {
                        uint64_t v34 = v8;
                        if (v31 >= (int)v24) {
                          long long v35 = (uint64_t *)(v29 + 40);
                        }
                        else {
                          long long v35 = (uint64_t *)(v30 + 5);
                        }
                        if (v31 >= (int)v24) {
                          uint64_t v36 = v29;
                        }
                        else {
                          uint64_t v36 = v30;
                        }
                        unint64_t v37 = v36[6];
                        if (v37 >= v36[7])
                        {
                          uint64_t v38 = sub_19CFABC(v35, &__dst);
                        }
                        else
                        {
                          sub_19CFA44(v35, &__dst);
                          uint64_t v38 = v37 + 40;
                        }
                        uint64_t v8 = v34;
                        v36[6] = v38;
                        if (v31 >= (int)v24) {
                          int v39 = v29;
                        }
                        else {
                          int v39 = v30;
                        }
                        v39[16] += HIDWORD(p_dst);
                        a1 = v58;
                      }
                      else
                      {
LABEL_30:
                        long long v72 = 0;
                        uint64_t v73 = 0;
                        char v71 = 0;
                        HIDWORD(v74) = v24;
                        LODWORD(v74) = v21[3];
                        long long v72 = (long long *)sub_19CFABC((uint64_t *)&v71, &__dst);
                        LODWORD(__p[0]) = v24;
                        uint64_t v68 = 0;
                        uint64_t v69 = 0;
                        __p[1] = 0;
                        sub_19CFE34(&__p[1], v71, v72, 0xCCCCCCCCCCCCCCCDLL * (((char *)v72 - (char *)v71) >> 3));
                        uint64_t v70 = v74;
                        sub_19D29E0((uint64_t **)&v77, (int *)__p, (uint64_t)__p);
                        uint64_t v81 = &__p[1];
                        sub_19D0010(&v81);
                        __p[0] = &v71;
                        sub_19D0010((void ***)__p);
                      }
                      uint64_t v11 = v60;
                      if (SHIBYTE(v83) < 0) {
                        operator delete((void *)__dst);
                      }
                    }
                    v21 += 4;
                  }
                  while (v21 != v22);
                  uint64_t v21 = v75;
                }
                if (v21)
                {
                  char v76 = v21;
                  operator delete(v21);
                }
                uint64_t v20 = v59 + 80;
              }
              while (v59 + 80 != v57);
            }
          }
          int v40 = v56[85];
          *(void *)&long long __dst = off_24E7EF8;
          *((void *)&__dst + 1) = sub_1EC565C;
          p_dst = &__dst;
          sub_1DEAFC4(&v77, v40, (uint64_t)v56, (uint64_t)&__dst, (uint64_t)__p);
          sub_19D019C(&__dst);
          memset(&v61, 0, sizeof(v61));
          char v63 = 0;
          uint64_t v64 = 0;
          long long v62 = &v63;
          std::string::operator=(&v61, __str);
          sub_19D0220((uint64_t **)&v62, (void *)__p[0], &__p[1]);
          sub_1895F48((uint64_t)__p, (char *)__p[1]);
          sub_19D04F8((uint64_t)&v77, v78[0]);
          if (v64)
          {
            unint64_t v41 = a6[1];
            if (v41 >= a6[2])
            {
              uint64_t v42 = sub_19D0558(a6, (long long *)&v61);
              long long v43 = a6;
            }
            else
            {
              sub_19D0660((void *)a6[1], (long long *)&v61);
              uint64_t v42 = v41 + 48;
              long long v43 = a6;
              a6[1] = v41 + 48;
            }
            v43[1] = v42;
          }
          sub_1895F48((uint64_t)&v62, v63);
          if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v61.__r_.__value_.__l.__data_);
          }
        }
        int v44 = (void *)v11[1];
        if (v44)
        {
          do
          {
            uint64_t v45 = v44;
            int v44 = (void *)*v44;
          }
          while (v44);
        }
        else
        {
          do
          {
            uint64_t v45 = (void *)v11[2];
            BOOL v46 = *v45 == (void)v11;
            uint64_t v11 = v45;
          }
          while (!v46);
        }
        uint64_t v11 = v45;
      }
      while (v45 != v53);
    }
    sub_19D07E4((uint64_t)v66, v66[1]);
  }
}

void sub_19CE9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void **a27)
{
  a27 = a10;
  sub_1896000(&a27);
  _Unwind_Resume(a1);
}

uint64_t sub_19CEAD8(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_19CEB18(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  memset(v43, 0, sizeof(v43));
  long long v42 = 0u;
  if (*a5 == a5[1]
    || (uint64_t v11 = (void *)nullsub_1(a1), *v11 == v11[1])
    || !(*(unsigned __int8 *)(a4 + 333) | *(unsigned __int8 *)(a4 + 332)))
  {
    *(_OWORD *)a6 = v42;
    *(void *)(a6 + 16) = *(void *)&v43[0];
    long long v42 = 0uLL;
    *(_OWORD *)(a6 + 24) = *(_OWORD *)((char *)v43 + 8);
    *(void *)(a6 + 40) = *((void *)&v43[1] + 1);
    memset(v43, 0, sizeof(v43));
    goto LABEL_89;
  }
  int v40 = 0;
  uint64_t v41 = 0;
  int v39 = (uint64_t *)&v40;
  uint64_t v12 = *a5;
  uint64_t v13 = a5[1];
  if (v13 == *a5)
  {
LABEL_99:
    *(_OWORD *)(a6 + 16) = 0u;
    *(_OWORD *)(a6 + 32) = 0u;
    *(_OWORD *)a6 = 0u;
    goto LABEL_100;
  }
  long long v35 = a2;
  uint64_t v36 = a6;
  unint64_t v14 = 0;
  uint64_t v37 = a4;
  do
  {
    uint64_t v15 = (int *)(v12 + 160 * v14);
    int v16 = *v15;
    int v17 = *(unsigned __int8 *)(a4 + 332);
    BOOL v18 = *v15 != 3 || v17 == 0;
    if (!v18)
    {
      int v26 = *(int **)(v12 + 160 * v14 + 8);
      if (v26[74] != 2) {
        goto LABEL_101;
      }
      sub_19D0D5C((uint64_t)&v53, v26);
      if (BYTE4(v53))
      {
        uint64_t v45 = 0;
        uint64_t v46 = 0;
        int v44 = (uint64_t *)&v45;
        v47.__r_.__value_.__r.__words[0] = (std::string::size_type)&v64;
        char v27 = sub_19D1748(&v44, &v64, (uint64_t)&unk_20F06E0, (long long **)&v47);
        sub_19D193C((char *)v27 + 56, 0, 0, 0);
      }
      else
      {
        sub_19D0910((uint64_t)&v53 + 8, a4, (uint64_t)&v44);
      }
      sub_19D1CA0((uint64_t)&v53);
      goto LABEL_43;
    }
    BOOL v19 = v16 != 5;
    BOOL v21 = v16 != 6 || v17 == 0;
    BOOL v22 = v16 != 7;
    if (!*(unsigned char *)(a4 + 333))
    {
      BOOL v19 = 1;
      BOOL v22 = 1;
    }
    BOOL v23 = !v19 || !v21;
    if (v23 || !v22)
    {
      switch(v16)
      {
        case 5:
          uint64_t v34 = *(void *)(v12 + 160 * v14 + 8);
          if (*(_DWORD *)(v34 + 296) != 4) {
LABEL_101:
          }
            sub_11388B8();
          sub_19D1D4C((uint64_t)&v53, v34);
          sub_19D0910((uint64_t)&v53 + 8, a4, (uint64_t)&v44);
          v47.__r_.__value_.__r.__words[0] = (std::string::size_type)v67;
          sub_18D522C((void ***)&v47);
          v47.__r_.__value_.__r.__words[0] = (std::string::size_type)v66;
          sub_18D522C((void ***)&v47);
          if (v65 < 0) {
            operator delete(__p);
          }
          v47.__r_.__value_.__r.__words[0] = (std::string::size_type)&v61;
          sub_1915C70((void ***)&v47);
          sub_19D1350((uint64_t)&v58, v59);
          if (v56 && v54)
          {
            int v55 = v54;
            operator delete(v54);
          }
          break;
        case 6:
          uint64_t v32 = *(void *)(v12 + 160 * v14 + 8);
          if (*(_DWORD *)(v32 + 296) != 5) {
            goto LABEL_101;
          }
          sub_19D1ECC((uint64_t)&v47, v32);
          long long v33 = *(_OWORD *)&v47.__r_.__value_.__r.__words[1];
          if (v47.__r_.__value_.__r.__words[2]) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(v47.__r_.__value_.__r.__words[2] + 8), 1uLL, memory_order_relaxed);
          }
          if (*(_DWORD *)(v33 + 296) != 2) {
            sub_11388B8();
          }
          sub_19D0D5C((uint64_t)&v53, (int *)v33);
          if (*((void *)&v33 + 1)) {
            sub_20A69F0(*((std::__shared_weak_count **)&v33 + 1));
          }
          sub_19D0910((uint64_t)&v53 + 8, a4, (uint64_t)&v44);
          sub_19D1CA0((uint64_t)&v53);
LABEL_75:
          *(void *)&long long v53 = &v52;
          sub_18D522C((void ***)&v53);
          *(void *)&long long v53 = &v51;
          sub_18D522C((void ***)&v53);
          if (SHIBYTE(v50) < 0) {
            operator delete(*((void **)&v49 + 1));
          }
          if ((void)v49) {
            sub_20A69F0((std::__shared_weak_count *)v49);
          }
          if (v47.__r_.__value_.__r.__words[2]) {
            sub_20A69F0((std::__shared_weak_count *)v47.__r_.__value_.__r.__words[2]);
          }
          break;
        case 7:
          uint64_t v24 = *(void *)(v12 + 160 * v14 + 8);
          if (*(_DWORD *)(v24 + 296) != 5) {
            goto LABEL_101;
          }
          sub_19D1ECC((uint64_t)&v47, v24);
          long long v25 = *(_OWORD *)&v47.__r_.__value_.__r.__words[1];
          if (v47.__r_.__value_.__r.__words[2]) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(v47.__r_.__value_.__r.__words[2] + 8), 1uLL, memory_order_relaxed);
          }
          if (*(_DWORD *)(v25 + 296) != 4) {
            sub_11388B8();
          }
          sub_19D1D4C((uint64_t)&v53, v25);
          if (*((void *)&v25 + 1)) {
            sub_20A69F0(*((std::__shared_weak_count **)&v25 + 1));
          }
          sub_19D0910((uint64_t)&v53 + 8, a4, (uint64_t)&v44);
          v68[0] = (void **)v67;
          sub_18D522C(v68);
          v68[0] = (void **)v66;
          sub_18D522C(v68);
          if (v65 < 0) {
            operator delete(__p);
          }
          v68[0] = (void **)&v61;
          sub_1915C70(v68);
          sub_19D1350((uint64_t)&v58, v59);
          if (v56 && v54)
          {
            int v55 = v54;
            operator delete(v54);
          }
          goto LABEL_75;
        default:
          uint64_t v45 = 0;
          uint64_t v46 = 0;
          int v44 = (uint64_t *)&v45;
          break;
      }
LABEL_43:
      char v28 = v44;
      if (v44 != (uint64_t *)&v45)
      {
        do
        {
          int v29 = sub_19081D4((uint64_t)&v39, (void **)v28 + 4);
          if (&v40 == (void **)v29 || *((_DWORD *)v29 + 20) != *v15)
          {
            memset(&v47, 0, sizeof(v47));
            long long v49 = 0u;
            long long v50 = 0u;
            long long v51 = 0u;
            int v48 = *v15;
            std::string::operator=(&v47, (const std::string *)(v28 + 4));
            if (v46) {
              sub_19D2008((uint64_t)&v49, *((uint64_t *)&v49 + 1), (char *)v28[7], (char *)v28[8], 0xAAAAAAAAAAAAAAABLL * ((v28[8] - v28[7]) >> 2));
            }
            sub_19D25E4((char *)&v53, (long long *)v28 + 2, (long long *)&v47);
            sub_19D2374(&v39, (void **)&v53, &v53);
            v68[0] = (void **)&v62;
            sub_19D2838(v68);
            if (v59)
            {
              long long v60 = v59;
              operator delete(v59);
            }
            if (v57 < 0) {
              operator delete(v55);
            }
            if (SHIBYTE(v54) < 0) {
              operator delete((void *)v53);
            }
            *(void *)&long long v53 = (char *)&v50 + 8;
            sub_19D2838((void ***)&v53);
            if ((void)v49)
            {
              *((void *)&v49 + 1) = v49;
              operator delete((void *)v49);
            }
            if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v47.__r_.__value_.__l.__data_);
            }
          }
          else
          {
            sub_19D2008((uint64_t)(v29 + 11), (uint64_t)v29[12], (char *)v28[7], (char *)v28[8], 0xAAAAAAAAAAAAAAABLL * ((v28[8] - v28[7]) >> 2));
          }
          unint64_t v30 = (uint64_t *)v28[1];
          if (v30)
          {
            do
            {
              int v31 = v30;
              unint64_t v30 = (uint64_t *)*v30;
            }
            while (v30);
          }
          else
          {
            do
            {
              int v31 = (uint64_t *)v28[2];
              BOOL v18 = *v31 == (void)v28;
              char v28 = v31;
            }
            while (!v18);
          }
          char v28 = v31;
        }
        while (v31 != (uint64_t *)&v45);
      }
      sub_19D28C0((uint64_t)&v44, v45);
      a4 = v37;
      uint64_t v12 = *a5;
      uint64_t v13 = a5[1];
    }
    ++v14;
  }
  while (0xCCCCCCCCCCCCCCCDLL * ((v13 - v12) >> 5) > v14);
  a6 = v36;
  if (!v41 || (sub_19CD94C(v35, &v39) & 1) == 0) {
    goto LABEL_99;
  }
  if (*(unsigned char *)(a4 + 332))
  {
    sub_19CE3E4(a1, &v39, a3, (int *)a4, 3, (uint64_t *)&v53);
    sub_19D291C((void **)v43 + 1);
    *(_OWORD *)((char *)v43 + 8) = v53;
    *((void *)&v43[1] + 1) = v54;
    int v54 = 0;
    long long v53 = 0uLL;
    v47.__r_.__value_.__r.__words[0] = (std::string::size_type)&v53;
    sub_1896000((void ***)&v47);
    if (*((void *)&v43[0] + 1) == *(void *)&v43[1])
    {
      sub_19CE3E4(a1, &v39, a3, (int *)a4, 6, (uint64_t *)&v53);
      sub_19D291C((void **)v43 + 1);
      *(_OWORD *)((char *)v43 + 8) = v53;
      *((void *)&v43[1] + 1) = v54;
      int v54 = 0;
      long long v53 = 0uLL;
      v47.__r_.__value_.__r.__words[0] = (std::string::size_type)&v53;
      sub_1896000((void ***)&v47);
    }
  }
  if (*(unsigned char *)(a4 + 333))
  {
    sub_19CE3E4(a1, &v39, a3, (int *)a4, 5, (uint64_t *)&v53);
    sub_19D291C((void **)&v42);
    long long v42 = v53;
    *(void *)&v43[0] = v54;
    int v54 = 0;
    long long v53 = 0uLL;
    v47.__r_.__value_.__r.__words[0] = (std::string::size_type)&v53;
    sub_1896000((void ***)&v47);
    if ((void)v42 == *((void *)&v42 + 1))
    {
      sub_19CE3E4(a1, &v39, a3, (int *)a4, 7, (uint64_t *)&v53);
      sub_19D291C((void **)&v42);
      long long v42 = v53;
      *(void *)&v43[0] = v54;
      int v54 = 0;
      long long v53 = 0uLL;
      v47.__r_.__value_.__r.__words[0] = (std::string::size_type)&v53;
      sub_1896000((void ***)&v47);
    }
  }
  *(_OWORD *)uint64_t v36 = v42;
  *(void *)(v36 + 16) = *(void *)&v43[0];
  long long v42 = 0uLL;
  *(_OWORD *)(v36 + 24) = *(_OWORD *)((char *)v43 + 8);
  *(void *)(v36 + 40) = *((void *)&v43[1] + 1);
  memset(v43, 0, sizeof(v43));
LABEL_100:
  sub_19D2984((uint64_t)&v39, v40);
LABEL_89:
  *(void *)&long long v53 = (char *)v43 + 8;
  sub_1896000((void ***)&v53);
  *(void *)&long long v53 = &v42;
  sub_1896000((void ***)&v53);
}

void sub_19CF320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,void *a25,uint64_t a26,void *a27)
{
}

const char *sub_19CF41C(const std::string *a1)
{
  std::string::size_type v2 = std::string::find(a1, 9, 0);
  if (v2 == -1) {
    return "";
  }
  if ((a1->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    char v3 = a1;
  }
  else {
    char v3 = (const std::string *)a1->__r_.__value_.__r.__words[0];
  }
  return &v3->__r_.__value_.__s.__data_[v2 + 1];
}

std::string::size_type sub_19CF484(std::string *a1, uint64_t *a2)
{
  std::string::size_type v3 = a1->__r_.__value_.__r.__words[0];
  unint64_t v4 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1->__r_.__value_.__l.__size_ - a1->__r_.__value_.__r.__words[0]) >> 4);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x333333333333333) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)&a1->__r_.__value_.__r.__words[2];
  unint64_t v8 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1->__r_.__value_.__r.__words[2] - v3) >> 4);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x199999999999999) {
    unint64_t v9 = 0x333333333333333;
  }
  else {
    unint64_t v9 = v5;
  }
  BOOL v18 = &a1->__r_.__value_.__s.__data_[16];
  if (v9) {
    uint64_t v10 = (char *)sub_1897994(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = &v10[80 * v4];
  v15[0] = v10;
  v15[1] = v11;
  int v16 = v11;
  int v17 = &v10[80 * v9];
  uint64_t v12 = *a2;
  *((_DWORD *)v11 + 2) = *((_DWORD *)a2 + 2);
  *(void *)uint64_t v11 = v12;
  sub_1223EC4(v11 + 16, a2 + 2);
  v16 += 80;
  sub_19CF59C(a1, v15);
  std::string::size_type size = a1->__r_.__value_.__l.__size_;
  sub_19CF6D8((uint64_t)v15);
  return size;
}

void sub_19CF588(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_19CF6D8((uint64_t)va);
  _Unwind_Resume(a1);
}

std::string *sub_19CF59C(std::string *result, void *a2)
{
  std::string::size_type v3 = (std::string::__raw *)result;
  std::string::size_type v5 = result->__r_.__value_.__r.__words[0];
  std::string::size_type size = result->__r_.__value_.__l.__size_;
  std::string::size_type v6 = a2[1];
  while (size != v5)
  {
    uint64_t v7 = *(void *)(size - 80);
    size -= 80;
    int v8 = *(_DWORD *)(size + 8);
    *(void *)(v6 - 80) = v7;
    v6 -= 80;
    *(_DWORD *)(v6 + 8) = v8;
    uint64_t result = sub_19CF638((std::string *)(v6 + 16), size + 16);
  }
  a2[1] = v6;
  std::string::size_type v9 = v3->__words[0];
  v3->__words[0] = v6;
  a2[1] = v9;
  std::string::size_type v10 = v3->__words[1];
  v3->__words[1] = a2[2];
  a2[2] = v10;
  std::string::size_type v11 = v3->__words[2];
  v3->__words[2] = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return result;
}

std::string *sub_19CF638(std::string *a1, uint64_t a2)
{
  sub_1223D34((uint64_t)a1, 0, 0);
  if (a1 != (std::string *)a2)
  {
    std::string::size_type size = a1->__r_.__value_.__l.__size_;
    if ((size & 2) != 0)
    {
      std::string::size_type v5 = 0;
    }
    else
    {
      std::string::size_type v5 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        std::string::size_type v5 = (void *)*v5;
      }
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if ((v6 & 2) != 0)
    {
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
    }
    if (v5 == v7) {
      sub_1224788((uint64_t)a1, a2);
    }
    else {
      sub_122471C(a1, a2);
    }
  }
  return a1;
}

uint64_t sub_19CF6D8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 80;
    sub_1223F48((void *)(i - 64));
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_19CF72C(int *a1, uint64_t a2, uint64_t a3)
{
  sub_18E0BA0(__p);
  BOOL v6 = sub_1B2A5A8(a3, __p);
  BOOL v7 = v6;
  if ((v11 & 0x80000000) == 0)
  {
    if (v6) {
      goto LABEL_3;
    }
    return 1;
  }
  operator delete(__p[0]);
  if (!v7) {
    return 1;
  }
LABEL_3:
  uint64_t result = 0;
  if (*(unsigned char *)(a2 + 147))
  {
    if (*(unsigned char *)(a2 + 88))
    {
      sub_1E432F8(a1, (uint64_t)__p);
      BOOL v9 = sub_1C0E4B0((double *)__p, (double *)a2);
      sub_15B1678(__p);
      return !v9;
    }
  }
  return result;
}

void sub_19CF7E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

char *sub_19CF80C(char **a1, uint64_t a2, uint64_t *a3, long long *a4, uint64_t a5)
{
  std::string::size_type v5 = *a1;
  uint64_t v6 = a2 - (void)*a1;
  BOOL v7 = &(*a1)[v6 & 0xFFFFFFFFFFFFFFF0];
  if (a5 < 1) {
    return v7;
  }
  BOOL v9 = a3;
  uint64_t v13 = a1[2];
  uint64_t v11 = (uint64_t)(a1 + 2);
  uint64_t v12 = v13;
  unint64_t v14 = *(void *)(v11 - 8);
  if (a5 <= (uint64_t)&v13[-v14] >> 4)
  {
    uint64_t v20 = (uint64_t)(v14 - (void)v7) >> 4;
    if (v20 >= a5)
    {
      BOOL v21 = (long long *)&a3[2 * a5];
      BOOL v22 = *(char **)(v11 - 8);
    }
    else
    {
      BOOL v21 = (long long *)&a3[2 * v20];
      BOOL v22 = *(char **)(v11 - 8);
      if (v21 != a4)
      {
        BOOL v23 = v21;
        uint64_t v24 = *(_OWORD **)(v11 - 8);
        do
        {
          long long v25 = *v23++;
          *v24++ = v25;
          v22 += 16;
        }
        while (v23 != a4);
      }
      a1[1] = v22;
      if ((uint64_t)(v14 - (void)v7) < 1) {
        return v7;
      }
    }
    int v26 = &v7[16 * a5];
    char v27 = (long long *)&v22[-16 * a5];
    char v28 = v22;
    if ((unint64_t)v27 < v14)
    {
      char v28 = v22;
      do
      {
        long long v29 = *v27++;
        *(_OWORD *)char v28 = v29;
        v28 += 16;
      }
      while ((unint64_t)v27 < v14);
    }
    a1[1] = v28;
    if (v22 != v26)
    {
      unint64_t v30 = v22 - 4;
      uint64_t v31 = 16 * ((v22 - v26) >> 4);
      do
      {
        uint64_t v32 = *(void *)&v7[v31 - 16];
        *((_DWORD *)v30 - 1) = *(_DWORD *)&v7[v31 - 8];
        *(void *)(v30 - 12) = v32;
        *(_DWORD *)unint64_t v30 = *(_DWORD *)&v7[v31 - 4];
        v30 -= 16;
        v31 -= 16;
      }
      while (v31);
    }
    if (v21 != (long long *)a3)
    {
      long long v33 = v7;
      do
      {
        uint64_t v34 = *v9;
        *((_DWORD *)v33 + 2) = *((_DWORD *)v9 + 2);
        *(void *)long long v33 = v34;
        *((_DWORD *)v33 + 3) = *((_DWORD *)v9 + 3);
        v9 += 2;
        v33 += 16;
      }
      while (v9 != (uint64_t *)v21);
    }
    return v7;
  }
  unint64_t v15 = a5 + ((uint64_t)(v14 - (void)v5) >> 4);
  if (v15 >> 60) {
    sub_2E00();
  }
  uint64_t v16 = v6 >> 4;
  uint64_t v17 = v12 - v5;
  if (v17 >> 3 > v15) {
    unint64_t v15 = v17 >> 3;
  }
  if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF0) {
    unint64_t v18 = 0xFFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v18 = v15;
  }
  if (v18) {
    BOOL v19 = (char *)sub_1121C00(v11, v18);
  }
  else {
    BOOL v19 = 0;
  }
  long long v35 = &v19[16 * v16];
  uint64_t v36 = &v35[16 * a5];
  uint64_t v37 = 16 * a5;
  uint64_t v38 = v35;
  do
  {
    long long v39 = *(_OWORD *)v9;
    v9 += 2;
    *(_OWORD *)uint64_t v38 = v39;
    v38 += 16;
    v37 -= 16;
  }
  while (v37);
  int v40 = *a1;
  uint64_t v41 = v35;
  if (*a1 != v7)
  {
    long long v42 = v7;
    long long v43 = v35;
    do
    {
      uint64_t v41 = v43 - 16;
      *((_OWORD *)v43 - 1) = *((_OWORD *)v42 - 1);
      v42 -= 16;
      v43 -= 16;
    }
    while (v42 != v40);
  }
  int v44 = &v19[16 * v18];
  for (uint64_t i = a1[1]; v7 != i; v36 += 16)
  {
    long long v46 = *(_OWORD *)v7;
    v7 += 16;
    *(_OWORD *)uint64_t v36 = v46;
  }
  std::string v47 = *a1;
  *a1 = v41;
  a1[1] = v36;
  a1[2] = v44;
  if (v47) {
    operator delete(v47);
  }
  return v35;
}

void *sub_19CFA44(void *result, long long *a2)
{
  uint64_t v3 = result;
  uint64_t v4 = result[1];
  if (*((char *)a2 + 23) < 0)
  {
    uint64_t result = sub_4200((unsigned char *)result[1], *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *(void *)(v4 + 16) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v4 = v5;
  }
  uint64_t v6 = *((void *)a2 + 3);
  *(_DWORD *)(v4 + 32) = *((_DWORD *)a2 + 8);
  *(void *)(v4 + 24) = v6;
  v3[1] = v4 + 40;
  return result;
}

void sub_19CFAB4(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_19CFABC(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x666666666666666) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xCCCCCCCCCCCCCCCDLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x333333333333333) {
    unint64_t v9 = 0x666666666666666;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v20 = a1 + 2;
  if (v9) {
    std::string::size_type v10 = (char *)sub_19972A8(v7, v9);
  }
  else {
    std::string::size_type v10 = 0;
  }
  uint64_t v11 = &v10[40 * v4];
  v17[0] = v10;
  v17[1] = v11;
  unint64_t v18 = v11;
  BOOL v19 = &v10[40 * v9];
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(v11, *(void **)a2, *((void *)a2 + 1));
    uint64_t v11 = v18;
  }
  else
  {
    long long v12 = *a2;
    *((void *)v11 + 2) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v11 = v12;
  }
  uint64_t v13 = &v10[40 * v4];
  uint64_t v14 = *((void *)a2 + 3);
  *((_DWORD *)v13 + 8) = *((_DWORD *)a2 + 8);
  *((void *)v13 + 3) = v14;
  unint64_t v18 = v11 + 40;
  sub_19CFBF8(a1, v17);
  uint64_t v15 = a1[1];
  sub_19CFDA4((uint64_t)v17);
  return v15;
}

void sub_19CFBE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_19CFDA4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_19CFBF8(uint64_t *a1, void *a2)
{
  uint64_t result = sub_19CFC70((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_19CFC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    do
    {
      long long v8 = *(_OWORD *)(a3 - 40);
      *(void *)(v7 - 24) = *(void *)(a3 - 24);
      *(_OWORD *)(v7 - 40) = v8;
      *(void *)(a3 - 32) = 0;
      *(void *)(a3 - 24) = 0;
      *(void *)(a3 - 40) = 0;
      uint64_t v9 = *(void *)(a3 - 16);
      *(_DWORD *)(v7 - 8) = *(_DWORD *)(a3 - 8);
      *(void *)(v7 - 16) = v9;
      uint64_t v7 = *((void *)&v15 + 1) - 40;
      *((void *)&v15 + 1) -= 40;
      a3 -= 40;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  sub_19CFD24((uint64_t)v12);
  return v10;
}

uint64_t sub_19CFD24(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_19CFD5C(a1);
  }
  return a1;
}

void sub_19CFD5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    v1 += 40;
  }
}

uint64_t sub_19CFDA4(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_19CFDDC(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      uint64_t v5 = v2 - 5;
      *(void *)(a1 + 16) = v2 - 5;
      if (*((char *)v2 - 17) < 0)
      {
        operator delete(*v5);
        uint64_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

void *sub_19CFE34(void *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_19976B4(result, a4);
    uint64_t result = sub_19CFEBC((uint64_t)(v6 + 2), a2, a3, (void *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_19CFE9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_19D0010(&a9);
  _Unwind_Resume(a1);
}

void *sub_19CFEBC(uint64_t a1, long long *a2, long long *a3, void *__dst)
{
  unint64_t v4 = __dst;
  char v13 = __dst;
  long long v14 = __dst;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  char v12 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_4200(v4, *(void **)v6, *((void *)v6 + 1));
        long long v8 = v14;
      }
      else
      {
        long long v7 = *v6;
        long long v4[2] = *((void *)v6 + 2);
        *(_OWORD *)unint64_t v4 = v7;
        long long v8 = v4;
      }
      uint64_t v9 = *((void *)v6 + 3);
      *((_DWORD *)v4 + 8) = *((_DWORD *)v6 + 8);
      uint64_t v4[3] = v9;
      uint64_t v6 = (long long *)((char *)v6 + 40);
      unint64_t v4 = v8 + 5;
      long long v14 = v8 + 5;
    }
    while (v6 != a3);
  }
  char v12 = 1;
  sub_19CFF90((uint64_t)v11);
  return v4;
}

void sub_19CFF7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_19CFF90(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_19CFFC8(a1);
  }
  return a1;
}

void sub_19CFFC8(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 - 17) < 0) {
      operator delete(*(void **)(v1 - 40));
    }
    v1 -= 40;
  }
}

void sub_19D0010(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_19D0064((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_19D0064(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 40)
  {
    if (*(char *)(i - 17) < 0) {
      operator delete(*(void **)(i - 40));
    }
  }
  a1[1] = v2;
}

void sub_19D00B8()
{
}

void *sub_19D00CC(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_24E7EF8;
  result[1] = v3;
  return result;
}

uint64_t sub_19D0114(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_24E7EF8;
  a2[1] = v2;
  return result;
}

uint64_t sub_19D0140(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, uint64_t))(a1 + 8))(*a2, a3);
}

uint64_t sub_19D0150(uint64_t a1, uint64_t a2)
{
  if (sub_18B0CF0(a2, (uint64_t)&off_24E7F78)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_19D0190()
{
  return &off_24E7F78;
}

void *sub_19D019C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t **sub_19D0220(uint64_t **result, void *a2, void *a3)
{
  uint64_t v5 = result;
  if (result[2])
  {
    uint64_t v6 = *result;
    long long v7 = result[1];
    *uint64_t result = (uint64_t *)(result + 1);
    v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1]) {
      long long v8 = (uint64_t *)v6[1];
    }
    else {
      long long v8 = v6;
    }
    long long v15 = result;
    uint64_t v16 = v8;
    uint64_t v17 = v8;
    if (v8)
    {
      uint64_t v16 = sub_18947B4((uint64_t)v8);
      if (a2 != a3)
      {
        uint64_t v9 = a2;
        do
        {
          std::string::operator=((std::string *)(v8 + 4), (const std::string *)(v9 + 4));
          *((_DWORD *)v8 + 14) = *((_DWORD *)v9 + 14);
          uint64_t v10 = (uint64_t **)sub_19D03AC((uint64_t)v5, &v18, v17 + 4);
          sub_11220BC(v5, v18, v10, v17);
          uint64_t v17 = v16;
          if (v16) {
            uint64_t v16 = sub_18947B4((uint64_t)v16);
          }
          uint64_t v11 = (void *)v9[1];
          if (v11)
          {
            do
            {
              a2 = v11;
              uint64_t v11 = (void *)*v11;
            }
            while (v11);
          }
          else
          {
            do
            {
              a2 = (void *)v9[2];
              BOOL v12 = *a2 == (void)v9;
              uint64_t v9 = a2;
            }
            while (!v12);
          }
          long long v8 = v17;
          if (v17) {
            BOOL v12 = a2 == a3;
          }
          else {
            BOOL v12 = 1;
          }
          uint64_t v9 = a2;
        }
        while (!v12);
      }
    }
    uint64_t result = (uint64_t **)sub_19D0424((uint64_t)&v15);
  }
  if (a2 != a3)
  {
    do
    {
      uint64_t result = (uint64_t **)sub_19D047C(v5, (uint64_t)(a2 + 4));
      char v13 = (void *)a2[1];
      if (v13)
      {
        do
        {
          long long v14 = v13;
          char v13 = (void *)*v13;
        }
        while (v13);
      }
      else
      {
        do
        {
          long long v14 = (void *)a2[2];
          BOOL v12 = *v14 == (void)a2;
          a2 = v14;
        }
        while (!v12);
      }
      a2 = v14;
    }
    while (v14 != a3);
  }
  return result;
}

void sub_19D0398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_19D03AC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v5 = (void *)v4;
        if ((sub_1122114(a3, (void **)(v4 + 32)) & 0x80) == 0) {
          break;
        }
        uint64_t v4 = *v5;
        uint64_t result = v5;
        if (!*v5) {
          goto LABEL_8;
        }
      }
      uint64_t v4 = v5[1];
    }
    while (v4);
    uint64_t result = v5 + 1;
  }
  else
  {
    uint64_t result = (void *)(a1 + 8);
  }
LABEL_8:
  *a2 = v5;
  return result;
}

uint64_t sub_19D0424(uint64_t a1)
{
  sub_1895F48(*(void *)a1, *(char **)(a1 + 16));
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      do
      {
        uint64_t v2 = v3;
        uint64_t v3 = *(void *)(v3 + 16);
      }
      while (v3);
      *(void *)(a1 + 8) = v2;
    }
    sub_1895F48(*(void *)a1, (char *)v2);
  }
  return a1;
}

uint64_t *sub_19D047C(uint64_t **a1, uint64_t a2)
{
  sub_1895E40((uint64_t)a1, a2, (uint64_t)&v6);
  uint64_t v3 = (uint64_t **)sub_19D03AC((uint64_t)a1, &v5, v6 + 4);
  sub_11220BC(a1, v5, v3, v6);
  return v6;
}

void sub_19D04D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, uint64_t a11)
{
  if (__p) {
    sub_1895EE8((uint64_t)&a11, __p);
  }
  _Unwind_Resume(exception_object);
}

void sub_19D04F8(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_19D04F8(a1, *(void *)a2);
    sub_19D04F8(a1, *((void *)a2 + 1));
    uint64_t v4 = (void **)(a2 + 40);
    sub_19D0010(&v4);
    operator delete(a2);
  }
}

uint64_t sub_19D0558(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 4);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x555555555555555) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 4);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x2AAAAAAAAAAAAAALL) {
    unint64_t v9 = 0x555555555555555;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_18959FC(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  char v13 = v10;
  long long v14 = &v10[48 * v4];
  uint64_t v16 = &v10[48 * v9];
  sub_19D0660(v14, a2);
  long long v15 = v14 + 48;
  sub_19D06D8(a1, &v13);
  uint64_t v11 = a1[1];
  sub_19D0794((uint64_t)&v13);
  return v11;
}

void sub_19D064C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_19D0794((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_19D0660(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v4;
  }
  sub_1895B40(__dst + 3, (uint64_t)a2 + 24);
  return __dst;
}

void sub_19D06BC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_19D06D8(uint64_t *result, void *a2)
{
  uint64_t v3 = *result;
  uint64_t v2 = result[1];
  uint64_t v4 = a2[1];
  if (v2 != *result)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = v4 + v5;
      uint64_t v7 = v2 + v5;
      long long v8 = *(_OWORD *)(v2 + v5 - 48);
      *(void *)(v6 - 32) = *(void *)(v2 + v5 - 32);
      *(_OWORD *)(v6 - 48) = v8;
      *(void *)(v7 - 40) = 0;
      *(void *)(v7 - 32) = 0;
      *(void *)(v7 - 48) = 0;
      *(void *)(v6 - 24) = *(void *)(v2 + v5 - 24);
      unint64_t v9 = (uint64_t *)(v2 + v5 - 16);
      uint64_t v10 = *v9;
      *(void *)(v4 + v5 - 16) = *v9;
      uint64_t v11 = v4 + v5 - 16;
      uint64_t v12 = *(void *)(v2 + v5 - 8);
      *(void *)(v6 - 8) = v12;
      if (v12)
      {
        *(void *)(v10 + 16) = v11;
        *(void *)(v7 - 24) = v9;
        *unint64_t v9 = 0;
        *(void *)(v2 + v5 - 8) = 0;
      }
      else
      {
        *(void *)(v6 - 24) = v11;
      }
      v5 -= 48;
    }
    while (v2 + v5 != v3);
    v4 += v5;
  }
  a2[1] = v4;
  uint64_t v13 = *result;
  *uint64_t result = v4;
  a2[1] = v13;
  uint64_t v14 = result[1];
  result[1] = a2[2];
  a2[2] = v14;
  uint64_t v15 = result[2];
  result[2] = a2[3];
  a2[3] = v15;
  *a2 = a2[1];
  return result;
}

uint64_t sub_19D0794(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 48;
    sub_1895FAC(i - 48);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_19D07E4(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_19D07E4(a1, *a2);
    sub_19D07E4(a1, a2[1]);
    uint64_t v4 = (void *)a2[5];
    if (v4)
    {
      a2[6] = v4;
      operator delete(v4);
    }
    operator delete(a2);
  }
}

uint64_t sub_19D0848(uint64_t a1)
{
  uint64_t v4 = (void **)(a1 + 80);
  sub_19D2838(&v4);
  uint64_t v2 = *(void **)(a1 + 56);
  if (v2)
  {
    *(void *)(a1 + 64) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_19D08B4(uint64_t a1)
{
  uint64_t v4 = (void **)(a1 + 56);
  sub_19D2838(&v4);
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2)
  {
    *(void *)(a1 + 40) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_19D0910(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 8) = 0;
  uint64_t v6 = (void **)(a3 + 8);
  *(void *)(a3 + 16) = 0;
  *(void *)a3 = a3 + 8;
  if (*(unsigned char *)(a1 + 32))
  {
    sub_5E5C(__p, "category_trigger_");
    uint64_t v7 = sub_18E0618(a1, (std::string::size_type)__p);
    uint64_t v45 = v8;
    unsigned __int8 v9 = v7;
    unint64_t v10 = v7 & 0xFFFFFFFFFFFFFF00;
    if (v47 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v11 = v9;
  }
  else
  {
    unint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v45 = 0;
  }
  uint64_t v12 = (*(void *)(a1 + 72) - *(void *)(a1 + 64)) >> 5;
  int v13 = *(_DWORD *)(a2 + 336);
  if (v13 >= (int)v12) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v13;
  }
  if ((int)v14 >= 1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = v45 & 0xFF00000000;
    unint64_t v17 = v10 | v11;
    do
    {
      uint64_t v18 = (void **)(*(void *)(a1 + 64) + 32 * v15);
      BOOL v19 = sub_19081D4(a3, v18);
      uint64_t v20 = v19;
      if (v6 == v19)
      {
        long long v50 = 0;
        long long v51 = 0;
        uint64_t v52 = 0;
        if (v16)
        {
          long long v25 = sub_1956410((uint64_t)&v52, 1uLL);
          *(void *)long long v25 = v17;
          v25[2] = v45;
          char v28 = v50;
          char v27 = v51;
          long long v29 = v25;
          if (v51 != v50)
          {
            do
            {
              uint64_t v30 = *(void *)(v27 - 3);
              v27 -= 3;
              int v31 = v27[2];
              *(void *)(v29 - 3) = v30;
              v29 -= 3;
              v29[2] = v31;
            }
            while (v27 != v28);
            char v27 = v50;
          }
          uint64_t v32 = (char *)(v25 + 3);
          long long v50 = v29;
          long long v51 = v25 + 3;
          uint64_t v52 = (char *)&v25[3 * v26];
          if (v27) {
            operator delete(v27);
          }
          long long v51 = v32;
        }
        sub_19D1B8C(__p, (long long *)v18, (uint64_t)&v50);
        sub_19D1ABC((uint64_t **)a3, __p, (uint64_t)__p);
        if (v48)
        {
          long long v49 = v48;
          operator delete(v48);
        }
        if (v47 < 0) {
          operator delete(__p[0]);
        }
        if (v50)
        {
          long long v51 = v50;
          operator delete(v50);
        }
      }
      else if (v16)
      {
        uint64_t v21 = (uint64_t)(v19 + 9);
        BOOL v22 = (char *)v20[9];
        BOOL v23 = (char *)v20[8];
        if (v23 >= v22)
        {
          long long v33 = v20[7];
          unint64_t v34 = 0xAAAAAAAAAAAAAAABLL * ((v23 - v33) >> 2);
          unint64_t v35 = v34 + 1;
          if (v34 + 1 > 0x1555555555555555) {
            sub_2E00();
          }
          unint64_t v36 = 0xAAAAAAAAAAAAAAABLL * ((v22 - v33) >> 2);
          if (2 * v36 > v35) {
            unint64_t v35 = 2 * v36;
          }
          if (v36 >= 0xAAAAAAAAAAAAAAALL) {
            unint64_t v37 = 0x1555555555555555;
          }
          else {
            unint64_t v37 = v35;
          }
          if (v37) {
            uint64_t v38 = (char *)sub_1956410(v21, v37);
          }
          else {
            uint64_t v38 = 0;
          }
          long long v39 = &v38[12 * v34];
          *(void *)long long v39 = v17;
          *((_DWORD *)v39 + 2) = v45;
          uint64_t v41 = v20[7];
          int v40 = v20[8];
          long long v42 = v39;
          if (v40 != v41)
          {
            do
            {
              uint64_t v43 = *(void *)(v40 - 3);
              v40 -= 3;
              int v44 = v40[2];
              *(void *)(v42 - 12) = v43;
              v42 -= 12;
              *((_DWORD *)v42 + 2) = v44;
            }
            while (v40 != v41);
            int v40 = v20[7];
          }
          uint64_t v24 = v39 + 12;
          v20[7] = v42;
          v20[8] = v39 + 12;
          v20[9] = &v38[12 * v37];
          if (v40) {
            operator delete(v40);
          }
        }
        else
        {
          *(void *)BOOL v23 = v17;
          *((_DWORD *)v23 + 2) = v45;
          uint64_t v24 = v23 + 12;
        }
        v20[8] = v24;
      }
      ++v15;
    }
    while (v15 != v14);
  }
}

void sub_19D0BF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_19D28C0(v22, *(void **)(v22 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_19D0C58(uint64_t a1)
{
  uint64_t v4 = (void **)(a1 + 152);
  sub_18D522C(&v4);
  uint64_t v4 = (void **)(a1 + 128);
  sub_18D522C(&v4);
  if (*(char *)(a1 + 127) < 0) {
    operator delete(*(void **)(a1 + 104));
  }
  uint64_t v4 = (void **)(a1 + 72);
  sub_1915C70(&v4);
  sub_19D1350(a1 + 48, *(void **)(a1 + 56));
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v2 = *(void **)(a1 + 16);
    if (v2)
    {
      *(void *)(a1 + 24) = v2;
      operator delete(v2);
    }
  }
  return a1;
}

uint64_t sub_19D0CE8(uint64_t a1)
{
  uint64_t v5 = (void **)(a1 + 88);
  sub_18D522C(&v5);
  uint64_t v5 = (void **)(a1 + 64);
  sub_18D522C(&v5);
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2) {
    sub_20A69F0(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3) {
    sub_20A69F0(v3);
  }
  return a1;
}

uint64_t sub_19D0D5C(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v4;
  sub_19D0FAC(a1 + 8, (uint64_t)(a2 + 2));
  sub_19D1048((uint64_t *)(a1 + 48), (uint64_t)(a2 + 12));
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  sub_19D13AC((void *)(a1 + 72), *((long long **)a2 + 9), *((long long **)a2 + 10), (uint64_t)(*((void *)a2 + 10) - *((void *)a2 + 9)) >> 5);
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  if (*((char *)a2 + 135) < 0)
  {
    sub_4200((unsigned char *)(a1 + 112), *((void **)a2 + 14), *((void *)a2 + 15));
  }
  else
  {
    long long v5 = *((_OWORD *)a2 + 7);
    *(void *)(a1 + 128) = *((void *)a2 + 16);
    *(_OWORD *)(a1 + 112) = v5;
  }
  sub_19D1538((uint64_t *)(a1 + 136), (uint64_t)(a2 + 34));
  if (*((char *)a2 + 183) < 0)
  {
    sub_4200((unsigned char *)(a1 + 160), *((void **)a2 + 20), *((void *)a2 + 21));
  }
  else
  {
    long long v6 = *((_OWORD *)a2 + 10);
    *(void *)(a1 + 176) = *((void *)a2 + 22);
    *(_OWORD *)(a1 + 160) = v6;
  }
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  sub_18D50DC((void *)(a1 + 184), *((void *)a2 + 23), *((void *)a2 + 24), (uint64_t)(*((void *)a2 + 24) - *((void *)a2 + 23)) >> 6);
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  sub_18D50DC((void *)(a1 + 208), *((void *)a2 + 26), *((void *)a2 + 27), (uint64_t)(*((void *)a2 + 27) - *((void *)a2 + 26)) >> 6);
  uint64_t v7 = *((void *)a2 + 29);
  *(unsigned char *)(a1 + 240) = *((unsigned char *)a2 + 240);
  *(void *)(a1 + 232) = v7;
  return a1;
}

void sub_19D0EB0(_Unwind_Exception *a1)
{
  sub_19CEAD8(v2);
  sub_19D0F4C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_19D0F4C(uint64_t a1)
{
  int v4 = (void **)(a1 + 64);
  sub_1915C70(&v4);
  sub_19D1350(a1 + 40, *(void **)(a1 + 48));
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v2 = *(void **)(a1 + 8);
    if (v2)
    {
      *(void *)(a1 + 16) = v2;
      operator delete(v2);
    }
  }
  return a1;
}

uint64_t sub_19D0FAC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 32) = 0;
  sub_19D0FF8((void *)a1, a2);
  return a1;
}

void sub_19D0FDC(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 32)) {
    sub_19D2AB4(v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_19D0FF8(void *result, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 32))
  {
    uint64_t v2 = result;
    *(_DWORD *)uint64_t result = *(_DWORD *)a2;
    result[2] = 0;
    result[3] = 0;
    result[1] = 0;
    uint64_t result = sub_18967EC(result + 1, *(const void **)(a2 + 8), *(void *)(a2 + 16), *(void *)(a2 + 16) - *(void *)(a2 + 8));
    *((unsigned char *)v2 + 32) = 1;
  }
  return result;
}

uint64_t *sub_19D1048(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_19D10A0(a1, *(void ***)a2, (void **)(a2 + 8));
  return a1;
}

void sub_19D1088(_Unwind_Exception *a1)
{
  sub_19D1350(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_19D10A0(uint64_t *result, void **a2, void **a3)
{
  if (a2 != a3)
  {
    int v4 = a2;
    long long v5 = (uint64_t **)result;
    uint64_t v6 = (uint64_t)(result + 1);
    do
    {
      uint64_t result = sub_19D112C(v5, v6, v4 + 4, (long long *)v4 + 2);
      uint64_t v7 = (void **)v4[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          uint64_t v7 = (void **)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (void **)v4[2];
          BOOL v9 = *v8 == v4;
          int v4 = v8;
        }
        while (!v9);
      }
      int v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_19D112C(uint64_t **a1, uint64_t a2, void **a3, long long *a4)
{
  uint64_t v6 = sub_1895CA8(a1, a2, &v12, &v11, a3);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    sub_19D11C4((uint64_t)a1, a4, (uint64_t)v10);
    sub_11220BC(a1, (uint64_t)v12, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    sub_19D12A8((uint64_t)v10, 0);
  }
  return v7;
}

void *sub_19D11C4@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x70uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_19D1230(v6 + 4, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_19D1218(_Unwind_Exception *a1)
{
  sub_19D12A8(v1, 0);
  _Unwind_Resume(a1);
}

void *sub_19D1230(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v4;
  }
  sub_1212718((uint64_t)(__dst + 3), (uint64_t)a2 + 24);
  return __dst;
}

void sub_19D128C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_19D12A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_19D1300((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

void sub_19D1300(uint64_t a1)
{
  sub_12127D0(a1 + 24);
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

void sub_19D1350(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_19D1350(a1, *a2);
    sub_19D1350(a1, a2[1]);
    sub_19D1300((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void *sub_19D13AC(void *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_19168D4(result, a4);
    uint64_t result = sub_19D1434((uint64_t)(v6 + 2), a2, a3, (void *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_19D1414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_1915C70(&a9);
  _Unwind_Resume(a1);
}

void *sub_19D1434(uint64_t a1, long long *a2, long long *a3, void *__dst)
{
  long long v4 = __dst;
  uint64_t v12 = __dst;
  int v13 = __dst;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  char v11 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_4200(v4, *(void **)v6, *((void *)v6 + 1));
        uint64_t v8 = v13;
      }
      else
      {
        long long v7 = *v6;
        long long v4[2] = *((void *)v6 + 2);
        *(_OWORD *)long long v4 = v7;
        uint64_t v8 = v4;
      }
      uint64_t v4[3] = *((void *)v6 + 3);
      v6 += 2;
      long long v4 = v8 + 4;
      int v13 = v8 + 4;
    }
    while (v6 != a3);
  }
  char v11 = 1;
  sub_19D1500((uint64_t)v10);
  return v4;
}

void sub_19D14EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_19D1500(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1916A1C(a1);
  }
  return a1;
}

uint64_t *sub_19D1538(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_19D1590(a1, *(void ***)a2, (void **)(a2 + 8));
  return a1;
}

void sub_19D1578(_Unwind_Exception *a1)
{
  sub_1895F48(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_19D1590(uint64_t *result, void **a2, void **a3)
{
  if (a2 != a3)
  {
    long long v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = (uint64_t)(result + 1);
    do
    {
      uint64_t result = sub_19D161C(v5, v6, v4 + 4, (uint64_t)(v4 + 4));
      long long v7 = (void **)v4[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          long long v7 = (void **)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (void **)v4[2];
          BOOL v9 = *v8 == v4;
          long long v4 = v8;
        }
        while (!v9);
      }
      long long v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_19D161C(uint64_t **a1, uint64_t a2, void **a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t **)sub_1895CA8(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_19D16A0((uint64_t)a1, a4, (uint64_t)&v8);
    sub_11220BC(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

double sub_19D16A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x40uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  long long v7 = v6 + 32;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_4200(v7, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)long long v7 = *(_OWORD *)a2;
    *((void *)v6 + 6) = *(void *)(a2 + 16);
  }
  double result = *(double *)(a2 + 24);
  *((double *)v6 + 7) = result;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_19D172C(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_1895EE8(v3, v2);
  _Unwind_Resume(a1);
}

uint64_t *sub_19D1748(uint64_t **a1, void **a2, uint64_t a3, long long **a4)
{
  uint64_t v6 = (uint64_t **)sub_1122028((uint64_t)a1, &v11, a2);
  long long v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = v6;
    sub_19D17F4((uint64_t)a1, a4, (uint64_t)v10);
    sub_11220BC(a1, v11, v8, v10[0]);
    long long v7 = v10[0];
    v10[0] = 0;
    sub_19D188C((uint64_t)v10, 0);
  }
  return v7;
}

unsigned char *sub_19D17F4@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  double result = v6 + 4;
  uint64_t v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    double result = sub_4200(result, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    v6[6] = *((void *)v8 + 2);
    *(_OWORD *)double result = v9;
  }
  v6[7] = 0;
  v6[8] = 0;
  v6[9] = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_19D1874(_Unwind_Exception *a1)
{
  sub_19D188C(v1, 0);
  _Unwind_Resume(a1);
}

void sub_19D188C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_19D18E4((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

void sub_19D18E4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(void *)(a1 + 32) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

char *sub_19D193C(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  long long v7 = result;
  uint64_t v8 = *((void *)result + 2);
  long long v9 = *(char **)result;
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - *(void *)result) >> 2) < a4)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *long long v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 > 0x1555555555555555) {
      sub_2E00();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 2);
    uint64_t v11 = 2 * v10;
    if (2 * v10 <= a4) {
      uint64_t v11 = a4;
    }
    if (v10 >= 0xAAAAAAAAAAAAAAALL) {
      unint64_t v12 = 0x1555555555555555;
    }
    else {
      unint64_t v12 = v11;
    }
    double result = sub_19563BC(v7, v12);
    uint64_t v14 = (char *)v7[1];
    int v13 = (void **)(v7 + 1);
    long long v9 = v14;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      uint64_t v18 = v9;
      BOOL v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  int v13 = (void **)(result + 8);
  uint64_t v15 = (unsigned char *)*((void *)result + 1);
  if (0xAAAAAAAAAAAAAAABLL * ((v15 - v9) >> 2) >= a4) {
    goto LABEL_16;
  }
  uint64_t v16 = &__src[4 * ((v15 - v9) >> 2)];
  if (v15 != v9)
  {
    double result = (char *)memmove(*(void **)result, __src, v15 - v9);
    long long v9 = (char *)*v13;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    uint64_t v18 = v9;
    BOOL v19 = v16;
LABEL_18:
    double result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *int v13 = &v9[v17];
  return result;
}

uint64_t sub_19D1A78(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(void *)(a1 + 32) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

_OWORD *sub_19D1ABC(uint64_t **a1, void **a2, uint64_t a3)
{
  uint64_t v5 = (void **)sub_1122028((uint64_t)a1, &v11, a2);
  uint64_t v6 = *v5;
  if (!*v5)
  {
    long long v7 = (uint64_t **)v5;
    uint64_t v6 = operator new(0x50uLL);
    v9[1] = a1 + 1;
    v6[2] = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(_OWORD *)((char *)v6 + 56) = *(_OWORD *)(a3 + 24);
    *((void *)v6 + 9) = *(void *)(a3 + 40);
    *(void *)(a3 + 16) = 0;
    *(void *)(a3 + 24) = 0;
    *(void *)(a3 + 32) = 0;
    *(void *)(a3 + 40) = 0;
    char v10 = 1;
    sub_11220BC(a1, v11, v7, (uint64_t *)v6);
    v9[0] = 0;
    sub_19D188C((uint64_t)v9, 0);
  }
  return v6;
}

void *sub_19D1B8C(void *__dst, long long *a2, uint64_t a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  __dst[3] = 0;
  __dst[4] = 0;
  __dst[5] = 0;
  sub_19D1C24(__dst + 3, *(const void **)a3, *(void *)(a3 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 2));
  return __dst;
}

void sub_19D1C08(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_19D1C24(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    double result = sub_19563BC(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      double result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_19D1C84(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_19D1CA0(uint64_t a1)
{
  long long v4 = (void **)(a1 + 208);
  sub_18D522C(&v4);
  long long v4 = (void **)(a1 + 184);
  sub_18D522C(&v4);
  if (*(char *)(a1 + 183) < 0) {
    operator delete(*(void **)(a1 + 160));
  }
  sub_1895F48(a1 + 136, *(char **)(a1 + 144));
  if (*(char *)(a1 + 135) < 0) {
    operator delete(*(void **)(a1 + 112));
  }
  long long v4 = (void **)(a1 + 72);
  sub_1915C70(&v4);
  sub_19D1350(a1 + 48, *(void **)(a1 + 56));
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v2 = *(void **)(a1 + 16);
    if (v2)
    {
      *(void *)(a1 + 24) = v2;
      operator delete(v2);
    }
  }
  return a1;
}

uint64_t sub_19D1D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 48;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  long long v5 = (uint64_t *)(a1 + 48);
  sub_19D0FAC(a1 + 8, a2 + 8);
  sub_19D1048(v5, v4);
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  sub_19D13AC((void *)(a1 + 72), *(long long **)(a2 + 72), *(long long **)(a2 + 80), (uint64_t)(*(void *)(a2 + 80) - *(void *)(a2 + 72)) >> 5);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  if (*(char *)(a2 + 127) < 0)
  {
    sub_4200((unsigned char *)(a1 + 104), *(void **)(a2 + 104), *(void *)(a2 + 112));
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 104);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = v6;
  }
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  sub_18D50DC((void *)(a1 + 128), *(void *)(a2 + 128), *(void *)(a2 + 136), (uint64_t)(*(void *)(a2 + 136) - *(void *)(a2 + 128)) >> 6);
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  sub_18D50DC((void *)(a1 + 152), *(void *)(a2 + 152), *(void *)(a2 + 160), (uint64_t)(*(void *)(a2 + 160) - *(void *)(a2 + 152)) >> 6);
  uint64_t v7 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v7;
  return a1;
}

void sub_19D1E58(_Unwind_Exception *a1)
{
  sub_19D0F4C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_19D1ECC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  if (*(char *)(a2 + 63) < 0)
  {
    sub_4200((unsigned char *)(a1 + 40), *(void **)(a2 + 40), *(void *)(a2 + 48));
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = v6;
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  sub_18D50DC((void *)(a1 + 64), *(void *)(a2 + 64), *(void *)(a2 + 72), (uint64_t)(*(void *)(a2 + 72) - *(void *)(a2 + 64)) >> 6);
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  sub_18D50DC((void *)(a1 + 88), *(void *)(a2 + 88), *(void *)(a2 + 96), (uint64_t)(*(void *)(a2 + 96) - *(void *)(a2 + 88)) >> 6);
  uint64_t v7 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v7;
  return a1;
}

void sub_19D1FB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  unint64_t v12 = *(std::__shared_weak_count **)(v10 + 32);
  if (v12) {
    sub_20A69F0(v12);
  }
  int v13 = *(std::__shared_weak_count **)(v10 + 16);
  if (v13) {
    sub_20A69F0(v13);
  }
  _Unwind_Resume(exception_object);
}

char *sub_19D2008(uint64_t a1, uint64_t __dst, char *__src, char *a4, uint64_t a5)
{
  uint64_t v5 = (char *)__dst;
  if (a5 < 1) {
    return v5;
  }
  uint64_t v7 = __src;
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v9 = a1 + 16;
  uint64_t v10 = v11;
  unint64_t v12 = *(void *)(v9 - 8);
  if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v11 - v12) >> 2)) < a5)
  {
    int v13 = *(void **)a1;
    unint64_t v14 = a5 - 0x5555555555555555 * ((uint64_t)(v12 - *(void *)a1) >> 2);
    if (v14 > 0x1555555555555555) {
      sub_2E00();
    }
    unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((__dst - (uint64_t)v13) >> 2);
    unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((v10 - (uint64_t)v13) >> 2);
    uint64_t v17 = 2 * v16;
    if (2 * v16 <= v14) {
      uint64_t v17 = v14;
    }
    if (v16 >= 0xAAAAAAAAAAAAAAALL) {
      unint64_t v18 = 0x1555555555555555;
    }
    else {
      unint64_t v18 = v17;
    }
    uint64_t v37 = v9;
    if (v18) {
      BOOL v19 = (char *)sub_1956410(v9, v18);
    }
    else {
      BOOL v19 = 0;
    }
    char v28 = &v19[12 * v15];
    std::string __p = v19;
    unint64_t v34 = v28;
    unint64_t v36 = &v19[12 * v18];
    long long v29 = &v28[12 * a5];
    uint64_t v30 = 12 * a5;
    do
    {
      uint64_t v31 = *(void *)v7;
      *((_DWORD *)v28 + 2) = *((_DWORD *)v7 + 2);
      *(void *)char v28 = v31;
      v28 += 12;
      v7 += 12;
      v30 -= 12;
    }
    while (v30);
    unint64_t v35 = v29;
    uint64_t v5 = (char *)sub_19D22A4((void **)a1, (uint64_t)&__p, v5);
    if (v35 != v34) {
      unint64_t v35 = &v34[(v35 - v34 - 12) % 0xCuLL];
    }
    if (__p) {
      operator delete(__p);
    }
    return v5;
  }
  uint64_t v20 = v12 - __dst;
  if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - __dst) >> 2)) >= a5)
  {
    uint64_t v21 = &__src[12 * a5];
    BOOL v23 = *(char **)(v9 - 8);
LABEL_17:
    uint64_t v24 = &v5[12 * a5];
    long long v25 = &v23[-12 * a5];
    uint64_t v26 = v23;
    if ((unint64_t)v25 < v12)
    {
      uint64_t v26 = v23;
      do
      {
        uint64_t v27 = *(void *)v25;
        *((_DWORD *)v26 + 2) = *((_DWORD *)v25 + 2);
        *(void *)uint64_t v26 = v27;
        v26 += 12;
        v25 += 12;
      }
      while ((unint64_t)v25 < v12);
    }
    *(void *)(a1 + 8) = v26;
    if (v23 != v24) {
      memmove(&v5[12 * a5], v5, v23 - v24);
    }
    if (v21 != v7) {
      memmove(v5, v7, v21 - v7);
    }
    return v5;
  }
  uint64_t v21 = &__src[4 * ((uint64_t)(v12 - __dst) >> 2)];
  int64_t v22 = a4 - v21;
  if (a4 != v21) {
    memmove(*(void **)(v9 - 8), &__src[4 * ((uint64_t)(v12 - __dst) >> 2)], a4 - v21);
  }
  BOOL v23 = (char *)(v12 + v22);
  *(void *)(a1 + 8) = v12 + v22;
  if (v20 >= 1) {
    goto LABEL_17;
  }
  return v5;
}

void sub_19D2258(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_19D22A4(void **a1, uint64_t a2, char *__src)
{
  uint64_t v5 = *(_DWORD **)(a2 + 8);
  long long v6 = (char *)*a1;
  uint64_t v7 = v5;
  if (*a1 != __src)
  {
    size_t v8 = __src;
    uint64_t v7 = *(_DWORD **)(a2 + 8);
    do
    {
      uint64_t v9 = *(void *)(v8 - 12);
      v8 -= 12;
      int v10 = *((_DWORD *)v8 + 2);
      *(void *)(v7 - 3) = v9;
      v7 -= 3;
      v7[2] = v10;
    }
    while (v8 != v6);
  }
  *(void *)(a2 + 8) = v7;
  uint64_t v11 = a1[1];
  uint64_t v12 = *(void *)(a2 + 16);
  int64_t v13 = v11 - __src;
  if (v11 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v11 - __src);
    uint64_t v7 = *(_DWORD **)(a2 + 8);
  }
  *(void *)(a2 + 16) = v12 + v13;
  unint64_t v14 = (char *)*a1;
  *a1 = v7;
  *(void *)(a2 + 8) = v14;
  unint64_t v15 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v15;
  unint64_t v16 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(void *)(a2 + 24) = v16;
  *(void *)a2 = *(void *)(a2 + 8);
  return v5;
}

uint64_t *sub_19D2374(uint64_t **a1, void **a2, long long *a3)
{
  uint64_t v5 = (uint64_t **)sub_1122028((uint64_t)a1, &v10, a2);
  long long v6 = *v5;
  if (!*v5)
  {
    uint64_t v7 = v5;
    sub_19D2408((uint64_t)a1, a3, (uint64_t)v9);
    sub_11220BC(a1, v10, v7, v9[0]);
    long long v6 = v9[0];
    v9[0] = 0;
    sub_19D2524((uint64_t)v9, 0);
  }
  return v6;
}

char *sub_19D2408@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  long long v6 = (char *)operator new(0x88uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  double result = sub_19D2474(v6 + 32, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_19D245C(_Unwind_Exception *a1)
{
  sub_19D2524(v1, 0);
  _Unwind_Resume(a1);
}

char *sub_19D2474(char *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v4;
  }
  long long v5 = *(long long *)((char *)a2 + 24);
  *((void *)__dst + 5) = *((void *)a2 + 5);
  *(_OWORD *)(__dst + 24) = v5;
  *((void *)a2 + 4) = 0;
  *((void *)a2 + 5) = 0;
  *((void *)a2 + 3) = 0;
  *((_DWORD *)__dst + 12) = *((_DWORD *)a2 + 12);
  *((void *)__dst + 8) = 0;
  *((void *)__dst + 9) = 0;
  *((void *)__dst + 7) = 0;
  *(_OWORD *)(__dst + 56) = *(long long *)((char *)a2 + 56);
  *((void *)__dst + 9) = *((void *)a2 + 9);
  *((void *)a2 + 7) = 0;
  *((void *)a2 + 8) = 0;
  *((void *)a2 + 9) = 0;
  *((void *)__dst + 10) = 0;
  *((void *)__dst + 11) = 0;
  *((void *)__dst + 12) = 0;
  *((_OWORD *)__dst + 5) = a2[5];
  *((void *)__dst + 12) = *((void *)a2 + 12);
  *((void *)a2 + 10) = 0;
  *((void *)a2 + 11) = 0;
  *((void *)a2 + 12) = 0;
  return __dst;
}

void sub_19D2524(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_19D257C((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

void sub_19D257C(uint64_t a1)
{
  uint64_t v3 = (void **)(a1 + 80);
  sub_19D2838(&v3);
  uint64_t v2 = *(void **)(a1 + 56);
  if (v2)
  {
    *(void *)(a1 + 64) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

char *sub_19D25E4(char *__dst, long long *a2, long long *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200(__dst + 24, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v6 = *a3;
    *((void *)__dst + 5) = *((void *)a3 + 2);
    *(_OWORD *)(__dst + 24) = v6;
  }
  int v7 = *((_DWORD *)a3 + 6);
  *((void *)__dst + 7) = 0;
  *((_DWORD *)__dst + 12) = v7;
  *((void *)__dst + 8) = 0;
  *((void *)__dst + 9) = 0;
  sub_19D1C24((void *)__dst + 7, *((const void **)a3 + 4), *((void *)a3 + 5), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)a3 + 5) - *((void *)a3 + 4)) >> 2));
  *((void *)__dst + 10) = 0;
  *((void *)__dst + 11) = 0;
  *((void *)__dst + 12) = 0;
  sub_19D2714((void *)__dst + 10, *((void *)a3 + 7), *((void *)a3 + 8), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*((void *)a3 + 8) - *((void *)a3 + 7)) >> 4));
  return __dst;
}

void sub_19D26C8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_19D2714(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    sub_1897940(result, a4);
    double result = (void *)sub_19D279C((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_19D277C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_19D2838(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_19D279C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = a4 + v7;
      uint64_t v9 = *(void *)(a2 + v7);
      *(_DWORD *)(v8 + 8) = *(_DWORD *)(a2 + v7 + 8);
      *(void *)uint64_t v8 = v9;
      sub_1223EC4(a4 + v7 + 16, a2 + v7 + 16);
      v7 += 80;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_19D2814(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 64;
    do
    {
      sub_1223F48((void *)(v4 + v2));
      v2 -= 80;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_19D2838(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    long long v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        long long v6 = v4 - 80;
        sub_1223F48((void *)v4 - 8);
        uint64_t v4 = v6;
      }
      while (v6 != v2);
      long long v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_19D28C0(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_19D28C0(a1, *a2);
    sub_19D28C0(a1, a2[1]);
    sub_19D18E4((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_19D291C(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    uint64_t v4 = *a1;
    if ((void *)v3 != v1)
    {
      do
      {
        v3 -= 48;
        sub_1895FAC(v3);
      }
      while ((void *)v3 != v1);
      uint64_t v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void sub_19D2984(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_19D2984(a1, *a2);
    sub_19D2984(a1, a2[1]);
    sub_19D257C((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

uint64_t **sub_19D29E0(uint64_t **a1, int *a2, uint64_t a3)
{
  long long v6 = a1 + 1;
  long long v5 = a1[1];
  if (v5)
  {
    int v7 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (uint64_t **)v5;
        int v9 = *((_DWORD *)v5 + 8);
        if (v7 >= v9) {
          break;
        }
        long long v5 = *v8;
        long long v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      long long v5 = v8[1];
      if (!v5)
      {
        long long v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v8 = a1 + 1;
LABEL_10:
    uint64_t v10 = (char *)operator new(0x48uLL);
    *((_DWORD *)v10 + 8) = *(_DWORD *)a3;
    *(_OWORD *)(v10 + 40) = *(_OWORD *)(a3 + 8);
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    uint64_t v11 = *(void *)(a3 + 24);
    uint64_t v12 = *(void *)(a3 + 32);
    *(void *)(a3 + 24) = 0;
    *((void *)v10 + 7) = v11;
    *((void *)v10 + 8) = v12;
    sub_11220BC(a1, (uint64_t)v8, v6, (uint64_t *)v10);
    return (uint64_t **)v10;
  }
  return v8;
}

void sub_19D2AB4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    *(void *)(a1 + 16) = v2;
    operator delete(v2);
  }
}

void sub_19D2ACC()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2626780, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_19D9AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_19DBAB8()
{
}

void sub_19DBAC4()
{
}

void sub_19DBAD4()
{
}

void sub_19DBAE0()
{
}

void sub_19DBAF0()
{
}

void sub_19DBAFC()
{
}

void sub_19DBB0C()
{
}

void sub_19DBB18()
{
}

void sub_19DBB28()
{
}

void sub_19DBB34()
{
}

void sub_19DBB44()
{
}

void sub_19DBB50()
{
}

void sub_19DBB60()
{
}

void sub_19DBB6C()
{
}

void sub_19DBB7C()
{
}

void sub_19DBB88()
{
}

void sub_19DBB98()
{
}

void sub_19DBBA4()
{
}

void sub_19DBBB4()
{
}

void sub_19DBBC0()
{
}

void sub_19DBBD0()
{
}

void sub_19DBBDC()
{
}

void sub_19DBBEC()
{
}

void sub_19DBBF8()
{
}

void sub_19DBC08()
{
}

void sub_19DBC14()
{
}

void sub_19DBC24()
{
}

void sub_19DBC30()
{
}

void sub_19DBC40()
{
}

void sub_19DBC4C()
{
}

void sub_19DBC5C()
{
}

void sub_19DBC68()
{
}

void sub_19DBC78()
{
}

void sub_19DBC84()
{
}

void sub_19DBC94()
{
}

void sub_19DBCA0()
{
}

void sub_19DBCB0()
{
}

void sub_19DBCBC()
{
}

void sub_19DBCCC()
{
}

void sub_19DBCD8()
{
}

void sub_19DBCE8()
{
}

void sub_19DBCF4()
{
}

void sub_19DBD04()
{
}

void sub_19DBD10()
{
}

void sub_19DBD20()
{
}

void sub_19DBD2C()
{
}

void sub_19DBD3C()
{
}

void sub_19DBD48()
{
}

void sub_19DBD58()
{
}

void sub_19DBD64()
{
}

void sub_19DBD74()
{
}

void sub_19DBD80()
{
}

void sub_19DBD90()
{
}

void sub_19DBD9C()
{
}

void sub_19DBDAC()
{
}

void sub_19DBDB8()
{
}

void sub_19DBDC8()
{
}

void sub_19DBDD4()
{
}

void sub_19DBDE4()
{
}

void sub_19DBDF0()
{
}

void sub_19DBE00()
{
}

void sub_19DBE0C()
{
}

void sub_19DBE1C()
{
}

void sub_19DBE28()
{
}

void sub_19DBE38()
{
}

void sub_19DBE44()
{
}

void sub_19DBE54()
{
}

void sub_19DBE60()
{
}

void sub_19DBE70()
{
}

void sub_19DBE7C()
{
}

void sub_19DBE8C()
{
}

void sub_19DBE98()
{
}

void sub_19DBEA8()
{
}

void sub_19DBEB4()
{
}

void sub_19DBEC4()
{
}

void sub_19DBED0()
{
}

void sub_19DBEE0()
{
}

void sub_19DBEEC()
{
}

void sub_19DBEFC()
{
}

void sub_19DBF08()
{
}

void sub_19DBF18()
{
}

void sub_19DBF24()
{
}

void sub_19DBF34()
{
}

void sub_19DBF40()
{
}

void sub_19DBF50()
{
}

void sub_19DBF5C()
{
}

void sub_19DBF6C()
{
}

void sub_19DBF78()
{
}

void sub_19DBF88()
{
}

void sub_19DBF94()
{
}

void sub_19DBFA4()
{
}

void sub_19DBFB0()
{
}

void sub_19DBFC0()
{
}

void sub_19DBFCC()
{
}

void sub_19DBFDC()
{
}

void sub_19DBFE8()
{
}

void sub_19DBFF8()
{
}

void sub_19DC004()
{
}

void sub_19DC014()
{
}

void sub_19DC020()
{
}

void sub_19DC030()
{
}

void sub_19DC03C()
{
}

void sub_19DC04C()
{
}

void sub_19DC058()
{
}

void sub_19DC068()
{
}

void sub_19DC074()
{
}

void sub_19DC084()
{
}

void sub_19DC090()
{
}

void sub_19DC0A0()
{
}

void sub_19DC0AC()
{
}

void sub_19DC0BC()
{
}

void sub_19DC0C8()
{
}

void sub_19DC0D8()
{
}

void sub_19DC0E4()
{
}

void sub_19DC0F4()
{
}

void sub_19DC100()
{
}

void sub_19DC110()
{
}

void sub_19DC11C()
{
}

void sub_19DC12C()
{
}

void sub_19DC138()
{
}

void sub_19DC148()
{
}

void sub_19DC154()
{
}

void sub_19DC164()
{
}

void sub_19DC170()
{
}

void sub_19DC180()
{
}

void sub_19DC18C()
{
}

void sub_19DC19C()
{
}

void sub_19DC1A8()
{
}

void sub_19DC1B8()
{
}

void sub_19DC1C4()
{
}

void sub_19DC1D4()
{
}

void sub_19DC1E0()
{
}

void sub_19DC1F0()
{
}

void sub_19DC1FC()
{
}

void sub_19DC20C()
{
}

void sub_19DC218()
{
}

void sub_19DC228()
{
}

void sub_19DC234()
{
}

void sub_19DC244()
{
}

void sub_19DC250()
{
}

void sub_19DC260()
{
}

void sub_19DC26C()
{
}

void sub_19DC27C()
{
}

void sub_19DC288()
{
}

void sub_19DC298()
{
}

void sub_19DC2A4()
{
}

void sub_19DC2B4()
{
}

void sub_19DC2C0()
{
}

void sub_19DC2D0()
{
}

void sub_19DC2DC()
{
}

void sub_19DC2EC()
{
}

void sub_19DC2F8()
{
}

void sub_19DC308()
{
}

void sub_19DC314()
{
}

void sub_19DC324()
{
}

void sub_19DC330()
{
}

void sub_19DC340()
{
}

void sub_19DC34C()
{
}

void sub_19DC35C()
{
}

void sub_19DC368()
{
}

void sub_19DC378()
{
}

void sub_19DC384()
{
}

void sub_19DC394()
{
}

void sub_19DC3A0()
{
}

void sub_19DC3B0()
{
}

void sub_19DC3BC()
{
}

void sub_19DC3CC()
{
}

void sub_19DC3D8()
{
}

void sub_19DC3E8()
{
}

void sub_19DC3F4()
{
}

void sub_19DC404()
{
}

void sub_19DC410()
{
}

void sub_19DC420()
{
}

void sub_19DC42C()
{
}

void sub_19DC43C()
{
}

void sub_19DC448()
{
}

void sub_19DC458()
{
}

void sub_19DC464()
{
}

void sub_19DC474()
{
}

void sub_19DC480()
{
}

void sub_19DC490()
{
}

void sub_19DC49C()
{
}

void sub_19DC4AC()
{
}

void sub_19DC4B8()
{
}

void sub_19DC4C8()
{
}

void sub_19DC4D4()
{
}

void sub_19DC4E4()
{
}

void sub_19DC4F0()
{
}

void sub_19DC500()
{
}

void sub_19DC50C()
{
}

void sub_19DC51C()
{
}

void sub_19DC528()
{
}

void sub_19DC538()
{
}

void sub_19DC544()
{
}

void sub_19DC554()
{
}

void sub_19DC560()
{
}

void sub_19DC570()
{
}

void sub_19DC57C()
{
}

void sub_19DC58C()
{
}

void sub_19DC598()
{
}

void sub_19DC5A8()
{
}

void sub_19DC5B4()
{
}

void sub_19DC5C4()
{
}

void sub_19DC5D0()
{
}

void sub_19DC5E0()
{
}

void sub_19DC5EC()
{
}

void sub_19DC5FC()
{
}

void sub_19DC608()
{
}

void sub_19DC618()
{
}

void sub_19DC624()
{
}

void sub_19DC634()
{
}

void sub_19DC640()
{
}

void sub_19DC650()
{
}

void sub_19DC65C()
{
}

void sub_19DC66C()
{
}

void sub_19DC678()
{
}

void sub_19DC688()
{
}

void sub_19DC694()
{
}

void sub_19DC6A4()
{
}

void sub_19DC6B0()
{
}

void sub_19DC6C0()
{
}

void sub_19DC6CC()
{
}

void sub_19DC6DC()
{
}

void sub_19DC6E8()
{
}

void sub_19DC6F8()
{
}

void sub_19DC704()
{
}

void sub_19DC714()
{
}

void sub_19DC720()
{
}

void sub_19DC730()
{
}

void sub_19DC73C()
{
}

void sub_19DC74C()
{
}

void sub_19DC758()
{
}

void sub_19DC768()
{
}

void sub_19DC774()
{
}

void sub_19DC784()
{
}

void sub_19DC790()
{
}

void sub_19DC7A0()
{
}

void sub_19DC7AC()
{
}

void sub_19DC7BC()
{
}

void sub_19DC7C8()
{
}

void sub_19DC7D8()
{
}

void sub_19DC7E4()
{
}

void sub_19DC7F4()
{
}

void sub_19DC800()
{
}

void sub_19DC810()
{
}

void sub_19DC81C()
{
}

void sub_19DC82C()
{
}

void sub_19DC838()
{
}

void sub_19DC848()
{
}

void sub_19DC854()
{
}

void sub_19DC864()
{
}

void sub_19DC870()
{
}

void sub_19DC880()
{
}

void sub_19DC88C()
{
}

void sub_19DC89C()
{
}

void sub_19DC8A8()
{
}

void sub_19DC8B8()
{
}

void sub_19DC8C4()
{
}

void sub_19DC8D4()
{
}

void sub_19DC8E0()
{
}

void sub_19DC8F0()
{
}

void sub_19DC8FC()
{
}

void sub_19DC90C()
{
}

void sub_19DC918()
{
}

void sub_19DC928()
{
}

void sub_19DC934()
{
}

void sub_19DC944()
{
}

void sub_19DC950()
{
}

void sub_19DC960()
{
}

void sub_19DC96C()
{
}

void sub_19DC97C()
{
}

void sub_19DC988()
{
}

void sub_19DC998()
{
}

void sub_19DC9A4()
{
}

void sub_19DC9B4()
{
}

void sub_19DC9C0()
{
}

void sub_19DC9D0()
{
}

void sub_19DC9DC()
{
}

void sub_19DC9EC()
{
}

void sub_19DC9F8()
{
}

void sub_19DCA04()
{
}

void sub_19DCA10()
{
}

void sub_19DCA1C()
{
}

void sub_19DCA2C()
{
}

void sub_19DCA38()
{
}

void sub_19DCA48()
{
}

void sub_19DCA54()
{
}

void sub_19DCA64()
{
}

void sub_19DCA70()
{
}

void sub_19DCA80()
{
}

void sub_19DCA8C()
{
}

void sub_19DCA9C()
{
}

void sub_19DCAA8()
{
}

void sub_19DCAB8()
{
}

void sub_19DCAC4()
{
}

void sub_19DCAD4()
{
}

void sub_19DCAE0()
{
}

void sub_19DCAF0()
{
}

void sub_19DCAFC()
{
}

void sub_19DCB0C()
{
}

void sub_19DCB18()
{
}

void sub_19DCB28()
{
}

void sub_19DCB34()
{
}

void sub_19DCB44()
{
}

void sub_19DCB50()
{
}

void sub_19DCB60()
{
}

void sub_19DCB6C()
{
}

void sub_19DCB7C()
{
}

void sub_19DCB88()
{
}

void sub_19DCB98()
{
}

void sub_19DCBA4()
{
}

void sub_19DCBB4()
{
}

void sub_19DCBC0()
{
}

void sub_19DCBD0()
{
}

void sub_19DCBDC()
{
}

void sub_19DCBEC()
{
}

void sub_19DCBF8()
{
}

void sub_19DCC08()
{
}

void sub_19DCC14()
{
}

void sub_19DCC24()
{
}

void sub_19DCC30()
{
}

void sub_19DCC40()
{
}

void sub_19DCC4C()
{
}

void sub_19DCC5C()
{
}

void sub_19DCC68()
{
}

void sub_19DCC78()
{
}

void sub_19DCC84()
{
}

void sub_19DCC94()
{
}

void sub_19DCCA0()
{
}

void sub_19DCCB0()
{
}

void sub_19DCCBC()
{
}

void sub_19DCCCC()
{
}

void sub_19DCCD8()
{
}

void sub_19DCCE8()
{
}

void sub_19DCCF4()
{
}

void sub_19DCD04()
{
}

void sub_19DCD10()
{
}

void sub_19DCD20()
{
}

void sub_19DCD2C()
{
}

void sub_19DCD3C()
{
}

void sub_19DCD48()
{
}

void sub_19DCD58()
{
}

void sub_19DCD64()
{
}

void sub_19DCD74()
{
}

void sub_19DCD80()
{
}

void sub_19DCD90()
{
}

void sub_19DCD9C()
{
}

void sub_19DCDAC()
{
}

void sub_19DCDB8()
{
}

void sub_19DCDC8()
{
}

void sub_19DCDD4()
{
}

void sub_19DCDE4()
{
}

void sub_19DCDF0()
{
}

void sub_19DCE00()
{
}

void sub_19DCE0C()
{
}

void sub_19DCE1C()
{
}

void sub_19DCE28()
{
}

void sub_19DCE38()
{
}

void sub_19DCE44()
{
}

void sub_19DCE54()
{
}

void sub_19DCE60()
{
}

void sub_19DCE70()
{
}

void sub_19DCE7C()
{
}

void sub_19DCE8C()
{
}

void sub_19DCE98()
{
}

void sub_19DCEA8()
{
}

void sub_19DCEB4()
{
}

void sub_19DCEC4()
{
}

void sub_19DCED0()
{
}

void sub_19DCEE0()
{
}

void sub_19DCEEC()
{
}

void sub_19DCEFC()
{
}

void sub_19DCF08()
{
}

void sub_19DCF18()
{
}

void sub_19DCF24()
{
}

void sub_19DCF34()
{
}

void sub_19DCF40()
{
}

void sub_19DCF50()
{
}

void sub_19DCF5C()
{
}

void sub_19DCF6C()
{
}

void sub_19DCF78()
{
}

void sub_19DCF88()
{
}

void sub_19DCF94()
{
}

void sub_19DCFA4()
{
}

void sub_19DCFB0()
{
}

void sub_19DCFC0()
{
}

void sub_19DCFCC()
{
}

void sub_19DCFDC()
{
}

void sub_19DCFE8()
{
}

void sub_19DCFF8()
{
}

void sub_19DD004()
{
}

void sub_19DD014()
{
}

void sub_19DD020()
{
}

void sub_19DD030()
{
}

void sub_19DD03C()
{
}

void sub_19DD04C()
{
}

void sub_19DD058()
{
}

void sub_19DD068()
{
}

void sub_19DD074()
{
}

void sub_19DD084()
{
}

void sub_19DD090()
{
}

void sub_19DD0A0()
{
}

void sub_19DD0AC()
{
}

void sub_19DD0BC()
{
}

void sub_19DD0C8()
{
}

void sub_19DD0D8()
{
}

void sub_19DD0E4()
{
}

void sub_19DD0F4()
{
}

void sub_19DD100()
{
}

void sub_19DD110()
{
}

void sub_19DD11C()
{
}

void sub_19DD12C()
{
}

void sub_19DD138()
{
}

void sub_19DD148()
{
}

void sub_19DD154()
{
}

void sub_19DD164()
{
}

void sub_19DD170()
{
}

void sub_19DD180()
{
}

void sub_19DD18C()
{
}

void sub_19DD19C()
{
}

void sub_19DD1A8()
{
}

void sub_19DD1B8()
{
}

void sub_19DD1C4()
{
}

void sub_19DD1D4()
{
}

void sub_19DD1E0()
{
}

void sub_19DD1F0()
{
}

void sub_19DD1FC()
{
}

void sub_19DD20C()
{
}

void sub_19DD218()
{
}

void sub_19DD228()
{
}

void sub_19DD234()
{
}

void sub_19DD244()
{
}

void sub_19DD250()
{
}

void sub_19DD260()
{
}

void sub_19DD26C()
{
}

void sub_19DD27C()
{
}

void sub_19DD288()
{
}

void sub_19DD298()
{
}

void sub_19DD2A4()
{
}

void sub_19DD2B4()
{
}

void sub_19DD2C0()
{
}

void sub_19DD2D0()
{
}

void sub_19DD2DC()
{
}

void sub_19DD2EC()
{
}

void sub_19DD2F8()
{
}

void sub_19DD308()
{
}

void sub_19DD314()
{
}

void sub_19DD324()
{
}

void sub_19DD330()
{
}

void sub_19DD340()
{
}

void sub_19DD34C()
{
}

void sub_19DD35C()
{
}

void sub_19DD368()
{
}

void sub_19DD378()
{
}

void sub_19DD384()
{
}

void sub_19DD394()
{
}

void sub_19DD3A0()
{
}

void sub_19DD3B0()
{
}

void sub_19DD3BC()
{
}

void sub_19DD3CC()
{
}

void sub_19DD3D8()
{
}

void sub_19DD3E8()
{
}

void sub_19DD3F4()
{
}

void sub_19DD404()
{
}

void sub_19DD410()
{
}

void sub_19DD420()
{
}

void sub_19DD42C()
{
}

void sub_19DD43C()
{
}

void sub_19DD448()
{
}

void sub_19DD458()
{
}

void sub_19DD464()
{
}

void sub_19DD474()
{
}

void sub_19DD480()
{
}

void sub_19DD490()
{
}

void sub_19DD49C()
{
}

void sub_19DD4AC()
{
}

void sub_19DD4B8()
{
}

void sub_19DD4C8()
{
}

void sub_19DD4D4()
{
}

void sub_19DD4E4()
{
}

void sub_19DD4F0()
{
}

void sub_19DD500()
{
}

void sub_19DD50C()
{
}

void sub_19DD51C()
{
}

void sub_19DD528()
{
}

void sub_19DD538()
{
}

void sub_19DD544()
{
}

void sub_19DD550()
{
}

void sub_19DD564()
{
}

void sub_19DD578()
{
}

void sub_19DD580()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2626738 = 0;
  qword_2626740 = 0;
  qword_2626748 = 0;
  qword_2626738 = (uint64_t)operator new(0x18uLL);
  qword_2626740 = qword_2626738;
  qword_2626748 = qword_2626738 + 24;
  qword_2626740 = (uint64_t)sub_18914E4((uint64_t)&qword_2626748, (long long *)__p, v4, (char *)qword_2626738);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2626750 = 0;
  qword_2626758 = 0;
  qword_2626760 = 0;
  qword_2626750 = (uint64_t)operator new(0x18uLL);
  qword_2626758 = qword_2626750;
  qword_2626760 = qword_2626750 + 24;
  qword_2626758 = (uint64_t)sub_18914E4((uint64_t)&qword_2626760, (long long *)__p, v4, (char *)qword_2626750);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2626768 = 0;
  qword_2626770 = 0;
  qword_2626778 = 0;
  qword_2626768 = (uint64_t)operator new(0x18uLL);
  qword_2626770 = qword_2626768;
  qword_2626778 = qword_2626768 + 24;
  qword_2626770 = (uint64_t)sub_18914E4((uint64_t)&qword_2626778, (long long *)__p, v4, (char *)qword_2626768);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_19D2ACC();
  sub_5E5C(__p, "en_US");
  LODWORD(v4[0]) = 0;
  sub_5E5C((void *)v4 + 1, "en-US_US");
  int v5 = 0;
  sub_5E5C(v6, "en_AU");
  int v7 = 1;
  sub_5E5C(v8, "en-AU_AU");
  int v9 = 1;
  sub_5E5C(v10, "en_CA");
  int v11 = 2;
  sub_5E5C(v12, "en-CA_CA");
  int v13 = 2;
  sub_5E5C(v14, "en_GB");
  int v15 = 3;
  sub_5E5C(v16, "en-GB_GB");
  int v17 = 3;
  sub_5E5C(v18, "en_IE");
  int v19 = 4;
  sub_5E5C(v20, "en-IE_IE");
  int v21 = 4;
  sub_5E5C(v22, "en_NZ");
  int v23 = 4;
  sub_5E5C(v24, "en-NZ_NZ");
  int v25 = 4;
  sub_5E5C(v26, "en_ZA");
  int v27 = 4;
  sub_5E5C(v28, "en-ZA_ZA");
  int v29 = 4;
  sub_1898F60((uint64_t)&unk_2626798, (unsigned __int8 *)__p, 14);
  uint64_t v0 = 56;
  do
  {
    if (*((char *)&__p[v0 - 1] - 1) < 0) {
      operator delete(__p[v0 - 4]);
    }
    v0 -= 4;
  }
  while (v0 * 8);
  sub_5E5C(__p, "US");
  LODWORD(v4[0]) = 1;
  sub_5E5C((void *)v4 + 1, "AU");
  int v5 = 2;
  sub_5E5C(v6, "CA");
  int v7 = 3;
  sub_5E5C(v8, "GB");
  int v9 = 4;
  sub_5E5C(v10, "IE");
  int v11 = 5;
  sub_5E5C(v12, "NZ");
  int v13 = 5;
  sub_5E5C(v14, "ZA");
  int v15 = 5;
  sub_5E5C(v16, "ZA");
  int v17 = 5;
  sub_5E5C(v18, "IN");
  int v19 = 7;
  sub_5E5C(v20, "DE");
  int v21 = 6;
  sub_5E5C(v22, "CH");
  int v23 = 6;
  sub_5E5C(v24, "NL");
  int v25 = 6;
  sub_5E5C(v26, "DK");
  int v27 = 6;
  sub_5E5C(v28, "NO");
  int v29 = 6;
  sub_5E5C(v30, "FI");
  int v31 = 6;
  sub_5E5C(v32, "SE");
  int v33 = 6;
  sub_5E5C(v34, "BE");
  int v35 = 6;
  sub_5E5C(v36, "AT");
  int v37 = 6;
  sub_5E5C(v38, "MX");
  int v39 = 6;
  sub_5E5C(v40, "AR");
  int v41 = 6;
  sub_5E5C(v42, "CL");
  int v43 = 6;
  sub_5E5C(v44, "BR");
  int v45 = 6;
  sub_5E5C(v46, "SK");
  int v47 = 6;
  sub_5E5C(v48, "TR");
  int v49 = 6;
  sub_5E5C(v50, "PL");
  int v51 = 6;
  sub_5E5C(v52, "HR");
  int v53 = 6;
  sub_5E5C(v54, "RO");
  int v55 = 6;
  sub_5E5C(v56, "HU");
  int v57 = 6;
  sub_5E5C(v58, "VN");
  int v59 = 6;
  sub_5E5C(v60, "GR");
  int v61 = 6;
  sub_18993EC((uint64_t)&unk_26267C0, (unsigned __int8 *)__p, 30);
  uint64_t v1 = 120;
  do
  {
    if (*((char *)&__p[v1 - 1] - 1) < 0) {
      operator delete(__p[v1 - 4]);
    }
    v1 -= 4;
  }
  while (v1 * 8);
}

void sub_19DDC3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v19 = 960;
  while (1)
  {
    if (*(char *)(v17 + v19 - 9) < 0) {
      operator delete(*(void **)(v17 + v19 - 32));
    }
    v19 -= 32;
    if (!v19) {
      _Unwind_Resume(exception_object);
    }
  }
}

void *sub_19DDDEC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "places_category_attribute_0_0_0");
}

uint64_t sub_19DDDFC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

void sub_19DDE04(uint64_t a1@<X1>, void *a2@<X8>)
{
  sub_19DE9BC(v3, *(void **)a1, (void *)(a1 + 8));
  a2[2] = 0;
  a2[1] = 0;
  *a2 = a2 + 1;
  sub_1DCA148();
}

void sub_19DE5BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  sub_142A7C0(&a72);
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete((void *)STACK[0x370]);
  }
  sub_1896400((uint64_t)&STACK[0x388], (void *)STACK[0x390]);
  std::string __p = &STACK[0x3A0];
  sub_1891624((void ***)&__p);
  if (SLOBYTE(STACK[0x3CF]) < 0) {
    operator delete((void *)STACK[0x3B8]);
  }
  sub_142A7C0(&STACK[0x3D0]);
  if (*(char *)(v72 - 161) < 0) {
    operator delete(*(void **)(v72 - 184));
  }
  if (*(char *)(v72 - 137) < 0) {
    operator delete(*(void **)(v72 - 160));
  }
  std::string __p = (void *)(v72 - 136);
  sub_1898078((void ***)&__p);
  sub_18F867C(a13, *(void **)(a13 + 8));
  std::string __p = (void *)(v72 - 112);
  sub_1891624((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_19DE734(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_19DE770(uint64_t **a1, uint64_t a2)
{
  sub_5E5C(v13, "places_category_attribute_0_0_0");
  LODWORD(v12[0]) = 8;
  sub_1A27160(v12, (char *)v13, (uint64_t)v9);
  if (SHIBYTE(v14) < 0) {
    operator delete(v13[0]);
  }
  dispatch_group_enter(**(dispatch_group_t **)a2);
  int v4 = *a1;
  int v5 = *(dispatch_group_t **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
    char v8 = *(dispatch_group_t **)a2;
    uint64_t v7 = *(void *)(a2 + 8);
  }
  else
  {
    uint64_t v7 = 0;
    char v8 = *(dispatch_group_t **)a2;
  }
  v13[0] = off_24E7FF0;
  v13[1] = v5;
  uint64_t v14 = v6;
  int v15 = v13;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
  }
  v12[0] = off_24E80C0;
  v12[1] = v8;
  v12[2] = v7;
  void v12[3] = v12;
  sub_1A26F34(v4, (uint64_t)v9, (uint64_t)v13, (uint64_t)v12);
  sub_18B21F4(v12);
  sub_18B2278(v13);
  if (__p)
  {
    int v11 = __p;
    operator delete(__p);
  }
}

void sub_19DE8BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_18B21F4(&a14);
  sub_18B2278((void *)(v14 - 56));
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_19DE904(void *a1)
{
  *a1 = &off_24E7FA8;
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2) {
    sub_20A69F0(v2);
  }
  return a1;
}

void sub_19DE950(void *a1)
{
  *a1 = &off_24E7FA8;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1) {
    sub_20A69F0(v1);
  }

  operator delete();
}

void *sub_19DE9BC(void *a1, void *a2, void *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2 == a3)
  {
    unint64_t v4 = 0;
  }
  else
  {
    unint64_t v4 = 0;
    int v5 = a2;
    do
    {
      uint64_t v6 = (void *)v5[1];
      if (v6)
      {
        do
        {
          uint64_t v7 = v6;
          uint64_t v6 = (void *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          uint64_t v7 = (void *)v5[2];
          BOOL v8 = *v7 == (void)v5;
          int v5 = v7;
        }
        while (!v8);
      }
      ++v4;
      int v5 = v7;
    }
    while (v7 != a3);
  }
  sub_19DEA44(a1, a2, a3, v4);
  return a1;
}

void *sub_19DEA44(void *result, void *a2, void *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_112E848(result, a4);
    double result = sub_19DEACC((uint64_t)(v6 + 2), a2, a3, (void *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_19DEAAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_1891624(&a9);
  _Unwind_Resume(a1);
}

void *sub_19DEACC(uint64_t a1, void *a2, void *a3, void *__dst)
{
  unint64_t v4 = __dst;
  uint64_t v14 = __dst;
  int v15 = (char *)__dst;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  char v13 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      if (*((char *)v6 + 55) < 0)
      {
        sub_4200(v4, (void *)v6[4], v6[5]);
      }
      else
      {
        long long v7 = *((_OWORD *)v6 + 2);
        long long v4[2] = v6[6];
        *(_OWORD *)unint64_t v4 = v7;
      }
      BOOL v8 = (void *)v6[1];
      if (v8)
      {
        do
        {
          uint64_t v9 = v8;
          BOOL v8 = (void *)*v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          uint64_t v9 = (void *)v6[2];
          BOOL v10 = *v9 == (void)v6;
          uint64_t v6 = v9;
        }
        while (!v10);
      }
      unint64_t v4 = v15 + 24;
      v15 += 24;
      uint64_t v6 = v9;
    }
    while (v9 != a3);
  }
  char v13 = 1;
  sub_18915A4((uint64_t)v12);
  return v4;
}

void sub_19DEBA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

char *sub_19DEBBC(char *__dst, long long *a2, long long *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  uint64_t v6 = __dst + 24;
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200(v6, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v7 = *a3;
    *((void *)__dst + 5) = *((void *)a3 + 2);
    *(_OWORD *)uint64_t v6 = v7;
  }
  return __dst;
}

void sub_19DEC38(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_19DEC54(void *__dst, long long *a2, uint64_t a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  sub_13F4B48((uint64_t)(__dst + 3), a3);
  return __dst;
}

void sub_19DECB4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_19DECD0(uint64_t **a1, void **a2, uint64_t a3)
{
  long long v5 = (void **)sub_1122028((uint64_t)a1, &v11, a2);
  uint64_t v6 = *v5;
  if (!*v5)
  {
    long long v7 = (uint64_t **)v5;
    uint64_t v6 = operator new(0x50uLL);
    v9[1] = a1 + 1;
    v6[2] = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(_OWORD *)((char *)v6 + 56) = *(_OWORD *)(a3 + 24);
    *((void *)v6 + 9) = *(void *)(a3 + 40);
    *(void *)(a3 + 16) = 0;
    *(void *)(a3 + 24) = 0;
    *(void *)(a3 + 32) = 0;
    *(void *)(a3 + 40) = 0;
    char v10 = 1;
    sub_11220BC(a1, v11, v7, (uint64_t *)v6);
    v9[0] = 0;
    sub_1896350((uint64_t)v9, 0);
  }
  return v6;
}

uint64_t *sub_19DEDA0(uint64_t **a1, uint64_t a2)
{
  sub_19DEE3C((uint64_t)a1, a2, (uint64_t)v7);
  char v3 = (uint64_t **)sub_1122028((uint64_t)a1, &v6, (void **)v7[0] + 4);
  unint64_t v4 = *v3;
  if (!*v3)
  {
    sub_11220BC(a1, v6, v3, v7[0]);
    unint64_t v4 = v7[0];
    v7[0] = 0;
  }
  sub_1896350((uint64_t)v7, 0);
  return v4;
}

void sub_19DEE24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1896350((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

__n128 sub_19DEE3C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  sub_5E5C((void *)v6 + 4, *(char **)a2);
  __n128 result = *(__n128 *)(a2 + 8);
  *(__n128 *)(v6 + 56) = result;
  *((void *)v6 + 9) = *(void *)(a2 + 24);
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_19DEEAC(_Unwind_Exception *a1)
{
  sub_1896350(v1, 0);
  _Unwind_Resume(a1);
}

char *sub_19DEEC4(uint64_t **a1, void **a2, uint64_t a3)
{
  uint64_t v5 = (void **)sub_1122028((uint64_t)a1, &v11, a2);
  uint64_t v6 = (char *)*v5;
  if (!*v5)
  {
    long long v7 = (uint64_t **)v5;
    uint64_t v6 = (char *)operator new(0x1C0uLL);
    v9[1] = a1 + 1;
    *((_OWORD *)v6 + 2) = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    sub_19DEF8C((std::string *)(v6 + 56), a3 + 24);
    char v10 = 1;
    sub_11220BC(a1, v11, v7, (uint64_t *)v6);
    v9[0] = 0;
    sub_18F8A34((uint64_t)v9, 0);
  }
  return v6;
}

std::string *sub_19DEF8C(std::string *a1, uint64_t a2)
{
  sub_1429C48((uint64_t)a1, 0, 0);
  if (a1 != (std::string *)a2)
  {
    std::string::size_type size = a1->__r_.__value_.__l.__size_;
    if ((size & 2) != 0)
    {
      uint64_t v5 = 0;
    }
    else
    {
      uint64_t v5 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v5 = (void *)*v5;
      }
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if ((v6 & 2) != 0)
    {
      long long v7 = 0;
    }
    else
    {
      long long v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        long long v7 = (void *)*v7;
      }
    }
    if (v5 == v7) {
      sub_142D4D8((uint64_t)a1, a2);
    }
    else {
      sub_142D430(a1, a2);
    }
  }
  return a1;
}

void *sub_19DF02C(void *a1)
{
  *a1 = off_24E7FF0;
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2) {
    sub_20A69F0(v2);
  }
  return a1;
}

void sub_19DF078(void *a1)
{
  *a1 = off_24E7FF0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1) {
    sub_20A69F0(v1);
  }

  operator delete();
}

void *sub_19DF0E4(uint64_t a1)
{
  __n128 result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  *__n128 result = off_24E7FF0;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_19DF140(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = off_24E7FF0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_19DF178(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1) {
    sub_20A69F0(v1);
  }
}

void sub_19DF188(void *__p)
{
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2) {
    sub_20A69F0(v2);
  }

  operator delete(__p);
}

void sub_19DF1C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = (std::__shared_weak_count *)a2[1];
  uint64_t v6 = *a2;
  long long v7 = v3;
  *a2 = 0;
  a2[1] = 0;
  LOBYTE(v8) = 0;
  uint64_t v4 = (std::__shared_weak_count *)operator new(0x38uLL);
  v4->__shared_weak_owners_ = 0;
  v4->__shared_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)off_24E8060;
  sub_19DF3A8((uint64_t)&v4[1], &v6, (char *)&v8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)&long long v8 = v4 + 1;
  *((void *)&v8 + 1) = v4;
  atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  sub_18B26FC(v5, &v8);
  if (*((void *)&v8 + 1)) {
    sub_20A69F0(*((std::__shared_weak_count **)&v8 + 1));
  }
  sub_20A69F0(v4);
  if (v7) {
    sub_20A69F0(v7);
  }
}

void sub_19DF288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_20A69F0(a12);
  }
  sub_20A69F0(v12);
  if (a10) {
    sub_20A69F0(a10);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_19DF2C0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_19DF300()
{
}

void sub_19DF30C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24E8060;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_19DF32C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24E8060;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_19DF380(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

uint64_t sub_19DF3A8(uint64_t a1, uint64_t *a2, char *a3)
{
  uint64_t v5 = *a2;
  uint64_t v4 = (std::__shared_weak_count *)a2[1];
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  char v6 = *a3;
  *(void *)a1 = &off_24E7FA8;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    *(unsigned char *)(a1 + 24) = v6;
    sub_20A69F0(v4);
  }
  else
  {
    *(unsigned char *)(a1 + 24) = v6;
  }
  return a1;
}

void *sub_19DF424(void *a1)
{
  *a1 = off_24E80C0;
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2) {
    sub_20A69F0(v2);
  }
  return a1;
}

void sub_19DF470(void *a1)
{
  *a1 = off_24E80C0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1) {
    sub_20A69F0(v1);
  }

  operator delete();
}

void *sub_19DF4DC(uint64_t a1)
{
  __n128 result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  *__n128 result = off_24E80C0;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_19DF538(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = off_24E80C0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_19DF570(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1) {
    sub_20A69F0(v1);
  }
}

void sub_19DF580(void *__p)
{
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2) {
    sub_20A69F0(v2);
  }

  operator delete(__p);
}

void sub_19DF5C0(uint64_t a1)
{
  uint64_t v2 = (std::__shared_weak_count *)operator new(0x28uLL);
  v2->__shared_owners_ = 0;
  v2->__shared_weak_owners_ = 0;
  v2->__vftable = (std::__shared_weak_count_vtbl *)off_2438970;
  v2[1].__vftable = 0;
  v2[1].__shared_owners_ = 0;
  uint64_t v3 = (std::__shared_weak_count *)operator new(0x38uLL);
  v3->__shared_owners_ = 0;
  v3->__vftable = (std::__shared_weak_count_vtbl *)off_24E8060;
  v3->__shared_weak_owners_ = 0;
  v3[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24E7FA8;
  v3[1].__shared_owners_ = (uint64_t)&v2[1];
  v3[1].__shared_weak_owners_ = (uint64_t)v2;
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  LOBYTE(v3[2].__vftable) = 1;
  sub_20A69F0(v2);
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)&long long v5 = v3 + 1;
  *((void *)&v5 + 1) = v3;
  atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  sub_18B26FC(v4, &v5);
  if (*((void *)&v5 + 1)) {
    sub_20A69F0(*((std::__shared_weak_count **)&v5 + 1));
  }
  sub_20A69F0(v3);
}

void sub_19DF6C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_20A69F0(a10);
  }
  sub_20A69F0(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_19DF6F0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_19DF730()
{
}

void sub_19DF73C()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2626830, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_19E671C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_19E8728()
{
}

void sub_19E8734()
{
}

void sub_19E8744()
{
}

void sub_19E8750()
{
}

void sub_19E8760()
{
}

void sub_19E876C()
{
}

void sub_19E877C()
{
}

void sub_19E8788()
{
}

void sub_19E8798()
{
}

void sub_19E87A4()
{
}

void sub_19E87B4()
{
}

void sub_19E87C0()
{
}

void sub_19E87D0()
{
}

void sub_19E87DC()
{
}

void sub_19E87EC()
{
}

void sub_19E87F8()
{
}

void sub_19E8808()
{
}

void sub_19E8814()
{
}

void sub_19E8824()
{
}

void sub_19E8830()
{
}

void sub_19E8840()
{
}

void sub_19E884C()
{
}

void sub_19E885C()
{
}

void sub_19E8868()
{
}

void sub_19E8878()
{
}

void sub_19E8884()
{
}

void sub_19E8894()
{
}

void sub_19E88A0()
{
}

void sub_19E88B0()
{
}

void sub_19E88BC()
{
}

void sub_19E88CC()
{
}

void sub_19E88D8()
{
}

void sub_19E88E8()
{
}

void sub_19E88F4()
{
}

void sub_19E8904()
{
}

void sub_19E8910()
{
}

void sub_19E8920()
{
}

void sub_19E892C()
{
}

void sub_19E893C()
{
}

void sub_19E8948()
{
}

void sub_19E8958()
{
}

void sub_19E8964()
{
}

void sub_19E8974()
{
}

void sub_19E8980()
{
}

void sub_19E8990()
{
}

void sub_19E899C()
{
}

void sub_19E89AC()
{
}

void sub_19E89B8()
{
}

void sub_19E89C8()
{
}

void sub_19E89D4()
{
}

void sub_19E89E4()
{
}

void sub_19E89F0()
{
}

void sub_19E8A00()
{
}

void sub_19E8A0C()
{
}

void sub_19E8A1C()
{
}

void sub_19E8A28()
{
}

void sub_19E8A38()
{
}

void sub_19E8A44()
{
}

void sub_19E8A54()
{
}

void sub_19E8A60()
{
}

void sub_19E8A70()
{
}

void sub_19E8A7C()
{
}

void sub_19E8A8C()
{
}

void sub_19E8A98()
{
}

void sub_19E8AA8()
{
}

void sub_19E8AB4()
{
}

void sub_19E8AC4()
{
}

void sub_19E8AD0()
{
}

void sub_19E8AE0()
{
}

void sub_19E8AEC()
{
}

void sub_19E8AFC()
{
}

void sub_19E8B08()
{
}

void sub_19E8B18()
{
}

void sub_19E8B24()
{
}

void sub_19E8B34()
{
}

void sub_19E8B40()
{
}

void sub_19E8B50()
{
}

void sub_19E8B5C()
{
}

void sub_19E8B6C()
{
}

void sub_19E8B78()
{
}

void sub_19E8B88()
{
}

void sub_19E8B94()
{
}

void sub_19E8BA4()
{
}

void sub_19E8BB0()
{
}

void sub_19E8BC0()
{
}

void sub_19E8BCC()
{
}

void sub_19E8BDC()
{
}

void sub_19E8BE8()
{
}

void sub_19E8BF8()
{
}

void sub_19E8C04()
{
}

void sub_19E8C14()
{
}

void sub_19E8C20()
{
}

void sub_19E8C30()
{
}

void sub_19E8C3C()
{
}

void sub_19E8C4C()
{
}

void sub_19E8C58()
{
}

void sub_19E8C68()
{
}

void sub_19E8C74()
{
}

void sub_19E8C84()
{
}

void sub_19E8C90()
{
}

void sub_19E8CA0()
{
}

void sub_19E8CAC()
{
}

void sub_19E8CBC()
{
}

void sub_19E8CC8()
{
}

void sub_19E8CD8()
{
}

void sub_19E8CE4()
{
}

void sub_19E8CF4()
{
}

void sub_19E8D00()
{
}

void sub_19E8D10()
{
}

void sub_19E8D1C()
{
}

void sub_19E8D2C()
{
}

void sub_19E8D38()
{
}

void sub_19E8D48()
{
}

void sub_19E8D54()
{
}

void sub_19E8D64()
{
}

void sub_19E8D70()
{
}

void sub_19E8D80()
{
}

void sub_19E8D8C()
{
}

void sub_19E8D9C()
{
}

void sub_19E8DA8()
{
}

void sub_19E8DB8()
{
}

void sub_19E8DC4()
{
}

void sub_19E8DD4()
{
}

void sub_19E8DE0()
{
}

void sub_19E8DF0()
{
}

void sub_19E8DFC()
{
}

void sub_19E8E0C()
{
}

void sub_19E8E18()
{
}

void sub_19E8E28()
{
}

void sub_19E8E34()
{
}

void sub_19E8E44()
{
}

void sub_19E8E50()
{
}

void sub_19E8E60()
{
}

void sub_19E8E6C()
{
}

void sub_19E8E7C()
{
}

void sub_19E8E88()
{
}

void sub_19E8E98()
{
}

void sub_19E8EA4()
{
}

void sub_19E8EB4()
{
}

void sub_19E8EC0()
{
}

void sub_19E8ED0()
{
}

void sub_19E8EDC()
{
}

void sub_19E8EEC()
{
}

void sub_19E8EF8()
{
}

void sub_19E8F08()
{
}

void sub_19E8F14()
{
}

void sub_19E8F24()
{
}

void sub_19E8F30()
{
}

void sub_19E8F40()
{
}

void sub_19E8F4C()
{
}

void sub_19E8F5C()
{
}

void sub_19E8F68()
{
}

void sub_19E8F78()
{
}

void sub_19E8F84()
{
}

void sub_19E8F94()
{
}

void sub_19E8FA0()
{
}

void sub_19E8FB0()
{
}

void sub_19E8FBC()
{
}

void sub_19E8FCC()
{
}

void sub_19E8FD8()
{
}

void sub_19E8FE8()
{
}

void sub_19E8FF4()
{
}

void sub_19E9004()
{
}

void sub_19E9010()
{
}

void sub_19E9020()
{
}

void sub_19E902C()
{
}

void sub_19E903C()
{
}

void sub_19E9048()
{
}

void sub_19E9058()
{
}

void sub_19E9064()
{
}

void sub_19E9074()
{
}

void sub_19E9080()
{
}

void sub_19E9090()
{
}

void sub_19E909C()
{
}

void sub_19E90AC()
{
}

void sub_19E90B8()
{
}

void sub_19E90C8()
{
}

void sub_19E90D4()
{
}

void sub_19E90E4()
{
}

void sub_19E90F0()
{
}

void sub_19E9100()
{
}

void sub_19E910C()
{
}

void sub_19E911C()
{
}

void sub_19E9128()
{
}

void sub_19E9138()
{
}

void sub_19E9144()
{
}

void sub_19E9154()
{
}

void sub_19E9160()
{
}

void sub_19E9170()
{
}

void sub_19E917C()
{
}

void sub_19E918C()
{
}

void sub_19E9198()
{
}

void sub_19E91A8()
{
}

void sub_19E91B4()
{
}

void sub_19E91C4()
{
}

void sub_19E91D0()
{
}

void sub_19E91E0()
{
}

void sub_19E91EC()
{
}

void sub_19E91FC()
{
}

void sub_19E9208()
{
}

void sub_19E9218()
{
}

void sub_19E9224()
{
}

void sub_19E9234()
{
}

void sub_19E9240()
{
}

void sub_19E9250()
{
}

void sub_19E925C()
{
}

void sub_19E926C()
{
}

void sub_19E9278()
{
}

void sub_19E9288()
{
}

void sub_19E9294()
{
}

void sub_19E92A4()
{
}

void sub_19E92B0()
{
}

void sub_19E92C0()
{
}

void sub_19E92CC()
{
}

void sub_19E92DC()
{
}

void sub_19E92E8()
{
}

void sub_19E92F8()
{
}

void sub_19E9304()
{
}

void sub_19E9314()
{
}

void sub_19E9320()
{
}

void sub_19E9330()
{
}

void sub_19E933C()
{
}

void sub_19E934C()
{
}

void sub_19E9358()
{
}

void sub_19E9368()
{
}

void sub_19E9374()
{
}

void sub_19E9384()
{
}

void sub_19E9390()
{
}

void sub_19E93A0()
{
}

void sub_19E93AC()
{
}

void sub_19E93BC()
{
}

void sub_19E93C8()
{
}

void sub_19E93D8()
{
}

void sub_19E93E4()
{
}

void sub_19E93F4()
{
}

void sub_19E9400()
{
}

void sub_19E9410()
{
}

void sub_19E941C()
{
}

void sub_19E942C()
{
}

void sub_19E9438()
{
}

void sub_19E9448()
{
}

void sub_19E9454()
{
}

void sub_19E9464()
{
}

void sub_19E9470()
{
}

void sub_19E9480()
{
}

void sub_19E948C()
{
}

void sub_19E949C()
{
}

void sub_19E94A8()
{
}

void sub_19E94B8()
{
}

void sub_19E94C4()
{
}

void sub_19E94D4()
{
}

void sub_19E94E0()
{
}

void sub_19E94F0()
{
}

void sub_19E94FC()
{
}

void sub_19E950C()
{
}

void sub_19E9518()
{
}

void sub_19E9528()
{
}

void sub_19E9534()
{
}

void sub_19E9544()
{
}

void sub_19E9550()
{
}

void sub_19E9560()
{
}

void sub_19E956C()
{
}

void sub_19E957C()
{
}

void sub_19E9588()
{
}

void sub_19E9598()
{
}

void sub_19E95A4()
{
}

void sub_19E95B4()
{
}

void sub_19E95C0()
{
}

void sub_19E95D0()
{
}

void sub_19E95DC()
{
}

void sub_19E95EC()
{
}

void sub_19E95F8()
{
}

void sub_19E9608()
{
}

void sub_19E9614()
{
}

void sub_19E9624()
{
}

void sub_19E9630()
{
}

void sub_19E9640()
{
}

void sub_19E964C()
{
}

void sub_19E965C()
{
}

void sub_19E9668()
{
}

void sub_19E9674()
{
}

void sub_19E9680()
{
}

void sub_19E968C()
{
}

void sub_19E969C()
{
}

void sub_19E96A8()
{
}

void sub_19E96B8()
{
}

void sub_19E96C4()
{
}

void sub_19E96D4()
{
}

void sub_19E96E0()
{
}

void sub_19E96F0()
{
}

void sub_19E96FC()
{
}

void sub_19E970C()
{
}

void sub_19E9718()
{
}

void sub_19E9728()
{
}

void sub_19E9734()
{
}

void sub_19E9744()
{
}

void sub_19E9750()
{
}

void sub_19E9760()
{
}

void sub_19E976C()
{
}

void sub_19E977C()
{
}

void sub_19E9788()
{
}

void sub_19E9798()
{
}

void sub_19E97A4()
{
}

void sub_19E97B4()
{
}

void sub_19E97C0()
{
}

void sub_19E97D0()
{
}

void sub_19E97DC()
{
}

void sub_19E97EC()
{
}

void sub_19E97F8()
{
}

void sub_19E9808()
{
}

void sub_19E9814()
{
}

void sub_19E9824()
{
}

void sub_19E9830()
{
}

void sub_19E9840()
{
}

void sub_19E984C()
{
}

void sub_19E985C()
{
}

void sub_19E9868()
{
}

void sub_19E9878()
{
}

void sub_19E9884()
{
}

void sub_19E9894()
{
}

void sub_19E98A0()
{
}

void sub_19E98B0()
{
}

void sub_19E98BC()
{
}

void sub_19E98CC()
{
}

void sub_19E98D8()
{
}

void sub_19E98E8()
{
}

void sub_19E98F4()
{
}

void sub_19E9904()
{
}

void sub_19E9910()
{
}

void sub_19E9920()
{
}

void sub_19E992C()
{
}

void sub_19E993C()
{
}

void sub_19E9948()
{
}

void sub_19E9958()
{
}

void sub_19E9964()
{
}

void sub_19E9974()
{
}

void sub_19E9980()
{
}

void sub_19E9990()
{
}

void sub_19E999C()
{
}

void sub_19E99AC()
{
}

void sub_19E99B8()
{
}

void sub_19E99C8()
{
}

void sub_19E99D4()
{
}

void sub_19E99E4()
{
}

void sub_19E99F0()
{
}

void sub_19E9A00()
{
}

void sub_19E9A0C()
{
}

void sub_19E9A1C()
{
}

void sub_19E9A28()
{
}

void sub_19E9A38()
{
}

void sub_19E9A44()
{
}

void sub_19E9A54()
{
}

void sub_19E9A60()
{
}

void sub_19E9A70()
{
}

void sub_19E9A7C()
{
}

void sub_19E9A8C()
{
}

void sub_19E9A98()
{
}

void sub_19E9AA8()
{
}

void sub_19E9AB4()
{
}

void sub_19E9AC4()
{
}

void sub_19E9AD0()
{
}

void sub_19E9AE0()
{
}

void sub_19E9AEC()
{
}

void sub_19E9AFC()
{
}

void sub_19E9B08()
{
}

void sub_19E9B18()
{
}

void sub_19E9B24()
{
}

void sub_19E9B34()
{
}

void sub_19E9B40()
{
}

void sub_19E9B50()
{
}

void sub_19E9B5C()
{
}

void sub_19E9B6C()
{
}

void sub_19E9B78()
{
}

void sub_19E9B88()
{
}

void sub_19E9B94()
{
}

void sub_19E9BA4()
{
}

void sub_19E9BB0()
{
}

void sub_19E9BC0()
{
}

void sub_19E9BCC()
{
}

void sub_19E9BDC()
{
}

void sub_19E9BE8()
{
}

void sub_19E9BF8()
{
}

void sub_19E9C04()
{
}

void sub_19E9C14()
{
}

void sub_19E9C20()
{
}

void sub_19E9C30()
{
}

void sub_19E9C3C()
{
}

void sub_19E9C4C()
{
}

void sub_19E9C58()
{
}

void sub_19E9C68()
{
}

void sub_19E9C74()
{
}

void sub_19E9C84()
{
}

void sub_19E9C90()
{
}

void sub_19E9CA0()
{
}

void sub_19E9CAC()
{
}

void sub_19E9CBC()
{
}

void sub_19E9CC8()
{
}

void sub_19E9CD8()
{
}

void sub_19E9CE4()
{
}

void sub_19E9CF4()
{
}

void sub_19E9D00()
{
}

void sub_19E9D10()
{
}

void sub_19E9D1C()
{
}

void sub_19E9D2C()
{
}

void sub_19E9D38()
{
}

void sub_19E9D48()
{
}

void sub_19E9D54()
{
}

void sub_19E9D64()
{
}

void sub_19E9D70()
{
}

void sub_19E9D80()
{
}

void sub_19E9D8C()
{
}

void sub_19E9D9C()
{
}

void sub_19E9DA8()
{
}

void sub_19E9DB8()
{
}

void sub_19E9DC4()
{
}

void sub_19E9DD4()
{
}

void sub_19E9DE0()
{
}

void sub_19E9DF0()
{
}

void sub_19E9DFC()
{
}

void sub_19E9E0C()
{
}

void sub_19E9E18()
{
}

void sub_19E9E28()
{
}

void sub_19E9E34()
{
}

void sub_19E9E44()
{
}

void sub_19E9E50()
{
}

void sub_19E9E60()
{
}

void sub_19E9E6C()
{
}

void sub_19E9E7C()
{
}

void sub_19E9E88()
{
}

void sub_19E9E98()
{
}

void sub_19E9EA4()
{
}

void sub_19E9EB4()
{
}

void sub_19E9EC0()
{
}

void sub_19E9ED0()
{
}

void sub_19E9EDC()
{
}

void sub_19E9EEC()
{
}

void sub_19E9EF8()
{
}

void sub_19E9F08()
{
}

void sub_19E9F14()
{
}

void sub_19E9F24()
{
}

void sub_19E9F30()
{
}

void sub_19E9F40()
{
}

void sub_19E9F4C()
{
}

void sub_19E9F5C()
{
}

void sub_19E9F68()
{
}

void sub_19E9F78()
{
}

void sub_19E9F84()
{
}

void sub_19E9F94()
{
}

void sub_19E9FA0()
{
}

void sub_19E9FB0()
{
}

void sub_19E9FBC()
{
}

void sub_19E9FCC()
{
}

void sub_19E9FD8()
{
}

void sub_19E9FE8()
{
}

void sub_19E9FF4()
{
}

void sub_19EA004()
{
}

void sub_19EA010()
{
}

void sub_19EA020()
{
}

void sub_19EA02C()
{
}

void sub_19EA03C()
{
}

void sub_19EA048()
{
}

void sub_19EA058()
{
}

void sub_19EA064()
{
}

void sub_19EA074()
{
}

void sub_19EA080()
{
}

void sub_19EA090()
{
}

void sub_19EA09C()
{
}

void sub_19EA0AC()
{
}

void sub_19EA0B8()
{
}

void sub_19EA0C8()
{
}

void sub_19EA0D4()
{
}

void sub_19EA0E4()
{
}

void sub_19EA0F0()
{
}

void sub_19EA100()
{
}

void sub_19EA10C()
{
}

void sub_19EA11C()
{
}

void sub_19EA128()
{
}

void sub_19EA138()
{
}

void sub_19EA144()
{
}

void sub_19EA154()
{
}

void sub_19EA160()
{
}

void sub_19EA170()
{
}

void sub_19EA17C()
{
}

void sub_19EA18C()
{
}

void sub_19EA198()
{
}

void sub_19EA1A8()
{
}

void sub_19EA1B4()
{
}

void sub_19EA1C0()
{
}

void sub_19EA1D4()
{
}

void sub_19EA1E8()
{
}

void sub_19EA1F0()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_26267E8 = 0;
  qword_26267F0 = 0;
  qword_26267F8 = 0;
  qword_26267E8 = (uint64_t)operator new(0x18uLL);
  qword_26267F0 = qword_26267E8;
  qword_26267F8 = qword_26267E8 + 24;
  qword_26267F0 = (uint64_t)sub_18914E4((uint64_t)&qword_26267F8, (long long *)__p, &v2, (char *)qword_26267E8);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2626800 = 0;
  qword_2626808 = 0;
  qword_2626810 = 0;
  qword_2626800 = (uint64_t)operator new(0x18uLL);
  qword_2626808 = qword_2626800;
  qword_2626810 = qword_2626800 + 24;
  qword_2626808 = (uint64_t)sub_18914E4((uint64_t)&qword_2626810, (long long *)__p, &v2, (char *)qword_2626800);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2626818 = 0;
  qword_2626820 = 0;
  qword_2626828 = 0;
  qword_2626818 = (uint64_t)operator new(0x18uLL);
  qword_2626820 = qword_2626818;
  qword_2626828 = qword_2626818 + 24;
  qword_2626820 = (uint64_t)sub_18914E4((uint64_t)&qword_2626828, (long long *)__p, &v2, (char *)qword_2626818);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_19DF73C();
}

void sub_19EA394(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  qword_2626820 = v16;
  sub_1891624((void ***)&a9);
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

long long *sub_19EA3F8(uint64_t a1, uint64_t a2)
{
  return sub_19EAEC4((uint64_t *)(a1 + 80), *(long long **)(a1 + 88), *(std::string **)a2, *(void *)(a2 + 8), 0xF0F0F0F0F0F0F0F1 * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3));
}

void sub_19EA424(uint64_t a1@<X0>, char **a2@<X8>)
{
  if (*(unsigned char *)(a1 + 4))
  {
    if (*(char *)(a1 + 135) < 0)
    {
      sub_4200(__p, *(void **)(a1 + 112), *(void *)(a1 + 120));
    }
    else
    {
      *(_OWORD *)std::string __p = *(_OWORD *)(a1 + 112);
      uint64_t v6 = *(void *)(a1 + 128);
    }
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    int v4 = (char *)operator new(0x18uLL);
    *a2 = v4;
    a2[1] = v4;
    a2[2] = v4 + 24;
    a2[1] = sub_18914E4((uint64_t)(a2 + 2), (long long *)__p, &v7, v4);
    if (SHIBYTE(v6) < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    uint64_t v3 = a1 + 8;
    sub_1E4E86C(v3);
  }
}

void sub_19EA540(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

uint64_t sub_19EA57C(uint64_t a1)
{
  return sub_1E4E86C(a1 + 8);
}

void sub_19EA584(unsigned char *a1, uint64_t a2, int a3)
{
  sub_1C35694(a2, v8);
  sub_1FA9B1C((uint64_t *)v8, v9);
  char v10 = v8;
  sub_197A1EC((void ***)&v10);
  uint64_t v5 = v9[0];
  if (v9[1] != v9[0] && *(_DWORD *)v9[0] == a3)
  {
    if (a3 == 5)
    {
      a1[1] = 1;
      uint64_t v7 = v5 + 40;
      uint64_t v6 = (uint64_t)(a1 + 32);
    }
    else
    {
      if (a3 != 3) {
        goto LABEL_9;
      }
      *a1 = 1;
      uint64_t v6 = (uint64_t)(a1 + 8);
      uint64_t v7 = v5 + 40;
    }
    if (v6 != v7) {
      sub_69208(v6, *(std::string **)(v5 + 40), *(std::string **)(v5 + 48), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v5 + 48) - *(void *)(v5 + 40)) >> 3));
    }
  }
LABEL_9:
  v8[0] = (void **)v9;
  sub_1895654(v8);
}

void sub_19EA660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, uint64_t a12, char a13)
{
  a10 = (void **)&a13;
  sub_1895654(&a10);
  _Unwind_Resume(a1);
}

void sub_19EA690(uint64_t a1, uint64_t **a2)
{
  long long v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    uint64_t v5 = (char **)(a1 + 8);
    do
    {
      uint64_t v6 = *v2;
      int v7 = *(_DWORD *)(*v2 + 304);
      if (v7 != 3)
      {
        if (v7 == 1)
        {
          if (*(_DWORD *)(v6 + 296) != 2) {
            sub_11388B8();
          }
          sub_19EA424(v6, &v13);
          char v8 = (unsigned __int8 **)v13;
          int v9 = v14;
          if (v13 != v14)
          {
            char v10 = *(char **)(a1 + 16);
            do
            {
              unint64_t v11 = sub_1891CA8(*(void *)(a1 + 8), (uint64_t)v10, v8);
              char v10 = *(char **)(a1 + 16);
              if ((char *)v11 == v10)
              {
                unint64_t v12 = v11;
                if (v11 >= *(void *)(a1 + 24))
                {
                  char v10 = sub_1D740(v5, (uint64_t)v8);
                }
                else
                {
                  sub_1962E70(v5, (long long *)v8);
                  char v10 = (char *)(v12 + 24);
                }
                *(void *)(a1 + 16) = v10;
              }
              v8 += 3;
            }
            while (v8 != (unsigned __int8 **)v9);
          }
          *(unsigned char *)a1 = 1;
          long long v15 = &v13;
          sub_1891624((void ***)&v15);
        }
        else
        {
          *(unsigned char *)a1 = 0;
        }
      }
      v2 += 2;
    }
    while (v2 != v3);
  }
}

void sub_19EA7B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_1891624(&a12);
  _Unwind_Resume(a1);
}

void sub_19EA7D0(uint64_t a1, uint64_t **a2)
{
  long long v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    uint64_t v5 = (char **)(a1 + 32);
    do
    {
      uint64_t v6 = *v2;
      if (*(_DWORD *)(*v2 + 304) == 4)
      {
        *(unsigned char *)(a1 + 1) = 1;
        if (*(_DWORD *)(v6 + 296) != 4) {
          sub_11388B8();
        }
        sub_1E4E86C(v6 + 8);
        int v7 = v12;
        char v8 = v13;
        if (v12 != v13)
        {
          int v9 = *(char **)(a1 + 40);
          do
          {
            unint64_t v10 = sub_1891CA8(*(void *)(a1 + 32), (uint64_t)v9, v7);
            int v9 = *(char **)(a1 + 40);
            if ((char *)v10 == v9)
            {
              unint64_t v11 = v10;
              if (v10 >= *(void *)(a1 + 48))
              {
                int v9 = sub_1D740(v5, (uint64_t)v7);
              }
              else
              {
                sub_1962E70(v5, (long long *)v7);
                int v9 = (char *)(v11 + 24);
              }
              *(void *)(a1 + 40) = v9;
            }
            v7 += 3;
          }
          while (v7 != v8);
        }
        int v14 = &v12;
        sub_1891624((void ***)&v14);
      }
      else
      {
        *(unsigned char *)(a1 + 1) = 0;
      }
      v2 += 2;
    }
    while (v2 != v3);
  }
}

void sub_19EA8F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_1891624(&a12);
  _Unwind_Resume(a1);
}

void sub_19EA90C(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3569C(a2);
  if (sub_1C82484(v4))
  {
    sub_19EA584(a1, a2, 3);
    sub_19EA584(a1, a2, 5);
  }
  else
  {
    sub_1C35694(a2, v5);
    sub_19EA690((uint64_t)a1, v5);
    uint64_t v6 = (void **)v5;
    sub_197A1EC(&v6);
    sub_1C35694(a2, v5);
    sub_19EA7D0((uint64_t)a1, v5);
    uint64_t v6 = (void **)v5;
    sub_197A1EC(&v6);
  }
}

void sub_19EA9E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_197A1EC((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_19EA9FC(uint64_t *result, unsigned int a2)
{
  if ((int)a2 >= 1)
  {
    long long v2 = result;
    uint64_t v3 = result[10];
    uint64_t v4 = result[11];
    result += 10;
    unint64_t v5 = 0xF0F0F0F0F0F0F0F1 * ((v4 - v3) >> 3);
    if (v5 - 0x5C5F02A3A0FD5C5FLL * ((v2[8] - v2[7]) >> 3) > a2)
    {
      BOOL v6 = a2 >= v5;
      unint64_t v7 = a2 - v5;
      if (v6)
      {
        int v9 = result - 3;
        return (uint64_t *)sub_19EAB4C(v9, v7);
      }
      else
      {
        sub_19EAAB4(result, a2);
        char v8 = (uint64_t *)v2[7];
        for (__n128 result = (uint64_t *)v2[8]; result != v8; __n128 result = (uint64_t *)sub_1907F60((uint64_t)(result - 97)))
          ;
        v2[8] = (uint64_t)v8;
      }
    }
  }
  return result;
}

void sub_19EAAB4(uint64_t *a1, unint64_t a2)
{
  uint64_t v3 = a1[1];
  unint64_t v4 = 0xF0F0F0F0F0F0F0F1 * ((v3 - *a1) >> 3);
  BOOL v5 = a2 >= v4;
  unint64_t v6 = a2 - v4;
  if (v6 != 0 && v5)
  {
    sub_19EB490(a1, v6);
  }
  else if (!v5)
  {
    uint64_t v7 = *a1 + 136 * a2;
    while (v3 != v7)
    {
      v3 -= 136;
      sub_19770C4(v3);
    }
    a1[1] = v7;
  }
}

uint64_t sub_19EAB4C(uint64_t *a1, unint64_t a2)
{
  uint64_t result = a1[1];
  unint64_t v4 = 0xA3A0FD5C5F02A3A1 * ((result - *a1) >> 3);
  BOOL v5 = a2 >= v4;
  unint64_t v6 = a2 - v4;
  if (v6 != 0 && v5)
  {
    return sub_19EB614(a1, v6);
  }
  else if (!v5)
  {
    uint64_t v7 = *a1 + 776 * a2;
    while (result != v7)
      uint64_t result = sub_1907F60(result - 776);
    a1[1] = v7;
  }
  return result;
}

void *sub_19EABE0(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v4;
  }
  *((_DWORD *)__dst + 6) = *((_DWORD *)a2 + 6);
  if (*((char *)a2 + 55) < 0)
  {
    sub_4200((unsigned char *)__dst + 32, *((void **)a2 + 4), *((void *)a2 + 5));
  }
  else
  {
    long long v5 = a2[2];
    __dst[6] = *((void *)a2 + 6);
    *((_OWORD *)__dst + 2) = v5;
  }
  uint64_t v6 = *((void *)a2 + 7);
  __dst[8] = 0;
  __dst[7] = v6;
  __dst[9] = 0;
  __dst[10] = 0;
  sub_18D50DC(__dst + 8, *((void *)a2 + 8), *((void *)a2 + 9), (uint64_t)(*((void *)a2 + 9) - *((void *)a2 + 8)) >> 6);
  sub_1892544((uint64_t)(__dst + 11), (uint64_t)a2 + 88);
  __dst[16] = *((void *)a2 + 16);
  return __dst;
}

void sub_19EACB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (*(char *)(v10 + 23) < 0) {
    operator delete(*(void **)v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_19EACFC(uint64_t *result, void *a2)
{
  uint64_t v3 = result;
  long long v5 = (long long *)*result;
  long long v4 = (long long *)result[1];
  uint64_t v6 = a2[1];
  while (v4 != v5)
  {
    v6 -= 136;
    long long v4 = (long long *)((char *)v4 - 136);
    uint64_t result = (uint64_t *)sub_19EADD8(v6, v4);
  }
  a2[1] = v6;
  uint64_t v7 = *v3;
  *uint64_t v3 = v6;
  a2[1] = v7;
  uint64_t v8 = v3[1];
  v3[1] = a2[2];
  a2[2] = v8;
  uint64_t v9 = v3[2];
  v3[2] = a2[3];
  a2[3] = v9;
  *a2 = a2[1];
  return result;
}

void *sub_19EAD90(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x1E1E1E1E1E1E1E2) {
    sub_188D718();
  }
  return operator new(136 * a2);
}

uint64_t sub_19EADD8(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
  long long v5 = a2[2];
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(_OWORD *)(a1 + 32) = v5;
  *((void *)a2 + 5) = 0;
  *((void *)a2 + 6) = 0;
  *((void *)a2 + 4) = 0;
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 64) = a2[4];
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  *((void *)a2 + 8) = 0;
  *((void *)a2 + 9) = 0;
  *((void *)a2 + 10) = 0;
  sub_1893348(a1 + 88, (uint64_t *)a2 + 11);
  *(void *)(a1 + 128) = *((void *)a2 + 16);
  return a1;
}

uint64_t sub_19EAE74(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 136;
    sub_19770C4(i - 136);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

long long *sub_19EAEC4(uint64_t *a1, long long *a2, std::string *a3, uint64_t a4, uint64_t a5)
{
  long long v5 = a2;
  if (a5 >= 1)
  {
    uint64_t v7 = a3;
    uint64_t v11 = a1[2];
    uint64_t v9 = (uint64_t)(a1 + 2);
    uint64_t v10 = v11;
    unint64_t v12 = *(void *)(v9 - 8);
    if ((uint64_t)(0xF0F0F0F0F0F0F0F1 * ((uint64_t)(v11 - v12) >> 3)) >= a5)
    {
      uint64_t v20 = v12 - (void)a2;
      if ((uint64_t)(0xF0F0F0F0F0F0F0F1 * ((uint64_t)(v12 - (void)a2) >> 3)) >= a5)
      {
        char v21 = (std::string *)((char *)a3 + 136 * a5);
      }
      else
      {
        char v21 = (std::string *)((char *)a3 + 8 * ((uint64_t)(v12 - (void)a2) >> 3));
        a1[1] = sub_19EB238(v9, (uint64_t)v21, a4, *(void *)(v9 - 8));
        if (v20 < 1) {
          return v5;
        }
      }
      sub_19EB0B4((uint64_t)a1, (uint64_t)v5, v12, (uint64_t)v5 + 136 * a5);
      sub_19EB3CC((int)v27, v7, v21, (uint64_t)v5);
    }
    else
    {
      uint64_t v13 = *a1;
      unint64_t v14 = a5 - 0xF0F0F0F0F0F0F0FLL * ((uint64_t)(v12 - *a1) >> 3);
      if (v14 > 0x1E1E1E1E1E1E1E1) {
        sub_2E00();
      }
      unint64_t v15 = 0xF0F0F0F0F0F0F0F1 * (((uint64_t)a2 - v13) >> 3);
      unint64_t v16 = 0xF0F0F0F0F0F0F0F1 * ((v10 - v13) >> 3);
      uint64_t v17 = 2 * v16;
      if (2 * v16 <= v14) {
        uint64_t v17 = v14;
      }
      if (v16 >= 0xF0F0F0F0F0F0F0) {
        unint64_t v18 = 0x1E1E1E1E1E1E1E1;
      }
      else {
        unint64_t v18 = v17;
      }
      uint64_t v30 = v9;
      if (v18) {
        int v19 = (char *)sub_19EAD90(v9, v18);
      }
      else {
        int v19 = 0;
      }
      long long v22 = &v19[136 * v15];
      v27[0] = v19;
      v27[1] = v22;
      char v28 = v22;
      int v29 = &v19[136 * v18];
      uint64_t v23 = 17 * a5;
      int v24 = &v22[136 * a5];
      uint64_t v25 = 8 * v23;
      do
      {
        sub_19EABE0(v22, (long long *)v7);
        v22 += 136;
        uint64_t v7 = (std::string *)((char *)v7 + 136);
        v25 -= 136;
      }
      while (v25);
      char v28 = v24;
      long long v5 = (long long *)sub_19EB150(a1, v27, v5);
      sub_19EAE74((uint64_t)v27);
    }
  }
  return v5;
}

void sub_19EB088(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v12 + 8) = v13;
  _Unwind_Resume(exception_object);
}

uint64_t sub_19EB0B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = a2 + v6 - a4;
  uint64_t v8 = v6;
  if (v7 < a3)
  {
    uint64_t v10 = (long long *)(a2 + v6 - a4);
    uint64_t v8 = *(void *)(a1 + 8);
    do
    {
      sub_19EADD8(v8, v10);
      uint64_t v10 = (long long *)((char *)v10 + 136);
      v8 += 136;
    }
    while ((unint64_t)v10 < a3);
  }
  *(void *)(a1 + 8) = v8;
  return sub_19EB2BC((uint64_t)&v12, a2, v7, v6);
}

uint64_t sub_19EB150(uint64_t *a1, void *a2, long long *a3)
{
  uint64_t v3 = a3;
  uint64_t v6 = a2[1];
  unint64_t v7 = (long long *)*a1;
  uint64_t v8 = v6;
  if ((long long *)*a1 != a3)
  {
    uint64_t v9 = a3;
    uint64_t v8 = a2[1];
    do
    {
      v8 -= 136;
      uint64_t v9 = (long long *)((char *)v9 - 136);
      sub_19EADD8(v8, v9);
    }
    while (v9 != v7);
  }
  a2[1] = v8;
  uint64_t v10 = (long long *)a1[1];
  uint64_t v11 = a2[2];
  if (v10 != v3)
  {
    do
    {
      sub_19EADD8(v11, v3);
      uint64_t v3 = (long long *)((char *)v3 + 136);
      v11 += 136;
    }
    while (v3 != v10);
    uint64_t v8 = a2[1];
  }
  a2[2] = v11;
  uint64_t v12 = *a1;
  *a1 = v8;
  a2[1] = v12;
  uint64_t v13 = a1[1];
  a1[1] = a2[2];
  a2[2] = v13;
  uint64_t v14 = a1[2];
  a1[2] = a2[3];
  a2[3] = v14;
  *a2 = a2[1];
  return v6;
}

uint64_t sub_19EB238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_19EABE0((void *)(a4 + v7), (long long *)(a2 + v7));
      v7 += 136;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_19EB298(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 136;
    do
    {
      sub_19770C4(v4 + v2);
      v2 -= 136;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_19EB2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = a4 + v7;
      uint64_t v9 = (void **)(a4 + v7 - 136);
      if (*(char *)(a4 + v7 - 113) < 0) {
        operator delete(*v9);
      }
      uint64_t v10 = (long long *)(a3 + v7 - 136);
      long long v11 = *v10;
      *(void *)(a4 + v7 - 120) = *(void *)(a3 + v7 - 120);
      *(_OWORD *)uint64_t v9 = v11;
      *(unsigned char *)(a3 + v7 - 113) = 0;
      *(unsigned char *)uint64_t v10 = 0;
      *(_DWORD *)(v8 - 112) = *(_DWORD *)(a3 + v7 - 112);
      uint64_t v12 = v8 - 104;
      if (*(char *)(v8 - 81) < 0) {
        operator delete(*(void **)v12);
      }
      uint64_t v13 = a3 + v7;
      long long v14 = *(_OWORD *)(a3 + v7 - 104);
      *(void *)(v12 + 16) = *(void *)(a3 + v7 - 88);
      *(_OWORD *)uint64_t v12 = v14;
      *(unsigned char *)(v13 - 81) = 0;
      *(unsigned char *)(v13 - 104) = 0;
      uint64_t v15 = a4 + v7;
      *(void *)(a4 + v7 - 80) = *(void *)(a3 + v7 - 80);
      sub_19982B0((void **)(a4 + v7 - 72));
      *(_OWORD *)(v15 - 72) = *(_OWORD *)(a3 + v7 - 72);
      *(void *)(v15 - 56) = *(void *)(a3 + v7 - 56);
      *(void *)(v13 - 72) = 0;
      *(void *)(v13 - 64) = 0;
      *(void *)(v13 - 56) = 0;
      sub_1893CA4(a4 + v7 - 48, (uint64_t *)(a3 + v7 - 48));
      *(void *)(v15 - 8) = *(void *)(a3 + v7 - 8);
      v7 -= 136;
    }
    while (a3 + v7 != a2);
  }
  return a3;
}

std::string *sub_19EB3CC(int a1, std::string *__str, std::string *a3, uint64_t a4)
{
  uint64_t v4 = __str;
  if (__str == a3) {
    return __str;
  }
  long long v5 = a3;
  uint64_t v6 = a4 + 64;
  do
  {
    std::string::operator=((std::string *)(v6 - 64), v4);
    *(_DWORD *)(v6 - 40) = v4[1].__r_.__value_.__l.__data_;
    std::string::operator=((std::string *)(v6 - 32), (std::string *)((char *)v4 + 32));
    *(void *)(v6 - 8) = v4[2].__r_.__value_.__l.__size_;
    if ((std::string *)(v6 - 64) != v4)
    {
      sub_1998160(v6, (std::string *)v4[2].__r_.__value_.__r.__words[2], (std::string *)v4[3].__r_.__value_.__l.__data_, (uint64_t)(v4[3].__r_.__value_.__r.__words[0] - v4[2].__r_.__value_.__r.__words[2]) >> 6);
      *(_DWORD *)(v6 + 56) = v4[5].__r_.__value_.__l.__data_;
      sub_1894180((void *)(v6 + 24), (uint64_t *)v4[4].__r_.__value_.__l.__size_, 0);
    }
    *(void *)(v6 + 64) = v4[5].__r_.__value_.__l.__size_;
    v6 += 136;
    uint64_t v4 = (std::string *)((char *)v4 + 136);
  }
  while (v4 != v5);
  return v5;
}

uint64_t sub_19EB490(uint64_t *a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(void *)(result - 8);
  if (0xF0F0F0F0F0F0F0F1 * ((v6 - v7) >> 3) >= a2)
  {
    if (a2)
    {
      uint64_t v13 = v7 + 136 * a2;
      do
      {
        *(void *)uint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        *(void *)(v7 + 16) = 0;
        *(void *)(v7 + 40) = 0;
        *(void *)(v7 + 48) = 0;
        *(void *)(v7 + 32) = 0;
        *(_OWORD *)(v7 + 64) = 0uLL;
        *(_OWORD *)(v7 + 80) = 0uLL;
        *(_OWORD *)(v7 + 96) = 0uLL;
        *(void *)(v7 + 112) = 0;
        *(_DWORD *)(v7 + 120) = 1065353216;
        v7 += 136;
      }
      while (v7 != v13);
      uint64_t v7 = v13;
    }
    a1[1] = v7;
  }
  else
  {
    unint64_t v8 = 0xF0F0F0F0F0F0F0F1 * ((v7 - *a1) >> 3);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0x1E1E1E1E1E1E1E1) {
      sub_2E00();
    }
    unint64_t v10 = 0xF0F0F0F0F0F0F0F1 * ((v5 - *a1) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0xF0F0F0F0F0F0F0) {
      unint64_t v11 = 0x1E1E1E1E1E1E1E1;
    }
    else {
      unint64_t v11 = v9;
    }
    v16[4] = result;
    if (v11) {
      uint64_t v12 = (char *)sub_19EAD90(result, v11);
    }
    else {
      uint64_t v12 = 0;
    }
    long long v14 = &v12[136 * v8];
    v16[0] = v12;
    v16[1] = v14;
    void v16[3] = &v12[136 * v11];
    uint64_t v15 = &v14[136 * a2];
    do
    {
      *(void *)long long v14 = 0;
      *((void *)v14 + 1) = 0;
      *((void *)v14 + 2) = 0;
      *((void *)v14 + 5) = 0;
      *((void *)v14 + 6) = 0;
      *((void *)v14 + 4) = 0;
      *((_OWORD *)v14 + 4) = 0uLL;
      *((_OWORD *)v14 + 5) = 0uLL;
      *((_OWORD *)v14 + 6) = 0uLL;
      *((void *)v14 + 14) = 0;
      *((_DWORD *)v14 + 30) = 1065353216;
      v14 += 136;
    }
    while (v14 != v15);
    v16[2] = v15;
    sub_19EACFC(a1, v16);
    return sub_19EAE74((uint64_t)v16);
  }
  return result;
}

void sub_19EB600(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_19EAE74((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_19EB614(uint64_t *a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(void *)(v4 - 8);
  if (0xA3A0FD5C5F02A3A1 * ((v6 - v7) >> 3) >= a2)
  {
    return sub_19EB790((uint64_t)a1, a2);
  }
  else
  {
    unint64_t v8 = 0xA3A0FD5C5F02A3A1 * ((v7 - *a1) >> 3);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0x54741FAB8BE054) {
      sub_2E00();
    }
    unint64_t v10 = 0xA3A0FD5C5F02A3A1 * ((v5 - *a1) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x2A3A0FD5C5F02ALL) {
      unint64_t v11 = 0x54741FAB8BE054;
    }
    else {
      unint64_t v11 = v9;
    }
    uint64_t v20 = v4;
    if (v11) {
      uint64_t v12 = (char *)sub_19C222C(v4, v11);
    }
    else {
      uint64_t v12 = 0;
    }
    long long v14 = &v12[776 * v8];
    v17[0] = v12;
    v17[1] = v14;
    unint64_t v18 = v14;
    int v19 = &v12[776 * v11];
    uint64_t v15 = 776 * a2;
    unint64_t v16 = &v14[776 * a2];
    do
    {
      bzero(v14, 0x308uLL);
      sub_191B504((uint64_t)v14);
      *((_DWORD *)v14 + 192) = 0;
      v14 += 776;
      v15 -= 776;
    }
    while (v15);
    unint64_t v18 = v16;
    sub_19C21A4(a1, v17);
    return sub_19C236C((uint64_t)v17);
  }
}

void sub_19EB770(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_19C236C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_19EB790(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *(_DWORD **)(result + 8);
  if (a2)
  {
    uint64_t v4 = &v3[194 * a2];
    uint64_t v5 = 776 * a2;
    do
    {
      bzero(v3, 0x308uLL);
      uint64_t result = sub_191B504((uint64_t)v3);
      v3[192] = 0;
      v3 += 194;
      v5 -= 776;
    }
    while (v5);
    uint64_t v3 = v4;
  }
  *(void *)(v2 + 8) = v3;
  return result;
}

void sub_19EB7FC(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_19EB804()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2626890, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_19F27E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_19F47F0()
{
}

void sub_19F47FC()
{
}

void sub_19F480C()
{
}

void sub_19F4818()
{
}

void sub_19F4828()
{
}

void sub_19F4834()
{
}

void sub_19F4844()
{
}

void sub_19F4850()
{
}

void sub_19F4860()
{
}

void sub_19F486C()
{
}

void sub_19F487C()
{
}

void sub_19F4888()
{
}

void sub_19F4898()
{
}

void sub_19F48A4()
{
}

void sub_19F48B4()
{
}

void sub_19F48C0()
{
}

void sub_19F48D0()
{
}

void sub_19F48DC()
{
}

void sub_19F48EC()
{
}

void sub_19F48F8()
{
}

void sub_19F4908()
{
}

void sub_19F4914()
{
}

void sub_19F4924()
{
}

void sub_19F4930()
{
}

void sub_19F4940()
{
}

void sub_19F494C()
{
}

void sub_19F495C()
{
}

void sub_19F4968()
{
}

void sub_19F4978()
{
}

void sub_19F4984()
{
}

void sub_19F4994()
{
}

void sub_19F49A0()
{
}

void sub_19F49B0()
{
}

void sub_19F49BC()
{
}

void sub_19F49CC()
{
}

void sub_19F49D8()
{
}

void sub_19F49E8()
{
}

void sub_19F49F4()
{
}

void sub_19F4A04()
{
}

void sub_19F4A10()
{
}

void sub_19F4A20()
{
}

void sub_19F4A2C()
{
}

void sub_19F4A3C()
{
}

void sub_19F4A48()
{
}

void sub_19F4A58()
{
}

void sub_19F4A64()
{
}

void sub_19F4A74()
{
}

void sub_19F4A80()
{
}

void sub_19F4A90()
{
}

void sub_19F4A9C()
{
}

void sub_19F4AAC()
{
}

void sub_19F4AB8()
{
}

void sub_19F4AC8()
{
}

void sub_19F4AD4()
{
}

void sub_19F4AE4()
{
}

void sub_19F4AF0()
{
}

void sub_19F4B00()
{
}

void sub_19F4B0C()
{
}

void sub_19F4B1C()
{
}

void sub_19F4B28()
{
}

void sub_19F4B38()
{
}

void sub_19F4B44()
{
}

void sub_19F4B54()
{
}

void sub_19F4B60()
{
}

void sub_19F4B70()
{
}

void sub_19F4B7C()
{
}

void sub_19F4B8C()
{
}

void sub_19F4B98()
{
}

void sub_19F4BA8()
{
}

void sub_19F4BB4()
{
}

void sub_19F4BC4()
{
}

void sub_19F4BD0()
{
}

void sub_19F4BE0()
{
}

void sub_19F4BEC()
{
}

void sub_19F4BFC()
{
}

void sub_19F4C08()
{
}

void sub_19F4C18()
{
}

void sub_19F4C24()
{
}

void sub_19F4C34()
{
}

void sub_19F4C40()
{
}

void sub_19F4C50()
{
}

void sub_19F4C5C()
{
}

void sub_19F4C6C()
{
}

void sub_19F4C78()
{
}

void sub_19F4C88()
{
}

void sub_19F4C94()
{
}

void sub_19F4CA4()
{
}

void sub_19F4CB0()
{
}

void sub_19F4CC0()
{
}

void sub_19F4CCC()
{
}

void sub_19F4CDC()
{
}

void sub_19F4CE8()
{
}

void sub_19F4CF8()
{
}

void sub_19F4D04()
{
}

void sub_19F4D14()
{
}

void sub_19F4D20()
{
}

void sub_19F4D30()
{
}

void sub_19F4D3C()
{
}

void sub_19F4D4C()
{
}

void sub_19F4D58()
{
}

void sub_19F4D68()
{
}

void sub_19F4D74()
{
}

void sub_19F4D84()
{
}

void sub_19F4D90()
{
}

void sub_19F4DA0()
{
}

void sub_19F4DAC()
{
}

void sub_19F4DBC()
{
}

void sub_19F4DC8()
{
}

void sub_19F4DD8()
{
}

void sub_19F4DE4()
{
}

void sub_19F4DF4()
{
}

void sub_19F4E00()
{
}

void sub_19F4E10()
{
}

void sub_19F4E1C()
{
}

void sub_19F4E2C()
{
}

void sub_19F4E38()
{
}

void sub_19F4E48()
{
}

void sub_19F4E54()
{
}

void sub_19F4E64()
{
}

void sub_19F4E70()
{
}

void sub_19F4E80()
{
}

void sub_19F4E8C()
{
}

void sub_19F4E9C()
{
}

void sub_19F4EA8()
{
}

void sub_19F4EB8()
{
}

void sub_19F4EC4()
{
}

void sub_19F4ED4()
{
}

void sub_19F4EE0()
{
}

void sub_19F4EF0()
{
}

void sub_19F4EFC()
{
}

void sub_19F4F0C()
{
}

void sub_19F4F18()
{
}

void sub_19F4F28()
{
}

void sub_19F4F34()
{
}

void sub_19F4F44()
{
}

void sub_19F4F50()
{
}

void sub_19F4F60()
{
}

void sub_19F4F6C()
{
}

void sub_19F4F7C()
{
}

void sub_19F4F88()
{
}

void sub_19F4F98()
{
}

void sub_19F4FA4()
{
}

void sub_19F4FB4()
{
}

void sub_19F4FC0()
{
}

void sub_19F4FD0()
{
}

void sub_19F4FDC()
{
}

void sub_19F4FEC()
{
}

void sub_19F4FF8()
{
}

void sub_19F5008()
{
}

void sub_19F5014()
{
}

void sub_19F5024()
{
}

void sub_19F5030()
{
}

void sub_19F5040()
{
}

void sub_19F504C()
{
}

void sub_19F505C()
{
}

void sub_19F5068()
{
}

void sub_19F5078()
{
}

void sub_19F5084()
{
}

void sub_19F5094()
{
}

void sub_19F50A0()
{
}

void sub_19F50B0()
{
}

void sub_19F50BC()
{
}

void sub_19F50CC()
{
}

void sub_19F50D8()
{
}

void sub_19F50E8()
{
}

void sub_19F50F4()
{
}

void sub_19F5104()
{
}

void sub_19F5110()
{
}

void sub_19F5120()
{
}

void sub_19F512C()
{
}

void sub_19F513C()
{
}

void sub_19F5148()
{
}

void sub_19F5158()
{
}

void sub_19F5164()
{
}

void sub_19F5174()
{
}

void sub_19F5180()
{
}

void sub_19F5190()
{
}

void sub_19F519C()
{
}

void sub_19F51AC()
{
}

void sub_19F51B8()
{
}

void sub_19F51C8()
{
}

void sub_19F51D4()
{
}

void sub_19F51E4()
{
}

void sub_19F51F0()
{
}

void sub_19F5200()
{
}

void sub_19F520C()
{
}

void sub_19F521C()
{
}

void sub_19F5228()
{
}

void sub_19F5238()
{
}

void sub_19F5244()
{
}

void sub_19F5254()
{
}

void sub_19F5260()
{
}

void sub_19F5270()
{
}

void sub_19F527C()
{
}

void sub_19F528C()
{
}

void sub_19F5298()
{
}

void sub_19F52A8()
{
}

void sub_19F52B4()
{
}

void sub_19F52C4()
{
}

void sub_19F52D0()
{
}

void sub_19F52E0()
{
}

void sub_19F52EC()
{
}

void sub_19F52FC()
{
}

void sub_19F5308()
{
}

void sub_19F5318()
{
}

void sub_19F5324()
{
}

void sub_19F5334()
{
}

void sub_19F5340()
{
}

void sub_19F5350()
{
}

void sub_19F535C()
{
}

void sub_19F536C()
{
}

void sub_19F5378()
{
}

void sub_19F5388()
{
}

void sub_19F5394()
{
}

void sub_19F53A4()
{
}

void sub_19F53B0()
{
}

void sub_19F53C0()
{
}

void sub_19F53CC()
{
}

void sub_19F53DC()
{
}

void sub_19F53E8()
{
}

void sub_19F53F8()
{
}

void sub_19F5404()
{
}

void sub_19F5414()
{
}

void sub_19F5420()
{
}

void sub_19F5430()
{
}

void sub_19F543C()
{
}

void sub_19F544C()
{
}

void sub_19F5458()
{
}

void sub_19F5468()
{
}

void sub_19F5474()
{
}

void sub_19F5484()
{
}

void sub_19F5490()
{
}

void sub_19F54A0()
{
}

void sub_19F54AC()
{
}

void sub_19F54BC()
{
}

void sub_19F54C8()
{
}

void sub_19F54D8()
{
}

void sub_19F54E4()
{
}

void sub_19F54F4()
{
}

void sub_19F5500()
{
}

void sub_19F5510()
{
}

void sub_19F551C()
{
}

void sub_19F552C()
{
}

void sub_19F5538()
{
}

void sub_19F5548()
{
}

void sub_19F5554()
{
}

void sub_19F5564()
{
}

void sub_19F5570()
{
}

void sub_19F5580()
{
}

void sub_19F558C()
{
}

void sub_19F559C()
{
}

void sub_19F55A8()
{
}

void sub_19F55B8()
{
}

void sub_19F55C4()
{
}

void sub_19F55D4()
{
}

void sub_19F55E0()
{
}

void sub_19F55F0()
{
}

void sub_19F55FC()
{
}

void sub_19F560C()
{
}

void sub_19F5618()
{
}

void sub_19F5628()
{
}

void sub_19F5634()
{
}

void sub_19F5644()
{
}

void sub_19F5650()
{
}

void sub_19F5660()
{
}

void sub_19F566C()
{
}

void sub_19F567C()
{
}

void sub_19F5688()
{
}

void sub_19F5698()
{
}

void sub_19F56A4()
{
}

void sub_19F56B4()
{
}

void sub_19F56C0()
{
}

void sub_19F56D0()
{
}

void sub_19F56DC()
{
}

void sub_19F56EC()
{
}

void sub_19F56F8()
{
}

void sub_19F5708()
{
}

void sub_19F5714()
{
}

void sub_19F5724()
{
}

void sub_19F5730()
{
}

void sub_19F573C()
{
}

void sub_19F5748()
{
}

void sub_19F5754()
{
}

void sub_19F5764()
{
}

void sub_19F5770()
{
}

void sub_19F5780()
{
}

void sub_19F578C()
{
}

void sub_19F579C()
{
}

void sub_19F57A8()
{
}

void sub_19F57B8()
{
}

void sub_19F57C4()
{
}

void sub_19F57D4()
{
}

void sub_19F57E0()
{
}

void sub_19F57F0()
{
}

void sub_19F57FC()
{
}

void sub_19F580C()
{
}

void sub_19F5818()
{
}

void sub_19F5828()
{
}

void sub_19F5834()
{
}

void sub_19F5844()
{
}

void sub_19F5850()
{
}

void sub_19F5860()
{
}

void sub_19F586C()
{
}

void sub_19F587C()
{
}

void sub_19F5888()
{
}

void sub_19F5898()
{
}

void sub_19F58A4()
{
}

void sub_19F58B4()
{
}

void sub_19F58C0()
{
}

void sub_19F58D0()
{
}

void sub_19F58DC()
{
}

void sub_19F58EC()
{
}

void sub_19F58F8()
{
}

void sub_19F5908()
{
}

void sub_19F5914()
{
}

void sub_19F5924()
{
}

void sub_19F5930()
{
}

void sub_19F5940()
{
}

void sub_19F594C()
{
}

void sub_19F595C()
{
}

void sub_19F5968()
{
}

void sub_19F5978()
{
}

void sub_19F5984()
{
}

void sub_19F5994()
{
}

void sub_19F59A0()
{
}

void sub_19F59B0()
{
}

void sub_19F59BC()
{
}

void sub_19F59CC()
{
}

void sub_19F59D8()
{
}

void sub_19F59E8()
{
}

void sub_19F59F4()
{
}

void sub_19F5A04()
{
}

void sub_19F5A10()
{
}

void sub_19F5A20()
{
}

void sub_19F5A2C()
{
}

void sub_19F5A3C()
{
}

void sub_19F5A48()
{
}

void sub_19F5A58()
{
}

void sub_19F5A64()
{
}

void sub_19F5A74()
{
}

void sub_19F5A80()
{
}

void sub_19F5A90()
{
}

void sub_19F5A9C()
{
}

void sub_19F5AAC()
{
}

void sub_19F5AB8()
{
}

void sub_19F5AC8()
{
}

void sub_19F5AD4()
{
}

void sub_19F5AE4()
{
}

void sub_19F5AF0()
{
}

void sub_19F5B00()
{
}

void sub_19F5B0C()
{
}

void sub_19F5B1C()
{
}

void sub_19F5B28()
{
}

void sub_19F5B38()
{
}

void sub_19F5B44()
{
}

void sub_19F5B54()
{
}

void sub_19F5B60()
{
}

void sub_19F5B70()
{
}

void sub_19F5B7C()
{
}

void sub_19F5B8C()
{
}

void sub_19F5B98()
{
}

void sub_19F5BA8()
{
}

void sub_19F5BB4()
{
}

void sub_19F5BC4()
{
}

void sub_19F5BD0()
{
}

void sub_19F5BE0()
{
}

void sub_19F5BEC()
{
}

void sub_19F5BFC()
{
}

void sub_19F5C08()
{
}

void sub_19F5C18()
{
}

void sub_19F5C24()
{
}

void sub_19F5C34()
{
}

void sub_19F5C40()
{
}

void sub_19F5C50()
{
}

void sub_19F5C5C()
{
}

void sub_19F5C6C()
{
}

void sub_19F5C78()
{
}

void sub_19F5C88()
{
}

void sub_19F5C94()
{
}

void sub_19F5CA4()
{
}

void sub_19F5CB0()
{
}

void sub_19F5CC0()
{
}

void sub_19F5CCC()
{
}

void sub_19F5CDC()
{
}

void sub_19F5CE8()
{
}

void sub_19F5CF8()
{
}

void sub_19F5D04()
{
}

void sub_19F5D14()
{
}

void sub_19F5D20()
{
}

void sub_19F5D30()
{
}

void sub_19F5D3C()
{
}

void sub_19F5D4C()
{
}

void sub_19F5D58()
{
}

void sub_19F5D68()
{
}

void sub_19F5D74()
{
}

void sub_19F5D84()
{
}

void sub_19F5D90()
{
}

void sub_19F5DA0()
{
}

void sub_19F5DAC()
{
}

void sub_19F5DBC()
{
}

void sub_19F5DC8()
{
}

void sub_19F5DD8()
{
}

void sub_19F5DE4()
{
}

void sub_19F5DF4()
{
}

void sub_19F5E00()
{
}

void sub_19F5E10()
{
}

void sub_19F5E1C()
{
}

void sub_19F5E2C()
{
}

void sub_19F5E38()
{
}

void sub_19F5E48()
{
}

void sub_19F5E54()
{
}

void sub_19F5E64()
{
}

void sub_19F5E70()
{
}

void sub_19F5E80()
{
}

void sub_19F5E8C()
{
}

void sub_19F5E9C()
{
}

void sub_19F5EA8()
{
}

void sub_19F5EB8()
{
}

void sub_19F5EC4()
{
}

void sub_19F5ED4()
{
}

void sub_19F5EE0()
{
}

void sub_19F5EF0()
{
}

void sub_19F5EFC()
{
}

void sub_19F5F0C()
{
}

void sub_19F5F18()
{
}

void sub_19F5F28()
{
}

void sub_19F5F34()
{
}

void sub_19F5F44()
{
}

void sub_19F5F50()
{
}

void sub_19F5F60()
{
}

void sub_19F5F6C()
{
}

void sub_19F5F7C()
{
}

void sub_19F5F88()
{
}

void sub_19F5F98()
{
}

void sub_19F5FA4()
{
}

void sub_19F5FB4()
{
}

void sub_19F5FC0()
{
}

void sub_19F5FD0()
{
}

void sub_19F5FDC()
{
}

void sub_19F5FEC()
{
}

void sub_19F5FF8()
{
}

void sub_19F6008()
{
}

void sub_19F6014()
{
}

void sub_19F6024()
{
}

void sub_19F6030()
{
}

void sub_19F6040()
{
}

void sub_19F604C()
{
}

void sub_19F605C()
{
}

void sub_19F6068()
{
}

void sub_19F6078()
{
}

void sub_19F6084()
{
}

void sub_19F6094()
{
}

void sub_19F60A0()
{
}

void sub_19F60B0()
{
}

void sub_19F60BC()
{
}

void sub_19F60CC()
{
}

void sub_19F60D8()
{
}

void sub_19F60E8()
{
}

void sub_19F60F4()
{
}

void sub_19F6104()
{
}

void sub_19F6110()
{
}

void sub_19F6120()
{
}

void sub_19F612C()
{
}

void sub_19F613C()
{
}

void sub_19F6148()
{
}

void sub_19F6158()
{
}

void sub_19F6164()
{
}

void sub_19F6174()
{
}

void sub_19F6180()
{
}

void sub_19F6190()
{
}

void sub_19F619C()
{
}

void sub_19F61AC()
{
}

void sub_19F61B8()
{
}

void sub_19F61C8()
{
}

void sub_19F61D4()
{
}

void sub_19F61E4()
{
}

void sub_19F61F0()
{
}

void sub_19F6200()
{
}

void sub_19F620C()
{
}

void sub_19F621C()
{
}

void sub_19F6228()
{
}

void sub_19F6238()
{
}

void sub_19F6244()
{
}

void sub_19F6254()
{
}

void sub_19F6260()
{
}

void sub_19F6270()
{
}

void sub_19F627C()
{
}

void sub_19F6288()
{
}

void sub_19F629C()
{
}

void sub_19F62B0()
{
}

void sub_19F62B8()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2626848 = 0;
  qword_2626850 = 0;
  qword_2626858 = 0;
  qword_2626848 = (uint64_t)operator new(0x18uLL);
  qword_2626850 = qword_2626848;
  qword_2626858 = qword_2626848 + 24;
  qword_2626850 = (uint64_t)sub_18914E4((uint64_t)&qword_2626858, (long long *)__p, v4, (char *)qword_2626848);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2626860 = 0;
  qword_2626868 = 0;
  qword_2626870 = 0;
  qword_2626860 = (uint64_t)operator new(0x18uLL);
  qword_2626868 = qword_2626860;
  qword_2626870 = qword_2626860 + 24;
  qword_2626868 = (uint64_t)sub_18914E4((uint64_t)&qword_2626870, (long long *)__p, v4, (char *)qword_2626860);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2626878 = 0;
  qword_2626880 = 0;
  qword_2626888 = 0;
  qword_2626878 = (uint64_t)operator new(0x18uLL);
  qword_2626880 = qword_2626878;
  qword_2626888 = qword_2626878 + 24;
  qword_2626880 = (uint64_t)sub_18914E4((uint64_t)&qword_2626888, (long long *)__p, v4, (char *)qword_2626878);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_19EB804();
  sub_5E5C(__p, "en_US");
  LODWORD(v4[0]) = 0;
  sub_5E5C((void *)v4 + 1, "en-US_US");
  int v5 = 0;
  sub_5E5C(v6, "en_AU");
  int v7 = 1;
  sub_5E5C(v8, "en-AU_AU");
  int v9 = 1;
  sub_5E5C(v10, "en_CA");
  int v11 = 2;
  sub_5E5C(v12, "en-CA_CA");
  int v13 = 2;
  sub_5E5C(v14, "en_GB");
  int v15 = 3;
  sub_5E5C(v16, "en-GB_GB");
  int v17 = 3;
  sub_5E5C(v18, "en_IE");
  int v19 = 4;
  sub_5E5C(v20, "en-IE_IE");
  int v21 = 4;
  sub_5E5C(v22, "en_NZ");
  int v23 = 4;
  sub_5E5C(v24, "en-NZ_NZ");
  int v25 = 4;
  sub_5E5C(v26, "en_ZA");
  int v27 = 4;
  sub_5E5C(v28, "en-ZA_ZA");
  int v29 = 4;
  sub_1898F60((uint64_t)&unk_26268A8, (unsigned __int8 *)__p, 14);
  uint64_t v0 = 56;
  do
  {
    if (*((char *)&__p[v0 - 1] - 1) < 0) {
      operator delete(__p[v0 - 4]);
    }
    v0 -= 4;
  }
  while (v0 * 8);
  sub_5E5C(__p, "US");
  LODWORD(v4[0]) = 1;
  sub_5E5C((void *)v4 + 1, "AU");
  int v5 = 2;
  sub_5E5C(v6, "CA");
  int v7 = 3;
  sub_5E5C(v8, "GB");
  int v9 = 4;
  sub_5E5C(v10, "IE");
  int v11 = 5;
  sub_5E5C(v12, "NZ");
  int v13 = 5;
  sub_5E5C(v14, "ZA");
  int v15 = 5;
  sub_5E5C(v16, "ZA");
  int v17 = 5;
  sub_5E5C(v18, "IN");
  int v19 = 7;
  sub_5E5C(v20, "DE");
  int v21 = 6;
  sub_5E5C(v22, "CH");
  int v23 = 6;
  sub_5E5C(v24, "NL");
  int v25 = 6;
  sub_5E5C(v26, "DK");
  int v27 = 6;
  sub_5E5C(v28, "NO");
  int v29 = 6;
  sub_5E5C(v30, "FI");
  int v31 = 6;
  sub_5E5C(v32, "SE");
  int v33 = 6;
  sub_5E5C(v34, "BE");
  int v35 = 6;
  sub_5E5C(v36, "AT");
  int v37 = 6;
  sub_5E5C(v38, "MX");
  int v39 = 6;
  sub_5E5C(v40, "AR");
  int v41 = 6;
  sub_5E5C(v42, "CL");
  int v43 = 6;
  sub_5E5C(v44, "BR");
  int v45 = 6;
  sub_5E5C(v46, "SK");
  int v47 = 6;
  sub_5E5C(v48, "TR");
  int v49 = 6;
  sub_5E5C(v50, "PL");
  int v51 = 6;
  sub_5E5C(v52, "HR");
  int v53 = 6;
  sub_5E5C(v54, "RO");
  int v55 = 6;
  sub_5E5C(v56, "HU");
  int v57 = 6;
  sub_5E5C(v58, "VN");
  int v59 = 6;
  sub_5E5C(v60, "GR");
  int v61 = 6;
  sub_18993EC((uint64_t)&unk_26268D0, (unsigned __int8 *)__p, 30);
  uint64_t v1 = 120;
  do
  {
    if (*((char *)&__p[v1 - 1] - 1) < 0) {
      operator delete(__p[v1 - 4]);
    }
    v1 -= 4;
  }
  while (v1 * 8);
}

void sub_19F6974(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v19 = 960;
  while (1)
  {
    if (*(char *)(v17 + v19 - 9) < 0) {
      operator delete(*(void **)(v17 + v19 - 32));
    }
    v19 -= 32;
    if (!v19) {
      _Unwind_Resume(exception_object);
    }
  }
}

void sub_19F6B24(uint64_t a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X3>, long long *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v9 = *(void *)a1;
  int v10 = *(_DWORD *)(a1 + 8);
  int v11 = (std::__shared_weak_count *)a2[1];
  uint64_t v24 = *a2;
  int v25 = v11;
  if (v11) {
    atomic_fetch_add_explicit(&v11->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_18981AC((uint64_t)v23, a3);
  sub_18986B4((char *)__dst, a4);
  sub_19F7234(a6, v9, v10, (uint64_t)&v24, (uint64_t)v23, (long long *)__dst, a5);
  if (v22 < 0) {
    operator delete(__p);
  }
  if (v20 < 0) {
    operator delete(v19);
  }
  if (v18 < 0) {
    operator delete(v17);
  }
  char v26 = (void **)&v16;
  sub_1891624(&v26);
  char v26 = (void **)&v15;
  sub_1891624(&v26);
  char v26 = (void **)&v14;
  sub_1891624(&v26);
  if (v13 < 0) {
    operator delete(__dst[0]);
  }
  sub_1898634((uint64_t)v23);
  if (v25) {
    sub_20A69F0(v25);
  }
}

void sub_19F6C4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1896E94((uint64_t)va);
  sub_1898634(v2 - 128);
  if (*(void *)(v2 - 80)) {
    sub_20A69F0(*(std::__shared_weak_count **)(v2 - 80));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_19F6C88(uint64_t a1, unint64_t *a2)
{
  *(void *)(a1 + 16) = 0xB0000000BLL;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = os_log_create("com.apple.geo.MapsOfflineService", "Search");
  return a1;
}

void sub_19F6CE4(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  sub_1979DB4(&v17);
  v27[0] = off_24E7C18;
  v27[1] = sub_1DB3568;
  v27[3] = v27;
  sub_1EE689C((uint64_t)v17, (uint64_t)v27);
  sub_1977868(v27);
  v26[0] = off_24E7C18;
  v26[1] = sub_19DE770;
  void v26[3] = v26;
  sub_1EE689C((uint64_t)v17, (uint64_t)v26);
  sub_1977868(v26);
  char v8 = v17;
  uint64_t v9 = (std::__shared_weak_count *)a1[1];
  uint64_t v15 = *a1;
  uint64_t v16 = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  sub_1EE6AD4(v8, &v15, &v13);
  if (v14) {
    sub_20A69F0(v14);
  }
  if (v16) {
    sub_20A69F0(v16);
  }
  int v10 = (uint64_t *)v17;
  uint64_t v19 = a1;
  sub_182B188(v20, a2);
  uint64_t v21 = *a3;
  int v22 = *((_DWORD *)a3 + 2);
  sub_1978190((uint64_t)v23, a4);
  int v25 = 0;
  int v11 = operator new(0x120uLL);
  uint64_t v12 = v19;
  *int v11 = off_24E8140;
  v11[1] = v12;
  sub_182B188(v11 + 2, v20);
  v11[30] = v21;
  *((_DWORD *)v11 + 62) = v22;
  sub_1979A18((uint64_t)(v11 + 32), (uint64_t)v23);
  int v25 = v11;
  sub_1EE6CD8(v10, (uint64_t)v24);
  sub_197B0A8(v24);
  sub_1978228(v23);
  sub_182B32C(v20);
  if (v18) {
    sub_20A69F0(v18);
  }
}

void sub_19F6F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15)
{
  sub_197B0A8((void *)(v17 - 168));
  sub_1978228(v15);
  sub_182B32C(v16);
  if (a15) {
    sub_20A69F0(a15);
  }
  _Unwind_Resume(a1);
}

void sub_19F6FA0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1962C04(v10, a2);
  char v6 = (std::__shared_weak_count *)a1[1];
  v8[0] = *a1;
  v8[1] = (uint64_t)v6;
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_19F6B24((uint64_t)(a1 + 2), v8, a4, (long long *)v10, a1[4], (uint64_t)v9);
  if (v6) {
    sub_20A69F0(v6);
  }
  sub_19F7830(&v7);
  sub_504A4();
}

void sub_19F712C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13, char a14)
{
  sub_1978228((void *)(v14 - 88));
  sub_504E0(&a9);
  if (a11) {
    sub_20A69F0(a11);
  }
  sub_19F72C4((uint64_t)&a14);
  sub_1896E94(v14 - 256);
  _Unwind_Resume(a1);
}

void sub_19F717C()
{
  if (v0) {
    sub_20A69F0(v0);
  }
  JUMPOUT(0x19F716CLL);
}

void sub_19F7190()
{
}

void *sub_19F7198(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1978190((uint64_t)v6, a3);
  sub_19F6CE4(a1, a2, a1 + 2, (uint64_t)v6);
  return sub_1978228(v6);
}

void sub_19F7218(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1978228((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_19F7234(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, long long *a6, uint64_t a7)
{
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + 8) = a3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)a4;
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  sub_18981AC(a1 + 32, a5);
  sub_18986B4((char *)(a1 + 72), a6);
  *(void *)(a1 + 240) = a7;
  return a1;
}

void sub_19F729C(_Unwind_Exception *a1)
{
  sub_1898634(v2);
  int v4 = *(std::__shared_weak_count **)(v1 + 24);
  if (v4) {
    sub_20A69F0(v4);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_19F72C4(uint64_t a1)
{
  if (*(char *)(a1 + 239) < 0) {
    operator delete(*(void **)(a1 + 216));
  }
  if (*(char *)(a1 + 215) < 0) {
    operator delete(*(void **)(a1 + 192));
  }
  if (*(char *)(a1 + 191) < 0) {
    operator delete(*(void **)(a1 + 168));
  }
  int v4 = (void **)(a1 + 144);
  sub_1891624(&v4);
  int v4 = (void **)(a1 + 120);
  sub_1891624(&v4);
  int v4 = (void **)(a1 + 96);
  sub_1891624(&v4);
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  sub_1898634(a1 + 32);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (v2) {
    sub_20A69F0(v2);
  }
  return a1;
}

void *sub_19F7374(void *a1)
{
  *a1 = off_24E8140;
  uint64_t v2 = a1 + 2;
  sub_1978228(a1 + 32);
  sub_182B32C(v2);
  return a1;
}

void sub_19F73C8(void *a1)
{
  *a1 = off_24E8140;
  uint64_t v1 = a1 + 2;
  sub_1978228(a1 + 32);
  sub_182B32C(v1);

  operator delete();
}

void *sub_19F743C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = operator new(0x120uLL);
  *uint64_t v2 = off_24E8140;
  sub_19F77BC((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_19F7490(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_19F74A4(uint64_t a1, void *a2)
{
  *a2 = off_24E8140;
  return sub_19F77BC((uint64_t)(a2 + 1), a1 + 8);
}

uint64_t sub_19F74D0(uint64_t a1)
{
  sub_1978228((void *)(a1 + 256));

  return sub_182B32C(a1 + 16);
}

void sub_19F750C(void *a1)
{
  sub_1978228(a1 + 32);
  sub_182B32C(a1 + 2);

  operator delete(a1);
}

void sub_19F7550(uint64_t a1, uint64_t *a2)
{
  sub_1893348((uint64_t)v5, a2);
  char v3 = *(uint64_t **)(a1 + 8);
  sub_1978190((uint64_t)v6, a1 + 256);
  sub_19F6FA0(v3, a1 + 16, v4, (uint64_t)v5);
}

void sub_19F75F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (a2)
  {
    sub_1978228((void *)(v16 - 88));
    uint64_t v19 = __cxa_begin_catch(exception_object);
    char v20 = os_log_create("com.apple.geo.MapsOfflineService", "Search");
    BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);
    if (a2 == 2)
    {
      if (v21) {
        sub_19F79CC((uint64_t)v19, v20);
      }
      sub_18A4F94(1, (uint64_t)&a15);
      uint64_t v22 = *(void *)(v15 + 280);
      if (!v22) {
        sub_29F82C();
      }
    }
    else
    {
      if (v21) {
        sub_19F7A78(v20);
      }
      sub_18A4F94(1, (uint64_t)&a15);
      uint64_t v22 = *(void *)(v15 + 280);
      if (!v22) {
        sub_29F82C();
      }
    }
    (*(void (**)(uint64_t, char *))(*(void *)v22 + 48))(v22, &a15);
    sub_182E7B8(&a15);
    __cxa_end_catch();
    JUMPOUT(0x19F75B4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_19F7770(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_19F77B0()
{
}

uint64_t sub_19F77BC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_182B188(a1 + 8, a2 + 8);
  uint64_t v4 = *(void *)(a2 + 232);
  *(_DWORD *)(a1 + 240) = *(_DWORD *)(a2 + 240);
  *(void *)(a1 + 232) = v4;
  sub_1978190(a1 + 248, a2 + 248);
  return a1;
}

void sub_19F781C(_Unwind_Exception *a1)
{
  sub_182B32C(v1);
  _Unwind_Resume(a1);
}

void *sub_19F7830@<X0>(void *a1@<X8>)
{
  uint64_t v2 = operator new(0x220uLL);
  uint64_t result = sub_19F7894(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_19F7880(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_19F7894(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_24E81C0;
  sub_1BAC0BC(a1 + 3);
  return a1;
}

void sub_19F78DC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_19F78F0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24E81C0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_19F7910(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24E81C0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_19F7964(uint64_t a1)
{
  return sub_19F7970((void *)(a1 + 24));
}

uint64_t sub_19F7970(void *a1)
{
  sub_182B32C(a1 + 37);
  uint64_t v2 = (void *)a1[34];
  if (v2)
  {
    a1[35] = v2;
    operator delete(v2);
  }
  char v3 = (void *)a1[31];
  if (v3)
  {
    a1[32] = v3;
    operator delete(v3);
  }

  return sub_19F72C4((uint64_t)a1);
}

void sub_19F79CC(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 16))(a1);
  int v4 = 136315138;
  uint64_t v5 = v3;
  _os_log_error_impl(&def_332C, a2, OS_LOG_TYPE_ERROR, "Exception thrown while processing place request - .%s ", (uint8_t *)&v4, 0xCu);
}

void sub_19F7A78(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl(&def_332C, log, OS_LOG_TYPE_ERROR, "Exception thrown while processing place request ", v1, 2u);
}

void sub_19F7ABC()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2626940, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_19FEA9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_1A00AA8()
{
}

void sub_1A00AB4()
{
}

void sub_1A00AC4()
{
}

void sub_1A00AD0()
{
}

void sub_1A00AE0()
{
}

void sub_1A00AEC()
{
}

void sub_1A00AFC()
{
}

void sub_1A00B08()
{
}

void sub_1A00B18()
{
}

void sub_1A00B24()
{
}

void sub_1A00B34()
{
}

void sub_1A00B40()
{
}

void sub_1A00B50()
{
}

void sub_1A00B5C()
{
}

void sub_1A00B6C()
{
}

void sub_1A00B78()
{
}

void sub_1A00B88()
{
}

void sub_1A00B94()
{
}

void sub_1A00BA4()
{
}

void sub_1A00BB0()
{
}

void sub_1A00BC0()
{
}

void sub_1A00BCC()
{
}

void sub_1A00BDC()
{
}

void sub_1A00BE8()
{
}

void sub_1A00BF8()
{
}

void sub_1A00C04()
{
}

void sub_1A00C14()
{
}

void sub_1A00C20()
{
}

void sub_1A00C30()
{
}

void sub_1A00C3C()
{
}

void sub_1A00C4C()
{
}

void sub_1A00C58()
{
}

void sub_1A00C68()
{
}

void sub_1A00C74()
{
}

void sub_1A00C84()
{
}

void sub_1A00C90()
{
}

void sub_1A00CA0()
{
}

void sub_1A00CAC()
{
}

void sub_1A00CBC()
{
}

void sub_1A00CC8()
{
}

void sub_1A00CD8()
{
}

void sub_1A00CE4()
{
}

void sub_1A00CF4()
{
}

void sub_1A00D00()
{
}

void sub_1A00D10()
{
}

void sub_1A00D1C()
{
}

void sub_1A00D2C()
{
}

void sub_1A00D38()
{
}

void sub_1A00D48()
{
}

void sub_1A00D54()
{
}

void sub_1A00D64()
{
}

void sub_1A00D70()
{
}

void sub_1A00D80()
{
}

void sub_1A00D8C()
{
}

void sub_1A00D9C()
{
}

void sub_1A00DA8()
{
}

void sub_1A00DB8()
{
}

void sub_1A00DC4()
{
}

void sub_1A00DD4()
{
}

void sub_1A00DE0()
{
}

void sub_1A00DF0()
{
}

void sub_1A00DFC()
{
}

void sub_1A00E0C()
{
}

void sub_1A00E18()
{
}

void sub_1A00E28()
{
}

void sub_1A00E34()
{
}

void sub_1A00E44()
{
}

void sub_1A00E50()
{
}

void sub_1A00E60()
{
}

void sub_1A00E6C()
{
}

void sub_1A00E7C()
{
}

void sub_1A00E88()
{
}

void sub_1A00E98()
{
}

void sub_1A00EA4()
{
}

void sub_1A00EB4()
{
}

void sub_1A00EC0()
{
}

void sub_1A00ED0()
{
}

void sub_1A00EDC()
{
}

void sub_1A00EEC()
{
}

void sub_1A00EF8()
{
}

void sub_1A00F08()
{
}

void sub_1A00F14()
{
}

void sub_1A00F24()
{
}

void sub_1A00F30()
{
}

void sub_1A00F40()
{
}

void sub_1A00F4C()
{
}

void sub_1A00F5C()
{
}

void sub_1A00F68()
{
}

void sub_1A00F78()
{
}

void sub_1A00F84()
{
}

void sub_1A00F94()
{
}

void sub_1A00FA0()
{
}

void sub_1A00FB0()
{
}

void sub_1A00FBC()
{
}

void sub_1A00FCC()
{
}

void sub_1A00FD8()
{
}

void sub_1A00FE8()
{
}

void sub_1A00FF4()
{
}

void sub_1A01004()
{
}

void sub_1A01010()
{
}

void sub_1A01020()
{
}

void sub_1A0102C()
{
}

void sub_1A0103C()
{
}

void sub_1A01048()
{
}

void sub_1A01058()
{
}

void sub_1A01064()
{
}

void sub_1A01074()
{
}

void sub_1A01080()
{
}

void sub_1A01090()
{
}

void sub_1A0109C()
{
}

void sub_1A010AC()
{
}

void sub_1A010B8()
{
}

void sub_1A010C8()
{
}

void sub_1A010D4()
{
}

void sub_1A010E4()
{
}

void sub_1A010F0()
{
}

void sub_1A01100()
{
}

void sub_1A0110C()
{
}

void sub_1A0111C()
{
}

void sub_1A01128()
{
}

void sub_1A01138()
{
}

void sub_1A01144()
{
}

void sub_1A01154()
{
}

void sub_1A01160()
{
}

void sub_1A01170()
{
}

void sub_1A0117C()
{
}

void sub_1A0118C()
{
}

void sub_1A01198()
{
}

void sub_1A011A8()
{
}

void sub_1A011B4()
{
}

void sub_1A011C4()
{
}

void sub_1A011D0()
{
}

void sub_1A011E0()
{
}

void sub_1A011EC()
{
}

void sub_1A011FC()
{
}

void sub_1A01208()
{
}

void sub_1A01218()
{
}

void sub_1A01224()
{
}

void sub_1A01234()
{
}

void sub_1A01240()
{
}

void sub_1A01250()
{
}

void sub_1A0125C()
{
}

void sub_1A0126C()
{
}

void sub_1A01278()
{
}

void sub_1A01288()
{
}

void sub_1A01294()
{
}

void sub_1A012A4()
{
}

void sub_1A012B0()
{
}

void sub_1A012C0()
{
}

void sub_1A012CC()
{
}

void sub_1A012DC()
{
}

void sub_1A012E8()
{
}

void sub_1A012F8()
{
}

void sub_1A01304()
{
}

void sub_1A01314()
{
}

void sub_1A01320()
{
}

void sub_1A01330()
{
}

void sub_1A0133C()
{
}

void sub_1A0134C()
{
}

void sub_1A01358()
{
}

void sub_1A01368()
{
}

void sub_1A01374()
{
}

void sub_1A01384()
{
}

void sub_1A01390()
{
}

void sub_1A013A0()
{
}

void sub_1A013AC()
{
}

void sub_1A013BC()
{
}

void sub_1A013C8()
{
}

void sub_1A013D8()
{
}

void sub_1A013E4()
{
}

void sub_1A013F4()
{
}

void sub_1A01400()
{
}

void sub_1A01410()
{
}

void sub_1A0141C()
{
}

void sub_1A0142C()
{
}

void sub_1A01438()
{
}

void sub_1A01448()
{
}

void sub_1A01454()
{
}

void sub_1A01464()
{
}

void sub_1A01470()
{
}

void sub_1A01480()
{
}

void sub_1A0148C()
{
}

void sub_1A0149C()
{
}

void sub_1A014A8()
{
}

void sub_1A014B8()
{
}

void sub_1A014C4()
{
}

void sub_1A014D4()
{
}

void sub_1A014E0()
{
}

void sub_1A014F0()
{
}

void sub_1A014FC()
{
}

void sub_1A0150C()
{
}

void sub_1A01518()
{
}

void sub_1A01528()
{
}

void sub_1A01534()
{
}

void sub_1A01544()
{
}

void sub_1A01550()
{
}

void sub_1A01560()
{
}

void sub_1A0156C()
{
}

void sub_1A0157C()
{
}

void sub_1A01588()
{
}

void sub_1A01598()
{
}

void sub_1A015A4()
{
}

void sub_1A015B4()
{
}

void sub_1A015C0()
{
}

void sub_1A015D0()
{
}

void sub_1A015DC()
{
}

void sub_1A015EC()
{
}

void sub_1A015F8()
{
}

void sub_1A01608()
{
}

void sub_1A01614()
{
}

void sub_1A01624()
{
}

void sub_1A01630()
{
}

void sub_1A01640()
{
}

void sub_1A0164C()
{
}

void sub_1A0165C()
{
}

void sub_1A01668()
{
}

void sub_1A01678()
{
}

void sub_1A01684()
{
}

void sub_1A01694()
{
}

void sub_1A016A0()
{
}

void sub_1A016B0()
{
}

void sub_1A016BC()
{
}

void sub_1A016CC()
{
}

void sub_1A016D8()
{
}

void sub_1A016E8()
{
}

void sub_1A016F4()
{
}

void sub_1A01704()
{
}

void sub_1A01710()
{
}

void sub_1A01720()
{
}

void sub_1A0172C()
{
}

void sub_1A0173C()
{
}

void sub_1A01748()
{
}

void sub_1A01758()
{
}

void sub_1A01764()
{
}

void sub_1A01774()
{
}

void sub_1A01780()
{
}

void sub_1A01790()
{
}

void sub_1A0179C()
{
}

void sub_1A017AC()
{
}

void sub_1A017B8()
{
}

void sub_1A017C8()
{
}

void sub_1A017D4()
{
}

void sub_1A017E4()
{
}

void sub_1A017F0()
{
}

void sub_1A01800()
{
}

void sub_1A0180C()
{
}

void sub_1A0181C()
{
}

void sub_1A01828()
{
}

void sub_1A01838()
{
}

void sub_1A01844()
{
}

void sub_1A01854()
{
}

void sub_1A01860()
{
}

void sub_1A01870()
{
}

void sub_1A0187C()
{
}

void sub_1A0188C()
{
}

void sub_1A01898()
{
}

void sub_1A018A8()
{
}

void sub_1A018B4()
{
}

void sub_1A018C4()
{
}

void sub_1A018D0()
{
}

void sub_1A018E0()
{
}

void sub_1A018EC()
{
}

void sub_1A018FC()
{
}

void sub_1A01908()
{
}

void sub_1A01918()
{
}

void sub_1A01924()
{
}

void sub_1A01934()
{
}

void sub_1A01940()
{
}

void sub_1A01950()
{
}

void sub_1A0195C()
{
}

void sub_1A0196C()
{
}

void sub_1A01978()
{
}

void sub_1A01988()
{
}

void sub_1A01994()
{
}

void sub_1A019A4()
{
}

void sub_1A019B0()
{
}

void sub_1A019C0()
{
}

void sub_1A019CC()
{
}

void sub_1A019DC()
{
}

void sub_1A019E8()
{
}

void sub_1A019F4()
{
}

void sub_1A01A00()
{
}

void sub_1A01A0C()
{
}

void sub_1A01A1C()
{
}

void sub_1A01A28()
{
}

void sub_1A01A38()
{
}

void sub_1A01A44()
{
}

void sub_1A01A54()
{
}

void sub_1A01A60()
{
}

void sub_1A01A70()
{
}

void sub_1A01A7C()
{
}

void sub_1A01A8C()
{
}

void sub_1A01A98()
{
}

void sub_1A01AA8()
{
}

void sub_1A01AB4()
{
}

void sub_1A01AC4()
{
}

void sub_1A01AD0()
{
}

void sub_1A01AE0()
{
}

void sub_1A01AEC()
{
}

void sub_1A01AFC()
{
}

void sub_1A01B08()
{
}

void sub_1A01B18()
{
}

void sub_1A01B24()
{
}

void sub_1A01B34()
{
}

void sub_1A01B40()
{
}

void sub_1A01B50()
{
}

void sub_1A01B5C()
{
}

void sub_1A01B6C()
{
}

void sub_1A01B78()
{
}

void sub_1A01B88()
{
}

void sub_1A01B94()
{
}

void sub_1A01BA4()
{
}

void sub_1A01BB0()
{
}

void sub_1A01BC0()
{
}

void sub_1A01BCC()
{
}

void sub_1A01BDC()
{
}

void sub_1A01BE8()
{
}

void sub_1A01BF8()
{
}

void sub_1A01C04()
{
}

void sub_1A01C14()
{
}

void sub_1A01C20()
{
}

void sub_1A01C30()
{
}

void sub_1A01C3C()
{
}

void sub_1A01C4C()
{
}

void sub_1A01C58()
{
}

void sub_1A01C68()
{
}

void sub_1A01C74()
{
}

void sub_1A01C84()
{
}

void sub_1A01C90()
{
}

void sub_1A01CA0()
{
}

void sub_1A01CAC()
{
}

void sub_1A01CBC()
{
}

void sub_1A01CC8()
{
}

void sub_1A01CD8()
{
}

void sub_1A01CE4()
{
}

void sub_1A01CF4()
{
}

void sub_1A01D00()
{
}

void sub_1A01D10()
{
}

void sub_1A01D1C()
{
}

void sub_1A01D2C()
{
}

void sub_1A01D38()
{
}

void sub_1A01D48()
{
}

void sub_1A01D54()
{
}

void sub_1A01D64()
{
}

void sub_1A01D70()
{
}

void sub_1A01D80()
{
}

void sub_1A01D8C()
{
}

void sub_1A01D9C()
{
}

void sub_1A01DA8()
{
}

void sub_1A01DB8()
{
}

void sub_1A01DC4()
{
}

void sub_1A01DD4()
{
}

void sub_1A01DE0()
{
}

void sub_1A01DF0()
{
}

void sub_1A01DFC()
{
}

void sub_1A01E0C()
{
}

void sub_1A01E18()
{
}

void sub_1A01E28()
{
}

void sub_1A01E34()
{
}

void sub_1A01E44()
{
}

void sub_1A01E50()
{
}

void sub_1A01E60()
{
}

void sub_1A01E6C()
{
}

void sub_1A01E7C()
{
}

void sub_1A01E88()
{
}

void sub_1A01E98()
{
}

void sub_1A01EA4()
{
}

void sub_1A01EB4()
{
}

void sub_1A01EC0()
{
}

void sub_1A01ED0()
{
}

void sub_1A01EDC()
{
}

void sub_1A01EEC()
{
}

void sub_1A01EF8()
{
}

void sub_1A01F08()
{
}

void sub_1A01F14()
{
}

void sub_1A01F24()
{
}

void sub_1A01F30()
{
}

void sub_1A01F40()
{
}

void sub_1A01F4C()
{
}

void sub_1A01F5C()
{
}

void sub_1A01F68()
{
}

void sub_1A01F78()
{
}

void sub_1A01F84()
{
}

void sub_1A01F94()
{
}

void sub_1A01FA0()
{
}

void sub_1A01FB0()
{
}

void sub_1A01FBC()
{
}

void sub_1A01FCC()
{
}

void sub_1A01FD8()
{
}

void sub_1A01FE8()
{
}

void sub_1A01FF4()
{
}

void sub_1A02004()
{
}

void sub_1A02010()
{
}

void sub_1A02020()
{
}

void sub_1A0202C()
{
}

void sub_1A0203C()
{
}

void sub_1A02048()
{
}

void sub_1A02058()
{
}

void sub_1A02064()
{
}

void sub_1A02074()
{
}

void sub_1A02080()
{
}

void sub_1A02090()
{
}

void sub_1A0209C()
{
}

void sub_1A020AC()
{
}

void sub_1A020B8()
{
}

void sub_1A020C8()
{
}

void sub_1A020D4()
{
}

void sub_1A020E4()
{
}

void sub_1A020F0()
{
}

void sub_1A02100()
{
}

void sub_1A0210C()
{
}

void sub_1A0211C()
{
}

void sub_1A02128()
{
}

void sub_1A02138()
{
}

void sub_1A02144()
{
}

void sub_1A02154()
{
}

void sub_1A02160()
{
}

void sub_1A02170()
{
}

void sub_1A0217C()
{
}

void sub_1A0218C()
{
}

void sub_1A02198()
{
}

void sub_1A021A8()
{
}

void sub_1A021B4()
{
}

void sub_1A021C4()
{
}

void sub_1A021D0()
{
}

void sub_1A021E0()
{
}

void sub_1A021EC()
{
}

void sub_1A021FC()
{
}

void sub_1A02208()
{
}

void sub_1A02218()
{
}

void sub_1A02224()
{
}

void sub_1A02234()
{
}

void sub_1A02240()
{
}

void sub_1A02250()
{
}

void sub_1A0225C()
{
}

void sub_1A0226C()
{
}

void sub_1A02278()
{
}

void sub_1A02288()
{
}

void sub_1A02294()
{
}

void sub_1A022A4()
{
}

void sub_1A022B0()
{
}

void sub_1A022C0()
{
}

void sub_1A022CC()
{
}

void sub_1A022DC()
{
}

void sub_1A022E8()
{
}

void sub_1A022F8()
{
}

void sub_1A02304()
{
}

void sub_1A02314()
{
}

void sub_1A02320()
{
}

void sub_1A02330()
{
}

void sub_1A0233C()
{
}

void sub_1A0234C()
{
}

void sub_1A02358()
{
}

void sub_1A02368()
{
}

void sub_1A02374()
{
}

void sub_1A02384()
{
}

void sub_1A02390()
{
}

void sub_1A023A0()
{
}

void sub_1A023AC()
{
}

void sub_1A023BC()
{
}

void sub_1A023C8()
{
}

void sub_1A023D8()
{
}

void sub_1A023E4()
{
}

void sub_1A023F4()
{
}

void sub_1A02400()
{
}

void sub_1A02410()
{
}

void sub_1A0241C()
{
}

void sub_1A0242C()
{
}

void sub_1A02438()
{
}

void sub_1A02448()
{
}

void sub_1A02454()
{
}

void sub_1A02464()
{
}

void sub_1A02470()
{
}

void sub_1A02480()
{
}

void sub_1A0248C()
{
}

void sub_1A0249C()
{
}

void sub_1A024A8()
{
}

void sub_1A024B8()
{
}

void sub_1A024C4()
{
}

void sub_1A024D4()
{
}

void sub_1A024E0()
{
}

void sub_1A024F0()
{
}

void sub_1A024FC()
{
}

void sub_1A0250C()
{
}

void sub_1A02518()
{
}

void sub_1A02528()
{
}

void sub_1A02534()
{
}

void sub_1A02540()
{
}

void sub_1A02554()
{
}

void sub_1A02568()
{
}

void sub_1A02570()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_26268F8 = 0;
  qword_2626900 = 0;
  qword_2626908 = 0;
  qword_26268F8 = (uint64_t)operator new(0x18uLL);
  qword_2626900 = qword_26268F8;
  qword_2626908 = qword_26268F8 + 24;
  qword_2626900 = (uint64_t)sub_18914E4((uint64_t)&qword_2626908, (long long *)__p, &v2, (char *)qword_26268F8);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2626910 = 0;
  qword_2626918 = 0;
  qword_2626920 = 0;
  qword_2626910 = (uint64_t)operator new(0x18uLL);
  qword_2626918 = qword_2626910;
  qword_2626920 = qword_2626910 + 24;
  qword_2626918 = (uint64_t)sub_18914E4((uint64_t)&qword_2626920, (long long *)__p, &v2, (char *)qword_2626910);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2626928 = 0;
  qword_2626930 = 0;
  qword_2626938 = 0;
  qword_2626928 = (uint64_t)operator new(0x18uLL);
  qword_2626930 = qword_2626928;
  qword_2626938 = qword_2626928 + 24;
  qword_2626930 = (uint64_t)sub_18914E4((uint64_t)&qword_2626938, (long long *)__p, &v2, (char *)qword_2626928);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_19F7ABC();
}

void sub_1A02714(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  qword_2626930 = v16;
  sub_1891624((void ***)&a9);
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_1A02778@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = (void *)sub_5231C(a2);
  int v8 = sub_1AC1700((uint64_t)&v10, v7, a1, a3);
  return sub_1A027DC(a1, v8, a4);
}

uint64_t *sub_1A027DC@<X0>(uint64_t *result@<X0>, int a2@<W1>, void *a3@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = result[1];
  if (*result == v4)
  {
    return sub_5E5C(a3, "en");
  }
  else
  {
    if (0xAAAAAAAAAAAAAAABLL * ((v4 - v3) >> 3) <= a2) {
      sub_66748();
    }
    uint64_t v5 = (long long *)(v3 + 24 * a2);
    if (*((char *)v5 + 23) < 0)
    {
      uint64_t v7 = *(void **)v5;
      unint64_t v8 = *((void *)v5 + 1);
      return (uint64_t *)sub_4200(a3, v7, v8);
    }
    else
    {
      long long v6 = *v5;
      a3[2] = *((void *)v5 + 2);
      *(_OWORD *)a3 = v6;
    }
  }
  return result;
}

uint64_t sub_1A02884(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t *)sub_5231C(a2);
  char v21 = 0;
  uint64_t v22 = 0;
  long long v20 = 0;
  sub_8A6F8((char *)&v20, *v5, v5[1], 0xAAAAAAAAAAAAAAABLL * ((v5[1] - *v5) >> 3));
  uint64_t v6 = *(unsigned __int8 *)(a3 + 23);
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *(void *)(a3 + 8);
  }
  if (v6 == 2)
  {
    unint64_t v8 = v7 >= 0 ? (_WORD *)a3 : *(_WORD **)a3;
    if (*v8 == 19272)
    {
      char v11 = (long long *)v20;
      uint64_t v12 = (long long *)v21;
      if (v20 != v21)
      {
        while (1)
        {
          sub_5E5C(&__p, "zh-hans");
          int v13 = sub_2070218(v11, (long long *)&__p);
          if (v25 < 0) {
            operator delete((void *)__p.n128_u64[0]);
          }
          if (v13) {
            break;
          }
          char v11 = (long long *)((char *)v11 + 24);
          if (v11 == v12) {
            goto LABEL_8;
          }
        }
        int v14 = (long long *)v20;
        long long v15 = (long long *)v21;
        if (v20 == v21) {
          goto LABEL_30;
        }
        do
        {
          sub_5E5C(&__p, "zh-hant");
          int v16 = sub_2070218(v14, (long long *)&__p);
          if (v25 < 0) {
            operator delete((void *)__p.n128_u64[0]);
          }
          int v14 = (long long *)((char *)v14 + 24);
          if (v14 == v15) {
            int v17 = 1;
          }
          else {
            int v17 = v16;
          }
        }
        while (v17 != 1);
        if ((v16 & 1) == 0)
        {
          char v18 = (long long *)v20;
          int v14 = (long long *)v21;
          if (v20 != v21)
          {
            while (1)
            {
              sub_5E5C(&__p, "zh-hans");
              char v19 = sub_2070218(v18, (long long *)&__p);
              if (v25 < 0) {
                operator delete((void *)__p.n128_u64[0]);
              }
              if (v19) {
                break;
              }
              char v18 = (long long *)((char *)v18 + 24);
              if (v18 == v14) {
                goto LABEL_30;
              }
            }
            int v14 = v18;
          }
LABEL_30:
          sub_5E5C(&__p, "zh-hant");
          sub_8B3D0(&v20, (uint64_t)v14, &__p);
          if (v25 < 0) {
            operator delete((void *)__p.n128_u64[0]);
          }
        }
      }
    }
  }
LABEL_8:
  uint64_t v9 = sub_1AC1700((uint64_t)&v23, &v20, a1, a3);
  __p.n128_u64[0] = (unint64_t)&v20;
  sub_1891624((void ***)&__p);
  return v9;
}

void sub_1A02A8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t *a19)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  a19 = &a9;
  sub_1891624((void ***)&a19);
  _Unwind_Resume(a1);
}

uint64_t *sub_1A02ADC@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v6 = sub_1AC1700((uint64_t)&v8, a1, a2, a3);
  return sub_1A027DC(a2, v6, a4);
}

void sub_1A02B2C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  v16[0] = 0;
  v16[8] = 0;
  v16[16] = 0;
  v16[24] = 0;
  v16[32] = 0;
  v16[40] = 0;
  sub_1962DEC(a4, (uint64_t)&__p);
  unint64_t v5 = v15;
  if ((v15 & 0x80u) == 0) {
    p_p = (unsigned __int8 *)&__p;
  }
  else {
    p_p = (unsigned __int8 *)__p;
  }
  if ((v15 & 0x80u) != 0) {
    unint64_t v5 = v14;
  }
  if (v5 >= 7) {
    unint64_t v7 = 7;
  }
  else {
    unint64_t v7 = v5;
  }
  sub_11231DC((unint64_t *)&v17, p_p, v7);
  sub_11784F0((uint64_t)v16, v17);
  if ((char)v15 < 0) {
    operator delete(__p);
  }
  sub_1962E18(a4, (uint64_t)&__p);
  unint64_t v8 = v15;
  if ((v15 & 0x80u) == 0) {
    uint64_t v9 = (unsigned __int8 *)&__p;
  }
  else {
    uint64_t v9 = (unsigned __int8 *)__p;
  }
  if ((v15 & 0x80u) != 0) {
    unint64_t v8 = v14;
  }
  if (v8 >= 7) {
    unint64_t v10 = 7;
  }
  else {
    unint64_t v10 = v8;
  }
  sub_11231DC((unint64_t *)&v17, v9, v10);
  sub_11785D0((uint64_t)v16, v17);
  if ((char)v15 < 0) {
    operator delete(__p);
  }
  sub_1962E44(a4, (uint64_t)&__p);
  if ((v15 & 0x80u) == 0) {
    char v11 = (unsigned __int8 *)&__p;
  }
  else {
    char v11 = (unsigned __int8 *)__p;
  }
  if ((v15 & 0x80u) == 0) {
    unint64_t v12 = v15;
  }
  else {
    unint64_t v12 = v14;
  }
  sub_11786B8((uint64_t)v16, v11, v12);
  if ((char)v15 < 0) {
    operator delete(__p);
  }
  sub_1AC1830();
}

void sub_1A02D0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A02D30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = a2 + v6 - a4;
  uint64_t v8 = v6;
  if (v7 < a3)
  {
    unint64_t v9 = v7;
    uint64_t v8 = *(void *)(a1 + 8);
    do
    {
      long long v10 = *(_OWORD *)v9;
      *(void *)(v8 + 16) = *(void *)(v9 + 16);
      *(_OWORD *)uint64_t v8 = v10;
      v8 += 24;
      *(void *)(v9 + 8) = 0;
      *(void *)(v9 + 16) = 0;
      *(void *)unint64_t v9 = 0;
      v9 += 24;
    }
    while (v9 < a3);
  }
  *(void *)(a1 + 8) = v8;
  return sub_1A02E54((uint64_t)&v12, a2, v7, v6);
}

uint64_t sub_1A02DA0(uint64_t a1, void *a2, long long *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = a1 + 16;
  sub_188FEB0(a1 + 16, (uint64_t)a3, (uint64_t)a3, *(void *)a1, *(void *)a1, v6, v6);
  a2[1] = v8;
  a2[2] = sub_1A02EDC(v7, a3, *(long long **)(a1 + 8), a2[2]);
  uint64_t v9 = *(void *)a1;
  *(void *)a1 = a2[1];
  a2[1] = v9;
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = a2[2];
  a2[2] = v10;
  uint64_t v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

uint64_t sub_1A02E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
  {
    uint64_t v6 = a3;
    do
    {
      uint64_t v7 = a4 - 24;
      if (*(char *)(a4 - 1) < 0) {
        operator delete(*(void **)v7);
      }
      long long v8 = *(_OWORD *)(v6 - 24);
      *(void *)(v7 + 16) = *(void *)(v6 - 8);
      *(_OWORD *)uint64_t v7 = v8;
      *(unsigned char *)(v6 - 1) = 0;
      *(unsigned char *)(v6 - 24) = 0;
      a4 = v7;
      v6 -= 24;
    }
    while (v6 != a2);
  }
  return a3;
}

uint64_t sub_1A02EDC(uint64_t a1, long long *a2, long long *a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v9 = a4;
  v7[0] = a1;
  v7[1] = &v9;
  v7[2] = &v10;
  if (a2 != a3)
  {
    do
    {
      long long v5 = *a2;
      *(void *)(v4 + 16) = *((void *)a2 + 2);
      *(_OWORD *)uint64_t v4 = v5;
      v4 += 24;
      *((void *)a2 + 1) = 0;
      *((void *)a2 + 2) = 0;
      *(void *)a2 = 0;
      a2 = (long long *)((char *)a2 + 24);
    }
    while (a2 != a3);
    uint64_t v10 = v4;
  }
  char v8 = 1;
  sub_18915A4((uint64_t)v7);
  return v4;
}

void sub_1A02F5C()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_26269A0, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    char v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_1A09F3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_1A0BF48()
{
}

void sub_1A0BF54()
{
}

void sub_1A0BF64()
{
}

void sub_1A0BF70()
{
}

void sub_1A0BF80()
{
}

void sub_1A0BF8C()
{
}

void sub_1A0BF9C()
{
}

void sub_1A0BFA8()
{
}

void sub_1A0BFB8()
{
}

void sub_1A0BFC4()
{
}

void sub_1A0BFD4()
{
}

void sub_1A0BFE0()
{
}

void sub_1A0BFF0()
{
}

void sub_1A0BFFC()
{
}

void sub_1A0C00C()
{
}

void sub_1A0C018()
{
}

void sub_1A0C028()
{
}

void sub_1A0C034()
{
}

void sub_1A0C044()
{
}

void sub_1A0C050()
{
}

void sub_1A0C060()
{
}

void sub_1A0C06C()
{
}

void sub_1A0C07C()
{
}

void sub_1A0C088()
{
}

void sub_1A0C098()
{
}

void sub_1A0C0A4()
{
}

void sub_1A0C0B4()
{
}

void sub_1A0C0C0()
{
}

void sub_1A0C0D0()
{
}

void sub_1A0C0DC()
{
}

void sub_1A0C0EC()
{
}

void sub_1A0C0F8()
{
}

void sub_1A0C108()
{
}

void sub_1A0C114()
{
}

void sub_1A0C124()
{
}

void sub_1A0C130()
{
}

void sub_1A0C140()
{
}

void sub_1A0C14C()
{
}

void sub_1A0C15C()
{
}

void sub_1A0C168()
{
}

void sub_1A0C178()
{
}

void sub_1A0C184()
{
}

void sub_1A0C194()
{
}

void sub_1A0C1A0()
{
}

void sub_1A0C1B0()
{
}

void sub_1A0C1BC()
{
}

void sub_1A0C1CC()
{
}

void sub_1A0C1D8()
{
}

void sub_1A0C1E8()
{
}

void sub_1A0C1F4()
{
}

void sub_1A0C204()
{
}

void sub_1A0C210()
{
}

void sub_1A0C220()
{
}

void sub_1A0C22C()
{
}

void sub_1A0C23C()
{
}

void sub_1A0C248()
{
}

void sub_1A0C258()
{
}

void sub_1A0C264()
{
}

void sub_1A0C274()
{
}

void sub_1A0C280()
{
}

void sub_1A0C290()
{
}

void sub_1A0C29C()
{
}

void sub_1A0C2AC()
{
}

void sub_1A0C2B8()
{
}

void sub_1A0C2C8()
{
}

void sub_1A0C2D4()
{
}

void sub_1A0C2E4()
{
}

void sub_1A0C2F0()
{
}

void sub_1A0C300()
{
}

void sub_1A0C30C()
{
}

void sub_1A0C31C()
{
}

void sub_1A0C328()
{
}

void sub_1A0C338()
{
}

void sub_1A0C344()
{
}

void sub_1A0C354()
{
}

void sub_1A0C360()
{
}

void sub_1A0C370()
{
}

void sub_1A0C37C()
{
}

void sub_1A0C38C()
{
}

void sub_1A0C398()
{
}

void sub_1A0C3A8()
{
}

void sub_1A0C3B4()
{
}

void sub_1A0C3C4()
{
}

void sub_1A0C3D0()
{
}

void sub_1A0C3E0()
{
}

void sub_1A0C3EC()
{
}

void sub_1A0C3FC()
{
}

void sub_1A0C408()
{
}

void sub_1A0C418()
{
}

void sub_1A0C424()
{
}

void sub_1A0C434()
{
}

void sub_1A0C440()
{
}

void sub_1A0C450()
{
}

void sub_1A0C45C()
{
}

void sub_1A0C46C()
{
}

void sub_1A0C478()
{
}

void sub_1A0C488()
{
}

void sub_1A0C494()
{
}

void sub_1A0C4A4()
{
}

void sub_1A0C4B0()
{
}

void sub_1A0C4C0()
{
}

void sub_1A0C4CC()
{
}

void sub_1A0C4DC()
{
}

void sub_1A0C4E8()
{
}

void sub_1A0C4F8()
{
}

void sub_1A0C504()
{
}

void sub_1A0C514()
{
}

void sub_1A0C520()
{
}

void sub_1A0C530()
{
}

void sub_1A0C53C()
{
}

void sub_1A0C54C()
{
}

void sub_1A0C558()
{
}

void sub_1A0C568()
{
}

void sub_1A0C574()
{
}

void sub_1A0C584()
{
}

void sub_1A0C590()
{
}

void sub_1A0C5A0()
{
}

void sub_1A0C5AC()
{
}

void sub_1A0C5BC()
{
}

void sub_1A0C5C8()
{
}

void sub_1A0C5D8()
{
}

void sub_1A0C5E4()
{
}

void sub_1A0C5F4()
{
}

void sub_1A0C600()
{
}

void sub_1A0C610()
{
}

void sub_1A0C61C()
{
}

void sub_1A0C62C()
{
}

void sub_1A0C638()
{
}

void sub_1A0C648()
{
}

void sub_1A0C654()
{
}

void sub_1A0C664()
{
}

void sub_1A0C670()
{
}

void sub_1A0C680()
{
}

void sub_1A0C68C()
{
}

void sub_1A0C69C()
{
}

void sub_1A0C6A8()
{
}

void sub_1A0C6B8()
{
}

void sub_1A0C6C4()
{
}

void sub_1A0C6D4()
{
}

void sub_1A0C6E0()
{
}

void sub_1A0C6F0()
{
}

void sub_1A0C6FC()
{
}

void sub_1A0C70C()
{
}

void sub_1A0C718()
{
}

void sub_1A0C728()
{
}

void sub_1A0C734()
{
}

void sub_1A0C744()
{
}

void sub_1A0C750()
{
}

void sub_1A0C760()
{
}

void sub_1A0C76C()
{
}

void sub_1A0C77C()
{
}

void sub_1A0C788()
{
}

void sub_1A0C798()
{
}

void sub_1A0C7A4()
{
}

void sub_1A0C7B4()
{
}

void sub_1A0C7C0()
{
}

void sub_1A0C7D0()
{
}

void sub_1A0C7DC()
{
}

void sub_1A0C7EC()
{
}

void sub_1A0C7F8()
{
}

void sub_1A0C808()
{
}

void sub_1A0C814()
{
}

void sub_1A0C824()
{
}

void sub_1A0C830()
{
}

void sub_1A0C840()
{
}

void sub_1A0C84C()
{
}

void sub_1A0C85C()
{
}

void sub_1A0C868()
{
}

void sub_1A0C878()
{
}

void sub_1A0C884()
{
}

void sub_1A0C894()
{
}

void sub_1A0C8A0()
{
}

void sub_1A0C8B0()
{
}

void sub_1A0C8BC()
{
}

void sub_1A0C8CC()
{
}

void sub_1A0C8D8()
{
}

void sub_1A0C8E8()
{
}

void sub_1A0C8F4()
{
}

void sub_1A0C904()
{
}

void sub_1A0C910()
{
}

void sub_1A0C920()
{
}

void sub_1A0C92C()
{
}

void sub_1A0C93C()
{
}

void sub_1A0C948()
{
}

void sub_1A0C958()
{
}

void sub_1A0C964()
{
}

void sub_1A0C974()
{
}

void sub_1A0C980()
{
}

void sub_1A0C990()
{
}

void sub_1A0C99C()
{
}

void sub_1A0C9AC()
{
}

void sub_1A0C9B8()
{
}

void sub_1A0C9C8()
{
}

void sub_1A0C9D4()
{
}

void sub_1A0C9E4()
{
}

void sub_1A0C9F0()
{
}

void sub_1A0CA00()
{
}

void sub_1A0CA0C()
{
}

void sub_1A0CA1C()
{
}

void sub_1A0CA28()
{
}

void sub_1A0CA38()
{
}

void sub_1A0CA44()
{
}

void sub_1A0CA54()
{
}

void sub_1A0CA60()
{
}

void sub_1A0CA70()
{
}

void sub_1A0CA7C()
{
}

void sub_1A0CA8C()
{
}

void sub_1A0CA98()
{
}

void sub_1A0CAA8()
{
}

void sub_1A0CAB4()
{
}

void sub_1A0CAC4()
{
}

void sub_1A0CAD0()
{
}

void sub_1A0CAE0()
{
}

void sub_1A0CAEC()
{
}

void sub_1A0CAFC()
{
}

void sub_1A0CB08()
{
}

void sub_1A0CB18()
{
}

void sub_1A0CB24()
{
}

void sub_1A0CB34()
{
}

void sub_1A0CB40()
{
}

void sub_1A0CB50()
{
}

void sub_1A0CB5C()
{
}

void sub_1A0CB6C()
{
}

void sub_1A0CB78()
{
}

void sub_1A0CB88()
{
}

void sub_1A0CB94()
{
}

void sub_1A0CBA4()
{
}

void sub_1A0CBB0()
{
}

void sub_1A0CBC0()
{
}

void sub_1A0CBCC()
{
}

void sub_1A0CBDC()
{
}

void sub_1A0CBE8()
{
}

void sub_1A0CBF8()
{
}

void sub_1A0CC04()
{
}

void sub_1A0CC14()
{
}

void sub_1A0CC20()
{
}

void sub_1A0CC30()
{
}

void sub_1A0CC3C()
{
}

void sub_1A0CC4C()
{
}

void sub_1A0CC58()
{
}

void sub_1A0CC68()
{
}

void sub_1A0CC74()
{
}

void sub_1A0CC84()
{
}

void sub_1A0CC90()
{
}

void sub_1A0CCA0()
{
}

void sub_1A0CCAC()
{
}

void sub_1A0CCBC()
{
}

void sub_1A0CCC8()
{
}

void sub_1A0CCD8()
{
}

void sub_1A0CCE4()
{
}

void sub_1A0CCF4()
{
}

void sub_1A0CD00()
{
}

void sub_1A0CD10()
{
}

void sub_1A0CD1C()
{
}

void sub_1A0CD2C()
{
}

void sub_1A0CD38()
{
}

void sub_1A0CD48()
{
}

void sub_1A0CD54()
{
}

void sub_1A0CD64()
{
}

void sub_1A0CD70()
{
}

void sub_1A0CD80()
{
}

void sub_1A0CD8C()
{
}

void sub_1A0CD9C()
{
}

void sub_1A0CDA8()
{
}

void sub_1A0CDB8()
{
}

void sub_1A0CDC4()
{
}

void sub_1A0CDD4()
{
}

void sub_1A0CDE0()
{
}

void sub_1A0CDF0()
{
}

void sub_1A0CDFC()
{
}

void sub_1A0CE0C()
{
}

void sub_1A0CE18()
{
}

void sub_1A0CE28()
{
}

void sub_1A0CE34()
{
}

void sub_1A0CE44()
{
}

void sub_1A0CE50()
{
}

void sub_1A0CE60()
{
}

void sub_1A0CE6C()
{
}

void sub_1A0CE7C()
{
}

void sub_1A0CE88()
{
}

void sub_1A0CE94()
{
}

void sub_1A0CEA0()
{
}

void sub_1A0CEAC()
{
}

void sub_1A0CEBC()
{
}

void sub_1A0CEC8()
{
}

void sub_1A0CED8()
{
}

void sub_1A0CEE4()
{
}

void sub_1A0CEF4()
{
}

void sub_1A0CF00()
{
}

void sub_1A0CF10()
{
}

void sub_1A0CF1C()
{
}

void sub_1A0CF2C()
{
}

void sub_1A0CF38()
{
}

void sub_1A0CF48()
{
}

void sub_1A0CF54()
{
}

void sub_1A0CF64()
{
}

void sub_1A0CF70()
{
}

void sub_1A0CF80()
{
}

void sub_1A0CF8C()
{
}

void sub_1A0CF9C()
{
}

void sub_1A0CFA8()
{
}

void sub_1A0CFB8()
{
}

void sub_1A0CFC4()
{
}

void sub_1A0CFD4()
{
}

void sub_1A0CFE0()
{
}

void sub_1A0CFF0()
{
}

void sub_1A0CFFC()
{
}

void sub_1A0D00C()
{
}

void sub_1A0D018()
{
}

void sub_1A0D028()
{
}

void sub_1A0D034()
{
}

void sub_1A0D044()
{
}

void sub_1A0D050()
{
}

void sub_1A0D060()
{
}

void sub_1A0D06C()
{
}

void sub_1A0D07C()
{
}

void sub_1A0D088()
{
}

void sub_1A0D098()
{
}

void sub_1A0D0A4()
{
}

void sub_1A0D0B4()
{
}

void sub_1A0D0C0()
{
}

void sub_1A0D0D0()
{
}

void sub_1A0D0DC()
{
}

void sub_1A0D0EC()
{
}

void sub_1A0D0F8()
{
}

void sub_1A0D108()
{
}

void sub_1A0D114()
{
}

void sub_1A0D124()
{
}

void sub_1A0D130()
{
}

void sub_1A0D140()
{
}

void sub_1A0D14C()
{
}

void sub_1A0D15C()
{
}

void sub_1A0D168()
{
}

void sub_1A0D178()
{
}

void sub_1A0D184()
{
}

void sub_1A0D194()
{
}

void sub_1A0D1A0()
{
}

void sub_1A0D1B0()
{
}

void sub_1A0D1BC()
{
}

void sub_1A0D1CC()
{
}

void sub_1A0D1D8()
{
}

void sub_1A0D1E8()
{
}

void sub_1A0D1F4()
{
}

void sub_1A0D204()
{
}

void sub_1A0D210()
{
}

void sub_1A0D220()
{
}

void sub_1A0D22C()
{
}

void sub_1A0D23C()
{
}

void sub_1A0D248()
{
}

void sub_1A0D258()
{
}

void sub_1A0D264()
{
}

void sub_1A0D274()
{
}

void sub_1A0D280()
{
}

void sub_1A0D290()
{
}

void sub_1A0D29C()
{
}

void sub_1A0D2AC()
{
}

void sub_1A0D2B8()
{
}

void sub_1A0D2C8()
{
}

void sub_1A0D2D4()
{
}

void sub_1A0D2E4()
{
}

void sub_1A0D2F0()
{
}

void sub_1A0D300()
{
}

void sub_1A0D30C()
{
}

void sub_1A0D31C()
{
}

void sub_1A0D328()
{
}

void sub_1A0D338()
{
}

void sub_1A0D344()
{
}

void sub_1A0D354()
{
}

void sub_1A0D360()
{
}

void sub_1A0D370()
{
}

void sub_1A0D37C()
{
}

void sub_1A0D38C()
{
}

void sub_1A0D398()
{
}

void sub_1A0D3A8()
{
}

void sub_1A0D3B4()
{
}

void sub_1A0D3C4()
{
}

void sub_1A0D3D0()
{
}

void sub_1A0D3E0()
{
}

void sub_1A0D3EC()
{
}

void sub_1A0D3FC()
{
}

void sub_1A0D408()
{
}

void sub_1A0D418()
{
}

void sub_1A0D424()
{
}

void sub_1A0D434()
{
}

void sub_1A0D440()
{
}

void sub_1A0D450()
{
}

void sub_1A0D45C()
{
}

void sub_1A0D46C()
{
}

void sub_1A0D478()
{
}

void sub_1A0D488()
{
}

void sub_1A0D494()
{
}

void sub_1A0D4A4()
{
}

void sub_1A0D4B0()
{
}

void sub_1A0D4C0()
{
}

void sub_1A0D4CC()
{
}

void sub_1A0D4DC()
{
}

void sub_1A0D4E8()
{
}

void sub_1A0D4F8()
{
}

void sub_1A0D504()
{
}

void sub_1A0D514()
{
}

void sub_1A0D520()
{
}

void sub_1A0D530()
{
}

void sub_1A0D53C()
{
}

void sub_1A0D54C()
{
}

void sub_1A0D558()
{
}

void sub_1A0D568()
{
}

void sub_1A0D574()
{
}

void sub_1A0D584()
{
}

void sub_1A0D590()
{
}

void sub_1A0D5A0()
{
}

void sub_1A0D5AC()
{
}

void sub_1A0D5BC()
{
}

void sub_1A0D5C8()
{
}

void sub_1A0D5D8()
{
}

void sub_1A0D5E4()
{
}

void sub_1A0D5F4()
{
}

void sub_1A0D600()
{
}

void sub_1A0D610()
{
}

void sub_1A0D61C()
{
}

void sub_1A0D62C()
{
}

void sub_1A0D638()
{
}

void sub_1A0D648()
{
}

void sub_1A0D654()
{
}

void sub_1A0D664()
{
}

void sub_1A0D670()
{
}

void sub_1A0D680()
{
}

void sub_1A0D68C()
{
}

void sub_1A0D69C()
{
}

void sub_1A0D6A8()
{
}

void sub_1A0D6B8()
{
}

void sub_1A0D6C4()
{
}

void sub_1A0D6D4()
{
}

void sub_1A0D6E0()
{
}

void sub_1A0D6F0()
{
}

void sub_1A0D6FC()
{
}

void sub_1A0D70C()
{
}

void sub_1A0D718()
{
}

void sub_1A0D728()
{
}

void sub_1A0D734()
{
}

void sub_1A0D744()
{
}

void sub_1A0D750()
{
}

void sub_1A0D760()
{
}

void sub_1A0D76C()
{
}

void sub_1A0D77C()
{
}

void sub_1A0D788()
{
}

void sub_1A0D798()
{
}

void sub_1A0D7A4()
{
}

void sub_1A0D7B4()
{
}

void sub_1A0D7C0()
{
}

void sub_1A0D7D0()
{
}

void sub_1A0D7DC()
{
}

void sub_1A0D7EC()
{
}

void sub_1A0D7F8()
{
}

void sub_1A0D808()
{
}

void sub_1A0D814()
{
}

void sub_1A0D824()
{
}

void sub_1A0D830()
{
}

void sub_1A0D840()
{
}

void sub_1A0D84C()
{
}

void sub_1A0D85C()
{
}

void sub_1A0D868()
{
}

void sub_1A0D878()
{
}

void sub_1A0D884()
{
}

void sub_1A0D894()
{
}

void sub_1A0D8A0()
{
}

void sub_1A0D8B0()
{
}

void sub_1A0D8BC()
{
}

void sub_1A0D8CC()
{
}

void sub_1A0D8D8()
{
}

void sub_1A0D8E8()
{
}

void sub_1A0D8F4()
{
}

void sub_1A0D904()
{
}

void sub_1A0D910()
{
}

void sub_1A0D920()
{
}

void sub_1A0D92C()
{
}

void sub_1A0D93C()
{
}

void sub_1A0D948()
{
}

void sub_1A0D958()
{
}

void sub_1A0D964()
{
}

void sub_1A0D974()
{
}

void sub_1A0D980()
{
}

void sub_1A0D990()
{
}

void sub_1A0D99C()
{
}

void sub_1A0D9AC()
{
}

void sub_1A0D9B8()
{
}

void sub_1A0D9C8()
{
}

void sub_1A0D9D4()
{
}

void sub_1A0D9E0()
{
}

void sub_1A0D9F4()
{
}

void sub_1A0DA08()
{
}

void sub_1A0DA10()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2626958 = 0;
  qword_2626960 = 0;
  qword_2626968 = 0;
  qword_2626958 = (uint64_t)operator new(0x18uLL);
  qword_2626960 = qword_2626958;
  qword_2626968 = qword_2626958 + 24;
  qword_2626960 = (uint64_t)sub_18914E4((uint64_t)&qword_2626968, (long long *)__p, &v2, (char *)qword_2626958);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2626970 = 0;
  qword_2626978 = 0;
  qword_2626980 = 0;
  qword_2626970 = (uint64_t)operator new(0x18uLL);
  qword_2626978 = qword_2626970;
  qword_2626980 = qword_2626970 + 24;
  qword_2626978 = (uint64_t)sub_18914E4((uint64_t)&qword_2626980, (long long *)__p, &v2, (char *)qword_2626970);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2626988 = 0;
  qword_2626990 = 0;
  qword_2626998 = 0;
  qword_2626988 = (uint64_t)operator new(0x18uLL);
  qword_2626990 = qword_2626988;
  qword_2626998 = qword_2626988 + 24;
  qword_2626990 = (uint64_t)sub_18914E4((uint64_t)&qword_2626998, (long long *)__p, &v2, (char *)qword_2626988);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_1A02F5C();
}

void sub_1A0DBB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  qword_2626990 = v16;
  sub_1891624((void ***)&a9);
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_1A0DC18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (sub_18A5400(a1))
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    sub_182B188(v17, a1);
    sub_18A4B30((uint64_t)v17, (uint64_t)v18);
    sub_182B32C(v17);
    uint64_t v4 = *(void *)(a1 + 264);
    if (v4) {
      long long v5 = (double **)(v4 + 8);
    }
    else {
      long long v5 = 0;
    }
    uint64_t v6 = *(int *)(a1 + 256);
    if (v6)
    {
      uint64_t v7 = 8 * v6;
      do
      {
        char v8 = *v5;
        if (sub_1C0E4B0(*v5, v18))
        {
          sub_1C0E514((uint64_t)v8, (uint64_t)v18, v15);
          if (v16)
          {
            unint64_t v9 = a2[1];
            if (v9 >= a2[2])
            {
              uint64_t v10 = sub_1A1477C(a2);
            }
            else
            {
              sub_15B15F8(a2[1]);
              uint64_t v10 = v9 + 88;
              a2[1] = v9 + 88;
            }
            a2[1] = v10;
            if (v16) {
              sub_15B1678(v15);
            }
          }
        }
        ++v5;
        v7 -= 8;
      }
      while (v7);
    }
    return (void *)sub_15B1678(v18);
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 264);
    if (v12) {
      uint64_t v13 = v12 + 8;
    }
    else {
      uint64_t v13 = 0;
    }
    unint64_t v14 = *(int *)(a1 + 256);
    a2[1] = 0;
    a2[2] = 0;
    *a2 = 0;
    return sub_19773B0(a2, v13, v13 + 8 * v14, v14);
  }
}

void sub_1A0DD70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_182B32C(va);
  *(void *)(v15 - 136) = v14;
  sub_189589C((void ***)(v15 - 136));
  _Unwind_Resume(a1);
}

BOOL sub_1A0DDD4(uint64_t a1)
{
  return (*(unsigned char *)(sub_1C356A4(a1) + 16) & 1) != 0
      || *(int *)(sub_1C356A4(a1) + 32) > 0
      || *(_DWORD *)sub_1C356B4(a1) != 0;
}

uint64_t sub_1A0DE30(uint64_t a1)
{
  long long v2 = *(uint64_t (****)())(sub_1C3569C(a1) + 192);
  if (!v2) {
    long long v2 = &off_254C5C8;
  }
  if ((*((unsigned char *)v2 + 41) & 8) == 0) {
    return 0;
  }
  if (*(unsigned char *)(nullsub_1(a1) + 178)) {
    return 1;
  }
  sub_1C35694(a1, v6);
  uint64_t v4 = nullsub_1(a1);
  uint64_t v3 = sub_1FA8B24(v6, v4 + 472);
  uint64_t v7 = (void **)v6;
  sub_197A1EC(&v7);
  return v3;
}

void sub_1A0DEDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_197A1EC((void ***)va);
  _Unwind_Resume(a1);
}

void sub_1A0DEF4(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (*a1 != v3)
  {
    do
    {
      if (!*(_DWORD *)(v2 + 88))
      {
        if (*(_DWORD *)(v2 + 72) != 1) {
          sub_11388B8();
        }
        uint64_t v5 = 0;
        uint64_t v6 = 0;
        uint64_t v7 = 0;
        sub_1916FC0(&v5, *(void *)(v2 + 8), *(void *)(v2 + 16), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v2 + 16) - *(void *)(v2 + 8)) >> 8));
        sub_1A14974(a2, a2[1], v5, v6, 0xAAAAAAAAAAAAAAABLL * ((v6 - v5) >> 8));
        char v8 = (void **)&v5;
        sub_1916270(&v8);
      }
      v2 += 96;
    }
    while (v2 != v3);
  }
}

void sub_1A0DFBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_1A0DFF0(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1 != v4)
  {
    do
    {
      int v5 = *(_DWORD *)(v3 + 88);
      switch(v5)
      {
        case 3:
          if (*(_DWORD *)(v3 + 72) != 3) {
            sub_11388B8();
          }
          if (*(unsigned char *)(v3 + 64))
          {
            long long v13 = *(_OWORD *)(v3 + 8);
            sub_1892AD8((uint64_t)&v14, v3 + 24);
            int v15 = 2;
            sub_1A0E290(a2, (uint64_t)&v13);
            sub_1907F60((uint64_t)&v13);
          }
          break;
        case 1:
          if (*(_DWORD *)(v3 + 72)) {
            sub_11388B8();
          }
          char v11 = 0;
          uint64_t v12 = 0;
          uint64_t v10 = 0;
          sub_1894EF8(&v10, *(void *)(v3 + 8), *(void *)(v3 + 16), 0x8F9C18F9C18F9C19 * ((uint64_t)(*(void *)(v3 + 16) - *(void *)(v3 + 8)) >> 4));
          char v8 = v10;
          unint64_t v9 = v11;
          while (v8 != v9)
          {
            sub_1891E80((uint64_t)&v13, v8);
            int v15 = 0;
            sub_1A0E290(a2, (uint64_t)&v13);
            sub_1907F60((uint64_t)&v13);
            v8 += 41;
          }
          *(void *)&long long v13 = &v10;
          sub_1894FD8((void ***)&v13);
          break;
        case 0:
          if (*(_DWORD *)(v3 + 72) != 1) {
            sub_11388B8();
          }
          char v11 = 0;
          uint64_t v12 = 0;
          uint64_t v10 = 0;
          sub_1916FC0(&v10, *(void *)(v3 + 8), *(void *)(v3 + 16), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v3 + 16) - *(void *)(v3 + 8)) >> 8));
          uint64_t v6 = (uint64_t)v10;
          uint64_t v7 = v11;
          while ((long long *)v6 != v7)
          {
            sub_1907C7C((uint64_t)&v13, v6);
            int v15 = 1;
            sub_1A0E290(a2, (uint64_t)&v13);
            sub_1907F60((uint64_t)&v13);
            v6 += 768;
          }
          *(void *)&long long v13 = &v10;
          sub_1916270((void ***)&v13);
          break;
      }
      v3 += 96;
    }
    while (v3 != v4);
  }
}

void sub_1A0E204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1907F60((uint64_t)va);
  sub_1977124((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1A0E290(uint64_t *a1, uint64_t a2)
{
  unint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(v4 - 8);
  if (v7 >= v6)
  {
    unint64_t v10 = 0xA3A0FD5C5F02A3A1 * ((uint64_t)(v7 - *a1) >> 3);
    if (v10 + 1 > 0x54741FAB8BE054) {
      sub_2E00();
    }
    unint64_t v11 = 0xA3A0FD5C5F02A3A1 * ((uint64_t)(v5 - *a1) >> 3);
    uint64_t v12 = 2 * v11;
    if (2 * v11 <= v10 + 1) {
      uint64_t v12 = v10 + 1;
    }
    if (v11 >= 0x2A3A0FD5C5F02ALL) {
      unint64_t v13 = 0x54741FAB8BE054;
    }
    else {
      unint64_t v13 = v12;
    }
    uint64_t v19 = v4;
    if (v13) {
      uint64_t v14 = (char *)sub_19C222C(v4, v13);
    }
    else {
      uint64_t v14 = 0;
    }
    int v15 = v14;
    char v16 = &v14[776 * v10];
    char v18 = &v14[776 * v13];
    sub_19C2278((uint64_t)v16, a2);
    long long v17 = v16 + 776;
    sub_19C21A4(a1, &v15);
    uint64_t v9 = a1[1];
    uint64_t result = sub_19C236C((uint64_t)&v15);
  }
  else
  {
    uint64_t result = sub_19C2278(*(void *)(v4 - 8), a2);
    uint64_t v9 = v7 + 776;
    a1[1] = v7 + 776;
  }
  a1[1] = v9;
  return result;
}

void sub_1A0E3B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_19C236C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1A0E3CC(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A0DFF0(a1, v3);
  *(_WORD *)a2 = 0;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_OWORD *)(a2 + 88) = 0u;
  sub_1A0E464(a2, v3);
  uint64_t v4 = (void **)v3;
  sub_1977124(&v4);
}

void sub_1A0E440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  sub_196E9C8(v12);
  a12 = (void **)&a9;
  sub_1977124(&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_1A0E464(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  unint64_t v7 = (uint64_t *)(a1 + 56);
  while (v5 != v6)
    uint64_t v5 = sub_1907F60(v5 - 776);
  *(void *)(a1 + 64) = v6;
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v10 = 0xA3A0FD5C5F02A3A1 * ((v9 - *a2) >> 3);

  return sub_1A14BC0(v7, v6, v8, v9, v10);
}

void sub_1A0E4E8(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
}

void sub_1A0E5C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1977124((void ***)va);
  _Unwind_Resume(a1);
}

void sub_1A0E610(uint64_t *a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  *(_OWORD *)(a4 + 8) = 0u;
  uint64_t v8 = a4 + 8;
  *(_WORD *)a4 = 0;
  *(_OWORD *)(a4 + 24) = 0u;
  *(_OWORD *)(a4 + 40) = 0u;
  *(_OWORD *)(a4 + 56) = 0u;
  *(_OWORD *)(a4 + 72) = 0u;
  *(_OWORD *)(a4 + 88) = 0u;
  if (sub_1A0DE30((uint64_t)a2)) {
    sub_1A0E4E8(a1, (uint64_t *)&v12);
  }
  uint64_t v12 = a2;
  __int16 v13 = 0;
  memset(v14, 0, sizeof(v14));
  memset(v15, 0, sizeof(v15));
  uint64_t v9 = nullsub_1(a2);
  uint64_t v10 = sub_1A0E80C(&v12, a1, a3, v9 + 8);
  unint64_t v11 = v10;
  *(_WORD *)a4 = *(_WORD *)v10;
  if (v10 != (void **)a4)
  {
    sub_69208(v8, (std::string *)v10[1], (std::string *)v10[2], 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)v10[2] - (unsigned char *)v10[1]) >> 3));
    sub_69208(a4 + 32, (std::string *)v11[4], (std::string *)v11[5], 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)v11[5] - (unsigned char *)v11[4]) >> 3));
    sub_1A1A280(a4 + 56, (uint64_t)v11[7], (uint64_t)v11[8], 0xA3A0FD5C5F02A3A1 * (((unsigned char *)v11[8] - (unsigned char *)v11[7]) >> 3));
    sub_1A1A46C(a4 + 80, (std::string *)v11[10], (std::string *)v11[11], 0xF0F0F0F0F0F0F0F1 * (((unsigned char *)v11[11] - (unsigned char *)v11[10]) >> 3));
  }
  char v16 = (void **)&v15[1] + 1;
  sub_1977040(&v16);
  char v16 = (void **)v15;
  sub_1977124(&v16);
  char v16 = (void **)&v14[1] + 1;
  sub_1891624(&v16);
  char v16 = (void **)v14;
  sub_1891624(&v16);
}

void sub_1A0E7D0(_Unwind_Exception *a1)
{
  *(void *)(v3 - 56) = v2;
  sub_1977124((void ***)(v3 - 56));
  sub_196E9C8(v1);
  _Unwind_Resume(a1);
}

void **sub_1A0E80C(void **a1, uint64_t *a2, int a3, uint64_t a4)
{
  sub_1A17374(a1, a2, (uint64_t)v16);
  if (!a3) {
    goto LABEL_20;
  }
  sub_1A17474(a4, (uint64_t *)v15);
  uint64_t v7 = nullsub_1(*a1);
  if (!*(unsigned char *)(v7 + 1488))
  {
    uint64_t v9 = 0;
    goto LABEL_10;
  }
  uint64_t v8 = *(uint64_t ***)(v7 + 1472);
  uint64_t v9 = *(std::__shared_weak_count **)(v7 + 1480);
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v8 || !sub_1CC4980(v8))
  {
LABEL_10:
    sub_1A1A154(&v13);
    sub_1CC4980((uint64_t **)v13);
    if (v9) {
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  __int16 v13 = (void **)v8;
  uint64_t v14 = v9;
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
LABEL_11:
    sub_20A69F0(v9);
  }
LABEL_12:
  if (sub_1CC4980((uint64_t **)v13)) {
    sub_1CC49F0((id **)v13, (uint64_t)(a1 + 1), v16);
  }
  sub_1C4F444((uint64_t)(a1 + 1));
  uint64_t v10 = v15[0];
  unint64_t v11 = v15[1];
  while (v10 != v11)
  {
    (*(void (**)(void *, void **))(*(void *)*v10 + 16))(*v10, a1 + 1);
    v10 += 2;
  }
  if (v14) {
    sub_20A69F0(v14);
  }
  __int16 v13 = (void **)v15;
  sub_197A1EC(&v13);
LABEL_20:
  v15[0] = (void **)v16;
  sub_1A1A1FC(v15);
  return a1 + 1;
}

void sub_1A0E974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void ***a10, std::__shared_weak_count *a11, void **a12, uint64_t a13, uint64_t a14, char a15)
{
  if (a11) {
    sub_20A69F0(a11);
  }
  if (v15) {
    sub_20A69F0(v15);
  }
  a10 = &a12;
  sub_197A1EC((void ***)&a10);
  a12 = (void **)&a15;
  sub_1A1A1FC(&a12);
  _Unwind_Resume(a1);
}

void **sub_1A0E9E4(void **a1)
{
  uint64_t v3 = a1 + 11;
  sub_1977040(&v3);
  uint64_t v3 = a1 + 8;
  sub_1977124(&v3);
  uint64_t v3 = a1 + 5;
  sub_1891624(&v3);
  uint64_t v3 = a1 + 2;
  sub_1891624(&v3);
  return a1;
}

void sub_1A0EA50(uint64_t *a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v27 = 0;
  unint64_t v28 = 0;
  unint64_t v29 = 0;
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if (*a1 == v6) {
    goto LABEL_14;
  }
  unint64_t v10 = 0;
  do
  {
    if (!*(_DWORD *)(v5 + 88))
    {
      if (v10 >= v29)
      {
        unint64_t v10 = sub_19790A4(&v27, v5);
      }
      else
      {
        sub_19791C8(v10 + 8, v5 + 8);
        uint64_t v11 = *(void *)(v5 + 80);
        *(_DWORD *)(v10 + 88) = *(_DWORD *)(v5 + 88);
        *(void *)(v10 + 80) = v11;
        v10 += 96;
      }
      unint64_t v28 = v10;
    }
    v5 += 96;
  }
  while (v5 != v6);
  if (v27 == v10)
  {
LABEL_14:
    *(_WORD *)a4 = 0;
    *(_OWORD *)(a4 + 8) = 0u;
    *(_OWORD *)(a4 + 24) = 0u;
    *(_OWORD *)(a4 + 40) = 0u;
    *(_OWORD *)(a4 + 56) = 0u;
    *(_OWORD *)(a4 + 72) = 0u;
    *(_OWORD *)(a4 + 88) = 0u;
  }
  else
  {
    *(_OWORD *)(a4 + 8) = 0u;
    *(_WORD *)a4 = 0;
    *(_OWORD *)(a4 + 24) = 0u;
    *(_OWORD *)(a4 + 40) = 0u;
    *(_OWORD *)(a4 + 56) = 0u;
    *(_OWORD *)(a4 + 72) = 0u;
    *(_OWORD *)(a4 + 88) = 0u;
    if (*(_DWORD *)sub_1C356B4((uint64_t)a2) == 7 || !*(_DWORD *)sub_1C356B4((uint64_t)a2))
    {
      sub_1A0E610(&v27, a2, a3, (uint64_t)&v18);
      *(_WORD *)a4 = (_WORD)v18;
      sub_1893DB0((uint64_t *)(a4 + 8));
      *(_OWORD *)(a4 + 8) = v19;
      *(void *)(a4 + 24) = v20;
      uint64_t v20 = 0;
      long long v19 = 0uLL;
      sub_1893DB0((uint64_t *)(a4 + 32));
      *(_OWORD *)(a4 + 32) = v21;
      *(void *)(a4 + 48) = v22;
      uint64_t v22 = 0;
      long long v21 = 0uLL;
      sub_1A1A40C((void **)(a4 + 56));
      *(_OWORD *)(a4 + 56) = v23;
      *(void *)(a4 + 72) = v24;
      uint64_t v24 = 0;
      long long v23 = 0uLL;
      sub_1A1A5EC((void **)(a4 + 80));
      *(_OWORD *)(a4 + 80) = v25;
      *(void *)(a4 + 96) = v26;
      uint64_t v26 = 0;
      long long v25 = 0uLL;
      v17[0] = (void **)&v25;
      sub_1977040(v17);
      v17[0] = (void **)&v23;
      sub_1977124(v17);
      v17[0] = (void **)&v21;
      sub_1891624(v17);
      v17[0] = (void **)&v19;
      sub_1891624(v17);
      sub_1A3A540((uint64_t)a2, a4);
    }
    else
    {
      if (*(_DWORD *)sub_1C356B4((uint64_t)a2) == 9) {
        sub_1A0E4E8(a1, (uint64_t *)v17);
      }
      sub_1A0DEF4(a1, (uint64_t *)&v18);
      int v15 = v18;
      char v16 = (void **)v19;
      if (v18 == (void **)v19)
      {
        v17[0] = (void **)&v18;
        sub_1916270(v17);
        goto LABEL_21;
      }
      do
      {
        sub_1A17CE8(a4, (uint64_t)v15);
        v15 += 96;
      }
      while (v15 != v16);
      v17[0] = (void **)&v18;
      sub_1916270(v17);
    }
    uint64_t v13 = *(void *)(a4 + 56);
    uint64_t v12 = *(void *)(a4 + 64);
    if (0xA3A0FD5C5F02A3A1 * ((v12 - v13) >> 3) > *(int *)(nullsub_1(a2) + 24))
    {
      uint64_t v14 = nullsub_1(a2);
      sub_19EA9FC((uint64_t *)a4, *(_DWORD *)(v14 + 24));
    }
    if (*(_DWORD *)sub_1C356B4((uint64_t)a2) != 6 && *(_DWORD *)sub_1C356B4((uint64_t)a2) == 7) {
      operator new();
    }
  }
LABEL_21:
  char v18 = (void **)&v27;
  sub_19771A8(&v18);
}

void sub_1A0EE5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  sub_196E9C8(v12);
  a12 = (void **)(v13 - 96);
  sub_19771A8(&a12);
  _Unwind_Resume(a1);
}

void sub_1A0EF10(uint64_t *a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  if (sub_1A0DDD4((uint64_t)a2))
  {
    sub_1A0EA50(a1, a2, a3, a4);
  }
  else
  {
    sub_1A0E610(a1, a2, a3, a4);
  }
}

void sub_1A0EF9C(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_5E5C(__p, "search_params_2");
  uint64_t v4 = sub_1908254(a1, (unsigned __int8 *)__p);
  uint64_t v5 = v4;
  if (v171 < 0)
  {
    operator delete(__p[0]);
    if (!v5) {
      goto LABEL_6;
    }
  }
  else if (!v4)
  {
LABEL_6:
    *(_OWORD *)a2 = xmmword_2171800;
    *(_OWORD *)(a2 + 16) = xmmword_2171810;
    *(_OWORD *)(a2 + 32) = xmmword_2171820;
    *(_DWORD *)(a2 + 48) = 16843009;
    *(unsigned char *)(a2 + 52) = 1;
    *(_WORD *)(a2 + 53) = 0;
    *(unsigned char *)(a2 + 55) = 0;
    *(_OWORD *)(a2 + 56) = xmmword_2171830;
    *(void *)(a2 + 72) = 0x4170000042480000;
    *(_DWORD *)(a2 + 80) = 8;
    *(unsigned char *)(a2 + 84) = 1;
    *(void *)(a2 + 88) = 0x3FD999999999999ALL;
    *(void *)(a2 + 96) = 0x10000003CLL;
    *(_OWORD *)(a2 + 104) = xmmword_2171840;
    *(_OWORD *)(a2 + 120) = xmmword_2171850;
    *(_OWORD *)(a2 + 136) = xmmword_2171860;
    *(_OWORD *)(a2 + 152) = xmmword_2171870;
    *(_DWORD *)(a2 + 168) = 16777473;
    sub_5E5C(__p, "en");
    sub_5E5C(v172, "es");
    sub_5E5C(&v173, "de");
    sub_5E5C(v174, "fr");
    sub_5E5C(v175, "it");
    sub_5E5C(v176, "no");
    sub_5E5C(v177, "nb");
    sub_5E5C(v178, "fi");
    sub_5E5C(v179, "pt");
    sub_5E5C(v180, "nl");
    sub_5E5C(v181, "sv");
    sub_5E5C(&v182, "is");
    sub_5E5C(v183, "da");
    sub_5E5C(v184, "zh");
    sub_5E5C(v185, "ja");
    sub_5E5C(v186, "vi");
    sub_5E5C(v187, "th");
    sub_5E5C(&v188, "ms");
    sub_5E5C(v189, "tr");
    sub_5E5C(v190, "fil");
    sub_5E5C(v191, "bg");
    sub_5E5C(v192, "ru");
    sub_5E5C(v193, "ro");
    sub_5E5C(&v194, "pl");
    sub_5E5C(v195, "uk");
    sub_5E5C(v196, "cs");
    sub_5E5C(v197, "el");
    sub_5E5C(v198, "cy");
    sub_5E5C(v199, "hu");
    sub_5E5C(v200, "sk");
    sub_5E5C(v201, "hr");
    sub_5E5C(v202, "et");
    sub_5E5C(v203, "lt");
    sub_5E5C(v204, "lv");
    sub_5E5C(&v205, "mk");
    sub_5E5C(v206, "ca");
    sub_5E5C(v207, "bs");
    sub_5E5C(v208, "sr");
    sub_5E5C(v209, "sq");
    sub_5E5C(v210, "hi");
    sub_5E5C(v211, "id");
    sub_5E5C(v212, "jv");
    sub_5E5C(v213, "fj");
    sub_5E5C(v214, "my");
    sub_5E5C(&v215, "km");
    sub_5E5C(v216, "khm");
    sub_5E5C(v217, "bn");
    sub_5E5C(v218, "ben");
    sub_5E5C(v219, "dz");
    sub_5E5C(v220, "ne");
    sub_5E5C(v221, "ur");
    sub_5E5C(v222, "kk");
    sub_5E5C(v223, "tk");
    sub_5E5C(v224, "uz");
    *(void *)(a2 + 176) = 0;
    *(void *)(a2 + 184) = 0;
    *(void *)(a2 + 192) = 0;
    *(void *)&long long v127 = a2 + 176;
    BYTE8(v127) = 0;
    uint64_t v6 = (char *)operator new(0x510uLL);
    *(void *)(a2 + 192) = v6 + 1296;
    *(void *)(a2 + 176) = v6;
    *(void *)(a2 + 184) = v6;
    *(void *)(a2 + 184) = sub_18914E4(a2 + 192, (long long *)__p, &v225, v6);
    uint64_t v7 = 162;
    do
    {
      if (SHIBYTE(__p[v7 - 1]) < 0) {
        operator delete(*(void **)&v169[v7 * 8 + 24]);
      }
      v7 -= 3;
    }
    while (v7 * 8);
    sub_5E5C(__p, "IL");
    sub_5E5C(v172, "TN");
    sub_5E5C(&v173, "MA");
    sub_5E5C(v174, "IQ");
    sub_5E5C(v175, "IR");
    sub_5E5C(v176, "JO");
    sub_5E5C(v177, "LB");
    sub_5E5C(v178, "LY");
    sub_5E5C(v179, "EG");
    sub_5E5C(v180, "OM");
    sub_5E5C(v181, "YE");
    sub_5E5C(&v182, "SA");
    sub_5E5C(v183, "SY");
    sub_5E5C(v184, "BH");
    sub_5E5C(v185, "QA");
    sub_5E5C(v186, "AE");
    sub_5E5C(v187, "KW");
    sub_5E5C(&v188, "EH");
    sub_5E5C(v189, "NE");
    sub_5E5C(v190, "ML");
    sub_5E5C(v191, "TD");
    sub_5E5C(v192, "MR");
    sub_5E5C(v193, "SD");
    *(void *)(a2 + 200) = 0;
    *(void *)(a2 + 208) = 0;
    *(void *)(a2 + 216) = 0;
    *(void *)&long long v127 = a2 + 200;
    BYTE8(v127) = 0;
    uint64_t v8 = (char *)operator new(0x228uLL);
    *(void *)(a2 + 216) = v8 + 552;
    *(void *)(a2 + 200) = v8;
    *(void *)(a2 + 208) = v8;
    *(void *)(a2 + 208) = sub_18914E4(a2 + 216, (long long *)__p, &v194, v8);
    uint64_t v9 = 69;
    do
    {
      if (SHIBYTE(__p[v9 - 1]) < 0) {
        operator delete(*(void **)&v169[v9 * 8 + 24]);
      }
      v9 -= 3;
    }
    while (v9 * 8);
    sub_5E5C(__p, "6_7_4");
    sub_5E5C(v172, "7_7_4");
    sub_5E5C(&v173, "8_7_4");
    sub_5E5C(v174, "9_7_4");
    sub_5E5C(v175, "10_7_4");
    sub_5E5C(v176, "8_8_4");
    sub_5E5C(v177, "9_8_4");
    sub_5E5C(v178, "10_8_4");
    sub_5E5C(v179, "8_9_4");
    sub_5E5C(v180, "9_9_4");
    sub_5E5C(v181, "10_9_4");
    *(void *)(a2 + 224) = 0;
    *(void *)(a2 + 232) = 0;
    *(void *)(a2 + 240) = 0;
    *(void *)&long long v127 = a2 + 224;
    BYTE8(v127) = 0;
    unint64_t v10 = (char *)operator new(0x108uLL);
    *(void *)(a2 + 240) = v10 + 264;
    *(void *)(a2 + 224) = v10;
    *(void *)(a2 + 232) = v10;
    *(void *)(a2 + 232) = sub_18914E4(a2 + 240, (long long *)__p, &v182, v10);
    uint64_t v11 = 33;
    do
    {
      if (SHIBYTE(__p[v11 - 1]) < 0) {
        operator delete(*(void **)&v169[v11 * 8 + 24]);
      }
      v11 -= 3;
    }
    while (v11 * 8);
    *(_DWORD *)(a2 + 248) = 15;
    *(unsigned char *)(a2 + 252) = 1;
    *(void *)(a2 + 256) = 0x400000010;
    *(_OWORD *)(a2 + 264) = 0u;
    *(_OWORD *)(a2 + 280) = 0u;
    *(_OWORD *)(a2 + 296) = 0u;
    *(void *)(a2 + 312) = 0x4008000000000000;
    *(void *)(a2 + 320) = 0x100000014;
    *(_DWORD *)(a2 + 328) = 10;
    *(_WORD *)(a2 + 332) = 257;
    *(_OWORD *)(a2 + 336) = xmmword_2171880;
    *(_OWORD *)(a2 + 352) = xmmword_2171890;
    sub_5E5C(__p, "browse_subcategory_gasstations");
    sub_5E5C(v172, "browse_subcategory_parking");
    sub_5E5C(&v173, "browse_subcategory_restaurants");
    sub_5E5C(v174, "browse_subcategory_coffee_shops");
    sub_5E5C(v175, "browse_subcategory_groceries");
    *(void *)(a2 + 368) = 0;
    *(void *)(a2 + 376) = 0;
    *(void *)(a2 + 384) = 0;
    *(void *)&long long v127 = a2 + 368;
    BYTE8(v127) = 0;
    uint64_t v12 = (char *)operator new(0x78uLL);
    *(void *)(a2 + 368) = v12;
    *(void *)(a2 + 376) = v12;
    *(void *)(a2 + 384) = v12 + 120;
    uint64_t v13 = 0;
    *(void *)(a2 + 376) = sub_18914E4(a2 + 384, (long long *)__p, (long long *)v176, v12);
    do
    {
      if (SHIBYTE(v175[v13 + 2]) < 0) {
        operator delete((void *)v175[v13]);
      }
      v13 -= 3;
    }
    while (v13 != -15);
    sub_5E5C(__p, "browse_subcategory_gasstations");
    sub_5E5C(v172, "browse_subcategory_parking");
    sub_5E5C(&v173, "browse_subcategory_restaurants");
    sub_5E5C(v174, "browse_subcategory_coffee_shops");
    sub_5E5C(v175, "browse_subcategory_groceries");
    *(void *)(a2 + 392) = 0;
    *(void *)(a2 + 400) = 0;
    *(void *)(a2 + 408) = 0;
    *(void *)&long long v127 = a2 + 392;
    BYTE8(v127) = 0;
    uint64_t v14 = (char *)operator new(0x78uLL);
    *(void *)(a2 + 392) = v14;
    *(void *)(a2 + 400) = v14;
    *(void *)(a2 + 408) = v14 + 120;
    uint64_t v15 = 0;
    *(void *)(a2 + 400) = sub_18914E4(a2 + 408, (long long *)__p, (long long *)v176, v14);
    do
    {
      if (SHIBYTE(v175[v15 + 2]) < 0) {
        operator delete((void *)v175[v15]);
      }
      v15 -= 3;
    }
    while (v15 != -15);
    sub_5E5C(__p, "browse_subcategory_evcharger_carplay");
    sub_5E5C(v172, "browse_subcategory_parking");
    sub_5E5C(&v173, "browse_subcategory_restaurants");
    sub_5E5C(v174, "browse_subcategory_coffee_shops");
    sub_5E5C(v175, "browse_subcategory_groceries");
    *(void *)(a2 + 416) = 0;
    *(void *)(a2 + 424) = 0;
    *(void *)(a2 + 432) = 0;
    *(void *)&long long v127 = a2 + 416;
    BYTE8(v127) = 0;
    char v16 = (char *)operator new(0x78uLL);
    *(void *)(a2 + 416) = v16;
    *(void *)(a2 + 424) = v16;
    *(void *)(a2 + 432) = v16 + 120;
    uint64_t v17 = 0;
    *(void *)(a2 + 424) = sub_18914E4(a2 + 432, (long long *)__p, (long long *)v176, v16);
    do
    {
      if (SHIBYTE(v175[v17 + 2]) < 0) {
        operator delete((void *)v175[v17]);
      }
      v17 -= 3;
    }
    while (v17 != -15);
    sub_5E5C(__p, "browse_subcategory_gasstations");
    sub_5E5C(v172, "browse_subcategory_parking");
    sub_5E5C(&v173, "browse_subcategory_restaurants");
    sub_5E5C(v174, "browse_subcategory_coffee_shops");
    sub_5E5C(v175, "browse_subcategory_groceries");
    *(void *)(a2 + 440) = 0;
    *(void *)(a2 + 448) = 0;
    *(void *)(a2 + 456) = 0;
    *(void *)&long long v127 = a2 + 440;
    BYTE8(v127) = 0;
    char v18 = (char *)operator new(0x78uLL);
    *(void *)(a2 + 440) = v18;
    *(void *)(a2 + 448) = v18;
    *(void *)(a2 + 456) = v18 + 120;
    uint64_t v19 = 0;
    *(void *)(a2 + 448) = sub_18914E4(a2 + 456, (long long *)__p, (long long *)v176, v18);
    do
    {
      if (SHIBYTE(v175[v19 + 2]) < 0) {
        operator delete((void *)v175[v19]);
      }
      v19 -= 3;
    }
    while (v19 != -15);
    sub_5E5C(__p, "active.hiking");
    sub_5E5C(v172, "active.parks.trailhead");
    sub_5E5C(&v173, "hotelstravel.campgrounds");
    sub_5E5C(v174, "hotelstravel.visitorcenters");
    sub_1976294(a2 + 464, (const void **)__p, 4);
    for (uint64_t i = 0; i != -12; i -= 3)
    {
      if (SHIBYTE(v174[i + 2]) < 0) {
        operator delete((void *)v174[i]);
      }
    }
    sub_5E5C(__p, "active");
    sub_5E5C(v172, "emergencyrooms");
    sub_5E5C(&v173, "hospitals");
    sub_5E5C(v174, "urgent_care");
    sub_5E5C(v175, "airports");
    sub_5E5C(v176, "skiresorts");
    sub_5E5C(v177, "transport");
    sub_5E5C(v178, "touristattraction");
    sub_5E5C(v179, "physicalfeature");
    sub_1976294(a2 + 488, (const void **)__p, 9);
    for (uint64_t j = 0; j != -27; j -= 3)
    {
      if (SHIBYTE(v179[j + 2]) < 0) {
        operator delete((void *)v179[j]);
      }
    }
    sub_5E5C(__p, "kids_activities");
    sub_5E5C(v172, "parks");
    sub_5E5C(&v173, "playgrounds");
    sub_5E5C(v174, "sportscomplex");
    sub_5E5C(v175, "statue");
    sub_5E5C(v176, "zoos");
    sub_1976294(a2 + 512, (const void **)__p, 6);
    for (uint64_t k = 0; k != -18; k -= 3)
    {
      if (SHIBYTE(v176[k + 2]) < 0) {
        operator delete((void *)v176[k]);
      }
    }
    sub_5E5C(__p, "food");
    sub_5E5C(v172, "restaurants");
    sub_5E5C(&v173, "financialservices");
    sub_5E5C(v174, "localservices");
    sub_5E5C(v175, "homedecor");
    sub_5E5C(v176, "beautysvc");
    sub_5E5C(v177, "officebuilding");
    sub_5E5C(v178, "supermarket");
    sub_5E5C(v179, "flowers");
    sub_5E5C(v180, "homeandgarden");
    sub_5E5C(v181, "servicestations");
    sub_5E5C(&v182, "parks");
    sub_5E5C(v183, "playgrounds");
    sub_5E5C(v184, "sportscomplex");
    sub_5E5C(v185, "trainstations");
    sub_1976294(a2 + 536, (const void **)__p, 15);
    uint64_t v23 = 45;
    do
    {
      if (SHIBYTE(__p[v23 - 1]) < 0) {
        operator delete(*(void **)&v169[v23 * 8 + 24]);
      }
      v23 -= 3;
    }
    while (v23 * 8);
    *(unsigned char *)(a2 + 560) = 1;
    *(_OWORD *)(a2 + 564) = xmmword_21718A0;
    *(_OWORD *)(a2 + 580) = xmmword_21718B0;
    *(_DWORD *)(a2 + 596) = 30;
    *(void *)(a2 + 600) = 0x4000000000000000;
    *(_OWORD *)(a2 + 608) = xmmword_21718C0;
    *(_DWORD *)(a2 + 624) = 2;
    *(unsigned char *)(a2 + 628) = 1;
    sub_5E5C(v124, "ranker_en_model_v3");
    sub_5E5C(&v156, "CA");
    sub_5E5C(v157, "GB");
    sub_5E5C(v158, "AU");
    sub_5E5C(&v159, "NZ");
    sub_5E5C(v160, "IE");
    sub_5E5C(v161, "ZA");
    long long v117 = 0uLL;
    uint64_t v118 = 0;
    __p[0] = &v117;
    LOBYTE(__p[1]) = 0;
    *(void *)&long long v117 = operator new(0x90uLL);
    *((void *)&v117 + 1) = v117;
    uint64_t v118 = v117 + 144;
    *((void *)&v117 + 1) = sub_18914E4((uint64_t)&v118, &v156, &__dst, (char *)v117);
    sub_1976318(&__dst, (long long *)v124, (uint64_t *)&v117);
    sub_5E5C(&v114, "ranker_us_model_v2");
    sub_5E5C(v108, "US");
    long long v111 = 0uLL;
    uint64_t v112 = 0;
    __p[0] = &v111;
    LOBYTE(__p[1]) = 0;
    *(void *)&long long v111 = operator new(0x18uLL);
    *((void *)&v111 + 1) = v111;
    uint64_t v112 = v111 + 24;
    *((void *)&v111 + 1) = sub_18914E4((uint64_t)&v112, (long long *)v108, (long long *)v110, (char *)v111);
    sub_1976318(v164, &v114, (uint64_t *)&v111);
    sub_5E5C(&v105, "ranker_eu_model_v2");
    sub_5E5C(&v127, "DE");
    sub_5E5C(v128, "FR");
    sub_5E5C(&v129, "BE");
    sub_5E5C(v130, "CH");
    sub_5E5C(v131, "AT");
    sub_5E5C(v132, "ES");
    sub_5E5C(v133, "IT");
    sub_5E5C(v134, "NL");
    sub_5E5C(v135, "PT");
    sub_5E5C(v136, "NO");
    sub_5E5C(v137, "DK");
    sub_5E5C(v138, "FI");
    sub_5E5C(v139, "SE");
    long long v154 = 0uLL;
    uint64_t v155 = 0;
    __p[0] = &v154;
    LOBYTE(__p[1]) = 0;
    *(void *)&long long v154 = operator new(0x138uLL);
    *((void *)&v154 + 1) = v154;
    uint64_t v155 = v154 + 312;
    *((void *)&v154 + 1) = sub_18914E4((uint64_t)&v155, &v127, &v140, (char *)v154);
    sub_1976318(v166, &v105, (uint64_t *)&v154);
    sub_5E5C(&v101, "ranker_cn_model_v2");
    sub_5E5C(&v152, "CN");
    long long v99 = 0uLL;
    uint64_t v100 = 0;
    __p[0] = &v99;
    LOBYTE(__p[1]) = 0;
    *(void *)&long long v99 = operator new(0x18uLL);
    *((void *)&v99 + 1) = v99;
    uint64_t v100 = v99 + 24;
    *((void *)&v99 + 1) = sub_18914E4((uint64_t)&v100, &v152, &v154, (char *)v99);
    sub_1976318(v167, &v101, (uint64_t *)&v99);
    sub_5E5C(&v97, "ranker_cjk_model");
    sub_5E5C(&v144, "JP");
    sub_5E5C(v145, "MO");
    sub_5E5C(&v146, "PH");
    sub_5E5C(v147, "MY");
    sub_5E5C(v148, "TW");
    sub_5E5C(v149, "HK");
    long long v150 = 0uLL;
    uint64_t v151 = 0;
    __p[0] = &v150;
    LOBYTE(__p[1]) = 0;
    *(void *)&long long v150 = operator new(0x90uLL);
    *((void *)&v150 + 1) = v150;
    uint64_t v151 = v150 + 144;
    *((void *)&v150 + 1) = sub_18914E4((uint64_t)&v151, &v144, &v150, (char *)v150);
    sub_1976318(v168, &v97, (uint64_t *)&v150);
    sub_5E5C(v95, "ranker_row_model_v3");
    sub_5E5C(__p, "AR");
    sub_5E5C(v172, "BR");
    sub_5E5C(&v173, "MX");
    sub_5E5C(v174, "CL");
    sub_5E5C(v175, "CZ");
    sub_5E5C(v176, "GR");
    sub_5E5C(v177, "HR");
    sub_5E5C(v178, "HU");
    sub_5E5C(v179, "ID");
    sub_5E5C(v180, "IN");
    sub_5E5C(v181, "PL");
    sub_5E5C(&v182, "RO");
    sub_5E5C(v183, "SG");
    sub_5E5C(v184, "SK");
    sub_5E5C(v185, "TH");
    sub_5E5C(v186, "TR");
    sub_5E5C(v187, "VN");
    long long v92 = 0;
    char v93 = 0;
    int v94 = 0;
    long long v92 = (char *)operator new(0x198uLL);
    char v93 = v92;
    int v94 = v92 + 408;
    char v93 = sub_18914E4((uint64_t)&v94, (long long *)__p, &v188, v92);
    sub_1976318(v169, (long long *)v95, (uint64_t *)&v92);
    *(void *)(a2 + 632) = 0;
    *(void *)(a2 + 640) = 0;
    *(void *)(a2 + 648) = 0;
    v90[0] = (void *)(a2 + 632);
    LOBYTE(v90[1]) = 0;
    uint64_t v24 = (char *)operator new(0x120uLL);
    *(void *)(a2 + 632) = v24;
    *(void *)(a2 + 640) = v24;
    *(void *)(a2 + 648) = v24 + 288;
    *(void *)(a2 + 640) = sub_19763B0(a2 + 648, (uint64_t)&__dst, (uint64_t)__p, (uint64_t)v24);
    uint64_t v25 = 36;
    do
    {
      v90[0] = &v161[v25];
      sub_1891624((void ***)v90);
      if (SHIBYTE(v160[v25 + 2]) < 0) {
        operator delete((void *)v160[v25]);
      }
      v25 -= 6;
    }
    while (v25 * 8);
    v90[0] = &v92;
    sub_1891624((void ***)v90);
    uint64_t v26 = 51;
    do
    {
      if (SHIBYTE(__p[v26 - 1]) < 0) {
        operator delete(*(void **)&v169[v26 * 8 + 24]);
      }
      v26 -= 3;
    }
    while (v26 * 8);
    if (v96 < 0) {
      operator delete(v95[0]);
    }
    __p[0] = &v150;
    sub_1891624((void ***)__p);
    for (uint64_t m = 0; m != -18; m -= 3)
    {
      if (SHIBYTE(v149[m + 2]) < 0) {
        operator delete((void *)v149[m]);
      }
    }
    if (SHIBYTE(v98) < 0) {
      operator delete((void *)v97);
    }
    __p[0] = &v99;
    sub_1891624((void ***)__p);
    if (SHIBYTE(v153) < 0) {
      operator delete((void *)v152);
    }
    if (SHIBYTE(v102) < 0) {
      operator delete((void *)v101);
    }
    __p[0] = &v154;
    sub_1891624((void ***)__p);
    uint64_t v28 = 39;
    do
    {
      if (*((char *)&v128[v28 - 1] - 1) < 0) {
        operator delete((void *)v126[v28]);
      }
      v28 -= 3;
    }
    while (v28 * 8);
    if (SHIBYTE(v106) < 0) {
      operator delete((void *)v105);
    }
    __p[0] = &v111;
    sub_1891624((void ***)__p);
    if (v109 < 0) {
      operator delete(v108[0]);
    }
    if (SHIBYTE(v115) < 0) {
      operator delete((void *)v114);
    }
    __p[0] = &v117;
    sub_1891624((void ***)__p);
    for (uint64_t n = 0; n != -18; n -= 3)
    {
      if (SHIBYTE(v161[n + 2]) < 0) {
        operator delete((void *)v161[n]);
      }
    }
    if ((v125[0] & 0x80000000) != 0) {
      operator delete(v124[0]);
    }
    sub_5E5C(&v117, "speller-enus-esus");
    sub_5E5C(&v111, "US");
    long long v114 = 0uLL;
    uint64_t v115 = 0;
    __p[0] = &v114;
    LOBYTE(__p[1]) = 0;
    *(void *)&long long v114 = operator new(0x18uLL);
    *((void *)&v114 + 1) = v114;
    uint64_t v115 = v114 + 24;
    *((void *)&v114 + 1) = sub_18914E4((uint64_t)&v115, &v111, (long long *)v113, (char *)v114);
    sub_1976318(&v127, &v117, (uint64_t *)&v114);
    sub_5E5C(v108, "speller-GB");
    sub_5E5C(&v154, "GB");
    long long v105 = 0uLL;
    uint64_t v106 = 0;
    __p[0] = &v105;
    LOBYTE(__p[1]) = 0;
    *(void *)&long long v105 = operator new(0x18uLL);
    *((void *)&v105 + 1) = v105;
    uint64_t v106 = v105 + 24;
    *((void *)&v105 + 1) = sub_18914E4((uint64_t)&v106, &v154, &v156, (char *)v105);
    sub_1976318(&v129, (long long *)v108, (uint64_t *)&v105);
    sub_5E5C(&v101, "speller-AU");
    sub_5E5C(&v144, "AU");
    sub_5E5C(v145, "NZ");
    long long v99 = 0uLL;
    uint64_t v100 = 0;
    __p[0] = &v99;
    LOBYTE(__p[1]) = 0;
    *(void *)&long long v99 = operator new(0x30uLL);
    *((void *)&v99 + 1) = v99;
    uint64_t v100 = v99 + 48;
    *((void *)&v99 + 1) = sub_18914E4((uint64_t)&v100, &v144, &v146, (char *)v99);
    sub_1976318(v131, &v101, (uint64_t *)&v99);
    sub_5E5C(&v152, "speller-CA");
    sub_5E5C(&v150, "CA");
    long long v97 = 0uLL;
    uint64_t v98 = 0;
    __p[0] = &v97;
    LOBYTE(__p[1]) = 0;
    *(void *)&long long v97 = operator new(0x18uLL);
    *((void *)&v97 + 1) = v97;
    uint64_t v98 = v97 + 24;
    *((void *)&v97 + 1) = sub_18914E4((uint64_t)&v98, &v150, &v152, (char *)v97);
    sub_1976318(v133, &v152, (uint64_t *)&v97);
    sub_5E5C(v95, "speller-EU");
    sub_5E5C(&__dst, "ES");
    sub_5E5C(v163, "IT");
    sub_5E5C(v164, "NL");
    long long v92 = 0;
    char v93 = 0;
    int v94 = 0;
    __p[0] = &v92;
    LOBYTE(__p[1]) = 0;
    long long v92 = (char *)operator new(0x48uLL);
    char v93 = v92;
    int v94 = v92 + 72;
    char v93 = sub_18914E4((uint64_t)&v94, &__dst, &v165, v92);
    sub_1976318(v135, (long long *)v95, (uint64_t *)&v92);
    sub_5E5C(v90, "speller-FR-DE");
    sub_5E5C(v124, "FR");
    sub_5E5C(v126, "DE");
    uint64_t v87 = 0;
    char v88 = 0;
    int v89 = 0;
    __p[0] = &v87;
    LOBYTE(__p[1]) = 0;
    uint64_t v87 = (char *)operator new(0x30uLL);
    char v88 = v87;
    int v89 = v87 + 48;
    char v88 = sub_18914E4((uint64_t)&v89, (long long *)v124, &v127, v87);
    sub_1976318(v137, (long long *)v90, (uint64_t *)&v87);
    sub_5E5C(v85, "speller-EU-offline-mixed-reduced");
    sub_5E5C(&v156, "AT");
    sub_5E5C(v157, "CH");
    sub_5E5C(v158, "BE");
    uint64_t v82 = 0;
    uint64_t v83 = 0;
    uint64_t v84 = 0;
    __p[0] = &v82;
    LOBYTE(__p[1]) = 0;
    uint64_t v82 = (char *)operator new(0x48uLL);
    uint64_t v83 = v82;
    uint64_t v84 = v82 + 72;
    uint64_t v83 = sub_18914E4((uint64_t)&v84, &v156, &v159, v82);
    sub_1976318(v139, (long long *)v85, (uint64_t *)&v82);
    sub_5E5C(v80, "speller-GR");
    sub_5E5C(v122, "GR");
    long long v77 = 0;
    char v78 = 0;
    int v79 = 0;
    __p[0] = &v77;
    LOBYTE(__p[1]) = 0;
    long long v77 = (char *)operator new(0x18uLL);
    char v78 = v77;
    int v79 = v77 + 24;
    char v78 = sub_18914E4((uint64_t)&v79, (long long *)v122, (long long *)v124, v77);
    sub_1976318(v141, (long long *)v80, (uint64_t *)&v77);
    sub_5E5C(&v75, "speller-JP");
    sub_5E5C(&v120, "JP");
    long long v73 = 0uLL;
    uint64_t v74 = 0;
    __p[0] = &v73;
    LOBYTE(__p[1]) = 0;
    *(void *)&long long v73 = operator new(0x18uLL);
    *((void *)&v73 + 1) = v73;
    uint64_t v74 = v73 + 24;
    *((void *)&v73 + 1) = sub_18914E4((uint64_t)&v74, &v120, (long long *)v122, (char *)v73);
    sub_1976318(v142, &v75, (uint64_t *)&v73);
    sub_5E5C(v71, "speller-ROW");
    sub_5E5C(__p, "ZA");
    sub_5E5C(v172, "IN");
    sub_5E5C(&v173, "PT");
    sub_5E5C(v174, "FI");
    sub_5E5C(v175, "SE");
    sub_5E5C(v176, "AD");
    sub_5E5C(v177, "MC");
    sub_5E5C(v178, "LU");
    sub_5E5C(v179, "VA");
    sub_5E5C(v180, "IS");
    sub_5E5C(v181, "GL");
    sub_5E5C(&v182, "FO");
    sub_5E5C(v183, "IE");
    sub_5E5C(v184, "NO");
    sub_5E5C(v185, "DK");
    sub_5E5C(v186, "AR");
    sub_5E5C(v187, "BR");
    sub_5E5C(&v188, "MX");
    sub_5E5C(v189, "CL");
    sub_5E5C(v190, "TW");
    sub_5E5C(v191, "HK");
    sub_5E5C(v192, "MO");
    sub_5E5C(v193, "PL");
    sub_5E5C(&v194, "HR");
    sub_5E5C(v195, "RO");
    sub_5E5C(v196, "SK");
    sub_5E5C(v197, "CZ");
    sub_5E5C(v198, "HU");
    sub_5E5C(v199, "VN");
    sub_5E5C(v200, "TH");
    sub_5E5C(v201, "SG");
    sub_5E5C(v202, "MY");
    sub_5E5C(v203, "PH");
    sub_5E5C(v204, "TR");
    char v68 = 0;
    int v69 = 0;
    long long v70 = 0;
    char v103 = &v68;
    char v104 = 0;
    char v68 = (char *)operator new(0x330uLL);
    int v69 = v68;
    long long v70 = v68 + 816;
    int v69 = sub_18914E4((uint64_t)&v70, (long long *)__p, &v205, v68);
    sub_1976318(v143, (long long *)v71, (uint64_t *)&v68);
    *(void *)(a2 + 656) = 0;
    *(void *)(a2 + 664) = 0;
    *(void *)(a2 + 672) = 0;
    char v103 = (char **)(a2 + 656);
    char v104 = 0;
    long long v30 = (char *)operator new(0x1E0uLL);
    *(void *)(a2 + 656) = v30;
    *(void *)(a2 + 664) = v30;
    *(void *)(a2 + 672) = v30 + 480;
    *(void *)(a2 + 664) = sub_19763B0(a2 + 672, (uint64_t)&v127, (uint64_t)&v144, (uint64_t)v30);
    uint64_t v31 = 60;
    do
    {
      char v103 = (char **)&v126[v31];
      sub_1891624((void ***)&v103);
      if ((char)v125[v31 * 8] < 0) {
        operator delete(v124[v31]);
      }
      v31 -= 6;
    }
    while (v31 * 8);
    char v103 = &v68;
    sub_1891624((void ***)&v103);
    uint64_t v32 = 102;
    do
    {
      if (SHIBYTE(__p[v32 - 1]) < 0) {
        operator delete(*(void **)&v169[v32 * 8 + 24]);
      }
      v32 -= 3;
    }
    while (v32 * 8);
    if (v72 < 0) {
      operator delete(v71[0]);
    }
    __p[0] = &v73;
    sub_1891624((void ***)__p);
    if (SHIBYTE(v121) < 0) {
      operator delete((void *)v120);
    }
    if (SHIBYTE(v76) < 0) {
      operator delete((void *)v75);
    }
    __p[0] = &v77;
    sub_1891624((void ***)__p);
    if (v123 < 0) {
      operator delete(v122[0]);
    }
    if (v81 < 0) {
      operator delete(v80[0]);
    }
    __p[0] = &v82;
    sub_1891624((void ***)__p);
    for (iuint64_t i = 0; ii != -9; ii -= 3)
    {
      if (SHIBYTE(v158[ii + 2]) < 0) {
        operator delete((void *)v158[ii]);
      }
    }
    if (v86 < 0) {
      operator delete(v85[0]);
    }
    __p[0] = &v87;
    sub_1891624((void ***)__p);
    for (juint64_t j = 0; jj != -6; jj -= 3)
    {
      if (SHIBYTE(v126[jj + 2]) < 0) {
        operator delete((void *)v126[jj]);
      }
    }
    if (v91 < 0) {
      operator delete(v90[0]);
    }
    __p[0] = &v92;
    sub_1891624((void ***)__p);
    for (kuint64_t k = 0; kk != -9; kk -= 3)
    {
      if (SHIBYTE(v164[kk + 2]) < 0) {
        operator delete((void *)v164[kk]);
      }
    }
    if (v96 < 0) {
      operator delete(v95[0]);
    }
    __p[0] = &v97;
    sub_1891624((void ***)__p);
    if (SHIBYTE(v151) < 0) {
      operator delete((void *)v150);
    }
    if (SHIBYTE(v153) < 0) {
      operator delete((void *)v152);
    }
    __p[0] = &v99;
    sub_1891624((void ***)__p);
    for (muint64_t m = 0; mm != -6; mm -= 3)
    {
      if (SHIBYTE(v145[mm + 2]) < 0) {
        operator delete((void *)v145[mm]);
      }
    }
    if (SHIBYTE(v102) < 0) {
      operator delete((void *)v101);
    }
    __p[0] = &v105;
    sub_1891624((void ***)__p);
    if (SHIBYTE(v155) < 0) {
      operator delete((void *)v154);
    }
    if (v109 < 0) {
      operator delete(v108[0]);
    }
    __p[0] = &v114;
    sub_1891624((void ***)__p);
    if (SHIBYTE(v112) < 0) {
      operator delete((void *)v111);
    }
    if (SHIBYTE(v118) < 0) {
      operator delete((void *)v117);
    }
    sub_5E5C(&v154, "speller-enus-esus");
    sub_5E5C(&v127, "from_ENUSESUS");
    sub_5E5C(v128, "to_ENUSESUS");
    long long v101 = 0uLL;
    uint64_t v102 = 0;
    *(void *)&long long __dst = &v101;
    BYTE8(__dst) = 0;
    *(void *)&long long v101 = operator new(0x30uLL);
    *((void *)&v101 + 1) = v101;
    uint64_t v102 = v101 + 48;
    *((void *)&v101 + 1) = sub_18914E4((uint64_t)&v102, &v127, &v129, (char *)v101);
    sub_1976318(__p, &v154, (uint64_t *)&v101);
    sub_5E5C(&v99, "speller-GB");
    sub_5E5C(&__dst, "from_SOURCE");
    sub_5E5C(v163, "to_TARGET");
    long long v152 = 0uLL;
    uint64_t v153 = 0;
    *(void *)&long long v156 = &v152;
    BYTE8(v156) = 0;
    *(void *)&long long v152 = operator new(0x30uLL);
    *((void *)&v152 + 1) = v152;
    uint64_t v153 = v152 + 48;
    *((void *)&v152 + 1) = sub_18914E4((uint64_t)&v153, &__dst, (long long *)v164, (char *)v152);
    sub_1976318(&v173, &v99, (uint64_t *)&v152);
    sub_5E5C(&v97, "speller-AU");
    sub_5E5C(&v156, "from_AU");
    sub_5E5C(v157, "to_AU");
    long long v150 = 0uLL;
    uint64_t v151 = 0;
    *(void *)&long long v144 = &v150;
    BYTE8(v144) = 0;
    *(void *)&long long v150 = operator new(0x30uLL);
    *((void *)&v150 + 1) = v150;
    uint64_t v151 = v150 + 48;
    *((void *)&v150 + 1) = sub_18914E4((uint64_t)&v151, &v156, (long long *)v158, (char *)v150);
    sub_1976318(v175, &v97, (uint64_t *)&v150);
    sub_5E5C(v95, "speller-CA");
    sub_5E5C(&v144, "from_CA");
    sub_5E5C(v145, "to_CA");
    long long v92 = 0;
    char v93 = 0;
    int v94 = 0;
    v124[0] = &v92;
    LOBYTE(v124[1]) = 0;
    long long v92 = (char *)operator new(0x30uLL);
    char v93 = v92;
    int v94 = v92 + 48;
    char v93 = sub_18914E4((uint64_t)&v94, &v144, &v146, v92);
    sub_1976318(v177, (long long *)v95, (uint64_t *)&v92);
    sub_5E5C(v90, "speller-EU");
    sub_5E5C(v124, "from_EU");
    sub_5E5C(v126, "to_EU");
    uint64_t v87 = 0;
    char v88 = 0;
    int v89 = 0;
    *(void *)&long long v117 = &v87;
    BYTE8(v117) = 0;
    uint64_t v87 = (char *)operator new(0x30uLL);
    char v88 = v87;
    int v89 = v87 + 48;
    char v88 = sub_18914E4((uint64_t)&v89, (long long *)v124, &v127, v87);
    sub_1976318(v179, (long long *)v90, (uint64_t *)&v87);
    sub_5E5C(v85, "speller-GR");
    sub_5E5C(&v117, "from_SOURCE");
    sub_5E5C(v119, "to_TARGET");
    uint64_t v82 = 0;
    uint64_t v83 = 0;
    uint64_t v84 = 0;
    *(void *)&long long v114 = &v82;
    BYTE8(v114) = 0;
    uint64_t v82 = (char *)operator new(0x30uLL);
    uint64_t v83 = v82;
    uint64_t v84 = v82 + 48;
    uint64_t v83 = sub_18914E4((uint64_t)&v84, &v117, &v120, v82);
    sub_1976318(v181, (long long *)v85, (uint64_t *)&v82);
    sub_5E5C(v80, "speller-JP");
    sub_5E5C(&v114, "from_SOURCE");
    sub_5E5C(v116, "to_TARGET");
    long long v77 = 0;
    char v78 = 0;
    int v79 = 0;
    *(void *)&long long v111 = &v77;
    BYTE8(v111) = 0;
    long long v77 = (char *)operator new(0x30uLL);
    char v78 = v77;
    int v79 = v77 + 48;
    char v78 = sub_18914E4((uint64_t)&v79, &v114, &v117, v77);
    sub_1976318(v183, (long long *)v80, (uint64_t *)&v77);
    sub_5E5C(v122, "speller-FR-DE");
    sub_5E5C(&v111, "from_DEFRAC");
    sub_5E5C(v113, "to_DEFRAC");
    long long v75 = 0uLL;
    uint64_t v76 = 0;
    v108[0] = &v75;
    LOBYTE(v108[1]) = 0;
    *(void *)&long long v75 = operator new(0x30uLL);
    *((void *)&v75 + 1) = v75;
    uint64_t v76 = v75 + 48;
    *((void *)&v75 + 1) = sub_18914E4((uint64_t)&v76, &v111, &v114, (char *)v75);
    sub_1976318(v185, (long long *)v122, (uint64_t *)&v75);
    sub_5E5C(&v73, "speller-EU-offline-mixed-reduced");
    sub_5E5C(v108, "from_SOURCE");
    sub_5E5C(v110, "to_TARGET");
    long long v120 = 0uLL;
    uint64_t v121 = 0;
    *(void *)&long long v105 = &v120;
    BYTE8(v105) = 0;
    *(void *)&long long v120 = operator new(0x30uLL);
    *((void *)&v120 + 1) = v120;
    uint64_t v121 = v120 + 48;
    *((void *)&v120 + 1) = sub_18914E4((uint64_t)&v121, (long long *)v108, &v111, (char *)v120);
    sub_1976318(v187, &v73, (uint64_t *)&v120);
    sub_5E5C(v71, "speller-ROW");
    sub_5E5C(&v105, "from_GLOBAL");
    sub_5E5C(v107, "to_GLOBAL");
    char v68 = 0;
    int v69 = 0;
    long long v70 = 0;
    char v103 = &v68;
    char v104 = 0;
    char v68 = (char *)operator new(0x30uLL);
    int v69 = v68;
    long long v70 = v68 + 48;
    int v69 = sub_18914E4((uint64_t)&v70, &v105, (long long *)v108, v68);
    sub_1976318(v189, (long long *)v71, (uint64_t *)&v68);
    *(void *)(a2 + 680) = 0;
    *(void *)(a2 + 688) = 0;
    *(void *)(a2 + 696) = 0;
    char v103 = (char **)(a2 + 680);
    char v104 = 0;
    long long v37 = (char *)operator new(0x1E0uLL);
    *(void *)(a2 + 680) = v37;
    *(void *)(a2 + 688) = v37;
    *(void *)(a2 + 696) = v37 + 480;
    *(void *)(a2 + 688) = sub_19763B0(a2 + 696, (uint64_t)__p, (uint64_t)v191, (uint64_t)v37);
    uint64_t v38 = 480;
    do
    {
      char v103 = (char **)&v169[v38 + 24];
      sub_1891624((void ***)&v103);
      if ((char)v169[v38 + 23] < 0) {
        operator delete(*(void **)&v169[v38]);
      }
      v38 -= 48;
    }
    while (v38);
    char v103 = &v68;
    sub_1891624((void ***)&v103);
    for (nuint64_t n = 0; nn != -6; nn -= 3)
    {
      if (SHIBYTE(v107[nn + 2]) < 0) {
        operator delete(v107[nn]);
      }
    }
    if (v72 < 0) {
      operator delete(v71[0]);
    }
    *(void *)&long long v105 = &v120;
    sub_1891624((void ***)&v105);
    for (uint64_t i1 = 0; i1 != -6; i1 -= 3)
    {
      if (SHIBYTE(v110[i1 + 2]) < 0) {
        operator delete((void *)v110[i1]);
      }
    }
    if (SHIBYTE(v74) < 0) {
      operator delete((void *)v73);
    }
    v108[0] = &v75;
    sub_1891624((void ***)v108);
    for (uint64_t i2 = 0; i2 != -6; i2 -= 3)
    {
      if (SHIBYTE(v113[i2 + 2]) < 0) {
        operator delete((void *)v113[i2]);
      }
    }
    if (v123 < 0) {
      operator delete(v122[0]);
    }
    *(void *)&long long v111 = &v77;
    sub_1891624((void ***)&v111);
    for (uint64_t i3 = 0; i3 != -6; i3 -= 3)
    {
      if (SHIBYTE(v116[i3 + 2]) < 0) {
        operator delete((void *)v116[i3]);
      }
    }
    if (v81 < 0) {
      operator delete(v80[0]);
    }
    *(void *)&long long v114 = &v82;
    sub_1891624((void ***)&v114);
    for (uint64_t i4 = 0; i4 != -6; i4 -= 3)
    {
      if (SHIBYTE(v119[i4 + 2]) < 0) {
        operator delete((void *)v119[i4]);
      }
    }
    if (v86 < 0) {
      operator delete(v85[0]);
    }
    *(void *)&long long v117 = &v87;
    sub_1891624((void ***)&v117);
    for (uint64_t i5 = 0; i5 != -6; i5 -= 3)
    {
      if (SHIBYTE(v126[i5 + 2]) < 0) {
        operator delete((void *)v126[i5]);
      }
    }
    if (v91 < 0) {
      operator delete(v90[0]);
    }
    v124[0] = &v92;
    sub_1891624((void ***)v124);
    for (uint64_t i6 = 0; i6 != -6; i6 -= 3)
    {
      if (SHIBYTE(v145[i6 + 2]) < 0) {
        operator delete((void *)v145[i6]);
      }
    }
    if (v96 < 0) {
      operator delete(v95[0]);
    }
    *(void *)&long long v144 = &v150;
    sub_1891624((void ***)&v144);
    for (uint64_t i7 = 0; i7 != -6; i7 -= 3)
    {
      if (SHIBYTE(v157[i7 + 2]) < 0) {
        operator delete((void *)v157[i7]);
      }
    }
    if (SHIBYTE(v98) < 0) {
      operator delete((void *)v97);
    }
    *(void *)&long long v156 = &v152;
    sub_1891624((void ***)&v156);
    for (uint64_t i8 = 0; i8 != -6; i8 -= 3)
    {
      if (SHIBYTE(v163[i8 + 2]) < 0) {
        operator delete((void *)v163[i8]);
      }
    }
    if (SHIBYTE(v100) < 0) {
      operator delete((void *)v99);
    }
    *(void *)&long long __dst = &v101;
    sub_1891624((void ***)&__dst);
    for (uint64_t i9 = 0; i9 != -6; i9 -= 3)
    {
      if (SHIBYTE(v128[i9 + 2]) < 0) {
        operator delete((void *)v128[i9]);
      }
    }
    if (SHIBYTE(v155) < 0) {
      operator delete((void *)v154);
    }
    sub_5E5C(__p, "HK");
    sub_5E5C(v172, "JP");
    sub_5E5C(&v173, "MO");
    sub_5E5C(v174, "TW");
    *(void *)(a2 + 704) = 0;
    *(void *)(a2 + 712) = 0;
    *(void *)(a2 + 720) = 0;
    *(void *)&long long v127 = a2 + 704;
    BYTE8(v127) = 0;
    int v49 = (char *)operator new(0x60uLL);
    *(void *)(a2 + 704) = v49;
    *(void *)(a2 + 712) = v49;
    *(void *)(a2 + 720) = v49 + 96;
    uint64_t v50 = 0;
    *(void *)(a2 + 712) = sub_18914E4(a2 + 720, (long long *)__p, (long long *)v175, v49);
    do
    {
      if (SHIBYTE(v174[v50 + 2]) < 0) {
        operator delete((void *)v174[v50]);
      }
      v50 -= 3;
    }
    while (v50 != -12);
    *(unsigned char *)(a2 + 728) = 1;
    *(_OWORD *)(a2 + 732) = xmmword_21718D0;
    *(unsigned char *)(a2 + 748) = 1;
    *(void *)(a2 + 752) = 0x6400000001;
    *(_DWORD *)(a2 + 760) = 10;
    sub_5E5C(__p, "AD");
    sub_5E5C(v172, "AR");
    sub_5E5C(&v173, "AT");
    sub_5E5C(v174, "BE");
    sub_5E5C(v175, "BO");
    sub_5E5C(v176, "BR");
    sub_5E5C(v177, "CH");
    sub_5E5C(v178, "CL");
    sub_5E5C(v179, "CO");
    sub_5E5C(v180, "CR");
    sub_5E5C(v181, "CU");
    sub_5E5C(&v182, "DE");
    sub_5E5C(v183, "DK");
    sub_5E5C(v184, "DO");
    sub_5E5C(v185, "EC");
    sub_5E5C(v186, "ES");
    sub_5E5C(v187, "FI");
    sub_5E5C(&v188, "GL");
    sub_5E5C(v189, "GR");
    sub_5E5C(v190, "GT");
    sub_5E5C(v191, "GQ");
    sub_5E5C(v192, "HN");
    sub_5E5C(v193, "ID");
    sub_5E5C(&v194, "IS");
    sub_5E5C(v195, "IT");
    sub_5E5C(v196, "JP");
    sub_5E5C(v197, "LI");
    sub_5E5C(v198, "MX");
    sub_5E5C(v199, "NI");
    sub_5E5C(v200, "NL");
    sub_5E5C(v201, "NO");
    sub_5E5C(v202, "PA");
    sub_5E5C(v203, "PE");
    sub_5E5C(v204, "PT");
    sub_5E5C(&v205, "PY");
    sub_5E5C(v206, "RO");
    sub_5E5C(v207, "SE");
    sub_5E5C(v208, "SM");
    sub_5E5C(v209, "SR");
    sub_5E5C(v210, "SV");
    sub_5E5C(v211, "TR");
    sub_5E5C(v212, "UY");
    sub_5E5C(v213, "VA");
    sub_5E5C(v214, "VE");
    *(void *)(a2 + 768) = 0;
    *(void *)(a2 + 776) = 0;
    *(void *)(a2 + 784) = 0;
    *(void *)&long long v127 = a2 + 768;
    BYTE8(v127) = 0;
    char v51 = (char *)operator new(0x420uLL);
    *(void *)(a2 + 768) = v51;
    *(void *)(a2 + 776) = v51;
    *(void *)(a2 + 784) = v51 + 1056;
    *(void *)(a2 + 776) = sub_18914E4(a2 + 784, (long long *)__p, &v215, v51);
    uint64_t v52 = 132;
    do
    {
      if (SHIBYTE(__p[v52 - 1]) < 0) {
        operator delete(*(void **)&v169[v52 * 8 + 24]);
      }
      v52 -= 3;
    }
    while (v52 * 8);
    *(_DWORD *)(a2 + 792) = 5;
    *(unsigned char *)(a2 + 796) = 1;
    *(_DWORD *)(a2 + 800) = 1;
    *(unsigned char *)(a2 + 804) = 1;
    sub_1976434(__p, "zh", "位置");
    sub_1976488(&v173, "en", "Location");
    *(void *)(a2 + 808) = 0;
    *(void *)(a2 + 816) = 0;
    *(void *)(a2 + 824) = 0;
    *(void *)&long long v127 = a2 + 808;
    BYTE8(v127) = 0;
    char v53 = (char *)operator new(0x60uLL);
    *(void *)(a2 + 808) = v53;
    *(void *)(a2 + 816) = v53;
    *(void *)(a2 + 824) = v53 + 96;
    uint64_t v54 = 0;
    *(void *)(a2 + 816) = sub_9E3C38((int)a2 + 824, (long long *)__p, (long long *)v175, v53);
    do
    {
      long long v55 = &__p[v54];
      if (SHIBYTE(v174[v54 + 2]) < 0) {
        operator delete(v55[9]);
      }
      if (*((char *)v55 + 71) < 0) {
        operator delete(v55[6]);
      }
      v54 -= 6;
    }
    while (v54 != -12);
    sub_5E5C(__p, "SK");
    sub_5E5C(v172, "CZ");
    *(void *)(a2 + 832) = 0;
    *(void *)(a2 + 840) = 0;
    *(void *)(a2 + 848) = 0;
    *(void *)&long long v127 = a2 + 832;
    BYTE8(v127) = 0;
    char v56 = (char *)operator new(0x30uLL);
    *(void *)(a2 + 832) = v56;
    *(void *)(a2 + 840) = v56;
    *(void *)(a2 + 848) = v56 + 48;
    uint64_t v57 = 0;
    *(void *)(a2 + 840) = sub_18914E4(a2 + 848, (long long *)__p, &v173, v56);
    do
    {
      if (SHIBYTE(v172[v57 + 2]) < 0) {
        operator delete((void *)v172[v57]);
      }
      v57 -= 3;
    }
    while (v57 != -6);
    sub_5E5C(__p, "a");
    sub_5E5C(v172, "asda");
    sub_5E5C(&v173, "das");
    sub_5E5C(v174, "de");
    sub_5E5C(v175, "del");
    sub_5E5C(v176, "des");
    sub_5E5C(v177, "do");
    sub_5E5C(v178, "dos");
    sub_5E5C(v179, "dueli");
    sub_5E5C(v180, "ill");
    sub_5E5C(v181, "la");
    sub_5E5C(&v182, "le");
    sub_5E5C(v183, "o");
    sub_5E5C(v184, "of");
    sub_5E5C(v185, "os");
    sub_5E5C(v186, "the");
    sub_1976294(a2 + 856, (const void **)__p, 16);
    uint64_t v58 = 48;
    do
    {
      if (SHIBYTE(__p[v58 - 1]) < 0) {
        operator delete(*(void **)&v169[v58 * 8 + 24]);
      }
      v58 -= 3;
    }
    while (v58 * 8);
    sub_5E5C(__p, "block");
    sub_5E5C(v172, "blk");
    sub_1976294(a2 + 880, (const void **)__p, 2);
    for (uint64_t i10 = 0; i10 != -6; i10 -= 3)
    {
      if (SHIBYTE(v172[i10 + 2]) < 0) {
        operator delete((void *)v172[i10]);
      }
    }
    *(unsigned char *)(a2 + 904) = 0;
    *(void *)(a2 + 912) = 0;
    *(void *)(a2 + 928) = 0;
    *(void *)(a2 + 920) = 0;
    long long v60 = operator new(0x10uLL);
    *(void *)(a2 + 912) = v60;
    *v60++ = xmmword_21718E0;
    *(void *)(a2 + 928) = v60;
    *(void *)(a2 + 920) = v60;
    sub_5E5C(__p, "JP");
    sub_5E5C(v172, "TW");
    sub_5E5C(&v173, "HK");
    sub_5E5C(v174, "MO");
    *(void *)(a2 + 936) = 0;
    *(void *)(a2 + 944) = 0;
    *(void *)(a2 + 952) = 0;
    *(void *)&long long v127 = a2 + 936;
    BYTE8(v127) = 0;
    char v61 = (char *)operator new(0x60uLL);
    *(void *)(a2 + 936) = v61;
    *(void *)(a2 + 944) = v61;
    *(void *)(a2 + 952) = v61 + 96;
    uint64_t v62 = 0;
    *(void *)(a2 + 944) = sub_18914E4(a2 + 952, (long long *)__p, (long long *)v175, v61);
    do
    {
      if (SHIBYTE(v174[v62 + 2]) < 0) {
        operator delete((void *)v174[v62]);
      }
      v62 -= 3;
    }
    while (v62 != -12);
    sub_5E5C(__p, "JP");
    sub_5E5C(v172, "VN");
    *(void *)(a2 + 960) = 0;
    *(void *)(a2 + 968) = 0;
    *(void *)(a2 + 976) = 0;
    *(void *)&long long v127 = a2 + 960;
    BYTE8(v127) = 0;
    char v63 = (char *)operator new(0x30uLL);
    *(void *)(a2 + 960) = v63;
    *(void *)(a2 + 968) = v63;
    *(void *)(a2 + 976) = v63 + 48;
    uint64_t v64 = 0;
    *(void *)(a2 + 968) = sub_18914E4(a2 + 976, (long long *)__p, &v173, v63);
    do
    {
      if (SHIBYTE(v172[v64 + 2]) < 0) {
        operator delete((void *)v172[v64]);
      }
      v64 -= 3;
    }
    while (v64 != -6);
    *(unsigned char *)(a2 + 984) = 1;
    *(_OWORD *)(a2 + 992) = xmmword_21718F0;
    *(void *)(a2 + 1008) = 0x4050400000000000;
    *(_DWORD *)(a2 + 1016) = 1000000;
    sub_5E5C(__p, "JP");
    sub_19764DC(a2 + 1024, (uint64_t)__p, 1);
    if (v171 < 0) {
      operator delete(__p[0]);
    }
    *(void *)(a2 + 1064) = 0x64000003E8;
    *(void *)(a2 + 1072) = 0x3FE0000000000000;
    return;
  }
  if ((*(uint64_t (**)(void))(**((void **)v5 + 5) + 8))(*((void *)v5 + 5))) {
    goto LABEL_6;
  }
  long long v65 = (void *)*((void *)v5 + 5);
  if (v65
  {
    char v66 = (std::__shared_weak_count *)*((void *)v5 + 6);
    if (v66) {
      atomic_fetch_add_explicit(&v66->__shared_owners_, 1uLL, memory_order_relaxed);
    }
  }
  else
  {
    char v66 = 0;
  }
  long long v67 = (uint64_t *)sub_2ABCB4((uint64_t)v65);
  sub_1896F30(a2, v67);
  if (v66) {
    sub_20A69F0(v66);
  }
}

void sub_1A129B8(_Unwind_Exception *a1)
{
  if (v1) {
    sub_20A69F0(v1);
  }
  _Unwind_Resume(a1);
}

void sub_1A143C4()
{
  while (1)
  {
    if (*((char *)v0 - 1) < 0) {
      operator delete((void *)*(v0 - 3));
    }
    v0 -= 3;
    if (v0 == &STACK[0x7C0]) {
      JUMPOUT(0x1A143BCLL);
    }
  }
}

void sub_1A143EC(uint64_t *a1@<X0>, uint64_t a2@<X1>, void ***a3@<X8>)
{
  uint64_t v5 = &v42;
  char v46 = 0;
  unint64_t v47 = 0;
  unint64_t v48 = 0;
  char v43 = 0;
  int v44 = 0;
  unint64_t v45 = 0;
  long long v40 = 0;
  char v41 = 0;
  unint64_t v42 = 0;
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  if (*a1 == v7)
  {
    char v18 = 0;
  }
  else
  {
    do
    {
      uint64_t v8 = (void **)(v6 + 80);
      if (*(void *)(v6 + 80))
      {
        if (sub_1926B1C(v6))
        {
          unint64_t v9 = v47;
          if (v47 >= v48)
          {
            uint64_t v11 = sub_1A1BAF0((uint64_t *)&v46, v6);
          }
          else
          {
            sub_19791C8(v47 + 8, v6 + 8);
            unint64_t v10 = *v8;
            *(_DWORD *)(v9 + 88) = *(_DWORD *)(v6 + 88);
            *(void *)(v9 + 80) = v10;
            uint64_t v11 = v9 + 96;
          }
          unint64_t v47 = v11;
        }
        else if (sub_1926BD0(v6))
        {
          uint64_t v12 = v44;
          if ((unint64_t)v44 >= v45)
          {
            uint64_t v14 = sub_1A1BAF0((uint64_t *)&v43, v6);
          }
          else
          {
            sub_19791C8((uint64_t)(v44 + 1), v6 + 8);
            uint64_t v13 = *v8;
            *((_DWORD *)v12 + 22) = *(_DWORD *)(v6 + 88);
            v12[10] = v13;
            uint64_t v14 = (uint64_t)(v12 + 12);
          }
          int v44 = (void **)v14;
        }
        else
        {
          uint64_t v15 = v41;
          if ((unint64_t)v41 >= v42)
          {
            uint64_t v17 = sub_1A1BAF0((uint64_t *)&v40, v6);
          }
          else
          {
            sub_19791C8((uint64_t)(v41 + 1), v6 + 8);
            char v16 = *v8;
            *((_DWORD *)v15 + 22) = *(_DWORD *)(v6 + 88);
            v15[10] = v16;
            uint64_t v17 = (uint64_t)(v15 + 12);
          }
          char v41 = (void **)v17;
        }
      }
      v6 += 96;
    }
    while (v6 != v7);
    char v18 = v41;
    if (v40 != v41)
    {
      *a3 = v40;
      a3[1] = v18;
LABEL_61:
      uint64_t v20 = &v40;
      goto LABEL_62;
    }
  }
  uint64_t v19 = v44;
  if (v44 == v43)
  {
    uint64_t v21 = (uint64_t)v46;
    unint64_t v22 = v47;
    if ((void **)v47 != v46)
    {
      int v23 = 0;
      int v24 = -1;
      do
      {
        if (*(void *)(v21 + 80))
        {
          int v25 = *(_DWORD *)(v21 + 88);
          if (v25 == 1)
          {
            if (*(_DWORD *)(v21 + 72)) {
LABEL_65:
            }
              sub_11388B8();
            uint64_t v28 = *(void *)(v21 + 8);
            if (*(void *)(v21 + 16) == v28
              || (int v29 = sub_1CDE2E8(v28), v30 = *(void *)(v21 + 8), *(void *)(v21 + 16) == v30))
            {
              sub_66748();
            }
            int v31 = sub_1CDE3A0(v30);
            if (v29 > v23) {
              int v23 = v29;
            }
            if (v31 > v24) {
              int v24 = v31;
            }
          }
          else if (!v25)
          {
            if (*(_DWORD *)(v21 + 72) != 1) {
              goto LABEL_65;
            }
            uint64_t v26 = *(void *)(v21 + 8);
            if (*(void *)(v21 + 16) == v26) {
              sub_66748();
            }
            int v27 = sub_1CDE9E4(v26);
            if (v27 > v23) {
              int v23 = v27;
            }
          }
        }
        v21 += 96;
      }
      while (v21 != v22);
      if (v23 <= 1) {
        int v32 = 1;
      }
      else {
        int v32 = v23;
      }
      if (v24 >= v32 || v24 <= 0) {
        int v34 = v32;
      }
      else {
        int v34 = v24;
      }
      long long v35 = (void **)v47;
      if (v46 == (void **)v47)
      {
        LODWORD(v36) = 0;
      }
      else
      {
        uint64_t v36 = 0;
        uint64_t v37 = (uint64_t)v46;
        do
        {
          v36 += *(void *)(v37 + 80);
          v37 += 96;
        }
        while (v37 != v47);
      }
      if (v34 <= 1) {
        int v38 = 1;
      }
      else {
        int v38 = *(_DWORD *)(a2 + 792);
      }
      if ((int)v36 <= v38 * *(_DWORD *)(a2 + 792))
      {
        *a3 = v46;
        a3[1] = v35;
        uint64_t v20 = &v46;
        uint64_t v5 = &v48;
        goto LABEL_62;
      }
      char v18 = v40;
    }
    int v39 = v41;
    *a3 = v18;
    a3[1] = v39;
    goto LABEL_61;
  }
  uint64_t v5 = &v45;
  *a3 = v43;
  a3[1] = v19;
  uint64_t v20 = &v43;
LABEL_62:
  a3[2] = (void **)*v5;
  *uint64_t v20 = 0;
  v20[1] = 0;
  v20[2] = 0;
  int v49 = &v40;
  sub_19771A8((void ***)&v49);
  long long v40 = (void **)&v43;
  sub_19771A8(&v40);
  char v43 = (void **)&v46;
  sub_19771A8(&v43);
}

void sub_1A14714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void ***a9, uint64_t a10, uint64_t a11, void **a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, void ***a18)
{
  a18 = (void ***)&a9;
  sub_19771A8((void ***)&a18);
  a9 = &a12;
  sub_19771A8((void ***)&a9);
  a12 = (void **)&a15;
  sub_19771A8(&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_1A1477C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = 0x2E8BA2E8BA2E8BA3 * ((a1[1] - *a1) >> 3);
  unint64_t v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) > 0x2E8BA2E8BA2E8BALL) {
    sub_2E00();
  }
  uint64_t v5 = (uint64_t)(a1 + 2);
  unint64_t v6 = 0x2E8BA2E8BA2E8BA3 * ((a1[2] - v2) >> 3);
  if (2 * v6 > v4) {
    unint64_t v4 = 2 * v6;
  }
  if (v6 >= 0x1745D1745D1745DLL) {
    unint64_t v7 = 0x2E8BA2E8BA2E8BALL;
  }
  else {
    unint64_t v7 = v4;
  }
  uint64_t v15 = a1 + 2;
  if (v7) {
    uint64_t v8 = (char *)sub_1891A94(v5, v7);
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v11 = v8;
  uint64_t v12 = &v8[88 * v3];
  uint64_t v14 = &v8[88 * v7];
  sub_15B15F8(v12);
  uint64_t v13 = v12 + 88;
  sub_1A1489C(a1, &v11);
  uint64_t v9 = a1[1];
  sub_1A14924((uint64_t)&v11);
  return v9;
}

void sub_1A14888(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1A14924((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1A1489C(uint64_t *a1, void *a2)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t result = a2[1];
  while (v4 != v5)
  {
    v4 -= 88;
    uint64_t result = sub_18EC078(result - 88, v4);
  }
  a2[1] = result;
  uint64_t v7 = *a1;
  *a1 = result;
  a2[1] = v7;
  uint64_t v8 = a1[1];
  a1[1] = a2[2];
  a2[2] = v8;
  uint64_t v9 = a1[2];
  a1[2] = a2[3];
  a2[3] = v9;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1A14924(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 88;
    sub_15B1678(i - 88);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1A14974(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a2;
  if (a5 >= 1)
  {
    uint64_t v7 = a3;
    uint64_t v11 = a1[2];
    uint64_t v9 = (uint64_t)(a1 + 2);
    uint64_t v10 = v11;
    unint64_t v12 = *(void *)(v9 - 8);
    if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v11 - v12) >> 8)) >= a5)
    {
      uint64_t v20 = v12 - a2;
      if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - a2) >> 8)) >= a5)
      {
        uint64_t v21 = a3 + 768 * a5;
      }
      else
      {
        uint64_t v21 = a3 + ((uint64_t)(v12 - a2) >> 8 << 8);
        a1[1] = sub_191709C(v9, v21, a4, *(void *)(v9 - 8));
        if (v20 < 1) {
          return v5;
        }
      }
      sub_191A24C((uint64_t)a1, v5, v12, v5 + 768 * a5);
      sub_1A14B60(v7, v21, v5);
    }
    else
    {
      uint64_t v13 = *a1;
      unint64_t v14 = a5 - 0x5555555555555555 * ((uint64_t)(v12 - *a1) >> 8);
      if (v14 > 0x55555555555555) {
        sub_2E00();
      }
      unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((a2 - v13) >> 8);
      unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((v10 - v13) >> 8);
      uint64_t v17 = 2 * v16;
      if (2 * v16 <= v14) {
        uint64_t v17 = v14;
      }
      if (v16 >= 0x2AAAAAAAAAAAAALL) {
        unint64_t v18 = 0x55555555555555;
      }
      else {
        unint64_t v18 = v17;
      }
      uint64_t v30 = v9;
      if (v18) {
        uint64_t v19 = (char *)sub_1915F28(v9, v18);
      }
      else {
        uint64_t v19 = 0;
      }
      uint64_t v22 = (uint64_t)&v19[768 * v15];
      v27[0] = v19;
      v27[1] = v22;
      uint64_t v28 = v22;
      int v29 = &v19[768 * v18];
      uint64_t v23 = 3 * a5;
      uint64_t v24 = v22 + 768 * a5;
      uint64_t v25 = v23 << 8;
      do
      {
        sub_1907C7C(v22, v7);
        v22 += 768;
        v7 += 768;
        v25 -= 768;
      }
      while (v25);
      uint64_t v28 = v24;
      uint64_t v5 = sub_191A2DC(a1, v27, v5);
      sub_1916220((uint64_t)v27);
    }
  }
  return v5;
}

void sub_1A14B34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v12 + 8) = v13;
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A14B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 != a2)
  {
    do
    {
      sub_191A49C(a3, v4);
      v4 += 768;
      a3 += 768;
    }
    while (v4 != a2);
    return a2;
  }
  return v4;
}

uint64_t sub_1A14BC0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a2;
  if (a5 >= 1)
  {
    uint64_t v7 = a3;
    uint64_t v11 = a1[2];
    uint64_t v9 = (uint64_t)(a1 + 2);
    uint64_t v10 = v11;
    unint64_t v12 = *(void *)(v9 - 8);
    if ((uint64_t)(0xA3A0FD5C5F02A3A1 * ((uint64_t)(v11 - v12) >> 3)) >= a5)
    {
      uint64_t v20 = v12 - a2;
      if ((uint64_t)(0xA3A0FD5C5F02A3A1 * ((uint64_t)(v12 - a2) >> 3)) >= a5)
      {
        uint64_t v21 = a3 + 776 * a5;
      }
      else
      {
        uint64_t v21 = a3 + 8 * ((uint64_t)(v12 - a2) >> 3);
        a1[1] = sub_1A14F34(v9, v21, a4, *(void *)(v9 - 8));
        if (v20 < 1) {
          return v5;
        }
      }
      sub_1A14DC8((uint64_t)a1, v5, v12, v5 + 776 * a5);
      sub_1A1528C(v7, v21, v5);
    }
    else
    {
      uint64_t v13 = *a1;
      unint64_t v14 = a5 - 0x5C5F02A3A0FD5C5FLL * ((uint64_t)(v12 - *a1) >> 3);
      if (v14 > 0x54741FAB8BE054) {
        sub_2E00();
      }
      unint64_t v15 = 0xA3A0FD5C5F02A3A1 * ((a2 - v13) >> 3);
      unint64_t v16 = 0xA3A0FD5C5F02A3A1 * ((v10 - v13) >> 3);
      uint64_t v17 = 2 * v16;
      if (2 * v16 <= v14) {
        uint64_t v17 = v14;
      }
      if (v16 >= 0x2A3A0FD5C5F02ALL) {
        unint64_t v18 = 0x54741FAB8BE054;
      }
      else {
        unint64_t v18 = v17;
      }
      uint64_t v29 = v9;
      if (v18) {
        uint64_t v19 = (char *)sub_19C222C(v9, v18);
      }
      else {
        uint64_t v19 = 0;
      }
      uint64_t v22 = (uint64_t)&v19[776 * v15];
      v26[0] = v19;
      v26[1] = v22;
      uint64_t v27 = v22;
      uint64_t v28 = &v19[776 * v18];
      uint64_t v23 = 776 * a5;
      uint64_t v24 = v22 + 776 * a5;
      do
      {
        sub_1907A78(v22, v7);
        v22 += 776;
        v7 += 776;
        v23 -= 776;
      }
      while (v23);
      uint64_t v27 = v24;
      uint64_t v5 = sub_1A14E58(a1, v26, v5);
      sub_19C236C((uint64_t)v26);
    }
  }
  return v5;
}

void sub_1A14D9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v12 + 8) = v13;
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A14DC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = a2 + v6 - a4;
  uint64_t v8 = v6;
  if (v7 < a3)
  {
    unint64_t v10 = a2 + v6 - a4;
    uint64_t v8 = v6;
    do
    {
      uint64_t v11 = sub_19C2278(v8, v10);
      v10 += 776;
      uint64_t v8 = v11 + 776;
    }
    while (v10 < a3);
  }
  *(void *)(a1 + 8) = v8;
  return sub_1A14FB8((uint64_t)&v13, a2, v7, v6);
}

uint64_t sub_1A14E58(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v6 = a2[1];
  uint64_t v7 = *a1;
  uint64_t v8 = v6;
  if (v7 != a3)
  {
    uint64_t v9 = a3;
    uint64_t v8 = a2[1];
    do
    {
      v9 -= 776;
      uint64_t v8 = sub_19C2278(v8 - 776, v9);
    }
    while (v9 != v7);
  }
  a2[1] = v8;
  uint64_t v10 = a1[1];
  uint64_t v11 = a2[2];
  if (v10 != v3)
  {
    do
    {
      sub_19C2278(v11, v3);
      v3 += 776;
      v11 += 776;
    }
    while (v3 != v10);
    uint64_t v8 = a2[1];
  }
  a2[2] = v11;
  uint64_t v12 = *a1;
  *a1 = v8;
  a2[1] = v12;
  uint64_t v13 = a1[1];
  a1[1] = a2[2];
  a2[2] = v13;
  uint64_t v14 = a1[2];
  a1[2] = a2[3];
  a2[3] = v14;
  *a2 = a2[1];
  return v6;
}

uint64_t sub_1A14F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_1907A78(a4 + v7, a2 + v7);
      v7 += 776;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_1A14F94(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 776;
    do
    {
      sub_1907F60(v4 + v2);
      v2 -= 776;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A14FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v7 = a4 - 776;
  uint64_t v8 = a3;
  while (v8 != a2)
  {
    v8 -= 776;
    v4 -= 776;
    uint64_t v9 = v7 - 776;
    sub_1A15028(v7, v8);
    uint64_t v7 = v9;
  }
  return a3;
}

uint64_t sub_1A15028(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *(unsigned int *)(result + 768);
  uint64_t v4 = *(unsigned int *)(a2 + 768);
  if (v3 == -1)
  {
    if (v4 == -1) {
      return result;
    }
  }
  else if (v4 == -1)
  {
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_24E8200[v3])(&v6, result, a2);
    *(_DWORD *)(v2 + 768) = -1;
    return result;
  }
  uint64_t v5 = result;
  return ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))off_24E8218[v4])(&v5, result, a2);
}

uint64_t sub_1A150B8(uint64_t *a1, uint64_t a2, long long *a3)
{
  return sub_1A150D0(*a1, a2, a3);
}

uint64_t sub_1A150C0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A15158(*a1, a2, a3);
}

void sub_1A150C8(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
}

uint64_t sub_1A150D0(uint64_t a1, uint64_t a2, long long *a3)
{
  if (*(_DWORD *)(a1 + 768)) {
    return sub_1A150EC(a1, a3);
  }
  else {
    return sub_1893964(a2, a3);
  }
}

uint64_t sub_1A150EC(uint64_t a1, long long *a2)
{
  uint64_t v4 = *(unsigned int *)(a1 + 768);
  if (v4 != -1) {
    ((void (*)(char *, uint64_t))off_24E8200[v4])(&v6, a1);
  }
  *(_DWORD *)(a1 + 768) = -1;
  uint64_t result = sub_18930D8(a1, a2);
  *(_DWORD *)(a1 + 768) = 0;
  return result;
}

uint64_t sub_1A15158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_DWORD *)(a1 + 768) == 1) {
    return sub_1917D54(a2, a3);
  }
  else {
    return sub_1A15178(a1, a3);
  }
}

uint64_t sub_1A15178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(unsigned int *)(a1 + 768);
  if (v4 != -1) {
    ((void (*)(char *, uint64_t))off_24E8200[v4])(&v6, a1);
  }
  *(_DWORD *)(a1 + 768) = -1;
  uint64_t result = sub_1915F70(a1, a2);
  *(_DWORD *)(a1 + 768) = 1;
  return result;
}

void sub_1A151E8(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  if (*(_DWORD *)(a1 + 768) == 2)
  {
    *a2 = *(_OWORD *)a3;
    sub_1893CA4((uint64_t)(a2 + 1), (uint64_t *)(a3 + 16));
  }
  else
  {
    sub_1A15210(a1, a3);
  }
}

uint64_t sub_1A15210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(unsigned int *)(a1 + 768);
  if (v4 != -1) {
    ((void (*)(char *, uint64_t))off_24E8200[v4])(&v6, a1);
  }
  *(_DWORD *)(a1 + 768) = -1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1893348(a1 + 16, (uint64_t *)(a2 + 16));
  *(_DWORD *)(a1 + 768) = 2;
  return a1;
}

uint64_t sub_1A1528C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 != a2)
  {
    do
    {
      sub_1A152EC(a3, v4);
      v4 += 776;
      a3 += 776;
    }
    while (v4 != a2);
    return a2;
  }
  return v4;
}

uint64_t sub_1A152EC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *(unsigned int *)(result + 768);
  uint64_t v4 = *(unsigned int *)(a2 + 768);
  if (v3 == -1)
  {
    if (v4 == -1) {
      return result;
    }
  }
  else if (v4 == -1)
  {
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_24E8200[v3])(&v6, result, a2);
    *(_DWORD *)(v2 + 768) = -1;
    return result;
  }
  uint64_t v5 = result;
  return ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))off_24E8230[v4])(&v5, result, a2);
}

uint64_t sub_1A1537C(uint64_t *a1, uint64_t a2, long long *a3)
{
  return sub_1A15394(*a1, a2, a3);
}

uint64_t sub_1A15384(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A15440(*a1, a2, a3);
}

void sub_1A1538C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1A15394(uint64_t a1, uint64_t a2, long long *a3)
{
  if (*(_DWORD *)(a1 + 768))
  {
    v4[0] = a1;
    v4[1] = a3;
    return sub_1A153E8((uint64_t)v4);
  }
  else
  {
    return sub_1893DEC(a2, a3);
  }
}

uint64_t sub_1A153E8(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  sub_1891E80((uint64_t)v3, *(long long **)(a1 + 8));
  sub_1A150EC(v1, v3);
  return sub_18933B8((uint64_t)v3);
}

void sub_1A1542C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1A15440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_DWORD *)(a1 + 768) == 1)
  {
    return sub_191A49C(a2, a3);
  }
  else
  {
    v4[0] = a1;
    v4[1] = a3;
    return sub_1A15498(v4);
  }
}

uint64_t sub_1A15498(uint64_t *a1)
{
  uint64_t v1 = *a1;
  sub_1907C7C((uint64_t)v3, a1[1]);
  sub_1A15178(v1, (uint64_t)v3);
  return sub_1907B68((uint64_t)v3);
}

void sub_1A154DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1A154F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_DWORD *)(a1 + 768) == 2)
  {
    *(_OWORD *)a2 = *(_OWORD *)a3;
    if (a2 != a3)
    {
      uint64_t v3 = (void *)(a2 + 16);
      *(_DWORD *)(a2 + 48) = *(_DWORD *)(a3 + 48);
      uint64_t v4 = *(uint64_t **)(a3 + 32);
      sub_18948F8(v3, v4, 0);
    }
  }
  else
  {
    v5[0] = a1;
    v5[1] = a3;
    sub_1A15564(v5);
  }
}

uint64_t sub_1A15564(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = (long long *)a1[1];
  long long v4 = *v1;
  sub_1892AD8((uint64_t)v5, (uint64_t)(v1 + 1));
  sub_1A15210(v2, (uint64_t)&v4);
  return sub_12168((uint64_t)v5);
}

void sub_1A155BC(_Unwind_Exception *a1)
{
  sub_12168(v1);
  _Unwind_Resume(a1);
}

void sub_1A155D4()
{
}

uint64_t sub_1A155E8(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  unint64_t v5 = 0xA3A0FD5C5F02A3A1 * ((uint64_t)(v4 - *a2) >> 3);
  if (v5 <= a3)
  {
    uint64_t v11 = sub_1A156B0;
    unint64_t v9 = 126 - 2 * __clz(v5);
    if (v4 == v3) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v9;
    }
    return sub_1A156F0(v3, v4, (uint64_t (**)(uint64_t, uint64_t))&v11, v10, 1);
  }
  else
  {
    unint64_t v7 = a3;
    uint64_t v11 = sub_1A156B0;
    if (a3) {
      sub_1A16C8C(v3, v3 + 776 * a3, v4, (uint64_t (**)(uint64_t, uint64_t))&v11);
    }
    return sub_19EAB4C(a2, v7);
  }
}

double sub_1A156A8(uint64_t a1, uint64_t a2)
{
  return sub_1A16C60(a2);
}

BOOL sub_1A156B0(uint64_t a1, uint64_t a2)
{
  double v3 = sub_1A16C60(a1);
  return v3 > sub_1A16C60(a2);
}

uint64_t sub_1A156F0(uint64_t result, unint64_t a2, uint64_t (**a3)(uint64_t, uint64_t), uint64_t a4, char a5)
{
  unint64_t v9 = a2;
  uint64_t v10 = result;
  unint64_t v25 = a2;
  unint64_t v26 = result;
LABEL_2:
  for (uint64_t i = 1 - a4; ; ++i)
  {
    uint64_t v12 = v9 - v10;
    unint64_t v13 = 0xA3A0FD5C5F02A3A1 * ((uint64_t)(v9 - v10) >> 3);
    if (!(!v6 & v5))
    {
      switch(v13)
      {
        case 0uLL:
        case 1uLL:
          return result;
        case 2uLL:
          uint64_t v23 = *a3;
          unint64_t v25 = v9 - 776;
          uint64_t result = ((uint64_t (*)(void))v23)();
          if (result) {
            uint64_t result = sub_1A15A08((uint64_t *)&v26, (uint64_t *)&v25);
          }
          break;
        case 3uLL:
          unint64_t v25 = v9 - 776;
          uint64_t result = sub_1A15D0C(v10, v10 + 776, v9 - 776, a3);
          break;
        case 4uLL:
          unint64_t v25 = v9 - 776;
          uint64_t result = sub_1A16480(v10, v10 + 776, v10 + 1552, v9 - 776, a3);
          break;
        case 5uLL:
          unint64_t v25 = v9 - 776;
          uint64_t result = sub_1A16538(v10, v10 + 776, v10 + 1552, v10 + 2328, v9 - 776, a3);
          break;
        default:
          JUMPOUT(0);
      }
      return result;
    }
    if (v12 <= 18623)
    {
      if (a5) {
        return sub_1A15AA4(v10, v9, a3);
      }
      else {
        return sub_1A15BEC(v10, v9, a3);
      }
    }
    if (i == 1) {
      break;
    }
    unint64_t v14 = v13 >> 1;
    uint64_t v15 = v9 - 776;
    if ((unint64_t)v12 >= 0x18401)
    {
      sub_1A15D0C(v10, v10 + 776 * (v13 >> 1), v15, a3);
      uint64_t v16 = 776 * v14;
      uint64_t v17 = 776 * v14 - 776;
      unint64_t v18 = v25;
      sub_1A15D0C(v26 + 776, v26 + v17, v25 - 1552, a3);
      sub_1A15D0C(v26 + 1552, v26 + v16 + 776, v18 - 2328, a3);
      sub_1A15D0C(v26 + v17, v26 + v16, v26 + v16 + 776, a3);
      unint64_t v24 = v26 + v16;
      sub_1A15DE8((uint64_t *)&v26, (uint64_t *)&v24);
      if (a5) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_1A15D0C(v10 + 776 * (v13 >> 1), v10, v15, a3);
      if (a5)
      {
LABEL_13:
        unint64_t v9 = v25;
        goto LABEL_14;
      }
    }
    char v19 = ((uint64_t (*)(unint64_t))*a3)(v26 - 776);
    unint64_t v9 = v25;
    if ((v19 & 1) == 0)
    {
      uint64_t result = sub_1A15E84(v26, v25, (unsigned int (**)(unsigned char *))a3);
      uint64_t v10 = result;
LABEL_22:
      a5 = 0;
      unint64_t v26 = v10;
      a4 = -i;
      goto LABEL_2;
    }
LABEL_14:
    unint64_t v20 = sub_1A1605C(v26, v9, (uint64_t (**)(void))a3);
    if ((v21 & 1) == 0) {
      goto LABEL_21;
    }
    int v22 = sub_1A16228(v26, v20, a3);
    uint64_t v10 = v20 + 776;
    uint64_t result = sub_1A16228(v20 + 776, v9, a3);
    if (result)
    {
      if (v22) {
        return result;
      }
      unint64_t v25 = v20;
      uint64_t v10 = v26;
      unint64_t v9 = v20;
    }
    else
    {
      if (!v22)
      {
LABEL_21:
        uint64_t result = sub_1A156F0(v26, v20, a3, -i, a5 & 1);
        uint64_t v10 = v20 + 776;
        goto LABEL_22;
      }
      unint64_t v26 = v20 + 776;
    }
  }
  if (v10 != v9) {
    return sub_1A16618(v10, v9, v9, a3);
  }
  return result;
}

uint64_t sub_1A15A08(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  sub_19C2278((uint64_t)v5, *a1);
  sub_1A15028(v2, v3);
  sub_1A15028(v3, (uint64_t)v5);
  return sub_1907F60((uint64_t)v5);
}

void sub_1A15A94(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_58CC(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A15AA4(uint64_t result, uint64_t a2, uint64_t (**a3)(uint64_t, uint64_t))
{
  if (result != a2)
  {
    uint64_t v4 = result;
    uint64_t v5 = result + 776;
    if (result + 776 != a2)
    {
      uint64_t v7 = 0;
      uint64_t v8 = result;
      do
      {
        uint64_t v9 = v8;
        uint64_t v8 = v5;
        uint64_t result = (*a3)(v5, v9);
        if (result)
        {
          sub_19C2278((uint64_t)v13, v8);
          uint64_t v10 = v7;
          while (1)
          {
            sub_1A15028(v4 + v10 + 776, v4 + v10);
            if (!v10) {
              break;
            }
            char v11 = (*a3)((uint64_t)v13, v4 + v10 - 776);
            v10 -= 776;
            if ((v11 & 1) == 0)
            {
              uint64_t v12 = v4 + v10 + 776;
              goto LABEL_10;
            }
          }
          uint64_t v12 = v4;
LABEL_10:
          sub_1A15028(v12, (uint64_t)v13);
          uint64_t result = sub_1907F60((uint64_t)v13);
        }
        uint64_t v5 = v8 + 776;
        v7 += 776;
      }
      while (v8 + 776 != a2);
    }
  }
  return result;
}

void sub_1A15BB8(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_58CC(exception_object);
}

uint64_t sub_1A15BEC(uint64_t result, uint64_t a2, uint64_t (**a3)(uint64_t, uint64_t))
{
  if (result != a2)
  {
    uint64_t v4 = result;
    uint64_t v5 = result + 776;
    if (result + 776 != a2)
    {
      do
      {
        uint64_t v7 = v5;
        uint64_t result = (*a3)(v5, v4);
        if (result)
        {
          sub_19C2278((uint64_t)v8, v7);
          do
          {
            sub_1A15028(v4 + 776, v4);
            v4 -= 776;
          }
          while (((*a3)((uint64_t)v8, v4) & 1) != 0);
          sub_1A15028(v4 + 776, (uint64_t)v8);
          uint64_t result = sub_1907F60((uint64_t)v8);
        }
        uint64_t v5 = v7 + 776;
        uint64_t v4 = v7;
      }
      while (v7 + 776 != a2);
    }
  }
  return result;
}

void sub_1A15CD8(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_58CC(exception_object);
}

uint64_t sub_1A15D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (**a4)(uint64_t, uint64_t))
{
  uint64_t v12 = a2;
  uint64_t v13 = a1;
  uint64_t v11 = a3;
  char v7 = (*a4)(a2, a1);
  uint64_t result = (*a4)(a3, a2);
  if ((v7 & 1) == 0)
  {
    if (!result) {
      return result;
    }
    sub_1A15A08(&v12, &v11);
    if (!(*a4)(v12, v13)) {
      return 1;
    }
    uint64_t v9 = &v13;
    uint64_t v10 = &v12;
    goto LABEL_9;
  }
  if (!result)
  {
    sub_1A15A08(&v13, &v12);
    if (!(*a4)(v11, v12)) {
      return 1;
    }
    uint64_t v9 = &v12;
    uint64_t v10 = &v11;
LABEL_9:
    sub_1A15A08(v9, v10);
    return 2;
  }
  sub_1A15A08(&v13, &v11);
  return 1;
}

uint64_t sub_1A15DE8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  sub_19C2278((uint64_t)v5, *a1);
  sub_1A15028(v2, v3);
  sub_1A15028(v3, (uint64_t)v5);
  return sub_1907F60((uint64_t)v5);
}

void sub_1A15E74(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_58CC(a1);
  }
  _Unwind_Resume(a1);
}

unint64_t sub_1A15E84(uint64_t a1, unint64_t a2, unsigned int (**a3)(unsigned char *))
{
  unint64_t v12 = a2;
  unint64_t v13 = a1;
  sub_19C2278((uint64_t)v14, a1);
  if (((uint64_t (*)(unsigned char *, unint64_t))*a3)(v14, a2 - 776))
  {
    unint64_t v6 = a1;
    do
    {
      v6 += 776;
      unint64_t v13 = v6;
    }
    while ((((uint64_t (*)(unsigned char *, unint64_t))*a3)(v14, v6) & 1) == 0);
  }
  else
  {
    unint64_t v7 = a1 + 776;
    do
    {
      unint64_t v6 = v7;
      unint64_t v13 = v7;
      if (v7 >= v12) {
        break;
      }
      int v8 = ((uint64_t (*)(unsigned char *, unint64_t))*a3)(v14, v7);
      unint64_t v7 = v6 + 776;
    }
    while (!v8);
  }
  unint64_t v9 = v12;
  if (v6 < v12)
  {
    do
    {
      v9 -= 776;
      unint64_t v12 = v9;
    }
    while ((((uint64_t (*)(unsigned char *, unint64_t))*a3)(v14, v9) & 1) != 0);
    unint64_t v6 = v13;
  }
  if (v6 < v9)
  {
    do
    {
      sub_1A15A08((uint64_t *)&v13, (uint64_t *)&v12);
      do
        v13 += 776;
      while (!(*a3)(v14));
      do
        v12 -= 776;
      while ((((uint64_t (*)(unsigned char *))*a3)(v14) & 1) != 0);
      unint64_t v6 = v13;
    }
    while (v13 < v12);
  }
  if (v6 - 776 != a1) {
    sub_1A15028(a1, v6 - 776);
  }
  sub_1A15028(v6 - 776, (uint64_t)v14);
  unint64_t v10 = v13;
  sub_1907F60((uint64_t)v14);
  return v10;
}

void sub_1A16020(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_58CC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A1605C(uint64_t a1, unint64_t a2, uint64_t (**a3)(void))
{
  unint64_t v14 = a2;
  sub_19C2278((uint64_t)v16, a1);
  uint64_t v5 = 0;
  do
  {
    unint64_t v15 = a1 + v5 + 776;
    v5 += 776;
  }
  while (((*a3)() & 1) != 0);
  unint64_t v6 = v14;
  if (v5 == 776)
  {
    unint64_t v9 = a1 + 776;
    do
    {
      if (v9 >= v6) {
        break;
      }
      unint64_t v10 = *a3;
      v6 -= 776;
      unint64_t v14 = v6;
    }
    while ((((uint64_t (*)(unint64_t, unsigned char *))v10)(v6, v16) & 1) == 0);
  }
  else
  {
    unint64_t v7 = v14 - 776;
    do
    {
      unint64_t v14 = v7;
      int v8 = ((uint64_t (*)(unint64_t, unsigned char *))*a3)(v7, v16);
      v7 -= 776;
    }
    while (!v8);
    unint64_t v9 = v15;
  }
  unint64_t v11 = v9;
  if (v9 < v14)
  {
    do
    {
      sub_1A15A08((uint64_t *)&v15, (uint64_t *)&v14);
      do
        v15 += 776;
      while (((*a3)() & 1) != 0);
      do
        v14 -= 776;
      while (!(*a3)());
      unint64_t v11 = v15;
    }
    while (v15 < v14);
  }
  uint64_t v12 = v11 - 776;
  if (v11 - 776 != a1) {
    sub_1A15028(a1, v11 - 776);
  }
  sub_1A15028(v12, (uint64_t)v16);
  sub_1907F60((uint64_t)v16);
  return v12;
}

void sub_1A161F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_58CC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A16228(uint64_t a1, uint64_t a2, uint64_t (**a3)(uint64_t, uint64_t))
{
  uint64_t v13 = a2;
  uint64_t v14 = a1;
  BOOL v6 = 1;
  switch(0xA3A0FD5C5F02A3A1 * ((a2 - a1) >> 3))
  {
    case 0uLL:
    case 1uLL:
      return v6;
    case 2uLL:
      unint64_t v7 = *a3;
      uint64_t v13 = a2 - 776;
      if (((unsigned int (*)(uint64_t))v7)(a2 - 776)) {
        sub_1A15A08(&v14, &v13);
      }
      return v6;
    case 3uLL:
      sub_1A15D0C(a1, a1 + 776, a2 - 776, a3);
      return v6;
    case 4uLL:
      sub_1A16480(a1, a1 + 776, a1 + 1552, a2 - 776, a3);
      return v6;
    case 5uLL:
      sub_1A16538(a1, a1 + 776, a1 + 1552, a1 + 2328, a2 - 776, a3);
      return v6;
    default:
      uint64_t v8 = a1 + 1552;
      sub_1A15D0C(a1, a1 + 776, a1 + 1552, a3);
      uint64_t v9 = a1 + 2328;
      if (v9 == a2) {
        return 1;
      }
      int v10 = 0;
      break;
  }
  while (!(*a3)(v9, v8))
  {
LABEL_12:
    uint64_t v8 = v9;
    v9 += 776;
    if (v9 == v13) {
      return 1;
    }
  }
  sub_19C2278((uint64_t)v15, v9);
  do
  {
    uint64_t v11 = v8;
    sub_1A15028(v8 + 776, v8);
    if (v8 == v14) {
      break;
    }
    v8 -= 776;
  }
  while (((*a3)((uint64_t)v15, v11 - 776) & 1) != 0);
  sub_1A15028(v11, (uint64_t)v15);
  if (++v10 != 8)
  {
    sub_1907F60((uint64_t)v15);
    goto LABEL_12;
  }
  BOOL v6 = v9 + 776 == v13;
  sub_1907F60((uint64_t)v15);
  return v6;
}

void sub_1A16434(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_58CC(exception_object);
}

uint64_t sub_1A16480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (**a5)(uint64_t, uint64_t))
{
  uint64_t v13 = a2;
  uint64_t v14 = a1;
  uint64_t v11 = a4;
  uint64_t v12 = a3;
  sub_1A15D0C(a1, a2, a3, a5);
  uint64_t result = (*a5)(a4, a3);
  if (result)
  {
    sub_1A15A08(&v12, &v11);
    uint64_t result = (*a5)(v12, a2);
    if (result)
    {
      sub_1A15A08(&v13, &v12);
      uint64_t result = (*a5)(v13, a1);
      if (result) {
        return sub_1A15A08(&v14, &v13);
      }
    }
  }
  return result;
}

uint64_t sub_1A16538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (**a6)(uint64_t, uint64_t))
{
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  uint64_t v14 = a4;
  uint64_t v15 = a3;
  uint64_t v13 = a5;
  sub_1A16480(a1, a2, a3, a4, a6);
  uint64_t result = (*a6)(a5, a4);
  if (result)
  {
    sub_1A15A08(&v14, &v13);
    uint64_t result = (*a6)(v14, a3);
    if (result)
    {
      sub_1A15A08(&v15, &v14);
      uint64_t result = (*a6)(v15, a2);
      if (result)
      {
        sub_1A15A08(&v16, &v15);
        uint64_t result = (*a6)(v16, a1);
        if (result) {
          return sub_1A15A08(&v17, &v16);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1A16618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (**a4)(uint64_t, uint64_t))
{
  uint64_t v18 = a1;
  if (a1 != a2)
  {
    uint64_t v6 = a2;
    uint64_t v7 = a1;
    uint64_t v8 = a2 - a1;
    uint64_t v9 = (a2 - a1) / 776;
    if (a2 - a1 >= 777)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      uint64_t v12 = a1 + 776 * v10;
      do
      {
        sub_1A16788(v7, a4, v9, v12);
        v12 -= 776;
        --v11;
      }
      while (v11);
    }
    uint64_t v17 = v6;
    if (v6 == a3)
    {
      a3 = v6;
    }
    else
    {
      uint64_t v13 = v6;
      do
      {
        if ((*a4)(v13, v18))
        {
          sub_1A15A08(&v17, &v18);
          sub_1A16788(v18, a4, v9, v18);
        }
        uint64_t v13 = v17 + 776;
        uint64_t v17 = v13;
      }
      while (v13 != a3);
      uint64_t v7 = v18;
      uint64_t v8 = v6 - v18;
    }
    if (v8 >= 777)
    {
      unint64_t v14 = v8 / 0x308uLL;
      do
      {
        sub_1A1694C(v7, v6, (unsigned int (**)(uint64_t, uint64_t))a4, v14);
        v6 -= 776;
      }
      while (v14-- > 2);
      return v17;
    }
  }
  return a3;
}

uint64_t sub_1A16788(uint64_t result, uint64_t (**a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  unint64_t v4 = a3 - 2;
  if (a3 >= 2)
  {
    uint64_t v5 = a4;
    uint64_t v6 = result;
    uint64_t v7 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= (uint64_t)(0xA3A0FD5C5F02A3A1 * ((a4 - result) >> 3)))
    {
      uint64_t v10 = (0x4741FAB8BE054742 * ((a4 - result) >> 3)) | 1;
      uint64_t v11 = result + 776 * v10;
      uint64_t v12 = 0x4741FAB8BE054742 * ((a4 - result) >> 3) + 2;
      if (v12 < a3 && (*a2)(result + 776 * v10, v11 + 776))
      {
        v11 += 776;
        uint64_t v10 = v12;
      }
      uint64_t result = (*a2)(v11, v5);
      if ((result & 1) == 0)
      {
        sub_19C2278((uint64_t)v15, v5);
        do
        {
          uint64_t v13 = v11;
          sub_1A15028(v5, v11);
          if (v7 < v10) {
            break;
          }
          uint64_t v14 = (2 * v10) | 1;
          uint64_t v11 = v6 + 776 * v14;
          uint64_t v10 = 2 * v10 + 2;
          if (v10 >= a3)
          {
            uint64_t v10 = v14;
          }
          else if ((*a2)(v6 + 776 * v14, v11 + 776))
          {
            v11 += 776;
          }
          else
          {
            uint64_t v10 = v14;
          }
          uint64_t v5 = v13;
        }
        while (!(*a2)(v11, (uint64_t)v15));
        sub_1A15028(v13, (uint64_t)v15);
        return sub_1907F60((uint64_t)v15);
      }
    }
  }
  return result;
}

void sub_1A16924(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2) {
    sub_58CC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A1694C(uint64_t result, uint64_t a2, unsigned int (**a3)(uint64_t, uint64_t), uint64_t a4)
{
  if (a4 >= 2)
  {
    uint64_t v7 = result;
    sub_19C2278((uint64_t)v11, result);
    uint64_t v8 = sub_1A16A78(v7, a3, a4);
    uint64_t v9 = v8;
    uint64_t v10 = a2 - 776;
    if (v8 == v10)
    {
      sub_1A15028(v8, (uint64_t)v11);
    }
    else
    {
      sub_1A15028(v8, v10);
      sub_1A15028(v10, (uint64_t)v11);
      sub_1A16B3C(v7, v9 + 776, (uint64_t (**)(uint64_t, uint64_t))a3, 0xA3A0FD5C5F02A3A1 * ((v9 + 776 - v7) >> 3));
    }
    return sub_1907F60((uint64_t)v11);
  }
  return result;
}

void sub_1A16A4C(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_58CC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A16A78(uint64_t a1, unsigned int (**a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    uint64_t v9 = a1 + 776 * v6 + 776;
    uint64_t v10 = 2 * v6;
    uint64_t v6 = (2 * v6) | 1;
    uint64_t v11 = v10 + 2;
    if (v10 + 2 < a3 && (*a2)(v9, v9 + 776))
    {
      v9 += 776;
      uint64_t v6 = v11;
    }
    sub_1A15028(a1, v9);
    a1 = v9;
  }
  while (v6 <= v8);
  return v9;
}

uint64_t sub_1A16B3C(uint64_t result, uint64_t a2, uint64_t (**a3)(uint64_t, uint64_t), uint64_t a4)
{
  unint64_t v4 = a4 - 2;
  if (a4 >= 2)
  {
    uint64_t v6 = result;
    unint64_t v7 = v4 >> 1;
    uint64_t v8 = result + 776 * (v4 >> 1);
    uint64_t v9 = a2 - 776;
    uint64_t result = (*a3)(v8, a2 - 776);
    if (result)
    {
      sub_19C2278((uint64_t)v11, v9);
      do
      {
        uint64_t v10 = v8;
        sub_1A15028(v9, v8);
        if (!v7) {
          break;
        }
        unint64_t v7 = (v7 - 1) >> 1;
        uint64_t v8 = v6 + 776 * v7;
        uint64_t v9 = v10;
      }
      while (((*a3)(v8, (uint64_t)v11) & 1) != 0);
      sub_1A15028(v10, (uint64_t)v11);
      return sub_1907F60((uint64_t)v11);
    }
  }
  return result;
}

void sub_1A16C34(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_58CC(exception_object);
}

double sub_1A16C60(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 768);
  if (!v1) {
    return sub_1CDDEFC(a1);
  }
  if (v1 == 2) {
    return 1.0;
  }
  double result = 0.0;
  if (v1 == 1) {
    return sub_1CDE6F8(a1);
  }
  return result;
}

uint64_t sub_1A16C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (**a4)(uint64_t, uint64_t))
{
  uint64_t v16 = a1;
  if (a1 != a2)
  {
    uint64_t v6 = a2;
    uint64_t v7 = a1;
    uint64_t v8 = (a2 - a1) / 776;
    if (a2 - a1 >= 777)
    {
      unint64_t v9 = (unint64_t)(v8 - 2) >> 1;
      unint64_t v10 = v9 + 1;
      uint64_t v11 = a1 + 776 * v9;
      do
      {
        sub_1A16E98(v7, a4, v8, v11);
        v11 -= 776;
        --v10;
      }
      while (v10);
    }
    uint64_t v17 = v6;
    if (v6 == a3)
    {
      a3 = v6;
    }
    else
    {
      uint64_t v12 = v6;
      do
      {
        if ((*a4)(v12, v16))
        {
          sub_1A16DFC(&v17, &v16);
          sub_1A16E98(v16, a4, v8, v16);
        }
        uint64_t v12 = v17 + 776;
        uint64_t v17 = v12;
      }
      while (v12 != a3);
      uint64_t v7 = v16;
    }
    if (v6 - v7 >= 777)
    {
      unint64_t v13 = (v6 - v7) / 0x308uLL;
      do
      {
        sub_1A17060(v7, v6, (unsigned int (**)(uint64_t, uint64_t))a4, v13);
        v6 -= 776;
      }
      while (v13-- > 2);
      return v17;
    }
  }
  return a3;
}

uint64_t sub_1A16DFC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  sub_19C2278((uint64_t)v5, *a1);
  sub_1A15028(v2, v3);
  sub_1A15028(v3, (uint64_t)v5);
  return sub_1907F60((uint64_t)v5);
}

void sub_1A16E88(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_58CC(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A16E98(uint64_t result, uint64_t (**a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  unint64_t v4 = a3 - 2;
  if (a3 >= 2)
  {
    uint64_t v5 = a4;
    uint64_t v6 = result;
    uint64_t v7 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= (uint64_t)(0xA3A0FD5C5F02A3A1 * ((a4 - result) >> 3)))
    {
      uint64_t v10 = (0x4741FAB8BE054742 * ((a4 - result) >> 3)) | 1;
      uint64_t v11 = result + 776 * v10;
      uint64_t v12 = 0x4741FAB8BE054742 * ((a4 - result) >> 3) + 2;
      if (v12 < a3 && (*a2)(result + 776 * v10, v11 + 776))
      {
        v11 += 776;
        uint64_t v10 = v12;
      }
      double result = (*a2)(v11, v5);
      if ((result & 1) == 0)
      {
        sub_19C2278((uint64_t)v15, v5);
        do
        {
          uint64_t v13 = v5;
          uint64_t v5 = v11;
          sub_1A15028(v13, v11);
          if (v7 < v10) {
            break;
          }
          uint64_t v14 = (2 * v10) | 1;
          uint64_t v11 = v6 + 776 * v14;
          uint64_t v10 = 2 * v10 + 2;
          if (v10 >= a3)
          {
            uint64_t v10 = v14;
          }
          else if ((*a2)(v6 + 776 * v14, v11 + 776))
          {
            v11 += 776;
          }
          else
          {
            uint64_t v10 = v14;
          }
        }
        while (!(*a2)(v11, (uint64_t)v15));
        sub_1A15028(v5, (uint64_t)v15);
        return sub_1907F60((uint64_t)v15);
      }
    }
  }
  return result;
}

void sub_1A17030(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_58CC(exception_object);
}

uint64_t sub_1A17060(uint64_t result, uint64_t a2, unsigned int (**a3)(uint64_t, uint64_t), uint64_t a4)
{
  if (a4 >= 2)
  {
    uint64_t v7 = result;
    sub_19C2278((uint64_t)v11, result);
    uint64_t v8 = sub_1A1718C(v7, a3, a4);
    uint64_t v9 = v8;
    uint64_t v10 = a2 - 776;
    if (v10 == v8)
    {
      sub_1A15028(v8, (uint64_t)v11);
    }
    else
    {
      sub_1A15028(v8, v10);
      sub_1A15028(v10, (uint64_t)v11);
      sub_1A17250(v7, v9 + 776, (uint64_t (**)(uint64_t, uint64_t))a3, 0xA3A0FD5C5F02A3A1 * ((v9 + 776 - v7) >> 3));
    }
    return sub_1907F60((uint64_t)v11);
  }
  return result;
}

void sub_1A17160(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_58CC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A1718C(uint64_t a1, unsigned int (**a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    uint64_t v9 = a1 + 776 * v6 + 776;
    uint64_t v10 = 2 * v6;
    uint64_t v6 = (2 * v6) | 1;
    uint64_t v11 = v10 + 2;
    if (v10 + 2 < a3 && (*a2)(v9, v9 + 776))
    {
      v9 += 776;
      uint64_t v6 = v11;
    }
    sub_1A15028(a1, v9);
    a1 = v9;
  }
  while (v6 <= v8);
  return v9;
}

uint64_t sub_1A17250(uint64_t result, uint64_t a2, uint64_t (**a3)(uint64_t, uint64_t), uint64_t a4)
{
  unint64_t v4 = a4 - 2;
  if (a4 >= 2)
  {
    uint64_t v6 = result;
    unint64_t v7 = v4 >> 1;
    uint64_t v8 = result + 776 * (v4 >> 1);
    uint64_t v9 = a2 - 776;
    double result = (*a3)(v8, a2 - 776);
    if (result)
    {
      sub_19C2278((uint64_t)v11, v9);
      do
      {
        uint64_t v10 = v8;
        sub_1A15028(v9, v8);
        if (!v7) {
          break;
        }
        unint64_t v7 = (v7 - 1) >> 1;
        uint64_t v8 = v6 + 776 * v7;
        uint64_t v9 = v10;
      }
      while (((*a3)(v8, (uint64_t)v11) & 1) != 0);
      sub_1A15028(v10, (uint64_t)v11);
      return sub_1907F60((uint64_t)v11);
    }
  }
  return result;
}

void sub_1A17348(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_58CC(exception_object);
}

void sub_1A17374(void **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  if (*a2 != v4)
  {
    do
    {
      uint64_t v7 = *(unsigned int *)(v3 + 72);
      if (v7 == -1) {
        sub_11388B8();
      }
      uint64_t v10 = a1;
      ((void (*)(uint64_t *__return_ptr, void ***, uint64_t))off_24E82A0[v7])(&v8, &v10, v3 + 8);
      sub_1A17F28((uint64_t *)a3, *(uint64_t **)(a3 + 8), v8, v9, 0xCCCCCCCCCCCCCCCDLL * ((v9 - v8) >> 3));
      uint64_t v10 = (void **)&v8;
      sub_1A1A1FC(&v10);
      v3 += 96;
    }
    while (v3 != v4);
  }
}

void sub_1A17440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_1A17474(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v4 = operator new(0x28uLL);
  v4[1] = 0;
  uint64_t v4[2] = 0;
  *uint64_t v4 = off_24E82D0;
  *((_DWORD *)v4 + 8) = 0;
  uint64_t v4[3] = off_24E8320;
  int v38 = a2 + 2;
  uint64_t v5 = sub_1121C00((uint64_t)(a2 + 2), 1uLL);
  int v34 = v5;
  long long v35 = (char *)v5;
  uint64_t v37 = (char *)&v5[2 * v6];
  *uint64_t v5 = v4 + 3;
  v5[1] = v4;
  uint64_t v36 = v5 + 2;
  sub_1A183DC(a2, &v34);
  uint64_t v7 = (void *)a2[1];
  sub_18B2BAC(&v34);
  a2[1] = (uint64_t)v7;
  uint64_t v8 = operator new(0x28uLL);
  uint64_t v9 = v8;
  v8[1] = 0;
  uint64_t v8[2] = 0;
  *uint64_t v8 = off_24E8370;
  uint64_t v10 = (char *)(v8 + 3);
  *((_DWORD *)v8 + 8) = 1;
  void v8[3] = off_24E83C0;
  unint64_t v11 = a2[2];
  if ((unint64_t)v7 >= v11)
  {
    uint64_t v13 = ((uint64_t)v7 - *a2) >> 4;
    if ((unint64_t)(v13 + 1) >> 60) {
      sub_2E00();
    }
    uint64_t v14 = v11 - *a2;
    uint64_t v15 = v14 >> 3;
    if (v14 >> 3 <= (unint64_t)(v13 + 1)) {
      uint64_t v15 = v13 + 1;
    }
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v16 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v16 = v15;
    }
    int v38 = a2 + 2;
    uint64_t v17 = (char *)sub_1121C00((uint64_t)(a2 + 2), v16);
    uint64_t v18 = &v17[16 * v13];
    int v34 = v17;
    long long v35 = v18;
    uint64_t v37 = &v17[16 * v19];
    *(void *)uint64_t v18 = v10;
    *((void *)v18 + 1) = v9;
    uint64_t v36 = v18 + 16;
    sub_1A183DC(a2, &v34);
    uint64_t v12 = (void *)a2[1];
    sub_18B2BAC(&v34);
  }
  else
  {
    *uint64_t v7 = v10;
    v7[1] = v8;
    uint64_t v12 = v7 + 2;
    a2[1] = (uint64_t)(v7 + 2);
  }
  a2[1] = (uint64_t)v12;
  sub_1A191AC(a1, &v33);
  long long v20 = v33;
  long long v33 = 0uLL;
  int v22 = (_OWORD *)a2[1];
  unint64_t v21 = a2[2];
  if ((unint64_t)v22 >= v21)
  {
    long long v32 = v20;
    uint64_t v23 = ((uint64_t)v22 - *a2) >> 4;
    unint64_t v24 = v23 + 1;
    if ((unint64_t)(v23 + 1) >> 60) {
      sub_2E00();
    }
    uint64_t v25 = v21 - *a2;
    if (v25 >> 3 > v24) {
      unint64_t v24 = v25 >> 3;
    }
    if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v26 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v26 = v24;
    }
    int v38 = a2 + 2;
    uint64_t v27 = (char *)sub_1121C00((uint64_t)(a2 + 2), v26);
    uint64_t v28 = &v27[16 * v23];
    int v34 = v27;
    long long v35 = v28;
    uint64_t v37 = &v27[16 * v29];
    *(_OWORD *)uint64_t v28 = v32;
    uint64_t v36 = v28 + 16;
    sub_1A183DC(a2, &v34);
    uint64_t v30 = a2[1];
    sub_18B2BAC(&v34);
    int v31 = (std::__shared_weak_count *)*((void *)&v33 + 1);
    a2[1] = v30;
    if (v31) {
      sub_20A69F0(v31);
    }
  }
  else
  {
    *int v22 = v20;
    a2[1] = (uint64_t)(v22 + 1);
  }
}

void sub_1A1770C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void **);
  uint64_t v6 = va_arg(va1, std::__shared_weak_count *);
  uint64_t v7 = va_arg(va1, void);
  sub_18B2BAC((void **)va1);
  if (v6) {
    sub_20A69F0(v6);
  }
  sub_197A1EC((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1A17790@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1A17DE8(*a1, a2, a3);
}

void sub_1A17798(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a1;
  memset(v5, 0, sizeof(v5));
  sub_1894EF8(v5, *a2, a2[1], 0x8F9C18F9C18F9C19 * ((a2[1] - *a2) >> 4));
  sub_1A17838(v4, v5, a3);
  uint64_t v6 = v5;
  sub_1894FD8((void ***)&v6);
}

void sub_1A17820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1894FD8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1A17838@<X0>(uint64_t result@<X0>, long long **a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  if (*a2 != v4)
  {
    uint64_t v5 = (uint64_t *)result;
    uint64_t v7 = result + 8;
    do
    {
      sub_1F29810((uint64_t)v3, *v5);
      sub_1A1790C(v7, v3);
      uint64_t v8 = sub_1CDDF4C((uint64_t)v3);
      unint64_t v9 = a3[1];
      if (v9 >= a3[2])
      {
        double result = sub_1A1799C(a3, v8);
      }
      else
      {
        sub_1892AD8(a3[1], v8);
        double result = v9 + 40;
        a3[1] = v9 + 40;
      }
      a3[1] = result;
      v3 += 41;
    }
    while (v3 != v4);
  }
  return result;
}

void sub_1A178E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  *(void *)(v10 + 8) = v11;
  a10 = (void **)v10;
  sub_1A1A1FC(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_1A1790C(uint64_t a1, long long *a2)
{
  sub_1891E80((uint64_t)v4, a2);
  v4[192] = 0;
  sub_1A0E290((uint64_t *)(a1 + 56), (uint64_t)v4);
  return sub_1907F60((uint64_t)v4);
}

void sub_1A17980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1A1799C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x666666666666666) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xCCCCCCCCCCCCCCCDLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x333333333333333) {
    unint64_t v9 = 0x666666666666666;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_19972A8(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v13 = v10;
  uint64_t v14 = &v10[40 * v4];
  unint64_t v16 = &v10[40 * v9];
  sub_1892AD8((uint64_t)v14, a2);
  uint64_t v15 = v14 + 40;
  sub_1A17AA4(a1, &v13);
  uint64_t v11 = a1[1];
  sub_1A17B2C((uint64_t)&v13);
  return v11;
}

void sub_1A17A90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1A17B2C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1A17AA4(uint64_t *a1, void *a2)
{
  unint64_t v5 = (uint64_t *)*a1;
  unint64_t v4 = (uint64_t *)a1[1];
  uint64_t result = a2[1];
  while (v4 != v5)
  {
    v4 -= 5;
    uint64_t result = sub_1893348(result - 40, v4);
  }
  a2[1] = result;
  uint64_t v7 = *a1;
  *a1 = result;
  a2[1] = v7;
  uint64_t v8 = a1[1];
  a1[1] = a2[2];
  a2[2] = v8;
  uint64_t v9 = a1[2];
  a1[2] = a2[3];
  a2[3] = v9;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1A17B2C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 40;
    sub_12168(i - 40);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1A17B7C(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a1;
  memset(v5, 0, sizeof(v5));
  sub_1916FC0(v5, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 8));
  sub_1A17C14(v4, v5, a3);
  uint64_t v6 = (void **)v5;
  sub_1916270(&v6);
}

void sub_1A17BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1916270((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1A17C14@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  if (*a2 != v4)
  {
    unint64_t v5 = (uint64_t *)result;
    uint64_t v7 = result + 8;
    do
    {
      sub_1F10C3C(v3, *v5);
      sub_1A17CE8(v7, v3);
      uint64_t v8 = sub_638F70(v3);
      unint64_t v9 = a3[1];
      if (v9 >= a3[2])
      {
        uint64_t result = sub_1A1799C(a3, v8);
      }
      else
      {
        sub_1892AD8(a3[1], v8);
        uint64_t result = v9 + 40;
        a3[1] = v9 + 40;
      }
      a3[1] = result;
      v3 += 768;
    }
    while (v3 != v4);
  }
  return result;
}

void sub_1A17CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  *(void *)(v10 + 8) = v11;
  a10 = (void **)v10;
  sub_1A1A1FC(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_1A17CE8(uint64_t a1, uint64_t a2)
{
  sub_1907C7C((uint64_t)v4, a2);
  v4[192] = 1;
  sub_1A0E290((uint64_t *)(a1 + 56), (uint64_t)v4);
  return sub_1907F60((uint64_t)v4);
}

void sub_1A17D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1A17D7C(uint64_t *a1@<X1>, void *a2@<X8>)
{
  memset(v3, 0, sizeof(v3));
  sub_197932C(v3, *a1, a1[1], 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 4));
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v4 = (void **)v3;
  sub_1976FBC(&v4);
}

uint64_t sub_1A17DE8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  if (*(unsigned char *)(a2 + 56))
  {
    sub_1A17E88(result + 8, (long long *)a2);
    uint64_t v5 = a2 + 16;
    unint64_t v6 = a3[1];
    if (v6 >= a3[2])
    {
      uint64_t result = sub_1A1799C(a3, v5);
    }
    else
    {
      sub_1892AD8(a3[1], v5);
      uint64_t result = v6 + 40;
      a3[1] = v6 + 40;
    }
    a3[1] = result;
  }
  return result;
}

void sub_1A17E64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  *(void *)(v10 + 8) = v11;
  a10 = (void **)v10;
  sub_1A1A1FC(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_1A17E88(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  sub_1892AD8((uint64_t)v5, (uint64_t)(a2 + 1));
  v5[188] = 2;
  sub_1A0E290((uint64_t *)(a1 + 56), (uint64_t)&v4);
  return sub_1907F60((uint64_t)&v4);
}

void sub_1A17F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t *sub_1A17F28(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a2;
  if (a5 >= 1)
  {
    uint64_t v7 = a3;
    uint64_t v11 = a1[2];
    uint64_t v9 = (uint64_t)(a1 + 2);
    uint64_t v10 = v11;
    unint64_t v12 = *(void *)(v9 - 8);
    if ((uint64_t)(0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v11 - v12) >> 3)) >= a5)
    {
      uint64_t v20 = v12 - (void)a2;
      if ((uint64_t)(0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v12 - (void)a2) >> 3)) >= a5)
      {
        uint64_t v21 = a3 + 40 * a5;
      }
      else
      {
        uint64_t v21 = a3 + 8 * ((uint64_t)(v12 - (void)a2) >> 3);
        a1[1] = sub_1A18284(v9, v21, a4, *(void *)(v9 - 8));
        if (v20 < 1) {
          return v5;
        }
      }
      sub_1A18118((uint64_t)a1, v5, v12, (uint64_t)&v5[5 * a5]);
      sub_1A18368((int)v27, v7, v21, (uint64_t)v5);
    }
    else
    {
      uint64_t v13 = *a1;
      unint64_t v14 = a5 - 0x3333333333333333 * ((uint64_t)(v12 - *a1) >> 3);
      if (v14 > 0x666666666666666) {
        sub_2E00();
      }
      unint64_t v15 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)a2 - v13) >> 3);
      unint64_t v16 = 0xCCCCCCCCCCCCCCCDLL * ((v10 - v13) >> 3);
      uint64_t v17 = 2 * v16;
      if (2 * v16 <= v14) {
        uint64_t v17 = v14;
      }
      if (v16 >= 0x333333333333333) {
        unint64_t v18 = 0x666666666666666;
      }
      else {
        unint64_t v18 = v17;
      }
      uint64_t v30 = v9;
      if (v18) {
        uint64_t v19 = (char *)sub_19972A8(v9, v18);
      }
      else {
        uint64_t v19 = 0;
      }
      uint64_t v22 = (uint64_t)&v19[40 * v15];
      v27[0] = v19;
      v27[1] = v22;
      uint64_t v28 = v22;
      uint64_t v29 = &v19[40 * v18];
      uint64_t v23 = 5 * a5;
      uint64_t v24 = v22 + 40 * a5;
      uint64_t v25 = 8 * v23;
      do
      {
        sub_1892AD8(v22, v7);
        v22 += 40;
        v7 += 40;
        v25 -= 40;
      }
      while (v25);
      uint64_t v28 = v24;
      uint64_t v5 = (uint64_t *)sub_1A181A8(a1, v27, v5);
      sub_1A17B2C((uint64_t)v27);
    }
  }
  return v5;
}

void sub_1A180EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v12 + 8) = v13;
  _Unwind_Resume(exception_object);
}

uint64_t *sub_1A18118(uint64_t a1, uint64_t *a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = (uint64_t *)((char *)a2 + v6 - a4);
  uint64_t v8 = v6;
  if ((unint64_t)v7 < a3)
  {
    uint64_t v10 = (uint64_t *)((char *)a2 + v6 - a4);
    uint64_t v8 = v6;
    do
    {
      uint64_t v11 = sub_1893348(v8, v10);
      v10 += 5;
      uint64_t v8 = v11 + 40;
    }
    while ((unint64_t)v10 < a3);
  }
  *(void *)(a1 + 8) = v8;

  return sub_1A18308(a2, v7, v6);
}

uint64_t sub_1A181A8(uint64_t *a1, void *a2, uint64_t *a3)
{
  uint64_t v3 = a3;
  uint64_t v6 = a2[1];
  uint64_t v7 = (uint64_t *)*a1;
  uint64_t v8 = v6;
  if (v7 != a3)
  {
    uint64_t v9 = a3;
    uint64_t v8 = a2[1];
    do
    {
      v9 -= 5;
      uint64_t v8 = sub_1893348(v8 - 40, v9);
    }
    while (v9 != v7);
  }
  a2[1] = v8;
  uint64_t v10 = (uint64_t *)a1[1];
  uint64_t v11 = a2[2];
  if (v10 != v3)
  {
    do
    {
      sub_1893348(v11, v3);
      v3 += 5;
      v11 += 40;
    }
    while (v3 != v10);
    uint64_t v8 = a2[1];
  }
  a2[2] = v11;
  uint64_t v12 = *a1;
  *a1 = v8;
  a2[1] = v12;
  uint64_t v13 = a1[1];
  a1[1] = a2[2];
  a2[2] = v13;
  uint64_t v14 = a1[2];
  a1[2] = a2[3];
  a2[3] = v14;
  *a2 = a2[1];
  return v6;
}

uint64_t sub_1A18284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_1892AD8(a4 + v7, a2 + v7);
      v7 += 40;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_1A182E4(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 40;
    do
    {
      sub_12168(v4 + v2);
      v2 -= 40;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_1A18308(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a2 != a1)
  {
    uint64_t v6 = a2;
    do
    {
      v6 -= 5;
      a3 -= 40;
      sub_1893CA4(a3, v6);
    }
    while (v6 != a1);
  }
  return a2;
}

uint64_t sub_1A18368(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  if (a2 != a3)
  {
    do
    {
      if (v5 != a4)
      {
        *(_DWORD *)(a4 + 32) = *(_DWORD *)(v5 + 32);
        sub_18948F8((void *)a4, *(uint64_t **)(v5 + 16), 0);
      }
      v5 += 40;
      a4 += 40;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

uint64_t sub_1A183DC(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1A18454((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1A18454(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v8 = (_OWORD *)(a7 - 16);
    do
    {
      long long v9 = *((_OWORD *)a3 - 1);
      a3 -= 2;
      *uint64_t v8 = v9;
      *a3 = 0;
      a3[1] = 0;
      *((void *)&v15 + 1) = v8;
      v7 -= 16;
      --v8;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  sub_1A184E8((uint64_t)v12);
  return v10;
}

uint64_t sub_1A184E8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_18B2B68(a1);
  }
  return a1;
}

void sub_1A18520(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24E82D0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1A18540(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24E82D0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1A18594(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1A185C0()
{
}

uint64_t sub_1A185D4(uint64_t result, uint64_t *a2)
{
  int v2 = 1594008481 * ((unint64_t)(a2[8] - a2[7]) >> 3);
  if (v2 >= 1)
  {
    uint64_t v4 = result;
    int v5 = 0;
    do
    {
      uint64_t v6 = a2[7];
      if (0xA3A0FD5C5F02A3A1 * ((a2[8] - v6) >> 3) <= v5) {
        sub_66748();
      }
      uint64_t v7 = v6 + 776 * v5;
      uint64_t result = sub_1A186B8(v4, v7);
      if (result)
      {
        sub_1A18734(a2, v7);
        uint64_t result = sub_1A18788((uint64_t)a2, v5);
        --v2;
      }
      else
      {
        ++v5;
      }
    }
    while (v5 < v2);
  }
  return result;
}

uint64_t sub_1A186B8(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 768) != 1) {
    return 0;
  }
  uint64_t v3 = sub_647A98(a2);
  if (sub_1E64C10(v3)) {
    return 1;
  }
  if (*(_DWORD *)(a2 + 768) != 1) {
    sub_11388B8();
  }
  uint64_t v5 = sub_647A98(a2);

  return sub_1E64C28(v5);
}

uint64_t sub_1A18734(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = a1[8];
  if (v3 >= a1[9])
  {
    uint64_t result = sub_19C2084(a1 + 7, a2);
  }
  else
  {
    sub_1907A78(a1[8], a2);
    uint64_t result = v3 + 776;
    a1[8] = v3 + 776;
  }
  a1[8] = result;
  return result;
}

void sub_1A18780(_Unwind_Exception *a1)
{
  *(void *)(v1 + 64) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1A18788(uint64_t result, unint64_t a2)
{
  uint64_t v3 = *(void *)(result + 56);
  uint64_t v2 = *(void *)(result + 64);
  if (0xA3A0FD5C5F02A3A1 * ((v2 - v3) >> 3) > a2)
  {
    uint64_t v4 = result;
    sub_1A18810((uint64_t)&v7, v3 + 776 * a2 + 776, v2, v3 + 776 * a2);
    uint64_t v6 = v5;
    uint64_t result = *(void *)(v4 + 64);
    if (result != v5)
    {
      do
        uint64_t result = sub_1907F60(result - 776);
      while (result != v6);
    }
    *(void *)(v4 + 64) = v6;
  }
  return result;
}

uint64_t sub_1A18810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  if (a2 != a3)
  {
    do
    {
      sub_1A15028(a4, v5);
      v5 += 776;
      a4 += 776;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

void sub_1A18874(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24E8370;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1A18894(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24E8370;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1A188E8(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1A18914()
{
}

void sub_1A18928(uint64_t a1, uint64_t a2)
{
  long long v20 = xmmword_2174670;
  uint64_t v21 = 0x4028000000000000;
  sub_1A18BD0((uint64_t)v18, (double *)&v20, 3);
  uint64_t v3 = *(void *)(a2 + 56);
  if (*(void *)(a2 + 64) != v3)
  {
    unint64_t v4 = 0;
    int v5 = -1;
    double v6 = -1.0;
    do
    {
      uint64_t v7 = v3 + 776 * v4;
      if (!*(_DWORD *)(v7 + 768))
      {
        double v8 = sub_1CDDF54(v7, 6, -1.0);
        long long v9 = (double *)v19[0];
        if (v19[0])
        {
          uint64_t v10 = (double *)v19;
          do
          {
            uint64_t v11 = v9;
            uint64_t v12 = v10;
            double v13 = v9[4];
            if (v13 >= v8) {
              uint64_t v10 = v9;
            }
            else {
              ++v9;
            }
            long long v9 = *(double **)v9;
          }
          while (v9);
          if (v10 != (double *)v19)
          {
            if (v13 < v8) {
              uint64_t v11 = v12;
            }
            if (v8 >= v11[4])
            {
              if (*(_DWORD *)(v7 + 768)) {
                sub_11388B8();
              }
              if (sub_1CDDF54(v7, 8, -1.0) == 1.0)
              {
                if (*(_DWORD *)(v7 + 768)) {
                  sub_11388B8();
                }
                sub_1891E80((uint64_t)&v20, (long long *)v7);
                double v14 = sub_1CDDF54((uint64_t)&v20, 0, -1.0);
                double v15 = v14;
                if (v14 > v6)
                {
                  int v5 = v4;
                  double v6 = v14;
                }
                sub_18933B8((uint64_t)&v20);
                if (!v4 && v15 != 5.0) {
                  break;
                }
              }
            }
          }
        }
      }
      ++v4;
      uint64_t v3 = *(void *)(a2 + 56);
    }
    while (0xA3A0FD5C5F02A3A1 * ((*(void *)(a2 + 64) - v3) >> 3) > v4);
    if (v6 != -1.0 && v5 != 0)
    {
      uint64_t v17 = *(void *)(a2 + 56);
      if (0xA3A0FD5C5F02A3A1 * ((*(void *)(a2 + 64) - v17) >> 3) <= v5) {
        sub_66748();
      }
      sub_1A18E74((uint64_t *)(a2 + 56), v17, v17 + 776 * v5);
      sub_1A18788(a2, v5 + 1);
    }
  }
  sub_22EFF4((uint64_t)v18, v19[0]);
}

void sub_1A18B8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  int v5 = va_arg(va1, void *);
  uint64_t v6 = va_arg(va1, void);
  sub_18933B8((uint64_t)va1);
  sub_22EFF4((uint64_t)va, v5);
  _Unwind_Resume(a1);
}

uint64_t sub_1A18BD0(uint64_t a1, double *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (double *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 8 * a3;
    do
    {
      sub_1A18C50((uint64_t **)a1, v4, a2, (uint64_t *)a2);
      ++a2;
      v6 -= 8;
    }
    while (v6);
  }
  return a1;
}

void sub_1A18C38(_Unwind_Exception *a1)
{
  sub_22EFF4(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_1A18C50(uint64_t **a1, double *a2, double *a3, uint64_t *a4)
{
  uint64_t v6 = sub_1A18CD8(a1, a2, &v11, &v10, a3);
  uint64_t v7 = *(uint64_t **)v6;
  if (!*(void *)v6)
  {
    double v8 = (uint64_t **)v6;
    uint64_t v7 = (uint64_t *)operator new(0x28uLL);
    v7[4] = *a4;
    sub_11220BC(a1, (uint64_t)v11, v8, v7);
  }
  return v7;
}

double *sub_1A18CD8(void *a1, double *a2, double **a3, double *a4, double *a5)
{
  int v5 = (double *)(a1 + 1);
  if (a1 + 1 == (void *)a2 || (double v6 = *a5, v7 = a2[4], *a5 < v7))
  {
    double v8 = *(uint64_t **)a2;
    if ((double *)*a1 == a2)
    {
      double v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      long long v9 = *(uint64_t **)a2;
      do
      {
        double v10 = (double *)v9;
        long long v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      double v13 = a2;
      do
      {
        double v10 = (double *)*((void *)v13 + 2);
        BOOL v14 = *(void *)v10 == (void)v13;
        double v13 = v10;
      }
      while (v14);
    }
    double v15 = *a5;
    if (v10[4] < *a5) {
      goto LABEL_17;
    }
    unint64_t v16 = *(double **)v5;
    if (*(void *)v5)
    {
      do
      {
        while (1)
        {
          uint64_t v17 = v16;
          double v18 = v16[4];
          if (v15 >= v18) {
            break;
          }
          unint64_t v16 = *(double **)v16;
          int v5 = v17;
          if (!*(void *)v17) {
            goto LABEL_43;
          }
        }
        if (v18 >= v15) {
          break;
        }
        int v5 = v16 + 1;
        unint64_t v16 = (double *)*((void *)v16 + 1);
      }
      while (v16);
      goto LABEL_43;
    }
LABEL_42:
    uint64_t v17 = (double *)(a1 + 1);
LABEL_43:
    *a3 = v17;
    return v5;
  }
  if (v7 >= v6)
  {
    *a3 = a2;
    *(void *)a4 = a2;
    return a4;
  }
  uint64_t v11 = *((void *)a2 + 1);
  if (v11)
  {
    uint64_t v12 = (double *)*((void *)a2 + 1);
    do
    {
      a4 = v12;
      uint64_t v12 = *(double **)v12;
    }
    while (v12);
  }
  else
  {
    uint64_t v19 = a2;
    do
    {
      a4 = (double *)*((void *)v19 + 2);
      BOOL v14 = *(void *)a4 == (void)v19;
      uint64_t v19 = a4;
    }
    while (!v14);
  }
  if (a4 != v5 && v6 >= a4[4])
  {
    long long v20 = *(double **)v5;
    if (*(void *)v5)
    {
      do
      {
        while (1)
        {
          uint64_t v17 = v20;
          double v21 = v20[4];
          if (v6 >= v21) {
            break;
          }
          long long v20 = *(double **)v20;
          int v5 = v17;
          if (!*(void *)v17) {
            goto LABEL_43;
          }
        }
        if (v21 >= v6) {
          break;
        }
        int v5 = v20 + 1;
        long long v20 = (double *)*((void *)v20 + 1);
      }
      while (v20);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v11)
  {
    *a3 = a4;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
  return a4;
}

unint64_t sub_1A18E74(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  unint64_t v4 = a2;
  unint64_t v6 = a1[1];
  unint64_t v9 = a1[2];
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = v9;
  if (v6 >= v9)
  {
    uint64_t v10 = *a1;
    unint64_t v11 = 0xA3A0FD5C5F02A3A1 * ((uint64_t)(v6 - *a1) >> 3) + 1;
    if (v11 > 0x54741FAB8BE054) {
      sub_2E00();
    }
    unint64_t v12 = 0xA3A0FD5C5F02A3A1 * ((a2 - v10) >> 3);
    unint64_t v13 = 0xA3A0FD5C5F02A3A1 * ((uint64_t)(v8 - v10) >> 3);
    unint64_t v14 = 2 * v13;
    if (2 * v13 <= v11) {
      unint64_t v14 = 0xA3A0FD5C5F02A3A1 * ((uint64_t)(v6 - *a1) >> 3) + 1;
    }
    if (v13 >= 0x2A3A0FD5C5F02ALL) {
      unint64_t v15 = 0x54741FAB8BE054;
    }
    else {
      unint64_t v15 = v14;
    }
    uint64_t v22 = v7;
    if (v15) {
      unint64_t v16 = (char *)sub_19C222C(v7, v15);
    }
    else {
      unint64_t v16 = 0;
    }
    double v18 = v16;
    uint64_t v19 = &v16[776 * v12];
    long long v20 = v19;
    double v21 = &v16[776 * v15];
    sub_1A1901C(&v18, a3);
    unint64_t v4 = sub_1A14E58(a1, &v18, v4);
    sub_19C236C((uint64_t)&v18);
  }
  else if (a2 == v6)
  {
    sub_1907A78(a2, a3);
    a1[1] = v4 + 776;
  }
  else
  {
    sub_1A14DC8((uint64_t)a1, a2, v6, a2 + 776);
    if (v4 <= a3) {
      a3 += 776 * (a1[1] > a3);
    }
    sub_1A152EC(v4, a3);
  }
  return v4;
}

void sub_1A18FFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  *(void *)(v11 + 8) = v10;
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A1901C(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  if (v4 == a1[3])
  {
    unint64_t v5 = a1[1];
    if (v5 <= *a1)
    {
      if (v4 == *a1) {
        unint64_t v11 = 1;
      }
      else {
        unint64_t v11 = 0x4741FAB8BE054742 * ((v4 - *a1) >> 3);
      }
      unint64_t v12 = v11 >> 2;
      uint64_t v13 = a1[4];
      uint64_t v30 = a1[4];
      unint64_t v14 = (char *)sub_19C222C(v13, v11);
      unint64_t v15 = &v14[776 * v12];
      uint64_t v17 = &v14[776 * v16];
      unint64_t v18 = a1[1];
      int64_t v19 = a1[2] - v18;
      if (v19)
      {
        uint64_t v20 = v19 / 776;
        double v21 = &v15[776 * v20];
        uint64_t v22 = 776 * v20;
        uint64_t v23 = (uint64_t)v15;
        do
        {
          uint64_t v23 = sub_19C2278(v23, v18) + 776;
          v18 += 776;
          v22 -= 776;
        }
        while (v22);
        int64x2_t v24 = *(int64x2_t *)(a1 + 1);
      }
      else
      {
        int64x2_t v24 = vdupq_n_s64(v18);
        double v21 = v15;
      }
      uint64_t v27 = *a1;
      *a1 = v14;
      a1[1] = v15;
      int64x2_t v28 = v24;
      uint64_t v25 = a1[3];
      a1[2] = v21;
      a1[3] = v17;
      uint64_t v29 = v25;
      sub_19C236C((uint64_t)&v27);
      uint64_t v4 = a1[2];
    }
    else
    {
      int64_t v6 = 0xA3A0FD5C5F02A3A1 * ((uint64_t)(v5 - *a1) >> 3);
      if (v6 >= -1) {
        uint64_t v7 = v6 + 1;
      }
      else {
        uint64_t v7 = v6 + 2;
      }
      uint64_t v8 = v7 >> 1;
      uint64_t v9 = -776 * v8;
      sub_1A18810((uint64_t)&v27, v5, v4, v5 - 776 * v8);
      uint64_t v4 = v10;
      a1[1] += v9;
      a1[2] = v10;
    }
  }
  uint64_t result = sub_1907A78(v4, a2);
  a1[2] += 776;
  return result;
}

void *sub_1A191AC@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0xB8uLL);
  uint64_t result = sub_1A19208(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_1A191F4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1A19208(void *a1, uint64_t a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_24E8400;
  sub_1A19300((uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_1A19250(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1A19264(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24E8400;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1A19284(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24E8400;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1A192D8(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_1A19300(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 8) = 2;
  *(void *)a1 = off_24E8450;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 88) = a1 + 96;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 112) = a1 + 120;
  uint64_t v4 = (uint64_t **)(a1 + 112);
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 136) = a1 + 144;
  unint64_t v5 = (uint64_t **)(a1 + 136);
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 152) = 0;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 152);
  if (a1 + 88 != a2 + 488) {
    sub_1A19AA8((uint64_t **)(a1 + 88), *(void **)(a2 + 488), (void *)(a2 + 496));
  }
  if (v4 != (uint64_t **)(a2 + 512)) {
    sub_1A19AA8(v4, *(void **)(a2 + 512), (void *)(a2 + 520));
  }
  if (v5 != (uint64_t **)(a2 + 536)) {
    sub_1A19AA8(v5, *(void **)(a2 + 536), (void *)(a2 + 544));
  }
  return a1;
}

void sub_1A19414(_Unwind_Exception *a1)
{
  sub_2F020(v3, *v6);
  sub_2F020(v2, *v5);
  sub_2F020(v1, *v4);
  _Unwind_Resume(a1);
}

uint64_t sub_1A19444(uint64_t a1)
{
  *(void *)a1 = off_24E8450;
  sub_2F020(a1 + 136, *(char **)(a1 + 144));
  sub_2F020(a1 + 112, *(char **)(a1 + 120));
  sub_2F020(a1 + 88, *(char **)(a1 + 96));
  return a1;
}

void sub_1A194A4(uint64_t a1)
{
  *(void *)a1 = off_24E8450;
  sub_2F020(a1 + 136, *(char **)(a1 + 144));
  sub_2F020(a1 + 112, *(char **)(a1 + 120));
  sub_2F020(a1 + 88, *(char **)(a1 + 96));

  operator delete();
}

void sub_1A19524(uint64_t a1, uint64_t a2)
{
  __n128 __p = 0;
  long long v60 = 0;
  char v61 = 0;
  char v56 = 0;
  uint64_t v57 = 0;
  uint64_t v58 = 0;
  char v53 = 0;
  uint64_t v54 = 0;
  long long v55 = 0;
  uint64_t v2 = *(void *)(a2 + 56);
  uint64_t v3 = *(void *)(a2 + 64);
  if (*(double *)(a1 + 24) > (double)(0xA3A0FD5C5F02A3A1 * ((v3 - v2) >> 3))) {
    goto LABEL_100;
  }
  if (v3 == v2)
  {
    int v46 = 0;
    int v45 = 0;
    BOOL v8 = 0;
    unsigned int v7 = 0;
    BOOL v10 = 1;
    BOOL v9 = 1;
    goto LABEL_86;
  }
  unint64_t v6 = 0;
  int v52 = 0;
  unsigned int v7 = 0;
  BOOL v8 = 0;
  BOOL v9 = 1;
  BOOL v10 = 1;
  while (1)
  {
    uint64_t v11 = v2 + 776 * v6;
    int v12 = *(_DWORD *)(v11 + 768);
    if (v12 != 1)
    {
      if (!v12 && (uint64_t)v6 < *(int *)(a1 + 80)) {
        goto LABEL_100;
      }
      goto LABEL_81;
    }
    if (v8)
    {
      BOOL v8 = 1;
      if (v7) {
        goto LABEL_10;
      }
    }
    else
    {
      BOOL v8 = sub_1CDE880(v11);
      if (v7)
      {
LABEL_10:
        unsigned int v7 = 1;
        goto LABEL_13;
      }
    }
    unsigned int v7 = sub_1CDE75C(v11);
LABEL_13:
    double v13 = sub_1CDE6AC(v11, 1, -1.0);
    if (v9)
    {
      BOOL v9 = sub_1A19D00(a1, v11);
      if (!v10) {
        goto LABEL_15;
      }
    }
    else
    {
      BOOL v9 = 0;
      if (!v10)
      {
LABEL_15:
        BOOL v10 = 0;
        goto LABEL_18;
      }
    }
    BOOL v10 = sub_1A19D84(a1, v11);
LABEL_18:
    __int16 v14 = sub_1A19E08(a1, v11);
    if (v14) {
      break;
    }
    if (v13 >= *(double *)(a1 + 16))
    {
      if (v13 >= *(double *)(a1 + 40))
      {
        unint64_t v15 = v60;
        if (v60 >= v61)
        {
          uint64_t v17 = (char *)__p;
          uint64_t v18 = (v60 - (unsigned char *)__p) >> 2;
          unint64_t v19 = v18 + 1;
          if ((unint64_t)(v18 + 1) >> 62) {
            goto LABEL_107;
          }
          uint64_t v20 = v61 - (unsigned char *)__p;
          if ((v61 - (unsigned char *)__p) >> 1 > v19) {
            unint64_t v19 = v20 >> 1;
          }
          if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v21 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v21 = v19;
          }
          if (v21)
          {
            uint64_t v22 = (char *)sub_1896AFC((uint64_t)&v61, v21);
            uint64_t v17 = (char *)__p;
            unint64_t v15 = v60;
          }
          else
          {
            uint64_t v22 = 0;
          }
          uint64_t v23 = &v22[4 * v18];
          *(_DWORD *)uint64_t v23 = v6;
          uint64_t v16 = v23 + 4;
          while (v15 != v17)
          {
            int v24 = *((_DWORD *)v15 - 1);
            v15 -= 4;
            *((_DWORD *)v23 - 1) = v24;
            v23 -= 4;
          }
          __n128 __p = v23;
          long long v60 = v16;
          char v61 = &v22[4 * v21];
          if (v17) {
            operator delete(v17);
          }
        }
        else
        {
          *(_DWORD *)long long v60 = v6;
          uint64_t v16 = v15 + 4;
        }
        long long v60 = v16;
      }
      if (v9 || v10)
      {
        if (v13 >= *(double *)(a1 + 56) || (v14 & 0x100) != 0 && v13 >= *(double *)(a1 + 72))
        {
          uint64_t v25 = v54;
          if (v54 >= v55)
          {
            int64x2_t v28 = (char *)v53;
            uint64_t v29 = (v54 - (unsigned char *)v53) >> 2;
            unint64_t v30 = v29 + 1;
            if ((unint64_t)(v29 + 1) >> 62) {
              goto LABEL_107;
            }
            uint64_t v31 = v55 - (unsigned char *)v53;
            if ((v55 - (unsigned char *)v53) >> 1 > v30) {
              unint64_t v30 = v31 >> 1;
            }
            if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v32 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v32 = v30;
            }
            if (v32)
            {
              long long v33 = (char *)sub_1896AFC((uint64_t)&v55, v32);
              int64x2_t v28 = (char *)v53;
              uint64_t v25 = v54;
            }
            else
            {
              long long v33 = 0;
            }
            long long v40 = &v33[4 * v29];
            *(_DWORD *)long long v40 = v6;
            unint64_t v26 = v40 + 4;
            while (v25 != v28)
            {
              int v41 = *((_DWORD *)v25 - 1);
              v25 -= 4;
              *((_DWORD *)v40 - 1) = v41;
              v40 -= 4;
            }
            char v53 = v40;
            uint64_t v54 = v26;
            long long v55 = &v33[4 * v32];
            if (v28) {
              operator delete(v28);
            }
          }
          else
          {
            *(_DWORD *)uint64_t v54 = v6;
            unint64_t v26 = v25 + 4;
          }
          uint64_t v54 = v26;
        }
      }
      else if (v13 >= *(double *)(a1 + 48) || (v14 & 0x100) != 0 && v13 >= *(double *)(a1 + 64))
      {
        uint64_t v27 = v57;
        if (v57 >= v58)
        {
          int v34 = (char *)v56;
          uint64_t v35 = (v57 - (unsigned char *)v56) >> 2;
          unint64_t v36 = v35 + 1;
          if ((unint64_t)(v35 + 1) >> 62) {
LABEL_107:
          }
            sub_2E00();
          uint64_t v37 = v58 - (unsigned char *)v56;
          if ((v58 - (unsigned char *)v56) >> 1 > v36) {
            unint64_t v36 = v37 >> 1;
          }
          if ((unint64_t)v37 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v38 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v38 = v36;
          }
          if (v38)
          {
            int v39 = (char *)sub_1896AFC((uint64_t)&v58, v38);
            int v34 = (char *)v56;
            uint64_t v27 = v57;
          }
          else
          {
            int v39 = 0;
          }
          unint64_t v42 = &v39[4 * v35];
          *(_DWORD *)unint64_t v42 = v6;
          char v43 = v42 + 4;
          while (v27 != v34)
          {
            int v44 = *((_DWORD *)v27 - 1);
            v27 -= 4;
            *((_DWORD *)v42 - 1) = v44;
            v42 -= 4;
          }
          char v56 = v42;
          uint64_t v57 = v43;
          uint64_t v58 = &v39[4 * v38];
          if (v34) {
            operator delete(v34);
          }
          BOOL v10 = 0;
          BOOL v9 = 0;
          uint64_t v57 = v43;
        }
        else
        {
          BOOL v10 = 0;
          BOOL v9 = 0;
          *(_DWORD *)uint64_t v57 = v6;
          uint64_t v57 = v27 + 4;
        }
      }
      else
      {
        BOOL v10 = 0;
        BOOL v9 = 0;
      }
    }
    else
    {
      ++v52;
    }
LABEL_81:
    ++v6;
    uint64_t v2 = *(void *)(a2 + 56);
    if (0xA3A0FD5C5F02A3A1 * ((*(void *)(a2 + 64) - v2) >> 3) <= v6)
    {
      int v45 = 0;
      goto LABEL_85;
    }
  }
  unsigned int v7 = 0;
  int v45 = 1;
LABEL_85:
  int v46 = v52;
LABEL_86:
  if (*(double *)(a1 + 32) <= (double)v46)
  {
    if (v9 || v10)
    {
      int v48 = v7 & (v45 ^ 1);
      BOOL v47 = v48 == 0;
      char v49 = v48 | v8;
      if (v47) {
        p_p = &__p;
      }
      else {
        p_p = &v53;
      }
      if ((v49 & 1) == 0) {
        goto LABEL_100;
      }
    }
    else
    {
      char v51 = v45 | v7 ^ 1;
      if (v51 & 1 | (v57 - (unsigned char *)v56 < (unint64_t)(v60 - (unsigned char *)__p))) {
        p_p = &__p;
      }
      else {
        p_p = &v56;
      }
      if (!v8 && (v51 & 1 | (v57 - (unsigned char *)v56 < (unint64_t)(v60 - (unsigned char *)__p))) != 0)
      {
        if (v51) {
          goto LABEL_100;
        }
        p_p = &v56;
      }
    }
    sub_1A19FD0(a1, a2, p_p);
  }
LABEL_100:
  if (v53)
  {
    uint64_t v54 = (char *)v53;
    operator delete(v53);
  }
  if (v56)
  {
    uint64_t v57 = (char *)v56;
    operator delete(v56);
  }
  if (__p)
  {
    long long v60 = (char *)__p;
    operator delete(__p);
  }
}

void sub_1A19A5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21)
{
  if (__p) {
    operator delete(__p);
  }
  if (a17) {
    operator delete(a17);
  }
  if (a20) {
    operator delete(a20);
  }
  _Unwind_Resume(exception_object);
}

uint64_t **sub_1A19AA8(uint64_t **result, void *a2, void *a3)
{
  unint64_t v5 = result;
  if (result[2])
  {
    unint64_t v6 = *result;
    unsigned int v7 = result[1];
    *uint64_t result = (uint64_t *)(result + 1);
    v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1]) {
      BOOL v8 = (uint64_t *)v6[1];
    }
    else {
      BOOL v8 = v6;
    }
    unint64_t v15 = result;
    uint64_t v16 = v8;
    uint64_t v17 = v8;
    if (v8)
    {
      uint64_t v16 = sub_18947B4((uint64_t)v8);
      if (a2 != a3)
      {
        BOOL v9 = a2;
        do
        {
          std::string::operator=((std::string *)(v8 + 4), (const std::string *)(v9 + 4));
          BOOL v10 = (uint64_t **)sub_19D03AC((uint64_t)v5, &v18, v17 + 4);
          sub_11220BC(v5, v18, v10, v17);
          uint64_t v17 = v16;
          if (v16) {
            uint64_t v16 = sub_18947B4((uint64_t)v16);
          }
          uint64_t v11 = (void *)v9[1];
          if (v11)
          {
            do
            {
              a2 = v11;
              uint64_t v11 = (void *)*v11;
            }
            while (v11);
          }
          else
          {
            do
            {
              a2 = (void *)v9[2];
              BOOL v12 = *a2 == (void)v9;
              BOOL v9 = a2;
            }
            while (!v12);
          }
          BOOL v8 = v17;
          if (v17) {
            BOOL v12 = a2 == a3;
          }
          else {
            BOOL v12 = 1;
          }
          BOOL v9 = a2;
        }
        while (!v12);
      }
    }
    uint64_t result = (uint64_t **)sub_1A19C2C((uint64_t)&v15);
  }
  if (a2 != a3)
  {
    do
    {
      uint64_t result = (uint64_t **)sub_1A19C84(v5, (uint64_t)(a2 + 4));
      double v13 = (void *)a2[1];
      if (v13)
      {
        do
        {
          __int16 v14 = v13;
          double v13 = (void *)*v13;
        }
        while (v13);
      }
      else
      {
        do
        {
          __int16 v14 = (void *)a2[2];
          BOOL v12 = *v14 == (void)a2;
          a2 = v14;
        }
        while (!v12);
      }
      a2 = v14;
    }
    while (v14 != a3);
  }
  return result;
}

void sub_1A19C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1A19C2C(uint64_t a1)
{
  sub_2F020(*(void *)a1, *(char **)(a1 + 16));
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      do
      {
        uint64_t v2 = v3;
        uint64_t v3 = *(void *)(v3 + 16);
      }
      while (v3);
      *(void *)(a1 + 8) = v2;
    }
    sub_2F020(*(void *)a1, (char *)v2);
  }
  return a1;
}

uint64_t *sub_1A19C84(uint64_t **a1, uint64_t a2)
{
  sub_1897C4C((uint64_t)a1, a2, (uint64_t)&v6);
  uint64_t v3 = (uint64_t **)sub_19D03AC((uint64_t)a1, &v5, v6 + 4);
  sub_11220BC(a1, v5, v3, v6);
  return v6;
}

void sub_1A19CDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, uint64_t a11)
{
  if (__p) {
    sub_1895EE8((uint64_t)&a11, __p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1A19D00(uint64_t a1, uint64_t a2)
{
  sub_1A1A04C(a2, (uint64_t)__p);
  unint64_t v2 = v7;
  if ((v7 & 0x80u) != 0) {
    unint64_t v2 = (unint64_t)__p[1];
  }
  if (v2 == 2)
  {
    uint64_t v3 = (void **)__p[0];
    if ((v7 & 0x80u) == 0) {
      uint64_t v3 = __p;
    }
    BOOL v4 = *(unsigned __int16 *)v3 == 20554;
    if ((char)v7 < 0) {
      goto LABEL_9;
    }
  }
  else
  {
    BOOL v4 = 0;
    if ((char)v7 < 0) {
LABEL_9:
    }
      operator delete(__p[0]);
  }
  return v4;
}

BOOL sub_1A19D84(uint64_t a1, uint64_t a2)
{
  sub_1A1A04C(a2, (uint64_t)__p);
  unint64_t v2 = v7;
  if ((v7 & 0x80u) != 0) {
    unint64_t v2 = (unint64_t)__p[1];
  }
  if (v2 == 2)
  {
    uint64_t v3 = (void **)__p[0];
    if ((v7 & 0x80u) == 0) {
      uint64_t v3 = __p;
    }
    BOOL v4 = *(unsigned __int16 *)v3 == 20041;
    if ((char)v7 < 0) {
      goto LABEL_9;
    }
  }
  else
  {
    BOOL v4 = 0;
    if ((char)v7 < 0) {
LABEL_9:
    }
      operator delete(__p[0]);
  }
  return v4;
}

uint64_t sub_1A19E08(uint64_t a1, uint64_t a2)
{
  long long v18 = 0uLL;
  uint64_t v19 = 0;
  uint64_t v3 = (void *)sub_1CDE640(a2);
  sub_2027B54(v3, (uint64_t)__p);
  if (v17)
  {
    sub_2027D3C((uint64_t)__p, (uint64_t)&v13);
    sub_1893DB0((uint64_t *)&v18);
    long long v18 = v13;
    uint64_t v19 = v14;
    uint64_t v14 = 0;
    long long v13 = 0uLL;
    uint64_t v20 = (void **)&v13;
    sub_1891624(&v20);
    uint64_t v4 = v18;
    if (*((void *)&v18 + 1) != (void)v18)
    {
      uint64_t v5 = 0;
      unint64_t v6 = 0;
      int v7 = 0;
      unsigned __int8 v8 = 0;
      uint64_t v9 = a1 + 88;
      uint64_t v10 = a1 + 112;
      uint64_t v11 = a1 + 136;
      while (!sub_1A1A0E8(v9, (void **)(v4 + v5)))
      {
        if (v8) {
          goto LABEL_7;
        }
        unsigned __int8 v8 = 0;
LABEL_9:
        if (sub_1A1A0E8(v11, (void **)(v18 + v5))) {
          int v7 = 1;
        }
        ++v6;
        uint64_t v4 = v18;
        v5 += 24;
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v18 + 1) - v18) >> 3) <= v6) {
          goto LABEL_16;
        }
      }
      unsigned __int8 v8 = 1;
LABEL_7:
      if (sub_1A1A0E8(v10, (void **)(v18 + v5))) {
        unsigned __int8 v8 = 0;
      }
      goto LABEL_9;
    }
    unsigned __int8 v8 = 0;
    int v7 = 0;
LABEL_16:
    if (v17 && v16 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    int v7 = 0;
    unsigned __int8 v8 = 0;
  }
  __p[0] = &v18;
  sub_1891624((void ***)__p);
  return v8 | (v7 << 8);
}

void sub_1A19F94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int16 *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, int a20,__int16 a21,char a22,char a23)
{
  if (a19)
  {
    if (a18 < 0) {
      operator delete(__p);
    }
  }
  __n128 __p = &a21;
  sub_1891624((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1A19FD0(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v3 = a3[1] - *a3;
  if ((int)(v3 >> 2) >= 1)
  {
    unint64_t v6 = (v3 >> 2) + 1;
    do
    {
      unint64_t v7 = (v6 - 2);
      if (v7 >= (uint64_t)(a3[1] - *a3) >> 2) {
        sub_66748();
      }
      uint64_t result = sub_1A18788(a2, *(int *)(*a3 + 4 * v7));
      --v6;
    }
    while (v6 > 1);
  }
  return result;
}

void *sub_1A1A04C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t result = (void *)sub_1CDE640(a1);
  if (result[2])
  {
    unint64_t v4 = result[6] & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      unint64_t v6 = *(void **)v4;
      unint64_t v7 = *(void *)(v4 + 8);
      return sub_4200((unsigned char *)a2, v6, v7);
    }
    else
    {
      long long v5 = *(_OWORD *)v4;
      *(void *)(a2 + 16) = *(void *)(v4 + 16);
      *(_OWORD *)a2 = v5;
    }
  }
  else
  {
    return sub_5E5C((void *)a2, (char *)&unk_217472B);
  }
  return result;
}

uint64_t sub_1A1A0E8(uint64_t a1, void **a2)
{
  unint64_t v2 = *(void ***)(a1 + 8);
  if (v2)
  {
    uint64_t v4 = 1;
    do
    {
      if ((sub_1122114(a2, v2 + 4) & 0x80) == 0)
      {
        if ((sub_1122114(v2 + 4, a2) & 0x80) == 0) {
          return v4;
        }
        ++v2;
      }
      unint64_t v2 = (void **)*v2;
    }
    while (v2);
  }
  return 0;
}

void *sub_1A1A154@<X0>(void *a1@<X8>)
{
  unint64_t v2 = operator new(0x28uLL);
  uint64_t result = sub_1A1A1A0(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_1A1A18C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1A1A1A0(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_24E7568;
  sub_1CC47B4(a1 + 3);
  return a1;
}

void sub_1A1A1E8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1A1A1FC(void ***a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    long long v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        uint64_t v4 = sub_12168(v4 - 40);
      while ((void *)v4 != v2);
      long long v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_1A1A280(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  uint64_t v9 = *(void **)a1;
  if (0xA3A0FD5C5F02A3A1 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) < a4)
  {
    sub_1A1A40C((void **)a1);
    if (a4 > 0x54741FAB8BE054) {
      sub_2E00();
    }
    unint64_t v10 = 0x4741FAB8BE054742 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    if (0xA3A0FD5C5F02A3A1 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) >= 0x2A3A0FD5C5F02ALL) {
      unint64_t v11 = 0x54741FAB8BE054;
    }
    else {
      unint64_t v11 = v10;
    }
    sub_19C2444((void *)a1, v11);
    uint64_t result = sub_19C249C(v8, a2, a3, *(void *)(a1 + 8));
    goto LABEL_11;
  }
  if (0xA3A0FD5C5F02A3A1 * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3) < a4)
  {
    uint64_t v13 = a2 + 8 * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3);
    sub_1A1528C(a2, v13, (uint64_t)v9);
    uint64_t result = sub_19C249C(v8, v13, a3, *(void *)(a1 + 8));
LABEL_11:
    *(void *)(a1 + 8) = result;
    return result;
  }
  sub_1A1528C(a2, a3, (uint64_t)v9);
  uint64_t v15 = v14;
  uint64_t result = *(void *)(a1 + 8);
  if (result != v14)
  {
    do
      uint64_t result = sub_1907F60(result - 776);
    while (result != v15);
  }
  *(void *)(a1 + 8) = v15;
  return result;
}

void sub_1A1A3FC(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1A1A404(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1A1A40C(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    uint64_t v4 = v1;
    if ((void *)v3 != v1)
    {
      do
        uint64_t v3 = sub_1907F60(v3 - 776);
      while ((void *)v3 != v1);
      uint64_t v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void sub_1A1A46C(uint64_t a1, std::string *__str, std::string *a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  uint64_t v9 = *(void **)a1;
  if (0xF0F0F0F0F0F0F0F1 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) < a4)
  {
    sub_1A1A5EC((void **)a1);
    if (a4 > 0x1E1E1E1E1E1E1E1) {
      sub_2E00();
    }
    unint64_t v10 = 0xE1E1E1E1E1E1E1E2 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    if (0xF0F0F0F0F0F0F0F1 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) >= 0xF0F0F0F0F0F0F0) {
      unint64_t v11 = 0x1E1E1E1E1E1E1E1;
    }
    else {
      unint64_t v11 = v10;
    }
    sub_1A1A654((void *)a1, v11);
    uint64_t v12 = sub_1A1A6A8(v8, (uint64_t)__str, (uint64_t)a3, *(void *)(a1 + 8));
    goto LABEL_11;
  }
  if (0xF0F0F0F0F0F0F0F1 * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3) < a4)
  {
    uint64_t v13 = (std::string *)((char *)__str + 8 * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3));
    sub_19EB3CC((int)&v17, __str, v13, (uint64_t)v9);
    uint64_t v12 = sub_1A1A6A8(v8, (uint64_t)v13, (uint64_t)a3, *(void *)(a1 + 8));
LABEL_11:
    *(void *)(a1 + 8) = v12;
    return;
  }
  sub_19EB3CC((int)&v18, __str, a3, (uint64_t)v9);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16 != v14)
  {
    do
    {
      v16 -= 136;
      sub_19770C4(v16);
    }
    while (v16 != v15);
  }
  *(void *)(a1 + 8) = v15;
}

void sub_1A1A5DC(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1A1A5E4(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1A1A5EC(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    uint64_t v4 = *a1;
    if ((void *)v3 != v1)
    {
      do
      {
        v3 -= 136;
        sub_19770C4(v3);
      }
      while ((void *)v3 != v1);
      uint64_t v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

char *sub_1A1A654(void *a1, unint64_t a2)
{
  if (a2 >= 0x1E1E1E1E1E1E1E2) {
    sub_2E00();
  }
  uint64_t result = (char *)sub_19EAD90((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[136 * v4];
  return result;
}

uint64_t sub_1A1A6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_19EABE0((void *)(a4 + v7), (long long *)(a2 + v7));
      v7 += 136;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_1A1A708(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 136;
    do
    {
      sub_19770C4(v4 + v2);
      v2 -= 136;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A1A730()
{
}

void *sub_1A1A744@<X0>(uint64_t *a1@<X2>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  unint64_t v6 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a1) >> 8));
  BOOL v7 = v5 == *a1;
  unint64_t v10 = sub_1A1A7E0;
  if (v7) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = v6;
  }
  sub_1917218(v4, v5, (uint64_t (**)(uint64_t, uint64_t))&v10, v8, 1);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return sub_1916FC0(a2, *a1, a1[1], 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 8));
}

BOOL sub_1A1A7E0(uint64_t a1, uint64_t a2)
{
  double v3 = sub_1CDE6AC(a1, 3, -1.0);
  if (v3 >= 2.22507386e-308) {
    double v4 = v3;
  }
  else {
    double v4 = 2.22507386e-308;
  }
  double v5 = sub_1CDE6AC(a2, 3, -1.0);
  if (v5 < 2.22507386e-308) {
    double v5 = 2.22507386e-308;
  }
  return v4 > v5;
}

BOOL sub_1A1A844(uint64_t a1, uint64_t a2)
{
  double v4 = sub_1A1BAB0(a1);
  if (v4 > sub_1A1BAB0(a2)) {
    return 1;
  }
  double v6 = sub_1A1BAB0(a1);
  if (v6 != sub_1A1BAB0(a2)) {
    return 0;
  }
  if (*(_DWORD *)(a1 + 768) != 1 || (float v7 = sub_1CDE6F0(a1), *(_DWORD *)(a2 + 768) != 1)) {
    sub_11388B8();
  }
  return v7 > sub_1CDE6F0(a2);
}

uint64_t sub_1A1A8EC(uint64_t result, unint64_t a2, uint64_t (**a3)(uint64_t, uint64_t), uint64_t a4, char a5)
{
  unint64_t v9 = a2;
  uint64_t v10 = result;
  unint64_t v25 = a2;
  unint64_t v26 = result;
LABEL_2:
  for (uint64_t i = 1 - a4; ; ++i)
  {
    uint64_t v12 = v9 - v10;
    unint64_t v13 = 0xA3A0FD5C5F02A3A1 * ((uint64_t)(v9 - v10) >> 3);
    if (!(!v6 & v5))
    {
      switch(v13)
      {
        case 0uLL:
        case 1uLL:
          return result;
        case 2uLL:
          uint64_t v23 = *a3;
          unint64_t v25 = v9 - 776;
          uint64_t result = ((uint64_t (*)(void))v23)();
          if (result) {
            uint64_t result = sub_1A15A08((uint64_t *)&v26, (uint64_t *)&v25);
          }
          break;
        case 3uLL:
          unint64_t v25 = v9 - 776;
          uint64_t result = sub_1A15D0C(v10, v10 + 776, v9 - 776, a3);
          break;
        case 4uLL:
          unint64_t v25 = v9 - 776;
          uint64_t result = sub_1A16480(v10, v10 + 776, v10 + 1552, v9 - 776, a3);
          break;
        case 5uLL:
          unint64_t v25 = v9 - 776;
          uint64_t result = sub_1A16538(v10, v10 + 776, v10 + 1552, v10 + 2328, v9 - 776, a3);
          break;
        default:
          JUMPOUT(0);
      }
      return result;
    }
    if (v12 <= 18623)
    {
      if (a5) {
        return sub_1A1AC04(v10, v9, a3);
      }
      else {
        return sub_1A1AD4C(v10, v9, a3);
      }
    }
    if (i == 1) {
      break;
    }
    unint64_t v14 = v13 >> 1;
    uint64_t v15 = v9 - 776;
    if ((unint64_t)v12 >= 0x18401)
    {
      sub_1A15D0C(v10, v10 + 776 * (v13 >> 1), v15, a3);
      uint64_t v16 = 776 * v14;
      uint64_t v17 = 776 * v14 - 776;
      unint64_t v18 = v25;
      sub_1A15D0C(v26 + 776, v26 + v17, v25 - 1552, a3);
      sub_1A15D0C(v26 + 1552, v26 + v16 + 776, v18 - 2328, a3);
      sub_1A15D0C(v26 + v17, v26 + v16, v26 + v16 + 776, a3);
      unint64_t v24 = v26 + v16;
      sub_1A15DE8((uint64_t *)&v26, (uint64_t *)&v24);
      if (a5) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_1A15D0C(v10 + 776 * (v13 >> 1), v10, v15, a3);
      if (a5)
      {
LABEL_13:
        unint64_t v9 = v25;
        goto LABEL_14;
      }
    }
    char v19 = ((uint64_t (*)(unint64_t))*a3)(v26 - 776);
    unint64_t v9 = v25;
    if ((v19 & 1) == 0)
    {
      uint64_t result = sub_1A1AE6C(v26, v25, (unsigned int (**)(unsigned char *))a3);
      uint64_t v10 = result;
LABEL_22:
      a5 = 0;
      unint64_t v26 = v10;
      a4 = -i;
      goto LABEL_2;
    }
LABEL_14:
    unint64_t v20 = sub_1A1B044(v26, v9, (uint64_t (**)(void))a3);
    if ((v21 & 1) == 0) {
      goto LABEL_21;
    }
    int v22 = sub_1A1B210(v26, v20, a3);
    uint64_t v10 = v20 + 776;
    uint64_t result = sub_1A1B210(v20 + 776, v9, a3);
    if (result)
    {
      if (v22) {
        return result;
      }
      unint64_t v25 = v20;
      uint64_t v10 = v26;
      unint64_t v9 = v20;
    }
    else
    {
      if (!v22)
      {
LABEL_21:
        uint64_t result = sub_1A1A8EC(v26, v20, a3, -i, a5 & 1);
        uint64_t v10 = v20 + 776;
        goto LABEL_22;
      }
      unint64_t v26 = v20 + 776;
    }
  }
  if (v10 != v9) {
    return sub_1A1B468(v10, v9, v9, a3);
  }
  return result;
}

uint64_t sub_1A1AC04(uint64_t result, uint64_t a2, uint64_t (**a3)(uint64_t, uint64_t))
{
  if (result != a2)
  {
    uint64_t v4 = result;
    uint64_t v5 = result + 776;
    if (result + 776 != a2)
    {
      uint64_t v7 = 0;
      uint64_t v8 = result;
      do
      {
        uint64_t v9 = v8;
        uint64_t v8 = v5;
        uint64_t result = (*a3)(v5, v9);
        if (result)
        {
          sub_19C2278((uint64_t)v13, v8);
          uint64_t v10 = v7;
          while (1)
          {
            sub_1A15028(v4 + v10 + 776, v4 + v10);
            if (!v10) {
              break;
            }
            char v11 = (*a3)((uint64_t)v13, v4 + v10 - 776);
            v10 -= 776;
            if ((v11 & 1) == 0)
            {
              uint64_t v12 = v4 + v10 + 776;
              goto LABEL_10;
            }
          }
          uint64_t v12 = v4;
LABEL_10:
          sub_1A15028(v12, (uint64_t)v13);
          uint64_t result = sub_1907F60((uint64_t)v13);
        }
        uint64_t v5 = v8 + 776;
        v7 += 776;
      }
      while (v8 + 776 != a2);
    }
  }
  return result;
}

void sub_1A1AD18(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_58CC(exception_object);
}

uint64_t sub_1A1AD4C(uint64_t result, uint64_t a2, uint64_t (**a3)(uint64_t, uint64_t))
{
  if (result != a2)
  {
    uint64_t v4 = result;
    uint64_t v5 = result + 776;
    if (result + 776 != a2)
    {
      do
      {
        uint64_t v7 = v5;
        uint64_t result = (*a3)(v5, v4);
        if (result)
        {
          sub_19C2278((uint64_t)v8, v7);
          do
          {
            sub_1A15028(v4 + 776, v4);
            v4 -= 776;
          }
          while (((*a3)((uint64_t)v8, v4) & 1) != 0);
          sub_1A15028(v4 + 776, (uint64_t)v8);
          uint64_t result = sub_1907F60((uint64_t)v8);
        }
        uint64_t v5 = v7 + 776;
        uint64_t v4 = v7;
      }
      while (v7 + 776 != a2);
    }
  }
  return result;
}

void sub_1A1AE38(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_58CC(exception_object);
}

unint64_t sub_1A1AE6C(uint64_t a1, unint64_t a2, unsigned int (**a3)(unsigned char *))
{
  unint64_t v12 = a2;
  unint64_t v13 = a1;
  sub_19C2278((uint64_t)v14, a1);
  if (((uint64_t (*)(unsigned char *, unint64_t))*a3)(v14, a2 - 776))
  {
    unint64_t v6 = a1;
    do
    {
      v6 += 776;
      unint64_t v13 = v6;
    }
    while ((((uint64_t (*)(unsigned char *, unint64_t))*a3)(v14, v6) & 1) == 0);
  }
  else
  {
    unint64_t v7 = a1 + 776;
    do
    {
      unint64_t v6 = v7;
      unint64_t v13 = v7;
      if (v7 >= v12) {
        break;
      }
      int v8 = ((uint64_t (*)(unsigned char *, unint64_t))*a3)(v14, v7);
      unint64_t v7 = v6 + 776;
    }
    while (!v8);
  }
  unint64_t v9 = v12;
  if (v6 < v12)
  {
    do
    {
      v9 -= 776;
      unint64_t v12 = v9;
    }
    while ((((uint64_t (*)(unsigned char *, unint64_t))*a3)(v14, v9) & 1) != 0);
    unint64_t v6 = v13;
  }
  if (v6 < v9)
  {
    do
    {
      sub_1A15A08((uint64_t *)&v13, (uint64_t *)&v12);
      do
        v13 += 776;
      while (!(*a3)(v14));
      do
        v12 -= 776;
      while ((((uint64_t (*)(unsigned char *))*a3)(v14) & 1) != 0);
      unint64_t v6 = v13;
    }
    while (v13 < v12);
  }
  if (v6 - 776 != a1) {
    sub_1A15028(a1, v6 - 776);
  }
  sub_1A15028(v6 - 776, (uint64_t)v14);
  unint64_t v10 = v13;
  sub_1907F60((uint64_t)v14);
  return v10;
}

void sub_1A1B008(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_58CC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A1B044(uint64_t a1, unint64_t a2, uint64_t (**a3)(void))
{
  unint64_t v14 = a2;
  sub_19C2278((uint64_t)v16, a1);
  uint64_t v5 = 0;
  do
  {
    unint64_t v15 = a1 + v5 + 776;
    v5 += 776;
  }
  while (((*a3)() & 1) != 0);
  unint64_t v6 = v14;
  if (v5 == 776)
  {
    unint64_t v9 = a1 + 776;
    do
    {
      if (v9 >= v6) {
        break;
      }
      unint64_t v10 = *a3;
      v6 -= 776;
      unint64_t v14 = v6;
    }
    while ((((uint64_t (*)(unint64_t, unsigned char *))v10)(v6, v16) & 1) == 0);
  }
  else
  {
    unint64_t v7 = v14 - 776;
    do
    {
      unint64_t v14 = v7;
      int v8 = ((uint64_t (*)(unint64_t, unsigned char *))*a3)(v7, v16);
      v7 -= 776;
    }
    while (!v8);
    unint64_t v9 = v15;
  }
  unint64_t v11 = v9;
  if (v9 < v14)
  {
    do
    {
      sub_1A15A08((uint64_t *)&v15, (uint64_t *)&v14);
      do
        v15 += 776;
      while (((*a3)() & 1) != 0);
      do
        v14 -= 776;
      while (!(*a3)());
      unint64_t v11 = v15;
    }
    while (v15 < v14);
  }
  uint64_t v12 = v11 - 776;
  if (v11 - 776 != a1) {
    sub_1A15028(a1, v11 - 776);
  }
  sub_1A15028(v12, (uint64_t)v16);
  sub_1907F60((uint64_t)v16);
  return v12;
}

void sub_1A1B1D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_58CC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A1B210(uint64_t a1, uint64_t a2, uint64_t (**a3)(uint64_t, uint64_t))
{
  uint64_t v13 = a2;
  uint64_t v14 = a1;
  BOOL v6 = 1;
  switch(0xA3A0FD5C5F02A3A1 * ((a2 - a1) >> 3))
  {
    case 0uLL:
    case 1uLL:
      return v6;
    case 2uLL:
      unint64_t v7 = *a3;
      uint64_t v13 = a2 - 776;
      if (((unsigned int (*)(uint64_t))v7)(a2 - 776)) {
        sub_1A15A08(&v14, &v13);
      }
      return v6;
    case 3uLL:
      sub_1A15D0C(a1, a1 + 776, a2 - 776, a3);
      return v6;
    case 4uLL:
      sub_1A16480(a1, a1 + 776, a1 + 1552, a2 - 776, a3);
      return v6;
    case 5uLL:
      sub_1A16538(a1, a1 + 776, a1 + 1552, a1 + 2328, a2 - 776, a3);
      return v6;
    default:
      uint64_t v8 = a1 + 1552;
      sub_1A15D0C(a1, a1 + 776, a1 + 1552, a3);
      uint64_t v9 = a1 + 2328;
      if (v9 == a2) {
        return 1;
      }
      int v10 = 0;
      break;
  }
  while (!(*a3)(v9, v8))
  {
LABEL_12:
    uint64_t v8 = v9;
    v9 += 776;
    if (v9 == v13) {
      return 1;
    }
  }
  sub_19C2278((uint64_t)v15, v9);
  do
  {
    uint64_t v11 = v8;
    sub_1A15028(v8 + 776, v8);
    if (v8 == v14) {
      break;
    }
    v8 -= 776;
  }
  while (((*a3)((uint64_t)v15, v11 - 776) & 1) != 0);
  sub_1A15028(v11, (uint64_t)v15);
  if (++v10 != 8)
  {
    sub_1907F60((uint64_t)v15);
    goto LABEL_12;
  }
  BOOL v6 = v9 + 776 == v13;
  sub_1907F60((uint64_t)v15);
  return v6;
}

void sub_1A1B41C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_58CC(exception_object);
}

uint64_t sub_1A1B468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (**a4)(uint64_t, uint64_t))
{
  uint64_t v18 = a1;
  if (a1 != a2)
  {
    uint64_t v6 = a2;
    uint64_t v7 = a1;
    uint64_t v8 = a2 - a1;
    uint64_t v9 = (a2 - a1) / 776;
    if (a2 - a1 >= 777)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      uint64_t v12 = a1 + 776 * v10;
      do
      {
        sub_1A1B5D8(v7, a4, v9, v12);
        v12 -= 776;
        --v11;
      }
      while (v11);
    }
    uint64_t v17 = v6;
    if (v6 == a3)
    {
      a3 = v6;
    }
    else
    {
      uint64_t v13 = v6;
      do
      {
        if ((*a4)(v13, v18))
        {
          sub_1A15A08(&v17, &v18);
          sub_1A1B5D8(v18, a4, v9, v18);
        }
        uint64_t v13 = v17 + 776;
        uint64_t v17 = v13;
      }
      while (v13 != a3);
      uint64_t v7 = v18;
      uint64_t v8 = v6 - v18;
    }
    if (v8 >= 777)
    {
      unint64_t v14 = v8 / 0x308uLL;
      do
      {
        sub_1A1B79C(v7, v6, (unsigned int (**)(uint64_t, uint64_t))a4, v14);
        v6 -= 776;
      }
      while (v14-- > 2);
      return v17;
    }
  }
  return a3;
}

uint64_t sub_1A1B5D8(uint64_t result, uint64_t (**a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  unint64_t v4 = a3 - 2;
  if (a3 >= 2)
  {
    uint64_t v5 = a4;
    uint64_t v6 = result;
    uint64_t v7 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= (uint64_t)(0xA3A0FD5C5F02A3A1 * ((a4 - result) >> 3)))
    {
      uint64_t v10 = (0x4741FAB8BE054742 * ((a4 - result) >> 3)) | 1;
      uint64_t v11 = result + 776 * v10;
      uint64_t v12 = 0x4741FAB8BE054742 * ((a4 - result) >> 3) + 2;
      if (v12 < a3 && (*a2)(result + 776 * v10, v11 + 776))
      {
        v11 += 776;
        uint64_t v10 = v12;
      }
      uint64_t result = (*a2)(v11, v5);
      if ((result & 1) == 0)
      {
        sub_19C2278((uint64_t)v15, v5);
        do
        {
          uint64_t v13 = v11;
          sub_1A15028(v5, v11);
          if (v7 < v10) {
            break;
          }
          uint64_t v14 = (2 * v10) | 1;
          uint64_t v11 = v6 + 776 * v14;
          uint64_t v10 = 2 * v10 + 2;
          if (v10 >= a3)
          {
            uint64_t v10 = v14;
          }
          else if ((*a2)(v6 + 776 * v14, v11 + 776))
          {
            v11 += 776;
          }
          else
          {
            uint64_t v10 = v14;
          }
          uint64_t v5 = v13;
        }
        while (!(*a2)(v11, (uint64_t)v15));
        sub_1A15028(v13, (uint64_t)v15);
        return sub_1907F60((uint64_t)v15);
      }
    }
  }
  return result;
}

void sub_1A1B774(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2) {
    sub_58CC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A1B79C(uint64_t result, uint64_t a2, unsigned int (**a3)(uint64_t, uint64_t), uint64_t a4)
{
  if (a4 >= 2)
  {
    uint64_t v7 = result;
    sub_19C2278((uint64_t)v11, result);
    uint64_t v8 = sub_1A1B8C8(v7, a3, a4);
    uint64_t v9 = v8;
    uint64_t v10 = a2 - 776;
    if (v8 == v10)
    {
      sub_1A15028(v8, (uint64_t)v11);
    }
    else
    {
      sub_1A15028(v8, v10);
      sub_1A15028(v10, (uint64_t)v11);
      sub_1A1B98C(v7, v9 + 776, (uint64_t (**)(uint64_t, uint64_t))a3, 0xA3A0FD5C5F02A3A1 * ((v9 + 776 - v7) >> 3));
    }
    return sub_1907F60((uint64_t)v11);
  }
  return result;
}

void sub_1A1B89C(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_58CC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A1B8C8(uint64_t a1, unsigned int (**a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    uint64_t v9 = a1 + 776 * v6 + 776;
    uint64_t v10 = 2 * v6;
    uint64_t v6 = (2 * v6) | 1;
    uint64_t v11 = v10 + 2;
    if (v10 + 2 < a3 && (*a2)(v9, v9 + 776))
    {
      v9 += 776;
      uint64_t v6 = v11;
    }
    sub_1A15028(a1, v9);
    a1 = v9;
  }
  while (v6 <= v8);
  return v9;
}

uint64_t sub_1A1B98C(uint64_t result, uint64_t a2, uint64_t (**a3)(uint64_t, uint64_t), uint64_t a4)
{
  unint64_t v4 = a4 - 2;
  if (a4 >= 2)
  {
    uint64_t v6 = result;
    unint64_t v7 = v4 >> 1;
    uint64_t v8 = result + 776 * (v4 >> 1);
    uint64_t v9 = a2 - 776;
    uint64_t result = (*a3)(v8, a2 - 776);
    if (result)
    {
      sub_19C2278((uint64_t)v11, v9);
      do
      {
        uint64_t v10 = v8;
        sub_1A15028(v9, v8);
        if (!v7) {
          break;
        }
        unint64_t v7 = (v7 - 1) >> 1;
        uint64_t v8 = v6 + 776 * v7;
        uint64_t v9 = v10;
      }
      while (((*a3)(v8, (uint64_t)v11) & 1) != 0);
      sub_1A15028(v10, (uint64_t)v11);
      return sub_1907F60((uint64_t)v11);
    }
  }
  return result;
}

void sub_1A1BA84(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_58CC(exception_object);
}

double sub_1A1BAB0(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 768) != 1) {
    sub_11388B8();
  }
  double result = sub_1CDE6AC(a1, 3, -1.0);
  if (result < 2.22507386e-308) {
    return 2.22507386e-308;
  }
  return result;
}

uint64_t sub_1A1BAF0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 5);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x2AAAAAAAAAAAAAALL) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 5);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x155555555555555) {
    unint64_t v9 = 0x2AAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  char v19 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_1978BAC(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  unint64_t v15 = v10;
  uint64_t v16 = &v10[96 * v4];
  uint64_t v17 = v16;
  uint64_t v18 = &v10[96 * v9];
  sub_19791C8((uint64_t)(v16 + 8), a2 + 8);
  uint64_t v11 = v16;
  uint64_t v12 = *(void *)(a2 + 80);
  *((_DWORD *)v16 + 22) = *(_DWORD *)(a2 + 88);
  *((void *)v11 + 10) = v12;
  v17 += 96;
  sub_1978AEC(a1, &v15);
  uint64_t v13 = a1[1];
  sub_1978D74((uint64_t)&v15);
  return v13;
}

void sub_1A1BC00(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1978D74((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1A1BC14()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2626A00, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_1A22BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_1A24C00()
{
}

void sub_1A24C0C()
{
}

void sub_1A24C1C()
{
}

void sub_1A24C28()
{
}

void sub_1A24C38()
{
}

void sub_1A24C44()
{
}

void sub_1A24C54()
{
}

void sub_1A24C60()
{
}

void sub_1A24C70()
{
}

void sub_1A24C7C()
{
}

void sub_1A24C8C()
{
}

void sub_1A24C98()
{
}

void sub_1A24CA8()
{
}

void sub_1A24CB4()
{
}

void sub_1A24CC4()
{
}

void sub_1A24CD0()
{
}

void sub_1A24CE0()
{
}

void sub_1A24CEC()
{
}

void sub_1A24CFC()
{
}

void sub_1A24D08()
{
}

void sub_1A24D18()
{
}

void sub_1A24D24()
{
}

void sub_1A24D34()
{
}

void sub_1A24D40()
{
}

void sub_1A24D50()
{
}

void sub_1A24D5C()
{
}

void sub_1A24D6C()
{
}

void sub_1A24D78()
{
}

void sub_1A24D88()
{
}

void sub_1A24D94()
{
}

void sub_1A24DA4()
{
}

void sub_1A24DB0()
{
}

void sub_1A24DC0()
{
}

void sub_1A24DCC()
{
}

void sub_1A24DDC()
{
}

void sub_1A24DE8()
{
}

void sub_1A24DF8()
{
}

void sub_1A24E04()
{
}

void sub_1A24E14()
{
}

void sub_1A24E20()
{
}

void sub_1A24E30()
{
}

void sub_1A24E3C()
{
}

void sub_1A24E4C()
{
}

void sub_1A24E58()
{
}

void sub_1A24E68()
{
}

void sub_1A24E74()
{
}

void sub_1A24E84()
{
}

void sub_1A24E90()
{
}

void sub_1A24EA0()
{
}

void sub_1A24EAC()
{
}

void sub_1A24EBC()
{
}

void sub_1A24EC8()
{
}

void sub_1A24ED8()
{
}

void sub_1A24EE4()
{
}

void sub_1A24EF4()
{
}

void sub_1A24F00()
{
}

void sub_1A24F10()
{
}

void sub_1A24F1C()
{
}

void sub_1A24F2C()
{
}

void sub_1A24F38()
{
}

void sub_1A24F48()
{
}

void sub_1A24F54()
{
}

void sub_1A24F64()
{
}

void sub_1A24F70()
{
}

void sub_1A24F80()
{
}

void sub_1A24F8C()
{
}

void sub_1A24F9C()
{
}

void sub_1A24FA8()
{
}

void sub_1A24FB8()
{
}

void sub_1A24FC4()
{
}

void sub_1A24FD4()
{
}

void sub_1A24FE0()
{
}

void sub_1A24FF0()
{
}

void sub_1A24FFC()
{
}

void sub_1A2500C()
{
}

void sub_1A25018()
{
}

void sub_1A25028()
{
}

void sub_1A25034()
{
}

void sub_1A25044()
{
}

void sub_1A25050()
{
}

void sub_1A25060()
{
}

void sub_1A2506C()
{
}

void sub_1A2507C()
{
}

void sub_1A25088()
{
}

void sub_1A25098()
{
}

void sub_1A250A4()
{
}

void sub_1A250B4()
{
}

void sub_1A250C0()
{
}

void sub_1A250D0()
{
}

void sub_1A250DC()
{
}

void sub_1A250EC()
{
}

void sub_1A250F8()
{
}

void sub_1A25108()
{
}

void sub_1A25114()
{
}

void sub_1A25124()
{
}

void sub_1A25130()
{
}

void sub_1A25140()
{
}

void sub_1A2514C()
{
}

void sub_1A2515C()
{
}

void sub_1A25168()
{
}

void sub_1A25178()
{
}

void sub_1A25184()
{
}

void sub_1A25194()
{
}

void sub_1A251A0()
{
}

void sub_1A251B0()
{
}

void sub_1A251BC()
{
}

void sub_1A251CC()
{
}

void sub_1A251D8()
{
}

void sub_1A251E8()
{
}

void sub_1A251F4()
{
}

void sub_1A25204()
{
}

void sub_1A25210()
{
}

void sub_1A25220()
{
}

void sub_1A2522C()
{
}

void sub_1A2523C()
{
}

void sub_1A25248()
{
}

void sub_1A25258()
{
}

void sub_1A25264()
{
}

void sub_1A25274()
{
}

void sub_1A25280()
{
}

void sub_1A25290()
{
}

void sub_1A2529C()
{
}

void sub_1A252AC()
{
}

void sub_1A252B8()
{
}

void sub_1A252C8()
{
}

void sub_1A252D4()
{
}

void sub_1A252E4()
{
}

void sub_1A252F0()
{
}

void sub_1A25300()
{
}

void sub_1A2530C()
{
}

void sub_1A2531C()
{
}

void sub_1A25328()
{
}

void sub_1A25338()
{
}

void sub_1A25344()
{
}

void sub_1A25354()
{
}

void sub_1A25360()
{
}

void sub_1A25370()
{
}

void sub_1A2537C()
{
}

void sub_1A2538C()
{
}

void sub_1A25398()
{
}

void sub_1A253A8()
{
}

void sub_1A253B4()
{
}

void sub_1A253C4()
{
}

void sub_1A253D0()
{
}

void sub_1A253E0()
{
}

void sub_1A253EC()
{
}

void sub_1A253FC()
{
}

void sub_1A25408()
{
}

void sub_1A25418()
{
}

void sub_1A25424()
{
}

void sub_1A25434()
{
}

void sub_1A25440()
{
}

void sub_1A25450()
{
}

void sub_1A2545C()
{
}

void sub_1A2546C()
{
}

void sub_1A25478()
{
}

void sub_1A25488()
{
}

void sub_1A25494()
{
}

void sub_1A254A4()
{
}

void sub_1A254B0()
{
}

void sub_1A254C0()
{
}

void sub_1A254CC()
{
}

void sub_1A254DC()
{
}

void sub_1A254E8()
{
}

void sub_1A254F8()
{
}

void sub_1A25504()
{
}

void sub_1A25514()
{
}

void sub_1A25520()
{
}

void sub_1A25530()
{
}

void sub_1A2553C()
{
}

void sub_1A2554C()
{
}

void sub_1A25558()
{
}

void sub_1A25568()
{
}

void sub_1A25574()
{
}

void sub_1A25584()
{
}

void sub_1A25590()
{
}

void sub_1A255A0()
{
}

void sub_1A255AC()
{
}

void sub_1A255BC()
{
}

void sub_1A255C8()
{
}

void sub_1A255D8()
{
}

void sub_1A255E4()
{
}

void sub_1A255F4()
{
}

void sub_1A25600()
{
}

void sub_1A25610()
{
}

void sub_1A2561C()
{
}

void sub_1A2562C()
{
}

void sub_1A25638()
{
}

void sub_1A25648()
{
}

void sub_1A25654()
{
}

void sub_1A25664()
{
}

void sub_1A25670()
{
}

void sub_1A25680()
{
}

void sub_1A2568C()
{
}

void sub_1A2569C()
{
}

void sub_1A256A8()
{
}

void sub_1A256B8()
{
}

void sub_1A256C4()
{
}

void sub_1A256D4()
{
}

void sub_1A256E0()
{
}

void sub_1A256F0()
{
}

void sub_1A256FC()
{
}

void sub_1A2570C()
{
}

void sub_1A25718()
{
}

void sub_1A25728()
{
}

void sub_1A25734()
{
}

void sub_1A25744()
{
}

void sub_1A25750()
{
}

void sub_1A25760()
{
}

void sub_1A2576C()
{
}

void sub_1A2577C()
{
}

void sub_1A25788()
{
}

void sub_1A25798()
{
}

void sub_1A257A4()
{
}

void sub_1A257B4()
{
}

void sub_1A257C0()
{
}

void sub_1A257D0()
{
}

void sub_1A257DC()
{
}

void sub_1A257EC()
{
}

void sub_1A257F8()
{
}

void sub_1A25808()
{
}

void sub_1A25814()
{
}

void sub_1A25824()
{
}

void sub_1A25830()
{
}

void sub_1A25840()
{
}

void sub_1A2584C()
{
}

void sub_1A2585C()
{
}

void sub_1A25868()
{
}

void sub_1A25878()
{
}

void sub_1A25884()
{
}

void sub_1A25894()
{
}

void sub_1A258A0()
{
}

void sub_1A258B0()
{
}

void sub_1A258BC()
{
}

void sub_1A258CC()
{
}

void sub_1A258D8()
{
}

void sub_1A258E8()
{
}

void sub_1A258F4()
{
}

void sub_1A25904()
{
}

void sub_1A25910()
{
}

void sub_1A25920()
{
}

void sub_1A2592C()
{
}

void sub_1A2593C()
{
}

void sub_1A25948()
{
}

void sub_1A25958()
{
}

void sub_1A25964()
{
}

void sub_1A25974()
{
}

void sub_1A25980()
{
}

void sub_1A25990()
{
}

void sub_1A2599C()
{
}

void sub_1A259AC()
{
}

void sub_1A259B8()
{
}

void sub_1A259C8()
{
}

void sub_1A259D4()
{
}

void sub_1A259E4()
{
}

void sub_1A259F0()
{
}

void sub_1A25A00()
{
}

void sub_1A25A0C()
{
}

void sub_1A25A1C()
{
}

void sub_1A25A28()
{
}

void sub_1A25A38()
{
}

void sub_1A25A44()
{
}

void sub_1A25A54()
{
}

void sub_1A25A60()
{
}

void sub_1A25A70()
{
}

void sub_1A25A7C()
{
}

void sub_1A25A8C()
{
}

void sub_1A25A98()
{
}

void sub_1A25AA8()
{
}

void sub_1A25AB4()
{
}

void sub_1A25AC4()
{
}

void sub_1A25AD0()
{
}

void sub_1A25AE0()
{
}

void sub_1A25AEC()
{
}

void sub_1A25AFC()
{
}

void sub_1A25B08()
{
}

void sub_1A25B18()
{
}

void sub_1A25B24()
{
}

void sub_1A25B34()
{
}

void sub_1A25B40()
{
}

void sub_1A25B4C()
{
}

void sub_1A25B58()
{
}

void sub_1A25B64()
{
}

void sub_1A25B74()
{
}

void sub_1A25B80()
{
}

void sub_1A25B90()
{
}

void sub_1A25B9C()
{
}

void sub_1A25BAC()
{
}

void sub_1A25BB8()
{
}

void sub_1A25BC8()
{
}

void sub_1A25BD4()
{
}

void sub_1A25BE4()
{
}

void sub_1A25BF0()
{
}

void sub_1A25C00()
{
}

void sub_1A25C0C()
{
}

void sub_1A25C1C()
{
}

void sub_1A25C28()
{
}

void sub_1A25C38()
{
}

void sub_1A25C44()
{
}

void sub_1A25C54()
{
}

void sub_1A25C60()
{
}

void sub_1A25C70()
{
}

void sub_1A25C7C()
{
}

void sub_1A25C8C()
{
}

void sub_1A25C98()
{
}

void sub_1A25CA8()
{
}

void sub_1A25CB4()
{
}

void sub_1A25CC4()
{
}

void sub_1A25CD0()
{
}

void sub_1A25CE0()
{
}

void sub_1A25CEC()
{
}

void sub_1A25CFC()
{
}

void sub_1A25D08()
{
}

void sub_1A25D18()
{
}

void sub_1A25D24()
{
}

void sub_1A25D34()
{
}

void sub_1A25D40()
{
}

void sub_1A25D50()
{
}

void sub_1A25D5C()
{
}

void sub_1A25D6C()
{
}

void sub_1A25D78()
{
}

void sub_1A25D88()
{
}

void sub_1A25D94()
{
}

void sub_1A25DA4()
{
}

void sub_1A25DB0()
{
}

void sub_1A25DC0()
{
}

void sub_1A25DCC()
{
}

void sub_1A25DDC()
{
}

void sub_1A25DE8()
{
}

void sub_1A25DF8()
{
}

void sub_1A25E04()
{
}

void sub_1A25E14()
{
}

void sub_1A25E20()
{
}

void sub_1A25E30()
{
}

void sub_1A25E3C()
{
}

void sub_1A25E4C()
{
}

void sub_1A25E58()
{
}

void sub_1A25E68()
{
}

void sub_1A25E74()
{
}

void sub_1A25E84()
{
}

void sub_1A25E90()
{
}

void sub_1A25EA0()
{
}

void sub_1A25EAC()
{
}

void sub_1A25EBC()
{
}

void sub_1A25EC8()
{
}

void sub_1A25ED8()
{
}

void sub_1A25EE4()
{
}

void sub_1A25EF4()
{
}

void sub_1A25F00()
{
}

void sub_1A25F10()
{
}

void sub_1A25F1C()
{
}

void sub_1A25F2C()
{
}

void sub_1A25F38()
{
}

void sub_1A25F48()
{
}

void sub_1A25F54()
{
}

void sub_1A25F64()
{
}

void sub_1A25F70()
{
}

void sub_1A25F80()
{
}

void sub_1A25F8C()
{
}

void sub_1A25F9C()
{
}

void sub_1A25FA8()
{
}

void sub_1A25FB8()
{
}

void sub_1A25FC4()
{
}

void sub_1A25FD4()
{
}

void sub_1A25FE0()
{
}

void sub_1A25FF0()
{
}

void sub_1A25FFC()
{
}

void sub_1A2600C()
{
}

void sub_1A26018()
{
}

void sub_1A26028()
{
}

void sub_1A26034()
{
}

void sub_1A26044()
{
}

void sub_1A26050()
{
}

void sub_1A26060()
{
}

void sub_1A2606C()
{
}

void sub_1A2607C()
{
}

void sub_1A26088()
{
}

void sub_1A26098()
{
}

void sub_1A260A4()
{
}

void sub_1A260B4()
{
}

void sub_1A260C0()
{
}

void sub_1A260D0()
{
}

void sub_1A260DC()
{
}

void sub_1A260EC()
{
}

void sub_1A260F8()
{
}

void sub_1A26108()
{
}

void sub_1A26114()
{
}

void sub_1A26124()
{
}

void sub_1A26130()
{
}

void sub_1A26140()
{
}

void sub_1A2614C()
{
}

void sub_1A2615C()
{
}

void sub_1A26168()
{
}

void sub_1A26178()
{
}

void sub_1A26184()
{
}

void sub_1A26194()
{
}

void sub_1A261A0()
{
}

void sub_1A261B0()
{
}

void sub_1A261BC()
{
}

void sub_1A261CC()
{
}

void sub_1A261D8()
{
}

void sub_1A261E8()
{
}

void sub_1A261F4()
{
}

void sub_1A26204()
{
}

void sub_1A26210()
{
}

void sub_1A26220()
{
}

void sub_1A2622C()
{
}

void sub_1A2623C()
{
}

void sub_1A26248()
{
}

void sub_1A26258()
{
}

void sub_1A26264()
{
}

void sub_1A26274()
{
}

void sub_1A26280()
{
}

void sub_1A26290()
{
}

void sub_1A2629C()
{
}

void sub_1A262AC()
{
}

void sub_1A262B8()
{
}

void sub_1A262C8()
{
}

void sub_1A262D4()
{
}

void sub_1A262E4()
{
}

void sub_1A262F0()
{
}

void sub_1A26300()
{
}

void sub_1A2630C()
{
}

void sub_1A2631C()
{
}

void sub_1A26328()
{
}

void sub_1A26338()
{
}

void sub_1A26344()
{
}

void sub_1A26354()
{
}

void sub_1A26360()
{
}

void sub_1A26370()
{
}

void sub_1A2637C()
{
}

void sub_1A2638C()
{
}

void sub_1A26398()
{
}

void sub_1A263A8()
{
}

void sub_1A263B4()
{
}

void sub_1A263C4()
{
}

void sub_1A263D0()
{
}

void sub_1A263E0()
{
}

void sub_1A263EC()
{
}

void sub_1A263FC()
{
}

void sub_1A26408()
{
}

void sub_1A26418()
{
}

void sub_1A26424()
{
}

void sub_1A26434()
{
}

void sub_1A26440()
{
}

void sub_1A26450()
{
}

void sub_1A2645C()
{
}

void sub_1A2646C()
{
}

void sub_1A26478()
{
}

void sub_1A26488()
{
}

void sub_1A26494()
{
}

void sub_1A264A4()
{
}

void sub_1A264B0()
{
}

void sub_1A264C0()
{
}

void sub_1A264CC()
{
}

void sub_1A264DC()
{
}

void sub_1A264E8()
{
}

void sub_1A264F8()
{
}

void sub_1A26504()
{
}

void sub_1A26514()
{
}

void sub_1A26520()
{
}

void sub_1A26530()
{
}

void sub_1A2653C()
{
}

void sub_1A2654C()
{
}

void sub_1A26558()
{
}

void sub_1A26568()
{
}

void sub_1A26574()
{
}

void sub_1A26584()
{
}

void sub_1A26590()
{
}

void sub_1A265A0()
{
}

void sub_1A265AC()
{
}

void sub_1A265BC()
{
}

void sub_1A265C8()
{
}

void sub_1A265D8()
{
}

void sub_1A265E4()
{
}

void sub_1A265F4()
{
}

void sub_1A26600()
{
}

void sub_1A26610()
{
}

void sub_1A2661C()
{
}

void sub_1A2662C()
{
}

void sub_1A26638()
{
}

void sub_1A26648()
{
}

void sub_1A26654()
{
}

void sub_1A26664()
{
}

void sub_1A26670()
{
}

void sub_1A26680()
{
}

void sub_1A2668C()
{
}

void sub_1A26698()
{
}

void sub_1A266AC()
{
}

void sub_1A266C0()
{
}

void sub_1A266C8()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_26269B8 = 0;
  qword_26269C0 = 0;
  qword_26269C8 = 0;
  qword_26269B8 = (uint64_t)operator new(0x18uLL);
  qword_26269C0 = qword_26269B8;
  qword_26269C8 = qword_26269B8 + 24;
  qword_26269C0 = (uint64_t)sub_18914E4((uint64_t)&qword_26269C8, (long long *)__p, v4, (char *)qword_26269B8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_26269D0 = 0;
  qword_26269D8 = 0;
  qword_26269E0 = 0;
  qword_26269D0 = (uint64_t)operator new(0x18uLL);
  qword_26269D8 = qword_26269D0;
  qword_26269E0 = qword_26269D0 + 24;
  qword_26269D8 = (uint64_t)sub_18914E4((uint64_t)&qword_26269E0, (long long *)__p, v4, (char *)qword_26269D0);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_26269E8 = 0;
  qword_26269F0 = 0;
  qword_26269F8 = 0;
  qword_26269E8 = (uint64_t)operator new(0x18uLL);
  qword_26269F0 = qword_26269E8;
  qword_26269F8 = qword_26269E8 + 24;
  qword_26269F0 = (uint64_t)sub_18914E4((uint64_t)&qword_26269F8, (long long *)__p, v4, (char *)qword_26269E8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_1A1BC14();
  sub_5E5C(__p, "en_US");
  LODWORD(v4[0]) = 0;
  sub_5E5C((void *)v4 + 1, "en-US_US");
  int v5 = 0;
  sub_5E5C(v6, "en_AU");
  int v7 = 1;
  sub_5E5C(v8, "en-AU_AU");
  int v9 = 1;
  sub_5E5C(v10, "en_CA");
  int v11 = 2;
  sub_5E5C(v12, "en-CA_CA");
  int v13 = 2;
  sub_5E5C(v14, "en_GB");
  int v15 = 3;
  sub_5E5C(v16, "en-GB_GB");
  int v17 = 3;
  sub_5E5C(v18, "en_IE");
  int v19 = 4;
  sub_5E5C(v20, "en-IE_IE");
  int v21 = 4;
  sub_5E5C(v22, "en_NZ");
  int v23 = 4;
  sub_5E5C(v24, "en-NZ_NZ");
  int v25 = 4;
  sub_5E5C(v26, "en_ZA");
  int v27 = 4;
  sub_5E5C(v28, "en-ZA_ZA");
  int v29 = 4;
  sub_1898F60((uint64_t)&unk_2626A18, (unsigned __int8 *)__p, 14);
  uint64_t v0 = 56;
  do
  {
    if (*((char *)&__p[v0 - 1] - 1) < 0) {
      operator delete(__p[v0 - 4]);
    }
    v0 -= 4;
  }
  while (v0 * 8);
  sub_5E5C(__p, "US");
  LODWORD(v4[0]) = 1;
  sub_5E5C((void *)v4 + 1, "AU");
  int v5 = 2;
  sub_5E5C(v6, "CA");
  int v7 = 3;
  sub_5E5C(v8, "GB");
  int v9 = 4;
  sub_5E5C(v10, "IE");
  int v11 = 5;
  sub_5E5C(v12, "NZ");
  int v13 = 5;
  sub_5E5C(v14, "ZA");
  int v15 = 5;
  sub_5E5C(v16, "ZA");
  int v17 = 5;
  sub_5E5C(v18, "IN");
  int v19 = 7;
  sub_5E5C(v20, "DE");
  int v21 = 6;
  sub_5E5C(v22, "CH");
  int v23 = 6;
  sub_5E5C(v24, "NL");
  int v25 = 6;
  sub_5E5C(v26, "DK");
  int v27 = 6;
  sub_5E5C(v28, "NO");
  int v29 = 6;
  sub_5E5C(v30, "FI");
  int v31 = 6;
  sub_5E5C(v32, "SE");
  int v33 = 6;
  sub_5E5C(v34, "BE");
  int v35 = 6;
  sub_5E5C(v36, "AT");
  int v37 = 6;
  sub_5E5C(v38, "MX");
  int v39 = 6;
  sub_5E5C(v40, "AR");
  int v41 = 6;
  sub_5E5C(v42, "CL");
  int v43 = 6;
  sub_5E5C(v44, "BR");
  int v45 = 6;
  sub_5E5C(v46, "SK");
  int v47 = 6;
  sub_5E5C(v48, "TR");
  int v49 = 6;
  sub_5E5C(v50, "PL");
  int v51 = 6;
  sub_5E5C(v52, "HR");
  int v53 = 6;
  sub_5E5C(v54, "RO");
  int v55 = 6;
  sub_5E5C(v56, "HU");
  int v57 = 6;
  sub_5E5C(v58, "VN");
  int v59 = 6;
  sub_5E5C(v60, "GR");
  int v61 = 6;
  sub_18993EC((uint64_t)&unk_2626A40, (unsigned __int8 *)__p, 30);
  uint64_t v1 = 120;
  do
  {
    if (*((char *)&__p[v1 - 1] - 1) < 0) {
      operator delete(__p[v1 - 4]);
    }
    v1 -= 4;
  }
  while (v1 * 8);
}

void sub_1A26D84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v19 = 960;
  while (1)
  {
    if (*(char *)(v17 + v19 - 9) < 0) {
      operator delete(*(void **)(v17 + v19 - 32));
    }
    v19 -= 32;
    if (!v19) {
      _Unwind_Resume(exception_object);
    }
  }
}

void *sub_1A26F34(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  sub_1A27868((uint64_t)v9, a4);
  sub_1A27900((uint64_t)v10, a3);
  uint64_t v12 = 0;
  int v7 = operator new(0x48uLL);
  *int v7 = off_24E84D0;
  sub_1A27868((uint64_t)(v7 + 1), (uint64_t)v9);
  sub_1A27900((uint64_t)(v7 + 5), (uint64_t)v10);
  uint64_t v12 = v7;
  (*(void (**)(uint64_t, uint64_t, void *))(*(void *)v6 + 16))(v6, a2, v11);
  sub_1A27658(v11);
  sub_18B2278(v10);
  return sub_18B21F4(v9);
}

void sub_1A27054(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  sub_1A27658((uint64_t *)va1);
  sub_18B2278(v2);
  sub_18B21F4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1A270A8()
{
}

void sub_1A270B0(uint64_t *a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v11 = *a2;
  int v8 = *(char *)(a3 + 23);
  if (v8 >= 0) {
    uint64_t v9 = (char *)a3;
  }
  else {
    uint64_t v9 = *(char **)a3;
  }
  if (v8 >= 0) {
    size_t v10 = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    size_t v10 = *(void *)(a3 + 8);
  }
  int v13 = 0;
  uint64_t v14 = 0;
  __n128 __p = 0;
  sub_1A275E4((char *)&__p, v9, &v9[v10], v10);
  sub_1A26F34(a1, (uint64_t)&v11, a4, a5);
  if (__p)
  {
    int v13 = __p;
    operator delete(__p);
  }
}

void sub_1A27144(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1A27160@<X0>(_DWORD *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  *(_DWORD *)a3 = *a1;
  size_t v3 = *((void *)a2 + 1);
  if (a2[23] >= 0)
  {
    size_t v4 = a2[23];
  }
  else
  {
    a2 = *(char **)a2;
    size_t v4 = v3;
  }
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 8) = 0;
  return sub_1A275E4((char *)(a3 + 8), a2, &a2[v4], v4);
}

void *sub_1A27194(uint64_t *a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  sub_1A27D34((uint64_t)v7, a3);
  uint64_t v9 = 0;
  int v5 = operator new(0x28uLL);
  *int v5 = off_24E8560;
  sub_1A27D34((uint64_t)(v5 + 1), (uint64_t)v7);
  uint64_t v9 = v5;
  (*(void (**)(uint64_t, uint64_t, void *))(*(void *)v3 + 56))(v3, v4, v8);
  sub_1A27760(v8);
  return sub_18B2CB8(v7);
}

void sub_1A27278(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_1A27760((uint64_t *)va1);
  sub_18B2CB8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_1A272B4(uint64_t *a1, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *a2;
  sub_1A27D34((uint64_t)v9, a4);
  sub_1A2807C((uint64_t)v10, a3);
  uint64_t v12 = 0;
  uint64_t v7 = operator new(0x48uLL);
  *uint64_t v7 = off_24E85E0;
  sub_1A27D34((uint64_t)(v7 + 1), (uint64_t)v9);
  sub_1A2807C((uint64_t)(v7 + 5), (uint64_t)v10);
  uint64_t v12 = v7;
  (*(void (**)(uint64_t, uint64_t, void *))(*(void *)v5 + 56))(v5, v6, v11);
  sub_1A27760(v11);
  sub_18B0D40(v10);
  return sub_18B2CB8(v9);
}

void sub_1A273D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  sub_1A27760((uint64_t *)va1);
  sub_18B0D40(v2);
  sub_18B2CB8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1A27428()
{
}

void sub_1A27430(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = a2;
  int v21 = 12;
  size_t v6 = a2[23];
  size_t v7 = *((void *)a2 + 1);
  if ((v6 & 0x80u) != 0) {
    a2 = *(char **)a2;
  }
  int v23 = 0;
  uint64_t v24 = 0;
  if ((v6 & 0x80u) == 0) {
    size_t v8 = v6;
  }
  else {
    size_t v8 = v7;
  }
  long long v22 = 0;
  sub_1A275E4((char *)&v22, a2, &a2[v8], v8);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)*a1 + 88))(&v18);
  if (v18 && !v20)
  {
    uint64_t v12 = v19;
    *(void *)a3 = v18;
    *(void *)(a3 + 8) = v12;
    if (v12)
    {
      atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
      char v13 = v20;
    }
    else
    {
      char v13 = 0;
    }
    *(unsigned char *)(a3 + 16) = v13;
  }
  else
  {
    int v14 = 0;
    int v9 = v3[23];
    if (v9 >= 0) {
      uint64_t v10 = v3;
    }
    else {
      uint64_t v10 = *(char **)v3;
    }
    if (v9 >= 0) {
      size_t v11 = v3[23];
    }
    else {
      size_t v11 = *((void *)v3 + 1);
    }
    char v16 = 0;
    uint64_t v17 = 0;
    __n128 __p = 0;
    sub_1A275E4((char *)&__p, v10, &v10[v11], v11);
    (*(void (**)(void, int *))(*(void *)*a1 + 88))(*a1, &v14);
    if (__p)
    {
      char v16 = __p;
      operator delete(__p);
    }
  }
  if (v19) {
    sub_20A69F0(v19);
  }
  if (v22)
  {
    int v23 = v22;
    operator delete(v22);
  }
}

void sub_1A2759C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19)
{
  if (__p) {
    operator delete(__p);
  }
  if (a15) {
    sub_20A69F0(a15);
  }
  if (a18) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1A275E4(char *result, char *a2, char *a3, size_t __sz)
{
  if (__sz)
  {
    size_t v6 = result;
    double result = sub_1896868(result, __sz);
    size_t v7 = (unsigned char *)*((void *)v6 + 1);
    while (a2 != a3)
    {
      char v8 = *a2++;
      *v7++ = v8;
    }
    *((void *)v6 + 1) = v7;
  }
  return result;
}

void sub_1A2763C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1A27658(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1A276DC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1A27760(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1A277E4(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_1A27868(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1A27900(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1A27998(void *a1)
{
  *a1 = off_24E84D0;
  sub_18B2278(a1 + 5);
  sub_18B21F4(a1 + 1);
  return a1;
}

void sub_1A279E8(void *a1)
{
  *a1 = off_24E84D0;
  sub_18B2278(a1 + 5);
  sub_18B21F4(a1 + 1);

  operator delete();
}

void *sub_1A27A58(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = operator new(0x48uLL);
  *uint64_t v2 = off_24E84D0;
  sub_1A27C94((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_1A27AAC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1A27AC0(uint64_t a1, void *a2)
{
  *a2 = off_24E84D0;
  return sub_1A27C94((uint64_t)(a2 + 1), a1 + 8);
}

void *sub_1A27AEC(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 8);
  sub_18B2278((void *)(a1 + 40));

  return sub_18B21F4(v1);
}

void sub_1A27B28(void *a1)
{
  uint64_t v2 = a1 + 1;
  sub_18B2278(a1 + 5);
  sub_18B21F4(v2);

  operator delete(a1);
}

void sub_1A27B70(uint64_t a1, uint64_t *a2, unsigned __int8 *a3)
{
  uint64_t v3 = *a2;
  uint64_t v4 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  int v5 = *a3;
  if (v3) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    uint64_t v8 = v3;
    int v9 = v4;
    if (v4) {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    uint64_t v7 = *(void *)(a1 + 64);
    if (!v7) {
      sub_29F82C();
    }
    (*(void (**)(uint64_t, uint64_t *))(*(void *)v7 + 48))(v7, &v8);
    if (v9) {
      sub_20A69F0(v9);
    }
  }
  else
  {
    sub_1A27CE0(a1 + 8, v5);
  }
  if (v4) {
    sub_20A69F0(v4);
  }
}

void sub_1A27C1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (v10) {
    sub_20A69F0(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A27C48(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1A27C88()
{
}

uint64_t sub_1A27C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A27868(a1, a2);
  sub_1A27900(v4 + 32, a2 + 32);
  return a1;
}

void sub_1A27CCC(_Unwind_Exception *a1)
{
  sub_18B21F4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1A27CE0(uint64_t a1, char a2)
{
  char v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_29F82C();
  }
  return (*(uint64_t (**)(uint64_t, char *))(*(void *)v2 + 48))(v2, &v4);
}

uint64_t sub_1A27D34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1A27DCC(void *a1)
{
  *a1 = off_24E8560;
  sub_18B2CB8(a1 + 1);
  return a1;
}

void sub_1A27E10(void *a1)
{
  *a1 = off_24E8560;
  sub_18B2CB8(a1 + 1);

  operator delete();
}

void *sub_1A27E74(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = operator new(0x28uLL);
  *uint64_t v2 = off_24E8560;
  sub_1A27D34((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_1A27EC8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1A27EDC(uint64_t a1, void *a2)
{
  *a2 = off_24E8560;
  return sub_1A27D34((uint64_t)(a2 + 1), a1 + 8);
}

void *sub_1A27F08(uint64_t a1)
{
  return sub_18B2CB8((void *)(a1 + 8));
}

void sub_1A27F10(void *a1)
{
  sub_18B2CB8(a1 + 1);

  operator delete(a1);
}

void sub_1A27F4C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (*a3)
  {
    memset(v6, 0, sizeof(v6));
    uint64_t v3 = *(void *)(a1 + 32);
    if (!v3) {
      sub_29F82C();
    }
    (*(void (**)(uint64_t, void *))(*(void *)v3 + 48))(v3, v6);
    uint64_t v7 = (void **)v6;
    sub_18B0B68(&v7);
  }
  else
  {
    uint64_t v4 = *(void *)(a1 + 32);
    if (!v4) {
      sub_29F82C();
    }
    int v5 = *(void (**)(void))(*(void *)v4 + 48);
    v5();
  }
}

void sub_1A28014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_18B0B68(&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_1A28030(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1A28070()
{
}

uint64_t sub_1A2807C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1A28114(void *a1)
{
  *a1 = off_24E85E0;
  sub_18B0D40(a1 + 5);
  sub_18B2CB8(a1 + 1);
  return a1;
}

void sub_1A28164(void *a1)
{
  *a1 = off_24E85E0;
  sub_18B0D40(a1 + 5);
  sub_18B2CB8(a1 + 1);

  operator delete();
}

void *sub_1A281D4(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = operator new(0x48uLL);
  *uint64_t v2 = off_24E85E0;
  sub_1A284FC((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_1A28228(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1A2823C(uint64_t a1, void *a2)
{
  *a2 = off_24E85E0;
  return sub_1A284FC((uint64_t)(a2 + 1), a1 + 8);
}

void *sub_1A28268(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 8);
  sub_18B0D40((void *)(a1 + 40));

  return sub_18B2CB8(v1);
}

void sub_1A282A4(void *a1)
{
  uint64_t v2 = a1 + 1;
  sub_18B0D40(a1 + 5);
  sub_18B2CB8(v2);

  operator delete(a1);
}

void sub_1A282EC(uint64_t a1, uint64_t *a2, unsigned char *a3)
{
  if (*a3)
  {
    memset(v12, 0, sizeof(v12));
    uint64_t v4 = *(void *)(a1 + 32);
    if (!v4) {
      sub_29F82C();
    }
    (*(void (**)(uint64_t, void *))(*(void *)v4 + 48))(v4, v12);
    v9[0] = v12;
    int v5 = (void ***)v9;
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    uint64_t v6 = *a2;
    uint64_t v7 = a2[1];
    sub_1A2807C((uint64_t)v12, a1 + 40);
    uint64_t v10 = v9;
    while (v6 != v7)
    {
      if (!v13) {
        sub_29F82C();
      }
      if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v13 + 48))(v13, v6)) {
        sub_1A28548(&v10, v6);
      }
      v6 += 32;
    }
    sub_18B0D40(v12);
    uint64_t v8 = *(void *)(a1 + 32);
    if (!v8) {
      sub_29F82C();
    }
    (*(void (**)(uint64_t, void *))(*(void *)v8 + 48))(v8, v9);
    size_t v11 = v9;
    int v5 = (void ***)&v11;
  }
  sub_18B0B68(v5);
}

void sub_1A2846C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13)
{
  a13 = (void **)&a9;
  sub_18B0B68(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1A284B0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1A284F0()
{
}

uint64_t sub_1A284FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A27D34(a1, a2);
  sub_1A2807C(v4 + 32, a2 + 32);
  return a1;
}

void sub_1A28534(_Unwind_Exception *a1)
{
  sub_18B2CB8(v1);
  _Unwind_Resume(a1);
}

uint64_t **sub_1A28548(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v5 = (*a1)[1];
  unint64_t v4 = (*a1)[2];
  uint64_t v6 = *a1;
  if (v5 >= v4)
  {
    uint64_t v7 = sub_18B07FC(v6, a2);
  }
  else
  {
    sub_18B07A4((uint64_t)v6, a2);
    uint64_t v7 = v5 + 32;
  }
  v3[1] = v7;
  return a1;
}

uint64_t sub_1A2859C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

unsigned char *sub_1A28634(unsigned char *result, unsigned int a2)
{
  if (result)
  {
    uint64_t v3 = result;
    result[32] = 0;
    *(_OWORD *)double result = 0u;
    *((_OWORD *)result + 1) = 0u;
    if ((a2 & 0x80000000) != 0)
    {
      return 0;
    }
    else
    {
      if (a2)
      {
        double result = malloc_type_malloc(11 * a2, 0x4FFA60C1uLL);
        if (!result) {
          return result;
        }
        unint64_t v4 = &result[8 * a2];
        *((void *)v3 + 1) = result;
        *((void *)v3 + 2) = v4;
        *((void *)v3 + 3) = &v4[2 * a2];
        *((_DWORD *)v3 + 1) = a2;
      }
      return (unsigned char *)(&def_332C + 1);
    }
  }
  return result;
}

char *sub_1A286B0(unsigned int *a1, signed int a2)
{
  if (a2)
  {
    double result = (char *)malloc_type_malloc(11 * a2, 0x34F55798uLL);
    if (result)
    {
      unint64_t v5 = result;
      uint64_t v6 = (void *)*((void *)a1 + 1);
      uint64_t v7 = &result[8 * a2];
      uint64_t v8 = *a1;
      if ((int)v8 >= 1)
      {
        memcpy(result, *((const void **)a1 + 1), 8 * v8);
        memcpy(v7, *((const void **)a1 + 2), 2 * (int)*a1);
        memcpy(&v7[2 * a2], *((const void **)a1 + 3), (int)*a1);
      }
      *((void *)a1 + 1) = v5;
      *((void *)a1 + 2) = v7;
      *((void *)a1 + 3) = &v7[2 * a2];
      a1[1] = a2;
      free(v6);
      return (unsigned char *)(&def_332C + 1);
    }
  }
  else
  {
    free(*((void **)a1 + 1));
    *(void *)(a1 + 3) = 0;
    *(void *)(a1 + 1) = 0;
    a1[7] = 0;
    double result = (unsigned char *)(&def_332C + 1);
    *(void *)(a1 + 5) = 0;
  }
  return result;
}

double sub_1A2878C(uint64_t a1, signed int *a2, int a3)
{
  sub_1A28908(a2);
  signed int v7 = *(_DWORD *)a1;
  if (*(_DWORD *)a1)
  {
    if (a2[1] < v7)
    {
      if (!sub_1A286B0((unsigned int *)a2, v7)) {
        return result;
      }
      signed int v7 = *(_DWORD *)a1;
    }
    *a2 = v7;
    memcpy(*((void **)a2 + 2), *(const void **)(a1 + 16), 2 * v7);
    if (a3)
    {
      uint64_t v8 = *a2;
      if ((int)v8 > 0)
      {
        for (uint64_t i = 0; i < v8; ++i)
        {
          *(void *)(*(void *)(a1 + 8) + 8 * i) = sub_1A2895C(*(void *)(*(void *)(a1 + 8) + 8 * i), (unsigned char *)(*(void *)(a1 + 24) + i), 1);
          uint64_t v8 = *a2;
        }
      }
      memcpy(*((void **)a2 + 1), *(const void **)(a1 + 8), 8 * v8);
      memcpy(*((void **)a2 + 3), *(const void **)(a1 + 24), *a2);
    }
    else
    {
      memcpy(*((void **)a2 + 3), *(const void **)(a1 + 24), *a2);
      if (*a2 >= 1)
      {
        uint64_t v10 = 0;
        while (1)
        {
          *(void *)(*((void *)a2 + 1) + 8 * v10) = sub_1A28A1C(*(int **)(*(void *)(a1 + 8) + 8 * v10), *(unsigned __int8 *)(*(void *)(a1 + 24) + v10));
          size_t v11 = (void *)*((void *)a2 + 1);
          if (!v11[v10]) {
            break;
          }
          if (++v10 >= *a2) {
            return result;
          }
        }
        if (v10)
        {
          for (uint64_t j = 0; j != v10; ++j)
            sub_1A28A64(*(void **)(*((void *)a2 + 1) + 8 * j), *(unsigned __int8 *)(*((void *)a2 + 3) + j));
          size_t v11 = (void *)*((void *)a2 + 1);
        }
        free(v11);
        double result = 0.0;
        *(_OWORD *)a2 = 0u;
        *((_OWORD *)a2 + 1) = 0u;
      }
    }
  }
  else
  {
    *a2 = 0;
  }
  return result;
}

void sub_1A28908(int *a1)
{
  if (*a1 >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      sub_1A28A64(*(void **)(*((void *)a1 + 1) + 8 * v2), *(unsigned __int8 *)(*((void *)a1 + 3) + v2));
      ++v2;
    }
    while (v2 < *a1);
  }
}

int *sub_1A2895C(uint64_t a1, unsigned char *a2, int a3)
{
  unint64_t v4 = (int *)a1;
  int v5 = *a2;
  if (a3)
  {
    if (v5 == 4)
    {
      ++*(_DWORD *)(a1 + 12);
    }
    else
    {
      signed int v7 = malloc_type_malloc(0x10uLL, 0x1080040682ABD5CuLL);
      if (v7)
      {
        *(void *)signed int v7 = v4;
        v7[8] = *a2;
        *((_DWORD *)v7 + 3) = 2;
        *a2 = 4;
        return (int *)v7;
      }
      else
      {
        return 0;
      }
    }
    return v4;
  }
  else
  {
    if (v5 == 4)
    {
      int v5 = *(unsigned __int8 *)(a1 + 8);
      *a2 = v5;
      unint64_t v4 = *(int **)a1;
    }
    return (int *)sub_1A28A1C(v4, v5);
  }
}

void *sub_1A28A1C(int *a1, int a2)
{
  switch(a2)
  {
    case 2:
      double result = sub_1A2B2F4(a1);
      break;
    case 3:
      double result = sub_1A2C7CC(a1);
      break;
    case 4:
      double result = 0;
      break;
    default:
      double result = sub_1A2D078((uint64_t)a1);
      break;
  }
  return result;
}

void sub_1A28A64(void *a1, int a2)
{
  switch(a2)
  {
    case 4:
      sub_1A2A8B8(a1);
      break;
    default:
      sub_1A2A914(a1);
      break;
  }
}

char *sub_1A28AA8(int *a1)
{
  sub_1A28908(a1);
  *a1 = 0;
  double result = sub_1A286B0((unsigned int *)a1, 0);
  if (result) {
    a1[1] = *a1;
  }
  return result;
}

double sub_1A28AE8(uint64_t a1)
{
  sub_1A28908((int *)a1);
  free(*(void **)(a1 + 8));
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

char *sub_1A28B1C(unsigned int *a1, int a2)
{
  signed int v2 = *a1 + a2;
  if (v2 <= (int)a1[1]) {
    return (unsigned char *)(&def_332C + 1);
  }
  int v3 = 5 * v2 / 4;
  int v4 = 2 * v2;
  if ((int)*a1 <= 1023) {
    int v5 = v4;
  }
  else {
    int v5 = v3;
  }
  if (v5 >= 0x10000) {
    signed int v6 = 0x10000;
  }
  else {
    signed int v6 = v5;
  }
  return sub_1A286B0(a1, v6);
}

void *sub_1A28B64(uint64_t a1, void *a2, int a3, int a4, int a5)
{
  LODWORD(v7) = a3;
  double result = sub_1A28B1C((unsigned int *)a1, a4 - a3);
  BOOL v11 = __OFSUB__(a4, v7);
  int v12 = a4 - v7;
  if (!((v12 < 0) ^ v11 | (v12 == 0)))
  {
    uint64_t v7 = (int)v7;
    int v13 = *(_DWORD *)a1;
    do
    {
      uint64_t v14 = a2[1];
      *(_WORD *)(*(void *)(a1 + 16) + 2 * v13) = *(_WORD *)(a2[2] + 2 * v7);
      int v15 = *(int **)(v14 + 8 * v7);
      char v16 = (unsigned char *)(a2[3] + v7);
      if (a5)
      {
        *(void *)(a2[1] + 8 * v7) = sub_1A2895C((uint64_t)v15, v16, 1);
        double result = *(void **)(a2[1] + 8 * v7);
      }
      else
      {
        double result = sub_1A28A1C(v15, *v16);
      }
      *(void *)(*(void *)(a1 + 8) + 8 * v13) = result;
      *(unsigned char *)(*(void *)(a1 + 24) + v13) = *(unsigned char *)(a2[3] + v7);
      int v13 = *(_DWORD *)a1 + 1;
      *(_DWORD *)a1 = v13;
      ++v7;
      --v12;
    }
    while (v12);
  }
  return result;
}

void *sub_1A28C34(unsigned int *a1, int a2, __int16 a3, uint64_t a4, char a5)
{
  sub_1A28B1C(a1, 1);
  uint64_t v10 = a2 + 1;
  memmove((void *)(*((void *)a1 + 2) + 2 * v10), (const void *)(*((void *)a1 + 2) + 2 * a2), 2 * (int)(*a1 - a2));
  memmove((void *)(*((void *)a1 + 1) + 8 * v10), (const void *)(*((void *)a1 + 1) + 8 * a2), 8 * (int)(*a1 - a2));
  double result = memmove((void *)(*((void *)a1 + 3) + v10), (const void *)(*((void *)a1 + 3) + a2), (int)*a1 - (uint64_t)a2);
  uint64_t v12 = *((void *)a1 + 1);
  *(_WORD *)(*((void *)a1 + 2) + 2 * a2) = a3;
  *(void *)(v12 + 8 * a2) = a4;
  *(unsigned char *)(*((void *)a1 + 3) + a2) = a5;
  ++*a1;
  return result;
}

uint64_t sub_1A28CF4(unsigned int *a1)
{
  unint64_t v1 = *a1;
  if ((int)v1 < 1) {
    return (8 * v1 + 8);
  }
  uint64_t v2 = 0;
  BOOL v3 = 1;
  do
  {
    int v4 = *(unsigned __int8 *)(*((void *)a1 + 3) + v2);
    if (v4 == 4) {
      int v4 = *(unsigned __int8 *)(*(void *)(*((void *)a1 + 1) + 8 * v2) + 8);
    }
    if (v4 == 3) {
      break;
    }
    BOOL v3 = ++v2 < v1;
  }
  while (v1 != v2);
  if (!v3) {
    return (8 * v1 + 8);
  }
  if ((int)v1 <= 3) {
    return (4 * v1 + (((int)v1 + 7) >> 3) + 4);
  }
  return ((v1 + 7) >> 3) + 8 * v1 + 4;
}

uint64_t sub_1A28D80(unsigned int *a1)
{
  uint64_t result = sub_1A28CF4(a1);
  uint64_t v3 = *a1;
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t ***)*((void *)a1 + 1);
    int v5 = (unsigned __int8 *)*((void *)a1 + 3);
    do
    {
      signed int v6 = *v4;
      int v8 = *v5++;
      int v7 = v8;
      if (v8 == 4)
      {
        int v7 = *((unsigned __int8 *)v6 + 8);
        signed int v6 = (uint64_t **)*v6;
      }
      if (v7 == 1)
      {
        int v9 = 0x2000;
      }
      else if (v7 == 3)
      {
        int v9 = (4 * *(_DWORD *)v6) | 2;
      }
      else
      {
        int v9 = 2 * *(_DWORD *)v6;
      }
      result += v9;
      ++v4;
      --v3;
    }
    while (v3);
  }
  return result;
}

BOOL sub_1A28E14(uint64_t a1, unsigned int *a2, unint64_t a3, unint64_t *a4)
{
  *a4 = 4;
  if (a3 <= 3)
  {
    int v4 = __stderrp;
    int v5 = "Ran out of bytes while reading first 4 bytes.\n";
    size_t v6 = 46;
LABEL_3:
    fwrite(v5, v6, 1uLL, v4);
    return 0;
  }
  int v8 = a2 + 1;
  unint64_t v7 = *a2;
  int v9 = (unsigned __int16)*a2;
  if (v7 != 12346 && v9 != 12347)
  {
    fprintf(__stderrp, "I failed to find one of the right cookies. Found %u\n");
    return 0;
  }
  if (v9 == 12347)
  {
    unint64_t v16 = v7 >> 16;
    unint64_t v17 = ((v7 >> 16) + 8) >> 3;
    uint64_t v18 = v17 + 4;
    *a4 = v17 + 4;
    if (v17 + 4 > a3)
    {
      int v4 = __stderrp;
      int v5 = "Ran out of bytes while reading run bitmap.\n";
      size_t v6 = 43;
      goto LABEL_3;
    }
    signed int v19 = v16 + 1;
    char v20 = (unsigned int *)((char *)v8 + v17);
  }
  else
  {
    *a4 = 8;
    if (a3 <= 7)
    {
      int v4 = __stderrp;
      int v5 = "Ran out of bytes while reading second part of the cookie.\n";
LABEL_31:
      size_t v6 = 58;
      goto LABEL_3;
    }
    signed int v19 = a2[1];
    if (v19 > 0x10000)
    {
      fprintf(__stderrp, "You cannot have so many containers, the data must be corrupted: %d\n");
      return 0;
    }
    int v8 = 0;
    char v20 = a2 + 2;
    uint64_t v18 = 8;
  }
  unint64_t v21 = v18 + 4 * v19;
  *a4 = v21;
  if (v21 > a3)
  {
    int v4 = __stderrp;
    int v5 = "Ran out of bytes while reading key-cardinality array.\n";
    size_t v6 = 54;
    goto LABEL_3;
  }
  if (!sub_1A28634((unsigned char *)a1, v19))
  {
    int v4 = __stderrp;
    int v5 = "Failed to allocate memory for roaring array. Bailing out.\n";
    goto LABEL_31;
  }
  unint64_t v53 = v19;
  if (v19 >= 1)
  {
    long long v22 = *(_WORD **)(a1 + 16);
    uint64_t v23 = v19;
    uint64_t v24 = v20;
    do
    {
      __int16 v25 = *(_WORD *)v24++;
      *v22++ = v25;
      --v23;
    }
    while (v23);
  }
  char v26 = &v20[v19];
  if (v9 != 12347 || v19 > 3)
  {
    unint64_t v27 = *a4 + 4 * v19;
    *a4 = v27;
    if (v27 > a3)
    {
      fwrite("Ran out of bytes while reading offsets.\n", 0x28uLL, 1uLL, __stderrp);
      sub_1A28AE8(a1);
      return 0;
    }
    v26 += v19;
  }
  if (v19 < 1) {
    return 1;
  }
  uint64_t v52 = a1;
  unint64_t v28 = 0;
  BOOL v14 = 0;
  int v29 = (unsigned __int16 *)v20 + 1;
  while (1)
  {
    unsigned int v31 = *v29;
    v29 += 2;
    unsigned int v30 = v31;
    uint64_t v32 = v31 + 1;
    if (v9 != 12347)
    {
      unint64_t v33 = *a4;
      if (v30 < 0x1000) {
        break;
      }
LABEL_40:
      unint64_t v35 = v33 + 0x2000;
      *a4 = v35;
      if (v35 <= a3)
      {
        char v36 = sub_1A29308();
        if (!v36)
        {
          char v48 = __stderrp;
          int v49 = "Failed to allocate memory for a bitset container.\n";
          goto LABEL_60;
        }
        int v37 = v36;
        uint64_t v38 = v52;
        ++*(_DWORD *)v52;
        *(_DWORD *)char v36 = v32;
        memcpy((void *)v36[1], v26, 0x2000uLL);
        char v39 = 1;
        uint64_t v40 = 0x2000;
        goto LABEL_51;
      }
      char v46 = __stderrp;
      int v47 = "Running out of bytes while reading a bitset container.\n";
LABEL_57:
      size_t v50 = 55;
LABEL_58:
      fwrite(v47, v50, 1uLL, v46);
      sub_1A28908((int *)v52);
      free(*(void **)(v52 + 8));
      *(_OWORD *)uint64_t v52 = 0u;
      *(_OWORD *)(v52 + 16) = 0u;
      return v14;
    }
    unint64_t v33 = *a4;
    int v34 = (1 << (v28 & 7)) & *((unsigned __int8 *)v8 + (v28 >> 3));
    if (!v34 && v30 > 0xFFF) {
      goto LABEL_40;
    }
    if (!v34) {
      break;
    }
    unint64_t v41 = v33 + 2;
    *a4 = v41;
    if (v41 > a3)
    {
      char v46 = __stderrp;
      int v47 = "Running out of bytes while reading a run container (header).\n";
      size_t v50 = 61;
      goto LABEL_58;
    }
    unint64_t v42 = v41 + 4 * *(unsigned __int16 *)v26;
    *a4 = v42;
    if (v42 > a3)
    {
      char v48 = __stderrp;
      int v49 = "Running out of bytes while reading a run container.\n";
      size_t v51 = 52;
      goto LABEL_61;
    }
    int v43 = malloc_type_malloc(0x10uLL, 0x10200405730B0C9uLL);
    if (!v43)
    {
      char v48 = __stderrp;
      int v49 = "Failed to allocate memory for a run container.\n";
      size_t v51 = 47;
      goto LABEL_61;
    }
    int v37 = v43;
    *int v43 = 0;
    v43[1] = 0;
    uint64_t v38 = v52;
    ++*(_DWORD *)v52;
    uint64_t v40 = (int)sub_1A2939C((uint64_t)v43, (uint64_t)v43, v26);
    char v39 = 3;
LABEL_51:
    char v26 = (unsigned int *)((char *)v26 + v40);
    *(void *)(*(void *)(v38 + 8) + 8 * v28) = v37;
    *(unsigned char *)(*(void *)(v38 + 24) + v28++) = v39;
    BOOL v14 = v28 >= v53;
    if (v53 == v28) {
      return v14;
    }
  }
  unint64_t v44 = v33 + 2 * v32;
  *a4 = v44;
  if (v44 > a3)
  {
    char v46 = __stderrp;
    int v47 = "Running out of bytes while reading an array container.\n";
    goto LABEL_57;
  }
  int v45 = sub_1A29410(v32);
  if (v45)
  {
    int v37 = v45;
    uint64_t v38 = v52;
    ++*(_DWORD *)v52;
    uint64_t v40 = (int)sub_1A29494(v32, (uint64_t)v45, v26);
    char v39 = 2;
    goto LABEL_51;
  }
  char v48 = __stderrp;
  int v49 = "Failed to allocate memory for an array container.\n";
LABEL_60:
  size_t v51 = 50;
LABEL_61:
  fwrite(v49, v51, 1uLL, v48);
  sub_1A28AE8(v52);
  return v14;
}

void *sub_1A29308()
{
  uint64_t v0 = malloc_type_malloc(0x10uLL, 0x101004082113244uLL);
  if (v0)
  {
    memptr = 0;
    if (malloc_type_posix_memalign(&memptr, 0x20uLL, 0x2000uLL, 0x575F551CuLL)) {
      unint64_t v1 = 0;
    }
    else {
      unint64_t v1 = memptr;
    }
    v0[1] = v1;
    if (v1)
    {
      bzero(v1, 0x2000uLL);
      *(_DWORD *)uint64_t v0 = 0;
    }
    else
    {
      free(v0);
      return 0;
    }
  }
  return v0;
}

uint64_t sub_1A2939C(uint64_t a1, uint64_t a2, _WORD *a3)
{
  *(_WORD *)a2 = *a3;
  int v5 = *(_DWORD *)a2;
  if (v5 > *(_DWORD *)(a2 + 4))
  {
    sub_1A2BB4C(a2, v5, 0);
    int v5 = *(_DWORD *)a2;
  }
  if (v5 >= 1)
  {
    memcpy(*(void **)(a2 + 8), a3 + 1, 4 * v5);
    int v5 = *(_DWORD *)a2;
  }
  return (4 * v5) | 2u;
}

_DWORD *sub_1A29410(int a1)
{
  uint64_t v2 = malloc_type_malloc(0x10uLL, 0x1010040466105CCuLL);
  uint64_t v3 = v2;
  if (v2)
  {
    if (a1 <= 0)
    {
      *((void *)v2 + 1) = 0;
    }
    else
    {
      int v4 = malloc_type_malloc(2 * a1, 0x1000040BDFB0063uLL);
      *((void *)v3 + 1) = v4;
      if (!v4)
      {
        free(v3);
        return 0;
      }
    }
    *uint64_t v3 = 0;
    v3[1] = a1;
  }
  return v3;
}

uint64_t sub_1A29494(int a1, uint64_t a2, void *__src)
{
  if (*(_DWORD *)(a2 + 4) < a1) {
    sub_1A2B344(a2, a1, 0);
  }
  *(_DWORD *)a2 = a1;
  memcpy(*(void **)(a2 + 8), __src, 2 * a1);
  return (2 * *(_DWORD *)a2);
}

void *sub_1A29500(unsigned int a1)
{
  uint64_t v2 = malloc_type_malloc(0x28uLL, 0x109004041606EA5uLL);
  uint64_t v3 = v2;
  if (v2 && (sub_1A28634(v2, a1) & 1) == 0)
  {
    free(v3);
    return 0;
  }
  return v3;
}

void sub_1A29564(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  unsigned __int8 v19 = 0;
  signed int v18 = 0;
  if (a2)
  {
    unsigned int v6 = *a3;
    unint64_t v7 = sub_1A2965C(a1, *a3, (char *)&v19, (unsigned int *)&v18);
    uint64_t v8 = a2 - 1;
    if (v8)
    {
      int v9 = v7;
      uint64_t v10 = a3 + 1;
      do
      {
        unsigned int v11 = v6;
        unsigned int v12 = *v10++;
        unsigned int v6 = v12;
        if ((v12 ^ v11) >> 16)
        {
          int v9 = sub_1A2965C(a1, v6, (char *)&v19, (unsigned int *)&v18);
        }
        else
        {
          unsigned __int8 v17 = v19;
          int v13 = sub_1A29808(v9, (unsigned __int16)v6, v19, (char *)&v17);
          if (v13 != v9)
          {
            BOOL v14 = v13;
            sub_1A28A64(v9, v19);
            uint64_t v15 = v18;
            *(void *)(*(void *)(a1 + 8) + 8 * v18) = v14;
            unsigned __int8 v16 = v17;
            *(unsigned char *)(*(void *)(a1 + 24) + v15) = v17;
            unsigned __int8 v19 = v16;
            int v9 = v14;
          }
        }
        --v8;
      }
      while (v8);
    }
  }
}

int *sub_1A2965C(uint64_t a1, unsigned int a2, char *a3, unsigned int *a4)
{
  int v8 = *(_DWORD *)a1;
  if (!*(_DWORD *)a1)
  {
    unsigned int v10 = -1;
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)(a1 + 16);
  unsigned int v10 = v8 - 1;
  if (*(unsigned __int16 *)(v9 + 2 * (v8 - 1)) == HIWORD(a2))
  {
LABEL_14:
    if ((v10 & 0x80000000) != 0) {
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  if (v8 < 1)
  {
    int v11 = 0;
LABEL_13:
    unsigned int v10 = ~v11;
    goto LABEL_14;
  }
  int v11 = 0;
  while (1)
  {
    int v12 = (int)(v11 + v10) >> 1;
    unsigned int v13 = *(unsigned __int16 *)(v9 + 2 * v12);
    if (v13 >= HIWORD(a2)) {
      break;
    }
    int v11 = v12 + 1;
LABEL_9:
    if (v11 > (int)v10) {
      goto LABEL_13;
    }
  }
  if (v13 > HIWORD(a2))
  {
    unsigned int v10 = v12 - 1;
    goto LABEL_9;
  }
  unsigned int v10 = (int)(v11 + v10) >> 1;
  if ((v12 & 0x80000000) == 0)
  {
LABEL_15:
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = *(_DWORD **)(v14 + 8 * (unsigned __int16)v10);
    unsigned __int8 v16 = (unsigned char *)(*(void *)(a1 + 24) + (unsigned __int16)v10);
    if (*v16 == 4)
    {
      uint64_t v15 = sub_1A2D118(v15, v16);
      uint64_t v14 = *(void *)(a1 + 8);
    }
    *(void *)(v14 + 8 * (unsigned __int16)v10) = v15;
    int v17 = *(unsigned __int8 *)(*(void *)(a1 + 24) + (unsigned __int16)v10);
    *a3 = v17;
    signed int v18 = *(int **)(*(void *)(a1 + 8) + 8 * (unsigned __int16)v10);
    char v24 = v17;
    unsigned __int8 v19 = sub_1A29808(v18, (unsigned __int16)a2, v17, &v24);
    *a4 = v10;
    if (v19 != v18)
    {
      char v20 = v19;
      sub_1A28A64(v18, *a3);
      *(void *)(*(void *)(a1 + 8) + 8 * v10) = v20;
      char v21 = v24;
      *(unsigned char *)(*(void *)(a1 + 24) + v10) = v24;
      *a3 = v21;
      return v20;
    }
    return v18;
  }
LABEL_20:
  long long v22 = (int *)malloc_type_malloc(0x10uLL, 0x1010040466105CCuLL);
  if (v22)
  {
    *(void *)long long v22 = 0;
    *((void *)v22 + 1) = 0;
  }
  signed int v18 = sub_1A29808(v22, (unsigned __int16)a2, 2, a3);
  sub_1A28C34((unsigned int *)a1, ~v10, SHIWORD(a2), (uint64_t)v18, *a3);
  *a4 = ~v10;
  return v18;
}

int *sub_1A29808(int *a1, unsigned int a2, int a3, char *a4)
{
  unsigned int v6 = a1;
  unsigned __int8 v23 = a3;
  if (a3 == 4)
  {
    unsigned int v6 = (int *)sub_1A2D118(a1, &v23);
    a3 = v23;
  }
  if (a3 == 3)
  {
    sub_1A2C5AC((uint64_t)v6, a2);
    char v11 = 3;
  }
  else if (a3 == 2)
  {
    int v7 = *v6;
    if (*v6 && ((uint64_t v8 = *((void *)v6 + 1), v9 = v7 - 1, v7 > 4095) || *(unsigned __int16 *)(v8 + 2 * v9) >= a2))
    {
      if (v7 < 1)
      {
        int v16 = 0;
      }
      else
      {
        int v16 = 0;
        do
        {
          int v17 = (v16 + v9) >> 1;
          unsigned int v18 = *(unsigned __int16 *)(v8 + 2 * v17);
          if (v18 >= a2)
          {
            if (v18 <= a2) {
              goto LABEL_25;
            }
            int v9 = v17 - 1;
          }
          else
          {
            int v16 = v17 + 1;
          }
        }
        while (v16 <= v9);
      }
      int v17 = ~v16;
LABEL_25:
      if (v7 <= 4095 && v17 < 0)
      {
        if (v7 == v6[1])
        {
          sub_1A2B344((uint64_t)v6, v7 + 1, 1);
          uint64_t v8 = *((void *)v6 + 1);
        }
        unsigned int v19 = ~v17;
        memmove((void *)(v8 + 2 * v19 + 2), (const void *)(v8 + 2 * v19), 2 * (int)(v7 - v19));
        *(_WORD *)(*((void *)v6 + 1) + 2 * v19) = a2;
        ++*v6;
      }
      else if (v17 < 0)
      {
        unsigned int v6 = (int *)sub_1A2C2D4((unsigned int *)v6);
        uint64_t v20 = *((void *)v6 + 1);
        unint64_t v21 = *(void *)(v20 + 8 * (a2 >> 6));
        uint64_t v22 = v21 | (1 << a2);
        *v6 += (v22 ^ v21) >> a2;
        *(void *)(v20 + 8 * (a2 >> 6)) = v22;
        char v11 = 1;
        goto LABEL_14;
      }
    }
    else
    {
      if (v7 == v6[1])
      {
        sub_1A2B344((uint64_t)v6, v7 + 1, 1);
        int v7 = *v6;
      }
      uint64_t v10 = *((void *)v6 + 1);
      *unsigned int v6 = v7 + 1;
      *(_WORD *)(v10 + 2 * v7) = a2;
    }
    char v11 = 2;
  }
  else
  {
    uint64_t v12 = *((void *)v6 + 1);
    unint64_t v13 = *(void *)(v12 + 8 * (a2 >> 6));
    char v11 = 1;
    uint64_t v14 = v13 | (1 << a2);
    *v6 += (v14 ^ v13) >> a2;
    *(void *)(v12 + 8 * (a2 >> 6)) = v14;
  }
LABEL_14:
  *a4 = v11;
  return v6;
}

uint64_t sub_1A29A08(unsigned int *a1)
{
  uint64_t v1 = *a1;
  if ((int)v1 < 1) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t result = 0;
  uint64_t v5 = *((void *)a1 + 1);
  uint64_t v6 = *((void *)a1 + 3);
  do
  {
    int v7 = *(unsigned int **)(v5 + 8 * v3);
    int v8 = *(unsigned __int8 *)(v6 + v3);
    if (v8 == 4)
    {
      int v8 = *((unsigned __int8 *)v7 + 8);
      int v7 = *(unsigned int **)v7;
    }
    unsigned int v9 = v8 - 1;
    uint64_t v10 = *v7;
    if (v9 >= 2 && (int)v10 >= 1)
    {
      char v11 = (unsigned __int16 *)(*((void *)v7 + 1) + 2);
      uint64_t v12 = v10;
      do
      {
        int v13 = *v11;
        v11 += 2;
        LODWORD(v10) = v10 + v13;
        --v12;
      }
      while (v12);
    }
    result += (int)v10;
    ++v3;
  }
  while (v3 != v1);
  return result;
}

double sub_1A29A90(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a1 + 32) & 0xFE | *(unsigned char *)(a2 + 32) & 1;
  return sub_1A2878C(a2, (signed int *)a1, *(unsigned char *)(a2 + 32) & 1);
}

unsigned int *sub_1A29ABC(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v42 = 0;
  int v4 = *(_DWORD *)a1;
  int v5 = *(_DWORD *)a2;
  if (*(_DWORD *)a1 >= *(_DWORD *)a2) {
    unsigned int v6 = *(_DWORD *)a2;
  }
  else {
    unsigned int v6 = *(_DWORD *)a1;
  }
  int v7 = (unsigned int *)sub_1A29500(v6);
  int v8 = v7;
  if (*(unsigned char *)(a1 + 32)) {
    char v9 = 1;
  }
  else {
    char v9 = *(unsigned char *)(a2 + 32) & 1;
  }
  *((unsigned char *)v7 + 32) = v7[8] & 0xFE | v9;
  if (v4 >= 1 && v5 >= 1)
  {
    int v12 = 0;
    int v13 = 0;
    do
    {
      uint64_t v14 = *(void *)(a1 + 16);
      unsigned int v15 = *(unsigned __int16 *)(v14 + 2 * (unsigned __int16)v13);
      uint64_t v16 = *(void *)(a2 + 16);
      unsigned int v17 = *(unsigned __int16 *)(v16 + 2 * (unsigned __int16)v12);
      if (v15 != v17)
      {
        if (v15 >= v17)
        {
          int v28 = *(_DWORD *)a2;
          int v29 = v12 + 1;
          if (v12 + 1 >= *(_DWORD *)a2 || *(unsigned __int16 *)(v16 + 2 * v29) >= v15)
          {
            ++v12;
          }
          else
          {
            v12 += 2;
            if (v12 >= v28)
            {
              int v32 = 1;
LABEL_47:
              int v12 = v28 - 1;
              unsigned int v31 = *(unsigned __int16 *)(v16 + 2 * (v28 - 1));
              int v30 = v32;
            }
            else
            {
              int v30 = 1;
              while (1)
              {
                unsigned int v31 = *(unsigned __int16 *)(v16 + 2 * v12);
                if (v31 >= v15) {
                  break;
                }
                int v32 = 2 * v30;
                int v12 = v29 + 2 * v30;
                v30 *= 2;
                if (v12 >= v28) {
                  goto LABEL_47;
                }
              }
            }
            if (v31 != v15)
            {
              if (v31 >= v15)
              {
                int v40 = v29 + (v30 >> 1);
                while (v40 + 1 != v12)
                {
                  int v28 = (v40 + v12) >> 1;
                  unsigned int v41 = *(unsigned __int16 *)(v16 + 2 * v28);
                  if (v41 == v15) {
                    goto LABEL_50;
                  }
                  if (v41 >= v15) {
                    int v12 = (v40 + v12) >> 1;
                  }
                  else {
                    int v40 = (v40 + v12) >> 1;
                  }
                }
              }
              else
              {
LABEL_50:
                int v12 = v28;
              }
            }
          }
        }
        else
        {
          int v23 = *(_DWORD *)a1;
          int v24 = v13 + 1;
          if (v13 + 1 >= *(_DWORD *)a1 || *(unsigned __int16 *)(v14 + 2 * v24) >= v17)
          {
            ++v13;
          }
          else
          {
            v13 += 2;
            if (v13 >= v23)
            {
              int v27 = 1;
LABEL_42:
              int v13 = v23 - 1;
              unsigned int v26 = *(unsigned __int16 *)(v14 + 2 * (v23 - 1));
              int v25 = v27;
            }
            else
            {
              int v25 = 1;
              while (1)
              {
                unsigned int v26 = *(unsigned __int16 *)(v14 + 2 * v13);
                if (v26 >= v17) {
                  break;
                }
                int v27 = 2 * v25;
                int v13 = v24 + 2 * v25;
                v25 *= 2;
                if (v13 >= v23) {
                  goto LABEL_42;
                }
              }
            }
            if (v26 != v17)
            {
              if (v26 >= v17)
              {
                int v38 = v24 + (v25 >> 1);
                while (v38 + 1 != v13)
                {
                  int v23 = (v38 + v13) >> 1;
                  unsigned int v39 = *(unsigned __int16 *)(v14 + 2 * v23);
                  if (v39 == v17) {
                    goto LABEL_45;
                  }
                  if (v39 >= v17) {
                    int v13 = (v38 + v13) >> 1;
                  }
                  else {
                    int v38 = (v38 + v13) >> 1;
                  }
                }
              }
              else
              {
LABEL_45:
                int v13 = v23;
              }
            }
          }
        }
        continue;
      }
      unsigned int v18 = sub_1A29DE4(*(void *)(*(void *)(a1 + 8) + 8 * (unsigned __int16)v13), *(unsigned __int8 *)(*(void *)(a1 + 24) + (unsigned __int16)v13), *(void *)(*(void *)(a2 + 8) + 8 * (unsigned __int16)v12), *(unsigned __int8 *)(*(void *)(a2 + 24) + (unsigned __int16)v12), (char *)&v42);
      unsigned int v19 = v18;
      unsigned __int8 v20 = v42;
      int v21 = v42;
      uint64_t v22 = v18;
      if (v42 == 4)
      {
        int v21 = *((unsigned __int8 *)v18 + 8);
        uint64_t v22 = *(int **)v18;
      }
      if (v21 == 3 || v21 == 2)
      {
        if (*v22 <= 0) {
          goto LABEL_55;
        }
      }
      else
      {
        if (!*v22) {
          goto LABEL_55;
        }
        if (*v22 == -1)
        {
          unint64_t v33 = (void *)*((void *)v22 + 1);
          if (!*v33)
          {
            uint64_t v36 = 1;
            while (v36 != 1024)
            {
              if (v33[v36++])
              {
                if ((unint64_t)(v36 - 2) <= 0x3FE) {
                  goto LABEL_40;
                }
                break;
              }
            }
LABEL_55:
            sub_1A28A64(v18, v42);
            goto LABEL_56;
          }
        }
      }
LABEL_40:
      sub_1A28B1C(v8, 1);
      uint64_t v34 = (int)*v8;
      uint64_t v35 = *((void *)v8 + 1);
      *(_WORD *)(*((void *)v8 + 2) + 2 * v34) = v15;
      *(void *)(v35 + 8 * v34) = v19;
      *(unsigned char *)(*((void *)v8 + 3) + v34) = v20;
      ++*v8;
LABEL_56:
      ++v13;
      ++v12;
    }
    while (v13 < v4 && v12 < v5);
  }
  return v8;
}

int *sub_1A29DE4(uint64_t a1, int a2, uint64_t a3, int a4, char *a5)
{
  unsigned int v6 = (int *)a3;
  int v7 = (int *)a1;
  if (a2 == 4)
  {
    a2 = *(unsigned __int8 *)(a1 + 8);
    int v7 = *(int **)a1;
  }
  if (a4 == 4)
  {
    a4 = *(unsigned __int8 *)(a3 + 8);
    unsigned int v6 = *(int **)a3;
  }
  int v24 = 0;
  switch(a4 + 4 * a2)
  {
    case 6:
      unsigned int v15 = (int *)malloc_type_malloc(0x10uLL, 0x1010040466105CCuLL);
      int v12 = v15;
      if (v15)
      {
        *(void *)unsigned int v15 = 0;
        *((void *)v15 + 1) = 0;
      }
      sub_1A2D37C(v6, (uint64_t)v7, (uint64_t)v15);
      goto LABEL_17;
    case 7:
      char v9 = (unsigned int *)v6;
      uint64_t v10 = (uint64_t)v7;
      goto LABEL_23;
    case 8:
    case 12:
      __break(1u);
      JUMPOUT(0x1A2A044);
    case 9:
      uint64_t v22 = (int *)malloc_type_malloc(0x10uLL, 0x1010040466105CCuLL);
      int v12 = v22;
      if (v22)
      {
        *(void *)uint64_t v22 = 0;
        *((void *)v22 + 1) = 0;
      }
      *a5 = 2;
      sub_1A2D37C(v7, (uint64_t)v6, (uint64_t)v22);
      return v12;
    case 10:
      uint64_t v16 = (int *)malloc_type_malloc(0x10uLL, 0x1010040466105CCuLL);
      int v12 = v16;
      if (v16)
      {
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
      }
      sub_1A2B564(v7, v6, (uint64_t)v16);
LABEL_17:
      *a5 = 2;
      return v12;
    case 11:
      unsigned int v17 = (int *)malloc_type_malloc(0x10uLL, 0x1010040466105CCuLL);
      int v12 = v17;
      if (v17)
      {
        *(void *)unsigned int v17 = 0;
        *((void *)v17 + 1) = 0;
      }
      *a5 = 2;
      uint64_t v13 = (uint64_t)v7;
      uint64_t v14 = v6;
      goto LABEL_21;
    case 13:
      char v9 = (unsigned int *)v7;
      uint64_t v10 = (uint64_t)v6;
LABEL_23:
      int v8 = sub_1A2D5F0(v9, v10, (void **)&v24);
      goto LABEL_24;
    case 14:
      char v11 = (int *)malloc_type_malloc(0x10uLL, 0x1010040466105CCuLL);
      int v12 = v11;
      if (v11)
      {
        *(void *)char v11 = 0;
        *((void *)v11 + 1) = 0;
      }
      *a5 = 2;
      uint64_t v13 = (uint64_t)v6;
      uint64_t v14 = v7;
LABEL_21:
      sub_1A2D41C(v13, v14, (uint64_t)v12);
      break;
    case 15:
      unsigned int v19 = (int *)malloc_type_malloc(0x10uLL, 0x10200405730B0C9uLL);
      int v12 = v19;
      if (v19)
      {
        *(void *)unsigned int v19 = 0;
        *((void *)v19 + 1) = 0;
      }
      sub_1A2CDEC((uint64_t)v7, (uint64_t)v6, (uint64_t)v19);
      unsigned __int8 v20 = sub_1A2C3CC(v12, a5);
      if (v20 != v12)
      {
        int v21 = v20;
        sub_1A2A914(v12);
        int v12 = v21;
      }
      break;
    default:
      int v8 = sub_1A2DA24((uint64_t)v7, (uint64_t)v6, &v24);
LABEL_24:
      if (v8) {
        char v18 = 1;
      }
      else {
        char v18 = 2;
      }
      *a5 = v18;
      int v12 = v24;
      break;
  }
  return v12;
}

unsigned int *sub_1A2A070(uint64_t a1, int a2, uint64_t a3, int a4, char *a5)
{
  uint64_t v6 = a3;
  uint64_t v7 = a1;
  if (a2 == 4)
  {
    a2 = *(unsigned __int8 *)(a1 + 8);
    uint64_t v7 = *(void *)a1;
  }
  if (a4 == 4)
  {
    a4 = *(unsigned __int8 *)(a3 + 8);
    uint64_t v6 = *(void *)a3;
  }
  uint64_t v28 = 0;
  switch(a4 + 4 * a2)
  {
    case 6:
      int v8 = (unsigned int *)sub_1A29308();
      unsigned int v17 = (int *)v6;
      char v18 = (unsigned int *)v7;
      goto LABEL_40;
    case 7:
      char v9 = *(_WORD **)(v6 + 8);
      BOOL v10 = *(_DWORD *)v6 == 1 && *v9 == 0;
      if (!v10 || (__int16)v9[1] != -1)
      {
        int v8 = (unsigned int *)sub_1A29308();
        char v11 = (unsigned int *)v6;
        uint64_t v12 = v7;
        goto LABEL_33;
      }
      int v25 = (unsigned int *)malloc_type_malloc(0x10uLL, 0x10200405730B0C9uLL);
      int v8 = v25;
      if (v25)
      {
        *(void *)int v25 = 0;
        *((void *)v25 + 1) = 0;
      }
      *a5 = 3;
      uint64_t v26 = v6;
      goto LABEL_49;
    case 8:
    case 12:
      __break(1u);
      JUMPOUT(0x1A2A32CLL);
    case 9:
      int v8 = (unsigned int *)sub_1A29308();
      unsigned int v17 = (int *)v7;
      char v18 = (unsigned int *)v6;
LABEL_40:
      sub_1A2B620(v17, v18, v8);
      goto LABEL_41;
    case 10:
      if (sub_1A2BF4C((int *)v7, (int *)v6, &v28)) {
        char v19 = 1;
      }
      else {
        char v19 = 2;
      }
      *a5 = v19;
      return (unsigned int *)v28;
    case 11:
      unsigned __int8 v20 = (int *)malloc_type_malloc(0x10uLL, 0x10200405730B0C9uLL);
      uint64_t v14 = v20;
      if (v20)
      {
        *(void *)unsigned __int8 v20 = 0;
        *((void *)v20 + 1) = 0;
      }
      unsigned int v15 = (int *)v7;
      uint64_t v16 = (int *)v6;
      goto LABEL_25;
    case 13:
      int v21 = *(_WORD **)(v7 + 8);
      BOOL v22 = *(_DWORD *)v7 == 1 && *v21 == 0;
      if (v22 && (__int16)v21[1] == -1)
      {
        int v27 = (unsigned int *)malloc_type_malloc(0x10uLL, 0x10200405730B0C9uLL);
        int v8 = v27;
        if (v27)
        {
          *(void *)int v27 = 0;
          *((void *)v27 + 1) = 0;
        }
        *a5 = 3;
        uint64_t v26 = v7;
LABEL_49:
        sub_1A2BADC(v26, (uint64_t)v8);
      }
      else
      {
        int v8 = (unsigned int *)sub_1A29308();
        char v11 = (unsigned int *)v7;
        uint64_t v12 = v6;
LABEL_33:
        sub_1A2B6B4(v11, v12, (uint64_t)v8);
LABEL_41:
        *a5 = 1;
      }
      return v8;
    case 14:
      uint64_t v13 = (int *)malloc_type_malloc(0x10uLL, 0x10200405730B0C9uLL);
      uint64_t v14 = v13;
      if (v13)
      {
        *(void *)uint64_t v13 = 0;
        *((void *)v13 + 1) = 0;
      }
      unsigned int v15 = (int *)v6;
      uint64_t v16 = (int *)v7;
LABEL_25:
      sub_1A2B7E0(v15, v16, v14);
      goto LABEL_37;
    case 15:
      int v23 = (int *)malloc_type_malloc(0x10uLL, 0x10200405730B0C9uLL);
      uint64_t v14 = v23;
      if (v23)
      {
        *(void *)int v23 = 0;
        *((void *)v23 + 1) = 0;
      }
      sub_1A2C81C((void *)v7, (void *)v6, v23);
      *a5 = 3;
LABEL_37:
      int v8 = (unsigned int *)sub_1A2C3CC(v14, a5);
      if (v8 != (unsigned int *)v14) {
        sub_1A2A914(v14);
      }
      return v8;
    default:
      int v8 = (unsigned int *)sub_1A29308();
      sub_1A2D180(v7, v6, (uint64_t)v8);
      goto LABEL_41;
  }
}

double sub_1A2A358(uint64_t a1, uint64_t a2)
{
  char v51 = 0;
  int v2 = *(_DWORD *)a2;
  if (!*(_DWORD *)a2) {
    return result;
  }
  signed int v5 = *(_DWORD *)a1;
  if (!*(_DWORD *)a1)
  {
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a1 + 32) & 0xFE | *(unsigned char *)(a2 + 32) & 1;
    int v42 = *(unsigned char *)(a2 + 32) & 1;
    return sub_1A2878C(a2, (signed int *)a1, v42);
  }
  int v6 = 0;
  int v7 = 0;
  unsigned __int16 v8 = **(_WORD **)(a1 + 16);
  char v9 = *(unsigned __int16 **)(a2 + 16);
  int v10 = v5 - 1;
  while (2)
  {
    char v11 = v50;
LABEL_5:
    unsigned int v12 = *v9;
    for (uint64_t i = v6; ; v8 = *(_WORD *)(*(void *)(a1 + 16) + 2 * (unsigned __int16)i))
    {
      if (v12 == v8)
      {
        int v14 = *(unsigned __int8 *)(*(void *)(a1 + 24) + (unsigned __int16)i);
        uint64_t v15 = *(void *)(*(void *)(a1 + 8) + 8 * (unsigned __int16)i);
        int v16 = v14;
        uint64_t v17 = v15;
        if (v14 == 4)
        {
          int v16 = *(unsigned __int8 *)(v15 + 8);
          uint64_t v17 = *(void *)v15;
        }
        if (v16 == 3)
        {
          char v18 = *(_WORD **)(v17 + 8);
          BOOL v19 = *(_DWORD *)v17 == 1 && *v18 == 0;
          if (v19 && (__int16)v18[1] == -1) {
            goto LABEL_28;
          }
        }
        else if (*(_DWORD *)v17 == 0x10000)
        {
LABEL_28:
          ++v7;
          if (v10 != i && v7 != v2)
          {
            int v6 = i + 1;
            unsigned __int16 v8 = *(_WORD *)(*(void *)(a1 + 16) + 2 * (unsigned __int16)(i + 1));
            char v9 = (unsigned __int16 *)(*(void *)(a2 + 16) + 2 * (unsigned __int16)v7);
            goto LABEL_5;
          }
          char v50 = v11;
          int v43 = i + 1;
          goto LABEL_90;
        }
        int v20 = *(unsigned __int8 *)(*(void *)(a2 + 24) + (unsigned __int16)v7);
        uint64_t v21 = *(void *)(*(void *)(a2 + 8) + 8 * (unsigned __int16)v7);
        char v49 = *(unsigned char *)(*(void *)(a2 + 24) + (unsigned __int16)v7);
        if (v14 == 4)
        {
          BOOL v22 = sub_1A2A070(v15, 4, v21, v20, &v51);
LABEL_24:
          int v24 = v22;
        }
        else
        {
          if (v20 == 4)
          {
            int v26 = *(unsigned __int8 *)(v21 + 8);
            uint64_t v21 = *(void *)v21;
          }
          else
          {
            int v26 = *(unsigned __int8 *)(*(void *)(a2 + 24) + (unsigned __int16)v7);
          }
          uint64_t v52 = 0;
          switch(v26 + 4 * v14)
          {
            case 6:
              sub_1A2B620((int *)v21, (unsigned int *)v15, (unsigned int *)v15);
              goto LABEL_47;
            case 7:
              int v29 = *(_WORD **)(v21 + 8);
              BOOL v30 = *(_DWORD *)v21 == 1 && *v29 == 0;
              if (v30 && (__int16)v29[1] == -1)
              {
                uint64_t v48 = v21;
                unsigned int v39 = (unsigned int *)malloc_type_malloc(0x10uLL, 0x10200405730B0C9uLL);
                int v24 = v39;
                if (v39)
                {
                  *(void *)unsigned int v39 = 0;
                  *((void *)v39 + 1) = 0;
                }
                char v51 = 3;
                sub_1A2BADC(v48, (uint64_t)v39);
                break;
              }
              sub_1A2B6B4((unsigned int *)v21, v15, v15);
LABEL_47:
              char v31 = 1;
              goto LABEL_48;
            case 8:
            case 12:
              __break(1u);
              JUMPOUT(0x1A2A88CLL);
            case 9:
              unint64_t v44 = (unsigned int *)v21;
              int v24 = (unsigned int *)sub_1A29308();
              char v51 = 1;
              sub_1A2B620((int *)v15, v44, v24);
              break;
            case 10:
              int v32 = sub_1A2C0F4((int *)v15, (int *)v21, &v52);
              if (v32) {
                char v33 = 1;
              }
              else {
                char v33 = 2;
              }
              char v51 = v33;
              if (v52) {
                int v34 = 1;
              }
              else {
                int v34 = v32;
              }
              if (v34) {
                int v24 = v52;
              }
              else {
                int v24 = (unsigned int *)v15;
              }
              break;
            case 11:
              int v45 = (int *)v21;
              uint64_t v35 = (unsigned int *)malloc_type_malloc(0x10uLL, 0x10200405730B0C9uLL);
              int v24 = v35;
              if (v35)
              {
                *(void *)uint64_t v35 = 0;
                *((void *)v35 + 1) = 0;
              }
              sub_1A2B7E0((int *)v15, v45, (int *)v35);
              uint64_t v36 = sub_1A2C3CC((int *)v24, &v51);
              if (v36 != (int *)v24)
              {
                char v46 = v36;
                sub_1A2A914(v24);
                int v24 = (unsigned int *)v46;
              }
              break;
            case 13:
              int v37 = *(_WORD **)(v15 + 8);
              BOOL v38 = *(_DWORD *)v15 == 1 && *v37 == 0;
              if (v38 && (__int16)v37[1] == -1)
              {
                char v31 = 3;
LABEL_48:
                char v51 = v31;
                int v24 = (unsigned int *)v15;
              }
              else
              {
                uint64_t v47 = v21;
                int v24 = (unsigned int *)sub_1A29308();
                sub_1A2B6B4((unsigned int *)v15, v47, (uint64_t)v24);
                char v28 = 1;
LABEL_70:
                char v51 = v28;
              }
              break;
            case 14:
              sub_1A2BC60((int *)v21, (int *)v15);
              goto LABEL_73;
            case 15:
              sub_1A2CAFC(v15, v21);
LABEL_73:
              BOOL v22 = (unsigned int *)sub_1A2C3CC((int *)v15, &v51);
              goto LABEL_24;
            default:
              *(float *)&double result = sub_1A2D180(v15, v21, v15);
              if (*(_DWORD *)v15 != 0x10000) {
                goto LABEL_47;
              }
              int v27 = sub_1A2C348(1);
              int v24 = v27;
              if (v27) {
                *(_DWORD *)(*((void *)v27 + 1) + 4 * (int)(*v27)++) = -65536;
              }
              char v28 = 3;
              goto LABEL_70;
          }
        }
        if (v24 != (unsigned int *)v15) {
          sub_1A28A64((void *)v15, v14);
        }
        char v25 = v51;
        *(void *)(*(void *)(a1 + 8) + 8 * i) = v24;
        *(unsigned char *)(*(void *)(a1 + 24) + i) = v25;
        char v11 = v49;
        goto LABEL_28;
      }
      if (v12 <= v8) {
        break;
      }
      if (v10 == i)
      {
        char v50 = v11;
LABEL_83:
        sub_1A28B64(a1, (void *)a2, v7, v2, *(unsigned char *)(a2 + 32) & 1);
        return result;
      }
      ++i;
    }
    char v50 = *(unsigned char *)(*(void *)(a2 + 24) + (unsigned __int16)v7);
    int v40 = sub_1A2895C(*(void *)(*(void *)(a2 + 8) + 8 * (unsigned __int16)v7), &v50, *(unsigned char *)(a2 + 32) & 1);
    char v41 = v50;
    if (*(unsigned char *)(a2 + 32))
    {
      *(void *)(*(void *)(a2 + 8) + 8 * v7) = v40;
      *(unsigned char *)(*(void *)(a2 + 24) + v7) = v41;
    }
    sub_1A28C34((unsigned int *)a1, i, v12, (uint64_t)v40, v41);
    ++v5;
    if (++v7 != v2)
    {
      int v6 = i + 1;
      char v9 = (unsigned __int16 *)(*(void *)(a2 + 16) + 2 * (unsigned __int16)v7);
      ++v10;
      continue;
    }
    break;
  }
  int v43 = i + 1;
  int v7 = v2;
LABEL_90:
  if (v43 == v5) {
    goto LABEL_83;
  }
  return result;
}

void sub_1A2A8B8(_DWORD *a1)
{
  int v1 = a1[3] - 1;
  a1[3] = v1;
  if (!v1)
  {
    sub_1A28A64(*(void *)a1, *((unsigned __int8 *)a1 + 8));
    free(a1);
  }
}

void sub_1A2A914(void *a1)
{
  int v2 = (void *)a1[1];
  if (v2) {
    free(v2);
  }

  free(a1);
}

unsigned char *sub_1A2A954(unsigned int *a1, unint64_t a2)
{
  int v4 = malloc_type_malloc(0x28uLL, 0x109004041606EA5uLL);
  signed int v5 = v4;
  if (v4)
  {
    unint64_t v8 = 0;
    BOOL v6 = sub_1A28E14((uint64_t)v4, a1, a2, &v8);
    v5[32] &= ~1u;
    if (!v6)
    {
      free(v5);
      return 0;
    }
  }
  return v5;
}

unsigned char *sub_1A2A9E0(unsigned int *a1)
{
  return sub_1A2A954(a1, 0xFFFFFFFFFFFFFFFFLL);
}

unsigned char *sub_1A2A9E8(unsigned __int8 *a1)
{
  int v1 = *a1;
  if (v1 == 2)
  {
    signed int v5 = (unsigned int *)(a1 + 1);
    return sub_1A2A954(v5, 0xFFFFFFFFFFFFFFFFLL);
  }
  else
  {
    if (v1 != 1) {
      return 0;
    }
    uint64_t v2 = *(unsigned int *)(a1 + 1);
    uint64_t v3 = (unsigned int *)(a1 + 5);
    int v4 = sub_1A29500(0);
    sub_1A29564((uint64_t)v4, v2, v3);
    return v4;
  }
}

BOOL sub_1A2AA74(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = a1;
  *(_DWORD *)(a2 + 8) = 0;
  BOOL result = sub_1A2AAA8(a2);
  *(unsigned char *)(a2 + 24) = result;
  return result;
}

BOOL sub_1A2AAA8(uint64_t a1)
{
  if ((sub_1A2DB04(a1) & 1) == 0) {
    return *(unsigned char *)(a1 + 24) != 0;
  }
  int v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 == 3 || v2 == 2)
  {
    int v7 = *(_DWORD *)(a1 + 44);
    int v6 = **(unsigned __int16 **)(*(void *)(a1 + 32) + 8);
LABEL_10:
    *(_DWORD *)(a1 + 20) = v7 | v6;
    return 1;
  }
  if (v2 == 1)
  {
    unsigned int v3 = 0;
    int v4 = -64;
    do
    {
      unint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 8 * v3++);
      v4 += 64;
    }
    while (!v5);
    int v6 = __clz(__rbit64(v5)) + v4;
    *(_DWORD *)(a1 + 12) = v6;
    int v7 = *(_DWORD *)(a1 + 44);
    goto LABEL_10;
  }
  return 1;
}

BOOL sub_1A2AB50(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  if (v2 >= **(_DWORD **)a1) {
    goto LABEL_12;
  }
  if ((v2 & 0x80000000) == 0)
  {
    int v3 = *(unsigned __int8 *)(a1 + 40);
    if (v3 != 3)
    {
      if (v3 == 2)
      {
        uint64_t v4 = *(void *)(a1 + 32);
        uint64_t v5 = *(int *)(a1 + 12) + 1;
        *(_DWORD *)(a1 + 12) = v5;
        if ((int)v5 < *(_DWORD *)v4)
        {
          int v6 = *(_DWORD *)(a1 + 44) | *(unsigned __int16 *)(*(void *)(v4 + 8) + 2 * v5);
LABEL_30:
          *(_DWORD *)(a1 + 20) = v6;
          goto LABEL_31;
        }
        goto LABEL_16;
      }
      uint64_t v15 = *(void *)(a1 + 32);
      int v16 = *(_DWORD *)(a1 + 12);
      *(_DWORD *)(a1 + 12) = v16 + 1;
      int v17 = v16 + 64;
      if (v16 >= -1) {
        int v17 = v16 + 1;
      }
      uint64_t v18 = (v17 >> 6);
      if (v18 > 0x3FF)
      {
LABEL_16:
        *(_DWORD *)(a1 + 8) = v2 + 1;
        goto LABEL_17;
      }
      uint64_t v19 = *(void *)(v15 + 8);
      unint64_t v20 = *(void *)(v19 + 8 * v18) & (-1 << (v16 + 1 - ((_BYTE)v18 << 6)));
      if ((v16 - 0xFFFF) > 0xFFFFFFBF || v20)
      {
        if (!v20) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v21 = 0;
        uint64_t v22 = v19 + 8 * v18 + 8;
        do
        {
          unint64_t v23 = v18 + v21;
          unint64_t v20 = *(void *)(v22 + 8 * v21++);
        }
        while (v23 <= 0x3FD && v20 == 0);
        if (!v20) {
          goto LABEL_16;
        }
        LODWORD(v18) = v18 + v21;
      }
      int v13 = __clz(__rbit64(v20)) | (v18 << 6);
      *(_DWORD *)(a1 + 12) = v13;
      int v9 = *(_DWORD *)(a1 + 44);
LABEL_29:
      int v6 = v9 | v13;
      goto LABEL_30;
    }
    unsigned int v7 = *(_DWORD *)(a1 + 20);
    if (v7 != -1)
    {
      uint64_t v8 = *(void *)(a1 + 32);
      int v9 = *(_DWORD *)(a1 + 44);
      uint64_t v10 = *(void *)(v8 + 8);
      uint64_t v11 = *(int *)(a1 + 16);
      unsigned int v12 = (*(unsigned __int16 *)(v10 + 4 * v11 + 2) + *(unsigned __int16 *)(v10 + 4 * v11)) | v9;
      *(_DWORD *)(a1 + 20) = v7 + 1;
      if (v7 < v12)
      {
LABEL_31:
        BOOL result = 1;
        goto LABEL_32;
      }
      *(_DWORD *)(a1 + 16) = v11 + 1;
      if ((int)v11 + 1 >= *(_DWORD *)v8) {
        goto LABEL_16;
      }
      int v13 = *(unsigned __int16 *)(v10 + 4 * (v11 + 1));
      goto LABEL_29;
    }
LABEL_12:
    BOOL result = 0;
    *(unsigned char *)(a1 + 24) = 0;
    return result;
  }
  *(_DWORD *)(a1 + 8) = 0;
LABEL_17:
  BOOL result = sub_1A2AAA8(a1);
LABEL_32:
  *(unsigned char *)(a1 + 24) = result;
  return result;
}

float sub_1A2ACFC(uint64_t a1)
{
  int v1 = (int8x16_t *)(*(void *)(a1 + 8) + 32);
  uint16x8_t v2 = 0uLL;
  unint64_t v3 = -8;
  uint16x8_t v4 = 0uLL;
  uint16x8_t v5 = 0uLL;
  uint16x8_t v6 = 0uLL;
  do
  {
    uint16x8_t v2 = vpadalq_u8(v2, (uint8x16_t)vcntq_s8(v1[-2]));
    uint16x8_t v4 = vpadalq_u8(v4, (uint8x16_t)vcntq_s8(v1[-1]));
    int8x16_t v7 = *v1;
    int8x16_t v8 = v1[1];
    v1 += 4;
    uint16x8_t v5 = vpadalq_u8(v5, (uint8x16_t)vcntq_s8(v7));
    uint16x8_t v6 = vpadalq_u8(v6, (uint8x16_t)vcntq_s8(v8));
    v3 += 8;
  }
  while (v3 < 0x3F8);
  int64x2_t v9 = (int64x2_t)vpadalq_u32(vpadalq_u32(vpadalq_u32(vpaddlq_u32(vpaddlq_u16(v4)), vpaddlq_u16(v2)), vpaddlq_u16(v5)), vpaddlq_u16(v6));
  LODWORD(result) = vaddq_s64(v9, vdupq_laneq_s64(v9, 1)).u32[0];
  return result;
}

uint64_t sub_1A2AD7C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  if (!a2) {
    return 0;
  }
  uint64_t result = 0;
  LODWORD(v7) = 0;
  BOOL v8 = a4 != 0;
  LODWORD(v9) = 0;
  unint64_t v10 = 0;
  unint64_t v11 = 0;
  if (a4 && a2 >= 4)
  {
    unint64_t v11 = 0;
    unint64_t v10 = 0;
    uint64_t result = 0;
    LODWORD(v12) = 0;
    LODWORD(v13) = 0;
    LODWORD(v9) = 0;
    LODWORD(v7) = 0;
    uint64_t v14 = 4;
    while (1)
    {
      unsigned int v15 = *(unsigned __int16 *)(a1 + 2 * v11);
      uint64_t v16 = 2 * v11;
      unint64_t v11 = v14;
      unsigned int v17 = *(unsigned __int16 *)(a1 + (v16 | 2));
      unsigned int v18 = *(unsigned __int16 *)(a1 + (v16 | 4));
      unsigned int v19 = *(unsigned __int16 *)(a1 + (v16 | 6));
      int v20 = a4 - v10;
      if (a4 != v10)
      {
        uint64_t v21 = a3 + 2 * v10;
        if (v20 < 2)
        {
          char v25 = (unsigned __int16 *)(a3 + 2 * v10);
          int v24 = v25;
          unint64_t v23 = v25;
          uint64_t v22 = v25;
        }
        else
        {
          uint64_t v22 = (unsigned __int16 *)(a3 + 2 * v10);
          unint64_t v23 = v22;
          int v24 = v22;
          char v25 = v22;
          do
          {
            uint64_t v26 = v20 >> 1;
            if (v25[v26] < v15) {
              char v25 = (unsigned __int16 *)((char *)v25 + v26 * 2);
            }
            if (v24[v26] < v17) {
              int v24 = (unsigned __int16 *)((char *)v24 + v26 * 2);
            }
            if (v23[v26] < v18) {
              unint64_t v23 = (unsigned __int16 *)((char *)v23 + v26 * 2);
            }
            int v27 = &v22[v26];
            if (*v27 < v19) {
              uint64_t v22 = v27;
            }
            v20 -= v20 >> 1;
          }
          while (v20 > 1);
        }
        int8x16_t v7 = (unsigned __int16 *)(((unint64_t)&v25[*v25 < v15] - v21) >> 1);
        unint64_t v9 = ((unint64_t)&v24[*v24 < v17] - v21) >> 1;
        unint64_t v13 = ((unint64_t)&v23[*v23 < v18] - v21) >> 1;
        unint64_t v12 = ((unint64_t)&v22[*v22 < v19] - v21) >> 1;
      }
      unint64_t v28 = v10 + (int)v7;
      if (v28 < a4 && *(unsigned __int16 *)(a3 + 2 * v28) == v15) {
        *(_WORD *)(a5 + 2 * result++) = v15;
      }
      unint64_t v29 = v10 + (int)v9;
      if (v29 < a4 && *(unsigned __int16 *)(a3 + 2 * v29) == v17) {
        *(_WORD *)(a5 + 2 * result++) = v17;
      }
      unint64_t v30 = v10 + (int)v13;
      if (v30 < a4 && *(unsigned __int16 *)(a3 + 2 * v30) == v18) {
        *(_WORD *)(a5 + 2 * result++) = v18;
      }
      v10 += (int)v12;
      if (v10 >= a4) {
        goto LABEL_45;
      }
      if (*(unsigned __int16 *)(a3 + 2 * v10) == v19) {
        *(_WORD *)(a5 + 2 * result++) = v19;
      }
      uint64_t v14 = v11 + 4;
      if (v11 + 4 > a2)
      {
        BOOL v8 = 1;
        break;
      }
    }
  }
  if (!v8 || (unint64_t v31 = v11 | 2, (v11 | 2) > a2))
  {
LABEL_45:
    unint64_t v31 = v11;
    goto LABEL_55;
  }
  unsigned int v32 = *(unsigned __int16 *)(a1 + 2 * v11);
  unsigned int v33 = *(unsigned __int16 *)(a1 + ((2 * v11) | 2));
  int v34 = a4 - v10;
  if (a4 != v10)
  {
    uint64_t v35 = a3 + 2 * v10;
    if (v34 < 2)
    {
      uint64_t v36 = (unsigned __int16 *)(a3 + 2 * v10);
      int8x16_t v7 = v36;
    }
    else
    {
      int8x16_t v7 = (unsigned __int16 *)(a3 + 2 * v10);
      uint64_t v36 = v7;
      do
      {
        uint64_t v37 = v34 >> 1;
        if (v36[v37] < v32) {
          uint64_t v36 = (unsigned __int16 *)((char *)v36 + v37 * 2);
        }
        BOOL v38 = &v7[v37];
        if (*v38 < v33) {
          int8x16_t v7 = v38;
        }
        v34 -= v34 >> 1;
      }
      while (v34 > 1);
    }
    unint64_t v39 = ((unint64_t)&v36[*v36 < v32] - v35) >> 1;
    unint64_t v9 = ((unint64_t)&v7[*v7 < v33] - v35) >> 1;
    LODWORD(v7) = v39;
  }
  unint64_t v40 = v10 + (int)v7;
  if (v40 < a4 && *(unsigned __int16 *)(a3 + 2 * v40) == v32) {
    *(_WORD *)(a5 + 2 * result++) = v32;
  }
  v10 += (int)v9;
  if (v10 < a4 && *(unsigned __int16 *)(a3 + 2 * v10) == v33) {
    *(_WORD *)(a5 + 2 * result++) = v33;
  }
LABEL_55:
  if (a4 > v10 && v31 < a2)
  {
    unsigned int v41 = *(unsigned __int16 *)(a1 + 2 * v31);
    int v42 = a4 - v10 - 1;
    if ((int)a4 - (int)v10 < 1)
    {
      int v43 = 0;
    }
    else
    {
      int v43 = 0;
      uint64_t v44 = a3 + 2 * v10;
      do
      {
        int v45 = (v43 + v42) >> 1;
        unsigned int v46 = *(unsigned __int16 *)(v44 + 2 * v45);
        if (v46 >= v41)
        {
          if (v46 <= v41) {
            goto LABEL_67;
          }
          int v42 = v45 - 1;
        }
        else
        {
          int v43 = v45 + 1;
        }
      }
      while (v43 <= v42);
    }
    int v45 = ~v43;
LABEL_67:
    if ((v45 & 0x80000000) == 0) {
      *(_WORD *)(a5 + 2 * result++) = v41;
    }
  }
  return result;
}

uint64_t sub_1A2B0EC(unsigned __int16 *a1, uint64_t a2, unsigned __int16 *a3, uint64_t a4, char *a5)
{
  uint64_t v5 = 0;
  if (a2 && a4)
  {
    uint16x8_t v6 = &a1[a2];
    int8x16_t v7 = a5;
    BOOL v8 = &a3[a4];
LABEL_4:
    unsigned int v9 = *a3;
    do
    {
      unsigned int v10 = *a1;
      if (v10 >= v9)
      {
        while (1)
        {
          unsigned int v9 = *a3;
          if (v10 <= v9) {
            break;
          }
          if (++a3 == v8) {
            return (v7 - a5) >> 1;
          }
        }
        if (v10 != v9) {
          goto LABEL_10;
        }
        *(_WORD *)int8x16_t v7 = v10;
        v7 += 2;
        if (++a1 == v6) {
          return (v7 - a5) >> 1;
        }
        if (++a3 == v8) {
          return (v7 - a5) >> 1;
        }
        goto LABEL_4;
      }
LABEL_10:
      ++a1;
    }
    while (a1 != v6);
    return (unint64_t)(v7 - a5) >> 1;
  }
  return v5;
}

unint64_t sub_1A2B17C(unsigned __int16 *__src, unint64_t a2, char *a3, unint64_t a4, _WORD *__dst)
{
  if (a4)
  {
    if (a2)
    {
      unint64_t v8 = 0;
      unint64_t v9 = 0;
      uint64_t v10 = 0;
      unint64_t v11 = a3 + 2;
      unsigned int v12 = *(unsigned __int16 *)a3;
      while (2)
      {
        unsigned int v13 = __src[v8];
        while (1)
        {
          if (v13 < v12)
          {
            uint64_t v14 = v10 + 1;
            __dst[v10] = v13;
            if (++v8 >= a2) {
              goto LABEL_17;
            }
            goto LABEL_14;
          }
          if (v12 >= v13) {
            break;
          }
          __dst[v10] = v12;
          if (v9 + 1 >= a4)
          {
            uint64_t v14 = v10 + 1;
            ++v9;
            goto LABEL_17;
          }
          unsigned int v12 = *(unsigned __int16 *)&v11[2 * v9];
          ++v10;
          ++v9;
        }
        __dst[v10] = v13;
        ++v8;
        uint64_t v14 = v10 + 1;
        if (v8 < a2 && v9 + 1 < a4)
        {
          unsigned int v12 = *(unsigned __int16 *)&v11[2 * v9++];
LABEL_14:
          uint64_t v10 = v14;
          continue;
        }
        break;
      }
      ++v9;
LABEL_17:
      BOOL v15 = a2 > v8;
      unint64_t v16 = a2 - v8;
      if (v15)
      {
        unsigned int v17 = (char *)&__dst[v14];
        size_t v18 = 2 * v16;
        unsigned int v19 = &__src[v8];
      }
      else
      {
        unint64_t v16 = a4 - v9;
        if (a4 <= v9) {
          return v14;
        }
        unsigned int v17 = (char *)&__dst[v14];
        unsigned int v19 = (unsigned __int16 *)&a3[2 * v9];
        size_t v18 = 2 * v16;
      }
      memmove(v17, v19, v18);
      return v14 + v16;
    }
    else
    {
      memmove(__dst, a3, 2 * a4);
      return a4;
    }
  }
  else
  {
    memmove(__dst, __src, 2 * a2);
  }
  return a2;
}

unint64_t sub_1A2B2C4(unsigned __int16 *a1, unint64_t a2, unsigned __int16 *__src, unint64_t a4, _WORD *a5)
{
  unint64_t v5 = a2;
  uint16x8_t v6 = a1;
  if (a2 >= a4)
  {
    a1 = __src;
    a2 = a4;
    __src = v6;
    a4 = v5;
  }
  return sub_1A2B17C(a1, a2, (char *)__src, a4, a5);
}

_DWORD *sub_1A2B2F4(int *a1)
{
  uint16x8_t v2 = sub_1A29410(a1[1]);
  unint64_t v3 = v2;
  if (v2)
  {
    *uint16x8_t v2 = *a1;
    memcpy(*((void **)v2 + 1), *((const void **)a1 + 1), 2 * *a1);
  }
  return v3;
}

void *sub_1A2B344(uint64_t a1, int a2, int a3)
{
  if (a2 <= 4096) {
    int v4 = 4096;
  }
  else {
    int v4 = 0x10000;
  }
  int v5 = *(_DWORD *)(a1 + 4);
  if (v5 < 1)
  {
    int v6 = 0;
  }
  else if (v5 > 0x3F)
  {
    if (v5 <= 0x3FF) {
      int v6 = (3 * v5) >> 1;
    }
    else {
      int v6 = 5 * v5 / 4;
    }
  }
  else
  {
    int v6 = 2 * v5;
  }
  if (v6 < v4) {
    int v4 = v6;
  }
  if (v6 >= a2) {
    int v7 = v4;
  }
  else {
    int v7 = a2;
  }
  *(_DWORD *)(a1 + 4) = v7;
  unint64_t v8 = *(void **)(a1 + 8);
  if (a3)
  {
    uint64_t result = malloc_type_realloc(*(void **)(a1 + 8), 2 * v7, 0x1000040BDFB0063uLL);
    *(void *)(a1 + 8) = result;
    if (result) {
      return result;
    }
    free(v8);
    uint64_t result = *(void **)(a1 + 8);
    if (result) {
      return result;
    }
    goto LABEL_19;
  }
  if (v8) {
    free(*(void **)(a1 + 8));
  }
  uint64_t result = malloc_type_malloc(2 * v7, 0x1000040BDFB0063uLL);
  *(void *)(a1 + 8) = result;
  if (!result)
  {
LABEL_19:
    uint64_t v10 = __stderrp;
    return (void *)fwrite("could not allocate memory\n", 0x1AuLL, 1uLL, v10);
  }
  return result;
}

void *sub_1A2B47C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)a1;
  if (*(_DWORD *)a1 > *(_DWORD *)(a2 + 4)) {
    sub_1A2B344(a2, v4, 0);
  }
  *(_DWORD *)a2 = v4;
  int v5 = *(void **)(a2 + 8);
  int v6 = *(const void **)(a1 + 8);

  return memcpy(v5, v6, 2 * v4);
}

unint64_t sub_1A2B4EC(unsigned __int16 **a1, unsigned __int16 **a2, uint64_t a3)
{
  unint64_t v6 = *(int *)a1;
  unint64_t v7 = *(int *)a2;
  if (*(_DWORD *)(a3 + 4) < (int)v7 + (int)v6) {
    sub_1A2B344(a3, v7 + v6, 0);
  }
  unint64_t result = sub_1A2B2C4(a1[1], v6, a2[1], v7, *(_WORD **)(a3 + 8));
  *(_DWORD *)a3 = result;
  return result;
}

uint64_t sub_1A2B564(int *a1, int *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a2;
  if ((int)v6 >= (int)v7) {
    int v8 = *a2;
  }
  else {
    int v8 = *a1;
  }
  if (*(_DWORD *)(a3 + 4) < v8) {
    sub_1A2B344(a3, v8, 0);
  }
  if ((int)v7 <= v6 << 6)
  {
    unint64_t v11 = *(char **)(a3 + 8);
    if ((int)v6 <= v7 << 6)
    {
      uint64_t result = sub_1A2B0EC(*((unsigned __int16 **)a1 + 1), v6, *((unsigned __int16 **)a2 + 1), v7, v11);
      goto LABEL_12;
    }
    uint64_t v9 = *((void *)a2 + 1);
    uint64_t v10 = *((void *)a1 + 1);
    unint64_t v12 = v7;
    unint64_t v13 = v6;
  }
  else
  {
    uint64_t v9 = *((void *)a1 + 1);
    uint64_t v10 = *((void *)a2 + 1);
    unint64_t v11 = *(char **)(a3 + 8);
    unint64_t v12 = v6;
    unint64_t v13 = v7;
  }
  uint64_t result = sub_1A2AD7C(v9, v12, v10, v13, (uint64_t)v11);
LABEL_12:
  *(_DWORD *)a3 = result;
  return result;
}

int *sub_1A2B620(int *result, unsigned int *a2, unsigned int *a3)
{
  int v4 = result;
  if (a2 != a3)
  {
    *a3 = *a2;
    uint64_t result = (int *)memcpy(*((void **)a3 + 1), *((const void **)a2 + 1), 0x2000uLL);
  }
  uint64_t v5 = *a3;
  uint64_t v6 = *v4;
  if (v6)
  {
    uint64_t v7 = *((void *)a3 + 1);
    int v8 = (unsigned __int16 *)*((void *)v4 + 1);
    uint64_t v9 = 2 * v6;
    do
    {
      unsigned int v10 = *v8++;
      unint64_t v11 = ((unint64_t)v10 >> 3) & 0x1FF8;
      unint64_t v12 = *(void *)(v7 + v11);
      uint64_t v13 = (1 << v10) | v12;
      v5 += (v13 ^ v12) >> v10;
      *(void *)(v7 + v11) = v13;
      v9 -= 2;
    }
    while (v9);
  }
  *a3 = v5;
  return result;
}

void sub_1A2B6B4(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  if (a2 != a3)
  {
    *(_DWORD *)a3 = *(_DWORD *)a2;
    memcpy(*(void **)(a3 + 8), *(const void **)(a2 + 8), 0x2000uLL);
  }
  uint64_t v5 = *a1;
  if ((int)v5 >= 1)
  {
    uint64_t v6 = *((void *)a1 + 1);
    uint64_t v7 = *(void *)(a3 + 8);
    int v8 = (unsigned __int16 *)(v6 + 2);
    do
    {
      unint64_t v9 = *(v8 - 1);
      int v10 = *v8;
      unint64_t v11 = v9 >> 6;
      char v12 = v10 + v9;
      uint64_t v13 = (v10 + v9) >> 6;
      if (v13 == (v9 >> 6))
      {
        *(void *)(v7 + 8 * v11) |= 0xFFFFFFFFFFFFFFFFLL >> (63 - v10) << v9;
      }
      else
      {
        uint64_t v14 = *(void *)(v7 + 8 * v13);
        *(void *)(v7 + 8 * v11) |= -1 << v9;
        if ((int)v11 + 1 < v13) {
          memset((void *)(((v9 >> 3) & 0x1FF8) + v7 + 8), 255, 16 * ((v13 - (v9 >> 6) - 2) >> 1) + 16);
        }
        *(void *)(v7 + 8 * v13) = v14 | (0xFFFFFFFFFFFFFFFFLL >> ~v12);
      }
      v8 += 2;
      --v5;
    }
    while (v5);
  }
  sub_1A2ACFC(a3);
  *(_DWORD *)a3 = v15;
}

void *sub_1A2B7E0(int *a1, int *a2, int *a3)
{
  uint64_t v6 = (_WORD *)*((void *)a2 + 1);
  BOOL v7 = *a2 == 1 && *v6 == 0;
  if (v7 && (__int16)v6[1] == -1)
  {
    return sub_1A2BADC((uint64_t)a2, (uint64_t)a3);
  }
  else
  {
    uint64_t result = sub_1A2BB4C((uint64_t)a3, 2 * (*a1 + *a2), 0);
    unint64_t v9 = (unsigned __int16 *)*((void *)a2 + 1);
    unsigned int v10 = **((unsigned __int16 **)a1 + 1);
    if (*v9 <= v10)
    {
      int v12 = 0;
      unsigned int v10 = *(_DWORD *)v9;
      *(_DWORD *)(*((void *)a3 + 1) + 4 * *a3) = *(_DWORD *)v9;
      LODWORD(v9) = *a3;
      LODWORD(v11) = 1;
    }
    else
    {
      LODWORD(v11) = 0;
      unint64_t v9 = (unsigned __int16 *)*a3;
      *(_DWORD *)(*((void *)a3 + 1) + 4 * (void)v9) = (unsigned __int16)v10;
      int v12 = 1;
    }
    *a3 = v9 + 1;
    unsigned int v13 = HIWORD(v10);
    while ((int)v11 < *a2 && v12 < *a1)
    {
      uint64_t v14 = (unsigned __int16 *)(*((void *)a2 + 1) + 4 * (int)v11);
      unsigned int v15 = *(unsigned __int16 *)(*((void *)a1 + 1) + 2 * v12);
      if (*v14 <= v15)
      {
        unsigned int v17 = *(_DWORD *)v14;
        int v18 = HIWORD(*(_DWORD *)v14);
        unsigned int v19 = (unsigned __int16)v10 + (unsigned __int16)v13;
        int v20 = (unsigned __int16)v17;
        if ((unsigned __int16)v17 <= v19 + 1)
        {
          int v22 = v18 + (unsigned __int16)v17;
          if (v18 + v20 >= v19)
          {
            unsigned int v13 = v22 - v10;
            *(_DWORD *)(*((void *)a3 + 1) + 4 * *a3 - 4) = (unsigned __int16)v10 | ((v22 - v10) << 16);
          }
        }
        else
        {
          uint64_t v21 = *a3;
          *(_DWORD *)(*((void *)a3 + 1) + 4 * v21) = v17;
          *a3 = v21 + 1;
          unsigned int v13 = HIWORD(v17);
          unsigned int v10 = v17;
        }
        LODWORD(v11) = v11 + 1;
      }
      else
      {
        unsigned int v16 = (unsigned __int16)v13 + (unsigned __int16)v10 + 1;
        if (v16 >= v15)
        {
          if (v16 == v15) {
            *(_DWORD *)(*((void *)a3 + 1) + 4 * *a3 - 4) = (unsigned __int16)v10 | (++v13 << 16);
          }
        }
        else
        {
          unsigned int v13 = 0;
          *(_DWORD *)(*((void *)a3 + 1) + 4 * (*a3)++) = v15;
          unsigned int v10 = v15;
        }
        ++v12;
      }
    }
    if (v12 >= *a1)
    {
      if ((int)v11 < *a2)
      {
        uint64_t v11 = (int)v11;
        do
        {
          unsigned int v26 = *(_DWORD *)(*((void *)a2 + 1) + 4 * v11);
          unsigned int v27 = HIWORD(v26);
          unsigned int v28 = (unsigned __int16)v10 + (unsigned __int16)v13;
          int v29 = (unsigned __int16)v26;
          if ((unsigned __int16)v26 <= v28 + 1)
          {
            unsigned int v31 = v27 + (unsigned __int16)v26;
            if (v27 + v29 >= v28)
            {
              LOWORD(v13) = v31 - v10;
              *(_DWORD *)(*((void *)a3 + 1) + 4 * *a3 - 4) = (unsigned __int16)v10 | ((v31 - v10) << 16);
            }
          }
          else
          {
            uint64_t v30 = *a3;
            *(_DWORD *)(*((void *)a3 + 1) + 4 * v30) = v26;
            *a3 = v30 + 1;
            unsigned int v13 = HIWORD(v26);
            unsigned int v10 = v26;
          }
          ++v11;
        }
        while (v11 < *a2);
      }
    }
    else
    {
      uint64_t v23 = v12;
      do
      {
        unsigned int v24 = *(unsigned __int16 *)(*((void *)a1 + 1) + 2 * v23);
        unsigned int v25 = (unsigned __int16)v13 + (unsigned __int16)v10 + 1;
        if (v25 >= v24)
        {
          if (v25 == v24) {
            *(_DWORD *)(*((void *)a3 + 1) + 4 * *a3 - 4) = (unsigned __int16)v10 | (++v13 << 16);
          }
        }
        else
        {
          unsigned int v13 = 0;
          *(_DWORD *)(*((void *)a3 + 1) + 4 * (*a3)++) = v24;
          LOWORD(v10) = v24;
        }
        ++v23;
      }
      while (v23 < *a1);
    }
  }
  return result;
}

void *sub_1A2BADC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)a1;
  if (*(_DWORD *)a1 > *(_DWORD *)(a2 + 4)) {
    sub_1A2BB4C(a2, v4, 0);
  }
  *(_DWORD *)a2 = v4;
  uint64_t v5 = *(void **)(a2 + 8);
  uint64_t v6 = *(const void **)(a1 + 8);

  return memcpy(v5, v6, 4 * v4);
}

void *sub_1A2BB4C(uint64_t a1, int a2, int a3)
{
  int v4 = *(_DWORD *)(a1 + 4);
  if (v4)
  {
    if (v4 > 63)
    {
      if (v4 > 0x3FF) {
        int v4 = 5 * v4 / 4;
      }
      else {
        int v4 = (3 * v4) >> 1;
      }
    }
    else
    {
      v4 *= 2;
    }
  }
  if (v4 <= a2) {
    int v4 = a2;
  }
  *(_DWORD *)(a1 + 4) = v4;
  uint64_t v5 = *(void **)(a1 + 8);
  if (a3)
  {
    uint64_t result = malloc_type_realloc(*(void **)(a1 + 8), 4 * v4, 0x100004052888210uLL);
    *(void *)(a1 + 8) = result;
    if (result) {
      return result;
    }
    free(v5);
    uint64_t result = *(void **)(a1 + 8);
    if (result) {
      return result;
    }
    goto LABEL_12;
  }
  if (v5)
  {
    free(*(void **)(a1 + 8));
    int v4 = *(_DWORD *)(a1 + 4);
  }
  uint64_t result = malloc_type_malloc(4 * v4, 0x100004052888210uLL);
  *(void *)(a1 + 8) = result;
  if (!result)
  {
LABEL_12:
    BOOL v7 = __stderrp;
    return (void *)fwrite("could not allocate memory\n", 0x1AuLL, 1uLL, v7);
  }
  return result;
}

int *sub_1A2BC60(int *result, int *a2)
{
  unint64_t v3 = result;
  int v4 = (__int16 *)*((void *)a2 + 1);
  int v5 = *a2;
  BOOL v6 = *a2 == 1 && *v4 == 0;
  if (!v6 || v4[1] != -1)
  {
    int v7 = *result + v5;
    if (a2[1] < v7 + v5)
    {
      sub_1A2BB4C((uint64_t)a2, v7 + v5, 1);
      int v4 = (__int16 *)*((void *)a2 + 1);
      int v5 = *a2;
    }
    uint64_t result = (int *)memmove(&v4[2 * v7], v4, 4 * v5);
    int v8 = (_DWORD *)*((void *)a2 + 1);
    unint64_t v9 = (unsigned __int16 *)&v8[v7];
    uint64_t v10 = *a2;
    *a2 = 0;
    unsigned int v11 = **((unsigned __int16 **)v3 + 1);
    if (*v9 <= v11)
    {
      int v14 = 0;
      unsigned int v11 = *(_DWORD *)v9;
      *int v8 = *(_DWORD *)v9;
      int v13 = *a2 + 1;
      int v12 = 1;
    }
    else
    {
      int v12 = 0;
      *int v8 = (unsigned __int16)v11;
      int v13 = 1;
      int v14 = 1;
    }
    *a2 = v13;
    LODWORD(v15) = HIWORD(v11);
    while (v12 < (int)v10 && v14 < *v3)
    {
      unsigned int v16 = &v9[2 * v12];
      unsigned int v17 = *(unsigned __int16 *)(*((void *)v3 + 1) + 2 * v14);
      if (*v16 <= v17)
      {
        unsigned int v19 = *(_DWORD *)v16;
        int v20 = HIWORD(*(_DWORD *)v16);
        uint64_t result = (int *)((unsigned __int16)v11 + (unsigned __int16)v15);
        int v21 = (unsigned __int16)v19;
        if ((unsigned __int16)v19 <= (result + 1))
        {
          int v22 = v20 + (unsigned __int16)v19;
          if (v20 + v21 >= result)
          {
            LODWORD(v15) = v22 - v11;
            *(_DWORD *)(*((void *)a2 + 1) + 4 * *a2 - 4) = (unsigned __int16)v11 | ((v22 - v11) << 16);
          }
        }
        else
        {
          uint64_t v15 = *a2;
          *(_DWORD *)(*((void *)a2 + 1) + 4 * v15) = v19;
          *a2 = v15 + 1;
          LODWORD(v15) = HIWORD(v19);
          unsigned int v11 = v19;
        }
        ++v12;
      }
      else
      {
        unsigned int v18 = (unsigned __int16)v15 + (unsigned __int16)v11 + 1;
        if (v18 >= v17)
        {
          if (v18 == v17)
          {
            LODWORD(v15) = v15 + 1;
            *(_DWORD *)(*((void *)a2 + 1) + 4 * *a2 - 4) = (unsigned __int16)v11 | (v15 << 16);
          }
        }
        else
        {
          LODWORD(v15) = 0;
          *(_DWORD *)(*((void *)a2 + 1) + 4 * (*a2)++) = v17;
          unsigned int v11 = v17;
        }
        ++v14;
      }
    }
    if (v14 >= *v3)
    {
      if (v12 < (int)v10)
      {
        unsigned int v26 = &v8[v7 + v12];
        uint64_t v27 = v10 - v12;
        do
        {
          unsigned int v29 = *v26++;
          unsigned int v28 = v29;
          unsigned int v30 = HIWORD(v29);
          unsigned int v31 = (unsigned __int16)v11 + (unsigned __int16)v15;
          int v32 = (unsigned __int16)v29;
          if ((unsigned __int16)v29 <= v31 + 1)
          {
            int v33 = v30 + v32;
            if (v30 + v32 >= v31)
            {
              LOWORD(v15) = v33 - v11;
              *(_DWORD *)(*((void *)a2 + 1) + 4 * *a2 - 4) = (unsigned __int16)v11 | ((v33 - v11) << 16);
            }
          }
          else
          {
            uint64_t v15 = *a2;
            *(_DWORD *)(*((void *)a2 + 1) + 4 * v15) = v28;
            *a2 = v15 + 1;
            LOWORD(v15) = v30;
            unsigned int v11 = v28;
          }
          --v27;
        }
        while (v27);
      }
    }
    else
    {
      uint64_t v23 = v14;
      do
      {
        unsigned int v24 = *(unsigned __int16 *)(*((void *)v3 + 1) + 2 * v23);
        unsigned int v25 = (unsigned __int16)v15 + (unsigned __int16)v11 + 1;
        if (v25 >= v24)
        {
          if (v25 == v24)
          {
            LODWORD(v15) = v15 + 1;
            *(_DWORD *)(*((void *)a2 + 1) + 4 * *a2 - 4) = (unsigned __int16)v11 | (v15 << 16);
          }
        }
        else
        {
          LODWORD(v15) = 0;
          *(_DWORD *)(*((void *)a2 + 1) + 4 * (*a2)++) = v24;
          LOWORD(v11) = v24;
        }
        ++v23;
      }
      while (v23 < *v3);
    }
  }
  return result;
}

uint64_t sub_1A2BF4C(int *a1, int *a2, void *a3)
{
  int v6 = *a2 + *a1;
  if (v6 > 4096)
  {
    int v8 = sub_1A29308();
    *a3 = v8;
    if (v8)
    {
      unint64_t v9 = v8;
      uint64_t v10 = v8[1];
      int v11 = *a1;
      uint64_t v12 = *a1;
      if (*a1)
      {
        int v13 = (unsigned __int16 *)*((void *)a1 + 1);
        uint64_t v14 = 2 * v11;
        do
        {
          unsigned int v15 = *v13++;
          *(void *)(v10 + (((unint64_t)v15 >> 3) & 0x1FF8)) |= 1 << v15;
          v14 -= 2;
        }
        while (v14);
      }
      uint64_t v16 = *a2;
      if (v16)
      {
        unsigned int v17 = (unsigned __int16 *)*((void *)a2 + 1);
        uint64_t v18 = 2 * v16;
        do
        {
          unsigned int v19 = *v17++;
          unint64_t v20 = ((unint64_t)v19 >> 3) & 0x1FF8;
          unint64_t v21 = *(void *)(v10 + v20);
          uint64_t v22 = (1 << v19) | v21;
          v12 += (v22 ^ v21) >> v19;
          *(void *)(v10 + v20) = v22;
          v18 -= 2;
        }
        while (v18);
        int v11 = v12;
      }
      *(_DWORD *)int v8 = v11;
      if (v11 <= 4096)
      {
        *a3 = sub_1A2C074((uint64_t)v8);
        sub_1A2A914(v9);
        return 0;
      }
    }
    return 1;
  }
  int v7 = sub_1A29410(v6);
  *a3 = v7;
  if (!v7) {
    return 1;
  }
  sub_1A2B4EC((unsigned __int16 **)a1, (unsigned __int16 **)a2, (uint64_t)v7);
  return 0;
}

_DWORD *sub_1A2C074(uint64_t a1)
{
  uint64_t result = sub_1A29410(*(_DWORD *)a1);
  __int16 v3 = 0;
  int v4 = 0;
  uint64_t v5 = 0;
  *uint64_t result = *(_DWORD *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *((void *)result + 1);
  do
  {
    unint64_t v8 = *(void *)(v6 + 8 * v5);
    if (v8)
    {
      unint64_t v9 = (_WORD *)(v7 + 2 * v4);
      do
      {
        *v9++ = v3 | __clz(__rbit64(v8));
        ++v4;
        v8 &= v8 - 1;
      }
      while (v8);
    }
    v3 += 64;
    ++v5;
  }
  while (v5 != 1024);
  return result;
}

uint64_t sub_1A2C0F4(int *a1, int *a2, void *a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a2;
  int v8 = v7 + v6;
  *a3 = 0;
  if ((int)v7 + (int)v6 > 4096)
  {
    uint64_t v10 = sub_1A29308();
    *a3 = v10;
    if (v10)
    {
      int v11 = v10;
      uint64_t v12 = v10[1];
      uint64_t v13 = *((void *)a1 + 1);
      int v14 = *a1;
      uint64_t v15 = *a1;
      if (*a1)
      {
        uint64_t v16 = 2 * v14;
        unsigned int v17 = (unsigned __int16 *)*((void *)a1 + 1);
        do
        {
          unsigned int v18 = *v17++;
          *(void *)(v12 + (((unint64_t)v18 >> 3) & 0x1FF8)) |= 1 << v18;
          v16 -= 2;
        }
        while (v16);
      }
      uint64_t v19 = *a2;
      if (v19)
      {
        unint64_t v20 = (unsigned __int16 *)*((void *)a2 + 1);
        uint64_t v21 = 2 * v19;
        do
        {
          unsigned int v22 = *v20++;
          unint64_t v23 = ((unint64_t)v22 >> 3) & 0x1FF8;
          unint64_t v24 = *(void *)(v12 + v23);
          uint64_t v25 = (1 << v22) | v24;
          v15 += (v25 ^ v24) >> v22;
          *(void *)(v12 + v23) = v25;
          v21 -= 2;
        }
        while (v21);
        int v14 = v15;
      }
      *(_DWORD *)uint64_t v10 = v14;
      if (v14 <= 4096)
      {
        if (a1[1] < v14)
        {
          sub_1A2B344((uint64_t)a1, v14, 0);
          uint64_t v12 = v11[1];
          uint64_t v13 = *((void *)a1 + 1);
        }
        __int16 v28 = 0;
        int v29 = 0;
        for (uint64_t i = 0; i != 1024; ++i)
        {
          unint64_t v31 = *(void *)(v12 + 8 * i);
          if (v31)
          {
            int v32 = (_WORD *)(v13 + 2 * v29);
            do
            {
              *v32++ = v28 | __clz(__rbit64(v31));
              ++v29;
              v31 &= v31 - 1;
            }
            while (v31);
          }
          v28 += 64;
        }
        *a1 = *(_DWORD *)v11;
        *a3 = a1;
        sub_1A2A914(v11);
        return 0;
      }
    }
    return 1;
  }
  if (a1[1] >= v8)
  {
    memmove((void *)(*((void *)a1 + 1) + 2 * v7), *((const void **)a1 + 1), 2 * v6);
    int v27 = sub_1A2B17C((unsigned __int16 *)(*((void *)a1 + 1) + 2 * *a2), *a1, *((char **)a2 + 1), *a2, *((_WORD **)a1 + 1));
    uint64_t result = 0;
    *a1 = v27;
    return result;
  }
  unint64_t v9 = sub_1A29410(2 * v8);
  *a3 = v9;
  if (!v9) {
    return 1;
  }
  sub_1A2B4EC((unsigned __int16 **)a1, (unsigned __int16 **)a2, (uint64_t)v9);
  return 0;
}

void *sub_1A2C2D4(unsigned int *a1)
{
  uint64_t result = sub_1A29308();
  uint64_t v3 = *a1;
  if ((int)v3 >= 1)
  {
    int v4 = (unsigned __int16 *)*((void *)a1 + 1);
    uint64_t v5 = result[1];
    int v6 = *(_DWORD *)result;
    do
    {
      unsigned int v7 = *v4++;
      unint64_t v8 = ((unint64_t)v7 >> 3) & 0x1FF8;
      unint64_t v9 = *(void *)(v5 + v8);
      uint64_t v10 = (1 << v7) | v9;
      v6 += (v10 ^ v9) >> v7;
      *(void *)(v5 + v8) = v10;
      --v3;
    }
    while (v3);
    *(_DWORD *)uint64_t result = v6;
  }
  return result;
}

_DWORD *sub_1A2C348(int a1)
{
  uint16x8_t v2 = malloc_type_malloc(0x10uLL, 0x10200405730B0C9uLL);
  uint64_t v3 = v2;
  if (v2)
  {
    if (a1 <= 0)
    {
      *((void *)v2 + 1) = 0;
    }
    else
    {
      int v4 = malloc_type_malloc(4 * a1, 0x100004052888210uLL);
      *((void *)v3 + 1) = v4;
      if (!v4)
      {
        free(v3);
        return 0;
      }
    }
    *uint64_t v3 = 0;
    v3[1] = a1;
  }
  return v3;
}

int *sub_1A2C3CC(int *a1, char *a2)
{
  int v4 = *a1;
  if (*a1 >= 1)
  {
    uint64_t v5 = (unsigned __int16 *)(*((void *)a1 + 1) + 2);
    uint64_t v6 = *a1;
    do
    {
      int v7 = *v5;
      v5 += 2;
      v4 += v7;
      --v6;
    }
    while (v6);
  }
  int v8 = 2 * v4;
  if (2 * v4 >= 8190) {
    int v8 = 8190;
  }
  if (((4 * *a1) | 2) <= v8 + 2)
  {
    char v19 = 3;
    uint64_t v10 = a1;
  }
  else if (v4 > 4096)
  {
    unint64_t v20 = (int *)sub_1A29308();
    uint64_t v10 = v20;
    uint64_t v21 = *a1;
    if ((int)v21 >= 1)
    {
      uint64_t v22 = *((void *)a1 + 1);
      uint64_t v23 = *((void *)v20 + 1);
      unint64_t v24 = (unsigned __int16 *)(v22 + 2);
      do
      {
        unint64_t v25 = *(v24 - 1);
        unsigned int v26 = *v24 + v25;
        if (v26 + 1 != v25)
        {
          unint64_t v27 = v25 >> 6;
          uint64_t v28 = -1 << v25;
          if (v26 >> 6 == (v25 >> 6))
          {
            unint64_t v29 = (0xFFFFFFFFFFFFFFFFLL >> ~(_BYTE)v26) & v28;
          }
          else
          {
            *(void *)(v23 + 8 * v27) |= v28;
            if ((int)v27 + 1 < v26 >> 6) {
              memset((void *)(((v25 >> 3) & 0x1FF8) + v23 + 8), 255, 8 * ((v26 >> 6) - (v25 >> 6) - 2) + 8);
            }
            unint64_t v29 = 0xFFFFFFFFFFFFFFFFLL >> ~(_BYTE)v26;
            LODWORD(v27) = v26 >> 6;
          }
          *(void *)(v23 + 8 * v27) |= v29;
        }
        v24 += 2;
        --v21;
      }
      while (v21);
    }
    *uint64_t v10 = v4;
    char v19 = 1;
  }
  else
  {
    unint64_t v9 = sub_1A29410(v4);
    uint64_t v10 = v9;
    *unint64_t v9 = 0;
    uint64_t v11 = *a1;
    if ((int)v11 >= 1)
    {
      uint64_t v12 = 0;
      LODWORD(v13) = 0;
      uint64_t v14 = *((void *)a1 + 1);
      uint64_t v15 = *((void *)v9 + 1);
      do
      {
        uint64_t v16 = (unsigned __int16 *)(v14 + 4 * v12);
        int v17 = *v16;
        uint64_t v13 = (int)v13;
        int v18 = v16[1] + 1;
        do
        {
          *(_WORD *)(v15 + 2 * v13++) = v17++;
          --v18;
        }
        while (v18);
        ++v12;
      }
      while (v12 != v11);
      *unint64_t v9 = v13;
    }
    char v19 = 2;
  }
  *a2 = v19;
  return v10;
}

uint64_t sub_1A2C5AC(uint64_t a1, unsigned int a2)
{
  __int16 v2 = a2;
  int v4 = *(unsigned __int16 **)(a1 + 8);
  int v5 = *(_DWORD *)a1;
  int v6 = 0;
  int v7 = *(_DWORD *)a1 - 1;
  if (*(int *)a1 >= 1)
  {
    do
    {
      int v8 = (v6 + v7) >> 1;
      unsigned int v9 = v4[2 * v8];
      if (v9 >= a2)
      {
        if (v9 <= a2) {
          goto LABEL_8;
        }
        int v7 = v8 - 1;
      }
      else
      {
        int v6 = v8 + 1;
      }
    }
    while (v6 <= v7);
  }
  int v8 = ~v6;
LABEL_8:
  if ((v8 & 0x80000000) == 0) {
    return 0;
  }
  if (v8 != -1)
  {
    uint64_t v11 = &v4[2 * (-2 - v8)];
    int v12 = *v11;
    int v15 = v11[1];
    uint64_t v13 = v11 + 1;
    int v14 = v15;
    if ((int)(a2 - v12) <= v15) {
      return 0;
    }
    uint64_t v16 = ~v8;
    if (a2 - v12 == v14 + 1)
    {
      if (v5 > (int)v16 && (int v17 = v4[2 * ~v8], a2 + 1 == v17))
      {
        *uint64_t v13 = v17 - v12 + v4[2 * v16 + 1];
        sub_1A2C778(a1, (unsigned __int16)~(_WORD)v8);
      }
      else
      {
        *uint64_t v13 = v14 + 1;
      }
      return 1;
    }
    if (v5 > (int)v16)
    {
      char v19 = &v4[2 * v16];
      if (a2 + 1 == *v19)
      {
        *char v19 = a2;
        ++v4[2 * v16 + 1];
        return 1;
      }
    }
LABEL_22:
    unsigned int v20 = ~v8;
    if (v5 >= *(_DWORD *)(a1 + 4))
    {
      sub_1A2BB4C(a1, v5 + 1, 1);
      int v5 = *(_DWORD *)a1;
      int v4 = *(unsigned __int16 **)(a1 + 8);
    }
    memmove(&v4[2 * (unsigned __int16)v20 + 2], &v4[2 * (unsigned __int16)v20], 4 * (v5 - (unsigned __int16)v20));
    ++*(_DWORD *)a1;
    uint64_t v21 = (_WORD *)(*(void *)(a1 + 8) + 4 * v20);
    *uint64_t v21 = v2;
    v21[1] = 0;
    return 1;
  }
  if (v5 < 1) {
    goto LABEL_22;
  }
  int v18 = *v4;
  if (a2 + 1 != v18) {
    goto LABEL_22;
  }
  ++v4[1];
  *int v4 = v18 - 1;
  return 1;
}

void *sub_1A2C778(uint64_t a1, unsigned int a2)
{
  uint64_t result = memmove((void *)(*(void *)(a1 + 8) + 4 * a2), (const void *)(*(void *)(a1 + 8) + 4 * (a2 + 1)), 4 * (int)(*(_DWORD *)a1 + ~a2));
  --*(_DWORD *)a1;
  return result;
}

void **sub_1A2C7CC(int *a1)
{
  __int16 v2 = (void **)sub_1A2C348(a1[1]);
  uint64_t v3 = v2;
  if (v2)
  {
    *__int16 v2 = *(void **)a1;
    memcpy(v2[1], *((const void **)a1 + 1), 4 * *a1);
  }
  return v3;
}

void *sub_1A2C81C(void *result, void *a2, int *a3)
{
  int v5 = result;
  int v6 = (unsigned __int16 *)result[1];
  unsigned int v7 = *v6;
  int v8 = *(_DWORD *)result;
  BOOL v10 = *(_DWORD *)result == 1 && v7 == 0 && (__int16)v6[1] == -1;
  uint64_t v11 = (unsigned __int16 *)a2[1];
  unsigned int v12 = *v11;
  int v13 = *(_DWORD *)a2;
  BOOL v15 = *(_DWORD *)a2 == 1 && v12 == 0 && (__int16)v11[1] == -1;
  if (v10 || v15)
  {
    if (!v10) {
      uint64_t result = a2;
    }
    return sub_1A2BADC((uint64_t)result, (uint64_t)a3);
  }
  else
  {
    if (a3[1] < v13 + v8)
    {
      uint64_t result = sub_1A2BB4C((uint64_t)a3, v13 + v8, 0);
      int v6 = (unsigned __int16 *)v5[1];
      unsigned int v7 = *v6;
      uint64_t v11 = (unsigned __int16 *)a2[1];
      unsigned int v12 = *v11;
    }
    *a3 = 0;
    BOOL v16 = v7 > v12;
    LODWORD(v17) = v7 <= v12;
    LODWORD(v18) = v16;
    if (v16) {
      int v6 = v11;
    }
    unsigned int v19 = *(_DWORD *)v6;
    **((_DWORD **)a3 + 1) = v19;
    ++*a3;
    unsigned int v20 = HIWORD(v19);
    for (int i = *(_DWORD *)a2; (int)v18 < *(_DWORD *)a2 && (int)v17 < *(_DWORD *)v5; int i = *(_DWORD *)a2)
    {
      uint64_t v22 = (unsigned __int16 *)(v5[1] + 4 * v17);
      unsigned int v23 = *v22;
      unint64_t v24 = (unsigned __int16 *)(a2[1] + 4 * v18);
      unsigned int v25 = *v24;
      if (v23 > v25) {
        LODWORD(v18) = v18 + 1;
      }
      else {
        LODWORD(v17) = v17 + 1;
      }
      if (v23 > v25) {
        uint64_t v22 = v24;
      }
      unsigned int v26 = *(_DWORD *)v22;
      unsigned int v27 = HIWORD(v26);
      unsigned int v28 = (unsigned __int16)v19 + (unsigned __int16)v20;
      int v29 = (unsigned __int16)v26;
      if ((unsigned __int16)v26 <= v28 + 1)
      {
        unsigned int v31 = v27 + (unsigned __int16)v26;
        if (v27 + v29 >= v28)
        {
          LOWORD(v20) = v31 - v19;
          *(_DWORD *)(*((void *)a3 + 1) + 4 * *a3 - 4) = (unsigned __int16)v19 | ((v31 - v19) << 16);
        }
      }
      else
      {
        uint64_t v30 = *a3;
        *(_DWORD *)(*((void *)a3 + 1) + 4 * v30) = v26;
        *a3 = v30 + 1;
        unsigned int v20 = HIWORD(v26);
        unsigned int v19 = v26;
      }
    }
    if ((int)v18 < i)
    {
      uint64_t v18 = v18;
      do
      {
        unsigned int v32 = *(_DWORD *)(a2[1] + 4 * v18);
        unsigned int v33 = HIWORD(v32);
        unsigned int v34 = (unsigned __int16)v19 + (unsigned __int16)v20;
        int v35 = (unsigned __int16)v32;
        if ((unsigned __int16)v32 <= v34 + 1)
        {
          unsigned int v37 = v33 + (unsigned __int16)v32;
          if (v33 + v35 >= v34)
          {
            LOWORD(v20) = v37 - v19;
            *(_DWORD *)(*((void *)a3 + 1) + 4 * *a3 - 4) = (unsigned __int16)v19 | ((v37 - v19) << 16);
          }
        }
        else
        {
          uint64_t v36 = *a3;
          *(_DWORD *)(*((void *)a3 + 1) + 4 * v36) = v32;
          *a3 = v36 + 1;
          unsigned int v20 = HIWORD(v32);
          unsigned int v19 = v32;
        }
        ++v18;
      }
      while (*(_DWORD *)a2 > (int)v18);
    }
    if ((int)v17 < *(_DWORD *)v5)
    {
      uint64_t v17 = v17;
      do
      {
        unsigned int v38 = *(_DWORD *)(v5[1] + 4 * v17);
        unsigned int v39 = HIWORD(v38);
        unsigned int v40 = (unsigned __int16)v19 + (unsigned __int16)v20;
        int v41 = (unsigned __int16)v38;
        if ((unsigned __int16)v38 <= v40 + 1)
        {
          unsigned int v43 = v39 + (unsigned __int16)v38;
          if (v39 + v41 >= v40)
          {
            LOWORD(v20) = v43 - v19;
            *(_DWORD *)(*((void *)a3 + 1) + 4 * *a3 - 4) = (unsigned __int16)v19 | ((v43 - v19) << 16);
          }
        }
        else
        {
          uint64_t v42 = *a3;
          *(_DWORD *)(*((void *)a3 + 1) + 4 * v42) = v38;
          *a3 = v42 + 1;
          unsigned int v20 = HIWORD(v38);
          unsigned int v19 = v38;
        }
        ++v17;
      }
      while (*(_DWORD *)v5 > (int)v17);
    }
  }
  return result;
}

uint64_t sub_1A2CAFC(uint64_t result, uint64_t a2)
{
  uint64_t v3 = (int *)result;
  int v4 = *(_WORD **)(result + 8);
  int v5 = *(_DWORD *)result;
  BOOL v7 = *(_DWORD *)result == 1 && *v4 == 0 && (__int16)v4[1] == -1;
  int v8 = *(_WORD **)(a2 + 8);
  int v9 = *(_DWORD *)a2;
  BOOL v11 = *(_DWORD *)a2 == 1 && *v8 == 0 && (__int16)v8[1] == -1;
  if (!v7 && !v11) {
    goto LABEL_19;
  }
  if (v7) {
    return result;
  }
  if (v11)
  {
    return (uint64_t)sub_1A2BADC(a2, result);
  }
  else
  {
LABEL_19:
    int v12 = v9 + v5;
    if (*(_DWORD *)(result + 4) < v9 + v5 + v5)
    {
      sub_1A2BB4C(result, v12 + v5, 1);
      int v4 = (_WORD *)*((void *)v3 + 1);
      int v5 = *v3;
    }
    uint64_t result = (uint64_t)memmove(&v4[2 * v12], v4, 4 * v5);
    int v13 = (unsigned int *)*((void *)v3 + 1);
    int v14 = &v13[v12];
    int v15 = *v3;
    *uint64_t v3 = 0;
    unsigned int v16 = *(unsigned __int16 *)v14;
    uint64_t v17 = *(unsigned int **)(a2 + 8);
    unsigned int v18 = *(unsigned __int16 *)v17;
    BOOL v19 = v16 > v18;
    int v20 = v16 <= v18;
    LODWORD(v21) = v19;
    if (!v19) {
      uint64_t v17 = &v13[v12];
    }
    unsigned int v22 = *v17;
    *int v13 = v22;
    ++*v3;
    LODWORD(v23) = HIWORD(v22);
    for (int i = *(_DWORD *)a2; (int)v21 < *(_DWORD *)a2 && v20 < v15; int i = *(_DWORD *)a2)
    {
      unsigned int v26 = (unsigned __int16 *)&v14[v20];
      unsigned int v27 = *v26;
      unsigned int v28 = (unsigned __int16 *)(*(void *)(a2 + 8) + 4 * v21);
      unsigned int v29 = *v28;
      if (v27 > v29) {
        LODWORD(v21) = v21 + 1;
      }
      else {
        ++v20;
      }
      if (v27 > v29) {
        unsigned int v26 = v28;
      }
      unsigned int v30 = *(_DWORD *)v26;
      unsigned int v31 = HIWORD(v30);
      uint64_t result = (unsigned __int16)v22 + (unsigned __int16)v23;
      int v32 = (unsigned __int16)v30;
      if ((unsigned __int16)v30 <= (result + 1))
      {
        unsigned int v33 = v31 + (unsigned __int16)v30;
        if (v31 + v32 >= result)
        {
          LOWORD(v23) = v33 - v22;
          *(_DWORD *)(*((void *)v3 + 1) + 4 * *v3 - 4) = (unsigned __int16)v22 | ((v33 - v22) << 16);
        }
      }
      else
      {
        uint64_t v23 = *v3;
        *(_DWORD *)(*((void *)v3 + 1) + 4 * v23) = v30;
        *uint64_t v3 = v23 + 1;
        LODWORD(v23) = HIWORD(v30);
        unsigned int v22 = v30;
      }
    }
    if ((int)v21 < i)
    {
      uint64_t v21 = v21;
      do
      {
        unsigned int v35 = *(_DWORD *)(*(void *)(a2 + 8) + 4 * v21);
        unsigned int v36 = HIWORD(v35);
        unsigned int v37 = (unsigned __int16)v22 + (unsigned __int16)v23;
        uint64_t result = (unsigned __int16)v35;
        if ((unsigned __int16)v35 <= v37 + 1)
        {
          unsigned int v38 = v36 + (unsigned __int16)v35;
          if (v36 + result >= v37)
          {
            LOWORD(v23) = v38 - v22;
            *(_DWORD *)(*((void *)v3 + 1) + 4 * *v3 - 4) = (unsigned __int16)v22 | ((v38 - v22) << 16);
          }
        }
        else
        {
          uint64_t v23 = *v3;
          *(_DWORD *)(*((void *)v3 + 1) + 4 * v23) = v35;
          *uint64_t v3 = v23 + 1;
          LODWORD(v23) = HIWORD(v35);
          unsigned int v22 = v35;
        }
        ++v21;
      }
      while (*(_DWORD *)a2 > (int)v21);
    }
    if (v20 < v15)
    {
      unsigned int v39 = &v13[v12 + v20];
      do
      {
        unsigned int v41 = *v39++;
        unsigned int v40 = v41;
        unsigned int v42 = HIWORD(v41);
        unsigned int v43 = (unsigned __int16)v22 + (unsigned __int16)v23;
        int v44 = (unsigned __int16)v41;
        uint64_t result = v43 + 1;
        if ((unsigned __int16)v41 <= result)
        {
          int v45 = v42 + v44;
          if (v42 + v44 >= v43)
          {
            LOWORD(v23) = v45 - v22;
            *(_DWORD *)(*((void *)v3 + 1) + 4 * *v3 - 4) = (unsigned __int16)v22 | ((v45 - v22) << 16);
          }
        }
        else
        {
          uint64_t v23 = *v3;
          *(_DWORD *)(*((void *)v3 + 1) + 4 * v23) = v40;
          *uint64_t v3 = v23 + 1;
          LOWORD(v23) = v42;
          unsigned int v22 = v40;
        }
        ++v20;
      }
      while (v15 > v20);
    }
  }
  return result;
}

uint64_t sub_1A2CDEC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = result;
  int v6 = *(unsigned __int16 **)(result + 8);
  int v7 = *(_DWORD *)result;
  BOOL v9 = *(_DWORD *)result == 1 && *v6 == 0 && (__int16)v6[1] == -1;
  BOOL v10 = *(unsigned __int16 **)(a2 + 8);
  int v11 = *(_DWORD *)a2;
  BOOL v13 = *(_DWORD *)a2 == 1 && *v10 == 0 && (__int16)v10[1] == -1;
  if (v9 || v13)
  {
    if (v9) {
      uint64_t result = a2;
    }
    return (uint64_t)sub_1A2BADC(result, a3);
  }
  if (*(_DWORD *)(a3 + 4) < v11 + v7)
  {
    uint64_t result = (uint64_t)sub_1A2BB4C(a3, v11 + v7, 0);
    int v6 = *(unsigned __int16 **)(v5 + 8);
    BOOL v10 = *(unsigned __int16 **)(a2 + 8);
  }
  *(_DWORD *)a3 = 0;
  int v14 = *(_DWORD *)v5;
  if (*(int *)v5 >= 1)
  {
    int v15 = 0;
    LODWORD(v16) = 0;
    LODWORD(v17) = 0;
    int v18 = *v10;
    uint64_t v19 = v18 + v10[1] + 1;
    int v20 = *v6;
    uint64_t v21 = v20 + v6[1] + 1;
    do
    {
      int v22 = *(_DWORD *)a2;
      if ((int)v16 >= *(_DWORD *)a2) {
        return result;
      }
      if ((int)v21 <= v18)
      {
        uint64_t v17 = (int)v17 + 1;
        if ((int)v17 < v14)
        {
          unsigned int v27 = &v6[2 * v17];
          int v20 = *v27;
          uint64_t v21 = v20 + v27[1] + 1;
        }
        continue;
      }
      if ((int)v19 <= v20)
      {
        uint64_t v16 = (int)v16 + 1;
        if ((int)v16 < v22)
        {
          unsigned int v28 = &v10[2 * v16];
          int v18 = *v28;
          uint64_t v19 = v18 + v28[1] + 1;
        }
        continue;
      }
      if (v20 <= v18) {
        uint64_t result = v18;
      }
      else {
        uint64_t result = v20;
      }
      if (v21 == v19)
      {
        uint64_t v17 = (int)v17 + 1;
        uint64_t v23 = v19;
        if ((int)v17 < v14)
        {
          unint64_t v24 = &v6[2 * v17];
          int v20 = *v24;
          uint64_t v23 = v20 + v24[1] + 1;
        }
        uint64_t v16 = (int)v16 + 1;
        if ((int)v16 >= v22) {
          goto LABEL_46;
        }
        unsigned int v25 = &v10[2 * v16];
        int v18 = *v25;
        uint64_t v26 = v18 + v25[1] + 1;
      }
      else
      {
        if ((int)v21 < (int)v19)
        {
          uint64_t v17 = (int)v17 + 1;
          if ((int)v17 >= v14)
          {
            uint64_t v23 = v21;
          }
          else
          {
            unsigned int v29 = &v6[2 * v17];
            int v20 = *v29;
            uint64_t v23 = v20 + v29[1] + 1;
          }
          uint64_t v26 = v19;
          LOWORD(v19) = v21;
          goto LABEL_47;
        }
        uint64_t v16 = (int)v16 + 1;
        if ((int)v16 >= v22)
        {
          uint64_t v23 = v21;
LABEL_46:
          uint64_t v26 = v19;
          goto LABEL_47;
        }
        unsigned int v30 = &v10[2 * v16];
        int v18 = *v30;
        uint64_t v26 = v18 + v30[1] + 1;
        uint64_t v23 = v21;
      }
LABEL_47:
      unsigned int v31 = (_WORD *)(*(void *)(a3 + 8) + 4 * v15);
      *unsigned int v31 = result;
      v31[1] = v19 + ~(_WORD)result;
      *(_DWORD *)a3 = ++v15;
      int v14 = *(_DWORD *)v5;
      uint64_t v21 = v23;
      uint64_t v19 = v26;
    }
    while ((int)v17 < v14);
  }
  return result;
}

void *sub_1A2D078(uint64_t a1)
{
  __int16 v2 = malloc_type_malloc(0x10uLL, 0x101004082113244uLL);
  if (v2)
  {
    memptr = 0;
    if (malloc_type_posix_memalign(&memptr, 0x20uLL, 0x2000uLL, 0x575F551CuLL)) {
      uint64_t v3 = 0;
    }
    else {
      uint64_t v3 = memptr;
    }
    v2[1] = v3;
    if (v3)
    {
      *(_DWORD *)__int16 v2 = *(_DWORD *)a1;
      memcpy(v3, *(const void **)(a1 + 8), 0x2000uLL);
    }
    else
    {
      free(v2);
      return 0;
    }
  }
  return v2;
}

void *sub_1A2D118(_DWORD *a1, unsigned char *a2)
{
  --a1[3];
  int v3 = *((unsigned __int8 *)a1 + 8);
  *a2 = v3;
  uint64_t v4 = *(void *)a1;
  if (a1[3])
  {
    uint64_t v5 = *(int **)a1;
    return sub_1A28A1C(v5, v3);
  }
  else
  {
    free(a1);
    return (void *)v4;
  }
}

float sub_1A2D180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = (int8x16_t *)(*(void *)(a3 + 8) + 32);
  uint64_t v4 = (int8x16_t *)(*(void *)(a2 + 8) + 32);
  uint64_t v5 = (int8x16_t *)(*(void *)(a1 + 8) + 32);
  uint16x8_t v6 = 0uLL;
  unint64_t v7 = -8;
  uint16x8_t v8 = 0uLL;
  uint16x8_t v9 = 0uLL;
  uint16x8_t v10 = 0uLL;
  do
  {
    int8x16_t v11 = vorrq_s8(v4[-2], v5[-2]);
    uint16x8_t v6 = vpadalq_u8(v6, (uint8x16_t)vcntq_s8(v11));
    v3[-2] = v11;
    int8x16_t v12 = vorrq_s8(v4[-1], v5[-1]);
    uint16x8_t v8 = vpadalq_u8(v8, (uint8x16_t)vcntq_s8(v12));
    v3[-1] = v12;
    int8x16_t v13 = vorrq_s8(*v4, *v5);
    uint16x8_t v9 = vpadalq_u8(v9, (uint8x16_t)vcntq_s8(v13));
    *int v3 = v13;
    int8x16_t v14 = vorrq_s8(v4[1], v5[1]);
    v7 += 8;
    uint16x8_t v10 = vpadalq_u8(v10, (uint8x16_t)vcntq_s8(v14));
    v3[1] = v14;
    v3 += 4;
    v4 += 4;
    v5 += 4;
  }
  while (v7 < 0x3F8);
  int64x2_t v15 = (int64x2_t)vpadalq_u32(vpadalq_u32(vpadalq_u32(vpaddlq_u32(vpaddlq_u16(v8)), vpaddlq_u16(v6)), vpaddlq_u16(v9)), vpaddlq_u16(v10));
  LODWORD(result) = vaddq_s64(v15, vdupq_laneq_s64(v15, 1)).u32[0];
  *(float *)a3 = result;
  return result;
}

uint64_t sub_1A2D258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = (int8x16_t *)(*(void *)(a3 + 8) + 32);
  uint64_t v4 = (int8x16_t *)(*(void *)(a2 + 8) + 32);
  uint64_t v5 = (int8x16_t *)(*(void *)(a1 + 8) + 32);
  unint64_t v6 = -8;
  do
  {
    v3[-2] = vandq_s8(v4[-2], v5[-2]);
    v3[-1] = vandq_s8(v4[-1], v5[-1]);
    *int v3 = vandq_s8(*v4, *v5);
    v6 += 8;
    v3[1] = vandq_s8(v4[1], v5[1]);
    v3 += 4;
    v4 += 4;
    v5 += 4;
  }
  while (v6 < 0x3F8);
  *(_DWORD *)a3 = -1;
  return 0xFFFFFFFFLL;
}

float sub_1A2D2DC(uint64_t a1, uint64_t a2)
{
  __int16 v2 = (int8x16_t *)(*(void *)(a2 + 8) + 32);
  int v3 = (int8x16_t *)(*(void *)(a1 + 8) + 32);
  uint16x8_t v4 = 0uLL;
  unint64_t v5 = -8;
  uint16x8_t v6 = 0uLL;
  uint16x8_t v7 = 0uLL;
  uint16x8_t v8 = 0uLL;
  do
  {
    uint16x8_t v4 = vpadalq_u8(v4, (uint8x16_t)vcntq_s8(vandq_s8(v2[-2], v3[-2])));
    uint16x8_t v6 = vpadalq_u8(v6, (uint8x16_t)vcntq_s8(vandq_s8(v2[-1], v3[-1])));
    int8x16_t v9 = *v3;
    int8x16_t v10 = v3[1];
    v3 += 4;
    int8x16_t v11 = *v2;
    int8x16_t v12 = v2[1];
    v2 += 4;
    uint16x8_t v7 = vpadalq_u8(v7, (uint8x16_t)vcntq_s8(vandq_s8(v11, v9)));
    uint16x8_t v8 = vpadalq_u8(v8, (uint8x16_t)vcntq_s8(vandq_s8(v12, v10)));
    v5 += 8;
  }
  while (v5 < 0x3F8);
  int64x2_t v13 = (int64x2_t)vpadalq_u32(vpadalq_u32(vpadalq_u32(vpaddlq_u32(vpaddlq_u16(v6)), vpaddlq_u16(v4)), vpaddlq_u16(v7)), vpaddlq_u16(v8));
  LODWORD(result) = vaddq_s64(v13, vdupq_laneq_s64(v13, 1)).u32[0];
  return result;
}

int *sub_1A2D37C(int *result, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = result;
  int v6 = *result;
  if (*(_DWORD *)(a3 + 4) < *result)
  {
    float result = (int *)sub_1A2B344(a3, v6, 0);
    int v6 = *v5;
  }
  if (v6 < 1)
  {
    unsigned int v7 = 0;
  }
  else
  {
    unsigned int v7 = 0;
    uint16x8_t v8 = (unsigned __int16 *)*((void *)v5 + 1);
    uint64_t v9 = *(void *)(a3 + 8);
    uint64_t v10 = v6;
    uint64_t v11 = *(void *)(a2 + 8);
    do
    {
      unsigned int v12 = *v8++;
      *(_WORD *)(v9 + 2 * v7) = v12;
      v7 += (*(void *)(v11 + (((unint64_t)v12 >> 3) & 0x1FF8)) >> v12) & 1;
      --v10;
    }
    while (v10);
  }
  *(_DWORD *)a3 = v7;
  return result;
}

uint64_t sub_1A2D41C(uint64_t result, int *a2, uint64_t a3)
{
  uint64_t v5 = result;
  int v6 = (_WORD *)*((void *)a2 + 1);
  int v7 = *a2;
  BOOL v8 = *a2 == 1 && *v6 == 0;
  if (v8 && (__int16)v6[1] == -1)
  {
    if (a3 != result)
    {
      return (uint64_t)sub_1A2B47C(result, a3);
    }
  }
  else
  {
    if (*(_DWORD *)(a3 + 4) < *(_DWORD *)result)
    {
      float result = (uint64_t)sub_1A2B344(a3, *(_DWORD *)result, 0);
      int v7 = *a2;
    }
    if (v7)
    {
      int v9 = *(_DWORD *)v5;
      int v10 = 0;
      uint64_t v11 = (*(_DWORD *)v5 - 1);
      if (*(int *)v5 >= 1)
      {
        LODWORD(v12) = 0;
        int v13 = 0;
        int8x16_t v14 = (unsigned __int16 *)*((void *)a2 + 1);
        int v15 = v14[1];
        unsigned int v18 = *v14;
        uint64_t v16 = v14 + 3;
        unsigned int v17 = v18;
        uint64_t v19 = *(void *)(v5 + 8);
        int v20 = v7 - 1;
        while (1)
        {
          float result = *(unsigned __int16 *)(v19 + 2 * (int)v12);
          if (v15 + v17 < result) {
            break;
          }
LABEL_16:
          int v23 = v12;
          if (v17 <= result)
          {
            *(_WORD *)(*(void *)(a3 + 8) + 2 * v10++) = result;
            LODWORD(v12) = v12 + 1;
          }
          else
          {
            uint64_t v12 = (int)v12 + 1;
            if (v23 + 1 < v9)
            {
              float result = *(unsigned __int16 *)(v19 + 2 * v12);
              if (result < v17)
              {
                float result = (v23 + 2);
                if ((int)result >= v9)
                {
                  int v26 = 1;
LABEL_28:
                  unsigned int v25 = *(unsigned __int16 *)(v19 + 2 * v11);
                  int v24 = v26;
                  float result = (v9 - 1);
                }
                else
                {
                  int v24 = 1;
                  while (1)
                  {
                    unsigned int v25 = *(unsigned __int16 *)(v19 + 2 * (int)result);
                    if (v25 >= v17) {
                      break;
                    }
                    int v26 = 2 * v24;
                    float result = (v12 + 2 * v24);
                    v24 *= 2;
                    if ((int)result >= v9) {
                      goto LABEL_28;
                    }
                  }
                }
                if (v25 != v17)
                {
                  if (v25 < v17) {
                    goto LABEL_38;
                  }
                  int v27 = v12 + (v24 >> 1);
                  while (v27 + 1 != result)
                  {
                    LODWORD(v12) = (v27 + (int)result) >> 1;
                    unsigned int v28 = *(unsigned __int16 *)(v19 + 2 * (int)v12);
                    if (v28 == v17) {
                      goto LABEL_25;
                    }
                    if (v28 >= v17)
                    {
                      float result = v12;
                    }
                    else
                    {
                      int v27 = (v27 + (int)result) >> 1;
                      float result = result;
                    }
                  }
                }
                LODWORD(v12) = result;
              }
            }
          }
LABEL_25:
          if ((int)v12 >= v9) {
            goto LABEL_38;
          }
        }
        uint64_t v21 = &v16[2 * v13];
        while (v20 != v13)
        {
          unsigned int v17 = *(v21 - 1);
          int v22 = *v21;
          v21 += 2;
          int v15 = v22;
          ++v13;
          if (v22 + v17 >= result) {
            goto LABEL_16;
          }
        }
      }
LABEL_38:
      *(_DWORD *)a3 = v10;
    }
  }
  return result;
}

uint64_t sub_1A2D5F0(unsigned int *a1, uint64_t a2, void **a3)
{
  int v6 = (_WORD *)*((void *)a1 + 1);
  uint64_t v7 = *a1;
  int v8 = v7;
  if (v7 == 1 && *v6 == 0)
  {
    if ((__int16)v6[1] == -1)
    {
      if (*a3 != (void *)a2) {
        *a3 = sub_1A2D078(a2);
      }
      return 1;
    }
  }
  else if ((int)v7 < 1)
  {
    goto LABEL_11;
  }
  int v10 = v6 + 1;
  uint64_t v11 = *a1;
  do
  {
    int v12 = *v10;
    v10 += 2;
    v8 += v12;
    --v11;
  }
  while (v11);
  if (v8 > 4096)
  {
    if (*a3 != (void *)a2)
    {
      unsigned int v25 = sub_1A2D078(a2);
      *a3 = v25;
      if (!v25) {
        return 1;
      }
      int v26 = (int *)v25;
      uint64_t v27 = *a1;
      if ((int)v27 <= 0)
      {
        unsigned int v28 = 0;
        unsigned int v38 = 0;
        unsigned int v30 = (void *)v25[1];
        *unsigned int v30 = 0;
      }
      else
      {
        unsigned int v28 = 0;
        uint64_t v29 = *((void *)a1 + 1);
        unsigned int v30 = (void *)v25[1];
        unsigned int v31 = (unsigned __int16 *)(v29 + 2);
        do
        {
          int v32 = *(v31 - 1);
          int v33 = *v31;
          if (v28 != v32)
          {
            unsigned int v34 = v28 >> 6;
            unsigned int v35 = (v32 - 1) >> 6;
            uint64_t v36 = -1 << v28;
            if (v35 == v28 >> 6)
            {
              unint64_t v37 = (0xFFFFFFFFFFFFFFFFLL >> -(char)v32) & v36;
            }
            else
            {
              v30[v34] &= ~v36;
              if (v34 + 1 < v35) {
                bzero((char *)v30 + ((v28 >> 3) & 0x1FFFFFF8) + 8, 8 * (v35 - v34 - 2) + 8);
              }
              unint64_t v37 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v32;
              unsigned int v34 = (v32 - 1) >> 6;
            }
            v30[v34] &= ~v37;
          }
          v31 += 2;
          unsigned int v28 = v32 + v33 + 1;
          --v27;
        }
        while (v27);
        if (v32 + v33 == 0xFFFF)
        {
LABEL_58:
          sub_1A2ACFC((uint64_t)v26);
          *int v26 = v51;
          if (v51 <= 4096)
          {
            uint64_t v52 = sub_1A2C074((uint64_t)v26);
            sub_1A2A914(*a3);
            uint64_t v24 = 0;
            *a3 = v52;
            return v24;
          }
          return 1;
        }
        unsigned int v38 = v28 >> 6;
        uint64_t v39 = -1 << v28;
        if (v28 >> 6 == 1023)
        {
LABEL_57:
          v30[1023] &= ~v39;
          goto LABEL_58;
        }
        v30[v38] &= ~v39;
        if (v28 >> 7 > 0x1FE)
        {
LABEL_56:
          uint64_t v39 = -1;
          goto LABEL_57;
        }
      }
      bzero((char *)v30 + ((v28 >> 3) & 0x1FF8) + 8, 8 * (1021 - v38) + 8);
      goto LABEL_56;
    }
    unsigned int v40 = *(void **)(a2 + 8);
    if ((int)v7 < 1)
    {
      unsigned int v41 = 0;
      unsigned int v49 = 0;
      *unsigned int v40 = 0;
    }
    else
    {
      unsigned int v41 = 0;
      unsigned int v42 = v6 + 1;
      do
      {
        int v43 = *(v42 - 1);
        int v44 = *v42;
        if (v41 != v43)
        {
          unsigned int v45 = v41 >> 6;
          unsigned int v46 = (v43 - 1) >> 6;
          uint64_t v47 = -1 << v41;
          if (v46 == v41 >> 6)
          {
            unint64_t v48 = (0xFFFFFFFFFFFFFFFFLL >> -(char)v43) & v47;
          }
          else
          {
            v40[v45] &= ~v47;
            if (v45 + 1 < v46) {
              bzero((char *)v40 + ((v41 >> 3) & 0x1FFFFFF8) + 8, 8 * (v46 - v45 - 2) + 8);
            }
            unint64_t v48 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v43;
            unsigned int v45 = (v43 - 1) >> 6;
          }
          v40[v45] &= ~v48;
        }
        v42 += 2;
        unsigned int v41 = v43 + v44 + 1;
        --v7;
      }
      while (v7);
      if (v43 + v44 == 0xFFFF)
      {
LABEL_64:
        sub_1A2ACFC(a2);
        *(_DWORD *)a2 = v53;
        if (v53 <= 4096)
        {
          int v55 = sub_1A2C074(a2);
          uint64_t v24 = 0;
          *a3 = v55;
          return v24;
        }
        return 1;
      }
      unsigned int v49 = v41 >> 6;
      uint64_t v50 = -1 << v41;
      if (v41 >> 6 == 1023)
      {
LABEL_63:
        v40[1023] &= ~v50;
        goto LABEL_64;
      }
      v40[v49] &= ~v50;
      if (v41 >> 7 > 0x1FE)
      {
LABEL_62:
        uint64_t v50 = -1;
        goto LABEL_63;
      }
    }
    bzero((char *)v40 + ((v41 >> 3) & 0x1FF8) + 8, 8 * (1021 - v49) + 8);
    goto LABEL_62;
  }
LABEL_11:
  if (v8 >= *(_DWORD *)a2) {
    int v13 = *(_DWORD *)a2;
  }
  else {
    int v13 = v8;
  }
  int8x16_t v14 = sub_1A29410(v13);
  *a3 = v14;
  if (!v14) {
    return 0;
  }
  uint64_t v15 = *a1;
  if ((int)v15 < 1) {
    return 0;
  }
  uint64_t v16 = 0;
  uint64_t v17 = *((void *)a1 + 1);
  uint64_t v18 = *((void *)v14 + 1);
  uint64_t v19 = *(void *)(a2 + 8);
  int v20 = *v14;
  do
  {
    uint64_t v21 = (unsigned __int16 *)(v17 + 4 * v16);
    int v22 = *v21;
    int v23 = v21[1] + 1;
    do
    {
      *(_WORD *)(v18 + 2 * v20) = v22;
      v20 += (*(void *)(v19 + 8 * ((unsigned __int16)v22 >> 6)) >> v22) & 1;
      ++v22;
      --v23;
    }
    while (v23);
    ++v16;
  }
  while (v16 != v15);
  uint64_t v24 = 0;
  *int8x16_t v14 = v20;
  return v24;
}

BOOL sub_1A2DA24(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1A2D2DC(a1, a2);
  int v7 = v6;
  if (v6 <= 4096)
  {
    int v9 = sub_1A29410(v6);
    *a3 = v9;
    if (v9)
    {
      __int16 v10 = 0;
      int v11 = 0;
      uint64_t v12 = 0;
      *int v9 = v7;
      uint64_t v13 = *(void *)(a1 + 8);
      uint64_t v14 = *(void *)(a2 + 8);
      uint64_t v15 = *((void *)v9 + 1);
      do
      {
        unint64_t v16 = *(void *)(v14 + 8 * v12) & *(void *)(v13 + 8 * v12);
        if (v16)
        {
          uint64_t v17 = (_WORD *)(v15 + 2 * v11);
          do
          {
            *v17++ = v10 | __clz(__rbit64(v16));
            ++v11;
            v16 &= v16 - 1;
          }
          while (v16);
        }
        v10 += 64;
        ++v12;
      }
      while (v12 != 1024);
    }
  }
  else
  {
    int v8 = sub_1A29308();
    *a3 = v8;
    if (v8)
    {
      sub_1A2D258(a1, a2, (uint64_t)v8);
      *(_DWORD *)*a3 = v7;
    }
  }
  return v7 > 4096;
}

uint64_t sub_1A2DB04(uint64_t a1)
{
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 12) = 0;
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  __int16 v2 = *(void **)a1;
  BOOL v3 = (int)v1 >= 0 && (int)v1 < **(_DWORD **)a1;
  uint64_t v4 = v3;
  if (v3)
  {
    *(unsigned char *)(a1 + 24) = 1;
    uint64_t v5 = v2[2];
    int v6 = *(uint64_t **)(v2[1] + 8 * v1);
    *(void *)(a1 + 32) = v6;
    int v7 = *(unsigned __int8 *)(v2[3] + v1);
    *(unsigned char *)(a1 + 40) = v7;
    *(_DWORD *)(a1 + 44) = *(unsigned __int16 *)(v5 + 2 * v1) << 16;
    if (v7 == 4)
    {
      *(unsigned char *)(a1 + 40) = *((unsigned char *)v6 + 8);
      int v6 = (uint64_t *)*v6;
    }
    *(void *)(a1 + 32) = v6;
  }
  else
  {
    *(_DWORD *)(a1 + 20) = -1;
    *(unsigned char *)(a1 + 24) = 0;
  }
  return v4;
}

uint64_t sub_1A2DB84(uint64_t a1, const void **a2, std::string *a3, const std::string *a4)
{
  uint64_t v8 = sub_1949830(a1, 0);
  *(_OWORD *)(v8 + 16) = 0u;
  *(void *)uint64_t v8 = off_24E8660;
  *(_OWORD *)(v8 + 64) = 0u;
  *(void *)(v8 + 112) = 850045863;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_OWORD *)(v8 + 48) = 0u;
  *(_OWORD *)(v8 + 80) = 0u;
  *(_OWORD *)(v8 + 96) = 0u;
  *(_OWORD *)(v8 + 120) = 0u;
  *(_OWORD *)(v8 + 136) = 0u;
  *(_OWORD *)(v8 + 152) = 0u;
  *(_OWORD *)(v8 + 168) = 0u;
  *(void *)(v8 + 184) = 0;
  sub_1A2DC7C(v8, a2, a3, a4);
  return a1;
}

void sub_1A2DC44(_Unwind_Exception *a1)
{
  std::mutex::~mutex(v5);
  if (*(char *)(v1 + 111) < 0) {
    operator delete(*(void **)(v1 + 88));
  }
  sub_1A2E2B4((char *)v1, v3, v4, v2);
  _Unwind_Resume(a1);
}

void sub_1A2DC7C(uint64_t a1, const void **a2, std::string *__str, const std::string *a4)
{
  if (*(char *)(a1 + 87) < 0)
  {
    *(void *)(a1 + 72) = 4;
    int v7 = *(char **)(a1 + 64);
  }
  else
  {
    *(unsigned char *)(a1 + 87) = 4;
    int v7 = (char *)(a1 + 64);
  }
  strcpy(v7, "siri");
  std::string::operator=((std::string *)(a1 + 16), __str);
  std::string::operator=((std::string *)(a1 + 40), a4);
  if (*((char *)a2 + 23) >= 0) {
    size_t v8 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v8 = (size_t)a2[1];
  }
  int v9 = &v12;
  sub_188DACC((uint64_t)&v12, v8 + 22);
  if (v13 < 0) {
    int v9 = (long long *)v12;
  }
  if (v8)
  {
    if (*((char *)a2 + 23) >= 0) {
      __int16 v10 = a2;
    }
    else {
      __int16 v10 = *a2;
    }
    memmove(v9, v10, v8);
  }
  strcpy((char *)v9 + v8, "/mt-quasar-config.json");
  int v11 = (void **)(a1 + 88);
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*v11);
  }
  *(_OWORD *)int v11 = v12;
  *(void *)(a1 + 104) = v13;
  if (*(char *)(a1 + 111) < 0)
  {
    if (!*(void *)(a1 + 96)) {
      return;
    }
    goto LABEL_20;
  }
  if (*(unsigned char *)(a1 + 111))
  {
LABEL_20:
    QuasarC_setLogLevel();
    *(void *)(a1 + 176) = QuasarCSystemConfig_new();
    QuasarCSystemConfig_readJsonFile();
    *(void *)(a1 + 184) = QuasarCPDecTranslator_new();
  }
}

uint64_t sub_1A2DE38(uint64_t a1)
{
  *(void *)a1 = off_24E8660;
  if (*(void *)(a1 + 184)) {
    QuasarCPDecTranslator_delete();
  }
  if (*(void *)(a1 + 176)) {
    QuasarCSystemConfig_delete();
  }
  std::mutex::~mutex((std::mutex *)(a1 + 112));
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

void sub_1A2DEE0(uint64_t a1)
{
  sub_1A2DE38(a1);

  operator delete();
}

BOOL sub_1A2DF18(uint64_t a1)
{
  return *(void *)(a1 + 184) != 0;
}

uint64_t sub_1A2DF28(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(unsigned __int8 *)(a1 + 23);
  if ((*(char *)(a1 + 23) & 0x80000000) == 0)
  {
    if (v2 <= 8)
    {
      unint64_t v3 = *(void *)(a1 + 8);
      goto LABEL_5;
    }
    unint64_t v3 = *(unsigned __int8 *)(a1 + 23);
LABEL_12:
    unint64_t v5 = *(unsigned __int8 *)(a2 + 23);
    if ((v5 & 0x80u) != 0) {
      unint64_t v5 = *(void *)(a2 + 8);
    }
    if (v3 > 0x10)
    {
      if ((v2 & 0x80u) != 0) {
        unint64_t v2 = *(void *)(a1 + 8);
      }
      if ((double)v2 * 1.5 <= (double)v5) {
        return 1;
      }
    }
    else
    {
      if ((v2 & 0x80u) != 0) {
        unint64_t v2 = *(void *)(a1 + 8);
      }
      if (v5 >= 2 * v2) {
        return 1;
      }
    }
LABEL_10:
    sub_1C03204();
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 9) {
    goto LABEL_12;
  }
LABEL_5:
  unint64_t v4 = *(unsigned __int8 *)(a2 + 23);
  if ((v4 & 0x80u) != 0) {
    unint64_t v4 = *(void *)(a2 + 8);
  }
  if ((v2 & 0x80u) != 0) {
    unint64_t v2 = v3;
  }
  if (v4 < 3 * v2) {
    goto LABEL_10;
  }
  return 1;
}

uint64_t sub_1A2E034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 184)) {
    return 0;
  }
  if (*(char *)(a2 + 23) < 0)
  {
    unint64_t v5 = *(void *)(a2 + 8);
    if (v5 < 4) {
      return 2;
    }
  }
  else
  {
    unint64_t v5 = *(unsigned __int8 *)(a2 + 23);
    if (v5 < 4) {
      return 2;
    }
  }
  if (v5 > 0x31) {
    return 2;
  }
  uint64_t v21 = (std::mutex *)(a1 + 112);
  char v22 = 0;
  if ((sub_1A2E214((uint64_t)&v21) & 1) != 0
    && (QuasarCPDecTranslator_translateResult(), (size_t v8 = (char *)QuasarCPDecTranslationResult_string()) != 0))
  {
    sub_1A2E26C((std::string *)a3, v8);
    int v9 = sub_1A2DF28(a2, a3);
    if (v9)
    {
      if (*(char *)(a3 + 23) < 0)
      {
        *(void *)(a3 + 8) = 0;
        __int16 v10 = *(unsigned char **)a3;
      }
      else
      {
        *(unsigned char *)(a3 + 23) = 0;
        __int16 v10 = (unsigned char *)a3;
      }
      *__int16 v10 = 0;
    }
    else
    {
      QuasarCPDecTranslationResult_score();
      *(_DWORD *)(a3 + 24) = v11;
      QuasarCPDecTranslationResult_confidence();
      *(_DWORD *)(a3 + 28) = v12;
      *(unsigned char *)(a3 + 32) = QuasarCPDecTranslationResult_isLowConfidence() != 0;
    }
    free(v8);
    QuasarCPDecTranslationResult_delete();
    int v13 = *(char *)(a2 + 23);
    int v14 = *(char *)(a3 + 23);
    if (v14 >= 0) {
      size_t v15 = *(unsigned __int8 *)(a3 + 23);
    }
    else {
      size_t v15 = *(void *)(a3 + 8);
    }
    if (v14 >= 0) {
      unint64_t v16 = (unsigned char *)a3;
    }
    else {
      unint64_t v16 = *(unsigned char **)a3;
    }
    if (v13 >= 0) {
      size_t v17 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      size_t v17 = *(void *)(a2 + 8);
    }
    if (v13 >= 0) {
      uint64_t v18 = (const void *)a2;
    }
    else {
      uint64_t v18 = *(const void **)a2;
    }
    if (v17 >= v15) {
      size_t v19 = v15;
    }
    else {
      size_t v19 = v17;
    }
    BOOL v20 = memcmp(v16, v18, v19) == 0;
    if (v17 != v15) {
      BOOL v20 = 0;
    }
    if (v20 | v9) {
      uint64_t v6 = 5;
    }
    else {
      uint64_t v6 = 4;
    }
  }
  else
  {
    uint64_t v6 = 2;
  }
  if (v22) {
    std::mutex::unlock(v21);
  }
  return v6;
}

void sub_1A2E1F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9, char a10)
{
  if (a10) {
    std::mutex::unlock(a9);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A2E214(uint64_t a1)
{
  unint64_t v2 = *(std::mutex **)a1;
  if (v2)
  {
    if (!*(unsigned char *)(a1 + 8))
    {
      uint64_t result = std::mutex::try_lock(v2);
      *(unsigned char *)(a1 + 8) = result;
      return result;
    }
  }
  else
  {
    std::__throw_system_error(1, "unique_lock::try_lock: references null mutex");
  }
  std::__throw_system_error(11, "unique_lock::try_lock: already locked");
  return sub_1A2E26C(v4, v5);
}

std::string *sub_1A2E26C(std::string *a1, char *__s)
{
  size_t v4 = strlen(__s);

  return sub_188D74C(a1, __s, v4);
}

void sub_1A2E2B4(char *a1, void **a2, void **a3, void **a4)
{
  if (a1[87] < 0) {
    operator delete(*a2);
  }
  if (a1[63] < 0) {
    operator delete(*a3);
  }
  if (a1[39] < 0)
  {
    int v7 = *a4;
    operator delete(v7);
  }
}

void sub_1A2E330()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2626AB0, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}