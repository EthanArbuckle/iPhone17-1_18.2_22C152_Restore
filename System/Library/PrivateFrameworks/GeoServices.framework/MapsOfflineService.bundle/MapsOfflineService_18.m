void sub_80B294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void *__p,uint64_t a51,int a52,__int16 a53,char a54,char a55,uint64_t a56,uint64_t a57,void *a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a72;
  char a73;
  uint64_t v73;

  sub_1A668(&a32);
  sub_4F31D0(&a37);
  if (a55 < 0) {
    operator delete(__p);
  }
  sub_4F31D0(&a58);
  if (a73 < 0) {
    operator delete(a72);
  }
  sub_4D4880((void **)&STACK[0x200]);
  if (SLOBYTE(STACK[0x267]) < 0) {
    operator delete((void *)STACK[0x250]);
  }
  if (*(char *)(v73 - 217) < 0) {
    operator delete(*(void **)(v73 - 240));
  }
  sub_4D4880((void **)(v73 - 216));
  sub_14A84(v73 - 144);
  sub_5920E0((void **)(v73 - 128));
  _Unwind_Resume(a1);
}

void sub_80B4C0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  uint64_t v8 = 40;
  if (!*(unsigned char *)(*(void *)(a1 + 1960) + 1064)) {
    uint64_t v8 = 32;
  }
  uint64_t v9 = *(void *)(*(void *)(a1 + 1952) + v8);
  v10 = __p;
  sub_635CD0((long long **)(a1 + 80), (uint64_t)__p);
  char v11 = BYTE7(v54);
  v12 = __p[0];
  if (SBYTE7(v54) < 0) {
    v10 = (void **)__p[0];
  }
  if (byte_25C474F >= 0) {
    v13 = &qword_25C4738;
  }
  else {
    v13 = (uint64_t *)qword_25C4738;
  }
  if (byte_25C474F >= 0) {
    int64_t v14 = byte_25C474F;
  }
  else {
    int64_t v14 = *(void *)&byte_25C4740;
  }
  if (!v14)
  {
    uint64_t v18 = 0;
    if ((BYTE7(v54) & 0x80) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  uint64_t v51 = v9;
  uint64_t v52 = a2;
  if ((SBYTE7(v54) & 0x80u) == 0) {
    uint64_t v15 = BYTE7(v54);
  }
  else {
    uint64_t v15 = (uint64_t)__p[1];
  }
  v16 = (char *)v10 + v15;
  if (v15 >= v14)
  {
    uint64_t v50 = a3;
    int v19 = *(char *)v13;
    v20 = v10;
    do
    {
      uint64_t v21 = v15 - v14;
      if (v21 == -1) {
        break;
      }
      v22 = (char *)memchr(v20, v19, v21 + 1);
      if (!v22) {
        break;
      }
      v17 = v22;
      if (!memcmp(v22, v13, v14)) {
        goto LABEL_25;
      }
      v20 = (void **)(v17 + 1);
      uint64_t v15 = v16 - (v17 + 1);
    }
    while (v15 >= v14);
    v17 = v16;
LABEL_25:
    a3 = v50;
  }
  else
  {
    v17 = (char *)v10 + v15;
  }
  if (v17 == v16) {
    uint64_t v18 = -1;
  }
  else {
    uint64_t v18 = v17 - (char *)v10;
  }
  uint64_t v9 = v51;
  a2 = v52;
  if (v11 < 0) {
LABEL_30:
  }
    operator delete(v12);
LABEL_31:
  if (*(void *)(*(void *)(a2 + 1064) + 2400 * a3 + 872) >= v9 && v18 == -1)
  {
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 120))(__p, a1);
    unint64_t v30 = *(void *)(a4 + 8);
    if (v30 >= *(void *)(a4 + 16))
    {
      v38 = sub_63D48C((void ***)a4, (uint64_t)__p);
      v39 = (std::__shared_weak_count *)*((void *)&v61 + 1);
      *(void *)(a4 + 8) = v38;
      if (v39 && !atomic_fetch_add(&v39->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
        std::__shared_weak_count::__release_weak(v39);
      }
    }
    else
    {
      *(void *)(v30 + 16) = 0;
      *(_OWORD *)unint64_t v30 = 0u;
      *(_OWORD *)unint64_t v30 = *(_OWORD *)__p;
      *(void *)(v30 + 16) = v54;
      uint64_t v31 = *((void *)&v54 + 1);
      *(_OWORD *)__p = 0u;
      long long v54 = 0u;
      *(void *)(v30 + 24) = v31;
      *(void *)(v30 + 32) = v55;
      uint64_t v55 = 0;
      v32 = v56;
      *(void *)(v30 + 40) = v56;
      uint64_t v33 = v57;
      *(void *)(v30 + 48) = v57;
      *(_DWORD *)(v30 + 56) = v58;
      if (v33)
      {
        unint64_t v34 = v32[1];
        unint64_t v35 = *(void *)(v30 + 32);
        if ((v35 & (v35 - 1)) != 0)
        {
          if (v34 >= v35) {
            v34 %= v35;
          }
        }
        else
        {
          v34 &= v35 - 1;
        }
        *(void *)(v31 + 8 * v34) = v30 + 40;
        v56 = 0;
        uint64_t v57 = 0;
      }
      *(unsigned char *)(v30 + 64) = v59;
      *(_DWORD *)(v30 + 72) = v60;
      *(_OWORD *)(v30 + 80) = v61;
      long long v61 = 0uLL;
      *(_WORD *)(v30 + 96) = v62;
      *(void *)(a4 + 8) = v30 + 104;
    }
    v46 = v56;
    if (v56)
    {
      do
      {
        v47 = (void *)*v46;
        sub_4F4B48((uint64_t)(v46 + 2));
        operator delete(v46);
        v46 = v47;
      }
      while (v47);
    }
    v48 = (void *)*((void *)&v54 + 1);
    *((void *)&v54 + 1) = 0;
    if (v48) {
      operator delete(v48);
    }
    v43 = (void **)__p[0];
    if (__p[0])
    {
      v49 = (void **)__p[1];
      v45 = __p[0];
      if (__p[1] == __p[0]) {
        goto LABEL_78;
      }
      do
      {
        if (*((char *)v49 - 1) < 0) {
          operator delete(*(v49 - 3));
        }
        v49 -= 3;
      }
      while (v49 != v43);
      goto LABEL_77;
    }
  }
  else
  {
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 128))(__p, a1, a2, a3);
    unint64_t v24 = *(void *)(a4 + 8);
    if (v24 >= *(void *)(a4 + 16))
    {
      v36 = sub_63D48C((void ***)a4, (uint64_t)__p);
      v37 = (std::__shared_weak_count *)*((void *)&v61 + 1);
      *(void *)(a4 + 8) = v36;
      if (v37 && !atomic_fetch_add(&v37->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
    else
    {
      *(void *)(v24 + 16) = 0;
      *(_OWORD *)unint64_t v24 = 0u;
      *(_OWORD *)unint64_t v24 = *(_OWORD *)__p;
      *(void *)(v24 + 16) = v54;
      uint64_t v25 = *((void *)&v54 + 1);
      *(_OWORD *)__p = 0u;
      long long v54 = 0u;
      *(void *)(v24 + 24) = v25;
      *(void *)(v24 + 32) = v55;
      uint64_t v55 = 0;
      v26 = v56;
      *(void *)(v24 + 40) = v56;
      uint64_t v27 = v57;
      *(void *)(v24 + 48) = v57;
      *(_DWORD *)(v24 + 56) = v58;
      if (v27)
      {
        unint64_t v28 = v26[1];
        unint64_t v29 = *(void *)(v24 + 32);
        if ((v29 & (v29 - 1)) != 0)
        {
          if (v28 >= v29) {
            v28 %= v29;
          }
        }
        else
        {
          v28 &= v29 - 1;
        }
        *(void *)(v25 + 8 * v28) = v24 + 40;
        v56 = 0;
        uint64_t v57 = 0;
      }
      *(unsigned char *)(v24 + 64) = v59;
      *(_DWORD *)(v24 + 72) = v60;
      *(_OWORD *)(v24 + 80) = v61;
      long long v61 = 0uLL;
      *(_WORD *)(v24 + 96) = v62;
      *(void *)(a4 + 8) = v24 + 104;
    }
    v40 = v56;
    if (v56)
    {
      do
      {
        v41 = (void *)*v40;
        sub_4F4B48((uint64_t)(v40 + 2));
        operator delete(v40);
        v40 = v41;
      }
      while (v41);
    }
    v42 = (void *)*((void *)&v54 + 1);
    *((void *)&v54 + 1) = 0;
    if (v42) {
      operator delete(v42);
    }
    v43 = (void **)__p[0];
    if (__p[0])
    {
      v44 = (void **)__p[1];
      v45 = __p[0];
      if (__p[1] == __p[0]) {
        goto LABEL_78;
      }
      do
      {
        if (*((char *)v44 - 1) < 0) {
          operator delete(*(v44 - 3));
        }
        v44 -= 3;
      }
      while (v44 != v43);
LABEL_77:
      v45 = __p[0];
LABEL_78:
      __p[1] = v43;
      operator delete(v45);
    }
  }
}

void sub_80B9D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_4F31D0((void **)va);
  sub_5920E0(v5);
  _Unwind_Resume(a1);
}

void sub_80B9F4(_Unwind_Exception *a1)
{
  sub_5920E0(v1);
  _Unwind_Resume(a1);
}

void sub_80BA08(_Unwind_Exception *a1)
{
  sub_5920E0(v1);
  _Unwind_Resume(a1);
}

void sub_80BA1C(_Unwind_Exception *a1)
{
  sub_5920E0(v1);
  _Unwind_Resume(a1);
}

void sub_80BA30(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  BOOL v4 = sub_635D10(a1 + 8, (uint64_t)&xmmword_25C6748);
  BOOL v5 = v4;
  unsigned int v6 = *(_DWORD *)(a1 + 1848);
  if (v6 <= 0x1E && ((1 << v6) & 0x60000800) != 0)
  {
    memset(&v11, 0, sizeof(v11));
LABEL_6:
    std::string::operator=(&v11, (const std::string *)&dword_25C51D0);
    if (v5)
    {
      if (byte_25C555F >= 0) {
        uint64_t v8 = (const std::string::value_type *)&qword_25C5548;
      }
      else {
        uint64_t v8 = (const std::string::value_type *)qword_25C5548;
      }
      if (byte_25C555F >= 0) {
        std::string::size_type v9 = byte_25C555F;
      }
      else {
        std::string::size_type v9 = unk_25C5550;
      }
      std::string::append(&v11, v8, v9);
    }
    *a2 = v11;
    return;
  }
  BOOL v10 = v6 - 64 < 3 && v4;
  memset(&v11, 0, sizeof(v11));
  if (v10) {
    goto LABEL_6;
  }
  if (v6 <= 0x19 && ((1 << v6) & 0x20200C0) != 0 || v6 - 86 < 2 || v6 - 41 < 0x13)
  {
LABEL_23:
    sub_80807C(a1, (uint64_t)a2);
  }
  else
  {
    switch(v6)
    {
      case 0x10u:
      case 0x16u:
      case 0x17u:
      case 0x18u:
      case 0x27u:
      case 0x55u:
      case 0x58u:
      case 0x5Bu:
      case 0x5Cu:
      case 0x5Du:
        goto LABEL_23;
      default:
        if (v6 - 89 <= 1) {
          goto LABEL_23;
        }
        a2->__r_.__value_.__r.__words[0] = 0;
        a2->__r_.__value_.__l.__size_ = 0;
        a2->__r_.__value_.__r.__words[2] = 0;
        break;
    }
  }
}

void sub_80BBA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_80BCF4(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  sub_80807C(a1, (uint64_t)&v10);
  if (sub_800B24(a1))
  {
    BOOL v4 = &xmmword_25C5788;
    if (byte_25C579F < 0) {
      goto LABEL_8;
    }
LABEL_6:
    *(_OWORD *)__p = *v4;
    uint64_t v9 = *((void *)v4 + 2);
    goto LABEL_9;
  }
  if (*(unsigned char *)(a1 + 1859))
  {
    BOOL v4 = &xmmword_25C5800;
    if ((byte_25C5817 & 0x80000000) == 0) {
      goto LABEL_6;
    }
  }
  else
  {
    BOOL v4 = &xmmword_25C5848;
    if ((byte_25C585F & 0x80000000) == 0) {
      goto LABEL_6;
    }
  }
LABEL_8:
  sub_4200(__p, *(void **)v4, *((void *)v4 + 1));
LABEL_9:
  if (v9 >= 0) {
    BOOL v5 = __p;
  }
  else {
    BOOL v5 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v6 = HIBYTE(v9);
  }
  else {
    std::string::size_type v6 = (std::string::size_type)__p[1];
  }
  v7 = std::string::append(&v10, (const std::string::value_type *)v5, v6);
  *a2 = *v7;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if ((SHIBYTE(v9) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v10.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_19:
    operator delete(v10.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_19;
  }
}

void sub_80BE0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((a20 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a20 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_80BE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!sub_635D10(a2, (uint64_t)&xmmword_25C6670) || !sub_635D10(a3, (uint64_t)&xmmword_25C6670)) {
    goto LABEL_26;
  }
  BOOL v5 = (void *)sub_5231C(a2);
  std::string::size_type v6 = sub_619B40(v5, (uint64_t)&xmmword_25C6670);
  if (!v6) {
    goto LABEL_66;
  }
  sub_6F3178(&__s1, v6 + 5);
  v7 = (void *)sub_5231C(a3);
  uint64_t v8 = sub_619B40(v7, (uint64_t)&xmmword_25C6670);
  if (!v8) {
    sub_5AE8("unordered_map::at: key not found");
  }
  sub_6F3178(&__p, v8 + 5);
  unsigned __int8 v9 = v46;
  if ((v46 & 0x80u) == 0) {
    size_t v10 = v46;
  }
  else {
    size_t v10 = __n;
  }
  uint64_t v11 = v43;
  int v12 = (char)v43;
  if ((v43 & 0x80u) != 0) {
    uint64_t v11 = v42;
  }
  if (v10 != v11)
  {
    BOOL v22 = 0;
    if (((char)v43 & 0x80000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_24;
  }
  if ((v43 & 0x80u) == 0) {
    p_p = (unsigned __int8 *)&__p;
  }
  else {
    p_p = (unsigned __int8 *)__p;
  }
  if ((char)v46 < 0)
  {
    BOOL v22 = memcmp(__s1, p_p, __n) == 0;
    goto LABEL_54;
  }
  if (v46)
  {
    uint64_t v14 = v46 - 1;
    p_s1 = &__s1;
    do
    {
      int v17 = *(unsigned __int8 *)p_s1;
      p_s1 = (void **)((char *)p_s1 + 1);
      int v16 = v17;
      int v19 = *p_p++;
      int v18 = v19;
      BOOL v20 = v14-- != 0;
      char v21 = v20;
      BOOL v22 = v16 == v18;
    }
    while (v16 == v18 && (v21 & 1) != 0);
LABEL_54:
    if ((v12 & 0x80000000) == 0) {
      goto LABEL_55;
    }
LABEL_24:
    operator delete(__p);
    if ((v46 & 0x80) == 0) {
      goto LABEL_56;
    }
    goto LABEL_25;
  }
  BOOL v22 = 1;
  if ((char)v43 < 0) {
    goto LABEL_24;
  }
LABEL_55:
  if ((v9 & 0x80) == 0)
  {
LABEL_56:
    if (v22) {
      return 1;
    }
    goto LABEL_26;
  }
LABEL_25:
  operator delete(__s1);
  if (v22) {
    return 1;
  }
LABEL_26:
  if (!sub_635D10(a2, (uint64_t)&xmmword_25C66D0) || !sub_635D10(a3, (uint64_t)&xmmword_25C66D0)) {
    return 0;
  }
  v23 = (void *)sub_5231C(a2);
  unint64_t v24 = sub_619B40(v23, (uint64_t)&xmmword_25C66D0);
  if (!v24) {
LABEL_66:
  }
    sub_5AE8("unordered_map::at: key not found");
  sub_6F3178(&__s1, v24 + 5);
  uint64_t v25 = (void *)sub_5231C(a3);
  v26 = sub_619B40(v25, (uint64_t)&xmmword_25C66D0);
  if (!v26) {
    sub_5AE8("unordered_map::at: key not found");
  }
  sub_6F3178(&__p, v26 + 5);
  unsigned __int8 v27 = v46;
  if ((v46 & 0x80u) == 0) {
    size_t v28 = v46;
  }
  else {
    size_t v28 = __n;
  }
  uint64_t v29 = v43;
  int v30 = (char)v43;
  if ((v43 & 0x80u) != 0) {
    uint64_t v29 = v42;
  }
  if (v28 == v29)
  {
    if ((v43 & 0x80u) == 0) {
      uint64_t v31 = (unsigned __int8 *)&__p;
    }
    else {
      uint64_t v31 = (unsigned __int8 *)__p;
    }
    if ((char)v46 < 0)
    {
      BOOL v39 = memcmp(__s1, v31, __n) == 0;
    }
    else
    {
      if (!v46)
      {
        BOOL v39 = 1;
        if (((char)v43 & 0x80000000) == 0)
        {
LABEL_60:
          if ((v27 & 0x80) == 0) {
            return v39;
          }
LABEL_61:
          operator delete(__s1);
          return v39;
        }
        goto LABEL_51;
      }
      uint64_t v32 = v46 - 1;
      uint64_t v33 = &__s1;
      do
      {
        int v35 = *(unsigned __int8 *)v33;
        uint64_t v33 = (void **)((char *)v33 + 1);
        int v34 = v35;
        int v37 = *v31++;
        int v36 = v37;
        BOOL v20 = v32-- != 0;
        char v38 = v20;
        BOOL v39 = v34 == v36;
      }
      while (v34 == v36 && (v38 & 1) != 0);
    }
    if ((v30 & 0x80000000) == 0) {
      goto LABEL_60;
    }
  }
  else
  {
    BOOL v39 = 0;
    if (((char)v43 & 0x80000000) == 0) {
      goto LABEL_60;
    }
  }
LABEL_51:
  operator delete(__p);
  if ((v46 & 0x80) != 0) {
    goto LABEL_61;
  }
  return v39;
}

void sub_80C130(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_80C150(uint64_t a1, long long **a2)
{
  sub_635CD0(a2, (uint64_t)__p);
  sub_80138C(a1, (char *)__p);
  sub_63552C((uint64_t)a2);
  sub_6351E8((char **)a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_80C1C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_80C1E4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = 0;
  std::string::size_type v6 = 0;
  sub_6370D4(a2, a1 + 80, 8, &v5);
  BOOL v4 = v6;
  if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    if (*(unsigned char *)(a1 + 1860)) {
      goto LABEL_4;
    }
  }
  else if (*(unsigned char *)(a1 + 1860))
  {
LABEL_4:
    sub_80DC58(a1, a2, 0);
    return;
  }
  if (*(unsigned char *)(a1 + 1859)) {
    sub_80D830(a1, (uint64_t)a2, 0, 0);
  }
}

void sub_80C2B8(_Unwind_Exception *a1)
{
  sub_4F31D0(v1);
  _Unwind_Resume(a1);
}

void sub_80C2CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_80C2E0(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)(a1 + 1952);
  uint64_t v9 = *(void *)(a1 + 1960);
  int v10 = *(_DWORD *)(a1 + 2128) - 1;
  uint64_t v11 = (std::__shared_weak_count *)operator new(0x870uLL);
  v11->__shared_owners_ = 0;
  v11->__shared_weak_owners_ = 0;
  v11->__vftable = (std::__shared_weak_count_vtbl *)off_243AD38;
  sub_801F98((std::string::size_type)&v11[1], v8, v9, a2, a3, v10);
  v49 = &v11[1].__vftable;
  uint64_t v50 = v11;
  BOOL v12 = sub_800B24((uint64_t)&v11[1]);
  uint64_t v13 = 432;
  if (v12) {
    uint64_t v13 = 312;
  }
  uint64_t v14 = &xmmword_25C5800;
  if (v12) {
    uint64_t v14 = &xmmword_25C5788;
  }
  uint64_t v15 = &byte_25C5817;
  if (v12) {
    uint64_t v15 = &byte_25C579F;
  }
  if (*v15 < 0)
  {
    int v16 = *(void **)((char *)&xmmword_25C5650 + v13);
    uint64_t v17 = 432;
    if (v12) {
      uint64_t v17 = 312;
    }
    sub_4200(__p, v16, *(void *)((char *)&xmmword_25C5650 + v17 + 8));
  }
  else
  {
    *(_OWORD *)__p = *v14;
    uint64_t v41 = *((void *)v14 + 2);
  }
  sub_803A58((std::string::size_type)&v11[1], 1, (uint64_t)__p, (uint64_t)&v45);
  if (SHIBYTE(v41) < 0) {
    operator delete(__p[0]);
  }
  uint64_t v38 = 0;
  BOOL v39 = 0;
  sub_6370D4(__p, &v45, 1, &v38);
  int v18 = v39;
  if (v39 && !atomic_fetch_add(&v39->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    uint64_t v19 = (uint64_t)v49;
    if (*((unsigned char *)v49 + 1860)) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v19 = (uint64_t)v49;
    if (*((unsigned char *)v49 + 1860))
    {
LABEL_17:
      sub_80DC58(v19, (uint64_t *)__p, 0);
      goto LABEL_21;
    }
  }
  if (*(unsigned char *)(v19 + 1859)) {
    sub_80D830(v19, (uint64_t)__p, 0, 0);
  }
LABEL_21:
  BOOL v20 = (std::__shared_weak_count *)operator new(0x80uLL);
  v20->__shared_owners_ = 0;
  v20->__shared_weak_owners_ = 0;
  v20->__vftable = (std::__shared_weak_count_vtbl *)off_243A0E0;
  sub_59540C((uint64_t)&v51, (uint64_t)&v20[1], (uint64_t)__p);
  int v36 = &v20[1].__vftable;
  int v37 = v20;
  sub_6370D4(a4, a1 + 80, 9, &v36);
  char v21 = v37;
  if (v37 && !atomic_fetch_add(&v37->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
    std::__shared_weak_count::__release_weak(v21);
    if (*(unsigned char *)(a1 + 1860)) {
      goto LABEL_24;
    }
  }
  else if (*(unsigned char *)(a1 + 1860))
  {
LABEL_24:
    sub_80DC58(a1, a4, 0);
    goto LABEL_28;
  }
  if (*(unsigned char *)(a1 + 1859)) {
    sub_80D830(a1, (uint64_t)a4, 0, 0);
  }
LABEL_28:
  BOOL v22 = v44;
  if (v44 && !atomic_fetch_add(&v44->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
    std::__shared_weak_count::__release_weak(v22);
  }
  v23 = v43;
  if (v43)
  {
    do
    {
      unint64_t v24 = (void *)*v23;
      sub_4F4B48((uint64_t)(v23 + 2));
      operator delete(v23);
      v23 = v24;
    }
    while (v24);
  }
  uint64_t v25 = v42;
  uint64_t v42 = 0;
  if (v25) {
    operator delete(v25);
  }
  v26 = (void **)__p[0];
  if (__p[0])
  {
    unsigned __int8 v27 = (void **)__p[1];
    size_t v28 = __p[0];
    if (__p[1] != __p[0])
    {
      do
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      while (v27 != v26);
      size_t v28 = __p[0];
    }
    __p[1] = v26;
    operator delete(v28);
  }
  uint64_t v29 = v48;
  if (v48)
  {
    do
    {
      int v30 = (void *)*v29;
      sub_4F4B48((uint64_t)(v29 + 2));
      operator delete(v29);
      uint64_t v29 = v30;
    }
    while (v30);
  }
  uint64_t v31 = v47;
  v47 = 0;
  if (v31) {
    operator delete(v31);
  }
  uint64_t v32 = (void **)v45;
  if (v45)
  {
    uint64_t v33 = v46;
    int v34 = v45;
    if (v46 != v45)
    {
      do
      {
        if (*((char *)v33 - 1) < 0) {
          operator delete(*(v33 - 3));
        }
        v33 -= 3;
      }
      while (v33 != v32);
      int v34 = v45;
    }
    unsigned __int8 v46 = v32;
    operator delete(v34);
  }
  int v35 = v50;
  if (v50)
  {
    if (!atomic_fetch_add(&v50->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
}

void sub_80C73C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30)
{
  sub_4F31D0(v30);
  sub_4F31D0(&__p);
  sub_4D4880(&a30);
  sub_14A84(v31 - 104);
  _Unwind_Resume(a1);
}

void sub_80C7F4(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  sub_80807C(a1, (uint64_t)&v15);
  BOOL v4 = sub_800B24(a1);
  uint64_t v5 = 432;
  if (v4) {
    uint64_t v5 = 312;
  }
  std::string::size_type v6 = &xmmword_25C5800;
  if (v4) {
    std::string::size_type v6 = &xmmword_25C5788;
  }
  v7 = &byte_25C5817;
  if (v4) {
    v7 = &byte_25C579F;
  }
  if (*v7 < 0)
  {
    uint64_t v8 = *(void **)((char *)&xmmword_25C5650 + v5);
    uint64_t v9 = 432;
    if (v4) {
      uint64_t v9 = 312;
    }
    sub_4200(__p, v8, *(void *)((char *)&xmmword_25C5650 + v9 + 8));
  }
  else
  {
    *(_OWORD *)__p = *v6;
    uint64_t v14 = *((void *)v6 + 2);
  }
  if (v14 >= 0) {
    int v10 = __p;
  }
  else {
    int v10 = (void **)__p[0];
  }
  if (v14 >= 0) {
    std::string::size_type v11 = HIBYTE(v14);
  }
  else {
    std::string::size_type v11 = (std::string::size_type)__p[1];
  }
  BOOL v12 = std::string::append(&v15, (const std::string::value_type *)v10, v11);
  *a2 = *v12;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  if ((SHIBYTE(v14) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_22:
    operator delete(v15.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_22;
  }
}

void sub_80C918(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((a20 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a20 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_80C964(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  long long v12 = 0uLL;
  uint64_t v13 = 0;
  sub_80CA74(a4, (uint64_t)&v6);
  long long v12 = v6;
  uint64_t v13 = v7;
  *(_OWORD *)__p = v8;
  uint64_t v11 = v9;
  sub_635B18(a2, (uint64_t)&v12, (long long *)__p, a3);
  sub_635C08(a2, (long long *)&qword_25C6568, a3, 1);
  if ((SHIBYTE(v11) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v13) & 0x80000000) == 0) {
      return;
    }
LABEL_5:
    operator delete((void *)v12);
    return;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v13) < 0) {
    goto LABEL_5;
  }
}

void sub_80CA28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if ((*(char *)(v20 - 25) & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(*(void **)(v20 - 48));
  _Unwind_Resume(exception_object);
}

__n128 sub_80CA74@<Q0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  if (a1[1] != -1)
  {
    if (byte_25C5427 < 0)
    {
      sub_4200((unsigned char *)a2, (void *)xmmword_25C5410, *((unint64_t *)&xmmword_25C5410 + 1));
      uint64_t v3 = a2 + 24;
      if ((byte_25C67BF & 0x80000000) == 0) {
        goto LABEL_4;
      }
    }
    else
    {
      *(_OWORD *)a2 = xmmword_25C5410;
      *(void *)(a2 + 16) = unk_25C5420;
      uint64_t v3 = a2 + 24;
      if ((byte_25C67BF & 0x80000000) == 0)
      {
LABEL_4:
        BOOL v4 = &xmmword_25C67A8;
LABEL_31:
        __n128 result = (__n128)*v4;
        *(_OWORD *)uint64_t v3 = *v4;
        *(void *)(v3 + 16) = *((void *)v4 + 2);
        return result;
      }
    }
    sub_4200((unsigned char *)v3, (void *)xmmword_25C67A8, *((unint64_t *)&xmmword_25C67A8 + 1));
    return result;
  }
  if (a1[2] != -1)
  {
    if (byte_25C543F < 0)
    {
      sub_4200((unsigned char *)a2, (void *)xmmword_25C5428, *((unint64_t *)&xmmword_25C5428 + 1));
      uint64_t v3 = a2 + 24;
      if ((byte_25C67D7 & 0x80000000) == 0) {
        goto LABEL_8;
      }
    }
    else
    {
      *(_OWORD *)a2 = xmmword_25C5428;
      *(void *)(a2 + 16) = unk_25C5438;
      uint64_t v3 = a2 + 24;
      if ((byte_25C67D7 & 0x80000000) == 0)
      {
LABEL_8:
        BOOL v4 = &xmmword_25C67C0;
        goto LABEL_31;
      }
    }
    sub_4200((unsigned char *)v3, (void *)xmmword_25C67C0, *((unint64_t *)&xmmword_25C67C0 + 1));
    return result;
  }
  if (*a1 != -1)
  {
    if (byte_25C55D7 < 0)
    {
      sub_4200((unsigned char *)a2, (void *)xmmword_25C55C0, *((unint64_t *)&xmmword_25C55C0 + 1));
      uint64_t v3 = a2 + 24;
      if ((byte_25C67EF & 0x80000000) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      *(_OWORD *)a2 = xmmword_25C55C0;
      *(void *)(a2 + 16) = unk_25C55D0;
      uint64_t v3 = a2 + 24;
      if ((byte_25C67EF & 0x80000000) == 0)
      {
LABEL_14:
        BOOL v4 = &xmmword_25C67D8;
        goto LABEL_31;
      }
    }
    sub_4200((unsigned char *)v3, (void *)xmmword_25C67D8, *((unint64_t *)&xmmword_25C67D8 + 1));
    return result;
  }
  if (a1[6] != -1)
  {
    if (byte_25C55EF < 0)
    {
      sub_4200((unsigned char *)a2, (void *)xmmword_25C55D8, *((unint64_t *)&xmmword_25C55D8 + 1));
    }
    else
    {
      *(_OWORD *)a2 = xmmword_25C55D8;
      *(void *)(a2 + 16) = unk_25C55E8;
    }
    uint64_t v3 = a2 + 24;
    if (byte_25C6807 < 0)
    {
      sub_4200((unsigned char *)v3, (void *)xmmword_25C67F0, *((unint64_t *)&xmmword_25C67F0 + 1));
      return result;
    }
    BOOL v4 = &xmmword_25C67F0;
    goto LABEL_31;
  }
  if (byte_25C5457 < 0)
  {
    sub_4200((unsigned char *)a2, (void *)xmmword_25C5440, *((unint64_t *)&xmmword_25C5440 + 1));
  }
  else
  {
    *(_OWORD *)a2 = xmmword_25C5440;
    *(void *)(a2 + 16) = unk_25C5450;
  }
  uint64_t v3 = a2 + 24;
  if ((byte_25C6687 & 0x80000000) == 0)
  {
    BOOL v4 = &xmmword_25C6670;
    goto LABEL_31;
  }
  sub_4200((unsigned char *)v3, (void *)xmmword_25C6670, *((unint64_t *)&xmmword_25C6670 + 1));
  return result;
}

void sub_80CD18(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_80CD44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 936);
  uint64_t v3 = *(void *)(a1 + 944);
  if (v2 != v3)
  {
    if (0x86BCA1AF286BCA1BLL * ((v3 - v2) >> 3) < 2)
    {
      if (*(unsigned char *)(a1 + 1854) && *(unsigned char *)(a1 + 1856))
      {
        uint64_t v7 = a1 + 152;
        sub_635B18(a2, (uint64_t)&qword_25C5458, &xmmword_25C66D0, a1 + 152);
        sub_635C08(a2, (long long *)&qword_25C6568, v7, 1);
      }
      else
      {
        sub_80C964(a1, a2, a1 + 152, (void *)(a1 + 1864));
      }
    }
    else
    {
      sub_635B18(a2, (uint64_t)&qword_25C5488, (long long *)&dword_25C6688, v2);
      sub_635C08(a2, (long long *)&qword_25C6568, v2, 1);
      uint64_t v6 = *(void *)(a1 + 936) + 152;
      sub_635B18(a2, (uint64_t)&qword_25C54A0, &xmmword_25C66A0, v6);
      sub_635C08(a2, (long long *)&qword_25C6598, v6, 1);
      sub_635988(a2, &xmmword_25C6670, a1 + 152);
    }
  }
}

void sub_80CEE8(uint64_t a1, std::string **a2)
{
  if (*(char *)(a1 + 1007) < 0)
  {
    if (*(void *)(a1 + 992)) {
      goto LABEL_3;
    }
LABEL_7:
    sub_63581C(a2, (const std::string::value_type *)&qword_25C4FC0);
    return;
  }
  if (!*(unsigned char *)(a1 + 1007)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v2 = 0xFFFFFFFFLL;
  *(_OWORD *)uint64_t v3 = 0u;
  *(_OWORD *)__p = 0u;
  long long v5 = 0u;
  sub_635A2C((std::string *)a2, (const std::string::value_type *)&qword_25C4FD8, &xmmword_25C6C70, a1 + 984, (const std::string *)(a1 + 984), (uint64_t)&v2);
  if ((SHIBYTE(v5) & 0x80000000) == 0)
  {
    if ((SHIBYTE(__p[0]) & 0x80000000) == 0) {
      return;
    }
LABEL_11:
    operator delete(v3[0]);
    return;
  }
  operator delete(__p[1]);
  if (SHIBYTE(__p[0]) < 0) {
    goto LABEL_11;
  }
}

void sub_80CFC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_4AA598((uint64_t)va);
  _Unwind_Resume(a1);
}

std::string *sub_80CFDC(std::string *result, std::string *a2)
{
  if (*(unsigned char *)(result[81].__r_.__value_.__l.__size_ + 1972))
  {
    uint64_t v3 = result;
    __n128 result = (std::string *)sub_6F2FD8((uint64_t)&result[6].__r_.__value_.__l.__size_);
    if ((result & 1) == 0)
    {
      __n128 result = (std::string *)sub_6F2FD8((uint64_t)&v3[12].__r_.__value_.__r.__words[2]);
      if ((result & 1) == 0)
      {
        __n128 result = (std::string *)sub_6F2FD8((uint64_t)&v3[19]);
        if ((result & 1) == 0)
        {
          __n128 result = (std::string *)sub_6F2FD8((uint64_t)&v3[25].__r_.__value_.__l.__size_);
          if ((result & 1) == 0
            && v3[38].__r_.__value_.__r.__words[0] == v3[38].__r_.__value_.__l.__size_
            && v3[39].__r_.__value_.__r.__words[0] == v3[39].__r_.__value_.__l.__size_
            && v3[40].__r_.__value_.__r.__words[0] == v3[40].__r_.__value_.__l.__size_
            && v3[77].__r_.__value_.__r.__words[2] == -1
            && v3[78].__r_.__value_.__r.__words[0] == -1
            && v3[78].__r_.__value_.__l.__size_ == -1
            && v3[78].__r_.__value_.__r.__words[2] == -1
            && v3[79].__r_.__value_.__r.__words[0] == -1
            && v3[79].__r_.__value_.__l.__size_ == -1
            && v3[79].__r_.__value_.__r.__words[2] == -1)
          {
            int v4 = v3[77].__r_.__value_.__s.__data_[7];
            if (v4 == 3)
            {
              if (v3[77].__r_.__value_.__s.__data_[13]) {
                return result;
              }
              __n128 result = sub_80D110(v3, a2);
              int v4 = v3[77].__r_.__value_.__s.__data_[7];
            }
            if (v4 == 2)
            {
              return (std::string *)sub_80D224((uint64_t)v3, a2);
            }
          }
        }
      }
    }
  }
  return result;
}

std::string *sub_80D110(std::string *result, std::string *this)
{
  switch(HIDWORD(result[81].__r_.__value_.__r.__words[0]))
  {
    case 1:
      uint64_t v2 = &qword_25C7F80;
      goto LABEL_14;
    case 2:
      uint64_t v2 = &qword_25C7F08;
      goto LABEL_14;
    case 3:
      uint64_t v2 = &qword_25C7F20;
      goto LABEL_14;
    case 4:
      uint64_t v2 = &qword_25C7F98;
      goto LABEL_14;
    case 5:
      uint64_t v2 = &qword_25C7FE0;
      goto LABEL_14;
    case 6:
      uint64_t v2 = &qword_25C7FB0;
      goto LABEL_14;
    case 7:
      uint64_t v2 = &qword_25C7FC8;
      goto LABEL_14;
    case 8:
      uint64_t v2 = &qword_25C7FF8;
      goto LABEL_14;
    case 9:
      uint64_t v2 = (uint64_t *)&xmmword_25C5620;
      goto LABEL_14;
    case 0xA:
      uint64_t v2 = (uint64_t *)&xmmword_25C5638;
      goto LABEL_14;
    case 0xB:
      uint64_t v2 = &qword_25C7F38;
      goto LABEL_14;
    case 0xC:
      uint64_t v2 = &qword_25C7F68;
LABEL_14:
      std::string::size_type v3 = v2[1];
      if (*((char *)v2 + 23) >= 0)
      {
        std::string::size_type v4 = *((unsigned __int8 *)v2 + 23);
      }
      else
      {
        uint64_t v2 = (uint64_t *)*v2;
        std::string::size_type v4 = v3;
      }
      __n128 result = std::string::append(this, (const std::string::value_type *)v2, v4);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_80D224(uint64_t result, std::string *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 1936);
  int64_t size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0) {
    uint64_t v6 = this;
  }
  else {
    uint64_t v6 = (std::string *)this->__r_.__value_.__r.__words[0];
  }
  if (byte_25C5037 >= 0) {
    uint64_t v7 = &qword_25C5020;
  }
  else {
    uint64_t v7 = (uint64_t *)qword_25C5020;
  }
  if (byte_25C5037 >= 0) {
    int64_t v8 = byte_25C5037;
  }
  else {
    int64_t v8 = *(void *)&byte_25C5028;
  }
  if (v8)
  {
    if ((size & 0x80u) != 0) {
      int64_t size = this->__r_.__value_.__l.__size_;
    }
    if (size >= v8)
    {
      uint64_t v9 = (char *)v6 + size;
      int v10 = *(char *)v7;
      __n128 result = (uint64_t)v6;
      do
      {
        int64_t v11 = size - v8;
        if (v11 == -1) {
          break;
        }
        __n128 result = (uint64_t)memchr((void *)result, v10, v11 + 1);
        if (!result) {
          break;
        }
        uint64_t v12 = result;
        __n128 result = memcmp((const void *)result, v7, v8);
        if (!result)
        {
          if ((char *)v12 == v9 || v12 - (void)v6 == -1) {
            return result;
          }
          goto LABEL_22;
        }
        __n128 result = v12 + 1;
        int64_t size = (int64_t)&v9[-v12 - 1];
      }
      while (size >= v8);
    }
  }
  else
  {
LABEL_22:
    if (!*(unsigned char *)(v3 + 1858))
    {
      switch(v4)
      {
        case 1:
          uint64_t v13 = &qword_25C7F98;
          goto LABEL_31;
        case 2:
          uint64_t v13 = &qword_25C7FE0;
          goto LABEL_31;
        case 3:
          uint64_t v13 = &qword_25C7FB0;
          goto LABEL_31;
        case 4:
          uint64_t v13 = &qword_25C7FC8;
          goto LABEL_31;
        case 5:
          uint64_t v13 = &qword_25C7FF8;
          goto LABEL_31;
        case 6:
          uint64_t v13 = &qword_25C8010;
LABEL_31:
          int v14 = *((char *)v13 + 23);
          if (v14 >= 0) {
            std::string v15 = (const std::string::value_type *)v13;
          }
          else {
            std::string v15 = (const std::string::value_type *)*v13;
          }
          if (v14 >= 0) {
            std::string::size_type v16 = *((unsigned __int8 *)v13 + 23);
          }
          else {
            std::string::size_type v16 = v13[1];
          }
          __n128 result = (uint64_t)std::string::append(this, v15, v16);
          break;
        default:
          return result;
      }
    }
  }
  return result;
}

uint64_t sub_80D3F4(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)(a1 + 1848);
  BOOL v3 = 1;
  if (v2 > 0x1E || ((1 << v2) & 0x60000800) == 0)
  {
    BOOL v3 = sub_635D10(a1 + 8, (uint64_t)&xmmword_25C6748);
    unsigned int v2 = *(_DWORD *)(a1 + 1848);
  }
  BOOL v5 = v2 - 86 < 2 || v2 - 41 < 0x13;
  int v6 = v2 - 6 < 2 || v5;
  if (v2 != 24 && (v2 & 0xFFFFFFFE) != 22 && v2 - 91 >= 3) {
    return v3 | v6;
  }
  else {
    return 1;
  }
}

long long *sub_80D48C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 1960);
  if (*(unsigned char *)(v2 + 1524))
  {
    unsigned int v3 = *(_DWORD *)(a1 + 1688);
  }
  else
  {
    int v4 = *(_DWORD *)(a1 + 1688);
    unsigned int v5 = v4 + 1;
    unsigned int v3 = v4 - 1;
    if (v5 < 2) {
      unsigned int v3 = -1;
    }
  }
  int v6 = sub_800320(v2, v3);
  if (!sub_8005D4(*(void *)(a1 + 1960), *(_DWORD *)(a1 + 1688)))
  {
    if ((v6 & 0x10000) != 0) {
      return &xmmword_25C52A8;
    }
    if ((v6 & 1) == 0) {
      goto LABEL_11;
    }
    return &xmmword_25C5290;
  }
  if (v6) {
    return &xmmword_25C5290;
  }
  if ((v6 & 0x10000) != 0) {
    return &xmmword_25C52A8;
  }
LABEL_11:
  if (atomic_load_explicit((atomic_uchar *volatile)&qword_24F71D0, memory_order_acquire)) {
    return (long long *)&qword_24F71B8;
  }
  if (__cxa_guard_acquire(&qword_24F71D0))
  {
    qword_24F71B8 = 0;
    unk_24F71C0 = 0;
    qword_24F71C8 = 0;
    __cxa_guard_release(&qword_24F71D0);
  }
  return (long long *)&qword_24F71B8;
}

void sub_80D5B0(uint64_t a1@<X0>, void *a2@<X8>)
{
  int v4 = *(_DWORD *)(a1 + 1848);
  uint64_t v5 = 144;
  if (v4 == 84) {
    uint64_t v5 = 150;
  }
  int v6 = (uint64_t *)&xmmword_25C4B10;
  if (v4 != 84) {
    int v6 = &qword_25C4AE0;
  }
  BOOL v7 = v4 == 83;
  if (v4 == 83) {
    uint64_t v5 = 147;
  }
  int64_t v8 = &xmmword_25C4AF8;
  if (!v7) {
    int64_t v8 = (long long *)v6;
  }
  if (*((char *)v8 + 23) < 0)
  {
    sub_4200(__dst, (void *)qword_25C4660[v5], *((void *)v8 + 1));
    LODWORD(v8) = *(char *)(a1 + 1007);
    if ((v8 & 0x80000000) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    *(_OWORD *)__dst = *v8;
    uint64_t v27 = *((void *)v8 + 2);
    LODWORD(v8) = *(char *)(a1 + 1007);
    if ((v8 & 0x80000000) == 0)
    {
LABEL_11:
      int64_t v8 = (long long *)v8;
      goto LABEL_14;
    }
  }
  int64_t v8 = *(long long **)(a1 + 992);
LABEL_14:
  uint64_t v9 = 303;
  if (!v8) {
    uint64_t v9 = 300;
  }
  int v10 = &qword_25C4FD8;
  if (!v8) {
    int v10 = &qword_25C4FC0;
  }
  int64_t v11 = (char *)&qword_25C4FE8 + 7;
  if (!v8) {
    int64_t v11 = &byte_25C4FD7;
  }
  if (*v11 < 0)
  {
    if (v8) {
      uint64_t v12 = (unint64_t *)&unk_25C4FE0;
    }
    else {
      uint64_t v12 = (unint64_t *)&unk_25C4FC8;
    }
    sub_4200(__p, (void *)qword_25C4660[v9], *v12);
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)v10;
    uint64_t v25 = v10[2];
  }
  int v13 = SHIBYTE(v27);
  if (v27 >= 0) {
    size_t v14 = HIBYTE(v27);
  }
  else {
    size_t v14 = (size_t)__dst[1];
  }
  int v15 = SHIBYTE(v25);
  if (v25 >= 0) {
    size_t v16 = HIBYTE(v25);
  }
  else {
    size_t v16 = (size_t)__p[1];
  }
  unint64_t v17 = v16 + v14;
  if (v16 + v14 >= 0x7FFFFFFFFFFFFFF8) {
    sub_188D690();
  }
  if (v17 <= 0x16)
  {
    a2[1] = 0;
    a2[2] = 0;
    *a2 = 0;
    *((unsigned char *)a2 + 23) = v17;
    if (!v14) {
      goto LABEL_39;
    }
    goto LABEL_35;
  }
  uint64_t v21 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v17 | 7) != 0x17) {
    uint64_t v21 = v17 | 7;
  }
  uint64_t v22 = v21 + 1;
  v23 = operator new(v21 + 1);
  a2[1] = v17;
  a2[2] = v22 | 0x8000000000000000;
  *a2 = v23;
  a2 = v23;
  if (v14)
  {
LABEL_35:
    if (v13 >= 0) {
      int v18 = __dst;
    }
    else {
      int v18 = (void **)__dst[0];
    }
    memmove(a2, v18, v14);
  }
LABEL_39:
  uint64_t v19 = (char *)a2 + v14;
  if (v16)
  {
    if (v15 >= 0) {
      uint64_t v20 = __p;
    }
    else {
      uint64_t v20 = (void **)__p[0];
    }
    memmove(v19, v20, v16);
  }
  v19[v16] = 0;
  if ((v15 & 0x80000000) == 0)
  {
    if ((v13 & 0x80) == 0) {
      return;
    }
LABEL_52:
    operator delete(__dst[0]);
    return;
  }
  operator delete(__p[0]);
  if (v27 < 0) {
    goto LABEL_52;
  }
}

void sub_80D7E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if ((a21 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_80D830(uint64_t a1, uint64_t a2, int a3, int a4)
{
  if (*(unsigned char *)(a1 + 1859))
  {
    if (*(_DWORD *)(a1 + 1848) == 4)
    {
      BOOL v7 = &xmmword_25C5BA8;
      if ((byte_25C5BBF & 0x80000000) == 0)
      {
LABEL_4:
        long long __dst = *v7;
        uint64_t v49 = *((void *)v7 + 2);
        goto LABEL_9;
      }
    }
    else
    {
      BOOL v9 = sub_6F2FD8(a1 + 760);
      uint64_t v10 = 1344;
      if (!v9 | a4) {
        uint64_t v10 = 1320;
      }
      BOOL v7 = (long long *)((char *)&xmmword_25C5650 + v10);
      if ((*((char *)v7 + 23) & 0x80000000) == 0) {
        goto LABEL_4;
      }
    }
    sub_4200(&__dst, *(void **)v7, *((void *)v7 + 1));
LABEL_9:
    if (a3) {
      uint64_t v11 = 3;
    }
    else {
      uint64_t v11 = 10;
    }
    sub_6352AC((uint64_t)&v38, (uint64_t)&__dst);
    uint64_t v12 = (std::__shared_weak_count *)operator new(0x80uLL);
    v12->__shared_owners_ = 0;
    v12->__shared_weak_owners_ = 0;
    v12->__vftable = (std::__shared_weak_count_vtbl *)off_243A0E0;
    sub_59540C((uint64_t)&v50, (uint64_t)&v12[1], a2);
    int v36 = &v12[1].__vftable;
    int v37 = v12;
    sub_6370D4(&v42, &v38, v11, &v36);
    sub_63DAA4(a2, (uint64_t)&v42);
    int v13 = v47;
    if (v47 && !atomic_fetch_add(&v47->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
    size_t v14 = v46;
    if (v46)
    {
      do
      {
        int v15 = (void *)*v14;
        sub_4F4B48((uint64_t)(v14 + 2));
        operator delete(v14);
        size_t v14 = v15;
      }
      while (v15);
    }
    size_t v16 = __p;
    __p = 0;
    if (v16) {
      operator delete(v16);
    }
    unint64_t v17 = (void **)v42;
    if (v42)
    {
      int v18 = v43;
      uint64_t v19 = v42;
      if (v43 != v42)
      {
        do
        {
          if (*((char *)v18 - 1) < 0) {
            operator delete(*(v18 - 3));
          }
          v18 -= 3;
        }
        while (v18 != v17);
        uint64_t v19 = v42;
      }
      unsigned __int8 v43 = v17;
      operator delete(v19);
    }
    uint64_t v20 = v37;
    if (v37 && !atomic_fetch_add(&v37->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
    uint64_t v21 = v41;
    if (v41)
    {
      do
      {
        uint64_t v22 = (void *)*v21;
        sub_4F4B48((uint64_t)(v21 + 2));
        operator delete(v21);
        uint64_t v21 = v22;
      }
      while (v22);
    }
    v23 = v40;
    v40 = 0;
    if (v23) {
      operator delete(v23);
    }
    unint64_t v24 = (void **)v38;
    if (v38)
    {
      uint64_t v25 = v39;
      v26 = v38;
      if (v39 != v38)
      {
        do
        {
          if (*((char *)v25 - 1) < 0) {
            operator delete(*(v25 - 3));
          }
          v25 -= 3;
        }
        while (v25 != v24);
        v26 = v38;
      }
      BOOL v39 = v24;
      operator delete(v26);
    }
    uint64_t v27 = HIBYTE(v49);
    char v28 = HIBYTE(v49);
    if (v49 >= 0) {
      uint64_t v29 = HIBYTE(v49);
    }
    else {
      uint64_t v29 = *((void *)&__dst + 1);
    }
    uint64_t v30 = *((void *)&xmmword_25C5B90 + 1);
    if (byte_25C5BA7 >= 0) {
      uint64_t v30 = byte_25C5BA7;
    }
    if (v29 != v30) {
      goto LABEL_63;
    }
    if (byte_25C5BA7 >= 0) {
      uint64_t v31 = &xmmword_25C5B90;
    }
    else {
      uint64_t v31 = (long long *)xmmword_25C5B90;
    }
    if (SHIBYTE(v49) < 0)
    {
      if (memcmp((const void *)__dst, v31, *((size_t *)&__dst + 1))) {
        goto LABEL_65;
      }
    }
    else if (HIBYTE(v49))
    {
      p_dst = &__dst;
      while (*(unsigned __int8 *)p_dst == *(unsigned __int8 *)v31)
      {
        p_dst = (long long *)((char *)p_dst + 1);
        uint64_t v31 = (long long *)((char *)v31 + 1);
        if (!--v27) {
          goto LABEL_58;
        }
      }
LABEL_63:
      if ((v28 & 0x80) == 0) {
        return;
      }
LABEL_65:
      operator delete((void *)__dst);
      return;
    }
LABEL_58:
    sub_8050C8(a1 + 760, (uint64_t)&v42);
    sub_637314(a2, (uint64_t)&v42);
    uint64_t v33 = v44;
    if (v44)
    {
      do
      {
        int v34 = (void *)*v33;
        sub_4F4B48((uint64_t)(v33 + 2));
        operator delete(v33);
        uint64_t v33 = v34;
      }
      while (v34);
    }
    int v35 = v42;
    uint64_t v42 = 0;
    if (v35) {
      operator delete(v35);
    }
    char v28 = HIBYTE(v49);
    goto LABEL_63;
  }
}

void sub_80DBF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_4DD068((uint64_t)va);
  if (*(char *)(v12 - 57) < 0) {
    operator delete(*(void **)(v12 - 80));
  }
  _Unwind_Resume(a1);
}

void sub_80DC58(uint64_t a1, uint64_t *a2, int a3)
{
  if (*(unsigned char *)(a1 + 1860))
  {
    sub_637D5C(a2, (uint64_t)__p);
    uint64_t v5 = (void **)__p[0];
    int v6 = (char *)__p[1];
    if (__p[0] != __p[1])
    {
      for (i = (char *)__p[0]; i != v6; i += 24)
      {
        if (i[23] < 0)
        {
          BOOL v9 = *(char **)i;
          uint64_t v8 = *((void *)i + 1);
          if (v8 >= 5)
          {
LABEL_9:
            uint64_t v10 = &v9[v8];
            uint64_t v11 = v9;
            do
            {
              uint64_t v12 = (char *)memchr(v11, 67, v8 - 4);
              if (!v12) {
                break;
              }
              if (*(_DWORD *)v12 == 1936683587 && v12[4] == 115)
              {
                if (v12 == v10 || v12 - v9 == -1) {
                  break;
                }
                if (a3) {
                  int v14 = 2;
                }
                else {
                  int v14 = sub_637D84((uint64_t)a2);
                }
                sub_63733C((uint64_t)a2, v14);
                int v15 = 0;
                uint64_t v5 = (void **)__p[0];
                if (__p[0]) {
                  goto LABEL_22;
                }
                goto LABEL_29;
              }
              uint64_t v11 = v12 + 1;
              uint64_t v8 = v10 - (unsigned char *)v11;
            }
            while (v10 - (unsigned char *)v11 >= 5);
          }
        }
        else
        {
          uint64_t v8 = i[23];
          BOOL v9 = i;
          if ((unint64_t)v8 >= 5) {
            goto LABEL_9;
          }
        }
      }
    }
    int v15 = 1;
    if (v5)
    {
LABEL_22:
      size_t v16 = (void **)__p[1];
      unint64_t v17 = v5;
      if (__p[1] != v5)
      {
        do
        {
          if (*((char *)v16 - 1) < 0) {
            operator delete(*(v16 - 3));
          }
          v16 -= 3;
        }
        while (v16 != v5);
        unint64_t v17 = (void **)__p[0];
      }
      __p[1] = v5;
      operator delete(v17);
    }
LABEL_29:
    if (v15)
    {
      uint64_t v18 = 1200;
      if (a3) {
        uint64_t v18 = 1224;
      }
      uint64_t v19 = &qword_25C5B18;
      if (!a3) {
        uint64_t v19 = &qword_25C5B00;
      }
      uint64_t v20 = (char *)&unk_25C5B17;
      if (a3) {
        uint64_t v20 = (char *)&xmmword_25C5B20 + 15;
      }
      if (*v20 < 0)
      {
        uint64_t v21 = *(void **)((char *)&xmmword_25C5650 + v18);
        uint64_t v22 = 1200;
        if (a3) {
          uint64_t v22 = 1224;
        }
        sub_4200(__dst, v21, *(void *)((char *)&xmmword_25C5650 + v22 + 8));
      }
      else
      {
        *(_OWORD *)long long __dst = *(_OWORD *)v19;
        uint64_t v37 = v19[2];
      }
      if (SHIBYTE(v37) < 0)
      {
        sub_4200(__p, __dst[0], (unint64_t)__dst[1]);
      }
      else
      {
        *(_OWORD *)__p = *(_OWORD *)__dst;
        uint64_t v40 = v37;
      }
      sub_28C774(&v34, (uint64_t)__p, 1uLL);
      if (SHIBYTE(v40) < 0) {
        operator delete(__p[0]);
      }
      v23 = (std::__shared_weak_count *)operator new(0x80uLL);
      v23->__shared_owners_ = 0;
      v23->__shared_weak_owners_ = 0;
      v23->__vftable = (std::__shared_weak_count_vtbl *)off_243A0E0;
      sub_59540C((uint64_t)&v38, (uint64_t)&v23[1], (uint64_t)a2);
      sub_637578((int)__p);
      sub_63DAA4((uint64_t)a2, (uint64_t)__p);
      unint64_t v24 = v43;
      if (v43 && !atomic_fetch_add(&v43->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
        std::__shared_weak_count::__release_weak(v24);
      }
      uint64_t v25 = v42;
      if (v42)
      {
        do
        {
          v26 = (void *)*v25;
          sub_4F4B48((uint64_t)(v25 + 2));
          operator delete(v25);
          uint64_t v25 = v26;
        }
        while (v26);
      }
      uint64_t v27 = v41;
      uint64_t v41 = 0;
      if (v27) {
        operator delete(v27);
      }
      char v28 = (void **)__p[0];
      if (__p[0])
      {
        uint64_t v29 = (void **)__p[1];
        uint64_t v30 = __p[0];
        if (__p[1] != __p[0])
        {
          do
          {
            if (*((char *)v29 - 1) < 0) {
              operator delete(*(v29 - 3));
            }
            v29 -= 3;
          }
          while (v29 != v28);
          uint64_t v30 = __p[0];
        }
        __p[1] = v28;
        operator delete(v30);
      }
      if (v23 && !atomic_fetch_add(&v23->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
      uint64_t v31 = (void **)v34;
      if (v34)
      {
        uint64_t v32 = v35;
        uint64_t v33 = v34;
        if (v35 != v34)
        {
          do
          {
            if (*((char *)v32 - 1) < 0) {
              operator delete(*(v32 - 3));
            }
            v32 -= 3;
          }
          while (v32 != v31);
          uint64_t v33 = v34;
        }
        int v35 = v31;
        operator delete(v33);
      }
      if (SHIBYTE(v37) < 0) {
        operator delete(__dst[0]);
      }
    }
  }
}

void sub_80E0E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  sub_1A668((void **)va);
  _Unwind_Resume(a1);
}

void sub_80E0F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a24 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

std::string::size_type sub_80E174(std::string::size_type a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6)
{
  *(void *)a1 = off_2439E58;
  *(_OWORD *)(a1 + 8) = 0u;
  uint64_t v89 = a1 + 8;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 1065353216;
  *(unsigned char *)(a1 + 72) = 1;
  *(_OWORD *)(a1 + 80) = 0u;
  v88 = (void **)(a1 + 80);
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(void *)(a1 + 128) = 0;
  *(_DWORD *)(a1 + 136) = 1065353216;
  *(unsigned char *)(a1 + 144) = 1;
  sub_6F30A4(a1 + 152);
  sub_6F30A4(a1 + 304);
  sub_6F30A4(a1 + 456);
  sub_6F30A4(a1 + 608);
  sub_6F30A4(a1 + 760);
  *(_OWORD *)(a1 + 976) = 0u;
  *(_OWORD *)(a1 + 992) = 0u;
  *(_OWORD *)(a1 + 944) = 0u;
  *(_OWORD *)(a1 + 960) = 0u;
  *(_OWORD *)(a1 + 912) = 0u;
  *(_OWORD *)(a1 + 928) = 0u;
  *(void *)(a1 + 1008) = -1;
  *(_DWORD *)(a1 + 1016) = 0x7FFFFFFF;
  *(void *)(a1 + 1024) = -1;
  *(void *)(a1 + 1032) = -1;
  *(void *)(a1 + 1040) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 1048) = 0;
  *(_DWORD *)(a1 + 1056) = -1935635296;
  *(void *)(a1 + 1064) = 0;
  *(_DWORD *)(a1 + 1071) = 0;
  *(void *)(a1 + 1088) = 0;
  *(void *)(a1 + 1080) = 0;
  *(_DWORD *)(a1 + 1104) = 0;
  *(void *)(a1 + 1096) = 0;
  *(unsigned char *)(a1 + 1108) = 100;
  *(void *)(a1 + 1112) = 0;
  *(_DWORD *)(a1 + 1120) = 0;
  *(_OWORD *)(a1 + 1128) = 0u;
  *(_OWORD *)(a1 + 1144) = 0u;
  *(_OWORD *)(a1 + 1160) = 0u;
  *(_OWORD *)(a1 + 1176) = 0u;
  *(_OWORD *)(a1 + 1192) = 0u;
  *(_OWORD *)(a1 + 1208) = 0u;
  *(unsigned char *)(a1 + 1224) = 0;
  *(_OWORD *)(a1 + 1232) = 0u;
  *(_OWORD *)(a1 + 1248) = 0u;
  *(_OWORD *)(a1 + 1264) = 0u;
  *(_OWORD *)(a1 + 1280) = 0u;
  *(_OWORD *)(a1 + 1296) = 0u;
  *(void *)(a1 + 1312) = 0;
  *(_OWORD *)(a1 + 1320) = xmmword_20B8E30;
  *(void *)(a1 + 1336) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 1352) = 0;
  *(void *)(a1 + 1344) = 0;
  *(_DWORD *)(a1 + 1368) = 0;
  *(void *)(a1 + 1360) = 0;
  *(unsigned char *)(a1 + 1376) = 0;
  *(_OWORD *)(a1 + 1380) = 0u;
  *(_OWORD *)(a1 + 1396) = 0u;
  sub_5F3B34(a1 + 1416);
  *(_DWORD *)(a1 + 1608) = -1;
  *(_DWORD *)(a1 + 1616) = -1;
  *(_DWORD *)(a1 + 1619) = -1;
  *(void *)(a1 + 1623) = 0;
  *(void *)(a1 + 1639) = 0;
  *(void *)(a1 + 1631) = 0;
  *(_WORD *)(a1 + 1647) = 0;
  *(void *)(a1 + 1656) = 0;
  *(void *)(a1 + 1672) = 0;
  *(void *)(a1 + 1664) = 0;
  *(unsigned char *)(a1 + 1680) = 0;
  *(_DWORD *)(a1 + 1688) = -1;
  *(void *)(a1 + 1696) = 0;
  *(void *)(a1 + 1702) = 0;
  *(_DWORD *)(a1 + 1712) = 0x7FFFFFFF;
  *(void *)(a1 + 1728) = 0;
  *(_DWORD *)(a1 + 1720) = 0x7FFFFFFF;
  *(void *)(a1 + 1724) = 0x7FFFFFFF7FFFFFFFLL;
  *(void *)(a1 + 1736) = 0;
  *(void *)(a1 + 1744) = 0x8000000080000000;
  *(_OWORD *)(a1 + 1752) = 0u;
  *(_OWORD *)(a1 + 1768) = 0u;
  *(_OWORD *)(a1 + 1784) = 0u;
  v87 = (_DWORD *)(a1 + 1688);
  *(unsigned char *)(a1 + 1800) = 0;
  *(_DWORD *)(a1 + 1804) = 0x7FFFFFFF;
  *(void *)(a1 + 1808) = 0x8000000080000000;
  *(_DWORD *)(a1 + 1824) = -1;
  *(void *)(a1 + 1832) = 0;
  *(void *)(a1 + 1840) = 0x7FFFFFFFFFFFFFFFLL;
  *(_DWORD *)(a1 + 1848) = *(_DWORD *)(sub_4A5E10((void *)(a4 + 1064), a5) + 160);
  *(unsigned char *)(a1 + 1852) = 0;
  uint64_t v12 = (_OWORD *)(a1 + 1864);
  *(_DWORD *)(a1 + 1856) = 0;
  *(_DWORD *)(a1 + 1859) = 0;
  *(void *)&long long v13 = -1;
  *((void *)&v13 + 1) = -1;
  *(_OWORD *)(a1 + 1864) = v13;
  *(_OWORD *)(a1 + 1880) = v13;
  *(_OWORD *)(a1 + 1896) = v13;
  *(void *)(a1 + 1912) = -1;
  *(_DWORD *)(a1 + 1920) = 0;
  *(void *)(a1 + 1928) = -1;
  *(_DWORD *)(a1 + 1936) = 0;
  *(void *)(a1 + 1944) = 0;
  *(void *)(a1 + 1952) = a2;
  *(void *)(a1 + 1960) = a3;
  *(void *)(a1 + 1968) = a4 + 7376;
  int v14 = (uint64_t *)(a1 + 1976);
  *(void *)(a1 + 1976) = 0;
  *(void *)(a1 + 1992) = 0;
  *(void *)(a1 + 1984) = 0;
  *(unsigned char *)(a1 + 2000) = 1;
  *(_DWORD *)(a1 + 2004) = 0;
  *(void *)(a1 + 2008) = -1;
  *(void *)(a1 + 2016) = -1;
  *(void *)(a1 + 2024) = 0x7FFFFFFFFFFFFFFFLL;
  *(_OWORD *)(a1 + 2032) = 0u;
  *(_OWORD *)(a1 + 2048) = 0u;
  *(_OWORD *)(a1 + 2064) = 0u;
  *(void *)(a1 + 2080) = 0;
  *(void *)(a1 + 2088) = 0xBFF0000000000000;
  *(unsigned char *)(a1 + 2096) = 0;
  *(void *)(a1 + 2118) = 0;
  *(void *)(a1 + 2104) = 0;
  *(void *)(a1 + 2112) = 0;
  *(_DWORD *)(a1 + 2128) = a6 + 1;
  uint64_t v15 = *(void *)(a4 + 1064);
  size_t v16 = (unsigned __int8 *)(v15 + 2400 * a5);
  *(unsigned char *)(a1 + 1853) = v16[560];
  *(unsigned char *)(a1 + 1854) = v16[892];
  int v17 = v16[328];
  if ((v17 & 0xFE) == 4) {
    int v17 = *(unsigned __int8 *)(a3 + 1176);
  }
  *(unsigned char *)(a1 + 1855) = v17;
  if (v17 == 3 || (BOOL v18 = 0, !v17))
  {
    BOOL v19 = *(void *)(v15 + 2400 * a5 + 568) != -1
       || *(void *)(v15 + 2400 * a5 + 576) != -1
       || *(void *)(v15 + 2400 * a5 + 584) != -1
       || *(void *)(v15 + 2400 * a5 + 592) != -1
       || *(void *)(v15 + 2400 * a5 + 600) != -1
       || *(void *)(v15 + 2400 * a5 + 608) != -1
       || *(void *)(v15 + 2400 * a5 + 616) != -1;
    BOOL v18 = !v19;
  }
  uint64_t v20 = (_OWORD *)(a1 + 2000);
  *(unsigned char *)(a1 + 1856) = v18;
  uint64_t v21 = v15 + 2400 * a5;
  *(unsigned char *)(a1 + 1857) = *(unsigned char *)(v21 + 304);
  *(unsigned char *)(a1 + 1861) = *(unsigned char *)(v21 + 680);
  *(unsigned char *)(a1 + 1862) = *(unsigned char *)(v21 + 320);
  long long v23 = *(_OWORD *)(v21 + 600);
  long long v22 = *(_OWORD *)(v21 + 616);
  long long v24 = *(_OWORD *)(v21 + 584);
  *(_OWORD *)(a1 + 1924) = *(_OWORD *)(v21 + 628);
  *(_OWORD *)(a1 + 1896) = v23;
  *(_OWORD *)(a1 + 1912) = v22;
  *(_OWORD *)(a1 + 1880) = v24;
  _OWORD *v12 = *(_OWORD *)(v21 + 568);
  *(void *)(a1 + 1944) = *(void *)(v21 + 648);
  *(unsigned char *)(a1 + 2125) = *(unsigned char *)(v21 + 2226);
  if (v14 == (uint64_t *)(v21 + 1872))
  {
    long long v27 = *(_OWORD *)(v15 + 2400 * a5 + 1912);
    *uint64_t v20 = *(_OWORD *)(v15 + 2400 * a5 + 1896);
    *(_OWORD *)(a1 + 2016) = v27;
  }
  else
  {
    sub_5A09C0(v14, *(void *)(v21 + 1872), *(void *)(v21 + 1880), 0xD37A6F4DE9BD37A7 * ((uint64_t)(*(void *)(v21 + 1880) - *(void *)(v21 + 1872)) >> 3));
    uint64_t v25 = v15 + 2400 * a5;
    long long v26 = *(_OWORD *)(v25 + 1912);
    *uint64_t v20 = *(_OWORD *)(v25 + 1896);
    *(_OWORD *)(a1 + 2016) = v26;
    sub_5A0D34((uint64_t *)(a1 + 2032), *(void *)(v25 + 1928), *(void *)(v25 + 1936), 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*(void *)(v25 + 1936) - *(void *)(v25 + 1928)) >> 4));
    int v17 = *(unsigned __int8 *)(a1 + 1855);
  }
  char v28 = (_OWORD *)(v15 + 2400 * a5);
  long long v29 = v28[122];
  long long v30 = v28[123];
  *(_OWORD *)(a1 + 2081) = *(_OWORD *)((char *)v28 + 1977);
  *(_OWORD *)(a1 + 2056) = v29;
  *(_OWORD *)(a1 + 2072) = v30;
  *(_OWORD *)(a1 + 2104) = v28[125];
  if (v17 == 2 && (unsigned int v31 = *(_DWORD *)(v15 + 2400 * a5 + 160), v31 <= 0x23))
  {
    unint64_t v32 = (0x804000010uLL >> v31) & 1;
    if (!*(unsigned char *)(*(void *)(a1 + 1960) + 1405)) {
      goto LABEL_34;
    }
  }
  else
  {
    LOBYTE(v32) = 0;
    if (!*(unsigned char *)(*(void *)(a1 + 1960) + 1405))
    {
LABEL_34:
      *(unsigned char *)(a1 + 1858) = 0;
LABEL_35:
      BOOL v34 = 0;
      *(unsigned char *)(a1 + 1859) = 0;
      goto LABEL_36;
    }
  }
  if (*(unsigned char *)(*(void *)(a1 + 1952) + 1930)) {
    BOOL v33 = *(unsigned char *)(v21 + 304) == 0;
  }
  else {
    BOOL v33 = 1;
  }
  if (v33) {
    LOBYTE(v32) = 1;
  }
  if ((v32 & 1) != 0
    || *(void *)v12 != -1
    || *(void *)(a1 + 1872) != -1
    || *(void *)(a1 + 1880) != -1
    || *(void *)(a1 + 1888) != -1
    || *(void *)(a1 + 1896) != -1
    || *(void *)(a1 + 1904) != -1)
  {
    goto LABEL_34;
  }
  uint64_t v85 = *(void *)(a1 + 1912);
  *(unsigned char *)(a1 + 1858) = v85 == -1;
  if (v85 != -1) {
    goto LABEL_35;
  }
  int v86 = *(unsigned __int8 *)(a1 + 1856);
  *(unsigned char *)(a1 + 1859) = v86;
  BOOL v34 = v86 == 0;
LABEL_36:
  *(unsigned char *)(a1 + 1860) = v34;
  sub_80EF24(a1, v15 + 2400 * a5);
  int v35 = (const std::string *)sub_64F450(a4);
  std::string::operator=((std::string *)(a1 + 984), v35);
  _DWORD *v87 = *(_DWORD *)(a4 + 288);
  uint64_t v36 = *(void *)(a4 + 296);
  *(void *)(a1 + 1702) = *(void *)(a4 + 302);
  *(void *)(a1 + 1696) = v36;
  long long v37 = *(_OWORD *)(a4 + 312);
  long long v38 = *(_OWORD *)(a4 + 328);
  *(void *)(a1 + 1744) = *(void *)(a4 + 344);
  *(_OWORD *)(a1 + 1712) = v37;
  *(_OWORD *)(a1 + 1728) = v38;
  if (v87 != (_DWORD *)(a4 + 288))
  {
    sub_472BC8((void *)(a1 + 1752), *(char **)(a4 + 352), *(char **)(a4 + 360), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a4 + 360) - *(void *)(a4 + 352)) >> 2));
    sub_472BC8((void *)(a1 + 1776), *(char **)(a4 + 376), *(char **)(a4 + 384), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a4 + 384) - *(void *)(a4 + 376)) >> 2));
    *(_OWORD *)(a1 + 1800) = *(_OWORD *)(a4 + 400);
    unsigned int v39 = *(_DWORD *)(a1 + 1824);
    int v40 = *(_DWORD *)(a4 + 424);
    if (v39 == v40)
    {
      if (v39 <= 1) {
        *(void *)(a1 + 1816) = *(void *)(a4 + 416);
      }
    }
    else
    {
      if (v40 == 1)
      {
        *(void *)(a1 + 1816) = *(void *)(a4 + 416);
        int v40 = *(_DWORD *)(a4 + 424);
      }
      else if (!v40)
      {
        *(void *)(a1 + 1816) = *(void *)(a4 + 416);
      }
      *(_DWORD *)(a1 + 1824) = v40;
    }
  }
  *(_OWORD *)(a1 + 1832) = *(_OWORD *)(a4 + 432);
  sub_5A303C(a1 + 1008, a4 + 10880);
  if (a1 + 1008 != a4 + 10880) {
    sub_4AD448((void *)(a1 + 1384), *(char **)(a4 + 11256), *(char **)(a4 + 11264), 0x8E38E38E38E38E39 * ((uint64_t)(*(void *)(a4 + 11264) - *(void *)(a4 + 11256)) >> 3));
  }
  *(_DWORD *)(a1 + 1408) = *(_DWORD *)(a4 + 11280);
  sub_52FD00(a1 + 1416, a4 + 11288);
  sub_4F39B8(a1 + 1576, (std::string *)(a4 + 11448));
  *(void *)(a1 + 1616) = *(void *)(a4 + 11488);
  std::string::operator=((std::string *)(a1 + 1624), (const std::string *)(a4 + 11496));
  *(unsigned char *)(a1 + 1648) = *(unsigned char *)(a4 + 11520);
  std::string::operator=((std::string *)(a1 + 1656), (const std::string *)(a4 + 11528));
  *(unsigned char *)(a1 + 1680) = *(unsigned char *)(a4 + 11552);
  sub_80F53C(a1, (uint64_t)v92);
  uint64_t v41 = *(long long **)v89;
  if (*(void *)v89)
  {
    uint64_t v42 = *(long long **)(a1 + 16);
    unsigned __int8 v43 = *(long long **)v89;
    if (v42 != v41)
    {
      do
      {
        if (*((char *)v42 - 1) < 0) {
          operator delete(*((void **)v42 - 3));
        }
        uint64_t v42 = (long long *)((char *)v42 - 24);
      }
      while (v42 != v41);
      unsigned __int8 v43 = *(long long **)v89;
    }
    *(void *)(a1 + 16) = v41;
    operator delete(v43);
    *(void *)uint64_t v89 = 0;
    *(void *)(v89 + 8) = 0;
    *(void *)(v89 + 16) = 0;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v92;
  *(void *)(a1 + 24) = v93;
  v92[1] = 0;
  uint64_t v93 = 0;
  v92[0] = 0;
  sub_52EF44(a1 + 32, (uint64_t *)__p);
  *(unsigned char *)(a1 + 72) = v96;
  v44 = v95;
  if (v95)
  {
    do
    {
      v45 = (void *)*v44;
      sub_4F4B48((uint64_t)(v44 + 2));
      operator delete(v44);
      v44 = v45;
    }
    while (v45);
  }
  unsigned __int8 v46 = __p[0];
  __p[0] = 0;
  if (v46) {
    operator delete(v46);
  }
  v47 = (void **)v92[0];
  if (v92[0])
  {
    v48 = (void **)v92[1];
    uint64_t v49 = v92[0];
    if (v92[1] != v92[0])
    {
      do
      {
        if (*((char *)v48 - 1) < 0) {
          operator delete(*(v48 - 3));
        }
        v48 -= 3;
      }
      while (v48 != v47);
      uint64_t v49 = v92[0];
    }
    v92[1] = v47;
    operator delete(v49);
  }
  *(unsigned char *)(a1 + 2121) = sub_635D10(v89, (uint64_t)&qword_25C6658);
  *(unsigned char *)(a1 + 2120) = sub_635D10(v89, (uint64_t)&xmmword_25C66D0);
  *(unsigned char *)(a1 + 2122) = sub_635D10(v89, (uint64_t)&dword_25C66E8);
  *(unsigned char *)(a1 + 2123) = sub_635D10(v89, (uint64_t)&xmmword_25C6700);
  sub_635CD0((long long **)v89, (uint64_t)v92);
  char v50 = HIBYTE(v93);
  char v51 = v92[0];
  if (v93 >= 0) {
    uint64_t v52 = v92;
  }
  else {
    uint64_t v52 = (void **)v92[0];
  }
  if (byte_25C5457 >= 0) {
    v53 = &xmmword_25C5440;
  }
  else {
    v53 = (long long *)xmmword_25C5440;
  }
  if (byte_25C5457 >= 0) {
    int64_t v54 = byte_25C5457;
  }
  else {
    int64_t v54 = *((void *)&xmmword_25C5440 + 1);
  }
  if (v54)
  {
    if (v93 >= 0) {
      uint64_t v55 = HIBYTE(v93);
    }
    else {
      uint64_t v55 = (uint64_t)v92[1];
    }
    v56 = (char *)v52 + v55;
    if (v55 >= v54)
    {
      int v81 = *(char *)v53;
      v82 = v52;
      do
      {
        uint64_t v83 = v55 - v54;
        if (v83 == -1) {
          break;
        }
        v84 = (char *)memchr(v82, v81, v83 + 1);
        if (!v84) {
          break;
        }
        uint64_t v57 = v84;
        if (!memcmp(v84, v53, v54)) {
          goto LABEL_82;
        }
        v82 = (void **)(v57 + 1);
        uint64_t v55 = v56 - (v57 + 1);
      }
      while (v55 >= v54);
    }
    uint64_t v57 = v56;
LABEL_82:
    uint64_t v58 = v57 - (char *)v52;
    if (v57 == v56) {
      uint64_t v58 = -1;
    }
    char v59 = v88;
    *(unsigned char *)(a1 + 2124) = v58 != -1;
    if ((v50 & 0x80) == 0)
    {
LABEL_85:
      char v60 = *(unsigned char *)(*(void *)(a1 + 1952) + 1878);
      if (!v60) {
        goto LABEL_103;
      }
      goto LABEL_89;
    }
  }
  else
  {
    char v59 = v88;
    *(unsigned char *)(a1 + 2124) = 1;
    if ((v50 & 0x80) == 0) {
      goto LABEL_85;
    }
  }
  operator delete(v51);
  char v60 = *(unsigned char *)(*(void *)(a1 + 1952) + 1878);
  if (!v60) {
    goto LABEL_103;
  }
LABEL_89:
  if (*(_DWORD *)(*(void *)(a1 + 1960) + 1000) != 11
    || *(unsigned char *)(a1 + 1855)
    || *(unsigned char *)(a1 + 2125)
    || (*(_DWORD *)(a1 + 1848) - 1) > 1)
  {
    char v60 = 0;
  }
  else if (sub_65FC8((void *)(a1 + 1976)))
  {
    uint64_t v61 = *(void *)(a1 + 1976);
    uint64_t v62 = *(void *)(a1 + 1984);
    char v59 = v88;
    if (v61 == v62)
    {
      char v60 = 1;
    }
    else
    {
      uint64_t v63 = v61 + 184;
      do
      {
        char v60 = (*(unsigned __int8 *)(v63 - 8) | *(unsigned __int8 *)(v63 - 7)) == 0;
        if (*(unsigned __int8 *)(v63 - 8) | *(unsigned __int8 *)(v63 - 7)) {
          BOOL v64 = 1;
        }
        else {
          BOOL v64 = v63 == v62;
        }
        v63 += 184;
      }
      while (!v64);
    }
  }
  else
  {
    char v60 = 1;
    char v59 = v88;
  }
LABEL_103:
  *(unsigned char *)(a1 + 1852) = v60;
  BOOL v65 = sub_800B24(a1);
  uint64_t v66 = 432;
  if (v65) {
    uint64_t v66 = 312;
  }
  v67 = &xmmword_25C5800;
  if (v65) {
    v67 = &xmmword_25C5788;
  }
  v68 = &byte_25C5817;
  if (v65) {
    v68 = &byte_25C579F;
  }
  if (*v68 < 0)
  {
    v69 = *(void **)((char *)&xmmword_25C5650 + v66);
    uint64_t v70 = 432;
    if (v65) {
      uint64_t v70 = 312;
    }
    sub_4200(__dst, v69, *(void *)((char *)&xmmword_25C5650 + v70 + 8));
  }
  else
  {
    *(_OWORD *)long long __dst = *v67;
    uint64_t v91 = *((void *)v67 + 2);
  }
  sub_80FC34(a1, 0, (uint64_t)__dst, (uint64_t)v92);
  v71 = (void **)*v59;
  if (*v59)
  {
    v72 = *(void ***)(a1 + 88);
    v73 = *v59;
    if (v72 != v71)
    {
      do
      {
        if (*((char *)v72 - 1) < 0) {
          operator delete(*(v72 - 3));
        }
        v72 -= 3;
      }
      while (v72 != v71);
      v73 = *v59;
    }
    *(void *)(a1 + 88) = v71;
    operator delete(v73);
    *char v59 = 0;
    v59[1] = 0;
    v59[2] = 0;
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)v92;
  *(void *)(a1 + 96) = v93;
  v92[1] = 0;
  uint64_t v93 = 0;
  v92[0] = 0;
  sub_52EF44(a1 + 104, (uint64_t *)__p);
  *(unsigned char *)(a1 + 144) = v96;
  v74 = v95;
  if (v95)
  {
    do
    {
      v75 = (void *)*v74;
      sub_4F4B48((uint64_t)(v74 + 2));
      operator delete(v74);
      v74 = v75;
    }
    while (v75);
  }
  v76 = __p[0];
  __p[0] = 0;
  if (v76) {
    operator delete(v76);
  }
  v77 = (void **)v92[0];
  if (v92[0])
  {
    v78 = (void **)v92[1];
    v79 = v92[0];
    if (v92[1] != v92[0])
    {
      do
      {
        if (*((char *)v78 - 1) < 0) {
          operator delete(*(v78 - 3));
        }
        v78 -= 3;
      }
      while (v78 != v77);
      v79 = v92[0];
    }
    v92[1] = v77;
    operator delete(v79);
  }
  if (SHIBYTE(v91) < 0) {
    operator delete(__dst[0]);
  }
  return a1;
}

void sub_80EE08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t *a15, uint64_t a16, void **a17, void *a18, void **a19, void **a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  sub_59230C(a15);
  sub_3B024C(a18);
  sub_52F970(v27);
  if (*(char *)(v26 + 1007) < 0) {
    operator delete(*a17);
  }
  sub_59241C((uint64_t *)(v26 + 960));
  sub_59241C((uint64_t *)(v26 + 936));
  sub_59241C((uint64_t *)(v26 + 912));
  sub_4A50F4(a10);
  sub_4A50F4(a11);
  sub_4A50F4(a12);
  sub_4A50F4(a13);
  sub_4A50F4(a14);
  sub_4D4880(a19);
  sub_4D4880(a20);
  _Unwind_Resume(a1);
}

std::string *sub_80EF24(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 1859))
  {
    unsigned int v4 = *(_DWORD *)(a2 + 160);
    BOOL v5 = v4 > 0x3F;
    unint64_t v6 = (0xC000000000300008 >> v4) & 1;
    if (v5) {
      int v7 = 0;
    }
    else {
      int v7 = v6;
    }
  }
  else
  {
    int v7 = 0;
  }
  unsigned int v8 = *(_DWORD *)(a1 + 1848);
  BOOL v5 = v8 > 0x23;
  uint64_t v9 = (1 << v8) & 0x804000010;
  BOOL v10 = v5 || v9 == 0;
  if (!v10 || (v7 & 1) != 0)
  {
    BOOL v11 = 0;
    uint64_t v12 = *(void *)(a2 + 384);
    if (v12 == *(void *)(a2 + 392)) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  BOOL v11 = *(unsigned char *)(a2 + 305) == 0;
  uint64_t v12 = *(void *)(a2 + 384);
  if (v12 != *(void *)(a2 + 392))
  {
LABEL_11:
    std::string::operator=((std::string *)(a1 + 456), (const std::string *)v12);
    *(void *)(a1 + 480) = *(void *)(v12 + 24);
    std::string::operator=((std::string *)(a1 + 488), (const std::string *)(v12 + 32));
    *(void *)(a1 + 512) = *(void *)(v12 + 56);
    *(_DWORD *)(a1 + 520) = *(_DWORD *)(v12 + 64);
    std::string::operator=((std::string *)(a1 + 528), (const std::string *)(v12 + 72));
    std::string::operator=((std::string *)(a1 + 552), (const std::string *)(v12 + 96));
    *(_DWORD *)(a1 + 576) = *(_DWORD *)(v12 + 120);
    std::string::operator=((std::string *)(a1 + 584), (const std::string *)(v12 + 128));
  }
LABEL_12:
  uint64_t v13 = *(void *)(a2 + 336);
  if (v13 == *(void *)(a2 + 344)) {
    goto LABEL_30;
  }
  if (*(_DWORD *)(a1 + 1848) == 4)
  {
    std::string::operator=((std::string *)(a1 + 304), *(const std::string **)(a2 + 336));
    *(void *)(a1 + 328) = *(void *)(v13 + 24);
    std::string::operator=((std::string *)(a1 + 336), (const std::string *)(v13 + 32));
    *(void *)(a1 + 360) = *(void *)(v13 + 56);
    *(_DWORD *)(a1 + 368) = *(_DWORD *)(v13 + 64);
    std::string::operator=((std::string *)(a1 + 376), (const std::string *)(v13 + 72));
    std::string::operator=((std::string *)(a1 + 400), (const std::string *)(v13 + 96));
    *(_DWORD *)(a1 + 424) = *(_DWORD *)(v13 + 120);
    std::string::operator=((std::string *)(a1 + 432), (const std::string *)(v13 + 128));
    goto LABEL_30;
  }
  if (v11 && sub_6F2FD8(*(void *)(a2 + 336)))
  {
    unint64_t v14 = *(void *)(a1 + 944);
    if (v14 < *(void *)(a1 + 952))
    {
      sub_4AA8E0(*(char **)(a1 + 944), (long long *)v13);
      *(void *)(a1 + 944) = v14 + 152;
      *(void *)(a1 + 944) = v14 + 152;
      goto LABEL_30;
    }
    BOOL v19 = (int64x2_t *)(a1 + 936);
    size_t v16 = (long long *)v13;
    goto LABEL_28;
  }
  if (*(unsigned char *)(a1 + 1859))
  {
    uint64_t v15 = *(void *)(a2 + 344);
    if (0x86BCA1AF286BCA1BLL * ((v15 - *(void *)(a2 + 336)) >> 3) >= 2)
    {
      size_t v16 = (long long *)(v15 - 152);
      unint64_t v17 = *(void *)(a1 + 944);
      if (v17 < *(void *)(a1 + 952))
      {
        sub_4AA8E0(*(char **)(a1 + 944), v16);
        uint64_t v18 = v17 + 152;
        *(void *)(a1 + 944) = v17 + 152;
LABEL_29:
        *(void *)(a1 + 944) = v18;
        goto LABEL_30;
      }
      BOOL v19 = (int64x2_t *)(a1 + 936);
LABEL_28:
      uint64_t v18 = sub_63CBA0(v19, v16);
      goto LABEL_29;
    }
  }
LABEL_30:
  int v33 = v7;
  uint64_t v20 = *(void *)(a2 + 360);
  for (uint64_t i = *(void *)(a2 + 368); v20 != i; v20 += 152)
  {
    if (sub_6F2FD8(v20))
    {
      int v22 = *(_DWORD *)(v20 + 120);
      if ((v22 - 2) < 2)
      {
        if (v11)
        {
          unint64_t v24 = *(void *)(a1 + 968);
          if (v24 >= *(void *)(a1 + 976))
          {
            *(void *)(a1 + 968) = sub_63CBA0((int64x2_t *)(a1 + 960), (long long *)v20);
          }
          else
          {
            sub_4AA8E0(*(char **)(a1 + 968), (long long *)v20);
            *(void *)(a1 + 968) = v24 + 152;
            *(void *)(a1 + 968) = v24 + 152;
          }
        }
      }
      else if (v22 == 4)
      {
        if (!sub_6F2FD8(a1 + 304))
        {
          std::string::operator=((std::string *)(a1 + 304), (const std::string *)v20);
          *(void *)(a1 + 328) = *(void *)(v20 + 24);
          std::string::operator=((std::string *)(a1 + 336), (const std::string *)(v20 + 32));
          *(void *)(a1 + 360) = *(void *)(v20 + 56);
          *(_DWORD *)(a1 + 368) = *(_DWORD *)(v20 + 64);
          std::string::operator=((std::string *)(a1 + 376), (const std::string *)(v20 + 72));
          std::string::operator=((std::string *)(a1 + 400), (const std::string *)(v20 + 96));
          *(_DWORD *)(a1 + 424) = *(_DWORD *)(v20 + 120);
          std::string::operator=((std::string *)(a1 + 432), (const std::string *)(v20 + 128));
        }
      }
      else if (v22 == 1 && v11)
      {
        unint64_t v23 = *(void *)(a1 + 944);
        if (v23 >= *(void *)(a1 + 952))
        {
          *(void *)(a1 + 944) = sub_63CBA0((int64x2_t *)(a1 + 936), (long long *)v20);
        }
        else
        {
          sub_4AA8E0(*(char **)(a1 + 944), (long long *)v20);
          *(void *)(a1 + 944) = v23 + 152;
          *(void *)(a1 + 944) = v23 + 152;
        }
      }
    }
  }
  uint64_t v25 = *(void *)(a1 + 936);
  if (v25 != *(void *)(a1 + 944))
  {
    std::string::operator=((std::string *)(a1 + 152), *(const std::string **)(a1 + 936));
    *(void *)(a1 + 176) = *(void *)(v25 + 24);
    std::string::operator=((std::string *)(a1 + 184), (const std::string *)(v25 + 32));
    *(void *)(a1 + 208) = *(void *)(v25 + 56);
    *(_DWORD *)(a1 + 216) = *(_DWORD *)(v25 + 64);
    std::string::operator=((std::string *)(a1 + 224), (const std::string *)(v25 + 72));
    std::string::operator=((std::string *)(a1 + 248), (const std::string *)(v25 + 96));
    *(_DWORD *)(a1 + 272) = *(_DWORD *)(v25 + 120);
    std::string::operator=((std::string *)(a1 + 280), (const std::string *)(v25 + 128));
  }
  std::string::operator=((std::string *)(a1 + 608), (const std::string *)(a2 + 712));
  *(void *)(a1 + 632) = *(void *)(a2 + 736);
  std::string::operator=((std::string *)(a1 + 640), (const std::string *)(a2 + 744));
  *(void *)(a1 + 664) = *(void *)(a2 + 768);
  *(_DWORD *)(a1 + 672) = *(_DWORD *)(a2 + 776);
  std::string::operator=((std::string *)(a1 + 680), (const std::string *)(a2 + 784));
  std::string::operator=((std::string *)(a1 + 704), (const std::string *)(a2 + 808));
  *(_DWORD *)(a1 + 728) = *(_DWORD *)(a2 + 832);
  std::string::operator=((std::string *)(a1 + 736), (const std::string *)(a2 + 840));
  uint64_t v26 = *(long long **)(a2 + 688);
  uint64_t v27 = *(long long **)(a2 + 696);
  if (v26 != v27)
  {
    char v28 = *(char **)(a1 + 920);
    do
    {
      while ((unint64_t)v28 >= *(void *)(a1 + 928))
      {
        char v28 = (char *)sub_63CBA0((int64x2_t *)(a1 + 912), v26);
        *(void *)(a1 + 920) = v28;
        v26 += 10;
        if (v26 == v27) {
          goto LABEL_54;
        }
      }
      sub_4AA8E0(v28, v26);
      v28 += 152;
      *(void *)(a1 + 920) = v28;
      *(void *)(a1 + 920) = v28;
      v26 += 10;
    }
    while (v26 != v27);
  }
LABEL_54:
  __n128 result = (std::string *)sub_6F2FD8(a2 + 408);
  if (result)
  {
    std::string::operator=((std::string *)(a1 + 760), (const std::string *)(a2 + 408));
    *(void *)(a1 + 784) = *(void *)(a2 + 432);
    std::string::operator=((std::string *)(a1 + 792), (const std::string *)(a2 + 440));
    *(void *)(a1 + 816) = *(void *)(a2 + 464);
    *(_DWORD *)(a1 + 824) = *(_DWORD *)(a2 + 472);
    std::string::operator=((std::string *)(a1 + 832), (const std::string *)(a2 + 480));
    std::string::operator=((std::string *)(a1 + 856), (const std::string *)(a2 + 504));
    *(_DWORD *)(a1 + 880) = *(_DWORD *)(a2 + 528);
    long long v30 = (std::string *)(a1 + 888);
    unsigned int v31 = (const std::string *)(a2 + 536);
  }
  else
  {
    if (!v33) {
      return result;
    }
    uint64_t v32 = *(void *)(a2 + 336);
    if (v32 == *(void *)(a2 + 344)) {
      return result;
    }
    std::string::operator=((std::string *)(a1 + 760), *(const std::string **)(a2 + 336));
    *(void *)(a1 + 784) = *(void *)(v32 + 24);
    std::string::operator=((std::string *)(a1 + 792), (const std::string *)(v32 + 32));
    *(void *)(a1 + 816) = *(void *)(v32 + 56);
    *(_DWORD *)(a1 + 824) = *(_DWORD *)(v32 + 64);
    std::string::operator=((std::string *)(a1 + 832), (const std::string *)(v32 + 72));
    std::string::operator=((std::string *)(a1 + 856), (const std::string *)(v32 + 96));
    *(_DWORD *)(a1 + 880) = *(_DWORD *)(v32 + 120);
    long long v30 = (std::string *)(a1 + 888);
    unsigned int v31 = (const std::string *)(v32 + 128);
  }

  return std::string::operator=(v30, v31);
}

void sub_80F514(_Unwind_Exception *a1)
{
  *(void *)(v1 + 944) = v2;
  _Unwind_Resume(a1);
}

void sub_80F51C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 944) = v2;
  _Unwind_Resume(a1);
}

void sub_80F524(_Unwind_Exception *a1)
{
  *(void *)(v1 + 944) = v2;
  _Unwind_Resume(a1);
}

void sub_80F52C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 968) = v2;
  _Unwind_Resume(a1);
}

void sub_80F534(_Unwind_Exception *a1)
{
  *(void *)(v1 + 920) = v2;
  _Unwind_Resume(a1);
}

std::string *sub_80F53C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 48) = 0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_DWORD *)(a2 + 56) = 1065353216;
  *(unsigned char *)(a2 + 64) = 1;
  unsigned int v4 = &qword_25C4960;
  BOOL v5 = (uint64_t *)&xmmword_25C4B88;
  unint64_t v6 = (long long *)&qword_25C4AE0;
  switch(*(_DWORD *)(a1 + 1848))
  {
    case 0:
    case 3:
    case 5:
    case 0xC:
      goto LABEL_2;
    case 1:
      int v7 = *(unsigned __int8 *)(a1 + 1856);
      unsigned int v8 = (long long *)&unk_25C47F8;
      uint64_t v9 = &xmmword_25C5080;
      goto LABEL_72;
    case 2:
      int v7 = *(unsigned __int8 *)(a1 + 1856);
      unsigned int v8 = (long long *)&qword_25C4810;
      uint64_t v9 = &xmmword_25C5098;
      goto LABEL_72;
    case 4:
      sub_7F607C(a1, (char **)a2);
      return sub_7F68A8((std::string *)a1, a2);
    case 6:
      sub_8109BC(a1, (char **)a2);
      return sub_7F68A8((std::string *)a1, a2);
    case 7:
      goto LABEL_4;
    case 0xB:
      if (!*(unsigned char *)(a1 + 1856)) {
        goto LABEL_2;
      }
      BOOL v10 = (long long *)&qword_25C4D50;
      goto LABEL_29;
    case 0x10:
      sub_810810(a1, (char **)a2);
      return sub_7F68A8((std::string *)a1, a2);
    case 0x11:
      sub_81033C(a1, (char **)a2);
      return sub_7F68A8((std::string *)a1, a2);
    case 0x12:
      uint64_t v11 = *(void *)(a1 + 1960);
      if (!*(unsigned char *)(v11 + 1524) || *(unsigned char *)(v11 + 1522) || !*(unsigned char *)(a1 + 1409) || *(_DWORD *)(a1 + 2128) != 1)
      {
        int v12 = *(unsigned __int8 *)(a1 + 1409);
        uint64_t v13 = (long long *)&qword_25C4A08;
        goto LABEL_36;
      }
      unsigned int v4 = &qword_25C4A50;
      break;
    case 0x14:
      int v7 = *(unsigned __int8 *)(a1 + 1856);
      unsigned int v8 = (long long *)&qword_25C48B8;
      goto LABEL_18;
    case 0x15:
      int v7 = *(unsigned __int8 *)(a1 + 1856);
      unsigned int v8 = (long long *)&qword_25C48D0;
LABEL_18:
      unint64_t v14 = (long long *)((char *)v8 + 2280);
      uint64_t v15 = (long long *)((char *)v8 + 1992);
      goto LABEL_69;
    case 0x16:
      sub_7F60EC(a1, (char **)a2, a1 + 152);
      return sub_7F68A8((std::string *)a1, a2);
    case 0x17:
      break;
    case 0x18:
      sub_7F6150(a1, (char **)a2, a1 + 152);
      return sub_7F68A8((std::string *)a1, a2);
    case 0x19:
      sub_8103D4(a1, (char **)a2);
      return sub_7F68A8((std::string *)a1, a2);
    case 0x1A:
      int v16 = *(unsigned __int8 *)(a1 + 1856);
      unint64_t v17 = &xmmword_25C4930;
      uint64_t v18 = &qword_25C50B0;
      goto LABEL_40;
    case 0x1B:
      int v7 = *(unsigned __int8 *)(a1 + 1856);
      unsigned int v8 = &xmmword_25C4828;
      uint64_t v9 = &xmmword_25C5080;
      goto LABEL_72;
    case 0x1C:
      int v7 = *(unsigned __int8 *)(a1 + 1856);
      unsigned int v8 = &xmmword_25C4840;
      uint64_t v9 = &xmmword_25C5098;
      goto LABEL_72;
    case 0x1D:
      if (!*(unsigned char *)(a1 + 1856)) {
        goto LABEL_2;
      }
      BOOL v10 = &xmmword_25C4D68;
      goto LABEL_29;
    case 0x1E:
      if (!*(unsigned char *)(a1 + 1856)) {
        goto LABEL_2;
      }
      BOOL v10 = &xmmword_25C4D80;
LABEL_29:
      sub_810CC8(a1, (uint64_t)v10, (char **)a2);
      return sub_7F68A8((std::string *)a1, a2);
    case 0x21:
      uint64_t v19 = *(void *)(a1 + 1960);
      if (!*(unsigned char *)(v19 + 1524) || *(unsigned char *)(v19 + 1522) || !*(unsigned char *)(a1 + 1409) || *(_DWORD *)(a1 + 2128) != 1)
      {
        int v12 = *(unsigned __int8 *)(a1 + 1409);
        uint64_t v13 = &xmmword_25C4A20;
        goto LABEL_36;
      }
      unsigned int v4 = (uint64_t *)&xmmword_25C4A68;
      break;
    case 0x22:
      uint64_t v20 = *(void *)(a1 + 1960);
      if (*(unsigned char *)(v20 + 1524) && !*(unsigned char *)(v20 + 1522) && *(unsigned char *)(a1 + 1409) && *(_DWORD *)(a1 + 2128) == 1)
      {
        unsigned int v4 = (uint64_t *)&xmmword_25C4A80;
      }
      else
      {
        int v12 = *(unsigned __int8 *)(a1 + 1409);
        uint64_t v13 = &xmmword_25C4A38;
LABEL_36:
        if (v12) {
          unsigned int v4 = (uint64_t *)(v13 + 9);
        }
        else {
          unsigned int v4 = (uint64_t *)v13;
        }
      }
      break;
    case 0x23:
      int v16 = *(unsigned __int8 *)(a1 + 1856);
      unint64_t v17 = &xmmword_25C4918;
      uint64_t v18 = &qword_25C50C8;
LABEL_40:
      if (v16) {
        unsigned int v4 = (uint64_t *)v17;
      }
      else {
        unsigned int v4 = v18;
      }
      break;
    case 0x27:
      sub_810874(a1, (char **)a2);
      return sub_7F68A8((std::string *)a1, a2);
    case 0x29:
      goto LABEL_62;
    case 0x2A:
      BOOL v5 = (uint64_t *)&xmmword_25C4BA0;
      goto LABEL_62;
    case 0x2B:
      BOOL v5 = (uint64_t *)&xmmword_25C4BB8;
      goto LABEL_62;
    case 0x2C:
      BOOL v5 = (uint64_t *)&xmmword_25C4BD0;
      goto LABEL_62;
    case 0x2D:
      BOOL v5 = (uint64_t *)&xmmword_25C4BE8;
      goto LABEL_62;
    case 0x2E:
      BOOL v5 = (uint64_t *)&xmmword_25C4C00;
      goto LABEL_62;
    case 0x2F:
      BOOL v5 = &qword_25C4C18;
      goto LABEL_62;
    case 0x30:
      BOOL v5 = (uint64_t *)&xmmword_25C4C30;
      goto LABEL_62;
    case 0x31:
      BOOL v5 = (uint64_t *)&xmmword_25C4C48;
      goto LABEL_62;
    case 0x32:
      BOOL v5 = (uint64_t *)&xmmword_25C4C60;
      goto LABEL_62;
    case 0x33:
      BOOL v5 = &qword_25C4C78;
      goto LABEL_62;
    case 0x34:
      BOOL v5 = &qword_25C4C90;
      goto LABEL_62;
    case 0x35:
      BOOL v5 = &qword_25C4CA8;
      goto LABEL_62;
    case 0x36:
      BOOL v5 = &qword_25C4CC0;
      goto LABEL_62;
    case 0x37:
      BOOL v5 = &qword_25C4CD8;
      goto LABEL_62;
    case 0x38:
      BOOL v5 = &qword_25C4CF0;
      goto LABEL_62;
    case 0x39:
      BOOL v5 = &qword_25C4D08;
      goto LABEL_62;
    case 0x3A:
      BOOL v5 = &qword_25C4D20;
      goto LABEL_62;
    case 0x3B:
      BOOL v5 = &qword_25C4D38;
LABEL_62:
      sub_810B5C(a1, (uint64_t)v5, (char **)a2);
      return sub_7F68A8((std::string *)a1, a2);
    case 0x3C:
      int v7 = *(unsigned __int8 *)(a1 + 1856);
      unsigned int v8 = (long long *)&qword_25C4858;
      goto LABEL_65;
    case 0x3D:
      int v7 = *(unsigned __int8 *)(a1 + 1856);
      unsigned int v8 = &xmmword_25C4870;
LABEL_65:
      unint64_t v14 = (long long *)((char *)v8 + 2328);
      uint64_t v15 = (long long *)((char *)v8 + 2088);
      goto LABEL_69;
    case 0x3E:
      int v7 = *(unsigned __int8 *)(a1 + 1856);
      unsigned int v8 = &xmmword_25C4888;
      goto LABEL_68;
    case 0x3F:
      int v7 = *(unsigned __int8 *)(a1 + 1856);
      unsigned int v8 = &xmmword_25C48A0;
LABEL_68:
      unint64_t v14 = (long long *)((char *)v8 + 2328);
      uint64_t v15 = (long long *)((char *)v8 + 2040);
LABEL_69:
      if (*(unsigned char *)(*(void *)(a1 + 1952) + 1898)) {
        uint64_t v9 = v14;
      }
      else {
        uint64_t v9 = v15;
      }
LABEL_72:
      if (v7) {
        uint64_t v21 = (uint64_t)v8;
      }
      else {
        uint64_t v21 = (uint64_t)v9;
      }
      sub_81070C((std::string *)a1, v21, (char **)a2);
      return sub_7F68A8((std::string *)a1, a2);
    case 0x40:
      if (!*(unsigned char *)(a1 + 1856)) {
        goto LABEL_2;
      }
      int v22 = &qword_25C4D98;
      goto LABEL_82;
    case 0x41:
      if (!*(unsigned char *)(a1 + 1856)) {
        goto LABEL_2;
      }
      int v22 = (uint64_t *)&xmmword_25C4DB0;
      goto LABEL_82;
    case 0x42:
      if (*(unsigned char *)(a1 + 1856))
      {
        int v22 = &qword_25C4DC8;
LABEL_82:
        sub_810D4C(a1, (uint64_t)v22, (char **)a2);
      }
      else
      {
LABEL_2:
        sub_8101D4((std::string *)a1, (char **)a2, 1u);
      }
      return sub_7F68A8((std::string *)a1, a2);
    case 0x52:
      goto LABEL_85;
    case 0x53:
      unint64_t v6 = &xmmword_25C4AF8;
      goto LABEL_85;
    case 0x54:
      unint64_t v6 = &xmmword_25C4B10;
LABEL_85:
      sub_6351E8((char **)a2, (uint64_t)v6);
      sub_8190C4(a1, (std::string **)a2);
      return sub_7F68A8((std::string *)a1, a2);
    case 0x55:
      sub_810438(a1, (char **)a2);
      return sub_7F68A8((std::string *)a1, a2);
    case 0x56:
    case 0x57:
      if (*(unsigned char *)(a1 + 1856)) {
LABEL_4:
      }
        sub_810A80(a1, (char **)a2);
      else {
        sub_810C58(a1, (char **)a2);
      }
      return sub_7F68A8((std::string *)a1, a2);
    case 0x58:
      sub_810590(a1, (char **)a2);
      return sub_7F68A8((std::string *)a1, a2);
    case 0x59:
      unsigned int v4 = &qword_25C4DF8;
      break;
    case 0x5A:
      unsigned int v4 = &qword_25C4E10;
      break;
    case 0x5B:
      sub_7F61B4(a1, (char **)a2, a1 + 152);
      return sub_7F68A8((std::string *)a1, a2);
    case 0x5C:
      unsigned int v4 = (uint64_t *)&xmmword_25C49A8;
      break;
    case 0x5D:
      sub_7F6218(a1, (char **)a2, a1 + 152);
      return sub_7F68A8((std::string *)a1, a2);
    case 0x5E:
      unsigned int v4 = (uint64_t *)&xmmword_25C4E28;
      break;
    default:
      return sub_7F68A8((std::string *)a1, a2);
  }
  sub_6351E8((char **)a2, (uint64_t)v4);
  return sub_7F68A8((std::string *)a1, a2);
}

void sub_80FAA4(_Unwind_Exception *a1)
{
  sub_4D4880(v1);
  _Unwind_Resume(a1);
}

void sub_80FC34(std::string::size_type a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  sub_8A6F8((char *)a4, *(void *)(a1 + 8), *(void *)(a1 + 16), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)(a1 + 8)) >> 3));
  sub_5954B0(a4 + 24, a1 + 32);
  *(unsigned char *)(a4 + 64) = *(unsigned char *)(a1 + 72);
  sub_814CF8(a1, (uint64_t)&v55);
  if (*(unsigned char *)(a1 + 1853)) {
    sub_7FAE5C(a1, &v55);
  }
  std::string::size_type v8 = HIBYTE(v55.__r_.__value_.__r.__words[2]);
  if ((v55.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v9 = &v55;
  }
  else {
    uint64_t v9 = (std::string *)v55.__r_.__value_.__r.__words[0];
  }
  if (byte_25C54E7 >= 0) {
    BOOL v10 = &qword_25C54D0;
  }
  else {
    BOOL v10 = (uint64_t *)qword_25C54D0;
  }
  if (byte_25C54E7 >= 0) {
    int64_t v11 = byte_25C54E7;
  }
  else {
    int64_t v11 = *(void *)&word_25C54D8;
  }
  if (!v11)
  {
    unint64_t v15 = 0;
    int v16 = *(_DWORD *)(a1 + 1848);
    BOOL v17 = (v16 - 33) < 2 || v16 == 18;
    if (!v17) {
      goto LABEL_22;
    }
LABEL_42:
    if ((a2 & 1) == 0)
    {
      sub_7FB07C(a1, (uint64_t)&__p);
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      char v29 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type size = __p.__r_.__value_.__l.__size_;
      }
      if (size)
      {
        if (byte_25C58EF >= 0) {
          long long v30 = (const std::string::value_type *)&qword_25C58D8;
        }
        else {
          long long v30 = (const std::string::value_type *)qword_25C58D8;
        }
        if (byte_25C58EF >= 0) {
          std::string::size_type v31 = byte_25C58EF;
        }
        else {
          std::string::size_type v31 = qword_25C58E0;
        }
        std::string::append(&v55, v30, v31);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_p = &__p;
        }
        else {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v33 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type v33 = __p.__r_.__value_.__l.__size_;
        }
        std::string::append(&v55, (const std::string::value_type *)p_p, v33);
        char v29 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      if (v29 < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      goto LABEL_116;
    }
    goto LABEL_43;
  }
  if ((v55.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int64_t v12 = HIBYTE(v55.__r_.__value_.__r.__words[2]);
  }
  else {
    int64_t v12 = v55.__r_.__value_.__l.__size_;
  }
  uint64_t v13 = (char *)v9 + v12;
  if (v12 >= v11)
  {
    uint64_t v53 = a3;
    int v20 = *(char *)v10;
    uint64_t v21 = v9;
    do
    {
      int64_t v22 = v12 - v11;
      if (v22 == -1) {
        break;
      }
      unint64_t v23 = (char *)memchr(v21, v20, v22 + 1);
      if (!v23) {
        break;
      }
      unint64_t v14 = v23;
      if (!memcmp(v23, v10, v11)) {
        goto LABEL_33;
      }
      uint64_t v21 = (std::string *)(v14 + 1);
      int64_t v12 = v13 - (v14 + 1);
    }
    while (v12 >= v11);
    unint64_t v14 = v13;
LABEL_33:
    a3 = v53;
  }
  else
  {
    unint64_t v14 = (char *)v9 + v12;
  }
  if (v14 == v13) {
    unint64_t v15 = -1;
  }
  else {
    unint64_t v15 = v14 - (char *)v9;
  }
  int v16 = *(_DWORD *)(a1 + 1848);
  if ((v16 - 33) < 2 || v16 == 18) {
    goto LABEL_42;
  }
LABEL_22:
  if (v16 == 17 && *(unsigned char *)(a1 + 1856))
  {
    uint64_t v18 = *(unsigned __int8 ***)(a1 + 1968);
    char v19 = *((unsigned char *)v18 + 23);
    if ((v19 & 0x80000000) == 0)
    {
      if (!*((unsigned char *)v18 + 23)) {
        goto LABEL_43;
      }
LABEL_84:
      uint64_t v36 = a3;
      uint64_t v37 = qword_25C6328;
      uint64_t v38 = *(void *)algn_25C6330;
      if (qword_25C6328 == *(void *)algn_25C6330)
      {
LABEL_102:
        BOOL v17 = v37 == v38;
        a3 = v36;
        if (!v17)
        {
          if (byte_25C58EF >= 0) {
            v44 = (const std::string::value_type *)&qword_25C58D8;
          }
          else {
            v44 = (const std::string::value_type *)qword_25C58D8;
          }
          if (byte_25C58EF >= 0) {
            std::string::size_type v45 = byte_25C58EF;
          }
          else {
            std::string::size_type v45 = qword_25C58E0;
          }
          std::string::append(&v55, v44, v45);
          uint64_t v46 = *(void *)(a1 + 1968);
          int v47 = *(char *)(v46 + 23);
          if (v47 >= 0) {
            v48 = *(const std::string::value_type **)(a1 + 1968);
          }
          else {
            v48 = *(const std::string::value_type **)v46;
          }
          if (v47 >= 0) {
            std::string::size_type v49 = *(unsigned __int8 *)(v46 + 23);
          }
          else {
            std::string::size_type v49 = *(void *)(v46 + 8);
          }
          std::string::append(&v55, v48, v49);
          goto LABEL_116;
        }
      }
      else
      {
        if (v19 >= 0) {
          unsigned int v39 = (unsigned __int8 *)*((unsigned __int8 *)v18 + 23);
        }
        else {
          unsigned int v39 = v18[1];
        }
        if (v19 >= 0) {
          int v40 = *(unsigned __int8 **)(a1 + 1968);
        }
        else {
          int v40 = *v18;
        }
        do
        {
          uint64_t v41 = *(unsigned __int8 *)(v37 + 23);
          if ((v41 & 0x80u) == 0) {
            uint64_t v42 = (unsigned __int8 *)*(unsigned __int8 *)(v37 + 23);
          }
          else {
            uint64_t v42 = *(unsigned __int8 **)(v37 + 8);
          }
          if (v42 == v39)
          {
            if ((v41 & 0x80) != 0)
            {
              if (!memcmp(*(const void **)v37, v40, *(void *)(v37 + 8))) {
                goto LABEL_102;
              }
            }
            else
            {
              if (!*(unsigned char *)(v37 + 23)) {
                goto LABEL_102;
              }
              uint64_t v43 = 0;
              while (*(unsigned __int8 *)(v37 + v43) == v40[v43])
              {
                if (v41 == ++v43) {
                  goto LABEL_102;
                }
              }
            }
          }
          v37 += 24;
        }
        while (v37 != v38);
        a3 = v36;
      }
      goto LABEL_43;
    }
    if (v18[1]) {
      goto LABEL_84;
    }
  }
LABEL_43:
  if (v15 != -1
    && (*(unsigned char *)(a1 + 2120)
     || *(unsigned char *)(a1 + 2121)
     || *(unsigned char *)(a1 + 2124)
     || *(unsigned char *)(a1 + 2122)
     || *(unsigned char *)(a1 + 2123)))
  {
    if ((v8 & 0x80u) == 0) {
      std::string::size_type v25 = v8;
    }
    else {
      std::string::size_type v25 = v55.__r_.__value_.__l.__size_;
    }
    if (v25 >= v15) {
      std::string::size_type v26 = v15;
    }
    else {
      std::string::size_type v26 = v25;
    }
    if (v26 >= 0x7FFFFFFFFFFFFFF8) {
      sub_188D690();
    }
    if (v26 >= 0x17)
    {
      uint64_t v34 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v26 | 7) != 0x17) {
        uint64_t v34 = v26 | 7;
      }
      uint64_t v35 = v34 + 1;
      uint64_t v27 = (std::string *)operator new(v34 + 1);
      __p.__r_.__value_.__l.__size_ = v26;
      __p.__r_.__value_.__r.__words[2] = v35 | 0x8000000000000000;
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v27;
    }
    else
    {
      *((unsigned char *)&__p.__r_.__value_.__s + 23) = v26;
      uint64_t v27 = &__p;
      if (!v26)
      {
        __p.__r_.__value_.__s.__data_[0] = 0;
        if ((SHIBYTE(v55.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_59:
          std::string v55 = __p;
          goto LABEL_116;
        }
LABEL_82:
        operator delete(v55.__r_.__value_.__l.__data_);
        goto LABEL_59;
      }
    }
    memmove(v27, v9, v26);
    v27->__r_.__value_.__s.__data_[v26] = 0;
    if ((SHIBYTE(v55.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_82;
  }
LABEL_116:
  sub_814EB4(a1, (const void **)&v55.__r_.__value_.__l.__data_, a3, (uint64_t)&__p);
  sub_6353B4(a4, (std::string **)&__p);
  std::string::size_type v50 = __p.__r_.__value_.__r.__words[0];
  if (__p.__r_.__value_.__r.__words[0])
  {
    std::string::size_type v51 = __p.__r_.__value_.__l.__size_;
    uint64_t v52 = (void *)__p.__r_.__value_.__r.__words[0];
    if (__p.__r_.__value_.__l.__size_ != __p.__r_.__value_.__r.__words[0])
    {
      do
      {
        if (*(char *)(v51 - 1) < 0) {
          operator delete(*(void **)(v51 - 24));
        }
        v51 -= 24;
      }
      while (v51 != v50);
      uint64_t v52 = (void *)__p.__r_.__value_.__r.__words[0];
    }
    __p.__r_.__value_.__l.__size_ = v50;
    operator delete(v52);
  }
  if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v55.__r_.__value_.__l.__data_);
  }
}

void sub_8100E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if ((a21 & 0x80000000) == 0)
  {
    sub_4D4880(v21);
    _Unwind_Resume(a1);
  }
  operator delete(__p);
  sub_4D4880(v21);
  _Unwind_Resume(a1);
}

void sub_81019C(_Unwind_Exception *a1)
{
  sub_4D4880(v1);
  _Unwind_Resume(a1);
}

void sub_8101B0(_Unwind_Exception *exception_object)
{
  if (*v1) {
    sub_20AA4E4((uint64_t)v1, *v1);
  }
  _Unwind_Resume(exception_object);
}

std::string::size_type sub_8101CC(std::string::size_type a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6)
{
  return sub_80E174(a1, a2, a3, a4, a5, a6);
}

void sub_8101D4(std::string *a1, char **a2, unsigned __int8 a3)
{
  int v5 = a1[77].__r_.__value_.__s.__data_[12];
  memset(&v9, 0, sizeof(v9));
  if (((v5 != 0) & a3) != 0) {
    unint64_t v6 = &xmmword_25C5B30;
  }
  else {
    unint64_t v6 = &xmmword_25C5038;
  }
  if (a1[77].__r_.__value_.__s.__data_[8]) {
    int v7 = (const std::string *)&qword_25C4738;
  }
  else {
    int v7 = (const std::string *)v6;
  }
  std::string::operator=(&v9, v7);
  sub_6351E8(a2, (uint64_t)&v9);
  sub_635B18((uint64_t)a2, (uint64_t)&qword_25C5470, (long long *)&qword_25C6658, (uint64_t)&a1[12].__r_.__value_.__r.__words[2]);
  if (a1[77].__r_.__value_.__s.__data_[6] && a1[77].__r_.__value_.__s.__data_[8])
  {
    sub_635B18((uint64_t)a2, (uint64_t)&qword_25C5458, &xmmword_25C66D0, (uint64_t)&a1[6].__r_.__value_.__l.__size_);
    sub_635C08((uint64_t)a2, (long long *)&qword_25C6568, (uint64_t)&a1[6].__r_.__value_.__l.__size_, 1);
  }
  else
  {
    sub_818B40((uint64_t)a1, (uint64_t)a2, (uint64_t)&a1[6].__r_.__value_.__l.__size_, &a1[77].__r_.__value_.__r.__words[2]);
  }
  std::string::size_type v8 = (std::string **)nullsub_1(a2);
  sub_8191B8(a1, *v8);
  sub_7FF86C((uint64_t)a1, (long long **)a2, (uint64_t)&a1[77].__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v9.__r_.__value_.__l.__data_);
  }
}

void sub_81031C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_81033C(uint64_t a1, char **a2)
{
  if (*(unsigned char *)(a1 + 1856))
  {
    unsigned int v4 = &qword_25C4750;
  }
  else
  {
    unsigned int v5 = *(_DWORD *)(a1 + 1848);
    BOOL v6 = v5 > 0x23;
    uint64_t v7 = (1 << v5) & 0x804000010;
    if (v6 || v7 == 0) {
      unsigned int v4 = &qword_25C4750;
    }
    else {
      unsigned int v4 = (uint64_t *)&xmmword_25C5050;
    }
  }
  sub_6351E8(a2, (uint64_t)v4);

  sub_818B40(a1, (uint64_t)a2, a1 + 152, (void *)(a1 + 1864));
}

void sub_8103D4(uint64_t a1, char **a2)
{
  if (*(unsigned char *)(a1 + 1856)) {
    unsigned int v4 = (uint64_t *)&xmmword_25C4798;
  }
  else {
    unsigned int v4 = &qword_25C5068;
  }
  sub_6351E8(a2, (uint64_t)v4);

  sub_818B40(a1, (uint64_t)a2, a1 + 152, (void *)(a1 + 1864));
}

void sub_810438(uint64_t a1, char **a2)
{
  if (*(unsigned char *)(a1 + 1856)
    || ((unsigned int v8 = *(_DWORD *)(a1 + 1848), v9 = v8 > 0x23, v10 = (1 << v8) & 0x804000010, !v9)
      ? (BOOL v11 = v10 == 0)
      : (BOOL v11 = 1),
        v11))
  {
    int v4 = *(unsigned __int8 *)(*(void *)(a1 + 1960) + 1522);
    uint64_t v5 = 33;
    if (v4 == 11) {
      uint64_t v5 = 36;
    }
    BOOL v6 = &qword_25C4780;
    if (v4 != 11) {
      BOOL v6 = &qword_25C4768;
    }
    uint64_t v7 = &byte_25C477F;
    if (v4 == 11) {
      uint64_t v7 = &byte_25C4797;
    }
    if ((*v7 & 0x80000000) == 0)
    {
      *(_OWORD *)std::string __p = *(_OWORD *)v6;
      uint64_t v16 = v6[2];
      goto LABEL_22;
    }
    int64_t v12 = (void *)qword_25C4660[v5];
    if (v4 == 11) {
      uint64_t v13 = (unint64_t *)&dword_25C4788;
    }
    else {
      uint64_t v13 = (unint64_t *)&unk_25C4770;
    }
    unint64_t v14 = *v13;
  }
  else
  {
    if ((byte_25C5067 & 0x80000000) == 0)
    {
      *(_OWORD *)std::string __p = xmmword_25C5050;
      uint64_t v16 = unk_25C5060;
      goto LABEL_22;
    }
    unint64_t v14 = *((void *)&xmmword_25C5050 + 1);
    int64_t v12 = (void *)xmmword_25C5050;
  }
  sub_4200(__p, v12, v14);
LABEL_22:
  sub_6351E8(a2, (uint64_t)__p);
  if (SHIBYTE(v16) < 0) {
    operator delete(__p[0]);
  }
  sub_818B40(a1, (uint64_t)a2, a1 + 152, (void *)(a1 + 1864));
}

void sub_810574(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_810590(uint64_t a1, char **a2)
{
  int v4 = *(unsigned __int8 *)(*(void *)(a1 + 1960) + 1522);
  uint64_t v5 = 33;
  if (v4 == 11) {
    uint64_t v5 = 36;
  }
  BOOL v6 = (std::string *)&qword_25C4780;
  if (v4 != 11) {
    BOOL v6 = (std::string *)&qword_25C4768;
  }
  uint64_t v7 = &byte_25C477F;
  if (v4 == 11) {
    uint64_t v7 = &byte_25C4797;
  }
  if (*v7 < 0)
  {
    if (v4 == 11) {
      unsigned int v8 = (unint64_t *)&dword_25C4788;
    }
    else {
      unsigned int v8 = (unint64_t *)&unk_25C4770;
    }
    sub_4200(&v13, (void *)qword_25C4660[v5], *v8);
  }
  else
  {
    std::string v13 = *v6;
  }
  if (byte_25C47C7 >= 0) {
    BOOL v9 = (const std::string::value_type *)&qword_25C47B0;
  }
  else {
    BOOL v9 = (const std::string::value_type *)qword_25C47B0;
  }
  if (byte_25C47C7 >= 0) {
    std::string::size_type v10 = byte_25C47C7;
  }
  else {
    std::string::size_type v10 = unk_25C47B8;
  }
  BOOL v11 = std::string::append(&v13, v9, v10);
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  std::string::size_type v15 = v11->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  sub_6351E8(a2, (uint64_t)__p);
  if (SHIBYTE(v15) < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_21;
    }
LABEL_23:
    operator delete(v13.__r_.__value_.__l.__data_);
    goto LABEL_21;
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_23;
  }
LABEL_21:
  sub_818B40(a1, (uint64_t)a2, a1 + 152, (void *)(a1 + 1864));
}

void sub_8106C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
  {
    operator delete(__p);
    if ((a14 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a9);
  _Unwind_Resume(exception_object);
}

std::string *sub_81070C(std::string *a1, uint64_t a2, char **a3)
{
  sub_6351E8(a3, a2);
  if (a1[77].__r_.__value_.__s.__data_[12]) {
    sub_63581C((std::string **)a3, (const std::string::value_type *)&xmmword_25C5668);
  }
  sub_635B18((uint64_t)a3, (uint64_t)&qword_25C5470, (long long *)&qword_25C6658, (uint64_t)&a1[12].__r_.__value_.__r.__words[2]);
  if (a1[77].__r_.__value_.__s.__data_[6] && a1[77].__r_.__value_.__s.__data_[8])
  {
    sub_635B18((uint64_t)a3, (uint64_t)&qword_25C5458, &xmmword_25C66D0, (uint64_t)&a1[6].__r_.__value_.__l.__size_);
    sub_635C08((uint64_t)a3, (long long *)&qword_25C6568, (uint64_t)&a1[6].__r_.__value_.__l.__size_, 1);
  }
  else
  {
    sub_818B40((uint64_t)a1, (uint64_t)a3, (uint64_t)&a1[6].__r_.__value_.__l.__size_, &a1[77].__r_.__value_.__r.__words[2]);
  }
  uint64_t v5 = (std::string **)nullsub_1(a3);
  sub_8191B8(a1, *v5);
  sub_7FF86C((uint64_t)a1, (long long **)a3, (uint64_t)&a1[77].__r_.__value_.__r.__words[2]);

  return sub_800094(a1, (std::string **)a3);
}

void sub_810810(uint64_t a1, char **a2)
{
  if (*(unsigned char *)(a1 + 1855)) {
    int v4 = &qword_25C5128;
  }
  else {
    int v4 = (uint64_t *)&xmmword_25C49D8;
  }
  sub_6351E8(a2, (uint64_t)v4);

  sub_818B40(a1, (uint64_t)a2, a1 + 152, (void *)(a1 + 1864));
}

void sub_810874(uint64_t a1, char **a2)
{
  if (*(unsigned char *)(a1 + 1855)) {
    int v4 = &qword_25C5140;
  }
  else {
    int v4 = (uint64_t *)&xmmword_25C49F0;
  }
  sub_6351E8(a2, (uint64_t)v4);

  sub_818B40(a1, (uint64_t)a2, a1 + 152, (void *)(a1 + 1864));
}

void sub_8108D8(uint64_t a1, char **a2)
{
  sub_6351E8(a2, (uint64_t)&qword_25C4AE0);

  sub_8190C4(a1, (std::string **)a2);
}

void sub_810924(uint64_t a1, char **a2)
{
  sub_6351E8(a2, (uint64_t)&xmmword_25C4AF8);

  sub_8190C4(a1, (std::string **)a2);
}

void sub_810970(uint64_t a1, char **a2)
{
  sub_6351E8(a2, (uint64_t)&xmmword_25C4B10);

  sub_8190C4(a1, (std::string **)a2);
}

void sub_8109BC(uint64_t a1, char **a2)
{
  sub_6351E8(a2, (uint64_t)&xmmword_25C4B40);
  if (sub_6F2FD8(a1 + 152))
  {
    sub_818B40(a1, (uint64_t)a2, a1 + 152, (void *)(a1 + 1864));
  }
  else
  {
    uint64_t v4 = a1 + 304;
    if (sub_6F2FD8(v4))
    {
      sub_635B18((uint64_t)a2, (uint64_t)&qword_25C5470, (long long *)&qword_25C6658, v4);
    }
  }
}

void sub_810A80(uint64_t a1, char **a2)
{
  sub_6351E8(a2, (uint64_t)&xmmword_25C4B70);
  sub_635B18((uint64_t)a2, (uint64_t)&qword_25C5470, (long long *)&qword_25C6658, a1 + 304);
  if (*(unsigned char *)(a1 + 1854) && *(unsigned char *)(a1 + 1856))
  {
    uint64_t v4 = a1 + 152;
    sub_635B18((uint64_t)a2, (uint64_t)&qword_25C5458, &xmmword_25C66D0, v4);
    sub_635C08((uint64_t)a2, (long long *)&qword_25C6568, v4, 1);
  }
  else
  {
    sub_818B40(a1, (uint64_t)a2, a1 + 152, (void *)(a1 + 1864));
  }
}

void sub_810B5C(uint64_t a1, uint64_t a2, char **a3)
{
  if (*(unsigned char *)(a1 + 1856))
  {
    sub_6351E8(a3, a2);
    sub_635B18((uint64_t)a3, (uint64_t)&qword_25C5470, (long long *)&qword_25C6658, a1 + 304);
    if (*(unsigned char *)(a1 + 1854) && *(unsigned char *)(a1 + 1856))
    {
      uint64_t v5 = a1 + 152;
      sub_635B18((uint64_t)a3, (uint64_t)&qword_25C5458, &xmmword_25C66D0, v5);
      sub_635C08((uint64_t)a3, (long long *)&qword_25C6568, v5, 1);
      return;
    }
  }
  else
  {
    int v6 = *(_DWORD *)(a1 + 1848);
    uint64_t v7 = &qword_25C5110;
    if (v6 != 87) {
      uint64_t v7 = &qword_25C50E0;
    }
    if (v6 == 86) {
      unsigned int v8 = &qword_25C50F8;
    }
    else {
      unsigned int v8 = v7;
    }
    sub_6351E8(a3, (uint64_t)v8);
  }

  sub_818B40(a1, (uint64_t)a3, a1 + 152, (void *)(a1 + 1864));
}

void sub_810C58(uint64_t a1, char **a2)
{
  int v4 = *(_DWORD *)(a1 + 1848);
  uint64_t v5 = &qword_25C5110;
  if (v4 != 87) {
    uint64_t v5 = &qword_25C50E0;
  }
  if (v4 == 86) {
    int v6 = &qword_25C50F8;
  }
  else {
    int v6 = v5;
  }
  sub_6351E8(a2, (uint64_t)v6);

  sub_818B40(a1, (uint64_t)a2, a1 + 152, (void *)(a1 + 1864));
}

void sub_810CC8(uint64_t a1, uint64_t a2, char **a3)
{
  sub_6351E8(a3, a2);
  sub_635B18((uint64_t)a3, (uint64_t)&qword_25C5548, &xmmword_25C6748, a1 + 456);
  sub_635B18((uint64_t)a3, (uint64_t)&qword_25C5470, (long long *)&qword_25C6658, a1 + 304);

  sub_818F20(a1, (uint64_t)a3);
}

void sub_810D4C(uint64_t a1, uint64_t a2, char **a3)
{
  sub_6351E8(a3, a2);
  sub_635B18((uint64_t)a3, (uint64_t)&qword_25C5548, &xmmword_25C6748, a1 + 456);
  sub_635B18((uint64_t)a3, (uint64_t)&qword_25C5470, (long long *)&qword_25C6658, a1 + 304);
  if (*(unsigned char *)(a1 + 1854) && *(unsigned char *)(a1 + 1856))
  {
    uint64_t v5 = a1 + 152;
    sub_635B18((uint64_t)a3, (uint64_t)&qword_25C5458, &xmmword_25C66D0, v5);
    sub_635C08((uint64_t)a3, (long long *)&qword_25C6568, v5, 1);
  }
  else
  {
    sub_818B40(a1, (uint64_t)a3, a1 + 152, (void *)(a1 + 1864));
  }
}

uint64_t sub_810E3C@<X0>(uint64_t a1@<X8>)
{
  return sub_6352AC(a1, (uint64_t)&xmmword_25C4E58);
}

void sub_810E4C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  sub_8A6F8((char *)a2, *(void *)(a1 + 8), *(void *)(a1 + 16), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)(a1 + 8)) >> 3));
  sub_5954B0(a2 + 24, a1 + 32);
  *(unsigned char *)(a2 + 64) = *(unsigned char *)(a1 + 72);
  sub_635CD0((long long **)a2, (uint64_t)&v6);
  if (byte_25C57E7 >= 0) {
    int v4 = (const std::string::value_type *)&qword_25C57D0;
  }
  else {
    int v4 = (const std::string::value_type *)qword_25C57D0;
  }
  if (byte_25C57E7 >= 0) {
    std::string::size_type v5 = byte_25C57E7;
  }
  else {
    std::string::size_type v5 = unk_25C57D8;
  }
  std::string::append(&v6, v4, v5);
  sub_6351E8((char **)a2, (uint64_t)&v6);
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
}

void sub_810F14(_Unwind_Exception *a1)
{
  sub_4D4880(v1);
  _Unwind_Resume(a1);
}

void sub_810F28(_Unwind_Exception *exception_object)
{
  if (*v1) {
    sub_20AA4E4((uint64_t)v1, *v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_810F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_4D4880(v15);
  _Unwind_Resume(a1);
}

void sub_810F68(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void **__return_ptr))(*(void *)a1 + 24))(&v12);
  uint64_t v10 = 0;
  BOOL v11 = 0;
  sub_6370D4(a2, &v12, 1, &v10);
  unsigned int v3 = v11;
  if (v11 && !atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  int v4 = v15;
  if (v15)
  {
    do
    {
      std::string::size_type v5 = (void *)*v4;
      sub_4F4B48((uint64_t)(v4 + 2));
      operator delete(v4);
      int v4 = v5;
    }
    while (v5);
  }
  std::string v6 = __p;
  std::string __p = 0;
  if (v6) {
    operator delete(v6);
  }
  uint64_t v7 = (void **)v12;
  if (v12)
  {
    unsigned int v8 = v13;
    BOOL v9 = v12;
    if (v13 != v12)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      BOOL v9 = v12;
    }
    std::string v13 = v7;
    operator delete(v9);
  }
}

void sub_811094(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  sub_14A84((uint64_t)va);
  sub_4D4880((void **)va1);
  _Unwind_Resume(a1);
}

void sub_8110B0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (byte_25C5C50[23] < 0) {
    sub_4200(&__dst, *(void **)byte_25C5C50, *(unint64_t *)&byte_25C5C50[8]);
  }
  else {
    std::string __dst = *(std::string *)byte_25C5C50;
  }
  sub_8112A4(a1 + 608, (uint64_t)&v16);
  if (!v18)
  {
    *(void *)(a2 + 64) = 0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_DWORD *)(a2 + 56) = 1065353216;
    *(unsigned char *)(a2 + 64) = 1;
    BOOL v11 = v17;
    if (!v17) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (byte_25C5457 >= 0) {
    int v4 = (const std::string::value_type *)&xmmword_25C5440;
  }
  else {
    int v4 = (const std::string::value_type *)xmmword_25C5440;
  }
  if (byte_25C5457 >= 0) {
    std::string::size_type v5 = byte_25C5457;
  }
  else {
    std::string::size_type v5 = *((void *)&xmmword_25C5440 + 1);
  }
  std::string::append(&__dst, v4, v5);
  if (byte_25C57B7 >= 0) {
    std::string v6 = (const std::string::value_type *)&qword_25C57A0;
  }
  else {
    std::string v6 = (const std::string::value_type *)qword_25C57A0;
  }
  if (byte_25C57B7 >= 0) {
    std::string::size_type v7 = byte_25C57B7;
  }
  else {
    std::string::size_type v7 = qword_25C57A8;
  }
  std::string::append(&__dst, v6, v7);
  sub_8112A4(a1 + 608, (uint64_t)__p);
  sub_63531C(a2, (uint64_t)&__dst, (uint64_t)__p);
  unsigned int v8 = v15;
  if (v15)
  {
    do
    {
      BOOL v9 = (void *)*v8;
      sub_4F4B48((uint64_t)(v8 + 2));
      operator delete(v8);
      unsigned int v8 = v9;
    }
    while (v9);
  }
  uint64_t v10 = __p[0];
  __p[0] = 0;
  if (v10) {
    operator delete(v10);
  }
  BOOL v11 = v17;
  if (v17)
  {
    do
    {
LABEL_22:
      long long v12 = (void *)*v11;
      sub_4F4B48((uint64_t)(v11 + 2));
      operator delete(v11);
      BOOL v11 = v12;
    }
    while (v12);
  }
LABEL_23:
  std::string v13 = v16;
  uint64_t v16 = 0;
  if (v13) {
    operator delete(v13);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_811264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  sub_4DD068((uint64_t)&a9);
  sub_4DD068((uint64_t)&a14);
  if (*(char *)(v14 - 41) < 0) {
    operator delete(*(void **)(v14 - 64));
  }
  _Unwind_Resume(a1);
}

std::string *sub_8112A4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_DWORD *)(a2 + 32) = 1065353216;
  __n128 result = (std::string *)sub_6F2FD8(a1);
  if (result)
  {
    std::string v6 = &xmmword_25C6670;
    std::string::size_type v5 = sub_617978(a2, (uint64_t)&xmmword_25C6670, (uint64_t)&unk_20F06E0, &v6);
    std::string::operator=((std::string *)(v5 + 5), (const std::string *)a1);
    v5[8] = *(void *)(a1 + 24);
    std::string::operator=((std::string *)v5 + 3, (const std::string *)(a1 + 32));
    v5[12] = *(void *)(a1 + 56);
    *((_DWORD *)v5 + 26) = *(_DWORD *)(a1 + 64);
    std::string::operator=((std::string *)(v5 + 14), (const std::string *)(a1 + 72));
    std::string::operator=((std::string *)(v5 + 17), (const std::string *)(a1 + 96));
    *((_DWORD *)v5 + 40) = *(_DWORD *)(a1 + 120);
    return std::string::operator=((std::string *)v5 + 7, (const std::string *)(a1 + 128));
  }
  return result;
}

void sub_811378(_Unwind_Exception *a1)
{
  sub_4DD068(v1);
  _Unwind_Resume(a1);
}

void sub_81138C(uint64_t a1@<X0>, int a2@<W1>, std::string *a3@<X8>)
{
  unsigned int v5 = *(_DWORD *)(a1 + 1848);
  BOOL v6 = v5 > 0x22 || ((1 << v5) & 0x600040000) == 0;
  if (!v6 || v5 - 82 <= 2)
  {
    sub_8115CC(a1, a3);
    return;
  }
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  uint64_t v8 = *(void *)(a1 + 936);
  uint64_t v9 = *(void *)(a1 + 944);
  if (v8 != v9)
  {
    if (v9 - v8 == 152) {
      goto LABEL_11;
    }
LABEL_15:
    unsigned int v12 = *(_DWORD *)(a1 + 1848);
    if (((1 << v12) & 0x60000800) != 0) {
      int v13 = a2;
    }
    else {
      int v13 = 1;
    }
    if (v12 <= 0x1E) {
      int v10 = v13;
    }
    else {
      int v10 = 1;
    }
    if (*(unsigned char *)(a1 + 2122)) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
  if (!sub_6F2FD8(a1 + 304)) {
    return;
  }
  if (*(void *)(a1 + 944) - *(void *)(a1 + 936) != 152) {
    goto LABEL_15;
  }
LABEL_11:
  int v10 = 1;
  if (*(unsigned char *)(a1 + 2122))
  {
LABEL_12:
    BOOL v11 = &xmmword_25C5230;
    goto LABEL_29;
  }
LABEL_22:
  if (*(unsigned char *)(a1 + 2123))
  {
    BOOL v11 = &xmmword_25C5248;
  }
  else if (*(unsigned char *)(a1 + 2121))
  {
    BOOL v11 = &xmmword_25C5218;
  }
  else if (*(unsigned char *)(a1 + 2120))
  {
    BOOL v11 = (long long *)&dword_25C5200;
  }
  else
  {
    BOOL v11 = (long long *)&dword_25C51E8;
  }
LABEL_29:
  if (*((char *)v11 + 23) < 0)
  {
    sub_4200(__p, *(void **)v11, *((void *)v11 + 1));
  }
  else
  {
    *(_OWORD *)std::string __p = *v11;
    uint64_t v18 = *((void *)v11 + 2);
  }
  if (v10) {
    uint64_t v14 = (const std::string *)__p;
  }
  else {
    uint64_t v14 = (const std::string *)&dword_25C5260;
  }
  std::string::operator=(a3, v14);
  if (((v10 | a2) & 1) == 0)
  {
    if (byte_25C54B7 >= 0) {
      std::string::size_type v15 = (const std::string::value_type *)&qword_25C54A0;
    }
    else {
      std::string::size_type v15 = (const std::string::value_type *)qword_25C54A0;
    }
    if (byte_25C54B7 >= 0) {
      std::string::size_type v16 = byte_25C54B7;
    }
    else {
      std::string::size_type v16 = unk_25C54A8;
    }
    std::string::append(a3, v15, v16);
  }
  if (SHIBYTE(v18) < 0) {
    operator delete(__p[0]);
  }
}

void sub_81157C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if ((*(char *)(v14 + 23) & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(*(void **)v14);
  _Unwind_Resume(exception_object);
}

void sub_8115CC(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t)a2;
  if ((*(_DWORD *)(a1 + 1848) - 82) > 2)
  {
    int v4 = sub_819668(a1);
    if (*((char *)v4 + 23) < 0)
    {
      sub_4200(__p, *(void **)v4, *((void *)v4 + 1));
      int v6 = SHIBYTE(v82);
      if (v82 >= 0) {
        size_t v7 = HIBYTE(v82);
      }
      else {
        size_t v7 = (size_t)__p[1];
      }
      if (v7)
      {
LABEL_10:
        uint64_t v8 = *(void *)(a1 + 1960);
        if (*(unsigned char *)(v8 + 1524) && !*(unsigned char *)(v8 + 1522) && *(unsigned char *)(a1 + 1409) && *(_DWORD *)(a1 + 2128) == 1)
        {
          int v18 = *(_DWORD *)(a1 + 1848);
          if (v18 == 34)
          {
            int v19 = byte_25C4A97;
            if (byte_25C4A97 >= 0) {
              size_t v20 = byte_25C4A97;
            }
            else {
              size_t v20 = *((void *)&xmmword_25C4A80 + 1);
            }
            int v21 = byte_25C58EF;
            if (byte_25C58EF >= 0) {
              size_t v22 = byte_25C58EF;
            }
            else {
              size_t v22 = qword_25C58E0;
            }
            unint64_t v63 = v22 + v20;
            if (v22 + v20 <= 0x7FFFFFFFFFFFFFF7)
            {
              if (v63 > 0x16)
              {
                uint64_t v68 = (v63 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v63 | 7) != 0x17) {
                  uint64_t v68 = v63 | 7;
                }
                uint64_t v69 = v68 + 1;
                unint64_t v24 = (char *)operator new(v68 + 1);
                v79[1] = (void *)(v22 + v20);
                int64_t v80 = v69 | 0x8000000000000000;
                v79[0] = v24;
              }
              else
              {
                v79[1] = 0;
                int64_t v80 = 0;
                v79[0] = 0;
                unint64_t v24 = (char *)v79;
                HIBYTE(v80) = v22 + v20;
              }
              if (v20)
              {
                v67 = &xmmword_25C4A80;
                goto LABEL_189;
              }
LABEL_193:
              v73 = &v24[v20];
              if (v22)
              {
                if (v21 >= 0) {
                  v74 = &qword_25C58D8;
                }
                else {
                  v74 = (uint64_t *)qword_25C58D8;
                }
                memmove(v73, v74, v22);
              }
              v73[v22] = 0;
              int v43 = SHIBYTE(v80);
              if (v80 >= 0) {
                size_t v44 = HIBYTE(v80);
              }
              else {
                size_t v44 = (size_t)v79[1];
              }
              unint64_t v75 = v7 + v44;
              if (v7 + v44 > 0x7FFFFFFFFFFFFFF7) {
                sub_188D690();
              }
              if (v75 > 0x16)
              {
                uint64_t v76 = (v75 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v75 | 7) != 0x17) {
                  uint64_t v76 = v75 | 7;
                }
                uint64_t v77 = v76 + 1;
                v78 = operator new(v76 + 1);
                *(void *)(v3 + 8) = v75;
                *(void *)(v3 + 16) = v77 | 0x8000000000000000;
                *(void *)uint64_t v3 = v78;
                uint64_t v3 = (uint64_t)v78;
              }
              else
              {
                *(void *)(v3 + 8) = 0;
                *(void *)(v3 + 16) = 0;
                *(void *)uint64_t v3 = 0;
                *(unsigned char *)(v3 + 23) = v75;
              }
              if (!v44) {
                goto LABEL_109;
              }
              goto LABEL_105;
            }
          }
          else if (v18 == 33)
          {
            int v19 = byte_25C4A7F;
            if (byte_25C4A7F >= 0) {
              size_t v20 = byte_25C4A7F;
            }
            else {
              size_t v20 = *((void *)&xmmword_25C4A68 + 1);
            }
            int v21 = byte_25C58EF;
            if (byte_25C58EF >= 0) {
              size_t v22 = byte_25C58EF;
            }
            else {
              size_t v22 = qword_25C58E0;
            }
            unint64_t v23 = v22 + v20;
            if (v22 + v20 <= 0x7FFFFFFFFFFFFFF7)
            {
              if (v23 > 0x16)
              {
                uint64_t v65 = (v23 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v23 | 7) != 0x17) {
                  uint64_t v65 = v23 | 7;
                }
                uint64_t v66 = v65 + 1;
                unint64_t v24 = (char *)operator new(v65 + 1);
                v79[1] = (void *)(v22 + v20);
                int64_t v80 = v66 | 0x8000000000000000;
                v79[0] = v24;
              }
              else
              {
                v79[1] = 0;
                int64_t v80 = 0;
                v79[0] = 0;
                unint64_t v24 = (char *)v79;
                HIBYTE(v80) = v22 + v20;
              }
              if (v20)
              {
                v67 = &xmmword_25C4A68;
LABEL_189:
                if (v19 >= 0) {
                  v72 = v67;
                }
                else {
                  v72 = *(long long **)v67;
                }
                memmove(v24, v72, v20);
                goto LABEL_193;
              }
              goto LABEL_193;
            }
          }
          else
          {
            int v19 = byte_25C4A67;
            if (byte_25C4A67 >= 0) {
              size_t v20 = byte_25C4A67;
            }
            else {
              size_t v20 = qword_25C4A58;
            }
            int v21 = byte_25C58EF;
            if (byte_25C58EF >= 0) {
              size_t v22 = byte_25C58EF;
            }
            else {
              size_t v22 = qword_25C58E0;
            }
            unint64_t v64 = v22 + v20;
            if (v22 + v20 <= 0x7FFFFFFFFFFFFFF7)
            {
              if (v64 > 0x16)
              {
                uint64_t v70 = (v64 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v64 | 7) != 0x17) {
                  uint64_t v70 = v64 | 7;
                }
                uint64_t v71 = v70 + 1;
                unint64_t v24 = (char *)operator new(v70 + 1);
                v79[1] = (void *)(v22 + v20);
                int64_t v80 = v71 | 0x8000000000000000;
                v79[0] = v24;
              }
              else
              {
                v79[1] = 0;
                int64_t v80 = 0;
                v79[0] = 0;
                unint64_t v24 = (char *)v79;
                HIBYTE(v80) = v22 + v20;
              }
              if (v20)
              {
                v67 = (long long *)&qword_25C4A50;
                goto LABEL_189;
              }
              goto LABEL_193;
            }
          }
          sub_188D690();
        }
        if (*(unsigned char *)(a1 + 1409))
        {
          int v9 = *(_DWORD *)(a1 + 1848);
          if (v9 == 34)
          {
            int v10 = byte_25C4ADF;
            if (byte_25C4ADF >= 0) {
              size_t v11 = byte_25C4ADF;
            }
            else {
              size_t v11 = *((void *)&xmmword_25C4AC8 + 1);
            }
            int v12 = byte_25C58EF;
            if (byte_25C58EF >= 0) {
              size_t v13 = byte_25C58EF;
            }
            else {
              size_t v13 = qword_25C58E0;
            }
            unint64_t v25 = v13 + v11;
            if (v13 + v11 <= 0x7FFFFFFFFFFFFFF7)
            {
              if (v25 > 0x16)
              {
                uint64_t v36 = (v25 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v25 | 7) != 0x17) {
                  uint64_t v36 = v25 | 7;
                }
                uint64_t v37 = v36 + 1;
                std::string::size_type v15 = (char *)operator new(v36 + 1);
                v79[1] = (void *)(v13 + v11);
                int64_t v80 = v37 | 0x8000000000000000;
                v79[0] = v15;
              }
              else
              {
                v79[1] = 0;
                int64_t v80 = 0;
                v79[0] = 0;
                std::string::size_type v15 = (char *)v79;
                HIBYTE(v80) = v13 + v11;
              }
              if (v11)
              {
                uint64_t v35 = &xmmword_25C4AC8;
                goto LABEL_90;
              }
LABEL_94:
              uint64_t v41 = &v15[v11];
              if (v13)
              {
                if (v12 >= 0) {
                  uint64_t v42 = &qword_25C58D8;
                }
                else {
                  uint64_t v42 = (uint64_t *)qword_25C58D8;
                }
                memmove(v41, v42, v13);
              }
              v41[v13] = 0;
              int v43 = SHIBYTE(v80);
              if (v80 >= 0) {
                size_t v44 = HIBYTE(v80);
              }
              else {
                size_t v44 = (size_t)v79[1];
              }
              unint64_t v45 = v7 + v44;
              if (v7 + v44 > 0x7FFFFFFFFFFFFFF7) {
                sub_188D690();
              }
              if (v45 > 0x16)
              {
                uint64_t v48 = (v45 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v45 | 7) != 0x17) {
                  uint64_t v48 = v45 | 7;
                }
                uint64_t v49 = v48 + 1;
                std::string::size_type v50 = operator new(v48 + 1);
                *(void *)(v3 + 8) = v45;
                *(void *)(v3 + 16) = v49 | 0x8000000000000000;
                *(void *)uint64_t v3 = v50;
                uint64_t v3 = (uint64_t)v50;
                if (!v44) {
                  goto LABEL_109;
                }
              }
              else
              {
                *(void *)(v3 + 8) = 0;
                *(void *)(v3 + 16) = 0;
                *(void *)uint64_t v3 = 0;
                *(unsigned char *)(v3 + 23) = v45;
                if (!v44)
                {
LABEL_109:
                  int v47 = (void *)(v3 + v44);
LABEL_142:
                  if (v6 >= 0) {
                    char v59 = __p;
                  }
                  else {
                    char v59 = (void **)__p[0];
                  }
                  memmove(v47, v59, v7);
LABEL_146:
                  *((unsigned char *)v47 + v7) = 0;
                  if (v43 < 0)
                  {
                    operator delete(v79[0]);
                    if ((SHIBYTE(v82) & 0x80000000) == 0) {
                      return;
                    }
LABEL_148:
                    operator delete(__p[0]);
                    return;
                  }
LABEL_147:
                  if ((SHIBYTE(v82) & 0x80000000) == 0) {
                    return;
                  }
                  goto LABEL_148;
                }
              }
LABEL_105:
              if (v43 >= 0) {
                uint64_t v46 = v79;
              }
              else {
                uint64_t v46 = (void **)v79[0];
              }
              memmove((void *)v3, v46, v44);
              goto LABEL_109;
            }
          }
          else if (v9 == 33)
          {
            int v10 = byte_25C4AC7;
            if (byte_25C4AC7 >= 0) {
              size_t v11 = byte_25C4AC7;
            }
            else {
              size_t v11 = *((void *)&xmmword_25C4AB0 + 1);
            }
            int v12 = byte_25C58EF;
            if (byte_25C58EF >= 0) {
              size_t v13 = byte_25C58EF;
            }
            else {
              size_t v13 = qword_25C58E0;
            }
            unint64_t v14 = v13 + v11;
            if (v13 + v11 <= 0x7FFFFFFFFFFFFFF7)
            {
              if (v14 > 0x16)
              {
                uint64_t v33 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v14 | 7) != 0x17) {
                  uint64_t v33 = v14 | 7;
                }
                uint64_t v34 = v33 + 1;
                std::string::size_type v15 = (char *)operator new(v33 + 1);
                v79[1] = (void *)(v13 + v11);
                int64_t v80 = v34 | 0x8000000000000000;
                v79[0] = v15;
              }
              else
              {
                v79[1] = 0;
                int64_t v80 = 0;
                v79[0] = 0;
                std::string::size_type v15 = (char *)v79;
                HIBYTE(v80) = v13 + v11;
              }
              if (v11)
              {
                uint64_t v35 = &xmmword_25C4AB0;
LABEL_90:
                if (v10 >= 0) {
                  int v40 = v35;
                }
                else {
                  int v40 = *(long long **)v35;
                }
                memmove(v15, v40, v11);
                goto LABEL_94;
              }
              goto LABEL_94;
            }
          }
          else
          {
            int v10 = byte_25C4AAF;
            if (byte_25C4AAF >= 0) {
              size_t v11 = byte_25C4AAF;
            }
            else {
              size_t v11 = qword_25C4AA0;
            }
            int v12 = byte_25C58EF;
            if (byte_25C58EF >= 0) {
              size_t v13 = byte_25C58EF;
            }
            else {
              size_t v13 = qword_25C58E0;
            }
            unint64_t v26 = v13 + v11;
            if (v13 + v11 <= 0x7FFFFFFFFFFFFFF7)
            {
              if (v26 > 0x16)
              {
                uint64_t v38 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v26 | 7) != 0x17) {
                  uint64_t v38 = v26 | 7;
                }
                uint64_t v39 = v38 + 1;
                std::string::size_type v15 = (char *)operator new(v38 + 1);
                v79[1] = (void *)(v13 + v11);
                int64_t v80 = v39 | 0x8000000000000000;
                v79[0] = v15;
              }
              else
              {
                v79[1] = 0;
                int64_t v80 = 0;
                v79[0] = 0;
                std::string::size_type v15 = (char *)v79;
                HIBYTE(v80) = v13 + v11;
              }
              if (v11)
              {
                uint64_t v35 = (long long *)&qword_25C4A98;
                goto LABEL_90;
              }
              goto LABEL_94;
            }
          }
          sub_188D690();
        }
        int v16 = *(_DWORD *)(a1 + 1848);
        if (v16 == 34)
        {
          BOOL v17 = &xmmword_25C5320;
          if ((SHIBYTE(qword_25C5330) & 0x80000000) == 0) {
            goto LABEL_32;
          }
        }
        else
        {
          if (v16 != 33)
          {
            int v27 = byte_25C4A1F;
            if (byte_25C4A1F >= 0) {
              size_t v28 = byte_25C4A1F;
            }
            else {
              size_t v28 = qword_25C4A10;
            }
            int v29 = byte_25C58EF;
            if (byte_25C58EF >= 0) {
              size_t v30 = byte_25C58EF;
            }
            else {
              size_t v30 = qword_25C58E0;
            }
            unint64_t v31 = v30 + v28;
            if (v30 + v28 > 0x7FFFFFFFFFFFFFF7) {
              sub_188D690();
            }
            if (v31 > 0x16)
            {
              uint64_t v51 = (v31 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v31 | 7) != 0x17) {
                uint64_t v51 = v31 | 7;
              }
              uint64_t v52 = v51 + 1;
              uint64_t v32 = (char *)operator new(v51 + 1);
              v79[1] = (void *)(v30 + v28);
              int64_t v80 = v52 | 0x8000000000000000;
              v79[0] = v32;
            }
            else
            {
              v79[1] = 0;
              int64_t v80 = 0;
              v79[0] = 0;
              uint64_t v32 = (char *)v79;
              HIBYTE(v80) = v30 + v28;
            }
            if (v28)
            {
              if (v27 >= 0) {
                uint64_t v53 = &qword_25C4A08;
              }
              else {
                uint64_t v53 = (uint64_t *)qword_25C4A08;
              }
              memmove(v32, v53, v28);
            }
            int64_t v54 = &v32[v28];
            if (v30)
            {
              if (v29 >= 0) {
                std::string v55 = &qword_25C58D8;
              }
              else {
                std::string v55 = (uint64_t *)qword_25C58D8;
              }
              memmove(v54, v55, v30);
            }
            v54[v30] = 0;
LABEL_128:
            int v43 = SHIBYTE(v80);
            if (v80 >= 0) {
              size_t v56 = HIBYTE(v80);
            }
            else {
              size_t v56 = (size_t)v79[1];
            }
            int v6 = SHIBYTE(v82);
            if (v82 >= 0) {
              size_t v7 = HIBYTE(v82);
            }
            else {
              size_t v7 = (size_t)__p[1];
            }
            unint64_t v57 = v7 + v56;
            if (v7 + v56 > 0x7FFFFFFFFFFFFFF7) {
              sub_188D690();
            }
            if (v57 > 0x16)
            {
              uint64_t v60 = (v57 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v57 | 7) != 0x17) {
                uint64_t v60 = v57 | 7;
              }
              uint64_t v61 = v60 + 1;
              uint64_t v62 = operator new(v60 + 1);
              *(void *)(v3 + 8) = v57;
              *(void *)(v3 + 16) = v61 | 0x8000000000000000;
              *(void *)uint64_t v3 = v62;
              uint64_t v3 = (uint64_t)v62;
              if (!v56)
              {
LABEL_141:
                int v47 = (void *)(v3 + v56);
                if (!v7) {
                  goto LABEL_146;
                }
                goto LABEL_142;
              }
            }
            else
            {
              *(void *)(v3 + 8) = 0;
              *(void *)(v3 + 16) = 0;
              *(void *)uint64_t v3 = 0;
              *(unsigned char *)(v3 + 23) = v57;
              if (!v56) {
                goto LABEL_141;
              }
            }
            if (v43 >= 0) {
              uint64_t v58 = v79;
            }
            else {
              uint64_t v58 = (void **)v79[0];
            }
            memmove((void *)v3, v58, v56);
            goto LABEL_141;
          }
          BOOL v17 = &xmmword_25C5338;
          if ((byte_25C534F & 0x80000000) == 0)
          {
LABEL_32:
            *(_OWORD *)v79 = *v17;
            int64_t v80 = *((void *)v17 + 2);
            goto LABEL_128;
          }
        }
        sub_4200(v79, *(void **)v17, *((void *)v17 + 1));
        goto LABEL_128;
      }
    }
    else
    {
      long long v5 = *v4;
      int64_t v82 = *((void *)v4 + 2);
      *(_OWORD *)std::string __p = v5;
      int v6 = SHIBYTE(v82);
      if (v82 >= 0) {
        size_t v7 = HIBYTE(v82);
      }
      else {
        size_t v7 = *((void *)&v5 + 1);
      }
      if (v7) {
        goto LABEL_10;
      }
    }
    sub_814258(a1, v3);
    goto LABEL_147;
  }

  sub_81978C(a1, a2);
}

void sub_811F10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

BOOL sub_811F70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a2 + 23);
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *(void *)(a2 + 8);
  }
  return v2 != 0;
}

std::string *sub_811F90@<X0>(std::string *result@<X0>, char a2@<W1>, std::string *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  std::string::pointer data = result[40].__r_.__value_.__l.__data_;
  std::string::size_type size = result[40].__r_.__value_.__l.__size_;
  if (data != (std::string::pointer)size)
  {
    __n128 result = std::string::operator=(a3, (const std::string *)&qword_25C5278);
    if (size - (void)data != 152 && (a2 & 1) == 0)
    {
      if (byte_25C54E7 >= 0) {
        size_t v7 = (const std::string::value_type *)&qword_25C54D0;
      }
      else {
        size_t v7 = (const std::string::value_type *)qword_25C54D0;
      }
      if (byte_25C54E7 >= 0) {
        std::string::size_type v8 = byte_25C54E7;
      }
      else {
        std::string::size_type v8 = *(void *)&word_25C54D8;
      }
      return std::string::append(a3, v7, v8);
    }
  }
  return result;
}

void sub_81201C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_812038(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_81206C(_Unwind_Exception *a1)
{
  sub_4D4880(v1);
  _Unwind_Resume(a1);
}

void sub_812080(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a1;
  p_p = &__p;
  uint64_t v260 = a1 + 8;
  sub_635CD0((long long **)(a1 + 8), (uint64_t)&__p);
  std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  LODWORD(v5) = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  std::string::size_type v6 = __p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if (byte_25C5487 >= 0) {
    size_t v7 = &qword_25C5470;
  }
  else {
    size_t v7 = (uint64_t *)qword_25C5470;
  }
  if (byte_25C5487 >= 0) {
    int64_t v8 = byte_25C5487;
  }
  else {
    int64_t v8 = unk_25C5478;
  }
  uint64_t v261 = v2;
  if (*(unsigned char *)(v2 + 1856))
  {
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    if (v8)
    {
      if ((uint64_t)size >= v8)
      {
        int v9 = (char *)p_p + size;
        int v10 = *(char *)v7;
        int64_t v11 = size;
        int v12 = p_p;
        while (1)
        {
          int64_t v13 = v11 - v8;
          if (v13 == -1) {
            goto LABEL_47;
          }
          unint64_t v14 = (char *)memchr(v12, v10, v13 + 1);
          if (!v14) {
            goto LABEL_47;
          }
          std::string::size_type v15 = v14;
          if (!memcmp(v14, v7, v8)) {
            break;
          }
          int v12 = (std::string *)(v15 + 1);
          int64_t v11 = v9 - (v15 + 1);
          if (v11 < v8) {
            goto LABEL_47;
          }
        }
        if (v15 == v9)
        {
LABEL_47:
          uint64_t v2 = v261;
          goto LABEL_48;
        }
        int64_t v23 = v15 - (char *)p_p;
        uint64_t v2 = v261;
        if (v15 - (char *)p_p != -1) {
          goto LABEL_31;
        }
      }
LABEL_48:
      if (byte_25C5457 >= 0) {
        int v29 = &xmmword_25C5440;
      }
      else {
        int v29 = (long long *)xmmword_25C5440;
      }
      if (byte_25C5457 >= 0) {
        int64_t v30 = byte_25C5457;
      }
      else {
        int64_t v30 = *((void *)&xmmword_25C5440 + 1);
      }
      if ((v5 & 0x80u) == 0) {
        unint64_t v31 = &__p;
      }
      else {
        unint64_t v31 = (std::string *)v6;
      }
      if ((v5 & 0x80u) == 0) {
        std::string::size_type v32 = v5;
      }
      else {
        std::string::size_type v32 = __p.__r_.__value_.__l.__size_;
      }
      if (v30)
      {
        if ((uint64_t)v32 >= v30)
        {
          uint64_t v33 = (char *)v31 + v32;
          int v34 = *(char *)v29;
          int64_t v35 = v32;
          uint64_t v36 = v31;
          while (1)
          {
            int64_t v37 = v35 - v30;
            if (v37 == -1) {
              goto LABEL_85;
            }
            uint64_t v38 = (char *)memchr(v36, v34, v37 + 1);
            if (!v38) {
              goto LABEL_85;
            }
            uint64_t v39 = v38;
            if (!memcmp(v38, v29, v30)) {
              break;
            }
            uint64_t v36 = (std::string *)(v39 + 1);
            int64_t v35 = v33 - (v39 + 1);
            if (v35 < v30) {
              goto LABEL_85;
            }
          }
          if (v39 == v33)
          {
LABEL_85:
            uint64_t v2 = v261;
            goto LABEL_86;
          }
          int64_t v40 = v39 - (char *)v31;
          uint64_t v2 = v261;
          if (v39 - (char *)v31 != -1) {
            goto LABEL_69;
          }
        }
LABEL_86:
        if (byte_25C546F >= 0) {
          uint64_t v46 = &qword_25C5458;
        }
        else {
          uint64_t v46 = (uint64_t *)qword_25C5458;
        }
        if (byte_25C546F >= 0) {
          int64_t v47 = byte_25C546F;
        }
        else {
          int64_t v47 = qword_25C5460;
        }
        if ((v5 & 0x80u) == 0) {
          uint64_t v48 = &__p;
        }
        else {
          uint64_t v48 = (std::string *)v6;
        }
        if ((v5 & 0x80u) == 0) {
          std::string::size_type v49 = v5;
        }
        else {
          std::string::size_type v49 = __p.__r_.__value_.__l.__size_;
        }
        if (v47)
        {
          if ((uint64_t)v49 >= v47)
          {
            std::string::size_type v50 = (char *)v48 + v49;
            int v51 = *(char *)v46;
            int64_t v52 = v49;
            uint64_t v53 = v48;
            while (1)
            {
              int64_t v54 = v52 - v47;
              if (v54 == -1) {
                goto LABEL_123;
              }
              std::string v55 = (char *)memchr(v53, v51, v54 + 1);
              if (!v55) {
                goto LABEL_123;
              }
              size_t v56 = v55;
              if (!memcmp(v55, v46, v47)) {
                break;
              }
              uint64_t v53 = (std::string *)(v56 + 1);
              int64_t v52 = v50 - (v56 + 1);
              if (v52 < v47) {
                goto LABEL_123;
              }
            }
            if (v56 == v50)
            {
LABEL_123:
              uint64_t v2 = v261;
              goto LABEL_124;
            }
            int64_t v57 = v56 - (char *)v48;
            uint64_t v2 = v261;
            if (v56 - (char *)v48 != -1) {
              goto LABEL_107;
            }
          }
LABEL_124:
          if (byte_25C5517 >= 0) {
            unint64_t v63 = &qword_25C5500;
          }
          else {
            unint64_t v63 = (uint64_t *)qword_25C5500;
          }
          if (byte_25C5517 >= 0) {
            int64_t v64 = byte_25C5517;
          }
          else {
            int64_t v64 = *(void *)&dword_25C5508;
          }
          if ((v5 & 0x80u) == 0) {
            uint64_t v65 = &__p;
          }
          else {
            uint64_t v65 = (std::string *)v6;
          }
          if ((v5 & 0x80u) == 0) {
            std::string::size_type v66 = v5;
          }
          else {
            std::string::size_type v66 = __p.__r_.__value_.__l.__size_;
          }
          if (v64)
          {
            if ((uint64_t)v66 >= v64)
            {
              v67 = (char *)v65 + v66;
              int v68 = *(char *)v63;
              int64_t v69 = v66;
              uint64_t v70 = v65;
              while (1)
              {
                int64_t v71 = v69 - v64;
                if (v71 == -1) {
                  goto LABEL_161;
                }
                v72 = (char *)memchr(v70, v68, v71 + 1);
                if (!v72) {
                  goto LABEL_161;
                }
                v73 = v72;
                if (!memcmp(v72, v63, v64)) {
                  break;
                }
                uint64_t v70 = (std::string *)(v73 + 1);
                int64_t v69 = v67 - (v73 + 1);
                if (v69 < v64) {
                  goto LABEL_161;
                }
              }
              if (v73 == v67)
              {
LABEL_161:
                uint64_t v2 = v261;
                goto LABEL_162;
              }
              int64_t v74 = v73 - (char *)v65;
              uint64_t v2 = v261;
              if (v73 - (char *)v65 != -1) {
                goto LABEL_145;
              }
            }
LABEL_162:
            if (byte_25C5547 >= 0) {
              int64_t v80 = &qword_25C5530;
            }
            else {
              int64_t v80 = (uint64_t *)qword_25C5530;
            }
            if (byte_25C5547 >= 0) {
              int64_t v81 = byte_25C5547;
            }
            else {
              int64_t v81 = unk_25C5538;
            }
            if ((v5 & 0x80u) == 0) {
              int64_t v82 = &__p;
            }
            else {
              int64_t v82 = (std::string *)v6;
            }
            if ((v5 & 0x80u) == 0) {
              std::string::size_type v83 = v5;
            }
            else {
              std::string::size_type v83 = __p.__r_.__value_.__l.__size_;
            }
            if (v81)
            {
              if ((uint64_t)v83 >= v81)
              {
                v84 = (char *)v82 + v83;
                int v85 = *(char *)v80;
                int64_t v86 = v83;
                v87 = v82;
                while (1)
                {
                  int64_t v88 = v86 - v81;
                  if (v88 == -1) {
                    goto LABEL_199;
                  }
                  uint64_t v89 = (char *)memchr(v87, v85, v88 + 1);
                  if (!v89) {
                    goto LABEL_199;
                  }
                  v90 = v89;
                  if (!memcmp(v89, v80, v81)) {
                    break;
                  }
                  v87 = (std::string *)(v90 + 1);
                  int64_t v86 = v84 - (v90 + 1);
                  if (v86 < v81) {
                    goto LABEL_199;
                  }
                }
                if (v90 == v84)
                {
LABEL_199:
                  uint64_t v2 = v261;
                  goto LABEL_200;
                }
                int64_t v91 = v90 - (char *)v82;
                uint64_t v2 = v261;
                if (v90 - (char *)v82 != -1) {
                  goto LABEL_183;
                }
              }
LABEL_200:
              if (byte_25C54CF >= 0) {
                v97 = &qword_25C54B8;
              }
              else {
                v97 = (uint64_t *)qword_25C54B8;
              }
              if (byte_25C54CF >= 0) {
                int64_t v98 = byte_25C54CF;
              }
              else {
                int64_t v98 = *(void *)&word_25C54C0;
              }
              if ((v5 & 0x80u) == 0) {
                v99 = &__p;
              }
              else {
                v99 = (std::string *)v6;
              }
              if ((v5 & 0x80u) == 0) {
                std::string::size_type v100 = v5;
              }
              else {
                std::string::size_type v100 = __p.__r_.__value_.__l.__size_;
              }
              if (v98)
              {
                if ((uint64_t)v100 >= v98)
                {
                  v101 = (char *)v99 + v100;
                  int v102 = *(char *)v97;
                  int64_t v103 = v100;
                  v104 = v99;
                  while (1)
                  {
                    int64_t v105 = v103 - v98;
                    if (v105 == -1) {
                      break;
                    }
                    v106 = (char *)memchr(v104, v102, v105 + 1);
                    if (!v106) {
                      break;
                    }
                    v107 = v106;
                    if (!memcmp(v106, v97, v98))
                    {
                      if (v107 != v101)
                      {
                        int64_t v108 = v107 - (char *)v99;
                        if (v107 - (char *)v99 != -1) {
                          goto LABEL_221;
                        }
                      }
                      goto LABEL_320;
                    }
                    v104 = (std::string *)(v107 + 1);
                    int64_t v103 = v101 - (v107 + 1);
                    if (v103 < v98) {
                      goto LABEL_320;
                    }
                  }
                }
                goto LABEL_320;
              }
              int64_t v108 = 0;
LABEL_221:
              std::string::size_type v109 = v108 + v98;
              if (v100 >= v109) {
                std::string::size_type v110 = v109;
              }
              else {
                std::string::size_type v110 = v100;
              }
              if (v110 > 0x7FFFFFFFFFFFFFF7) {
                sub_188D690();
              }
              if (v110 >= 0x17)
              {
                uint64_t v111 = (v110 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v110 | 7) != 0x17) {
                  uint64_t v111 = v110 | 7;
                }
LABEL_559:
                uint64_t v257 = v111 + 1;
                v148 = (std::string *)operator new(v111 + 1);
                __dst.__r_.__value_.__l.__size_ = v110;
                __dst.__r_.__value_.__r.__words[2] = v257 | 0x8000000000000000;
                __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v148;
                goto LABEL_560;
              }
              goto LABEL_317;
            }
            int64_t v91 = 0;
LABEL_183:
            std::string::size_type v92 = v91 + v81;
            if (v83 >= v92) {
              std::string::size_type v93 = v92;
            }
            else {
              std::string::size_type v93 = v83;
            }
            if (v93 > 0x7FFFFFFFFFFFFFF7) {
              sub_188D690();
            }
            if (v93 >= 0x17)
            {
              uint64_t v95 = (v93 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v93 | 7) != 0x17) {
                uint64_t v95 = v93 | 7;
              }
              uint64_t v96 = v95 + 1;
              p_dst = (std::string *)operator new(v95 + 1);
              __dst.__r_.__value_.__l.__size_ = v93;
              __dst.__r_.__value_.__r.__words[2] = v96 | 0x8000000000000000;
              __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
            }
            else
            {
              *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v93;
              p_dst = &__dst;
              if (!v93)
              {
                __dst.__r_.__value_.__s.__data_[0] = 0;
                if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                {
LABEL_190:
                  std::string __p = __dst;
                  std::string::size_type v5 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
                  std::string::size_type v6 = __dst.__r_.__value_.__r.__words[0];
                  goto LABEL_200;
                }
LABEL_195:
                operator delete(__p.__r_.__value_.__l.__data_);
                goto LABEL_190;
              }
            }
            memmove(p_dst, v82, v93);
            p_dst->__r_.__value_.__s.__data_[v93] = 0;
            if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_190;
            }
            goto LABEL_195;
          }
          int64_t v74 = 0;
LABEL_145:
          std::string::size_type v75 = v74 + v64;
          if (v66 >= v75) {
            std::string::size_type v76 = v75;
          }
          else {
            std::string::size_type v76 = v66;
          }
          if (v76 > 0x7FFFFFFFFFFFFFF7) {
            sub_188D690();
          }
          if (v76 >= 0x17)
          {
            uint64_t v78 = (v76 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v76 | 7) != 0x17) {
              uint64_t v78 = v76 | 7;
            }
            uint64_t v79 = v78 + 1;
            uint64_t v77 = (std::string *)operator new(v78 + 1);
            __dst.__r_.__value_.__l.__size_ = v76;
            __dst.__r_.__value_.__r.__words[2] = v79 | 0x8000000000000000;
            __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v77;
          }
          else
          {
            *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v76;
            uint64_t v77 = &__dst;
            if (!v76)
            {
              __dst.__r_.__value_.__s.__data_[0] = 0;
              if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              {
LABEL_152:
                std::string __p = __dst;
                std::string::size_type v5 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
                std::string::size_type v6 = __dst.__r_.__value_.__r.__words[0];
                goto LABEL_162;
              }
LABEL_157:
              operator delete(__p.__r_.__value_.__l.__data_);
              goto LABEL_152;
            }
          }
          memmove(v77, v65, v76);
          v77->__r_.__value_.__s.__data_[v76] = 0;
          if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_152;
          }
          goto LABEL_157;
        }
        int64_t v57 = 0;
LABEL_107:
        std::string::size_type v58 = v57 + v47;
        if (v49 >= v58) {
          std::string::size_type v59 = v58;
        }
        else {
          std::string::size_type v59 = v49;
        }
        if (v59 > 0x7FFFFFFFFFFFFFF7) {
          sub_188D690();
        }
        if (v59 >= 0x17)
        {
          uint64_t v61 = (v59 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v59 | 7) != 0x17) {
            uint64_t v61 = v59 | 7;
          }
          uint64_t v62 = v61 + 1;
          uint64_t v60 = (std::string *)operator new(v61 + 1);
          __dst.__r_.__value_.__l.__size_ = v59;
          __dst.__r_.__value_.__r.__words[2] = v62 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v60;
        }
        else
        {
          *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v59;
          uint64_t v60 = &__dst;
          if (!v59)
          {
            __dst.__r_.__value_.__s.__data_[0] = 0;
            if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            {
LABEL_114:
              std::string __p = __dst;
              std::string::size_type v5 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
              std::string::size_type v6 = __dst.__r_.__value_.__r.__words[0];
              goto LABEL_124;
            }
LABEL_119:
            operator delete(__p.__r_.__value_.__l.__data_);
            goto LABEL_114;
          }
        }
        memmove(v60, v48, v59);
        v60->__r_.__value_.__s.__data_[v59] = 0;
        if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_114;
        }
        goto LABEL_119;
      }
      int64_t v40 = 0;
LABEL_69:
      std::string::size_type v41 = v40 + v30;
      if (v32 >= v41) {
        std::string::size_type v42 = v41;
      }
      else {
        std::string::size_type v42 = v32;
      }
      if (v42 > 0x7FFFFFFFFFFFFFF7) {
        sub_188D690();
      }
      if (v42 >= 0x17)
      {
        uint64_t v44 = (v42 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v42 | 7) != 0x17) {
          uint64_t v44 = v42 | 7;
        }
        uint64_t v45 = v44 + 1;
        int v43 = (std::string *)operator new(v44 + 1);
        __dst.__r_.__value_.__l.__size_ = v42;
        __dst.__r_.__value_.__r.__words[2] = v45 | 0x8000000000000000;
        __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v43;
      }
      else
      {
        *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v42;
        int v43 = &__dst;
        if (!v42)
        {
          __dst.__r_.__value_.__s.__data_[0] = 0;
          if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_76:
            std::string __p = __dst;
            std::string::size_type v5 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
            std::string::size_type v6 = __dst.__r_.__value_.__r.__words[0];
            goto LABEL_86;
          }
LABEL_81:
          operator delete(__p.__r_.__value_.__l.__data_);
          goto LABEL_76;
        }
      }
      memmove(v43, v31, v42);
      v43->__r_.__value_.__s.__data_[v42] = 0;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_76;
      }
      goto LABEL_81;
    }
    int64_t v23 = 0;
LABEL_31:
    std::string::size_type v24 = v23 + v8;
    if (size >= v24) {
      std::string::size_type v25 = v24;
    }
    else {
      std::string::size_type v25 = size;
    }
    if (v25 > 0x7FFFFFFFFFFFFFF7) {
      sub_188D690();
    }
    if (v25 >= 0x17)
    {
      uint64_t v27 = (v25 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v25 | 7) != 0x17) {
        uint64_t v27 = v25 | 7;
      }
      uint64_t v28 = v27 + 1;
      unint64_t v26 = (std::string *)operator new(v27 + 1);
      __dst.__r_.__value_.__l.__size_ = v25;
      __dst.__r_.__value_.__r.__words[2] = v28 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v26;
    }
    else
    {
      *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v25;
      unint64_t v26 = &__dst;
      if (!v25)
      {
        __dst.__r_.__value_.__s.__data_[0] = 0;
        if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_38:
          std::string __p = __dst;
          std::string::size_type v5 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
          std::string::size_type v6 = __dst.__r_.__value_.__r.__words[0];
          goto LABEL_48;
        }
LABEL_43:
        operator delete(__p.__r_.__value_.__l.__data_);
        goto LABEL_38;
      }
    }
    memmove(v26, p_p, v25);
    v26->__r_.__value_.__s.__data_[v25] = 0;
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_43;
  }
  if (v8)
  {
    int64_t v16 = __p.__r_.__value_.__l.__size_;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int64_t v16 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    if (v16 < v8) {
      goto LABEL_244;
    }
    BOOL v17 = (char *)p_p + v16;
    int v18 = *(char *)v7;
    int v19 = p_p;
    while (1)
    {
      int64_t v20 = v16 - v8;
      if (v20 == -1 || (int v21 = (char *)memchr(v19, v18, v20 + 1)) == 0)
      {
LABEL_29:
        int64_t v258 = 0;
        uint64_t v2 = v261;
        goto LABEL_256;
      }
      size_t v22 = v21;
      if (!memcmp(v21, v7, v8)) {
        break;
      }
      int v19 = (std::string *)(v22 + 1);
      int64_t v16 = v17 - (v22 + 1);
      if (v16 < v8) {
        goto LABEL_29;
      }
    }
    int64_t v258 = 0;
    if (v22 == v17)
    {
      uint64_t v2 = v261;
      goto LABEL_256;
    }
    uint64_t v2 = v261;
    if (v22 - (char *)p_p == -1) {
      goto LABEL_256;
    }
  }
  if (byte_25C516F >= 0) {
    v112 = &qword_25C5158;
  }
  else {
    v112 = (uint64_t *)qword_25C5158;
  }
  if (byte_25C516F >= 0) {
    int64_t v113 = byte_25C516F;
  }
  else {
    int64_t v113 = *(void *)&byte_25C5160;
  }
  if (!v113)
  {
LABEL_255:
    int64_t v258 = v8;
    goto LABEL_256;
  }
  int64_t v114 = __p.__r_.__value_.__l.__size_;
  if ((v5 & 0x80000000) == 0) {
    int64_t v114 = size;
  }
  if (v114 < v113)
  {
LABEL_244:
    int64_t v258 = 0;
    goto LABEL_256;
  }
  v115 = (char *)p_p + v114;
  int v116 = *(char *)v112;
  v117 = p_p;
  while (1)
  {
    int64_t v118 = v114 - v113;
    if (v118 == -1)
    {
LABEL_250:
      int64_t v258 = 0;
      goto LABEL_256;
    }
    v119 = (char *)memchr(v117, v116, v118 + 1);
    if (!v119)
    {
      int64_t v258 = 0;
LABEL_252:
      uint64_t v2 = v261;
      goto LABEL_256;
    }
    v120 = v119;
    if (!memcmp(v119, v112, v113)) {
      break;
    }
    v117 = (std::string *)(v120 + 1);
    int64_t v114 = v115 - (v120 + 1);
    uint64_t v2 = v261;
    if (v114 < v113) {
      goto LABEL_250;
    }
  }
  int64_t v258 = 0;
  if (v120 == v115) {
    goto LABEL_252;
  }
  BOOL v152 = v120 - (char *)p_p == -1;
  uint64_t v2 = v261;
  if (!v152) {
    goto LABEL_255;
  }
LABEL_256:
  if (byte_25C5457 >= 0) {
    v121 = &xmmword_25C5440;
  }
  else {
    v121 = (long long *)xmmword_25C5440;
  }
  if (byte_25C5457 >= 0) {
    int64_t v122 = byte_25C5457;
  }
  else {
    int64_t v122 = *((void *)&xmmword_25C5440 + 1);
  }
  if ((v5 & 0x80000000) != 0) {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (!v122)
  {
    int64_t v130 = 0;
LABEL_273:
    int64_t v131 = v258 + v122 + v130;
    if (size >= v131 + 1) {
      std::string::size_type v132 = v131 + 1;
    }
    else {
      std::string::size_type v132 = size;
    }
    if (v132 > 0x7FFFFFFFFFFFFFF7) {
      sub_188D690();
    }
    if (v132 >= 0x17)
    {
      uint64_t v134 = (v132 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v132 | 7) != 0x17) {
        uint64_t v134 = v132 | 7;
      }
      uint64_t v135 = v134 + 1;
      v133 = (std::string *)operator new(v134 + 1);
      __dst.__r_.__value_.__l.__size_ = v132;
      __dst.__r_.__value_.__r.__words[2] = v135 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v133;
    }
    else
    {
      *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v132;
      v133 = &__dst;
      if (!v132) {
        goto LABEL_284;
      }
    }
    memmove(v133, p_p, v132);
LABEL_284:
    v133->__r_.__value_.__s.__data_[v132] = 0;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    std::string __p = __dst;
    std::string::size_type v5 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    std::string::size_type v6 = __dst.__r_.__value_.__r.__words[0];
    goto LABEL_291;
  }
  if ((uint64_t)size >= v122)
  {
    v123 = (char *)p_p + size;
    int v124 = *(char *)v121;
    int64_t v125 = size;
    v126 = p_p;
    while (1)
    {
      int64_t v127 = v125 - v122;
      if (v127 == -1) {
        goto LABEL_290;
      }
      v128 = (char *)memchr(v126, v124, v127 + 1);
      if (!v128) {
        goto LABEL_290;
      }
      v129 = v128;
      if (!memcmp(v128, v121, v122)) {
        break;
      }
      v126 = (std::string *)(v129 + 1);
      int64_t v125 = v123 - (v129 + 1);
      if (v125 < v122) {
        goto LABEL_290;
      }
    }
    if (v129 == v123)
    {
LABEL_290:
      uint64_t v2 = v261;
      goto LABEL_291;
    }
    int64_t v130 = v129 - (char *)p_p;
    uint64_t v2 = v261;
    if (v129 - (char *)p_p != -1) {
      goto LABEL_273;
    }
  }
LABEL_291:
  if (byte_25C546F >= 0) {
    v136 = &qword_25C5458;
  }
  else {
    v136 = (uint64_t *)qword_25C5458;
  }
  if (byte_25C546F >= 0) {
    int64_t v137 = byte_25C546F;
  }
  else {
    int64_t v137 = qword_25C5460;
  }
  if ((v5 & 0x80u) == 0) {
    v99 = &__p;
  }
  else {
    v99 = (std::string *)v6;
  }
  if ((v5 & 0x80u) == 0) {
    std::string::size_type v138 = v5;
  }
  else {
    std::string::size_type v138 = __p.__r_.__value_.__l.__size_;
  }
  if (!v137)
  {
    int64_t v146 = 0;
LABEL_312:
    int64_t v147 = v258 + v137 + v146;
    if (v138 >= v147 + 1) {
      std::string::size_type v110 = v147 + 1;
    }
    else {
      std::string::size_type v110 = v138;
    }
    if (v110 > 0x7FFFFFFFFFFFFFF7) {
      sub_188D690();
    }
    if (v110 >= 0x17)
    {
      uint64_t v111 = (v110 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v110 | 7) != 0x17) {
        uint64_t v111 = v110 | 7;
      }
      goto LABEL_559;
    }
LABEL_317:
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v110;
    v148 = &__dst;
    if (!v110)
    {
      __dst.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
LABEL_561:
      }
        operator delete(__p.__r_.__value_.__l.__data_);
LABEL_319:
      std::string __p = __dst;
      goto LABEL_320;
    }
LABEL_560:
    memmove(v148, v99, v110);
    v148->__r_.__value_.__s.__data_[v110] = 0;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_561;
    }
    goto LABEL_319;
  }
  if ((uint64_t)v138 >= v137)
  {
    v139 = (char *)v99 + v138;
    int v140 = *(char *)v136;
    int64_t v141 = v138;
    v142 = v99;
    do
    {
      int64_t v143 = v141 - v137;
      if (v143 == -1) {
        break;
      }
      v144 = (char *)memchr(v142, v140, v143 + 1);
      if (!v144) {
        break;
      }
      v145 = v144;
      if (!memcmp(v144, v136, v137))
      {
        if (v145 != v139)
        {
          int64_t v146 = v145 - (char *)v99;
          if (v145 - (char *)v99 != -1) {
            goto LABEL_312;
          }
        }
        break;
      }
      v142 = (std::string *)(v145 + 1);
      int64_t v141 = v139 - (v145 + 1);
    }
    while (v141 >= v137);
  }
LABEL_320:
  unsigned int v149 = *(_DWORD *)(v2 + 1848);
  BOOL v150 = v149 > 0x22;
  uint64_t v151 = (1 << v149) & 0x600040000;
  BOOL v152 = v150 || v151 == 0;
  if (v152) {
    goto LABEL_377;
  }
  v153 = sub_819668(v2);
  if (*((char *)v153 + 23) < 0)
  {
    sub_4200(&__dst, *(void **)v153, *((void *)v153 + 1));
  }
  else
  {
    long long v154 = *v153;
    __dst.__r_.__value_.__r.__words[2] = *((void *)v153 + 2);
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v154;
  }
  char v155 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::size_type v156 = __dst.__r_.__value_.__l.__size_;
    if (!__dst.__r_.__value_.__l.__size_)
    {
      sub_4200(&v264, __dst.__r_.__value_.__l.__data_, 0);
      goto LABEL_356;
    }
LABEL_331:
    int v157 = byte_25C58EF;
    if (byte_25C58EF >= 0) {
      size_t v158 = byte_25C58EF;
    }
    else {
      size_t v158 = qword_25C58E0;
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      size_t v159 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    else {
      size_t v159 = v156;
    }
    unint64_t v160 = v159 + v158;
    if (v159 + v158 > 0x7FFFFFFFFFFFFFF7) {
      sub_188D690();
    }
    if (v160 > 0x16)
    {
      uint64_t v165 = (v160 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v160 | 7) != 0x17) {
        uint64_t v165 = v160 | 7;
      }
      uint64_t v166 = v165 + 1;
      v161 = (char *)operator new(v165 + 1);
      v264.__r_.__value_.__l.__size_ = v159 + v158;
      v264.__r_.__value_.__r.__words[2] = v166 | 0x8000000000000000;
      v264.__r_.__value_.__r.__words[0] = (std::string::size_type)v161;
      if (!v158) {
        goto LABEL_344;
      }
    }
    else
    {
      memset(&v264, 0, sizeof(v264));
      v161 = (char *)&v264;
      *((unsigned char *)&v264.__r_.__value_.__s + 23) = v159 + v158;
      if (!v158)
      {
LABEL_344:
        v163 = &v161[v158];
        if (v159)
        {
          if (v155 >= 0) {
            v164 = &__dst;
          }
          else {
            v164 = (std::string *)__dst.__r_.__value_.__r.__words[0];
          }
          memmove(v163, v164, v159);
        }
        v163[v159] = 0;
        goto LABEL_356;
      }
    }
    if (v157 >= 0) {
      v162 = &qword_25C58D8;
    }
    else {
      v162 = (uint64_t *)qword_25C58D8;
    }
    memmove(v161, v162, v158);
    goto LABEL_344;
  }
  if (*((unsigned char *)&__dst.__r_.__value_.__s + 23))
  {
    std::string::size_type v156 = __dst.__r_.__value_.__l.__size_;
    goto LABEL_331;
  }
  std::string v264 = __dst;
LABEL_356:
  int v167 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v168 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v168 = __p.__r_.__value_.__l.__size_;
  }
  int v169 = SHIBYTE(v264.__r_.__value_.__r.__words[2]);
  if ((v264.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v170 = HIBYTE(v264.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v170 = v264.__r_.__value_.__l.__size_;
  }
  unint64_t v171 = v170 + v168;
  if (v170 + v168 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v171 > 0x16)
  {
    uint64_t v188 = (v171 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v171 | 7) != 0x17) {
      uint64_t v188 = v171 | 7;
    }
    uint64_t v189 = v188 + 1;
    v172 = (std::string *)operator new(v188 + 1);
    v265.__r_.__value_.__l.__size_ = v170 + v168;
    v265.__r_.__value_.__r.__words[2] = v189 | 0x8000000000000000;
    v265.__r_.__value_.__r.__words[0] = (std::string::size_type)v172;
    if (v168)
    {
LABEL_365:
      if (v167 >= 0) {
        v173 = &__p;
      }
      else {
        v173 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      memmove(v172, v173, v168);
    }
  }
  else
  {
    memset(&v265, 0, sizeof(v265));
    v172 = &v265;
    *((unsigned char *)&v265.__r_.__value_.__s + 23) = v170 + v168;
    if (v168) {
      goto LABEL_365;
    }
  }
  v174 = (char *)v172 + v168;
  if (v170)
  {
    if (v169 >= 0) {
      v175 = &v264;
    }
    else {
      v175 = (std::string *)v264.__r_.__value_.__r.__words[0];
    }
    memmove(v174, v175, v170);
  }
  v174[v170] = 0;
  if (v167 < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    std::string __p = v265;
    if ((*((unsigned char *)&v264.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_521;
    }
LABEL_376:
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
LABEL_522:
    }
      operator delete(__dst.__r_.__value_.__l.__data_);
  }
  else
  {
    std::string __p = v265;
    if ((v169 & 0x80) == 0) {
      goto LABEL_376;
    }
LABEL_521:
    operator delete(v264.__r_.__value_.__l.__data_);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_522;
    }
  }
LABEL_377:
  int v176 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v177 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v177 = __p.__r_.__value_.__l.__size_;
  }
  int v178 = byte_25C57B7;
  if (byte_25C57B7 >= 0) {
    size_t v179 = byte_25C57B7;
  }
  else {
    size_t v179 = qword_25C57A8;
  }
  unint64_t v180 = v179 + v177;
  if (v179 + v177 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v180 > 0x16)
  {
    uint64_t v186 = (v180 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v180 | 7) != 0x17) {
      uint64_t v186 = v180 | 7;
    }
    uint64_t v187 = v186 + 1;
    v181 = (std::string *)operator new(v186 + 1);
    __dst.__r_.__value_.__l.__size_ = v179 + v177;
    __dst.__r_.__value_.__r.__words[2] = v187 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v181;
    if (v177)
    {
LABEL_386:
      if (v176 >= 0) {
        v182 = &__p;
      }
      else {
        v182 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      memmove(v181, v182, v177);
    }
  }
  else
  {
    memset(&__dst, 0, sizeof(__dst));
    v181 = &__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v179 + v177;
    if (v177) {
      goto LABEL_386;
    }
  }
  v183 = (char *)v181 + v177;
  if (v179)
  {
    if (v178 >= 0) {
      v184 = &qword_25C57A0;
    }
    else {
      v184 = (uint64_t *)qword_25C57A0;
    }
    memmove(v183, v184, v179);
  }
  v183[v179] = 0;
  if (v176 < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    std::string __p = __dst;
    unsigned __int8 v185 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_407;
    }
LABEL_397:
    std::string __dst = __p;
  }
  else
  {
    std::string __p = __dst;
    unsigned __int8 v185 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_397;
    }
LABEL_407:
    sub_4200(&__dst, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    unsigned __int8 v185 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  v190 = &v268;
  int v191 = (char)v185;
  if ((v185 & 0x80u) == 0) {
    size_t v192 = v185;
  }
  else {
    size_t v192 = __p.__r_.__value_.__l.__size_;
  }
  int v193 = byte_25C58D7;
  if (byte_25C58D7 >= 0) {
    size_t v194 = byte_25C58D7;
  }
  else {
    size_t v194 = qword_25C58C8;
  }
  unint64_t v195 = v194 + v192;
  if (v194 + v192 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v195 > 0x16)
  {
    uint64_t v232 = (v195 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v195 | 7) != 0x17) {
      uint64_t v232 = v195 | 7;
    }
    uint64_t v233 = v232 + 1;
    v234 = operator new(v232 + 1);
    size_t v269 = v194 + v192;
    unint64_t v270 = v233 | 0x8000000000000000;
    v268 = v234;
    v190 = (void **)v234;
    if (v192)
    {
LABEL_417:
      if (v191 >= 0) {
        v196 = &__p;
      }
      else {
        v196 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      memmove(v190, v196, v192);
    }
  }
  else
  {
    size_t v269 = 0;
    unint64_t v270 = 0;
    v268 = 0;
    HIBYTE(v270) = v194 + v192;
    if (v192) {
      goto LABEL_417;
    }
  }
  v197 = (char *)v190 + v192;
  if (v194)
  {
    if (v193 >= 0) {
      v198 = &qword_25C58C0;
    }
    else {
      v198 = (uint64_t *)qword_25C58C0;
    }
    memmove(v197, v198, v194);
  }
  v197[v194] = 0;
  if (v195 > 0x16)
  {
    uint64_t v235 = (v195 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v195 | 7) != 0x17) {
      uint64_t v235 = v195 | 7;
    }
    uint64_t v236 = v235 + 1;
    v199 = (char *)operator new(v235 + 1);
    v264.__r_.__value_.__l.__size_ = v194 + v192;
    v264.__r_.__value_.__r.__words[2] = v236 | 0x8000000000000000;
    v264.__r_.__value_.__r.__words[0] = (std::string::size_type)v199;
    if (v192)
    {
LABEL_428:
      if (v191 >= 0) {
        v200 = &__p;
      }
      else {
        v200 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      memmove(v199, v200, v192);
    }
  }
  else
  {
    memset(&v264, 0, sizeof(v264));
    v199 = (char *)&v264;
    *((unsigned char *)&v264.__r_.__value_.__s + 23) = v194 + v192;
    if (v192) {
      goto LABEL_428;
    }
  }
  v201 = &v199[v192];
  if (v193 >= 0) {
    v202 = &qword_25C58C0;
  }
  else {
    v202 = (uint64_t *)qword_25C58C0;
  }
  if (v194) {
    memmove(v201, v202, v194);
  }
  v201[v194] = 0;
  v203 = std::string::append(&v264, (const std::string::value_type *)v202, v194);
  long long v204 = *(_OWORD *)&v203->__r_.__value_.__l.__data_;
  std::string::size_type v272 = v203->__r_.__value_.__r.__words[2];
  long long v271 = v204;
  v203->__r_.__value_.__l.__size_ = 0;
  v203->__r_.__value_.__r.__words[2] = 0;
  v203->__r_.__value_.__r.__words[0] = 0;
  int v205 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v206 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v206 = __p.__r_.__value_.__l.__size_;
  }
  int v207 = byte_25C58D7;
  if (byte_25C58D7 >= 0) {
    size_t v208 = byte_25C58D7;
  }
  else {
    size_t v208 = qword_25C58C8;
  }
  unint64_t v209 = v208 + v206;
  if (v208 + v206 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v209 > 0x16)
  {
    uint64_t v237 = (v209 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v209 | 7) != 0x17) {
      uint64_t v237 = v209 | 7;
    }
    uint64_t v238 = v237 + 1;
    v210 = (char *)operator new(v237 + 1);
    v262.__r_.__value_.__l.__size_ = v208 + v206;
    v262.__r_.__value_.__r.__words[2] = v238 | 0x8000000000000000;
    v262.__r_.__value_.__r.__words[0] = (std::string::size_type)v210;
    if (v206)
    {
LABEL_446:
      if (v205 >= 0) {
        v211 = &__p;
      }
      else {
        v211 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      memmove(v210, v211, v206);
    }
  }
  else
  {
    memset(&v262, 0, sizeof(v262));
    v210 = (char *)&v262;
    *((unsigned char *)&v262.__r_.__value_.__s + 23) = v208 + v206;
    if (v206) {
      goto LABEL_446;
    }
  }
  v212 = &v210[v206];
  if (v207 >= 0) {
    v213 = &qword_25C58C0;
  }
  else {
    v213 = (uint64_t *)qword_25C58C0;
  }
  if (v208) {
    memmove(v212, v213, v208);
  }
  v212[v208] = 0;
  v214 = std::string::append(&v262, (const std::string::value_type *)v213, v208);
  long long v215 = *(_OWORD *)&v214->__r_.__value_.__l.__data_;
  v263.__r_.__value_.__r.__words[2] = v214->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v263.__r_.__value_.__l.__data_ = v215;
  v214->__r_.__value_.__l.__size_ = 0;
  v214->__r_.__value_.__r.__words[2] = 0;
  v214->__r_.__value_.__r.__words[0] = 0;
  if (byte_25C58D7 >= 0) {
    v216 = (const std::string::value_type *)&qword_25C58C0;
  }
  else {
    v216 = (const std::string::value_type *)qword_25C58C0;
  }
  if (byte_25C58D7 >= 0) {
    std::string::size_type v217 = byte_25C58D7;
  }
  else {
    std::string::size_type v217 = qword_25C58C8;
  }
  v218 = std::string::append(&v263, v216, v217);
  long long v219 = *(_OWORD *)&v218->__r_.__value_.__l.__data_;
  std::string::size_type v274 = v218->__r_.__value_.__r.__words[2];
  long long v273 = v219;
  v218->__r_.__value_.__l.__size_ = 0;
  v218->__r_.__value_.__r.__words[2] = 0;
  v218->__r_.__value_.__r.__words[0] = 0;
  sub_28C774(&v265, (uint64_t)&__dst, 4uLL);
  if ((SHIBYTE(v274) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v272) & 0x80000000) == 0) {
      goto LABEL_463;
    }
LABEL_504:
    operator delete((void *)v271);
    if (SHIBYTE(v270) < 0) {
      goto LABEL_505;
    }
LABEL_464:
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_465;
    }
LABEL_506:
    operator delete(__dst.__r_.__value_.__l.__data_);
    if (SHIBYTE(v263.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_507;
    }
LABEL_466:
    if ((SHIBYTE(v262.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_467;
    }
LABEL_508:
    operator delete(v262.__r_.__value_.__l.__data_);
    if (SHIBYTE(v264.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_509;
    }
LABEL_468:
    int v220 = *(_DWORD *)(v261 + 1848);
    if (v220 <= 84) {
      goto LABEL_469;
    }
LABEL_510:
    if (v220 != 85 && v220 != 88) {
      goto LABEL_546;
    }
    int v239 = *(unsigned __int8 *)(*(void *)(v261 + 1960) + 1522);
    uint64_t v240 = 33;
    if (v239 == 11) {
      uint64_t v240 = 36;
    }
    v241 = (std::string *)&qword_25C4780;
    if (v239 != 11) {
      v241 = (std::string *)&qword_25C4768;
    }
    v242 = &byte_25C477F;
    if (v239 == 11) {
      v242 = &byte_25C4797;
    }
    if (*v242 < 0)
    {
      if (v239 == 11) {
        v246 = (unint64_t *)&dword_25C4788;
      }
      else {
        v246 = (unint64_t *)&unk_25C4770;
      }
      sub_4200(&v264, (void *)qword_25C4660[v240], *v246);
    }
    else
    {
      std::string v264 = *v241;
    }
    if (byte_25C57B7 >= 0) {
      v247 = (const std::string::value_type *)&qword_25C57A0;
    }
    else {
      v247 = (const std::string::value_type *)qword_25C57A0;
    }
    if (byte_25C57B7 >= 0) {
      std::string::size_type v248 = byte_25C57B7;
    }
    else {
      std::string::size_type v248 = qword_25C57A8;
    }
    v249 = std::string::append(&v264, v247, v248);
    long long v250 = *(_OWORD *)&v249->__r_.__value_.__l.__data_;
    __dst.__r_.__value_.__r.__words[2] = v249->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v250;
    v249->__r_.__value_.__l.__size_ = 0;
    v249->__r_.__value_.__r.__words[2] = 0;
    v249->__r_.__value_.__r.__words[0] = 0;
    v251 = (_OWORD *)v265.__r_.__value_.__l.__size_;
    if (v265.__r_.__value_.__l.__size_ < v265.__r_.__value_.__r.__words[2])
    {
      long long v252 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
      *(void *)(v265.__r_.__value_.__l.__size_ + 16) = *((void *)&__dst.__r_.__value_.__l + 2);
      _OWORD *v251 = v252;
      memset(&__dst, 0, sizeof(__dst));
      v265.__r_.__value_.__l.__size_ = (std::string::size_type)v251 + 24;
      if (SHIBYTE(v264.__r_.__value_.__r.__words[2]) < 0) {
        goto LABEL_544;
      }
      goto LABEL_546;
    }
    v265.__r_.__value_.__l.__size_ = (std::string::size_type)sub_6E8C4((void **)&v265.__r_.__value_.__l.__data_, (uint64_t)&__dst);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      if (SHIBYTE(v264.__r_.__value_.__r.__words[2]) < 0) {
        goto LABEL_544;
      }
      goto LABEL_546;
    }
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v264.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_546;
    }
LABEL_544:
    v245 = (void *)v264.__r_.__value_.__r.__words[0];
LABEL_545:
    operator delete(v245);
    goto LABEL_546;
  }
  operator delete((void *)v273);
  if (SHIBYTE(v272) < 0) {
    goto LABEL_504;
  }
LABEL_463:
  if ((SHIBYTE(v270) & 0x80000000) == 0) {
    goto LABEL_464;
  }
LABEL_505:
  operator delete(v268);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_506;
  }
LABEL_465:
  if ((SHIBYTE(v263.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_466;
  }
LABEL_507:
  operator delete(v263.__r_.__value_.__l.__data_);
  if (SHIBYTE(v262.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_508;
  }
LABEL_467:
  if ((SHIBYTE(v264.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_468;
  }
LABEL_509:
  operator delete(v264.__r_.__value_.__l.__data_);
  int v220 = *(_DWORD *)(v261 + 1848);
  if (v220 > 84) {
    goto LABEL_510;
  }
LABEL_469:
  if (v220 != 17 && v220 != 25) {
    goto LABEL_546;
  }
  int v221 = byte_25C4767;
  if (byte_25C4767 >= 0) {
    size_t v222 = byte_25C4767;
  }
  else {
    size_t v222 = qword_25C4758;
  }
  int v223 = byte_25C57B7;
  if (byte_25C57B7 >= 0) {
    size_t v224 = byte_25C57B7;
  }
  else {
    size_t v224 = qword_25C57A8;
  }
  unint64_t v225 = v224 + v222;
  if (v224 + v222 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v225 > 0x16)
  {
    uint64_t v243 = (v225 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v225 | 7) != 0x17) {
      uint64_t v243 = v225 | 7;
    }
    uint64_t v244 = v243 + 1;
    v226 = (std::string *)operator new(v243 + 1);
    __dst.__r_.__value_.__l.__size_ = v224 + v222;
    __dst.__r_.__value_.__r.__words[2] = v244 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v226;
    if (v222)
    {
LABEL_480:
      if (v221 >= 0) {
        v227 = &qword_25C4750;
      }
      else {
        v227 = (uint64_t *)qword_25C4750;
      }
      memmove(v226, v227, v222);
    }
  }
  else
  {
    memset(&__dst, 0, sizeof(__dst));
    v226 = &__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v224 + v222;
    if (v222) {
      goto LABEL_480;
    }
  }
  v228 = (char *)v226 + v222;
  if (v224)
  {
    if (v223 >= 0) {
      v229 = &qword_25C57A0;
    }
    else {
      v229 = (uint64_t *)qword_25C57A0;
    }
    memmove(v228, v229, v224);
  }
  v228[v224] = 0;
  v230 = (_OWORD *)v265.__r_.__value_.__l.__size_;
  if (v265.__r_.__value_.__l.__size_ < v265.__r_.__value_.__r.__words[2])
  {
    long long v231 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
    *(void *)(v265.__r_.__value_.__l.__size_ + 16) = *((void *)&__dst.__r_.__value_.__l + 2);
    _OWORD *v230 = v231;
    v265.__r_.__value_.__l.__size_ = (std::string::size_type)v230 + 24;
    goto LABEL_546;
  }
  v265.__r_.__value_.__l.__size_ = (std::string::size_type)sub_6E8C4((void **)&v265.__r_.__value_.__l.__data_, (uint64_t)&__dst);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    v245 = (void *)__dst.__r_.__value_.__r.__words[0];
    goto LABEL_545;
  }
LABEL_546:
  uint64_t v253 = sub_5231C(v260);
  sub_635474(a2, (std::string **)&v265, v253);
  std::string::size_type v254 = v265.__r_.__value_.__r.__words[0];
  if (v265.__r_.__value_.__r.__words[0])
  {
    std::string::size_type v255 = v265.__r_.__value_.__l.__size_;
    v256 = (void *)v265.__r_.__value_.__r.__words[0];
    if (v265.__r_.__value_.__l.__size_ != v265.__r_.__value_.__r.__words[0])
    {
      do
      {
        if (*(char *)(v255 - 1) < 0) {
          operator delete(*(void **)(v255 - 24));
        }
        v255 -= 24;
      }
      while (v255 != v254);
      v256 = (void *)v265.__r_.__value_.__r.__words[0];
    }
    v265.__r_.__value_.__l.__size_ = v254;
    operator delete(v256);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_813894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_813AEC(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(*(void *)(a1 + 1952) + 1932)
    || *(void *)(a1 + 1864) == -1
    && *(void *)(a1 + 1872) == -1
    && *(void *)(a1 + 1880) == -1
    && *(void *)(a1 + 1888) == -1
    && *(void *)(a1 + 1896) == -1
    && *(void *)(a1 + 1904) == -1
    && *(void *)(a1 + 1912) == -1
    && !*(unsigned char *)(a1 + 1860))
  {
    return;
  }
  sub_814258(a1, (uint64_t)&v48);
  if ((SHIBYTE(v48.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    std::string v47 = v48;
LABEL_13:
    std::string v46 = v48;
    goto LABEL_14;
  }
  sub_4200(&v47, v48.__r_.__value_.__l.__data_, v48.__r_.__value_.__l.__size_);
  if ((SHIBYTE(v48.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_13;
  }
  sub_4200(&v46, v48.__r_.__value_.__l.__data_, v48.__r_.__value_.__l.__size_);
LABEL_14:
  sub_81138C(a1, 1, &v45);
  sub_7FA67C((void *)a1, (uint64_t)v43);
  std::string::size_type size = HIBYTE(v45.__r_.__value_.__r.__words[2]);
  if ((v45.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v45.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    if (byte_25C58EF >= 0) {
      std::string::size_type v5 = (const std::string::value_type *)&qword_25C58D8;
    }
    else {
      std::string::size_type v5 = (const std::string::value_type *)qword_25C58D8;
    }
    if (byte_25C58EF >= 0) {
      std::string::size_type v6 = byte_25C58EF;
    }
    else {
      std::string::size_type v6 = qword_25C58E0;
    }
    std::string::append(&v47, v5, v6);
    if ((v45.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      size_t v7 = &v45;
    }
    else {
      size_t v7 = (std::string *)v45.__r_.__value_.__r.__words[0];
    }
    if ((v45.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v8 = HIBYTE(v45.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v8 = v45.__r_.__value_.__l.__size_;
    }
    std::string::append(&v47, (const std::string::value_type *)v7, v8);
  }
  if (byte_25C57B7 >= 0) {
    int v9 = (const std::string::value_type *)&qword_25C57A0;
  }
  else {
    int v9 = (const std::string::value_type *)qword_25C57A0;
  }
  if (byte_25C57B7 >= 0) {
    std::string::size_type v10 = byte_25C57B7;
  }
  else {
    std::string::size_type v10 = qword_25C57A8;
  }
  std::string::append(&v47, v9, v10);
  if ((v44 & 0x80u) == 0) {
    int64_t v11 = v43;
  }
  else {
    int64_t v11 = (void **)v43[0];
  }
  if ((v44 & 0x80u) == 0) {
    std::string::size_type v12 = v44;
  }
  else {
    std::string::size_type v12 = (std::string::size_type)v43[1];
  }
  std::string::append(&v46, (const std::string::value_type *)v11, v12);
  if (byte_25C57B7 >= 0) {
    int64_t v13 = (const std::string::value_type *)&qword_25C57A0;
  }
  else {
    int64_t v13 = (const std::string::value_type *)qword_25C57A0;
  }
  if (byte_25C57B7 >= 0) {
    std::string::size_type v14 = byte_25C57B7;
  }
  else {
    std::string::size_type v14 = qword_25C57A8;
  }
  std::string::append(&v46, v13, v14);
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
    sub_4200(&v49, v46.__r_.__value_.__l.__data_, v46.__r_.__value_.__l.__size_);
  }
  else {
    std::string v49 = v46;
  }
  unsigned __int8 v15 = HIBYTE(v47.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200(&v50, v47.__r_.__value_.__l.__data_, v47.__r_.__value_.__l.__size_);
    unsigned __int8 v15 = HIBYTE(v47.__r_.__value_.__r.__words[2]);
  }
  else
  {
    std::string v50 = v47;
  }
  int64_t v16 = &v51;
  int v17 = (char)v15;
  if ((v15 & 0x80u) == 0) {
    size_t v18 = v15;
  }
  else {
    size_t v18 = v47.__r_.__value_.__l.__size_;
  }
  int v19 = byte_25C58D7;
  if (byte_25C58D7 >= 0) {
    size_t v20 = byte_25C58D7;
  }
  else {
    size_t v20 = qword_25C58C8;
  }
  unint64_t v21 = v20 + v18;
  if (v20 + v18 >= 0x7FFFFFFFFFFFFFF8) {
    sub_188D690();
  }
  if (v21 <= 0x16)
  {
    size_t v52 = 0;
    unint64_t v53 = 0;
    int v51 = 0;
    HIBYTE(v53) = v20 + v18;
    if (!v18) {
      goto LABEL_67;
    }
    goto LABEL_63;
  }
  uint64_t v34 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v21 | 7) != 0x17) {
    uint64_t v34 = v21 | 7;
  }
  uint64_t v35 = v34 + 1;
  uint64_t v36 = operator new(v34 + 1);
  size_t v52 = v20 + v18;
  unint64_t v53 = v35 | 0x8000000000000000;
  int v51 = v36;
  int64_t v16 = (void **)v36;
  if (v18)
  {
LABEL_63:
    if (v17 >= 0) {
      size_t v22 = &v47;
    }
    else {
      size_t v22 = (std::string *)v47.__r_.__value_.__r.__words[0];
    }
    memmove(v16, v22, v18);
  }
LABEL_67:
  int64_t v23 = (char *)v16 + v18;
  if (v20)
  {
    if (v19 >= 0) {
      std::string::size_type v24 = &qword_25C58C0;
    }
    else {
      std::string::size_type v24 = (uint64_t *)qword_25C58C0;
    }
    memmove(v23, v24, v20);
  }
  v23[v20] = 0;
  if (v21 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    p_dst = &__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v20 + v18;
    if (!v18) {
      goto LABEL_78;
    }
    goto LABEL_74;
  }
  uint64_t v37 = a2;
  uint64_t v38 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v21 | 7) != 0x17) {
    uint64_t v38 = v21 | 7;
  }
  uint64_t v39 = v38 + 1;
  p_dst = (std::string *)operator new(v38 + 1);
  __dst.__r_.__value_.__l.__size_ = v20 + v18;
  __dst.__r_.__value_.__r.__words[2] = v39 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  a2 = v37;
  if (v18)
  {
LABEL_74:
    if (v17 >= 0) {
      unint64_t v26 = &v47;
    }
    else {
      unint64_t v26 = (std::string *)v47.__r_.__value_.__r.__words[0];
    }
    memmove(p_dst, v26, v18);
  }
LABEL_78:
  uint64_t v27 = (char *)p_dst + v18;
  if (v19 >= 0) {
    uint64_t v28 = &qword_25C58C0;
  }
  else {
    uint64_t v28 = (uint64_t *)qword_25C58C0;
  }
  if (v20) {
    memmove(v27, v28, v20);
  }
  v27[v20] = 0;
  int v29 = std::string::append(&__dst, (const std::string::value_type *)v28, v20);
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  std::string::size_type v55 = v29->__r_.__value_.__r.__words[2];
  long long v54 = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  sub_28C774(&__p, (uint64_t)&v49, 4uLL);
  if (SHIBYTE(v55) < 0)
  {
    operator delete((void *)v54);
    if ((SHIBYTE(v53) & 0x80000000) == 0)
    {
LABEL_85:
      if ((SHIBYTE(v50.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_86;
      }
      goto LABEL_112;
    }
  }
  else if ((SHIBYTE(v53) & 0x80000000) == 0)
  {
    goto LABEL_85;
  }
  operator delete(v51);
  if ((SHIBYTE(v50.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_86:
    if ((SHIBYTE(v49.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_87;
    }
LABEL_113:
    operator delete(v49.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_114;
  }
LABEL_112:
  operator delete(v50.__r_.__value_.__l.__data_);
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_113;
  }
LABEL_87:
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_88;
  }
LABEL_114:
  operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_88:
  sub_6355F8(a2, (std::string **)&__p);
  unint64_t v31 = (void **)__p;
  if (__p)
  {
    std::string::size_type v32 = v42;
    uint64_t v33 = __p;
    if (v42 != __p)
    {
      do
      {
        if (*((char *)v32 - 1) < 0) {
          operator delete(*(v32 - 3));
        }
        v32 -= 3;
      }
      while (v32 != v31);
      uint64_t v33 = __p;
    }
    std::string::size_type v42 = v31;
    operator delete(v33);
  }
  if ((char)v44 < 0)
  {
    operator delete(v43[0]);
    if ((SHIBYTE(v45.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_106:
      if ((SHIBYTE(v46.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_107;
      }
LABEL_117:
      operator delete(v46.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v47.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_108:
        if ((SHIBYTE(v48.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          return;
        }
LABEL_119:
        operator delete(v48.__r_.__value_.__l.__data_);
        return;
      }
      goto LABEL_118;
    }
  }
  else if ((SHIBYTE(v45.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_106;
  }
  operator delete(v45.__r_.__value_.__l.__data_);
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_117;
  }
LABEL_107:
  if ((SHIBYTE(v47.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_108;
  }
LABEL_118:
  operator delete(v47.__r_.__value_.__l.__data_);
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_119;
  }
}

void sub_81409C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  if (a32 < 0)
  {
    operator delete(a27);
    if (a38 < 0)
    {
LABEL_3:
      operator delete(a33);
      _Unwind_Resume(a1);
    }
  }
  else if (a38 < 0)
  {
    goto LABEL_3;
  }
  _Unwind_Resume(a1);
}

double sub_814258@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  uint64_t v3 = (long long *)&qword_25C4948;
  switch(*(_DWORD *)(a1 + 1848))
  {
    case 0:
    case 3:
    case 5:
    case 0xC:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = (long long *)&qword_25C4738;
      goto LABEL_11;
    case 1:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = (long long *)&unk_25C47F8;
      std::string::size_type v6 = (uint64_t *)&xmmword_25C5080;
      goto LABEL_12;
    case 2:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = (long long *)&qword_25C4810;
      std::string::size_type v6 = (uint64_t *)&xmmword_25C5098;
      goto LABEL_12;
    case 4:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = (long long *)&dword_25C48E8;
      std::string::size_type v6 = &qword_25C4900;
      goto LABEL_12;
    case 6:
      uint64_t v3 = &xmmword_25C4B40;
      goto LABEL_15;
    case 7:
      uint64_t v3 = &xmmword_25C4B70;
      goto LABEL_15;
    case 0xB:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = (long long *)&qword_25C4D50;
      std::string::size_type v6 = (uint64_t *)&xmmword_25C5038;
      goto LABEL_12;
    case 0x10:
      int v7 = *(unsigned __int8 *)(a1 + 1855);
      std::string::size_type v8 = &xmmword_25C49D8;
      goto LABEL_33;
    case 0x11:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = (long long *)&qword_25C4750;
LABEL_11:
      std::string::size_type v6 = (uint64_t *)(v5 + 144);
      goto LABEL_12;
    case 0x12:
      uint64_t v3 = (long long *)&qword_25C4A08;
      goto LABEL_15;
    case 0x14:
      int v10 = *(unsigned __int8 *)(a1 + 1856);
      int64_t v11 = &qword_25C48B8;
      goto LABEL_20;
    case 0x15:
      int v10 = *(unsigned __int8 *)(a1 + 1856);
      int64_t v11 = &qword_25C48D0;
LABEL_20:
      std::string::size_type v12 = v11 + 285;
      int64_t v13 = v11 + 249;
      goto LABEL_61;
    case 0x16:
      goto LABEL_15;
    case 0x17:
      uint64_t v3 = (long long *)&qword_25C4960;
      goto LABEL_15;
    case 0x18:
      uint64_t v3 = (long long *)&qword_25C4978;
      goto LABEL_15;
    case 0x19:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4798;
      std::string::size_type v6 = &qword_25C5068;
      goto LABEL_12;
    case 0x1A:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4930;
      std::string::size_type v6 = &qword_25C50B0;
      goto LABEL_12;
    case 0x1B:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4828;
      std::string::size_type v6 = (uint64_t *)&xmmword_25C5080;
      goto LABEL_12;
    case 0x1C:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4840;
      std::string::size_type v6 = (uint64_t *)&xmmword_25C5098;
      goto LABEL_12;
    case 0x1D:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4D68;
      std::string::size_type v6 = (uint64_t *)&xmmword_25C5038;
      goto LABEL_12;
    case 0x1E:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4D80;
      std::string::size_type v6 = (uint64_t *)&xmmword_25C5038;
      goto LABEL_12;
    case 0x21:
      uint64_t v3 = &xmmword_25C4A20;
      goto LABEL_15;
    case 0x22:
      uint64_t v3 = &xmmword_25C4A38;
      goto LABEL_15;
    case 0x23:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4918;
      std::string::size_type v6 = &qword_25C50C8;
      goto LABEL_12;
    case 0x27:
      int v7 = *(unsigned __int8 *)(a1 + 1855);
      std::string::size_type v8 = &xmmword_25C49F0;
LABEL_33:
      if (v7) {
        uint64_t v3 = v8 + 117;
      }
      else {
        uint64_t v3 = v8;
      }
      goto LABEL_15;
    case 0x29:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4B88;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x2A:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4BA0;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x2B:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4BB8;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x2C:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4BD0;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x2D:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4BE8;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x2E:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4C00;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x2F:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = (long long *)&qword_25C4C18;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x30:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4C30;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x31:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4C48;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x32:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4C60;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x33:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = (long long *)&qword_25C4C78;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x34:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = (long long *)&qword_25C4C90;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x35:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = (long long *)&qword_25C4CA8;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x36:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = (long long *)&qword_25C4CC0;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x37:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = (long long *)&qword_25C4CD8;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x38:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = (long long *)&qword_25C4CF0;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x39:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = (long long *)&qword_25C4D08;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x3A:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = (long long *)&qword_25C4D20;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x3B:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = (long long *)&qword_25C4D38;
      std::string::size_type v6 = &qword_25C50E0;
      goto LABEL_12;
    case 0x3C:
      int v10 = *(unsigned __int8 *)(a1 + 1856);
      int64_t v11 = &qword_25C4858;
      goto LABEL_57;
    case 0x3D:
      int v10 = *(unsigned __int8 *)(a1 + 1856);
      int64_t v11 = (uint64_t *)&xmmword_25C4870;
LABEL_57:
      std::string::size_type v12 = v11 + 291;
      int64_t v13 = v11 + 261;
      goto LABEL_61;
    case 0x3E:
      int v10 = *(unsigned __int8 *)(a1 + 1856);
      int64_t v11 = (uint64_t *)&xmmword_25C4888;
      goto LABEL_60;
    case 0x3F:
      int v10 = *(unsigned __int8 *)(a1 + 1856);
      int64_t v11 = (uint64_t *)&xmmword_25C48A0;
LABEL_60:
      std::string::size_type v12 = v11 + 291;
      int64_t v13 = v11 + 255;
LABEL_61:
      if (*(unsigned char *)(*(void *)(a1 + 1952) + 1898)) {
        std::string::size_type v14 = (long long *)v12;
      }
      else {
        std::string::size_type v14 = (long long *)v13;
      }
      if (v10) {
        uint64_t v3 = (long long *)v11;
      }
      else {
        uint64_t v3 = v14;
      }
      goto LABEL_15;
    case 0x40:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = (long long *)&qword_25C4D98;
      std::string::size_type v6 = (uint64_t *)&xmmword_25C5038;
      goto LABEL_12;
    case 0x41:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4DB0;
      std::string::size_type v6 = (uint64_t *)&xmmword_25C5038;
      goto LABEL_12;
    case 0x42:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = (long long *)&qword_25C4DC8;
      std::string::size_type v6 = (uint64_t *)&xmmword_25C5038;
      goto LABEL_12;
    case 0x52:
      if (*(char *)(a1 + 1007) < 0) {
        uint64_t v15 = *(void *)(a1 + 992);
      }
      else {
        uint64_t v15 = *(unsigned __int8 *)(a1 + 1007);
      }
      std::string::size_type v24 = (long long *)&qword_25C4AE0;
      if (v15) {
        std::string::size_type v25 = &qword_25C4FD8;
      }
      else {
        std::string::size_type v25 = &qword_25C4FC0;
      }
      goto LABEL_107;
    case 0x53:
      if (*(char *)(a1 + 1007) < 0) {
        uint64_t v16 = *(void *)(a1 + 992);
      }
      else {
        uint64_t v16 = *(unsigned __int8 *)(a1 + 1007);
      }
      std::string::size_type v24 = &xmmword_25C4AF8;
      if (v16) {
        std::string::size_type v25 = &qword_25C4FD8;
      }
      else {
        std::string::size_type v25 = &qword_25C4FC0;
      }
      goto LABEL_107;
    case 0x54:
      if (*(char *)(a1 + 1007) < 0) {
        uint64_t v17 = *(void *)(a1 + 992);
      }
      else {
        uint64_t v17 = *(unsigned __int8 *)(a1 + 1007);
      }
      std::string::size_type v24 = &xmmword_25C4B10;
      if (v17) {
        std::string::size_type v25 = &qword_25C4FD8;
      }
      else {
        std::string::size_type v25 = &qword_25C4FC0;
      }
LABEL_107:
      sub_7F3820((const void **)v24, (const void **)v25, (uint64_t)&__p);
      goto LABEL_108;
    case 0x55:
      sub_7FA998((void *)a1, (uint64_t)&__p);
LABEL_108:
      if (*(char *)(a2 + 23) < 0) {
        operator delete(*(void **)a2);
      }
      double result = *(double *)&__p.__r_.__value_.__l.__data_;
      *(std::string *)a2 = __p;
      return result;
    case 0x56:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4B70;
      std::string::size_type v6 = &qword_25C50F8;
      goto LABEL_12;
    case 0x57:
      int v4 = *(unsigned __int8 *)(a1 + 1856);
      std::string::size_type v5 = &xmmword_25C4B70;
      std::string::size_type v6 = &qword_25C5110;
LABEL_12:
      if (v4) {
        uint64_t v3 = v5;
      }
      else {
        uint64_t v3 = (long long *)v6;
      }
      goto LABEL_15;
    case 0x58:
      sub_7FA998((void *)a1, (uint64_t)&__p);
      if (byte_25C47C7 >= 0) {
        size_t v18 = (const std::string::value_type *)&qword_25C47B0;
      }
      else {
        size_t v18 = (const std::string::value_type *)qword_25C47B0;
      }
      if (byte_25C47C7 >= 0) {
        std::string::size_type v19 = byte_25C47C7;
      }
      else {
        std::string::size_type v19 = unk_25C47B8;
      }
      size_t v20 = std::string::append(&__p, v18, v19);
      std::string::size_type v21 = v20->__r_.__value_.__r.__words[0];
      v27[0] = v20->__r_.__value_.__l.__size_;
      *(void *)((char *)v27 + 7) = *(std::string::size_type *)((char *)&v20->__r_.__value_.__r.__words[1] + 7);
      char v22 = HIBYTE(v20->__r_.__value_.__r.__words[2]);
      v20->__r_.__value_.__l.__size_ = 0;
      v20->__r_.__value_.__r.__words[2] = 0;
      v20->__r_.__value_.__r.__words[0] = 0;
      if (*(char *)(a2 + 23) < 0) {
        operator delete(*(void **)a2);
      }
      uint64_t v23 = v27[0];
      *(void *)a2 = v21;
      *(void *)(a2 + 8) = v23;
      *(void *)(a2 + 15) = *(void *)((char *)v27 + 7);
      *(unsigned char *)(a2 + 23) = v22;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      return result;
    case 0x59:
      uint64_t v3 = (long long *)&qword_25C4DF8;
      goto LABEL_15;
    case 0x5A:
      uint64_t v3 = (long long *)&qword_25C4E10;
      goto LABEL_15;
    case 0x5B:
      uint64_t v3 = &xmmword_25C4990;
      goto LABEL_15;
    case 0x5C:
      uint64_t v3 = &xmmword_25C49A8;
      goto LABEL_15;
    case 0x5D:
      uint64_t v3 = &xmmword_25C49C0;
      goto LABEL_15;
    case 0x5E:
      uint64_t v3 = &xmmword_25C4E28;
LABEL_15:
      std::string::operator=((std::string *)a2, (const std::string *)v3);
      break;
    default:
      return result;
  }
  return result;
}

void sub_81488C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (*(char *)(v14 + 23) < 0)
  {
    operator delete(*(void **)v14);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_814A68(uint64_t a1@<X8>)
{
  *(void *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_DWORD *)(a1 + 56) = 1065353216;
  *(unsigned char *)(a1 + 64) = 1;
  if (byte_25C5C08[23] < 0) {
    sub_4200(&__p, *(void **)byte_25C5C08, *(unint64_t *)&byte_25C5C08[8]);
  }
  else {
    std::string __p = *(std::string *)byte_25C5C08;
  }
  if (byte_25C5457 >= 0) {
    uint64_t v2 = (const std::string::value_type *)&xmmword_25C5440;
  }
  else {
    uint64_t v2 = (const std::string::value_type *)xmmword_25C5440;
  }
  if (byte_25C5457 >= 0) {
    std::string::size_type v3 = byte_25C5457;
  }
  else {
    std::string::size_type v3 = *((void *)&xmmword_25C5440 + 1);
  }
  std::string::append(&__p, v2, v3);
  if (byte_25C57B7 >= 0) {
    int v4 = (const std::string::value_type *)&qword_25C57A0;
  }
  else {
    int v4 = (const std::string::value_type *)qword_25C57A0;
  }
  if (byte_25C57B7 >= 0) {
    std::string::size_type v5 = byte_25C57B7;
  }
  else {
    std::string::size_type v5 = qword_25C57A8;
  }
  std::string::append(&__p, v4, v5);
  sub_635560(a1, (uint64_t)&__p);
  sub_635560(a1, (uint64_t)byte_25C5C08);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_814B78(_Unwind_Exception *a1)
{
  sub_4D4880(v1);
  _Unwind_Resume(a1);
}

void sub_814B8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_4D4880(v14);
  _Unwind_Resume(a1);
}

void sub_814BB0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void **__return_ptr))(*(void *)a1 + 72))(&v12);
  uint64_t v10 = 0;
  int64_t v11 = 0;
  sub_6370D4(a2, &v12, 1, &v10);
  std::string::size_type v3 = v11;
  if (v11 && !atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  int v4 = v15;
  if (v15)
  {
    do
    {
      std::string::size_type v5 = (void *)*v4;
      sub_4F4B48((uint64_t)(v4 + 2));
      operator delete(v4);
      int v4 = v5;
    }
    while (v5);
  }
  std::string::size_type v6 = __p;
  std::string __p = 0;
  if (v6) {
    operator delete(v6);
  }
  int v7 = (void **)v12;
  if (v12)
  {
    std::string::size_type v8 = v13;
    int v9 = v12;
    if (v13 != v12)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      int v9 = v12;
    }
    int64_t v13 = v7;
    operator delete(v9);
  }
}

void sub_814CDC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  sub_14A84((uint64_t)va);
  sub_4D4880((void **)va1);
  _Unwind_Resume(a1);
}

std::string *sub_814CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result = (std::string *)sub_635CD0((long long **)(a1 + 8), a2);
  if (*(unsigned char *)(a1 + 1860))
  {
    char v5 = *(unsigned char *)(a2 + 23);
    std::string::size_type v6 = v5 >= 0 ? (std::string *)a2 : *(std::string **)a2;
    int v7 = byte_25C5B47 >= 0 ? &xmmword_25C5B30 : (long long *)xmmword_25C5B30;
    int64_t v8 = byte_25C5B47 >= 0 ? byte_25C5B47 : *((void *)&xmmword_25C5B30 + 1);
    if (v8)
    {
      if (v5 >= 0) {
        int64_t v9 = *(unsigned __int8 *)(a2 + 23);
      }
      else {
        int64_t v9 = *(void *)(a2 + 8);
      }
      uint64_t v10 = (std::string *)((char *)v6 + v9);
      if (v9 >= v8)
      {
        int v15 = *(char *)v7;
        int64_t v16 = v9;
        double result = v6;
        do
        {
          int64_t v17 = v16 - v8;
          if (v17 == -1) {
            break;
          }
          double result = (std::string *)memchr(result, v15, v17 + 1);
          if (!result) {
            break;
          }
          size_t v18 = result;
          double result = (std::string *)memcmp(result, v7, v8);
          if (!result)
          {
            if (v18 != v10 && (char *)v18 - (char *)v6 != -1) {
              return result;
            }
            break;
          }
          double result = (std::string *)((char *)&v18->__r_.__value_.__l.__data_ + 1);
          int64_t v16 = (char *)v10 - ((char *)&v18->__r_.__value_.__l.__data_ + 1);
        }
        while (v16 >= v8);
      }
      if (byte_25C567F >= 0) {
        int64_t v11 = &xmmword_25C5668;
      }
      else {
        int64_t v11 = (long long *)xmmword_25C5668;
      }
      if (byte_25C567F >= 0) {
        int64_t v12 = byte_25C567F;
      }
      else {
        int64_t v12 = *((void *)&xmmword_25C5668 + 1);
      }
      if (v12)
      {
        if (v9 >= v12)
        {
          int v13 = *(char *)v11;
          double result = v6;
          do
          {
            if (v9 - v12 == -1) {
              break;
            }
            double result = (std::string *)memchr(result, v13, v9 - v12 + 1);
            if (!result) {
              break;
            }
            uint64_t v14 = result;
            double result = (std::string *)memcmp(result, v11, v12);
            if (!result)
            {
              if (v14 != v10)
              {
                std::string::size_type v19 = (char *)v14 - (char *)v6;
                if ((char *)v14 - (char *)v6 != -1) {
                  return std::string::erase((std::string *)a2, v19, v12);
                }
              }
              return result;
            }
            double result = (std::string *)((char *)&v14->__r_.__value_.__l.__data_ + 1);
            int64_t v9 = (char *)v10 - ((char *)&v14->__r_.__value_.__l.__data_ + 1);
          }
          while (v9 >= v12);
        }
      }
      else
      {
        std::string::size_type v19 = 0;
        return std::string::erase((std::string *)a2, v19, v12);
      }
    }
  }
  return result;
}

void sub_814E98(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_814EB4(uint64_t a1@<X0>, const void **a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  memset(&v216, 0, sizeof(v216));
  if (*(unsigned char *)(*(void *)(a1 + 1952) + 1896))
  {
    if (*(unsigned char *)(a1 + 1856))
    {
      if (*(unsigned char *)(a1 + 1853))
      {
        unsigned int v8 = *(_DWORD *)(a1 + 1848);
        if (v8 <= 0x3F && ((1 << v8) & 0xF00000000030000ELL) != 0) {
          std::string::operator=(&v216, (const std::string *)&dword_25C5578);
        }
      }
    }
  }
  int v9 = *(char *)(a3 + 23);
  if (v9 >= 0) {
    uint64_t v10 = (const std::string::value_type *)a3;
  }
  else {
    uint64_t v10 = *(const std::string::value_type **)a3;
  }
  if (v9 >= 0) {
    std::string::size_type v11 = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    std::string::size_type v11 = *(void *)(a3 + 8);
  }
  std::string::append(&v216, v10, v11);
  uint64_t v212 = a1;
  int v12 = *((char *)a2 + 23);
  if (v12 >= 0) {
    size_t v13 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v13 = (size_t)a2[1];
  }
  int v14 = SHIBYTE(v216.__r_.__value_.__r.__words[2]);
  if ((v216.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t size = HIBYTE(v216.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t size = v216.__r_.__value_.__l.__size_;
  }
  unint64_t v16 = size + v13;
  if (size + v13 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v16 <= 0x16)
  {
    unint64_t v215 = 0;
    long long __dst = 0uLL;
    p_dst = &__dst;
    HIBYTE(v215) = size + v13;
    if (!v13) {
      goto LABEL_26;
    }
    goto LABEL_22;
  }
  uint64_t v24 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v16 | 7) != 0x17) {
    uint64_t v24 = v16 | 7;
  }
  uint64_t v25 = v24 + 1;
  p_dst = (long long *)operator new(v24 + 1);
  *((void *)&__dst + 1) = size + v13;
  unint64_t v215 = v25 | 0x8000000000000000;
  *(void *)&long long __dst = p_dst;
  if (v13)
  {
LABEL_22:
    if (v12 >= 0) {
      size_t v18 = (char *)a2;
    }
    else {
      size_t v18 = (char *)*a2;
    }
    memmove(p_dst, v18, v13);
  }
LABEL_26:
  std::string::size_type v19 = (char *)p_dst + v13;
  if (size)
  {
    if (v14 >= 0) {
      size_t v20 = &v216;
    }
    else {
      size_t v20 = (std::string *)v216.__r_.__value_.__r.__words[0];
    }
    memmove(v19, v20, size);
  }
  v19[size] = 0;
  unint64_t v21 = *(void *)(a4 + 8);
  uint64_t v22 = v212;
  if (v21 >= *(void *)(a4 + 16))
  {
    unint64_t v26 = sub_6E8C4((void **)a4, (uint64_t)&__dst);
    int v27 = SHIBYTE(v215);
    *(void *)(a4 + 8) = v26;
    if (v27 < 0)
    {
      operator delete((void *)__dst);
      if (!*(unsigned char *)(v22 + 1856)) {
        goto LABEL_409;
      }
    }
    else if (!*(unsigned char *)(v22 + 1856))
    {
      goto LABEL_409;
    }
  }
  else
  {
    long long v23 = __dst;
    *(void *)(v21 + 16) = v215;
    *(_OWORD *)unint64_t v21 = v23;
    *(void *)(a4 + 8) = v21 + 24;
    if (!*(unsigned char *)(v22 + 1856)) {
      goto LABEL_409;
    }
  }
  uint64_t v210 = a3;
  std::string::size_type v28 = *((unsigned __int8 *)a2 + 23);
  if ((v28 & 0x80u) == 0) {
    int v29 = (char *)a2;
  }
  else {
    int v29 = (char *)*a2;
  }
  if (byte_25C5487 >= 0) {
    long long v30 = &qword_25C5470;
  }
  else {
    long long v30 = (uint64_t *)qword_25C5470;
  }
  if (byte_25C5487 >= 0) {
    int64_t v31 = byte_25C5487;
  }
  else {
    int64_t v31 = unk_25C5478;
  }
  if (v31)
  {
    if ((v28 & 0x80u) == 0) {
      std::string::size_type v32 = (char *)*((unsigned __int8 *)a2 + 23);
    }
    else {
      std::string::size_type v32 = (char *)a2[1];
    }
    uint64_t v33 = &v32[(void)v29];
    if ((uint64_t)v32 >= v31)
    {
      int v53 = *(char *)v30;
      long long v54 = v29;
      do
      {
        std::string::size_type v55 = &v32[-v31];
        if (v55 == (char *)-1) {
          break;
        }
        size_t v56 = (char *)memchr(v54, v53, (size_t)(v55 + 1));
        if (!v56) {
          break;
        }
        uint64_t v34 = v56;
        if (!memcmp(v56, v30, v31)) {
          goto LABEL_55;
        }
        long long v54 = v34 + 1;
        std::string::size_type v32 = (char *)(v33 - (v34 + 1));
      }
      while ((uint64_t)v32 >= v31);
    }
    uint64_t v34 = v33;
LABEL_55:
    uint64_t v35 = v34 - v29;
    if (v34 == v33) {
      uint64_t v35 = -1;
    }
  }
  else
  {
    uint64_t v35 = 0;
  }
  uint64_t v209 = v35;
  if (byte_25C5457 >= 0) {
    uint64_t v36 = &xmmword_25C5440;
  }
  else {
    uint64_t v36 = (long long *)xmmword_25C5440;
  }
  if (byte_25C5457 >= 0) {
    int64_t v37 = byte_25C5457;
  }
  else {
    int64_t v37 = *((void *)&xmmword_25C5440 + 1);
  }
  if (v37)
  {
    if ((v28 & 0x80u) == 0) {
      uint64_t v38 = (char *)v28;
    }
    else {
      uint64_t v38 = (char *)a2[1];
    }
    uint64_t v39 = &v38[(void)v29];
    if ((uint64_t)v38 >= v37)
    {
      int v57 = *(char *)v36;
      std::string::size_type v58 = v29;
      do
      {
        std::string::size_type v59 = &v38[-v37];
        if (v59 == (char *)-1) {
          break;
        }
        uint64_t v60 = (char *)memchr(v58, v57, (size_t)(v59 + 1));
        if (!v60) {
          break;
        }
        int64_t v40 = v60;
        if (!memcmp(v60, v36, v37)) {
          goto LABEL_71;
        }
        std::string::size_type v58 = v40 + 1;
        uint64_t v38 = (char *)(v39 - (v40 + 1));
      }
      while ((uint64_t)v38 >= v37);
    }
    int64_t v40 = v39;
LABEL_71:
    uint64_t v41 = v40 - v29;
    if (v40 == v39) {
      uint64_t v41 = -1;
    }
    uint64_t v207 = v41;
  }
  else
  {
    uint64_t v207 = 0;
  }
  if (byte_25C546F >= 0) {
    std::string::size_type v42 = &qword_25C5458;
  }
  else {
    std::string::size_type v42 = (uint64_t *)qword_25C5458;
  }
  if (byte_25C546F >= 0) {
    int64_t v43 = byte_25C546F;
  }
  else {
    int64_t v43 = qword_25C5460;
  }
  if (v43)
  {
    if ((v28 & 0x80u) == 0) {
      unsigned __int8 v44 = (char *)v28;
    }
    else {
      unsigned __int8 v44 = (char *)a2[1];
    }
    std::string v45 = &v44[(void)v29];
    if ((uint64_t)v44 >= v43)
    {
      int v61 = *(char *)v42;
      uint64_t v62 = v29;
      do
      {
        unint64_t v63 = &v44[-v43];
        if (v63 == (char *)-1) {
          break;
        }
        int64_t v64 = (char *)memchr(v62, v61, (size_t)(v63 + 1));
        if (!v64) {
          break;
        }
        std::string v46 = v64;
        if (!memcmp(v64, v42, v43)) {
          goto LABEL_87;
        }
        uint64_t v62 = v46 + 1;
        unsigned __int8 v44 = (char *)(v45 - (v46 + 1));
      }
      while ((uint64_t)v44 >= v43);
    }
    std::string v46 = v45;
LABEL_87:
    if (v46 == v45) {
      unint64_t v47 = -1;
    }
    else {
      unint64_t v47 = v46 - v29;
    }
  }
  else
  {
    unint64_t v47 = 0;
  }
  if (byte_25C54CF >= 0) {
    std::string v48 = &qword_25C54B8;
  }
  else {
    std::string v48 = (uint64_t *)qword_25C54B8;
  }
  if (byte_25C54CF >= 0) {
    int64_t v49 = byte_25C54CF;
  }
  else {
    int64_t v49 = *(void *)&word_25C54C0;
  }
  unint64_t v211 = v47;
  if (v49)
  {
    if ((v28 & 0x80u) == 0) {
      std::string v50 = (char *)v28;
    }
    else {
      std::string v50 = (char *)a2[1];
    }
    int v51 = &v50[(void)v29];
    if ((uint64_t)v50 >= v49)
    {
      int v65 = *(char *)v48;
      std::string::size_type v66 = v29;
      do
      {
        v67 = &v50[-v49];
        if (v67 == (char *)-1) {
          break;
        }
        int v68 = (char *)memchr(v66, v65, (size_t)(v67 + 1));
        if (!v68) {
          break;
        }
        size_t v52 = v68;
        if (!memcmp(v68, v48, v49)) {
          goto LABEL_128;
        }
        std::string::size_type v66 = v52 + 1;
        std::string v50 = (char *)(v51 - (v52 + 1));
      }
      while ((uint64_t)v50 >= v49);
      size_t v52 = v51;
LABEL_128:
      unint64_t v47 = v211;
    }
    else
    {
      size_t v52 = &v50[(void)v29];
    }
    uint64_t v69 = v52 - v29;
    if (v52 == v51) {
      uint64_t v69 = -1;
    }
    uint64_t v208 = v69;
  }
  else
  {
    uint64_t v208 = 0;
  }
  if (byte_25C54E7 >= 0) {
    uint64_t v70 = &qword_25C54D0;
  }
  else {
    uint64_t v70 = (uint64_t *)qword_25C54D0;
  }
  if (byte_25C54E7 >= 0) {
    int64_t v71 = byte_25C54E7;
  }
  else {
    int64_t v71 = *(void *)&word_25C54D8;
  }
  if (v71)
  {
    if ((v28 & 0x80u) == 0) {
      v72 = (char *)v28;
    }
    else {
      v72 = (char *)a2[1];
    }
    v73 = &v72[(void)v29];
    if ((uint64_t)v72 >= v71)
    {
      int v76 = *(char *)v70;
      uint64_t v77 = v29;
      do
      {
        uint64_t v78 = &v72[-v71];
        if (v78 == (char *)-1) {
          break;
        }
        uint64_t v79 = (char *)memchr(v77, v76, (size_t)(v78 + 1));
        if (!v79) {
          break;
        }
        int64_t v74 = v79;
        if (!memcmp(v79, v70, v71)) {
          goto LABEL_151;
        }
        uint64_t v77 = v74 + 1;
        v72 = (char *)(v73 - (v74 + 1));
      }
      while ((uint64_t)v72 >= v71);
      int64_t v74 = v73;
LABEL_151:
      unint64_t v47 = v211;
    }
    else
    {
      int64_t v74 = &v72[(void)v29];
    }
    if (v74 == v73) {
      unint64_t v75 = -1;
    }
    else {
      unint64_t v75 = v74 - v29;
    }
  }
  else
  {
    unint64_t v75 = 0;
  }
  if (byte_25C54B7 >= 0) {
    int64_t v80 = &qword_25C54A0;
  }
  else {
    int64_t v80 = (uint64_t *)qword_25C54A0;
  }
  if (byte_25C54B7 >= 0) {
    int64_t v81 = byte_25C54B7;
  }
  else {
    int64_t v81 = unk_25C54A8;
  }
  if (!v81)
  {
    uint64_t v84 = 0;
    if (v75 != -1) {
      goto LABEL_180;
    }
    goto LABEL_206;
  }
  if ((v28 & 0x80u) == 0) {
    int64_t v82 = (char *)v28;
  }
  else {
    int64_t v82 = (char *)a2[1];
  }
  std::string::size_type v83 = &v82[(void)v29];
  if ((uint64_t)v82 >= v81)
  {
    int v85 = *(char *)v80;
    int64_t v86 = v29;
    do
    {
      v87 = &v82[-v81];
      if (v87 == (char *)-1) {
        break;
      }
      int64_t v88 = (char *)memchr(v86, v85, (size_t)(v87 + 1));
      if (!v88) {
        break;
      }
      uint64_t v89 = v88;
      if (!memcmp(v88, v80, v81)) {
        goto LABEL_176;
      }
      int64_t v86 = v89 + 1;
      int64_t v82 = (char *)(v83 - (v89 + 1));
    }
    while ((uint64_t)v82 >= v81);
    uint64_t v89 = v83;
LABEL_176:
    unint64_t v47 = v211;
    if (v89 == v83) {
      uint64_t v84 = -1;
    }
    else {
      uint64_t v84 = v89 - v29;
    }
    if (v75 != -1) {
      goto LABEL_180;
    }
LABEL_206:
    std::string::size_type v101 = v208;
    std::string::size_type v102 = v209;
    uint64_t v103 = v210;
    uint64_t v104 = v212;
    if (v208 == -1) {
      goto LABEL_234;
    }
    goto LABEL_207;
  }
  uint64_t v84 = -1;
  if (v75 == -1) {
    goto LABEL_206;
  }
LABEL_180:
  if ((v28 & 0x80u) == 0) {
    std::string::size_type v90 = v28;
  }
  else {
    std::string::size_type v90 = (std::string::size_type)a2[1];
  }
  if (v90 >= v75) {
    std::string::size_type v91 = v75;
  }
  else {
    std::string::size_type v91 = v90;
  }
  if (v91 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v91 >= 0x17)
  {
    uint64_t v93 = (v91 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v91 | 7) != 0x17) {
      uint64_t v93 = v91 | 7;
    }
    uint64_t v94 = v93 + 1;
    std::string::size_type v92 = operator new(v93 + 1);
    v213.__r_.__value_.__l.__size_ = v91;
    v213.__r_.__value_.__r.__words[2] = v94 | 0x8000000000000000;
    v213.__r_.__value_.__r.__words[0] = (std::string::size_type)v92;
    unint64_t v47 = v211;
    goto LABEL_193;
  }
  *((unsigned char *)&v213.__r_.__value_.__s + 23) = v91;
  std::string::size_type v92 = &v213;
  if (v91) {
LABEL_193:
  }
    memmove(v92, v29, v91);
  *((unsigned char *)v92 + v91) = 0;
  if ((v216.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v95 = &v216;
  }
  else {
    uint64_t v95 = (std::string *)v216.__r_.__value_.__r.__words[0];
  }
  if ((v216.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v96 = HIBYTE(v216.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v96 = v216.__r_.__value_.__l.__size_;
  }
  v97 = std::string::append(&v213, (const std::string::value_type *)v95, v96);
  long long v98 = *(_OWORD *)&v97->__r_.__value_.__l.__data_;
  unint64_t v215 = v97->__r_.__value_.__r.__words[2];
  long long __dst = v98;
  v97->__r_.__value_.__l.__size_ = 0;
  v97->__r_.__value_.__r.__words[2] = 0;
  v97->__r_.__value_.__r.__words[0] = 0;
  unint64_t v99 = *(void *)(a4 + 8);
  if (v99 >= *(void *)(a4 + 16))
  {
    int64_t v105 = sub_6E8C4((void **)a4, (uint64_t)&__dst);
    int v106 = SHIBYTE(v215);
    *(void *)(a4 + 8) = v105;
    if (v106 < 0)
    {
      operator delete((void *)__dst);
      if ((SHIBYTE(v213.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_206;
      }
    }
    else if ((SHIBYTE(v213.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_206;
    }
  }
  else
  {
    long long v100 = __dst;
    *(void *)(v99 + 16) = v215;
    *(_OWORD *)unint64_t v99 = v100;
    unint64_t v215 = 0;
    long long __dst = 0uLL;
    *(void *)(a4 + 8) = v99 + 24;
    if ((SHIBYTE(v213.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_206;
    }
  }
  operator delete(v213.__r_.__value_.__l.__data_);
  std::string::size_type v101 = v208;
  std::string::size_type v102 = v209;
  uint64_t v103 = v210;
  uint64_t v104 = v212;
  if (v208 == -1) {
    goto LABEL_234;
  }
LABEL_207:
  std::string::size_type v107 = *((unsigned __int8 *)a2 + 23);
  int v108 = (char)v107;
  if ((v107 & 0x80u) != 0) {
    std::string::size_type v107 = (std::string::size_type)a2[1];
  }
  if (v108 >= 0) {
    std::string::size_type v109 = a2;
  }
  else {
    std::string::size_type v109 = *a2;
  }
  if (v107 >= v101) {
    std::string::size_type v110 = v101;
  }
  else {
    std::string::size_type v110 = v107;
  }
  if (v110 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v110 >= 0x17)
  {
    uint64_t v112 = (v110 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v110 | 7) != 0x17) {
      uint64_t v112 = v110 | 7;
    }
    uint64_t v113 = v112 + 1;
    uint64_t v111 = operator new(v112 + 1);
    v213.__r_.__value_.__l.__size_ = v110;
    v213.__r_.__value_.__r.__words[2] = v113 | 0x8000000000000000;
    v213.__r_.__value_.__r.__words[0] = (std::string::size_type)v111;
    unint64_t v47 = v211;
  }
  else
  {
    *((unsigned char *)&v213.__r_.__value_.__s + 23) = v110;
    uint64_t v111 = &v213;
    if (!v110) {
      goto LABEL_223;
    }
  }
  memmove(v111, v109, v110);
LABEL_223:
  *((unsigned char *)v111 + v110) = 0;
  if ((v216.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int64_t v114 = &v216;
  }
  else {
    int64_t v114 = (std::string *)v216.__r_.__value_.__r.__words[0];
  }
  if ((v216.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v115 = HIBYTE(v216.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v115 = v216.__r_.__value_.__l.__size_;
  }
  int v116 = std::string::append(&v213, (const std::string::value_type *)v114, v115);
  long long v117 = *(_OWORD *)&v116->__r_.__value_.__l.__data_;
  unint64_t v215 = v116->__r_.__value_.__r.__words[2];
  long long __dst = v117;
  v116->__r_.__value_.__l.__size_ = 0;
  v116->__r_.__value_.__r.__words[2] = 0;
  v116->__r_.__value_.__r.__words[0] = 0;
  unint64_t v118 = *(void *)(a4 + 8);
  if (v118 < *(void *)(a4 + 16))
  {
    long long v119 = __dst;
    *(void *)(v118 + 16) = v215;
    *(_OWORD *)unint64_t v118 = v119;
    unint64_t v215 = 0;
    long long __dst = 0uLL;
    *(void *)(a4 + 8) = v118 + 24;
    if ((SHIBYTE(v213.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_234;
    }
    goto LABEL_231;
  }
  v120 = sub_6E8C4((void **)a4, (uint64_t)&__dst);
  int v121 = SHIBYTE(v215);
  *(void *)(a4 + 8) = v120;
  if ((v121 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v213.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_234;
    }
LABEL_231:
    operator delete(v213.__r_.__value_.__l.__data_);
    goto LABEL_234;
  }
  operator delete((void *)__dst);
  if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_231;
  }
LABEL_234:
  if (v47 != -1)
  {
    std::string::size_type v122 = *((unsigned __int8 *)a2 + 23);
    int v123 = (char)v122;
    if ((v122 & 0x80u) != 0) {
      std::string::size_type v122 = (std::string::size_type)a2[1];
    }
    if (v123 >= 0) {
      int v124 = a2;
    }
    else {
      int v124 = *a2;
    }
    if (v122 >= v47) {
      std::string::size_type v125 = v47;
    }
    else {
      std::string::size_type v125 = v122;
    }
    if (v125 > 0x7FFFFFFFFFFFFFF7) {
      sub_188D690();
    }
    if (v125 >= 0x17)
    {
      uint64_t v132 = (v125 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v125 | 7) != 0x17) {
        uint64_t v132 = v125 | 7;
      }
      uint64_t v133 = v132 + 1;
      v126 = operator new(v132 + 1);
      v213.__r_.__value_.__l.__size_ = v125;
      v213.__r_.__value_.__r.__words[2] = v133 | 0x8000000000000000;
      v213.__r_.__value_.__r.__words[0] = (std::string::size_type)v126;
    }
    else
    {
      *((unsigned char *)&v213.__r_.__value_.__s + 23) = v125;
      v126 = &v213;
      if (!v125)
      {
LABEL_264:
        v126[v125] = 0;
        int v134 = *(char *)(v103 + 23);
        if (v134 >= 0) {
          uint64_t v135 = (const std::string::value_type *)v103;
        }
        else {
          uint64_t v135 = *(const std::string::value_type **)v103;
        }
        if (v134 >= 0) {
          std::string::size_type v136 = *(unsigned __int8 *)(v103 + 23);
        }
        else {
          std::string::size_type v136 = *(void *)(v103 + 8);
        }
        int64_t v137 = std::string::append(&v213, v135, v136);
        long long v138 = *(_OWORD *)&v137->__r_.__value_.__l.__data_;
        unint64_t v215 = v137->__r_.__value_.__r.__words[2];
        long long __dst = v138;
        v137->__r_.__value_.__l.__size_ = 0;
        v137->__r_.__value_.__r.__words[2] = 0;
        v137->__r_.__value_.__r.__words[0] = 0;
        unint64_t v139 = *(void *)(a4 + 8);
        if (v139 >= *(void *)(a4 + 16))
        {
          int v140 = sub_6E8C4((void **)a4, (uint64_t)&__dst);
          goto LABEL_293;
        }
LABEL_287:
        long long v147 = __dst;
        *(void *)(v139 + 16) = v215;
        *(_OWORD *)unint64_t v139 = v147;
        unint64_t v215 = 0;
        long long __dst = 0uLL;
        *(void *)(a4 + 8) = v139 + 24;
        if ((SHIBYTE(v213.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_295;
        }
        goto LABEL_288;
      }
    }
    memmove(v126, v124, v125);
    goto LABEL_264;
  }
  if (v84 == -1) {
    goto LABEL_295;
  }
  unint64_t v127 = *((unsigned __int8 *)a2 + 23);
  int v128 = (char)v127;
  if ((v127 & 0x80u) != 0) {
    unint64_t v127 = (unint64_t)a2[1];
  }
  if (v128 >= 0) {
    v129 = a2;
  }
  else {
    v129 = *a2;
  }
  if (v127 >= v84 - 1) {
    std::string::size_type v130 = v84 - 1;
  }
  else {
    std::string::size_type v130 = v127;
  }
  if (v130 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v130 >= 0x17)
  {
    uint64_t v141 = (v130 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v130 | 7) != 0x17) {
      uint64_t v141 = v130 | 7;
    }
    uint64_t v142 = v141 + 1;
    int64_t v131 = operator new(v141 + 1);
    v213.__r_.__value_.__l.__size_ = v130;
    v213.__r_.__value_.__r.__words[2] = v142 | 0x8000000000000000;
    v213.__r_.__value_.__r.__words[0] = (std::string::size_type)v131;
    goto LABEL_279;
  }
  *((unsigned char *)&v213.__r_.__value_.__s + 23) = v130;
  int64_t v131 = &v213;
  if (v130) {
LABEL_279:
  }
    memmove(v131, v129, v130);
  *((unsigned char *)v131 + v130) = 0;
  if ((v216.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int64_t v143 = &v216;
  }
  else {
    int64_t v143 = (std::string *)v216.__r_.__value_.__r.__words[0];
  }
  if ((v216.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v144 = HIBYTE(v216.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v144 = v216.__r_.__value_.__l.__size_;
  }
  v145 = std::string::append(&v213, (const std::string::value_type *)v143, v144);
  long long v146 = *(_OWORD *)&v145->__r_.__value_.__l.__data_;
  unint64_t v215 = v145->__r_.__value_.__r.__words[2];
  long long __dst = v146;
  v145->__r_.__value_.__l.__size_ = 0;
  v145->__r_.__value_.__r.__words[2] = 0;
  v145->__r_.__value_.__r.__words[0] = 0;
  unint64_t v139 = *(void *)(a4 + 8);
  if (v139 < *(void *)(a4 + 16)) {
    goto LABEL_287;
  }
  int v140 = sub_6E8C4((void **)a4, (uint64_t)&__dst);
LABEL_293:
  int v149 = SHIBYTE(v215);
  *(void *)(a4 + 8) = v140;
  if (v149 < 0)
  {
    operator delete((void *)__dst);
    if ((SHIBYTE(v213.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_295:
      std::string::size_type v148 = v207;
      if (v207 == -1) {
        goto LABEL_324;
      }
      goto LABEL_296;
    }
  }
  else if ((SHIBYTE(v213.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_295;
  }
LABEL_288:
  operator delete(v213.__r_.__value_.__l.__data_);
  std::string::size_type v148 = v207;
  if (v207 == -1) {
    goto LABEL_324;
  }
LABEL_296:
  std::string::size_type v150 = v148;
  std::string::size_type v151 = *((unsigned __int8 *)a2 + 23);
  int v152 = (char)v151;
  if ((v151 & 0x80u) != 0) {
    std::string::size_type v151 = (std::string::size_type)a2[1];
  }
  if (v152 >= 0) {
    v153 = a2;
  }
  else {
    v153 = *a2;
  }
  if (v151 >= v150) {
    std::string::size_type v154 = v150;
  }
  else {
    std::string::size_type v154 = v151;
  }
  if (v154 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v154 >= 0x17)
  {
    uint64_t v156 = (v154 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v154 | 7) != 0x17) {
      uint64_t v156 = v154 | 7;
    }
    uint64_t v157 = v156 + 1;
    char v155 = operator new(v156 + 1);
    v213.__r_.__value_.__l.__size_ = v154;
    v213.__r_.__value_.__r.__words[2] = v157 | 0x8000000000000000;
    v213.__r_.__value_.__r.__words[0] = (std::string::size_type)v155;
  }
  else
  {
    *((unsigned char *)&v213.__r_.__value_.__s + 23) = v154;
    char v155 = &v213;
    if (!v154) {
      goto LABEL_312;
    }
  }
  memmove(v155, v153, v154);
LABEL_312:
  *((unsigned char *)v155 + v154) = 0;
  int v158 = *(char *)(v103 + 23);
  if (v158 >= 0) {
    size_t v159 = (const std::string::value_type *)v103;
  }
  else {
    size_t v159 = *(const std::string::value_type **)v103;
  }
  if (v158 >= 0) {
    std::string::size_type v160 = *(unsigned __int8 *)(v103 + 23);
  }
  else {
    std::string::size_type v160 = *(void *)(v103 + 8);
  }
  v161 = std::string::append(&v213, v159, v160);
  long long v162 = *(_OWORD *)&v161->__r_.__value_.__l.__data_;
  unint64_t v215 = v161->__r_.__value_.__r.__words[2];
  long long __dst = v162;
  v161->__r_.__value_.__l.__size_ = 0;
  v161->__r_.__value_.__r.__words[2] = 0;
  v161->__r_.__value_.__r.__words[0] = 0;
  unint64_t v163 = *(void *)(a4 + 8);
  if (v163 >= *(void *)(a4 + 16))
  {
    uint64_t v165 = sub_6E8C4((void **)a4, (uint64_t)&__dst);
    int v166 = SHIBYTE(v215);
    *(void *)(a4 + 8) = v165;
    if (v166 < 0)
    {
      operator delete((void *)__dst);
      if ((SHIBYTE(v213.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_324;
      }
    }
    else if ((SHIBYTE(v213.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_324;
    }
LABEL_320:
    operator delete(v213.__r_.__value_.__l.__data_);
    if (v102 == -1) {
      goto LABEL_352;
    }
    goto LABEL_325;
  }
  long long v164 = __dst;
  *(void *)(v163 + 16) = v215;
  *(_OWORD *)unint64_t v163 = v164;
  unint64_t v215 = 0;
  long long __dst = 0uLL;
  *(void *)(a4 + 8) = v163 + 24;
  if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_320;
  }
LABEL_324:
  if (v102 == -1) {
    goto LABEL_352;
  }
LABEL_325:
  std::string::size_type v167 = *((unsigned __int8 *)a2 + 23);
  int v168 = (char)v167;
  if ((v167 & 0x80u) != 0) {
    std::string::size_type v167 = (std::string::size_type)a2[1];
  }
  if (v168 >= 0) {
    int v169 = a2;
  }
  else {
    int v169 = *a2;
  }
  if (v167 >= v102) {
    std::string::size_type v170 = v102;
  }
  else {
    std::string::size_type v170 = v167;
  }
  if (v170 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v170 >= 0x17)
  {
    uint64_t v172 = (v170 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v170 | 7) != 0x17) {
      uint64_t v172 = v170 | 7;
    }
    uint64_t v173 = v172 + 1;
    unint64_t v171 = operator new(v172 + 1);
    v213.__r_.__value_.__l.__size_ = v170;
    v213.__r_.__value_.__r.__words[2] = v173 | 0x8000000000000000;
    v213.__r_.__value_.__r.__words[0] = (std::string::size_type)v171;
  }
  else
  {
    *((unsigned char *)&v213.__r_.__value_.__s + 23) = v170;
    unint64_t v171 = &v213;
    if (!v170) {
      goto LABEL_341;
    }
  }
  memmove(v171, v169, v170);
LABEL_341:
  *((unsigned char *)v171 + v170) = 0;
  int v174 = *(char *)(v103 + 23);
  if (v174 >= 0) {
    v175 = (const std::string::value_type *)v103;
  }
  else {
    v175 = *(const std::string::value_type **)v103;
  }
  if (v174 >= 0) {
    std::string::size_type v176 = *(unsigned __int8 *)(v103 + 23);
  }
  else {
    std::string::size_type v176 = *(void *)(v103 + 8);
  }
  size_t v177 = std::string::append(&v213, v175, v176);
  long long v178 = *(_OWORD *)&v177->__r_.__value_.__l.__data_;
  unint64_t v215 = v177->__r_.__value_.__r.__words[2];
  long long __dst = v178;
  v177->__r_.__value_.__l.__size_ = 0;
  v177->__r_.__value_.__r.__words[2] = 0;
  v177->__r_.__value_.__r.__words[0] = 0;
  unint64_t v179 = *(void *)(a4 + 8);
  if (v179 >= *(void *)(a4 + 16))
  {
    v181 = sub_6E8C4((void **)a4, (uint64_t)&__dst);
    int v182 = SHIBYTE(v215);
    *(void *)(a4 + 8) = v181;
    if (v182 < 0)
    {
      operator delete((void *)__dst);
      if ((SHIBYTE(v213.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_352;
      }
    }
    else if ((SHIBYTE(v213.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_352;
    }
    goto LABEL_349;
  }
  long long v180 = __dst;
  *(void *)(v179 + 16) = v215;
  *(_OWORD *)unint64_t v179 = v180;
  unint64_t v215 = 0;
  long long __dst = 0uLL;
  *(void *)(a4 + 8) = v179 + 24;
  if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0) {
LABEL_349:
  }
    operator delete(v213.__r_.__value_.__l.__data_);
LABEL_352:
  if (*(_DWORD *)(v104 + 1848) != 17 || !*(unsigned char *)(v104 + 1856)) {
    goto LABEL_409;
  }
  v183 = *(unsigned __int8 ***)(v104 + 1968);
  char v184 = *((unsigned char *)v183 + 23);
  if (v184 < 0)
  {
    if (!v183[1]) {
      goto LABEL_409;
    }
  }
  else if (!*((unsigned char *)v183 + 23))
  {
    goto LABEL_409;
  }
  uint64_t v185 = qword_25C6328;
  uint64_t v186 = *(void *)algn_25C6330;
  if (qword_25C6328 != *(void *)algn_25C6330)
  {
    if (v184 >= 0) {
      uint64_t v187 = (unsigned __int8 *)*((unsigned __int8 *)v183 + 23);
    }
    else {
      uint64_t v187 = v183[1];
    }
    if (v184 >= 0) {
      uint64_t v188 = (unsigned __int8 *)v183;
    }
    else {
      uint64_t v188 = *v183;
    }
    while (1)
    {
      uint64_t v189 = *(unsigned __int8 *)(v185 + 23);
      if ((v189 & 0x80u) == 0) {
        v190 = (unsigned __int8 *)*(unsigned __int8 *)(v185 + 23);
      }
      else {
        v190 = *(unsigned __int8 **)(v185 + 8);
      }
      if (v190 == v187)
      {
        if ((v189 & 0x80) != 0)
        {
          if (!memcmp(*(const void **)v185, v188, *(void *)(v185 + 8))) {
            break;
          }
        }
        else
        {
          if (!*(unsigned char *)(v185 + 23)) {
            break;
          }
          uint64_t v191 = 0;
          while (*(unsigned __int8 *)(v185 + v191) == v188[v191])
          {
            if (v189 == ++v191) {
              goto LABEL_380;
            }
          }
        }
      }
      v185 += 24;
      if (v185 == v186) {
        goto LABEL_409;
      }
    }
  }
LABEL_380:
  if (v185 != v186)
  {
    int v192 = byte_25C4767;
    if (byte_25C4767 >= 0) {
      size_t v193 = byte_25C4767;
    }
    else {
      size_t v193 = qword_25C4758;
    }
    int v194 = *(char *)(v103 + 23);
    if (v194 >= 0) {
      size_t v195 = *(unsigned __int8 *)(v103 + 23);
    }
    else {
      size_t v195 = *(void *)(v103 + 8);
    }
    unint64_t v196 = v195 + v193;
    if (v195 + v193 > 0x7FFFFFFFFFFFFFF7) {
      sub_188D690();
    }
    if (v196 > 0x16)
    {
      uint64_t v198 = (v196 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v196 | 7) != 0x17) {
        uint64_t v198 = v196 | 7;
      }
      uint64_t v199 = v198 + 1;
      v197 = (long long *)operator new(v198 + 1);
      *((void *)&__dst + 1) = v195 + v193;
      unint64_t v215 = v199 | 0x8000000000000000;
      *(void *)&long long __dst = v197;
    }
    else
    {
      unint64_t v215 = 0;
      long long __dst = 0uLL;
      v197 = &__dst;
      HIBYTE(v215) = v195 + v193;
    }
    if (v193)
    {
      if (v192 >= 0) {
        v200 = &qword_25C4750;
      }
      else {
        v200 = (uint64_t *)qword_25C4750;
      }
      memmove(v197, v200, v193);
    }
    v201 = (char *)v197 + v193;
    if (v195)
    {
      if (v194 >= 0) {
        v202 = (const void *)v103;
      }
      else {
        v202 = *(const void **)v103;
      }
      memmove(v201, v202, v195);
    }
    v201[v195] = 0;
    unint64_t v203 = *(void *)(a4 + 8);
    if (v203 >= *(void *)(a4 + 16))
    {
      int v205 = sub_6E8C4((void **)a4, (uint64_t)&__dst);
      int v206 = SHIBYTE(v215);
      *(void *)(a4 + 8) = v205;
      if (v206 < 0) {
        operator delete((void *)__dst);
      }
    }
    else
    {
      long long v204 = __dst;
      *(void *)(v203 + 16) = v215;
      *(_OWORD *)unint64_t v203 = v204;
      *(void *)(a4 + 8) = v203 + 24;
    }
  }
LABEL_409:
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v216.__r_.__value_.__l.__data_);
  }
}

void sub_815EA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  sub_1A668(v33);
  _Unwind_Resume(a1);
}

void sub_815F60(uint64_t a1@<X8>)
{
  *(_OWORD *)std::string __p = 0u;
  long long v8 = 0u;
  int v9 = 1065353216;
  uint64_t v5 = 0;
  std::string::size_type v6 = 0;
  sub_6373D8(a1, (uint64_t)&qword_25C5C20, (uint64_t)__p, 4, &v5);
  uint64_t v1 = v6;
  if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  uint64_t v2 = (void *)v8;
  if ((void)v8)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      sub_4F4B48((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  int v4 = __p[0];
  __p[0] = 0;
  if (v4) {
    operator delete(v4);
  }
}

void sub_816030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_81604C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1 + 80;
  if (!*(unsigned char *)(a1 + 1860))
  {
    sub_635CD0((long long **)(a1 + 80), (uint64_t)__p);
    uint64_t v7 = sub_5231C(v3);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    sub_6373D8((uint64_t)a2, (uint64_t)__p, v7, 2, &v9);
    long long v8 = v10;
    if (v10 && !atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      if ((v14 & 0x80000000) == 0) {
        return;
      }
    }
    else if ((v14 & 0x80000000) == 0)
    {
      return;
    }
    operator delete(__p[0]);
    return;
  }
  sub_635CD0((long long **)(a1 + 80), (uint64_t)__p);
  uint64_t v5 = sub_5231C(v3);
  uint64_t v11 = 0;
  int v12 = 0;
  sub_6373D8((uint64_t)a2, (uint64_t)__p, v5, 1, &v11);
  std::string::size_type v6 = v12;
  if (v12 && !atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if ((v14 & 0x80000000) == 0)
    {
LABEL_5:
      if (*(unsigned char *)(a1 + 1860))
      {
LABEL_6:
        sub_819E34(a1, a2, 1);
        return;
      }
      goto LABEL_13;
    }
  }
  else if ((v14 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p[0]);
  if (*(unsigned char *)(a1 + 1860)) {
    goto LABEL_6;
  }
LABEL_13:
  if (*(unsigned char *)(a1 + 1859)) {
    sub_819A0C(a1, (uint64_t)a2, 1, 0);
  }
}

void sub_816204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_816254(uint64_t a1, uint64_t *a2, int a3, int a4)
{
  if (*(unsigned char *)(a1 + 1860))
  {
    sub_819E34(a1, a2, a3);
  }
  else if (*(unsigned char *)(a1 + 1859))
  {
    sub_819A0C(a1, (uint64_t)a2, a3, a4);
  }
}

uint64_t sub_816270(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 96))();
}

void sub_816294(std::string::size_type a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  if (a2)
  {
    size_t v18 = 0;
    std::string::size_type v19 = 0;
    uint64_t v20 = 0;
    sub_8A6F8((char *)&v18, *(void *)(a1 + 80), *(void *)(a1 + 88), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 88) - *(void *)(a1 + 80)) >> 3));
    sub_5954B0((uint64_t)&v21, a1 + 104);
    char v23 = *(unsigned char *)(a1 + 144);
    goto LABEL_18;
  }
  if (sub_800B24(a1))
  {
    if ((byte_25C579F & 0x80000000) == 0)
    {
      uint64_t v5 = &xmmword_25C5788;
LABEL_12:
      *(_OWORD *)std::string __p = *v5;
      uint64_t v17 = *((void *)v5 + 2);
      goto LABEL_16;
    }
    std::string::size_type v6 = &xmmword_25C5788;
  }
  else if (*(unsigned char *)(a1 + 1859))
  {
    if ((byte_25C5817 & 0x80000000) == 0)
    {
      uint64_t v5 = &xmmword_25C5800;
      goto LABEL_12;
    }
    std::string::size_type v6 = &xmmword_25C5800;
  }
  else
  {
    if ((byte_25C585F & 0x80000000) == 0)
    {
      uint64_t v5 = &xmmword_25C5848;
      goto LABEL_12;
    }
    std::string::size_type v6 = &xmmword_25C5848;
  }
  sub_4200(__p, *(void **)v6, *((void *)v6 + 1));
LABEL_16:
  sub_80FC34(a1, 1, (uint64_t)__p, (uint64_t)&v18);
  if (SHIBYTE(v17) < 0) {
    operator delete(__p[0]);
  }
LABEL_18:
  uint64_t v14 = 0;
  int v15 = 0;
  sub_6370D4(a3, &v18, 1, &v14);
  uint64_t v7 = v15;
  if (v15 && !atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  long long v8 = v22;
  if (v22)
  {
    do
    {
      uint64_t v9 = (void *)*v8;
      sub_4F4B48((uint64_t)(v8 + 2));
      operator delete(v8);
      long long v8 = v9;
    }
    while (v9);
  }
  uint64_t v10 = v21;
  unint64_t v21 = 0;
  if (v10) {
    operator delete(v10);
  }
  uint64_t v11 = (void **)v18;
  if (v18)
  {
    int v12 = v19;
    size_t v13 = v18;
    if (v19 != v18)
    {
      do
      {
        if (*((char *)v12 - 1) < 0) {
          operator delete(*(v12 - 3));
        }
        v12 -= 3;
      }
      while (v12 != v11);
      size_t v13 = v18;
    }
    std::string::size_type v19 = v11;
    operator delete(v13);
  }
}

void sub_8164A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_8164E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
}

void sub_8164FC(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(unsigned char *)(a1 + 1856)) {
    sub_81650C(a1, a2, a3, a4);
  }
  else {
    sub_81769C(a1, a2, a3, a4);
  }
}

void sub_81650C(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  long long v178 = 0uLL;
  v179[0] = 0;
  uint64_t v8 = *(void *)(a1 + 1952);
  uint64_t v9 = *(void *)(a1 + 1960);
  int v10 = *(_DWORD *)(a1 + 2128);
  uint64_t v11 = operator new(0x870uLL);
  int v12 = v10 - 1;
  v11[1] = 0;
  v11[2] = 0;
  *uint64_t v11 = off_243AD88;
  std::string::size_type v13 = (std::string::size_type)(v11 + 3);
  sub_80E174((std::string::size_type)(v11 + 3), v8, v9, a2, a3, v12);
  std::string::size_type v176 = (char *)(v11 + 3);
  size_t v177 = (std::__shared_weak_count *)v11;
  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 88);
  uint64_t v16 = a1 + 80;
  std::string::size_type v170 = 0;
  unint64_t v171 = 0;
  uint64_t v172 = 0;
  sub_8A6F8((char *)&v170, v14, v15, 0xAAAAAAAAAAAAAAABLL * ((v15 - v14) >> 3));
  sub_5954B0((uint64_t)&v173, a1 + 104);
  char v175 = *(unsigned char *)(a1 + 144);
  if (sub_800B24((uint64_t)(v11 + 3)))
  {
    uint64_t v17 = &xmmword_25C5788;
    if ((byte_25C579F & 0x80000000) == 0)
    {
LABEL_3:
      long long __dst = *v17;
      uint64_t v169 = *((void *)v17 + 2);
      goto LABEL_7;
    }
  }
  else if (*((unsigned char *)v11 + 1883))
  {
    uint64_t v17 = &xmmword_25C5800;
    if ((byte_25C5817 & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v17 = &xmmword_25C5848;
    if ((byte_25C585F & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  sub_4200(&__dst, *(void **)v17, *((void *)v17 + 1));
LABEL_7:
  if (*((unsigned char *)v11 + 1876))
  {
    if (byte_25C4F77 < 0)
    {
      sub_4200(&v166, (void *)xmmword_25C4F60, *((unint64_t *)&xmmword_25C4F60 + 1));
    }
    else
    {
      long long v166 = xmmword_25C4F60;
      uint64_t v167 = unk_25C4F70;
    }
  }
  else
  {
    HIBYTE(v167) = 0;
    LOBYTE(v166) = 0;
  }
  uint64_t v18 = sub_7FE310(v13);
  sub_80FC34(v13, 1, (uint64_t)&__dst, (uint64_t)&__p);
  sub_817ED0(v13, &v149);
  if (v167 >= 0) {
    std::string::size_type v19 = (const std::string::value_type *)&v166;
  }
  else {
    std::string::size_type v19 = (const std::string::value_type *)v166;
  }
  if (v167 >= 0) {
    std::string::size_type v20 = HIBYTE(v167);
  }
  else {
    std::string::size_type v20 = *((void *)&v166 + 1);
  }
  unint64_t v21 = std::string::insert(&v149, 0, v19, v20);
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  std::string::size_type v158 = v21->__r_.__value_.__r.__words[2];
  long long v157 = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v149.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v149.__r_.__value_.__l.__data_);
  }
  if (sub_818034(a1, a1 + 80, (uint64_t)&__p))
  {
    sub_6352AC((uint64_t)&v149, (uint64_t)&v157);
    std::string::size_type v23 = __p.__r_.__value_.__r.__words[0];
    if (__p.__r_.__value_.__r.__words[0])
    {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
      uint64_t v25 = (void *)__p.__r_.__value_.__r.__words[0];
      if (__p.__r_.__value_.__l.__size_ != __p.__r_.__value_.__r.__words[0])
      {
        do
        {
          if (*(char *)(size - 1) < 0) {
            operator delete(*(void **)(size - 24));
          }
          size -= 24;
        }
        while (size != v23);
        uint64_t v25 = (void *)__p.__r_.__value_.__r.__words[0];
      }
      __p.__r_.__value_.__l.__size_ = v23;
      operator delete(v25);
    }
    std::string __p = v149;
    memset(&v149, 0, sizeof(v149));
    if (v163)
    {
      int v27 = v162;
      if (v162)
      {
        do
        {
          std::string::size_type v28 = (void *)*v27;
          sub_4F4B48((uint64_t)(v27 + 2));
          operator delete(v27);
          int v27 = v28;
        }
        while (v28);
      }
      long long v162 = 0;
      unint64_t v29 = v161;
      if (v161)
      {
        uint64_t v30 = 0;
        do
          *((void *)v160 + v30++) = 0;
        while (v29 != v30);
      }
      uint64_t v163 = 0;
    }
    int64_t v31 = v150;
    std::string::size_type v150 = 0;
    std::string::size_type v32 = v160;
    std::string::size_type v160 = v31;
    if (v32) {
      operator delete(v32);
    }
    unint64_t v33 = v151;
    uint64_t v34 = v152;
    unint64_t v151 = 0;
    uint64_t v163 = v153;
    int v164 = v154;
    unint64_t v161 = v33;
    long long v162 = v152;
    if (v153)
    {
      unint64_t v35 = v152[1];
      if ((v33 & (v33 - 1)) != 0)
      {
        if (v35 >= v33) {
          v35 %= v33;
        }
      }
      else
      {
        v35 &= v33 - 1;
      }
      *((void *)v160 + v35) = &v162;
      int v152 = 0;
      uint64_t v153 = 0;
      char v165 = v155;
    }
    else
    {
      char v165 = v155;
      if (v152)
      {
        do
        {
          uint64_t v36 = (void *)*v34;
          sub_4F4B48((uint64_t)(v34 + 2));
          operator delete(v34);
          uint64_t v34 = v36;
        }
        while (v36);
      }
    }
    int64_t v37 = v150;
    std::string::size_type v150 = 0;
    if (v37) {
      operator delete(v37);
    }
    std::string::size_type v38 = v149.__r_.__value_.__r.__words[0];
    if (v149.__r_.__value_.__r.__words[0])
    {
      std::string::size_type v39 = v149.__r_.__value_.__l.__size_;
      unint64_t v26 = (void *)v149.__r_.__value_.__r.__words[0];
      if (v149.__r_.__value_.__l.__size_ != v149.__r_.__value_.__r.__words[0])
      {
        do
        {
          if (*(char *)(v39 - 1) < 0) {
            operator delete(*(void **)(v39 - 24));
          }
          v39 -= 24;
        }
        while (v39 != v38);
        unint64_t v26 = (void *)v149.__r_.__value_.__r.__words[0];
      }
      v149.__r_.__value_.__l.__size_ = v38;
      goto LABEL_62;
    }
  }
  else if (*((unsigned char *)v11 + 1876))
  {
    sub_635CD0((long long **)&__p, (uint64_t)&v149);
    sub_80138C(a1, (char *)&v149);
    sub_63552C((uint64_t)&__p);
    sub_6351E8(&__p.__r_.__value_.__l.__data_, (uint64_t)&v149);
    if (SHIBYTE(v149.__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v26 = (void *)v149.__r_.__value_.__r.__words[0];
LABEL_62:
      operator delete(v26);
    }
  }
  uint64_t v147 = 0;
  std::string::size_type v148 = 0;
  sub_6370D4(&v149, &__p, 1, &v147);
  int64_t v40 = v148;
  if (v148 && !atomic_fetch_add(&v148->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
    std::__shared_weak_count::__release_weak(v40);
    uint64_t v41 = (uint64_t)v176;
    if (v176[1860]) {
      goto LABEL_66;
    }
  }
  else
  {
    uint64_t v41 = (uint64_t)v176;
    if (v176[1860])
    {
LABEL_66:
      sub_819E34(v41, (uint64_t *)&v149, 0);
      goto LABEL_70;
    }
  }
  if (*(unsigned char *)(v41 + 1859)) {
    sub_819A0C(v41, (uint64_t)&v149, 0, 0);
  }
LABEL_70:
  sub_635CD0((long long **)(a1 + 80), (uint64_t)v145);
  uint64_t v42 = sub_5231C(a1 + 80);
  sub_63531C((uint64_t)&v130, (uint64_t)v145, v42);
  int64_t v43 = (std::__shared_weak_count *)operator new(0x80uLL);
  v43->__shared_owners_ = 0;
  v43->__shared_weak_owners_ = 0;
  v43->__vftable = (std::__shared_weak_count_vtbl *)off_243A0E0;
  sub_59540C((uint64_t)&v126, (uint64_t)&v43[1], (uint64_t)&v149);
  long long v138 = &v43[1].__vftable;
  unint64_t v139 = v43;
  sub_6370D4(&v140, &v130, v18, &v138);
  unsigned __int8 v44 = v139;
  if (v139 && !atomic_fetch_add(&v139->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
    std::__shared_weak_count::__release_weak(v44);
  }
  std::string v45 = v133;
  if (v133)
  {
    do
    {
      std::string v46 = (void *)*v45;
      sub_4F4B48((uint64_t)(v45 + 2));
      operator delete(v45);
      std::string v45 = v46;
    }
    while (v46);
  }
  unint64_t v47 = v132;
  uint64_t v132 = 0;
  if (v47) {
    operator delete(v47);
  }
  std::string v48 = (void **)v130;
  if (v130)
  {
    int64_t v49 = v131;
    std::string v50 = v130;
    if (v131 != v130)
    {
      do
      {
        if (*((char *)v49 - 1) < 0) {
          operator delete(*(v49 - 3));
        }
        v49 -= 3;
      }
      while (v49 != v48);
      std::string v50 = v130;
    }
    int64_t v131 = v48;
    operator delete(v50);
  }
  if (*(unsigned char *)(a1 + 1860))
  {
    sub_819E34(a1, (uint64_t *)&v140, 0);
  }
  else if (*(unsigned char *)(a1 + 1859))
  {
    sub_819A0C(a1, (uint64_t)&v140, 0, 0);
  }
  uint64_t v51 = *((void *)&v178 + 1);
  if (*((void *)&v178 + 1) >= v179[0])
  {
    uint64_t v52 = sub_81A350((uint64_t *)&v178, (uint64_t)&v140);
  }
  else
  {
    sub_59540C((uint64_t)v179, *((uint64_t *)&v178 + 1), (uint64_t)&v140);
    uint64_t v52 = v51 + 104;
  }
  *((void *)&v178 + 1) = v52;
  int v53 = (uint64_t *)nullsub_1(&v170);
  uint64_t v135 = 0;
  std::string::size_type v136 = 0;
  unint64_t v137 = 0;
  sub_8A6F8((char *)&v135, *v53, v53[1], 0xAAAAAAAAAAAAAAABLL * ((v53[1] - *v53) >> 3));
  long long v54 = (char *)v135;
  std::string::size_type v55 = (void **)v136;
  if (0xAAAAAAAAAAAAAAABLL * ((v136 - (unsigned char *)v135) >> 3) >= 3)
  {
    if ((char *)v135 + 24 != v136)
    {
      size_t v56 = (char *)v135 + 23;
      do
      {
        int v57 = (void **)(v56 - 23);
        if (*v56 < 0) {
          operator delete(*v57);
        }
        *(_OWORD *)int v57 = *(_OWORD *)(v56 + 1);
        *(void *)(v56 - 7) = *(void *)(v56 + 17);
        v56[24] = 0;
        v56 += 24;
        *(v56 - 23) = 0;
        v54 += 24;
      }
      while (v56 + 1 != (char *)v55);
      std::string::size_type v55 = (void **)v136;
    }
    while (v55 != (void **)v54)
    {
      if (*((char *)v55 - 1) < 0) {
        operator delete(*(v55 - 3));
      }
      v55 -= 3;
    }
    std::string::size_type v136 = v54;
    if (*(v54 - 1) < 0) {
      operator delete(*((void **)v54 - 3));
    }
    std::string::size_type v136 = v54 - 24;
    sub_6353B4((uint64_t)&v170, (std::string **)&v135);
    sub_6352AC((uint64_t)&v126, (uint64_t)&v157);
    sub_6376A0(&v130, &v170, v18, &v126, 1);
    std::string::size_type v58 = v129;
    if (v129)
    {
      do
      {
        std::string::size_type v59 = (void *)*v58;
        sub_4F4B48((uint64_t)(v58 + 2));
        operator delete(v58);
        std::string::size_type v58 = v59;
      }
      while (v59);
    }
    uint64_t v60 = v128;
    int v128 = 0;
    if (v60) {
      operator delete(v60);
    }
    int v61 = (void **)v126;
    if (v126)
    {
      uint64_t v62 = v127;
      unint64_t v63 = v126;
      if (v127 != v126)
      {
        do
        {
          if (*((char *)v62 - 1) < 0) {
            operator delete(*(v62 - 3));
          }
          v62 -= 3;
        }
        while (v62 != v61);
        unint64_t v63 = v126;
      }
      unint64_t v127 = v61;
      operator delete(v63);
    }
    if (*(unsigned char *)(a1 + 1860))
    {
      sub_819E34(a1, (uint64_t *)&v130, 0);
    }
    else if (*(unsigned char *)(a1 + 1859))
    {
      sub_819A0C(a1, (uint64_t)&v130, 0, 0);
    }
    uint64_t v64 = *((void *)&v178 + 1);
    if (*((void *)&v178 + 1) >= v179[0])
    {
      uint64_t v65 = sub_81A350((uint64_t *)&v178, (uint64_t)&v130);
    }
    else
    {
      sub_59540C((uint64_t)v179, *((uint64_t *)&v178 + 1), (uint64_t)&v130);
      uint64_t v65 = v64 + 104;
    }
    *((void *)&v178 + 1) = v65;
    std::string::size_type v66 = v134;
    if (v134 && !atomic_fetch_add(&v134->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
      std::__shared_weak_count::__release_weak(v66);
    }
    v67 = v133;
    if (v133)
    {
      do
      {
        int v68 = (void *)*v67;
        sub_4F4B48((uint64_t)(v67 + 2));
        operator delete(v67);
        v67 = v68;
      }
      while (v68);
    }
    uint64_t v69 = v132;
    uint64_t v132 = 0;
    if (v69) {
      operator delete(v69);
    }
    uint64_t v70 = (void **)v130;
    if (v130)
    {
      int64_t v71 = v131;
      v72 = v130;
      if (v131 != v130)
      {
        do
        {
          if (*((char *)v71 - 1) < 0) {
            operator delete(*(v71 - 3));
          }
          v71 -= 3;
        }
        while (v71 != v70);
        v72 = v130;
      }
      int64_t v131 = v70;
      operator delete(v72);
    }
  }
  sub_63C898((uint64_t)&v135, 0, 0, 0);
  v73 = (void *)nullsub_1(a1 + 80);
  unint64_t v74 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v73[1] - *v73) >> 3);
  if (v74 != 1)
  {
    if (!v74)
    {
      unint64_t v75 = v136;
      if (v135 == v136) {
        goto LABEL_183;
      }
      goto LABEL_182;
    }
    if (*(_DWORD *)(a1 + 1848) != 17 || !*(unsigned char *)(a1 + 1856)) {
      goto LABEL_168;
    }
    int v76 = *(unsigned __int8 ***)(a1 + 1968);
    char v77 = *((unsigned char *)v76 + 23);
    if (v77 < 0)
    {
      if (!v76[1])
      {
LABEL_168:
        int v85 = (void *)nullsub_1(v16);
        int64_t v86 = (void **)(*v85 + 24 * v74 - 48);
        v87 = v136;
        if ((unint64_t)v136 >= v137)
        {
          uint64_t v89 = sub_1D740((char **)&v135, (uint64_t)v86);
        }
        else
        {
          if (*(char *)(*v85 + 24 * v74 - 25) < 0)
          {
            sub_4200(v136, *v86, *(void *)(*v85 + 24 * v74 - 40));
          }
          else
          {
            long long v88 = *(_OWORD *)v86;
            *((void *)v136 + 2) = *(void *)(*v85 + 24 * v74 - 32);
            _OWORD *v87 = v88;
          }
          uint64_t v89 = (char *)v87 + 24;
        }
        std::string::size_type v136 = v89;
        goto LABEL_175;
      }
    }
    else if (!*((unsigned char *)v76 + 23))
    {
      goto LABEL_168;
    }
    uint64_t v78 = qword_25C6328;
    uint64_t v79 = *(void *)algn_25C6330;
    if (qword_25C6328 != *(void *)algn_25C6330)
    {
      if (v77 >= 0) {
        int64_t v80 = (unsigned __int8 *)*((unsigned __int8 *)v76 + 23);
      }
      else {
        int64_t v80 = v76[1];
      }
      if (v77 >= 0) {
        int64_t v81 = *(unsigned __int8 **)(a1 + 1968);
      }
      else {
        int64_t v81 = *v76;
      }
      while (1)
      {
        uint64_t v82 = *(unsigned __int8 *)(v78 + 23);
        if ((v82 & 0x80u) == 0) {
          std::string::size_type v83 = (unsigned __int8 *)*(unsigned __int8 *)(v78 + 23);
        }
        else {
          std::string::size_type v83 = *(unsigned __int8 **)(v78 + 8);
        }
        if (v83 == v80)
        {
          if ((v82 & 0x80) != 0)
          {
            if (!memcmp(*(const void **)v78, v81, *(void *)(v78 + 8))) {
              break;
            }
          }
          else
          {
            if (!*(unsigned char *)(v78 + 23)) {
              break;
            }
            uint64_t v84 = 0;
            while (*(unsigned __int8 *)(v78 + v84) == v81[v84])
            {
              if (v82 == ++v84) {
                goto LABEL_167;
              }
            }
          }
        }
        v78 += 24;
        if (v78 == v79) {
          goto LABEL_168;
        }
      }
    }
LABEL_167:
    if (v78 == v79) {
      goto LABEL_168;
    }
  }
LABEL_175:
  uint64_t v90 = *(void *)(nullsub_1(v16) + 8);
  std::string::size_type v91 = (long long *)(v90 - 24);
  std::string::size_type v92 = v136;
  if ((unint64_t)v136 >= v137)
  {
    unint64_t v75 = sub_1D740((char **)&v135, (uint64_t)v91);
    std::string::size_type v136 = v75;
    if (v135 != v75) {
      goto LABEL_182;
    }
  }
  else
  {
    if (*(char *)(v90 - 1) < 0)
    {
      sub_4200(v136, *(void **)(v90 - 24), *(void *)(v90 - 16));
      unint64_t v75 = (char *)v92 + 24;
      std::string::size_type v136 = v75;
      if (v135 == v75) {
        goto LABEL_183;
      }
      goto LABEL_182;
    }
    long long v93 = *v91;
    *((void *)v136 + 2) = *(void *)(v90 - 8);
    *std::string::size_type v92 = v93;
    unint64_t v75 = (char *)v92 + 24;
    std::string::size_type v136 = v75;
    if (v135 != v75)
    {
LABEL_182:
      sub_6353B4((uint64_t)&v170, (std::string **)&v135);
      LODWORD(v130) = 1;
      sub_7FE9A4((uint64_t)&v178, (uint64_t)&v170, (unsigned int *)&v130);
      unint64_t v75 = (char *)v135;
    }
  }
LABEL_183:
  *(_OWORD *)a4 = v178;
  *(void *)(a4 + 16) = v179[0];
  v179[0] = 0;
  long long v178 = 0uLL;
  if (v75)
  {
    uint64_t v94 = (void **)v136;
    uint64_t v95 = v75;
    if (v136 != v75)
    {
      do
      {
        if (*((char *)v94 - 1) < 0) {
          operator delete(*(v94 - 3));
        }
        v94 -= 3;
      }
      while (v94 != (void **)v75);
      uint64_t v95 = v135;
    }
    std::string::size_type v136 = v75;
    operator delete(v95);
  }
  std::string::size_type v96 = v144;
  if (v144 && !atomic_fetch_add(&v144->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v96->__on_zero_shared)(v96);
    std::__shared_weak_count::__release_weak(v96);
  }
  v97 = v143;
  if (v143)
  {
    do
    {
      long long v98 = (void *)*v97;
      sub_4F4B48((uint64_t)(v97 + 2));
      operator delete(v97);
      v97 = v98;
    }
    while (v98);
  }
  unint64_t v99 = v142;
  uint64_t v142 = 0;
  if (v99) {
    operator delete(v99);
  }
  long long v100 = (void **)v140;
  if (v140)
  {
    std::string::size_type v101 = v141;
    std::string::size_type v102 = v140;
    if (v141 != v140)
    {
      do
      {
        if (*((char *)v101 - 1) < 0) {
          operator delete(*(v101 - 3));
        }
        v101 -= 3;
      }
      while (v101 != v100);
      std::string::size_type v102 = v140;
    }
    uint64_t v141 = v100;
    operator delete(v102);
  }
  if (v146 < 0) {
    operator delete(v145[0]);
  }
  uint64_t v103 = v156;
  if (v156 && !atomic_fetch_add(&v156->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v103->__on_zero_shared)(v103);
    std::__shared_weak_count::__release_weak(v103);
  }
  uint64_t v104 = v152;
  if (v152)
  {
    do
    {
      int64_t v105 = (void *)*v104;
      sub_4F4B48((uint64_t)(v104 + 2));
      operator delete(v104);
      uint64_t v104 = v105;
    }
    while (v105);
  }
  int v106 = v150;
  std::string::size_type v150 = 0;
  if (v106) {
    operator delete(v106);
  }
  std::string::size_type v107 = v149.__r_.__value_.__r.__words[0];
  if (v149.__r_.__value_.__r.__words[0])
  {
    std::string::size_type v108 = v149.__r_.__value_.__l.__size_;
    std::string::size_type v109 = (void *)v149.__r_.__value_.__r.__words[0];
    if (v149.__r_.__value_.__l.__size_ != v149.__r_.__value_.__r.__words[0])
    {
      do
      {
        if (*(char *)(v108 - 1) < 0) {
          operator delete(*(void **)(v108 - 24));
        }
        v108 -= 24;
      }
      while (v108 != v107);
      std::string::size_type v109 = (void *)v149.__r_.__value_.__r.__words[0];
    }
    v149.__r_.__value_.__l.__size_ = v107;
    operator delete(v109);
  }
  if (SHIBYTE(v158) < 0) {
    operator delete((void *)v157);
  }
  std::string::size_type v110 = v162;
  if (v162)
  {
    do
    {
      uint64_t v111 = (void *)*v110;
      sub_4F4B48((uint64_t)(v110 + 2));
      operator delete(v110);
      std::string::size_type v110 = v111;
    }
    while (v111);
  }
  uint64_t v112 = v160;
  std::string::size_type v160 = 0;
  if (v112) {
    operator delete(v112);
  }
  std::string::size_type v113 = __p.__r_.__value_.__r.__words[0];
  if (__p.__r_.__value_.__r.__words[0])
  {
    std::string::size_type v114 = __p.__r_.__value_.__l.__size_;
    std::string::size_type v115 = (void *)__p.__r_.__value_.__r.__words[0];
    if (__p.__r_.__value_.__l.__size_ != __p.__r_.__value_.__r.__words[0])
    {
      do
      {
        if (*(char *)(v114 - 1) < 0) {
          operator delete(*(void **)(v114 - 24));
        }
        v114 -= 24;
      }
      while (v114 != v113);
      std::string::size_type v115 = (void *)__p.__r_.__value_.__r.__words[0];
    }
    __p.__r_.__value_.__l.__size_ = v113;
    operator delete(v115);
  }
  if ((SHIBYTE(v167) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v169) & 0x80000000) == 0) {
      goto LABEL_239;
    }
LABEL_261:
    operator delete((void *)__dst);
    int v116 = v174;
    if (!v174) {
      goto LABEL_241;
    }
    goto LABEL_240;
  }
  operator delete((void *)v166);
  if (SHIBYTE(v169) < 0) {
    goto LABEL_261;
  }
LABEL_239:
  int v116 = v174;
  if (!v174) {
    goto LABEL_241;
  }
  do
  {
LABEL_240:
    long long v117 = (void *)*v116;
    sub_4F4B48((uint64_t)(v116 + 2));
    operator delete(v116);
    int v116 = v117;
  }
  while (v117);
LABEL_241:
  unint64_t v118 = v173;
  uint64_t v173 = 0;
  if (v118) {
    operator delete(v118);
  }
  long long v119 = v170;
  if (v170)
  {
    v120 = v171;
    int v121 = v170;
    if (v171 != v170)
    {
      do
      {
        if (*((char *)v120 - 1) < 0) {
          operator delete(*(v120 - 3));
        }
        v120 -= 3;
      }
      while (v120 != v119);
      int v121 = v170;
    }
    unint64_t v171 = v119;
    operator delete(v121);
  }
  std::string::size_type v122 = v177;
  if (v177 && !atomic_fetch_add(&v177->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v122->__on_zero_shared)(v122);
    std::__shared_weak_count::__release_weak(v122);
  }
  int v123 = (void **)v178;
  if ((void)v178)
  {
    int v124 = (void **)*((void *)&v178 + 1);
    std::string::size_type v125 = (void *)v178;
    if (*((void *)&v178 + 1) != (void)v178)
    {
      do
        int v124 = sub_4F31D0(v124 - 13);
      while (v124 != v123);
      std::string::size_type v125 = (void *)v178;
    }
    *((void *)&v178 + 1) = v123;
    operator delete(v125);
  }
}

void sub_817470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void *__p,uint64_t a51,int a52,__int16 a53,char a54,char a55,uint64_t a56,uint64_t a57,void *a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_1A668(&a32);
  sub_4F31D0(&a37);
  if (a55 < 0) {
    operator delete(__p);
  }
  sub_4F31D0(&a58);
  if (a73 < 0) {
    operator delete(a72);
  }
  sub_4D4880((void **)&STACK[0x200]);
  if (SLOBYTE(STACK[0x267]) < 0) {
    operator delete((void *)STACK[0x250]);
  }
  if (*(char *)(v73 - 217) < 0) {
    operator delete(*(void **)(v73 - 240));
  }
  sub_4D4880((void **)(v73 - 216));
  sub_14A84(v73 - 144);
  sub_5920E0((void **)(v73 - 128));
  _Unwind_Resume(a1);
}

void sub_81769C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  uint64_t v8 = 40;
  if (!*(unsigned char *)(*(void *)(a1 + 1960) + 1064)) {
    uint64_t v8 = 32;
  }
  uint64_t v9 = *(void *)(*(void *)(a1 + 1952) + v8);
  int v10 = __p;
  sub_635CD0((long long **)(a1 + 80), (uint64_t)__p);
  char v11 = BYTE7(v54);
  int v12 = __p[0];
  if (SBYTE7(v54) < 0) {
    int v10 = (void **)__p[0];
  }
  if (byte_25C474F >= 0) {
    std::string::size_type v13 = &qword_25C4738;
  }
  else {
    std::string::size_type v13 = (uint64_t *)qword_25C4738;
  }
  if (byte_25C474F >= 0) {
    int64_t v14 = byte_25C474F;
  }
  else {
    int64_t v14 = *(void *)&byte_25C4740;
  }
  if (!v14)
  {
    uint64_t v18 = 0;
    if ((BYTE7(v54) & 0x80) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  uint64_t v51 = v9;
  uint64_t v52 = a2;
  if ((SBYTE7(v54) & 0x80u) == 0) {
    uint64_t v15 = BYTE7(v54);
  }
  else {
    uint64_t v15 = (uint64_t)__p[1];
  }
  uint64_t v16 = (char *)v10 + v15;
  if (v15 >= v14)
  {
    uint64_t v50 = a3;
    int v19 = *(char *)v13;
    std::string::size_type v20 = v10;
    do
    {
      uint64_t v21 = v15 - v14;
      if (v21 == -1) {
        break;
      }
      long long v22 = (char *)memchr(v20, v19, v21 + 1);
      if (!v22) {
        break;
      }
      uint64_t v17 = v22;
      if (!memcmp(v22, v13, v14)) {
        goto LABEL_25;
      }
      std::string::size_type v20 = (void **)(v17 + 1);
      uint64_t v15 = v16 - (v17 + 1);
    }
    while (v15 >= v14);
    uint64_t v17 = v16;
LABEL_25:
    a3 = v50;
  }
  else
  {
    uint64_t v17 = (char *)v10 + v15;
  }
  if (v17 == v16) {
    uint64_t v18 = -1;
  }
  else {
    uint64_t v18 = v17 - (char *)v10;
  }
  uint64_t v9 = v51;
  a2 = v52;
  if (v11 < 0) {
LABEL_30:
  }
    operator delete(v12);
LABEL_31:
  if (*(void *)(*(void *)(a2 + 1064) + 2400 * a3 + 872) >= v9 && v18 == -1)
  {
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 120))(__p, a1);
    unint64_t v30 = *(void *)(a4 + 8);
    if (v30 >= *(void *)(a4 + 16))
    {
      std::string::size_type v38 = sub_63D48C((void ***)a4, (uint64_t)__p);
      std::string::size_type v39 = (std::__shared_weak_count *)*((void *)&v61 + 1);
      *(void *)(a4 + 8) = v38;
      if (v39 && !atomic_fetch_add(&v39->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
        std::__shared_weak_count::__release_weak(v39);
      }
    }
    else
    {
      *(void *)(v30 + 16) = 0;
      *(_OWORD *)unint64_t v30 = 0u;
      *(_OWORD *)unint64_t v30 = *(_OWORD *)__p;
      *(void *)(v30 + 16) = v54;
      uint64_t v31 = *((void *)&v54 + 1);
      *(_OWORD *)std::string __p = 0u;
      long long v54 = 0u;
      *(void *)(v30 + 24) = v31;
      *(void *)(v30 + 32) = v55;
      uint64_t v55 = 0;
      std::string::size_type v32 = v56;
      *(void *)(v30 + 40) = v56;
      uint64_t v33 = v57;
      *(void *)(v30 + 48) = v57;
      *(_DWORD *)(v30 + 56) = v58;
      if (v33)
      {
        unint64_t v34 = v32[1];
        unint64_t v35 = *(void *)(v30 + 32);
        if ((v35 & (v35 - 1)) != 0)
        {
          if (v34 >= v35) {
            v34 %= v35;
          }
        }
        else
        {
          v34 &= v35 - 1;
        }
        *(void *)(v31 + 8 * v34) = v30 + 40;
        size_t v56 = 0;
        uint64_t v57 = 0;
      }
      *(unsigned char *)(v30 + 64) = v59;
      *(_DWORD *)(v30 + 72) = v60;
      *(_OWORD *)(v30 + 80) = v61;
      long long v61 = 0uLL;
      *(_WORD *)(v30 + 96) = v62;
      *(void *)(a4 + 8) = v30 + 104;
    }
    std::string v46 = v56;
    if (v56)
    {
      do
      {
        unint64_t v47 = (void *)*v46;
        sub_4F4B48((uint64_t)(v46 + 2));
        operator delete(v46);
        std::string v46 = v47;
      }
      while (v47);
    }
    std::string v48 = (void *)*((void *)&v54 + 1);
    *((void *)&v54 + 1) = 0;
    if (v48) {
      operator delete(v48);
    }
    int64_t v43 = (void **)__p[0];
    if (__p[0])
    {
      int64_t v49 = (void **)__p[1];
      std::string v45 = __p[0];
      if (__p[1] == __p[0]) {
        goto LABEL_78;
      }
      do
      {
        if (*((char *)v49 - 1) < 0) {
          operator delete(*(v49 - 3));
        }
        v49 -= 3;
      }
      while (v49 != v43);
      goto LABEL_77;
    }
  }
  else
  {
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 128))(__p, a1, a2, a3);
    unint64_t v24 = *(void *)(a4 + 8);
    if (v24 >= *(void *)(a4 + 16))
    {
      uint64_t v36 = sub_63D48C((void ***)a4, (uint64_t)__p);
      int64_t v37 = (std::__shared_weak_count *)*((void *)&v61 + 1);
      *(void *)(a4 + 8) = v36;
      if (v37 && !atomic_fetch_add(&v37->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
    else
    {
      *(void *)(v24 + 16) = 0;
      *(_OWORD *)unint64_t v24 = 0u;
      *(_OWORD *)unint64_t v24 = *(_OWORD *)__p;
      *(void *)(v24 + 16) = v54;
      uint64_t v25 = *((void *)&v54 + 1);
      *(_OWORD *)std::string __p = 0u;
      long long v54 = 0u;
      *(void *)(v24 + 24) = v25;
      *(void *)(v24 + 32) = v55;
      uint64_t v55 = 0;
      unint64_t v26 = v56;
      *(void *)(v24 + 40) = v56;
      uint64_t v27 = v57;
      *(void *)(v24 + 48) = v57;
      *(_DWORD *)(v24 + 56) = v58;
      if (v27)
      {
        unint64_t v28 = v26[1];
        unint64_t v29 = *(void *)(v24 + 32);
        if ((v29 & (v29 - 1)) != 0)
        {
          if (v28 >= v29) {
            v28 %= v29;
          }
        }
        else
        {
          v28 &= v29 - 1;
        }
        *(void *)(v25 + 8 * v28) = v24 + 40;
        size_t v56 = 0;
        uint64_t v57 = 0;
      }
      *(unsigned char *)(v24 + 64) = v59;
      *(_DWORD *)(v24 + 72) = v60;
      *(_OWORD *)(v24 + 80) = v61;
      long long v61 = 0uLL;
      *(_WORD *)(v24 + 96) = v62;
      *(void *)(a4 + 8) = v24 + 104;
    }
    int64_t v40 = v56;
    if (v56)
    {
      do
      {
        uint64_t v41 = (void *)*v40;
        sub_4F4B48((uint64_t)(v40 + 2));
        operator delete(v40);
        int64_t v40 = v41;
      }
      while (v41);
    }
    uint64_t v42 = (void *)*((void *)&v54 + 1);
    *((void *)&v54 + 1) = 0;
    if (v42) {
      operator delete(v42);
    }
    int64_t v43 = (void **)__p[0];
    if (__p[0])
    {
      unsigned __int8 v44 = (void **)__p[1];
      std::string v45 = __p[0];
      if (__p[1] == __p[0]) {
        goto LABEL_78;
      }
      do
      {
        if (*((char *)v44 - 1) < 0) {
          operator delete(*(v44 - 3));
        }
        v44 -= 3;
      }
      while (v44 != v43);
LABEL_77:
      std::string v45 = __p[0];
LABEL_78:
      __p[1] = v43;
      operator delete(v45);
    }
  }
}

void sub_817BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_4F31D0((void **)va);
  sub_5920E0(v5);
  _Unwind_Resume(a1);
}

void sub_817BD0(_Unwind_Exception *a1)
{
  sub_5920E0(v1);
  _Unwind_Resume(a1);
}

void sub_817BE4(_Unwind_Exception *a1)
{
  sub_5920E0(v1);
  _Unwind_Resume(a1);
}

void sub_817BF8(_Unwind_Exception *a1)
{
  sub_5920E0(v1);
  _Unwind_Resume(a1);
}

void sub_817C0C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  BOOL v4 = sub_635D10(a1 + 8, (uint64_t)&xmmword_25C6748);
  BOOL v5 = v4;
  unsigned int v6 = *(_DWORD *)(a1 + 1848);
  if (v6 <= 0x1E && ((1 << v6) & 0x60000800) != 0)
  {
    memset(&v11, 0, sizeof(v11));
LABEL_6:
    std::string::operator=(&v11, (const std::string *)&dword_25C51D0);
    if (v5)
    {
      if (byte_25C555F >= 0) {
        uint64_t v8 = (const std::string::value_type *)&qword_25C5548;
      }
      else {
        uint64_t v8 = (const std::string::value_type *)qword_25C5548;
      }
      if (byte_25C555F >= 0) {
        std::string::size_type v9 = byte_25C555F;
      }
      else {
        std::string::size_type v9 = unk_25C5550;
      }
      std::string::append(&v11, v8, v9);
    }
    *a2 = v11;
    return;
  }
  BOOL v10 = v6 - 64 < 3 && v4;
  memset(&v11, 0, sizeof(v11));
  if (v10) {
    goto LABEL_6;
  }
  if (v6 <= 0x19 && ((1 << v6) & 0x20200C0) != 0 || v6 - 86 < 2 || v6 - 41 < 0x13)
  {
LABEL_23:
    sub_814258(a1, (uint64_t)a2);
  }
  else
  {
    switch(v6)
    {
      case 0x10u:
      case 0x16u:
      case 0x17u:
      case 0x18u:
      case 0x27u:
      case 0x55u:
      case 0x58u:
      case 0x5Bu:
      case 0x5Cu:
      case 0x5Du:
        goto LABEL_23;
      default:
        if (v6 - 89 <= 1) {
          goto LABEL_23;
        }
        a2->__r_.__value_.__r.__words[0] = 0;
        a2->__r_.__value_.__l.__size_ = 0;
        a2->__r_.__value_.__r.__words[2] = 0;
        break;
    }
  }
}

void sub_817D7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_817ED0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  sub_814258(a1, (uint64_t)&v10);
  if (sub_800B24(a1))
  {
    BOOL v4 = &xmmword_25C5788;
    if (byte_25C579F < 0) {
      goto LABEL_8;
    }
LABEL_6:
    *(_OWORD *)std::string __p = *v4;
    uint64_t v9 = *((void *)v4 + 2);
    goto LABEL_9;
  }
  if (*(unsigned char *)(a1 + 1859))
  {
    BOOL v4 = &xmmword_25C5800;
    if ((byte_25C5817 & 0x80000000) == 0) {
      goto LABEL_6;
    }
  }
  else
  {
    BOOL v4 = &xmmword_25C5848;
    if ((byte_25C585F & 0x80000000) == 0) {
      goto LABEL_6;
    }
  }
LABEL_8:
  sub_4200(__p, *(void **)v4, *((void *)v4 + 1));
LABEL_9:
  if (v9 >= 0) {
    BOOL v5 = __p;
  }
  else {
    BOOL v5 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v6 = HIBYTE(v9);
  }
  else {
    std::string::size_type v6 = (std::string::size_type)__p[1];
  }
  uint64_t v7 = std::string::append(&v10, (const std::string::value_type *)v5, v6);
  *a2 = *v7;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if ((SHIBYTE(v9) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v10.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_19:
    operator delete(v10.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_19;
  }
}

void sub_817FE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((a20 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a20 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_818034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!sub_635D10(a2, (uint64_t)&xmmword_25C6670) || !sub_635D10(a3, (uint64_t)&xmmword_25C6670)) {
    goto LABEL_26;
  }
  BOOL v5 = (void *)sub_5231C(a2);
  std::string::size_type v6 = sub_619B40(v5, (uint64_t)&xmmword_25C6670);
  if (!v6) {
    goto LABEL_66;
  }
  sub_6F3178(&__s1, v6 + 5);
  uint64_t v7 = (void *)sub_5231C(a3);
  uint64_t v8 = sub_619B40(v7, (uint64_t)&xmmword_25C6670);
  if (!v8) {
    sub_5AE8("unordered_map::at: key not found");
  }
  sub_6F3178(&__p, v8 + 5);
  unsigned __int8 v9 = v46;
  if ((v46 & 0x80u) == 0) {
    size_t v10 = v46;
  }
  else {
    size_t v10 = __n;
  }
  uint64_t v11 = v43;
  int v12 = (char)v43;
  if ((v43 & 0x80u) != 0) {
    uint64_t v11 = v42;
  }
  if (v10 != v11)
  {
    BOOL v22 = 0;
    if (((char)v43 & 0x80000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_24;
  }
  if ((v43 & 0x80u) == 0) {
    p_p = (unsigned __int8 *)&__p;
  }
  else {
    p_p = (unsigned __int8 *)__p;
  }
  if ((char)v46 < 0)
  {
    BOOL v22 = memcmp(__s1, p_p, __n) == 0;
    goto LABEL_54;
  }
  if (v46)
  {
    uint64_t v14 = v46 - 1;
    p_s1 = &__s1;
    do
    {
      int v17 = *(unsigned __int8 *)p_s1;
      p_s1 = (void **)((char *)p_s1 + 1);
      int v16 = v17;
      int v19 = *p_p++;
      int v18 = v19;
      BOOL v20 = v14-- != 0;
      char v21 = v20;
      BOOL v22 = v16 == v18;
    }
    while (v16 == v18 && (v21 & 1) != 0);
LABEL_54:
    if ((v12 & 0x80000000) == 0) {
      goto LABEL_55;
    }
LABEL_24:
    operator delete(__p);
    if ((v46 & 0x80) == 0) {
      goto LABEL_56;
    }
    goto LABEL_25;
  }
  BOOL v22 = 1;
  if ((char)v43 < 0) {
    goto LABEL_24;
  }
LABEL_55:
  if ((v9 & 0x80) == 0)
  {
LABEL_56:
    if (v22) {
      return 1;
    }
    goto LABEL_26;
  }
LABEL_25:
  operator delete(__s1);
  if (v22) {
    return 1;
  }
LABEL_26:
  if (!sub_635D10(a2, (uint64_t)&xmmword_25C66D0) || !sub_635D10(a3, (uint64_t)&xmmword_25C66D0)) {
    return 0;
  }
  std::string::size_type v23 = (void *)sub_5231C(a2);
  unint64_t v24 = sub_619B40(v23, (uint64_t)&xmmword_25C66D0);
  if (!v24) {
LABEL_66:
  }
    sub_5AE8("unordered_map::at: key not found");
  sub_6F3178(&__s1, v24 + 5);
  uint64_t v25 = (void *)sub_5231C(a3);
  unint64_t v26 = sub_619B40(v25, (uint64_t)&xmmword_25C66D0);
  if (!v26) {
    sub_5AE8("unordered_map::at: key not found");
  }
  sub_6F3178(&__p, v26 + 5);
  unsigned __int8 v27 = v46;
  if ((v46 & 0x80u) == 0) {
    size_t v28 = v46;
  }
  else {
    size_t v28 = __n;
  }
  uint64_t v29 = v43;
  int v30 = (char)v43;
  if ((v43 & 0x80u) != 0) {
    uint64_t v29 = v42;
  }
  if (v28 == v29)
  {
    if ((v43 & 0x80u) == 0) {
      uint64_t v31 = (unsigned __int8 *)&__p;
    }
    else {
      uint64_t v31 = (unsigned __int8 *)__p;
    }
    if ((char)v46 < 0)
    {
      BOOL v39 = memcmp(__s1, v31, __n) == 0;
    }
    else
    {
      if (!v46)
      {
        BOOL v39 = 1;
        if (((char)v43 & 0x80000000) == 0)
        {
LABEL_60:
          if ((v27 & 0x80) == 0) {
            return v39;
          }
LABEL_61:
          operator delete(__s1);
          return v39;
        }
        goto LABEL_51;
      }
      uint64_t v32 = v46 - 1;
      uint64_t v33 = &__s1;
      do
      {
        int v35 = *(unsigned __int8 *)v33;
        uint64_t v33 = (void **)((char *)v33 + 1);
        int v34 = v35;
        int v37 = *v31++;
        int v36 = v37;
        BOOL v20 = v32-- != 0;
        char v38 = v20;
        BOOL v39 = v34 == v36;
      }
      while (v34 == v36 && (v38 & 1) != 0);
    }
    if ((v30 & 0x80000000) == 0) {
      goto LABEL_60;
    }
  }
  else
  {
    BOOL v39 = 0;
    if (((char)v43 & 0x80000000) == 0) {
      goto LABEL_60;
    }
  }
LABEL_51:
  operator delete(__p);
  if ((v46 & 0x80) != 0) {
    goto LABEL_61;
  }
  return v39;
}

void sub_81830C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_81832C(uint64_t a1, long long **a2)
{
  sub_635CD0(a2, (uint64_t)__p);
  sub_80138C(a1, (char *)__p);
  sub_63552C((uint64_t)a2);
  sub_6351E8((char **)a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_8183A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_8183C0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = 0;
  std::string::size_type v6 = 0;
  sub_6370D4(a2, a1 + 80, 8, &v5);
  BOOL v4 = v6;
  if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    if (*(unsigned char *)(a1 + 1860)) {
      goto LABEL_4;
    }
  }
  else if (*(unsigned char *)(a1 + 1860))
  {
LABEL_4:
    sub_819E34(a1, a2, 0);
    return;
  }
  if (*(unsigned char *)(a1 + 1859)) {
    sub_819A0C(a1, (uint64_t)a2, 0, 0);
  }
}

void sub_818494(_Unwind_Exception *a1)
{
  sub_4F31D0(v1);
  _Unwind_Resume(a1);
}

void sub_8184A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_8184BC(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)(a1 + 1952);
  uint64_t v9 = *(void *)(a1 + 1960);
  int v10 = *(_DWORD *)(a1 + 2128) - 1;
  uint64_t v11 = (std::__shared_weak_count *)operator new(0x870uLL);
  v11->__shared_owners_ = 0;
  v11->__shared_weak_owners_ = 0;
  v11->__vftable = (std::__shared_weak_count_vtbl *)off_243AD88;
  sub_80E174((std::string::size_type)&v11[1], v8, v9, a2, a3, v10);
  int64_t v49 = &v11[1].__vftable;
  uint64_t v50 = v11;
  BOOL v12 = sub_800B24((uint64_t)&v11[1]);
  uint64_t v13 = 432;
  if (v12) {
    uint64_t v13 = 312;
  }
  uint64_t v14 = &xmmword_25C5800;
  if (v12) {
    uint64_t v14 = &xmmword_25C5788;
  }
  uint64_t v15 = &byte_25C5817;
  if (v12) {
    uint64_t v15 = &byte_25C579F;
  }
  if (*v15 < 0)
  {
    int v16 = *(void **)((char *)&xmmword_25C5650 + v13);
    uint64_t v17 = 432;
    if (v12) {
      uint64_t v17 = 312;
    }
    sub_4200(__p, v16, *(void *)((char *)&xmmword_25C5650 + v17 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *v14;
    uint64_t v41 = *((void *)v14 + 2);
  }
  sub_80FC34((std::string::size_type)&v11[1], 1, (uint64_t)__p, (uint64_t)&v45);
  if (SHIBYTE(v41) < 0) {
    operator delete(__p[0]);
  }
  uint64_t v38 = 0;
  BOOL v39 = 0;
  sub_6370D4(__p, &v45, 1, &v38);
  int v18 = v39;
  if (v39 && !atomic_fetch_add(&v39->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    uint64_t v19 = (uint64_t)v49;
    if (*((unsigned char *)v49 + 1860)) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v19 = (uint64_t)v49;
    if (*((unsigned char *)v49 + 1860))
    {
LABEL_17:
      sub_819E34(v19, (uint64_t *)__p, 0);
      goto LABEL_21;
    }
  }
  if (*(unsigned char *)(v19 + 1859)) {
    sub_819A0C(v19, (uint64_t)__p, 0, 0);
  }
LABEL_21:
  BOOL v20 = (std::__shared_weak_count *)operator new(0x80uLL);
  v20->__shared_owners_ = 0;
  v20->__shared_weak_owners_ = 0;
  v20->__vftable = (std::__shared_weak_count_vtbl *)off_243A0E0;
  sub_59540C((uint64_t)&v51, (uint64_t)&v20[1], (uint64_t)__p);
  int v36 = &v20[1].__vftable;
  int v37 = v20;
  sub_6370D4(a4, a1 + 80, 9, &v36);
  char v21 = v37;
  if (v37 && !atomic_fetch_add(&v37->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
    std::__shared_weak_count::__release_weak(v21);
    if (*(unsigned char *)(a1 + 1860)) {
      goto LABEL_24;
    }
  }
  else if (*(unsigned char *)(a1 + 1860))
  {
LABEL_24:
    sub_819E34(a1, a4, 0);
    goto LABEL_28;
  }
  if (*(unsigned char *)(a1 + 1859)) {
    sub_819A0C(a1, (uint64_t)a4, 0, 0);
  }
LABEL_28:
  BOOL v22 = v44;
  if (v44 && !atomic_fetch_add(&v44->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
    std::__shared_weak_count::__release_weak(v22);
  }
  std::string::size_type v23 = v43;
  if (v43)
  {
    do
    {
      unint64_t v24 = (void *)*v23;
      sub_4F4B48((uint64_t)(v23 + 2));
      operator delete(v23);
      std::string::size_type v23 = v24;
    }
    while (v24);
  }
  uint64_t v25 = v42;
  uint64_t v42 = 0;
  if (v25) {
    operator delete(v25);
  }
  unint64_t v26 = (void **)__p[0];
  if (__p[0])
  {
    unsigned __int8 v27 = (void **)__p[1];
    size_t v28 = __p[0];
    if (__p[1] != __p[0])
    {
      do
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      while (v27 != v26);
      size_t v28 = __p[0];
    }
    __p[1] = v26;
    operator delete(v28);
  }
  uint64_t v29 = v48;
  if (v48)
  {
    do
    {
      int v30 = (void *)*v29;
      sub_4F4B48((uint64_t)(v29 + 2));
      operator delete(v29);
      uint64_t v29 = v30;
    }
    while (v30);
  }
  uint64_t v31 = v47;
  unint64_t v47 = 0;
  if (v31) {
    operator delete(v31);
  }
  uint64_t v32 = (void **)v45;
  if (v45)
  {
    uint64_t v33 = v46;
    int v34 = v45;
    if (v46 != v45)
    {
      do
      {
        if (*((char *)v33 - 1) < 0) {
          operator delete(*(v33 - 3));
        }
        v33 -= 3;
      }
      while (v33 != v32);
      int v34 = v45;
    }
    unsigned __int8 v46 = v32;
    operator delete(v34);
  }
  int v35 = v50;
  if (v50)
  {
    if (!atomic_fetch_add(&v50->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
}

void sub_818918(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30)
{
  sub_4F31D0(v30);
  sub_4F31D0(&__p);
  sub_4D4880(&a30);
  sub_14A84(v31 - 104);
  _Unwind_Resume(a1);
}

void sub_8189D0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  sub_814258(a1, (uint64_t)&v15);
  BOOL v4 = sub_800B24(a1);
  uint64_t v5 = 432;
  if (v4) {
    uint64_t v5 = 312;
  }
  std::string::size_type v6 = &xmmword_25C5800;
  if (v4) {
    std::string::size_type v6 = &xmmword_25C5788;
  }
  uint64_t v7 = &byte_25C5817;
  if (v4) {
    uint64_t v7 = &byte_25C579F;
  }
  if (*v7 < 0)
  {
    uint64_t v8 = *(void **)((char *)&xmmword_25C5650 + v5);
    uint64_t v9 = 432;
    if (v4) {
      uint64_t v9 = 312;
    }
    sub_4200(__p, v8, *(void *)((char *)&xmmword_25C5650 + v9 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *v6;
    uint64_t v14 = *((void *)v6 + 2);
  }
  if (v14 >= 0) {
    int v10 = __p;
  }
  else {
    int v10 = (void **)__p[0];
  }
  if (v14 >= 0) {
    std::string::size_type v11 = HIBYTE(v14);
  }
  else {
    std::string::size_type v11 = (std::string::size_type)__p[1];
  }
  BOOL v12 = std::string::append(&v15, (const std::string::value_type *)v10, v11);
  *a2 = *v12;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  if ((SHIBYTE(v14) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_22:
    operator delete(v15.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_22;
  }
}

void sub_818AF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((a20 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a20 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_818B40(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  long long v12 = 0uLL;
  uint64_t v13 = 0;
  sub_818C50(a4, (uint64_t)&v6);
  long long v12 = v6;
  uint64_t v13 = v7;
  *(_OWORD *)std::string __p = v8;
  uint64_t v11 = v9;
  sub_635B18(a2, (uint64_t)&v12, (long long *)__p, a3);
  sub_635C08(a2, (long long *)&qword_25C6568, a3, 1);
  if ((SHIBYTE(v11) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v13) & 0x80000000) == 0) {
      return;
    }
LABEL_5:
    operator delete((void *)v12);
    return;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v13) < 0) {
    goto LABEL_5;
  }
}

void sub_818C04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if ((*(char *)(v20 - 25) & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(*(void **)(v20 - 48));
  _Unwind_Resume(exception_object);
}

__n128 sub_818C50@<Q0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  if (a1[1] != -1)
  {
    if (byte_25C5427 < 0)
    {
      sub_4200((unsigned char *)a2, (void *)xmmword_25C5410, *((unint64_t *)&xmmword_25C5410 + 1));
      uint64_t v3 = a2 + 24;
      if ((byte_25C67BF & 0x80000000) == 0) {
        goto LABEL_4;
      }
    }
    else
    {
      *(_OWORD *)a2 = xmmword_25C5410;
      *(void *)(a2 + 16) = unk_25C5420;
      uint64_t v3 = a2 + 24;
      if ((byte_25C67BF & 0x80000000) == 0)
      {
LABEL_4:
        BOOL v4 = &xmmword_25C67A8;
LABEL_31:
        __n128 result = (__n128)*v4;
        *(_OWORD *)uint64_t v3 = *v4;
        *(void *)(v3 + 16) = *((void *)v4 + 2);
        return result;
      }
    }
    sub_4200((unsigned char *)v3, (void *)xmmword_25C67A8, *((unint64_t *)&xmmword_25C67A8 + 1));
    return result;
  }
  if (a1[2] != -1)
  {
    if (byte_25C543F < 0)
    {
      sub_4200((unsigned char *)a2, (void *)xmmword_25C5428, *((unint64_t *)&xmmword_25C5428 + 1));
      uint64_t v3 = a2 + 24;
      if ((byte_25C67D7 & 0x80000000) == 0) {
        goto LABEL_8;
      }
    }
    else
    {
      *(_OWORD *)a2 = xmmword_25C5428;
      *(void *)(a2 + 16) = unk_25C5438;
      uint64_t v3 = a2 + 24;
      if ((byte_25C67D7 & 0x80000000) == 0)
      {
LABEL_8:
        BOOL v4 = &xmmword_25C67C0;
        goto LABEL_31;
      }
    }
    sub_4200((unsigned char *)v3, (void *)xmmword_25C67C0, *((unint64_t *)&xmmword_25C67C0 + 1));
    return result;
  }
  if (*a1 != -1)
  {
    if (byte_25C55D7 < 0)
    {
      sub_4200((unsigned char *)a2, (void *)xmmword_25C55C0, *((unint64_t *)&xmmword_25C55C0 + 1));
      uint64_t v3 = a2 + 24;
      if ((byte_25C67EF & 0x80000000) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      *(_OWORD *)a2 = xmmword_25C55C0;
      *(void *)(a2 + 16) = unk_25C55D0;
      uint64_t v3 = a2 + 24;
      if ((byte_25C67EF & 0x80000000) == 0)
      {
LABEL_14:
        BOOL v4 = &xmmword_25C67D8;
        goto LABEL_31;
      }
    }
    sub_4200((unsigned char *)v3, (void *)xmmword_25C67D8, *((unint64_t *)&xmmword_25C67D8 + 1));
    return result;
  }
  if (a1[6] != -1)
  {
    if (byte_25C55EF < 0)
    {
      sub_4200((unsigned char *)a2, (void *)xmmword_25C55D8, *((unint64_t *)&xmmword_25C55D8 + 1));
    }
    else
    {
      *(_OWORD *)a2 = xmmword_25C55D8;
      *(void *)(a2 + 16) = unk_25C55E8;
    }
    uint64_t v3 = a2 + 24;
    if (byte_25C6807 < 0)
    {
      sub_4200((unsigned char *)v3, (void *)xmmword_25C67F0, *((unint64_t *)&xmmword_25C67F0 + 1));
      return result;
    }
    BOOL v4 = &xmmword_25C67F0;
    goto LABEL_31;
  }
  if (byte_25C5457 < 0)
  {
    sub_4200((unsigned char *)a2, (void *)xmmword_25C5440, *((unint64_t *)&xmmword_25C5440 + 1));
  }
  else
  {
    *(_OWORD *)a2 = xmmword_25C5440;
    *(void *)(a2 + 16) = unk_25C5450;
  }
  uint64_t v3 = a2 + 24;
  if ((byte_25C6687 & 0x80000000) == 0)
  {
    BOOL v4 = &xmmword_25C6670;
    goto LABEL_31;
  }
  sub_4200((unsigned char *)v3, (void *)xmmword_25C6670, *((unint64_t *)&xmmword_25C6670 + 1));
  return result;
}

void sub_818EF4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_818F20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 936);
  uint64_t v3 = *(void *)(a1 + 944);
  if (v2 != v3)
  {
    if (0x86BCA1AF286BCA1BLL * ((v3 - v2) >> 3) < 2)
    {
      if (*(unsigned char *)(a1 + 1854) && *(unsigned char *)(a1 + 1856))
      {
        uint64_t v7 = a1 + 152;
        sub_635B18(a2, (uint64_t)&qword_25C5458, &xmmword_25C66D0, a1 + 152);
        sub_635C08(a2, (long long *)&qword_25C6568, v7, 1);
      }
      else
      {
        sub_818B40(a1, a2, a1 + 152, (void *)(a1 + 1864));
      }
    }
    else
    {
      sub_635B18(a2, (uint64_t)&qword_25C5488, (long long *)&dword_25C6688, v2);
      sub_635C08(a2, (long long *)&qword_25C6568, v2, 1);
      uint64_t v6 = *(void *)(a1 + 936) + 152;
      sub_635B18(a2, (uint64_t)&qword_25C54A0, &xmmword_25C66A0, v6);
      sub_635C08(a2, (long long *)&qword_25C6598, v6, 1);
      sub_635988(a2, &xmmword_25C6670, a1 + 152);
    }
  }
}

void sub_8190C4(uint64_t a1, std::string **a2)
{
  if (*(char *)(a1 + 1007) < 0)
  {
    if (*(void *)(a1 + 992)) {
      goto LABEL_3;
    }
LABEL_7:
    sub_63581C(a2, (const std::string::value_type *)&qword_25C4FC0);
    return;
  }
  if (!*(unsigned char *)(a1 + 1007)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v2 = 0xFFFFFFFFLL;
  *(_OWORD *)uint64_t v3 = 0u;
  *(_OWORD *)std::string __p = 0u;
  long long v5 = 0u;
  sub_635A2C((std::string *)a2, (const std::string::value_type *)&qword_25C4FD8, &xmmword_25C6C70, a1 + 984, (const std::string *)(a1 + 984), (uint64_t)&v2);
  if ((SHIBYTE(v5) & 0x80000000) == 0)
  {
    if ((SHIBYTE(__p[0]) & 0x80000000) == 0) {
      return;
    }
LABEL_11:
    operator delete(v3[0]);
    return;
  }
  operator delete(__p[1]);
  if (SHIBYTE(__p[0]) < 0) {
    goto LABEL_11;
  }
}

void sub_8191A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_4AA598((uint64_t)va);
  _Unwind_Resume(a1);
}

std::string *sub_8191B8(std::string *result, std::string *a2)
{
  if (*(unsigned char *)(result[81].__r_.__value_.__l.__size_ + 1972))
  {
    uint64_t v3 = result;
    __n128 result = (std::string *)sub_6F2FD8((uint64_t)&result[6].__r_.__value_.__l.__size_);
    if ((result & 1) == 0)
    {
      __n128 result = (std::string *)sub_6F2FD8((uint64_t)&v3[12].__r_.__value_.__r.__words[2]);
      if ((result & 1) == 0)
      {
        __n128 result = (std::string *)sub_6F2FD8((uint64_t)&v3[19]);
        if ((result & 1) == 0)
        {
          __n128 result = (std::string *)sub_6F2FD8((uint64_t)&v3[25].__r_.__value_.__l.__size_);
          if ((result & 1) == 0
            && v3[38].__r_.__value_.__r.__words[0] == v3[38].__r_.__value_.__l.__size_
            && v3[39].__r_.__value_.__r.__words[0] == v3[39].__r_.__value_.__l.__size_
            && v3[40].__r_.__value_.__r.__words[0] == v3[40].__r_.__value_.__l.__size_
            && v3[77].__r_.__value_.__r.__words[2] == -1
            && v3[78].__r_.__value_.__r.__words[0] == -1
            && v3[78].__r_.__value_.__l.__size_ == -1
            && v3[78].__r_.__value_.__r.__words[2] == -1
            && v3[79].__r_.__value_.__r.__words[0] == -1
            && v3[79].__r_.__value_.__l.__size_ == -1
            && v3[79].__r_.__value_.__r.__words[2] == -1)
          {
            int v4 = v3[77].__r_.__value_.__s.__data_[7];
            if (v4 == 3)
            {
              if (v3[77].__r_.__value_.__s.__data_[13]) {
                return result;
              }
              __n128 result = sub_8192EC(v3, a2);
              int v4 = v3[77].__r_.__value_.__s.__data_[7];
            }
            if (v4 == 2)
            {
              return (std::string *)sub_819400((uint64_t)v3, a2);
            }
          }
        }
      }
    }
  }
  return result;
}

std::string *sub_8192EC(std::string *result, std::string *this)
{
  switch(HIDWORD(result[81].__r_.__value_.__r.__words[0]))
  {
    case 1:
      uint64_t v2 = &qword_25C7F80;
      goto LABEL_14;
    case 2:
      uint64_t v2 = &qword_25C7F08;
      goto LABEL_14;
    case 3:
      uint64_t v2 = &qword_25C7F20;
      goto LABEL_14;
    case 4:
      uint64_t v2 = &qword_25C7F98;
      goto LABEL_14;
    case 5:
      uint64_t v2 = &qword_25C7FE0;
      goto LABEL_14;
    case 6:
      uint64_t v2 = &qword_25C7FB0;
      goto LABEL_14;
    case 7:
      uint64_t v2 = &qword_25C7FC8;
      goto LABEL_14;
    case 8:
      uint64_t v2 = &qword_25C7FF8;
      goto LABEL_14;
    case 9:
      uint64_t v2 = (uint64_t *)&xmmword_25C5620;
      goto LABEL_14;
    case 0xA:
      uint64_t v2 = (uint64_t *)&xmmword_25C5638;
      goto LABEL_14;
    case 0xB:
      uint64_t v2 = &qword_25C7F38;
      goto LABEL_14;
    case 0xC:
      uint64_t v2 = &qword_25C7F68;
LABEL_14:
      std::string::size_type v3 = v2[1];
      if (*((char *)v2 + 23) >= 0)
      {
        std::string::size_type v4 = *((unsigned __int8 *)v2 + 23);
      }
      else
      {
        uint64_t v2 = (uint64_t *)*v2;
        std::string::size_type v4 = v3;
      }
      __n128 result = std::string::append(this, (const std::string::value_type *)v2, v4);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_819400(uint64_t result, std::string *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 1936);
  int64_t size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0) {
    uint64_t v6 = this;
  }
  else {
    uint64_t v6 = (std::string *)this->__r_.__value_.__r.__words[0];
  }
  if (byte_25C5037 >= 0) {
    uint64_t v7 = &qword_25C5020;
  }
  else {
    uint64_t v7 = (uint64_t *)qword_25C5020;
  }
  if (byte_25C5037 >= 0) {
    int64_t v8 = byte_25C5037;
  }
  else {
    int64_t v8 = *(void *)&byte_25C5028;
  }
  if (v8)
  {
    if ((size & 0x80u) != 0) {
      int64_t size = this->__r_.__value_.__l.__size_;
    }
    if (size >= v8)
    {
      uint64_t v9 = (char *)v6 + size;
      int v10 = *(char *)v7;
      __n128 result = (uint64_t)v6;
      do
      {
        int64_t v11 = size - v8;
        if (v11 == -1) {
          break;
        }
        __n128 result = (uint64_t)memchr((void *)result, v10, v11 + 1);
        if (!result) {
          break;
        }
        uint64_t v12 = result;
        __n128 result = memcmp((const void *)result, v7, v8);
        if (!result)
        {
          if ((char *)v12 == v9 || v12 - (void)v6 == -1) {
            return result;
          }
          goto LABEL_22;
        }
        __n128 result = v12 + 1;
        int64_t size = (int64_t)&v9[-v12 - 1];
      }
      while (size >= v8);
    }
  }
  else
  {
LABEL_22:
    if (!*(unsigned char *)(v3 + 1858))
    {
      switch(v4)
      {
        case 1:
          uint64_t v13 = &qword_25C7F98;
          goto LABEL_31;
        case 2:
          uint64_t v13 = &qword_25C7FE0;
          goto LABEL_31;
        case 3:
          uint64_t v13 = &qword_25C7FB0;
          goto LABEL_31;
        case 4:
          uint64_t v13 = &qword_25C7FC8;
          goto LABEL_31;
        case 5:
          uint64_t v13 = &qword_25C7FF8;
          goto LABEL_31;
        case 6:
          uint64_t v13 = &qword_25C8010;
LABEL_31:
          int v14 = *((char *)v13 + 23);
          if (v14 >= 0) {
            std::string v15 = (const std::string::value_type *)v13;
          }
          else {
            std::string v15 = (const std::string::value_type *)*v13;
          }
          if (v14 >= 0) {
            std::string::size_type v16 = *((unsigned __int8 *)v13 + 23);
          }
          else {
            std::string::size_type v16 = v13[1];
          }
          __n128 result = (uint64_t)std::string::append(this, v15, v16);
          break;
        default:
          return result;
      }
    }
  }
  return result;
}

uint64_t sub_8195D0(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)(a1 + 1848);
  BOOL v3 = 1;
  if (v2 > 0x1E || ((1 << v2) & 0x60000800) == 0)
  {
    BOOL v3 = sub_635D10(a1 + 8, (uint64_t)&xmmword_25C6748);
    unsigned int v2 = *(_DWORD *)(a1 + 1848);
  }
  BOOL v5 = v2 - 86 < 2 || v2 - 41 < 0x13;
  int v6 = v2 - 6 < 2 || v5;
  if (v2 != 24 && (v2 & 0xFFFFFFFE) != 22 && v2 - 91 >= 3) {
    return v3 | v6;
  }
  else {
    return 1;
  }
}

long long *sub_819668(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 1960);
  if (*(unsigned char *)(v2 + 1524))
  {
    unsigned int v3 = *(_DWORD *)(a1 + 1688);
  }
  else
  {
    int v4 = *(_DWORD *)(a1 + 1688);
    unsigned int v5 = v4 + 1;
    unsigned int v3 = v4 - 1;
    if (v5 < 2) {
      unsigned int v3 = -1;
    }
  }
  int v6 = sub_800320(v2, v3);
  if (!sub_8005D4(*(void *)(a1 + 1960), *(_DWORD *)(a1 + 1688)))
  {
    if ((v6 & 0x10000) != 0) {
      return &xmmword_25C52A8;
    }
    if ((v6 & 1) == 0) {
      goto LABEL_11;
    }
    return &xmmword_25C5290;
  }
  if (v6) {
    return &xmmword_25C5290;
  }
  if ((v6 & 0x10000) != 0) {
    return &xmmword_25C52A8;
  }
LABEL_11:
  if (atomic_load_explicit((atomic_uchar *volatile)&qword_24F71F0, memory_order_acquire)) {
    return (long long *)&qword_24F71D8;
  }
  if (__cxa_guard_acquire(&qword_24F71F0))
  {
    qword_24F71D8 = 0;
    unk_24F71E0 = 0;
    qword_24F71E8 = 0;
    __cxa_guard_release(&qword_24F71F0);
  }
  return (long long *)&qword_24F71D8;
}

void sub_81978C(uint64_t a1@<X0>, void *a2@<X8>)
{
  int v4 = *(_DWORD *)(a1 + 1848);
  uint64_t v5 = 144;
  if (v4 == 84) {
    uint64_t v5 = 150;
  }
  int v6 = (uint64_t *)&xmmword_25C4B10;
  if (v4 != 84) {
    int v6 = &qword_25C4AE0;
  }
  BOOL v7 = v4 == 83;
  if (v4 == 83) {
    uint64_t v5 = 147;
  }
  int64_t v8 = &xmmword_25C4AF8;
  if (!v7) {
    int64_t v8 = (long long *)v6;
  }
  if (*((char *)v8 + 23) < 0)
  {
    sub_4200(__dst, (void *)qword_25C4660[v5], *((void *)v8 + 1));
    LODWORD(v8) = *(char *)(a1 + 1007);
    if ((v8 & 0x80000000) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    *(_OWORD *)long long __dst = *v8;
    uint64_t v27 = *((void *)v8 + 2);
    LODWORD(v8) = *(char *)(a1 + 1007);
    if ((v8 & 0x80000000) == 0)
    {
LABEL_11:
      int64_t v8 = (long long *)v8;
      goto LABEL_14;
    }
  }
  int64_t v8 = *(long long **)(a1 + 992);
LABEL_14:
  uint64_t v9 = 303;
  if (!v8) {
    uint64_t v9 = 300;
  }
  int v10 = &qword_25C4FD8;
  if (!v8) {
    int v10 = &qword_25C4FC0;
  }
  int64_t v11 = (char *)&qword_25C4FE8 + 7;
  if (!v8) {
    int64_t v11 = &byte_25C4FD7;
  }
  if (*v11 < 0)
  {
    if (v8) {
      uint64_t v12 = (unint64_t *)&unk_25C4FE0;
    }
    else {
      uint64_t v12 = (unint64_t *)&unk_25C4FC8;
    }
    sub_4200(__p, (void *)qword_25C4660[v9], *v12);
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)v10;
    uint64_t v25 = v10[2];
  }
  int v13 = SHIBYTE(v27);
  if (v27 >= 0) {
    size_t v14 = HIBYTE(v27);
  }
  else {
    size_t v14 = (size_t)__dst[1];
  }
  int v15 = SHIBYTE(v25);
  if (v25 >= 0) {
    size_t v16 = HIBYTE(v25);
  }
  else {
    size_t v16 = (size_t)__p[1];
  }
  unint64_t v17 = v16 + v14;
  if (v16 + v14 >= 0x7FFFFFFFFFFFFFF8) {
    sub_188D690();
  }
  if (v17 <= 0x16)
  {
    a2[1] = 0;
    a2[2] = 0;
    *a2 = 0;
    *((unsigned char *)a2 + 23) = v17;
    if (!v14) {
      goto LABEL_39;
    }
    goto LABEL_35;
  }
  uint64_t v21 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v17 | 7) != 0x17) {
    uint64_t v21 = v17 | 7;
  }
  uint64_t v22 = v21 + 1;
  std::string::size_type v23 = operator new(v21 + 1);
  a2[1] = v17;
  a2[2] = v22 | 0x8000000000000000;
  *a2 = v23;
  a2 = v23;
  if (v14)
  {
LABEL_35:
    if (v13 >= 0) {
      int v18 = __dst;
    }
    else {
      int v18 = (void **)__dst[0];
    }
    memmove(a2, v18, v14);
  }
LABEL_39:
  uint64_t v19 = (char *)a2 + v14;
  if (v16)
  {
    if (v15 >= 0) {
      uint64_t v20 = __p;
    }
    else {
      uint64_t v20 = (void **)__p[0];
    }
    memmove(v19, v20, v16);
  }
  v19[v16] = 0;
  if ((v15 & 0x80000000) == 0)
  {
    if ((v13 & 0x80) == 0) {
      return;
    }
LABEL_52:
    operator delete(__dst[0]);
    return;
  }
  operator delete(__p[0]);
  if (v27 < 0) {
    goto LABEL_52;
  }
}

void sub_8199C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if ((a21 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_819A0C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  if (*(unsigned char *)(a1 + 1859))
  {
    if (*(_DWORD *)(a1 + 1848) == 4)
    {
      BOOL v7 = &xmmword_25C5BA8;
      if ((byte_25C5BBF & 0x80000000) == 0)
      {
LABEL_4:
        long long __dst = *v7;
        uint64_t v49 = *((void *)v7 + 2);
        goto LABEL_9;
      }
    }
    else
    {
      BOOL v9 = sub_6F2FD8(a1 + 760);
      uint64_t v10 = 1344;
      if (!v9 | a4) {
        uint64_t v10 = 1320;
      }
      BOOL v7 = (long long *)((char *)&xmmword_25C5650 + v10);
      if ((*((char *)v7 + 23) & 0x80000000) == 0) {
        goto LABEL_4;
      }
    }
    sub_4200(&__dst, *(void **)v7, *((void *)v7 + 1));
LABEL_9:
    if (a3) {
      uint64_t v11 = 3;
    }
    else {
      uint64_t v11 = 10;
    }
    sub_6352AC((uint64_t)&v38, (uint64_t)&__dst);
    uint64_t v12 = (std::__shared_weak_count *)operator new(0x80uLL);
    v12->__shared_owners_ = 0;
    v12->__shared_weak_owners_ = 0;
    v12->__vftable = (std::__shared_weak_count_vtbl *)off_243A0E0;
    sub_59540C((uint64_t)&v50, (uint64_t)&v12[1], a2);
    int v36 = &v12[1].__vftable;
    int v37 = v12;
    sub_6370D4(&v42, &v38, v11, &v36);
    sub_63DAA4(a2, (uint64_t)&v42);
    int v13 = v47;
    if (v47 && !atomic_fetch_add(&v47->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
    size_t v14 = v46;
    if (v46)
    {
      do
      {
        int v15 = (void *)*v14;
        sub_4F4B48((uint64_t)(v14 + 2));
        operator delete(v14);
        size_t v14 = v15;
      }
      while (v15);
    }
    size_t v16 = __p;
    std::string __p = 0;
    if (v16) {
      operator delete(v16);
    }
    unint64_t v17 = (void **)v42;
    if (v42)
    {
      int v18 = v43;
      uint64_t v19 = v42;
      if (v43 != v42)
      {
        do
        {
          if (*((char *)v18 - 1) < 0) {
            operator delete(*(v18 - 3));
          }
          v18 -= 3;
        }
        while (v18 != v17);
        uint64_t v19 = v42;
      }
      unsigned __int8 v43 = v17;
      operator delete(v19);
    }
    uint64_t v20 = v37;
    if (v37 && !atomic_fetch_add(&v37->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
    uint64_t v21 = v41;
    if (v41)
    {
      do
      {
        uint64_t v22 = (void *)*v21;
        sub_4F4B48((uint64_t)(v21 + 2));
        operator delete(v21);
        uint64_t v21 = v22;
      }
      while (v22);
    }
    std::string::size_type v23 = v40;
    int64_t v40 = 0;
    if (v23) {
      operator delete(v23);
    }
    unint64_t v24 = (void **)v38;
    if (v38)
    {
      uint64_t v25 = v39;
      unint64_t v26 = v38;
      if (v39 != v38)
      {
        do
        {
          if (*((char *)v25 - 1) < 0) {
            operator delete(*(v25 - 3));
          }
          v25 -= 3;
        }
        while (v25 != v24);
        unint64_t v26 = v38;
      }
      BOOL v39 = v24;
      operator delete(v26);
    }
    uint64_t v27 = HIBYTE(v49);
    char v28 = HIBYTE(v49);
    if (v49 >= 0) {
      uint64_t v29 = HIBYTE(v49);
    }
    else {
      uint64_t v29 = *((void *)&__dst + 1);
    }
    uint64_t v30 = *((void *)&xmmword_25C5B90 + 1);
    if (byte_25C5BA7 >= 0) {
      uint64_t v30 = byte_25C5BA7;
    }
    if (v29 != v30) {
      goto LABEL_63;
    }
    if (byte_25C5BA7 >= 0) {
      uint64_t v31 = &xmmword_25C5B90;
    }
    else {
      uint64_t v31 = (long long *)xmmword_25C5B90;
    }
    if (SHIBYTE(v49) < 0)
    {
      if (memcmp((const void *)__dst, v31, *((size_t *)&__dst + 1))) {
        goto LABEL_65;
      }
    }
    else if (HIBYTE(v49))
    {
      p_dst = &__dst;
      while (*(unsigned __int8 *)p_dst == *(unsigned __int8 *)v31)
      {
        p_dst = (long long *)((char *)p_dst + 1);
        uint64_t v31 = (long long *)((char *)v31 + 1);
        if (!--v27) {
          goto LABEL_58;
        }
      }
LABEL_63:
      if ((v28 & 0x80) == 0) {
        return;
      }
LABEL_65:
      operator delete((void *)__dst);
      return;
    }
LABEL_58:
    sub_8112A4(a1 + 760, (uint64_t)&v42);
    sub_637314(a2, (uint64_t)&v42);
    uint64_t v33 = v44;
    if (v44)
    {
      do
      {
        int v34 = (void *)*v33;
        sub_4F4B48((uint64_t)(v33 + 2));
        operator delete(v33);
        uint64_t v33 = v34;
      }
      while (v34);
    }
    int v35 = v42;
    uint64_t v42 = 0;
    if (v35) {
      operator delete(v35);
    }
    char v28 = HIBYTE(v49);
    goto LABEL_63;
  }
}

void sub_819DD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_4DD068((uint64_t)va);
  if (*(char *)(v12 - 57) < 0) {
    operator delete(*(void **)(v12 - 80));
  }
  _Unwind_Resume(a1);
}

void sub_819E34(uint64_t a1, uint64_t *a2, int a3)
{
  if (*(unsigned char *)(a1 + 1860))
  {
    sub_637D5C(a2, (uint64_t)__p);
    uint64_t v5 = (void **)__p[0];
    int v6 = (char *)__p[1];
    if (__p[0] != __p[1])
    {
      for (uint64_t i = (char *)__p[0]; i != v6; i += 24)
      {
        if (i[23] < 0)
        {
          BOOL v9 = *(char **)i;
          uint64_t v8 = *((void *)i + 1);
          if (v8 >= 5)
          {
LABEL_9:
            uint64_t v10 = &v9[v8];
            uint64_t v11 = v9;
            do
            {
              uint64_t v12 = (char *)memchr(v11, 67, v8 - 4);
              if (!v12) {
                break;
              }
              if (*(_DWORD *)v12 == 1936683587 && v12[4] == 115)
              {
                if (v12 == v10 || v12 - v9 == -1) {
                  break;
                }
                if (a3) {
                  int v14 = 2;
                }
                else {
                  int v14 = sub_637D84((uint64_t)a2);
                }
                sub_63733C((uint64_t)a2, v14);
                int v15 = 0;
                uint64_t v5 = (void **)__p[0];
                if (__p[0]) {
                  goto LABEL_22;
                }
                goto LABEL_29;
              }
              uint64_t v11 = v12 + 1;
              uint64_t v8 = v10 - (unsigned char *)v11;
            }
            while (v10 - (unsigned char *)v11 >= 5);
          }
        }
        else
        {
          uint64_t v8 = i[23];
          BOOL v9 = i;
          if ((unint64_t)v8 >= 5) {
            goto LABEL_9;
          }
        }
      }
    }
    int v15 = 1;
    if (v5)
    {
LABEL_22:
      size_t v16 = (void **)__p[1];
      unint64_t v17 = v5;
      if (__p[1] != v5)
      {
        do
        {
          if (*((char *)v16 - 1) < 0) {
            operator delete(*(v16 - 3));
          }
          v16 -= 3;
        }
        while (v16 != v5);
        unint64_t v17 = (void **)__p[0];
      }
      __p[1] = v5;
      operator delete(v17);
    }
LABEL_29:
    if (v15)
    {
      uint64_t v18 = 1200;
      if (a3) {
        uint64_t v18 = 1224;
      }
      uint64_t v19 = &qword_25C5B18;
      if (!a3) {
        uint64_t v19 = &qword_25C5B00;
      }
      uint64_t v20 = (char *)&unk_25C5B17;
      if (a3) {
        uint64_t v20 = (char *)&xmmword_25C5B20 + 15;
      }
      if (*v20 < 0)
      {
        uint64_t v21 = *(void **)((char *)&xmmword_25C5650 + v18);
        uint64_t v22 = 1200;
        if (a3) {
          uint64_t v22 = 1224;
        }
        sub_4200(__dst, v21, *(void *)((char *)&xmmword_25C5650 + v22 + 8));
      }
      else
      {
        *(_OWORD *)long long __dst = *(_OWORD *)v19;
        uint64_t v37 = v19[2];
      }
      if (SHIBYTE(v37) < 0)
      {
        sub_4200(__p, __dst[0], (unint64_t)__dst[1]);
      }
      else
      {
        *(_OWORD *)std::string __p = *(_OWORD *)__dst;
        uint64_t v40 = v37;
      }
      sub_28C774(&v34, (uint64_t)__p, 1uLL);
      if (SHIBYTE(v40) < 0) {
        operator delete(__p[0]);
      }
      std::string::size_type v23 = (std::__shared_weak_count *)operator new(0x80uLL);
      v23->__shared_owners_ = 0;
      v23->__shared_weak_owners_ = 0;
      v23->__vftable = (std::__shared_weak_count_vtbl *)off_243A0E0;
      sub_59540C((uint64_t)&v38, (uint64_t)&v23[1], (uint64_t)a2);
      sub_637578((int)__p);
      sub_63DAA4((uint64_t)a2, (uint64_t)__p);
      unint64_t v24 = v43;
      if (v43 && !atomic_fetch_add(&v43->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
        std::__shared_weak_count::__release_weak(v24);
      }
      uint64_t v25 = v42;
      if (v42)
      {
        do
        {
          unint64_t v26 = (void *)*v25;
          sub_4F4B48((uint64_t)(v25 + 2));
          operator delete(v25);
          uint64_t v25 = v26;
        }
        while (v26);
      }
      uint64_t v27 = v41;
      uint64_t v41 = 0;
      if (v27) {
        operator delete(v27);
      }
      char v28 = (void **)__p[0];
      if (__p[0])
      {
        uint64_t v29 = (void **)__p[1];
        uint64_t v30 = __p[0];
        if (__p[1] != __p[0])
        {
          do
          {
            if (*((char *)v29 - 1) < 0) {
              operator delete(*(v29 - 3));
            }
            v29 -= 3;
          }
          while (v29 != v28);
          uint64_t v30 = __p[0];
        }
        __p[1] = v28;
        operator delete(v30);
      }
      if (v23 && !atomic_fetch_add(&v23->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
      uint64_t v31 = (void **)v34;
      if (v34)
      {
        uint64_t v32 = v35;
        uint64_t v33 = v34;
        if (v35 != v34)
        {
          do
          {
            if (*((char *)v32 - 1) < 0) {
              operator delete(*(v32 - 3));
            }
            v32 -= 3;
          }
          while (v32 != v31);
          uint64_t v33 = v34;
        }
        int v35 = v31;
        operator delete(v33);
      }
      if (SHIBYTE(v37) < 0) {
        operator delete(__dst[0]);
      }
    }
  }
}

void sub_81A2C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  sub_1A668((void **)va);
  _Unwind_Resume(a1);
}

void sub_81A2D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a24 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_81A350(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = 0x4EC4EC4EC4EC4EC5 * ((a1[1] - *a1) >> 3);
  unint64_t v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) > 0x276276276276276) {
    sub_2E00();
  }
  if (0x9D89D89D89D89D8ALL * ((a1[2] - *a1) >> 3) > v4) {
    unint64_t v4 = 0x9D89D89D89D89D8ALL * ((a1[2] - *a1) >> 3);
  }
  if ((unint64_t)(0x4EC4EC4EC4EC4EC5 * ((a1[2] - *a1) >> 3)) >= 0x13B13B13B13B13BLL) {
    unint64_t v6 = 0x276276276276276;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0x276276276276276) {
      sub_188D718();
    }
    BOOL v7 = (char *)operator new(104 * v6);
  }
  else
  {
    BOOL v7 = 0;
  }
  uint64_t v21 = (uint64_t)&v7[104 * v3];
  uint64_t v22 = &v7[104 * v6];
  sub_59540C((uint64_t)(a1 + 2), v21, a2);
  uint64_t v8 = v21 + 104;
  uint64_t v10 = (void **)*a1;
  BOOL v9 = (void **)a1[1];
  if (v9 == (void **)*a1)
  {
    *a1 = v21;
    a1[1] = v8;
    a1[2] = (uint64_t)v22;
  }
  else
  {
    uint64_t v11 = 0;
    do
    {
      uint64_t v13 = v21 + v11 * 8;
      int v14 = &v9[v11];
      *(void *)(v13 - 88) = 0;
      *(_OWORD *)(v13 - 104) = 0uLL;
      *(_OWORD *)(v13 - 104) = *(_OWORD *)&v9[v11 - 13];
      *(void *)(v13 - 88) = v9[v11 - 11];
      *(_OWORD *)(v14 - 13) = 0uLL;
      int v15 = v9[v11 - 10];
      *(_OWORD *)(v14 - 11) = 0uLL;
      *(void *)(v13 - 80) = v15;
      *(void *)(v13 - 72) = v9[v11 - 9];
      *(v14 - 9) = 0;
      size_t v16 = v9[v11 - 8];
      *(void *)(v21 + v11 * 8 - 64) = v16;
      unint64_t v17 = v9[v11 - 7];
      *(void *)(v13 - 56) = v17;
      *(_DWORD *)(v13 - 48) = v9[v11 - 6];
      if (v17)
      {
        unint64_t v12 = v16[1];
        unint64_t v18 = *(void *)(v13 - 72);
        if ((v18 & (v18 - 1)) != 0)
        {
          if (v12 >= v18) {
            v12 %= v18;
          }
        }
        else
        {
          v12 &= v18 - 1;
        }
        v15[v12] = v21 + v11 * 8 - 64;
        v9[v11 - 8] = 0;
        v9[v11 - 7] = 0;
      }
      *(unsigned char *)(v13 - 40) = *((unsigned char *)v14 - 40);
      *(_DWORD *)(v13 - 32) = *((_DWORD *)v14 - 8);
      *(_OWORD *)(v13 - 24) = *(_OWORD *)(v14 - 3);
      *(v14 - 3) = 0;
      *(v14 - 2) = 0;
      *(_WORD *)(v13 - 8) = *((_WORD *)v14 - 4);
      v11 -= 13;
    }
    while (&v9[v11] != v10);
    uint64_t v19 = (void **)*a1;
    BOOL v9 = (void **)a1[1];
    *a1 = v21 + v11 * 8;
    a1[1] = v8;
    a1[2] = (uint64_t)v22;
    if (v9 != v19)
    {
      do
        BOOL v9 = sub_4F31D0(v9 - 13);
      while (v9 != v19);
      BOOL v9 = v19;
    }
  }
  if (v9) {
    operator delete(v9);
  }
  return v21 + 104;
}

void sub_81A590(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_63D438((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_81A5A4(void **a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v4 = 0x4EC4EC4EC4EC4EC5 * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) > 0x276276276276276) {
    sub_2E00();
  }
  if (0x9D89D89D89D89D8ALL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v5) {
    unint64_t v5 = 0x9D89D89D89D89D8ALL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if ((unint64_t)(0x4EC4EC4EC4EC4EC5 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3)) >= 0x13B13B13B13B13BLL) {
    unint64_t v8 = 0x276276276276276;
  }
  else {
    unint64_t v8 = v5;
  }
  if (v8)
  {
    if (v8 > 0x276276276276276) {
      sub_188D718();
    }
    BOOL v9 = (char *)operator new(104 * v8);
  }
  else
  {
    BOOL v9 = 0;
  }
  unint64_t v26 = &v9[104 * v4];
  char v28 = &v9[104 * v8];
  uint64_t v10 = *a3;
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  sub_6370D4(v26, a2, v10, &v29);
  uint64_t v11 = v30;
  if (!v30 || atomic_fetch_add(&v30->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    unint64_t v12 = v26;
    uint64_t v13 = v26 + 104;
    int v15 = (void **)*a1;
    int v14 = (void **)a1[1];
    if (v14 != *a1) {
      goto LABEL_14;
    }
LABEL_24:
    unint64_t v24 = v14;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  unint64_t v12 = v26;
  uint64_t v13 = v26 + 104;
  int v15 = (void **)*a1;
  int v14 = (void **)a1[1];
  if (v14 == *a1) {
    goto LABEL_24;
  }
LABEL_14:
  uint64_t v16 = 0;
  do
  {
    unint64_t v18 = &v12[v16 * 8];
    uint64_t v19 = &v14[v16];
    *((void *)v18 - 11) = 0;
    *(_OWORD *)(v18 - 104) = 0uLL;
    *(_OWORD *)(v18 - 104) = *(_OWORD *)&v14[v16 - 13];
    *((void *)v18 - 11) = v14[v16 - 11];
    *(_OWORD *)(v19 - 13) = 0uLL;
    uint64_t v20 = v14[v16 - 10];
    *(_OWORD *)(v19 - 11) = 0uLL;
    *((void *)v18 - 10) = v20;
    *((void *)v18 - 9) = v14[v16 - 9];
    *(v19 - 9) = 0;
    uint64_t v21 = v14[v16 - 8];
    *(void *)&v12[v16 * 8 - 64] = v21;
    uint64_t v22 = v14[v16 - 7];
    *((void *)v18 - 7) = v22;
    *((_DWORD *)v18 - 12) = v14[v16 - 6];
    if (v22)
    {
      unint64_t v17 = v21[1];
      unint64_t v23 = *((void *)v18 - 9);
      if ((v23 & (v23 - 1)) != 0)
      {
        if (v17 >= v23) {
          v17 %= v23;
        }
      }
      else
      {
        v17 &= v23 - 1;
      }
      v20[v17] = &v12[v16 * 8 - 64];
      v14[v16 - 8] = 0;
      v14[v16 - 7] = 0;
    }
    *(v18 - 40) = *((unsigned char *)v19 - 40);
    *((_DWORD *)v18 - 8) = *((_DWORD *)v19 - 8);
    *(_OWORD *)(v18 - 24) = *(_OWORD *)(v19 - 3);
    *(v19 - 3) = 0;
    *(v19 - 2) = 0;
    *((_WORD *)v18 - 4) = *((_WORD *)v19 - 4);
    v16 -= 13;
  }
  while (&v14[v16] != v15);
  unint64_t v24 = (void **)*a1;
  int v14 = (void **)a1[1];
  v12 += v16 * 8;
LABEL_25:
  *a1 = v12;
  a1[1] = v13;
  a1[2] = v28;
  if (v14 != v24)
  {
    do
    {
      uint64_t v27 = v14 - 13;
      sub_4F31D0(v14 - 13);
      int v14 = v27;
    }
    while (v27 != v24);
    int v14 = v24;
  }
  if (v14) {
    operator delete(v14);
  }
  return v13;
}

void sub_81A850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  if (a16) {
    sub_20A6E64(a16);
  }
  sub_63D438((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_81A870(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_243ACE8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_81A890(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_243ACE8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_81A8E4(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_81A90C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_243AD38;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_81A92C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_243AD38;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_81A980(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_81A9A8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_243AD88;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_81A9C8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_243AD88;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_81AA1C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

double sub_81AA44()
{
  strcpy(&byte_25C4677, "\n\x1B\\toi=orth\\"");
  strcpy((char *)qword_25C4660, "\x1B\\toi=lhp\\"");
  byte_25C468F = 11;
  qword_25C4690 = (uint64_t)operator new(0x19uLL);
  long long v282 = xmmword_20B9250;
  unk_25C4698 = xmmword_20B9250;
  strcpy((char *)qword_25C4690, "\x1B\\toi=x-sampa-internal\\"");
  byte_25C46BF = 13;
  strcpy((char *)&qword_25C46A8, "\x1B\\tn=address\\"");
  strcpy(&byte_25C46D7, "\t\x1B\\tn=normal\\"");
  strcpy((char *)&qword_25C46C0, "\x1B\\tn=nav\\"");
  byte_25C46EF = 12;
  byte_25C4707 = 7;
  strcpy((char *)&dword_25C46F0, "\x1B\\lang=");
  byte_25C471F = 1;
  word_25C4708 = 92;
  byte_25C4737 = 4;
  strcpy((char *)&qword_25C4720, "DEV:");
  byte_25C474F = 8;
  strcpy((char *)&qword_25C4738, "Continue");
  byte_25C4767 = 11;
  strcpy((char *)&qword_25C4750, "Start_Route");
  byte_25C477F = 14;
  strcpy((char *)&qword_25C4768, "Continue_Route");
  byte_25C4797 = 12;
  strcpy((char *)&qword_25C4780, "Resume_Route");
  byte_25C47AF = 18;
  strcpy((char *)&xmmword_25C4798, "Start_Route_U_Turn");
  byte_25C47C7 = 7;
  strcpy((char *)&qword_25C47B0, "_U_Turn");
  qword_25C47D8 = 0x1300000000000000;
  qmemcpy(&unk_25C47E0, "Continue_Route", 14);
  dword_25C47D0 = 1702131055;
  qword_25C47C8 = *(void *)"Resume_Route";
  *(int *)((char *)&dword_25C47D4 + 3) = 1852994900;
  dword_25C47D4 = 1415533919;
  qword_25C47F0 = 0x1500000000000000;
  strcpy(byte_25C47F8, "Left_Turn");
  unk_25C47EE = 1415533919;
  *(_DWORD *)((char *)&qword_25C47F0 + 1) = 1852994900;
  strcpy(&byte_25C480F, "\tRight_Turn");
  strcpy(&byte_25C4827, "\nLeft_Turn_At_End");
  byte_25C483F = 16;
  byte_25C4857 = 17;
  strcpy((char *)&xmmword_25C4840, "Right_Turn_At_End");
  byte_25C486F = 15;
  strcpy((char *)&qword_25C4858, "Sharp_Left_Turn");
  byte_25C4887 = 16;
  strcpy((char *)&xmmword_25C4870, "Sharp_Right_Turn");
  byte_25C489F = 16;
  strcpy((char *)&xmmword_25C4888, "Slight_Left_Turn");
  byte_25C48B7 = 17;
  strcpy((char *)&xmmword_25C48A0, "Slight_Right_Turn");
  strcpy(&byte_25C48CF, "\tKeep_Right");
  strcpy((char *)&qword_25C48B8, "Keep_Left");
  strcpy(&byte_25C48E7, "\nU_Turn");
  byte_25C48FF = 6;
  byte_25C4917 = 14;
  strcpy((char *)&qword_25C4900, "Walking_U_Turn");
  byte_25C492F = 20;
  strcpy((char *)&xmmword_25C4918, "U_Turn_When_Possible");
  byte_25C4947 = 20;
  strcpy((char *)&xmmword_25C4930, "U_Turn_At_Roundabout");
  byte_25C495F = 11;
  strcpy((char *)&qword_25C4948, "Enter_Ferry");
  strcpy(&byte_25C4977, "\nChange_Ferry");
  strcpy((char *)&qword_25C4960, "Exit_Ferry");
  strcpy((char *)&xmmword_25C4990, "Enter_Railway_Shuttle");
  strcpy((char *)&xmmword_25C49A8, "Exit_Railway_Shuttle");
  strcpy((char *)&xmmword_25C49C0, "Change_Railway_Shuttle");
  strcpy((char *)&xmmword_25C49D8, "End_Of_Navigation");
  strcpy((char *)&xmmword_25C49F0, "End_Of_Navigation");
  strcpy((char *)&qword_25C4A08, "Destination");
  strcpy((char *)&xmmword_25C4A20, "Destination_On_left");
  strcpy((char *)&xmmword_25C4A38, "Destination_On_Right");
  strcpy((char *)&xmmword_25C4A80, "First_Stop_On_Right");
  strcpy((char *)&xmmword_25C4AC8, "Next_Stop_On_Right");
  byte_25C498F = 12;
  byte_25C49A7 = 21;
  byte_25C49BF = 20;
  strcpy((char *)&xmmword_25C4AF8, "Waypoint_Stop_On_Left");
  byte_25C49D7 = 22;
  byte_25C49EF = 17;
  byte_25C4A07 = 17;
  byte_25C4A1F = 11;
  byte_25C4A37 = 19;
  byte_25C4A4F = 20;
  strcpy(&byte_25C4A67, "\nFirst_Stop_On_left");
  *(void *)&v270[0] = *(void *)"First_Stop";
  strcpy((char *)&qword_25C4A50, "First_Stop");
  byte_25C4A7F = 18;
  byte_25C4A97 = 19;
  strcpy(&byte_25C4AAF, "\tNext_Stop_On_left");
  strcpy((char *)&qword_25C4AE0, "Waypoint_Stop");
  strcpy((char *)&xmmword_25C4B10, "Waypoint_Stop_On_Right");
  strcpy((char *)&qword_25C4B28, "Roundabout_");
  *(void *)&v266[48] = *(void *)"Next_Stop";
  strcpy((char *)&qword_25C4A98, "Next_Stop");
  byte_25C4AC7 = 17;
  byte_25C4ADF = 18;
  byte_25C4AF7 = 13;
  byte_25C4B0F = 21;
  byte_25C4B27 = 22;
  byte_25C4B3F = 11;
  byte_25C4B57 = 16;
  strcpy((char *)&xmmword_25C4B40, "Enter_Roundabout");
  qword_25C4B58 = (uint64_t)operator new(0x20uLL);
  long long v281 = xmmword_20B91C0;
  xmmword_25C4B60 = xmmword_20B91C0;
  strcpy((char *)qword_25C4B58, "Walking_Enter_Roundabout");
  byte_25C4B87 = 16;
  strcpy((char *)&xmmword_25C4B70, "Leave_Roundabout");
  byte_25C4B9F = 21;
  strcpy((char *)&xmmword_25C4B88, "Roundabout_First_Exit");
  byte_25C4BB7 = 22;
  strcpy((char *)&xmmword_25C4BA0, "Roundabout_Second_Exit");
  byte_25C4BCF = 21;
  strcpy((char *)&xmmword_25C4BB8, "Roundabout_Third_Exit");
  strcpy((char *)&xmmword_25C4BD0, "Roundabout_Fourth_Exit");
  HIBYTE(word_25C4BE6) = 22;
  byte_25C4BFF = 21;
  strcpy((char *)&xmmword_25C4BE8, "Roundabout_Fifth_Exit");
  byte_25C4C17 = 21;
  strcpy((char *)&xmmword_25C4C00, "Roundabout_Sixth_Exit");
  qword_25C4C18 = (uint64_t)operator new(0x19uLL);
  xmmword_25C4C20 = xmmword_20B9250;
  strcpy((char *)qword_25C4C18, "Roundabout_Seventh_Exit");
  strcpy((char *)&xmmword_25C4C30, "Roundabout_Eighth_Exit");
  HIBYTE(word_25C4C46) = 22;
  byte_25C4C5F = 21;
  strcpy((char *)&xmmword_25C4C48, "Roundabout_Ninth_Exit");
  byte_25C4C77 = 21;
  strcpy((char *)&xmmword_25C4C60, "Roundabout_Tenth_Exit");
  qword_25C4C78 = (uint64_t)operator new(0x20uLL);
  xmmword_25C4C80 = xmmword_20B91C0;
  strcpy((char *)qword_25C4C78, "Roundabout_Eleventh_Exit");
  qword_25C4C90 = (uint64_t)operator new(0x19uLL);
  unk_25C4C98 = xmmword_20B9250;
  strcpy((char *)qword_25C4C90, "Roundabout_Twelfth_Exit");
  qword_25C4CA8 = (uint64_t)operator new(0x20uLL);
  long long v278 = xmmword_20B5EB0;
  xmmword_25C4CB0 = xmmword_20B5EB0;
  strcpy((char *)qword_25C4CA8, "Roundabout_Thirteenth_Exit");
  qword_25C4CC0 = (uint64_t)operator new(0x20uLL);
  unk_25C4CC8 = xmmword_20B5EB0;
  strcpy((char *)qword_25C4CC0, "Roundabout_Fourteenth_Exit");
  qword_25C4CD8 = (uint64_t)operator new(0x20uLL);
  long long v280 = xmmword_20B8870;
  xmmword_25C4CE0 = xmmword_20B8870;
  strcpy((char *)qword_25C4CD8, "Roundabout_Fifteenth_Exit");
  qword_25C4CF0 = (uint64_t)operator new(0x20uLL);
  unk_25C4CF8 = xmmword_20B8870;
  strcpy((char *)qword_25C4CF0, "Roundabout_Sixteenth_Exit");
  qword_25C4D08 = (uint64_t)operator new(0x20uLL);
  long long v275 = xmmword_20B91A0;
  xmmword_25C4D10 = xmmword_20B91A0;
  strcpy((char *)qword_25C4D08, "Roundabout_Seventeenth_Exit");
  qword_25C4D20 = (uint64_t)operator new(0x20uLL);
  unk_25C4D28 = xmmword_20B5EB0;
  strcpy((char *)qword_25C4D20, "Roundabout_Eighteenth_Exit");
  qword_25C4D38 = (uint64_t)operator new(0x20uLL);
  xmmword_25C4D40 = xmmword_20B5EB0;
  strcpy((char *)qword_25C4D38, "Roundabout_Nineteenth_Exit");
  byte_25C4D67 = 8;
  strcpy((char *)&qword_25C4D50, "Off_Ramp");
  byte_25C4D7F = 16;
  strcpy((char *)&xmmword_25C4D68, "Off_Ramp_On_Left");
  byte_25C4D97 = 17;
  strcpy((char *)&xmmword_25C4D80, "Off_Ramp_On_Right");
  byte_25C4DAF = 14;
  strcpy((char *)&qword_25C4D98, "Change_Highway");
  strcpy((char *)&xmmword_25C4DB0, "Change_Highway_On_Left");
  HIBYTE(word_25C4DC6) = 22;
  qword_25C4DC8 = (uint64_t)operator new(0x19uLL);
  xmmword_25C4DD0 = xmmword_20B9250;
  strcpy((char *)qword_25C4DC8, "Change_Highway_On_Right");
  byte_25C4DF7 = 5;
  dword_25C4DE0 = 1735550285;
  byte_25C4DE4 = 101;
  byte_25C4DE5 = 0;
  byte_25C4E0F = 12;
  strcpy((char *)&qword_25C4DF8, "Enter_Detour");
  byte_25C4E27 = 11;
  strcpy((char *)&qword_25C4E10, "Exit_Detour");
  byte_25C4E3F = 18;
  strcpy((char *)&xmmword_25C4E28, "Walking_Turnaround");
  qword_25C4E40 = (uint64_t)operator new(0x19uLL);
  unk_25C4E48 = xmmword_20B9250;
  strcpy((char *)qword_25C4E40, "Walking_Turnaround_Sign");
  byte_25C4E6F = 19;
  strcpy((char *)&xmmword_25C4E58, "Distance_Title_List");
  qword_25C4E70 = (uint64_t)operator new(0x19uLL);
  unk_25C4E78 = xmmword_20B9250;
  long long v272 = *(_OWORD *)"Cross_The_Street_Spoken";
  strcpy((char *)qword_25C4E70, "Cross_The_Street_Spoken");
  *(void *)&v270[1] = *(void *)"t_Spoken";
  byte_25C4E9F = 19;
  strcpy((char *)&xmmword_25C4E88, "Arrival_Charge_List");
  byte_25C4EB7 = 15;
  strcpy((char *)&qword_25C4EA0, "Charge_At_Start");
  strcpy(&byte_25C4ECF, "\tPass_Street");
  strcpy((char *)&qword_25C4EB8, "Pass_Exit");
  byte_25C4EE7 = 11;
  byte_25C4EFF = 17;
  strcpy((char *)&xmmword_25C4EE8, "Pass_Intersection");
  strcpy(&byte_25C4F17, "\t_PrevExitNumber");
  strcpy((char *)&qword_25C4F00, "Next_Exit");
  byte_25C4F2F = 15;
  strcpy(&byte_25C4F47, "\t_PrevUTurn");
  strcpy((char *)&qword_25C4F30, "_PrevRoad");
  strcpy(&byte_25C4F5F, "\nNext_");
  byte_25C4F77 = 5;
  byte_25C4F8F = 15;
  strcpy((char *)&qword_25C4F78, "_At_Next_Street");
  byte_25C4FA7 = 21;
  strcpy((char *)&xmmword_25C4F90, "_At_Next_Intersection");
  byte_25C4FBF = 14;
  strcpy((char *)&qword_25C4FA8, "Charge_Station");
  byte_25C4FD7 = 15;
  strcpy((char *)&qword_25C4FC0, "_Charge_Station");
  BYTE1(qword_25C4FE8) = 0;
  WORD1(qword_25C4FE8) = 25856;
  HIDWORD(qword_25C4FE8) = 335544320;
  strcpy((char *)&qword_25C4FD8, "_Charge_Station_");
  byte_25C5007 = 8;
  strcpy((char *)&qword_25C4FF0, "_Minimum");
  byte_25C501F = 15;
  strcpy((char *)&qword_25C5008, "ExitShield_Sign");
  byte_25C5037 = 8;
  strcpy((char *)&qword_25C5020, "Walking_");
  byte_25C504F = 16;
  strcpy((char *)&xmmword_25C5038, "Walking_Continue");
  byte_25C5067 = 19;
  strcpy((char *)&xmmword_25C5050, "Walking_Start_Route");
  qword_25C5068 = (uint64_t)operator new(0x20uLL);
  xmmword_25C5070 = xmmword_20B5EB0;
  strcpy((char *)qword_25C5068, "Walking_Start_Route_U_Turn");
  byte_25C5097 = 17;
  strcpy((char *)&xmmword_25C5080, "Walking_Left_Turn");
  byte_25C50AF = 18;
  strcpy((char *)&xmmword_25C5098, "Walking_Right_Turn");
  qword_25C50B0 = (uint64_t)operator new(0x20uLL);
  unk_25C50B8 = xmmword_20B5EB0;
  strcpy((char *)qword_25C50B0, "Walking_Turn_At_Roundabout");
  qword_25C50C8 = (uint64_t)operator new(0x20uLL);
  long long v279 = xmmword_20B91B0;
  xmmword_25C50D0 = xmmword_20B91B0;
  strcpy((char *)qword_25C50C8, "Walking_U_Turn_When_Possible");
  qword_25C50E0 = (uint64_t)operator new(0x28uLL);
  long long v271 = xmmword_20B9390;
  unk_25C50E8 = xmmword_20B9390;
  strcpy((char *)qword_25C50E0, "Walking_Roundabout_Exit_Continue");
  qword_25C50F8 = (uint64_t)operator new(0x20uLL);
  xmmword_25C5100 = xmmword_20B91B0;
  strcpy((char *)qword_25C50F8, "Walking_Roundabout_Exit_Left");
  qword_25C5110 = (uint64_t)operator new(0x20uLL);
  long long v277 = xmmword_20B8890;
  unk_25C5118 = xmmword_20B8890;
  strcpy((char *)qword_25C5110, "Walking_Roundabout_Exit_Right");
  qword_25C5128 = (uint64_t)operator new(0x20uLL);
  xmmword_25C5130 = xmmword_20B8870;
  strcpy((char *)qword_25C5128, "Walking_End_Of_Navigation");
  long long v274 = *(_OWORD *)"nd_Of_Navigation";
  v0 = (char *)operator new(0x20uLL);
  qword_25C5140 = (uint64_t)v0;
  unk_25C5148 = xmmword_20B8870;
  *(_OWORD *)v0 = *(_OWORD *)"Walking_End_Of_Navigation";
  *(_OWORD *)(v0 + 9) = v274;
  v0[25] = 0;
  byte_25C516F = 8;
  strcpy((char *)&qword_25C5158, "Walking_");
  qword_25C5170 = (uint64_t)operator new(0x19uLL);
  unk_25C5178 = v282;
  strcpy((char *)qword_25C5170, "Walking_Sharp_Left_Turn");
  qword_25C5188 = (uint64_t)operator new(0x20uLL);
  xmmword_25C5190 = v281;
  strcpy((char *)qword_25C5188, "Walking_Sharp_Right_Turn");
  qword_25C51A0 = (uint64_t)operator new(0x20uLL);
  unk_25C51A8 = v281;
  strcpy((char *)qword_25C51A0, "Walking_Slight_Left_Turn");
  qword_25C51B8 = (uint64_t)operator new(0x20uLL);
  xmmword_25C51C0 = v280;
  strcpy((char *)qword_25C51B8, "Walking_Slight_Right_Turn");
  byte_25C51E7 = 4;
  strcpy((char *)&dword_25C51D0, "Exit");
  byte_25C51FF = 4;
  strcpy((char *)&dword_25C51E8, "Road");
  byte_25C5217 = 7;
  strcpy((char *)&dword_25C5200, "Freeway");
  byte_25C522F = 12;
  strcpy((char *)&xmmword_25C5218, "Intersection");
  byte_25C5247 = 5;
  strcpy((char *)&xmmword_25C5230, "Ferry");
  byte_25C525F = 11;
  strcpy((char *)&xmmword_25C5248, "ShuttleName");
  byte_25C5277 = 5;
  strcpy((char *)&dword_25C5260, "Road1");
  strcpy(&byte_25C528F, "\tName");
  strcpy((char *)&qword_25C5278, "Signpost1");
  byte_25C52A7 = 4;
  byte_25C52BF = 7;
  strcpy((char *)&xmmword_25C52A8, "Address");
  byte_25C52D7 = 7;
  strcpy((char *)&dword_25C52C0, "Shield1");
  byte_25C52EF = 13;
  strcpy((char *)&qword_25C52D8, "TowardShield1");
  byte_25C5307 = 6;
  strcpy((char *)&dword_25C52F0, "Right_");
  byte_25C531F = 5;
  byte_25C530C = 95;
  dword_25C5308 = 1952867660;
  byte_25C530D = 0;
  HIBYTE(qword_25C5330) = 9;
  strcpy((char *)&xmmword_25C5320, "On_Right_");
  byte_25C534F = 8;
  strcpy((char *)&xmmword_25C5338, "On_Left_");
  byte_25C5367 = 12;
  strcpy((char *)&qword_25C5350, "ElevatorName");
  byte_25C537F = 13;
  strcpy((char *)&qword_25C5368, "EscalatorName");
  strcpy(&byte_25C5397, "\nBridgeName");
  strcpy((char *)&qword_25C5380, "StairsName");
  strcpy(&byte_25C53AF, "\nTunnelName");
  strcpy(&byte_25C53C7, "\nParking");
  byte_25C53DF = 7;
  strcpy(&byte_25C53F7, "\t_Escalator");
  strcpy((char *)&xmmword_25C53E0, "_Elevator");
  strcpy(&byte_25C540F, "\n_ElevatorName");
  byte_25C5427 = 13;
  byte_25C543F = 14;
  strcpy((char *)&xmmword_25C5428, "_EscalatorName");
  byte_25C5457 = 5;
  strcpy((char *)&xmmword_25C5440, "_Road");
  byte_25C546F = 8;
  strcpy((char *)&qword_25C5458, "_Freeway");
  byte_25C5487 = 13;
  strcpy((char *)&qword_25C5470, "_Intersection");
  byte_25C549F = 6;
  strcpy((char *)&qword_25C5488, "_Road1");
  byte_25C54B7 = 6;
  strcpy((char *)&qword_25C54A0, "_Road2");
  strcpy(&byte_25C54CF, "\n_Signpost2");
  strcpy((char *)&qword_25C54B8, "_Signpost1");
  strcpy(&byte_25C54E7, "\n_Ferry");
  byte_25C54FF = 6;
  byte_25C5517 = 12;
  strcpy((char *)&qword_25C5500, "_Ferry_Ferry");
  byte_25C552F = 12;
  strcpy((char *)&qword_25C5518, "_ShuttleName");
  qword_25C5530 = (uint64_t)operator new(0x20uLL);
  unk_25C5538 = v279;
  strcpy((char *)qword_25C5530, "_Railway_Shuttle_ShuttleName");
  byte_25C555F = 11;
  strcpy((char *)&qword_25C5548, "_ExitNumber");
  byte_25C5577 = 5;
  dword_25C5560 = 1769489759;
  byte_25C5564 = 116;
  byte_25C5565 = 0;
  byte_25C558F = 7;
  strcpy((char *)&dword_25C5578, "_StayOn");
  byte_25C55A7 = 7;
  strcpy((char *)&xmmword_25C5590, "_Stairs");
  byte_25C55BF = 5;
  strcpy((char *)&xmmword_25C55A8, "_Ramp");
  byte_25C55D7 = 11;
  strcpy((char *)&xmmword_25C55C0, "_StairsName");
  strcpy(&byte_25C55EF, "\t_Down");
  strcpy((char *)&xmmword_25C55D8, "_RampName");
  byte_25C5607 = 5;
  byte_25C561F = 3;
  dword_25C5608 = 7361887;
  byte_25C5637 = 7;
  strcpy((char *)&xmmword_25C5620, "_Bridge");
  byte_25C564F = 7;
  strcpy((char *)&xmmword_25C5638, "_Tunnel");
  byte_25C5667 = 11;
  strcpy((char *)&xmmword_25C5650, "_Roundabout");
  byte_25C567F = 6;
  strcpy((char *)&xmmword_25C5668, "_Cross");
  byte_25C5697 = 8;
  strcpy((char *)&qword_25C5680, "_Parking");
  byte_25C56AF = 8;
  strcpy((char *)&qword_25C5698, "_Shield1");
  byte_25C56C7 = 14;
  strcpy((char *)&qword_25C56B0, "_TowardShield1");
  byte_25C56DF = 8;
  strcpy((char *)&qword_25C56C8, "_Shield2");
  byte_25C56F7 = 14;
  strcpy((char *)&qword_25C56E0, "_TowardShield2");
  byte_25C570F = 11;
  strcpy((char *)&qword_25C56F8, "_Direction1");
  byte_25C5727 = 11;
  strcpy((char *)&qword_25C5710, "_Direction2");
  strcpy(&byte_25C573F, "\n_TowardDirection1");
  strcpy((char *)&qword_25C5728, "Direction1");
  byte_25C5757 = 17;
  byte_25C576F = 17;
  strcpy((char *)&xmmword_25C5758, "_TowardDirection2");
  byte_25C5787 = 16;
  strcpy((char *)&xmmword_25C5770, "TowardDirection1");
  byte_25C579F = 7;
  strcpy((char *)&xmmword_25C5788, "_Spoken");
  byte_25C57B7 = 5;
  strcpy((char *)&qword_25C57A0, "_Sign");
  byte_25C57CF = 15;
  strcpy((char *)&qword_25C57B8, "_Secondary_Sign");
  byte_25C57E7 = 5;
  strcpy((char *)&qword_25C57D0, "_List");
  byte_25C57FF = 8;
  strcpy((char *)&qword_25C57E8, "_Primary");
  unk_25C5810 = 0xF00000000000000;
  strcpy(byte_25C5818, "_Secondary");
  strcpy((char *)&xmmword_25C5800, "_Spoken_Primary");
  strcpy(&byte_25C582F, "\n_Secondary");
  strcpy(&byte_25C5847, "\n_Spoken_Secondar");
  unk_25C5859 = 0;
  unk_25C585A = 0;
  unk_25C585C = 285212672;
  byte_25C5877 = 13;
  strcpy((char *)&qword_25C5860, "_To_Secondary");
  BYTE1(qword_25C5888) = 0;
  WORD1(qword_25C5888) = 0;
  HIDWORD(qword_25C5888) = 335544320;
  strcpy((char *)&dword_25C5878, "_Spoken_To_Secon");
  strcpy(&byte_25C58A7, "\t_ValidDistance");
  strcpy((char *)&qword_25C5890, "_Distance");
  byte_25C58BF = 14;
  byte_25C58D7 = 6;
  strcpy((char *)&qword_25C58C0, "_Short");
  byte_25C58EF = 1;
  LOWORD(qword_25C58D8) = 95;
  qword_25C58F0 = (uint64_t)operator new(0x20uLL);
  unk_25C58F8 = v281;
  strcpy((char *)qword_25C58F0, "Concatenate_Newline_Sign");
  uint64_t v1 = (char *)operator new(0x19uLL);
  qword_25C5908 = (uint64_t)v1;
  xmmword_25C5910 = v282;
  *(_OWORD *)uint64_t v1 = v272;
  uint64_t v2 = *(void *)&v270[1];
  *(void *)(v1 + 15) = *(void *)&v270[1];
  v1[23] = 0;
  byte_25C5937 = 12;
  strcpy((char *)&qword_25C5920, "Chain_Spoken");
  byte_25C594F = 15;
  strcpy((char *)&qword_25C5938, "Chain_To_Spoken");
  strcpy(&byte_25C5967, "\nThen_Spoken");
  strcpy((char *)&qword_25C5950, "And_Spoken");
  byte_25C597F = 11;
  byte_25C5997 = 18;
  strcpy((char *)&xmmword_25C5980, "Concatenate_Spoken");
  qword_25C5998 = (uint64_t)operator new(0x28uLL);
  long long v269 = xmmword_20B9240;
  xmmword_25C59A0 = xmmword_20B9240;
  strcpy((char *)qword_25C5998, "At_Traffic_Light_Chain_Spoken_Primary");
  qword_25C59B0 = (uint64_t)operator new(0x28uLL);
  v270[2] = xmmword_20B9260;
  unk_25C59B8 = xmmword_20B9260;
  strcpy((char *)qword_25C59B0, "At_Stop_Sign_Chain_Spoken_Primary");
  qword_25C59C8 = (uint64_t)operator new(0x40uLL);
  xmmword_25C59D0 = xmmword_20B9A90;
  strcpy((char *)qword_25C59C8, "At_Stop_Sign_Cross_Traffic_Doesnt_Stop_Chain_Spoken_Primary");
  qword_25C59E0 = (uint64_t)operator new(0x30uLL);
  long long v268 = xmmword_20B9A40;
  unk_25C59E8 = xmmword_20B9A40;
  strcpy((char *)qword_25C59E0, "At_Next_Traffic_Light_Chain_Spoken_Primary");
  qword_25C59F8 = (uint64_t)operator new(0x28uLL);
  long long v267 = xmmword_20E12D0;
  xmmword_25C5A00 = xmmword_20E12D0;
  strcpy((char *)qword_25C59F8, "At_Next_Stop_Sign_Chain_Spoken_Primary");
  qword_25C5A10 = (uint64_t)operator new(0x28uLL);
  long long v276 = xmmword_20B9960;
  unk_25C5A18 = xmmword_20B9960;
  strcpy((char *)qword_25C5A10, "At_Traffic_Light_Chain_Spoken_Secondary");
  qword_25C5A28 = (uint64_t)operator new(0x28uLL);
  xmmword_25C5A30 = xmmword_20B93A0;
  strcpy((char *)qword_25C5A28, "At_Stop_Sign_Chain_Spoken_Secondary");
  qword_25C5A40 = (uint64_t)operator new(0x30uLL);
  long long v274 = xmmword_20E1380;
  unk_25C5A48 = xmmword_20E1380;
  strcpy((char *)qword_25C5A40, "At_Next_Traffic_Light_Chain_Spoken_Secondary");
  qword_25C5A58 = (uint64_t)operator new(0x30uLL);
  xmmword_25C5A60 = xmmword_20B93C0;
  strcpy((char *)qword_25C5A58, "At_Next_Stop_Sign_Chain_Spoken_Secondary");
  qword_25C5A70 = (uint64_t)operator new(0x38uLL);
  unk_25C5A78 = xmmword_20B9A60;
  strcpy((char *)qword_25C5A70, "At_Next_One_Traffic_Light_Chain_Spoken_Secondary");
  qword_25C5A88 = (uint64_t)operator new(0x30uLL);
  xmmword_25C5A90 = xmmword_20E1380;
  strcpy((char *)qword_25C5A88, "At_Next_One_Stop_Sign_Chain_Spoken_Secondary");
  qword_25C5AA0 = (uint64_t)operator new(0x28uLL);
  unk_25C5AA8 = xmmword_20B9960;
  strcpy((char *)qword_25C5AA0, "At_Mini_Roundabout_Chain_Spoken_Primary");
  qword_25C5AB8 = (uint64_t)operator new(0x30uLL);
  long long v273 = xmmword_20B93D0;
  xmmword_25C5AC0 = xmmword_20B93D0;
  strcpy((char *)qword_25C5AB8, "At_Mini_Roundabout_Chain_Spoken_Secondary");
  qword_25C5AD0 = (uint64_t)operator new(0x20uLL);
  unk_25C5AD8 = v277;
  strcpy((char *)qword_25C5AD0, "Walking_Distance_Chain_Spoken");
  qword_25C5AE8 = (uint64_t)operator new(0x20uLL);
  xmmword_25C5AF0 = v277;
  strcpy((char *)qword_25C5AE8, "Walking_Continue_Chain_Spoken");
  uint64_t v3 = (char *)operator new(0x19uLL);
  qword_25C5B00 = (uint64_t)v3;
  unk_25C5B08 = v282;
  *(_OWORD *)uint64_t v3 = v272;
  *(void *)(v3 + 15) = v2;
  v3[23] = 0;
  qword_25C5B18 = (uint64_t)operator new(0x28uLL);
  xmmword_25C5B20 = v271;
  strcpy((char *)qword_25C5B18, "Distance_Cross_The_Street_Spoken");
  byte_25C5B47 = 22;
  strcpy((char *)&xmmword_25C5B30, "Walking_Continue_Cross");
  byte_25C5B5F = 14;
  strcpy((char *)&qword_25C5B48, "Continue_Cross");
  byte_25C5B77 = 5;
  strcpy((char *)&dword_25C5B60, "Cross");
  byte_25C5B8F = 19;
  strcpy((char *)&xmmword_25C5B78, "Cross_Street_Spoken");
  byte_25C5BA7 = 17;
  strcpy((char *)&xmmword_25C5B90, "Cross_Road_Spoken");
  byte_25C5BBF = 20;
  strcpy((char *)&xmmword_25C5BA8, "Use_Crosswalk_Spoken");
  byte_25C5BD7 = 15;
  strcpy((char *)&qword_25C5BC0, "Distance_Spoken");
  byte_25C5BEF = 19;
  strcpy((char *)&xmmword_25C5BD8, "Distance_And_Spoken");
  byte_25C5C07 = 21;
  strcpy((char *)&xmmword_25C5BF0, "Continue_Stage_Spoken");
  byte_25C5C08[23] = 13;
  qmemcpy(byte_25C5C08, "ContinueStage", 13);
  int v4 = byte_25C5817;
  if (byte_25C5817 >= 0) {
    size_t v5 = byte_25C5817;
  }
  else {
    size_t v5 = *((void *)&xmmword_25C5800 + 1);
  }
  unint64_t v6 = v5 + 13;
  byte_25C5C08[13] = 0;
  if (v5 + 13 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v6 >= 0x17)
  {
    uint64_t v8 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17) {
      uint64_t v8 = v6 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v10 = operator new(v8 + 1);
    qword_25C5C28 = v5 + 13;
    unk_25C5C30 = v9 | 0x8000000000000000;
    qword_25C5C20 = (uint64_t)v10;
    *uint64_t v10 = *(void *)"ContinueStage";
    BOOL v7 = (char *)v10 + 13;
    *(void *)((char *)v10 + 5) = *(void *)"nueStage";
  }
  else
  {
    BYTE1(qword_25C5C28) = 0;
    WORD1(qword_25C5C28) = 0;
    HIDWORD(qword_25C5C28) = 0;
    unk_25C5C30 = 0;
    byte_25C5C37 = v5 + 13;
    BOOL v7 = (char *)&qword_25C5C28 + 5;
    strcpy((char *)&qword_25C5C20, "Continue");
    if (!v5) {
      goto LABEL_15;
    }
  }
  if (v4 >= 0) {
    uint64_t v11 = &xmmword_25C5800;
  }
  else {
    uint64_t v11 = (long long *)xmmword_25C5800;
  }
  memmove(v7, v11, v5);
LABEL_15:
  v7[v5] = 0;
  int v12 = byte_25C5457;
  if (byte_25C5457 >= 0) {
    size_t v13 = byte_25C5457;
  }
  else {
    size_t v13 = *((void *)&xmmword_25C5440 + 1);
  }
  unint64_t v14 = v13 + 13;
  if (v13 + 13 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v14 >= 0x17)
  {
    uint64_t v16 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17) {
      uint64_t v16 = v14 | 7;
    }
    uint64_t v17 = v16 + 1;
    unint64_t v18 = operator new(v16 + 1);
    __dst.__r_.__value_.__l.__size_ = v13 + 13;
    __dst.__r_.__value_.__r.__words[2] = v17 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v18;
    *unint64_t v18 = *(void *)byte_25C5C08;
    *(void *)((char *)v18 + 5) = *(void *)&byte_25C5C08[5];
    int v15 = (char *)v18 + 13;
  }
  else
  {
    *(_OWORD *)&__dst.__r_.__value_.__r.__words[1] = 0uLL;
    *(std::string::size_type *)((char *)__dst.__r_.__value_.__r.__words + 5) = *(void *)&byte_25C5C08[5];
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v13 + 13;
    __dst.__r_.__value_.__r.__words[0] = *(void *)byte_25C5C08;
    int v15 = &__dst.__r_.__value_.__s.__data_[13];
    if (!v13) {
      goto LABEL_29;
    }
  }
  if (v12 >= 0) {
    uint64_t v19 = &xmmword_25C5440;
  }
  else {
    uint64_t v19 = (long long *)xmmword_25C5440;
  }
  memmove(v15, v19, v13);
LABEL_29:
  v15[v13] = 0;
  if (v4 >= 0) {
    uint64_t v20 = (const std::string::value_type *)&xmmword_25C5800;
  }
  else {
    uint64_t v20 = (const std::string::value_type *)xmmword_25C5800;
  }
  uint64_t v21 = std::string::append(&__dst, v20, v5);
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  qword_25C5C48 = v21->__r_.__value_.__r.__words[2];
  xmmword_25C5C38 = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  byte_25C5C50[23] = 5;
  strcpy(byte_25C5C50, "Merge");
  qword_25C5C68 = (uint64_t)operator new(0x20uLL);
  v270[1] = xmmword_20B8E90;
  *(_OWORD *)algn_25C5C70 = xmmword_20B8E90;
  strcpy((char *)qword_25C5C68, "Continue_Freeway_Spoken_Primary");
  byte_25C5C97 = 8;
  strcpy((char *)&qword_25C5C80, "Starting");
  byte_25C5CAF = 14;
  strcpy((char *)&qword_25C5C98, "Starting_Route");
  byte_25C5CC7 = 14;
  strcpy((char *)&qword_25C5CB0, "Resuming_Route");
  byte_25C5CDF = 16;
  strcpy((char *)&xmmword_25C5CC8, "Continuing_Route");
  byte_25C5CF7 = 9;
  word_25C5CE8 = 112;
  qword_25C5CE0 = *(void *)&v266[48];
  strcpy(&byte_25C5D0F, "\nEnding");
  strcpy((char *)&word_25C5D00, "op");
  qword_25C5CF8 = *(void *)&v270[0];
  byte_25C5D27 = 6;
  strcpy((char *)&qword_25C5D28, "_Destination");
  byte_25C5D3F = 12;
  byte_25C5D57 = 15;
  strcpy((char *)&qword_25C5D40, "_At_Destination");
  std::operator+<char>();
  qword_25C5D70 = (uint64_t)operator new(0x20uLL);
  unk_25C5D78 = v281;
  strcpy((char *)qword_25C5D70, "Spoken_Ending_At_Parking");
  qword_25C5D88 = (uint64_t)operator new(0x20uLL);
  v270[0] = xmmword_20B9800;
  xmmword_25C5D90 = xmmword_20B9800;
  strcpy((char *)qword_25C5D88, "Spoken_Pre_Arrival_Destination");
  strcpy((char *)&xmmword_25C5DA0, "Sign_Ending_At_Parking");
  HIBYTE(word_25C5DB6) = 22;
  byte_25C5DCF = 4;
  strcpy((char *)&dword_25C5DB8, "Home");
  byte_25C5DE7 = 4;
  strcpy((char *)&dword_25C5DD0, "Work");
  byte_25C5DFF = 8;
  strcpy((char *)&qword_25C5DE8, "Business");
  byte_25C5E17 = 4;
  strcpy((char *)&dword_25C5E00, "Name");
  byte_25C5E2F = 13;
  strcpy((char *)&qword_25C5E18, "Other_Contact");
  byte_25C5E47 = 11;
  strcpy((char *)&qword_25C5E30, "ContactHome");
  byte_25C5E5F = 11;
  *(_DWORD *)((char *)&qword_25C5E48 + 7) = 1802661719;
  byte_25C5E77 = 7;
  *(int *)((char *)&dword_25C5E60 + 3) = 1936942450;
  dword_25C5E60 = 1919181889;
  strcpy((char *)&xmmword_25C5E78, "Discoverability_Prompt");
  HIBYTE(word_25C5E8E) = 22;
  byte_25C5EA7 = 6;
  dword_25C5E90 = 1634878303;
  word_25C5E94 = 26739;
  byte_25C5EBF = 8;
  qword_25C5EA8 = 0x697269535F6F4E5FLL;
  byte_25C5ED7 = 9;
  strcpy((char *)&qword_25C5EC0, "_CityName");
  byte_25C5EEF = 8;
  qword_25C5ED8 = 0x636972656E65475FLL;
  int v23 = byte_25C5C97;
  if (byte_25C5C97 >= 0) {
    size_t v24 = byte_25C5C97;
  }
  else {
    size_t v24 = qword_25C5C88;
  }
  LODWORD(v272) = byte_25C4FD7;
  if (byte_25C4FD7 >= 0) {
    size_t v25 = byte_25C4FD7;
  }
  else {
    size_t v25 = unk_25C4FC8;
  }
  qword_25C5E48 = *(void *)"ContactWork";
  byte_25C5E53 = 0;
  byte_25C5E67 = 0;
  byte_25C5E96 = 0;
  byte_25C5EB0 = 0;
  byte_25C5EE0 = 0;
  unint64_t v26 = v25 + v24;
  if (v25 + v24 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  *(void *)v266 = *(void *)"ContactWork";
  *(void *)&v266[16] = *(void *)"ContactHome";
  *(void *)&v266[32] = *(void *)"_Contact";
  *(void *)&v266[48] = *(void *)"Other_Contact";
  if (v26 <= 0x16)
  {
    uint64_t v27 = &qword_25C5EF0;
    qword_25C5EF8 = 0;
    unk_25C5F00 = 0;
    qword_25C5EF0 = 0;
    byte_25C5F07 = v25 + v24;
    if (!v24) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
  uint64_t v90 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v26 | 7) != 0x17) {
    uint64_t v90 = v26 | 7;
  }
  uint64_t v91 = v90 + 1;
  uint64_t v27 = (uint64_t *)operator new(v90 + 1);
  qword_25C5EF8 = v25 + v24;
  unk_25C5F00 = v91 | 0x8000000000000000;
  qword_25C5EF0 = (uint64_t)v27;
  if (v24)
  {
LABEL_43:
    if (v23 >= 0) {
      char v28 = &qword_25C5C80;
    }
    else {
      char v28 = (uint64_t *)qword_25C5C80;
    }
    memmove(v27, v28, v24);
  }
LABEL_47:
  uint64_t v29 = (char *)v27 + v24;
  if (v25)
  {
    if ((int)v272 >= 0) {
      uint64_t v30 = &qword_25C4FC0;
    }
    else {
      uint64_t v30 = (uint64_t *)qword_25C4FC0;
    }
    memmove(v29, v30, v25);
  }
  v29[v25] = 0;
  int v31 = byte_25C5D3F;
  if (byte_25C5D3F >= 0) {
    size_t v32 = byte_25C5D3F;
  }
  else {
    size_t v32 = qword_25C5D30;
  }
  unint64_t v33 = v32 + v24;
  if (v32 + v24 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v33 <= 0x16)
  {
    int v34 = &qword_25C5F08;
    qword_25C5F10 = 0;
    unk_25C5F18 = 0;
    qword_25C5F08 = 0;
    byte_25C5F1F = v32 + v24;
    if (!v24) {
      goto LABEL_62;
    }
    goto LABEL_58;
  }
  uint64_t v92 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v33 | 7) != 0x17) {
    uint64_t v92 = v33 | 7;
  }
  uint64_t v93 = v92 + 1;
  int v34 = (uint64_t *)operator new(v92 + 1);
  qword_25C5F10 = v32 + v24;
  unk_25C5F18 = v93 | 0x8000000000000000;
  qword_25C5F08 = (uint64_t)v34;
  if (v24)
  {
LABEL_58:
    if (v23 >= 0) {
      int v35 = &qword_25C5C80;
    }
    else {
      int v35 = (uint64_t *)qword_25C5C80;
    }
    memmove(v34, v35, v24);
  }
LABEL_62:
  int v36 = (char *)v34 + v24;
  if (v32)
  {
    if (v31 >= 0) {
      uint64_t v37 = &qword_25C5D28;
    }
    else {
      uint64_t v37 = (uint64_t *)qword_25C5D28;
    }
    memmove(v36, v37, v32);
  }
  v36[v32] = 0;
  qword_25C5F20 = (uint64_t)operator new(0x19uLL);
  unk_25C5F28 = v282;
  strcpy((char *)qword_25C5F20, "{ChargeStationCityName}");
  if (v33 < 0x17)
  {
    char v38 = &qword_25C5F38;
    qword_25C5F40 = 0;
    unk_25C5F48 = 0;
    qword_25C5F38 = 0;
    byte_25C5F4F = v32 + v24;
    if (!v24) {
      goto LABEL_73;
    }
    goto LABEL_69;
  }
  uint64_t v94 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v33 | 7) != 0x17) {
    uint64_t v94 = v33 | 7;
  }
  uint64_t v95 = v94 + 1;
  char v38 = (uint64_t *)operator new(v94 + 1);
  qword_25C5F40 = v32 + v24;
  unk_25C5F48 = v95 | 0x8000000000000000;
  qword_25C5F38 = (uint64_t)v38;
  if (v24)
  {
LABEL_69:
    if (v23 >= 0) {
      BOOL v39 = &qword_25C5C80;
    }
    else {
      BOOL v39 = (uint64_t *)qword_25C5C80;
    }
    memmove(v38, v39, v24);
  }
LABEL_73:
  uint64_t v40 = (char *)v38 + v24;
  if (v32)
  {
    if (v31 >= 0) {
      uint64_t v41 = &qword_25C5D28;
    }
    else {
      uint64_t v41 = (uint64_t *)qword_25C5D28;
    }
    memmove(v40, v41, v32);
  }
  v40[v32] = 0;
  strcpy((char *)&xmmword_25C5F50, "{NewBatteryPercentage}");
  HIBYTE(word_25C5F66) = 22;
  qword_25C5F68 = (uint64_t)operator new(0x20uLL);
  xmmword_25C5F70 = v275;
  strcpy((char *)qword_25C5F68, "{OriginalBatteryPercentage}");
  byte_25C5F97 = 19;
  strcpy((char *)&xmmword_25C5F80, "_Arrival_Percentage");
  int v42 = byte_25C5D27;
  if (byte_25C5D27 >= 0) {
    size_t v43 = byte_25C5D27;
  }
  else {
    size_t v43 = qword_25C5D18;
  }
  unint64_t v44 = v43 + v25;
  if (v43 + v25 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v44 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    p_dst = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v43 + v25;
    if (!v43) {
      goto LABEL_88;
    }
    goto LABEL_84;
  }
  uint64_t v96 = (v44 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v44 | 7) != 0x17) {
    uint64_t v96 = v44 | 7;
  }
  uint64_t v97 = v96 + 1;
  p_dst = (char *)operator new(v96 + 1);
  __dst.__r_.__value_.__l.__size_ = v43 + v25;
  __dst.__r_.__value_.__r.__words[2] = v97 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  if (v43)
  {
LABEL_84:
    if (v42 >= 0) {
      unsigned __int8 v46 = &qword_25C5D10;
    }
    else {
      unsigned __int8 v46 = (uint64_t *)qword_25C5D10;
    }
    memmove(p_dst, v46, v43);
  }
LABEL_88:
  unint64_t v47 = &p_dst[v43];
  if (v25)
  {
    if ((int)v272 >= 0) {
      std::string v48 = &qword_25C4FC0;
    }
    else {
      std::string v48 = (uint64_t *)qword_25C4FC0;
    }
    memmove(v47, v48, v25);
  }
  v47[v25] = 0;
  uint64_t v49 = std::string::append(&__dst, "_Percentage");
  long long v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
  qword_25C5FA8 = v49->__r_.__value_.__r.__words[2];
  xmmword_25C5F98 = v50;
  v49->__r_.__value_.__l.__size_ = 0;
  v49->__r_.__value_.__r.__words[2] = 0;
  v49->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v51 = byte_25C5D27;
  if (byte_25C5D27 >= 0) {
    size_t v52 = byte_25C5D27;
  }
  else {
    size_t v52 = qword_25C5D18;
  }
  int v53 = byte_25C4FD7;
  if (byte_25C4FD7 >= 0) {
    size_t v54 = byte_25C4FD7;
  }
  else {
    size_t v54 = unk_25C4FC8;
  }
  unint64_t v55 = v54 + v52;
  if (v54 + v52 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v55 <= 0x16)
  {
    memset(&v283, 0, sizeof(v283));
    size_t v56 = (char *)&v283;
    *((unsigned char *)&v283.__r_.__value_.__s + 23) = v54 + v52;
    if (!v52) {
      goto LABEL_108;
    }
    goto LABEL_104;
  }
  uint64_t v98 = (v55 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v55 | 7) != 0x17) {
    uint64_t v98 = v55 | 7;
  }
  uint64_t v99 = v98 + 1;
  size_t v56 = (char *)operator new(v98 + 1);
  v283.__r_.__value_.__l.__size_ = v54 + v52;
  v283.__r_.__value_.__r.__words[2] = v99 | 0x8000000000000000;
  v283.__r_.__value_.__r.__words[0] = (std::string::size_type)v56;
  if (v52)
  {
LABEL_104:
    if (v51 >= 0) {
      uint64_t v57 = &qword_25C5D10;
    }
    else {
      uint64_t v57 = (uint64_t *)qword_25C5D10;
    }
    memmove(v56, v57, v52);
  }
LABEL_108:
  int v58 = &v56[v52];
  if (v54)
  {
    if (v53 >= 0) {
      char v59 = &qword_25C4FC0;
    }
    else {
      char v59 = (uint64_t *)qword_25C4FC0;
    }
    memmove(v58, v59, v54);
  }
  v58[v54] = 0;
  if (byte_25C5007 >= 0) {
    int v60 = (const std::string::value_type *)&qword_25C4FF0;
  }
  else {
    int v60 = (const std::string::value_type *)qword_25C4FF0;
  }
  if (byte_25C5007 >= 0) {
    std::string::size_type v61 = byte_25C5007;
  }
  else {
    std::string::size_type v61 = *(void *)&byte_25C4FF8;
  }
  __int16 v62 = std::string::append(&v283, v60, v61);
  long long v63 = *(_OWORD *)&v62->__r_.__value_.__l.__data_;
  __dst.__r_.__value_.__r.__words[2] = v62->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v63;
  v62->__r_.__value_.__l.__size_ = 0;
  v62->__r_.__value_.__r.__words[2] = 0;
  v62->__r_.__value_.__r.__words[0] = 0;
  uint64_t v64 = std::string::append(&__dst, "_Percentage");
  long long v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
  qword_25C5FC0 = v64->__r_.__value_.__r.__words[2];
  xmmword_25C5FB0 = v65;
  v64->__r_.__value_.__l.__size_ = 0;
  v64->__r_.__value_.__r.__words[2] = 0;
  v64->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v283.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_121;
    }
  }
  else if ((SHIBYTE(v283.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_121;
  }
  operator delete(v283.__r_.__value_.__l.__data_);
LABEL_121:
  int v66 = byte_25C5D27;
  if (byte_25C5D27 >= 0) {
    size_t v67 = byte_25C5D27;
  }
  else {
    size_t v67 = qword_25C5D18;
  }
  int v68 = byte_25C4FD7;
  if (byte_25C4FD7 >= 0) {
    size_t v69 = byte_25C4FD7;
  }
  else {
    size_t v69 = unk_25C4FC8;
  }
  unint64_t v70 = v69 + v67;
  if (v69 + v67 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v70 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    int64_t v71 = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v69 + v67;
    if (!v67) {
      goto LABEL_134;
    }
    goto LABEL_130;
  }
  uint64_t v100 = (v70 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v70 | 7) != 0x17) {
    uint64_t v100 = v70 | 7;
  }
  uint64_t v101 = v100 + 1;
  int64_t v71 = (char *)operator new(v100 + 1);
  __dst.__r_.__value_.__l.__size_ = v69 + v67;
  __dst.__r_.__value_.__r.__words[2] = v101 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v71;
  if (v67)
  {
LABEL_130:
    if (v66 >= 0) {
      v72 = &qword_25C5D10;
    }
    else {
      v72 = (uint64_t *)qword_25C5D10;
    }
    memmove(v71, v72, v67);
  }
LABEL_134:
  uint64_t v73 = &v71[v67];
  if (v69)
  {
    if (v68 >= 0) {
      unint64_t v74 = &qword_25C4FC0;
    }
    else {
      unint64_t v74 = (uint64_t *)qword_25C4FC0;
    }
    memmove(v73, v74, v69);
  }
  v73[v69] = 0;
  unint64_t v75 = std::string::append(&__dst, "_Duration");
  long long v76 = *(_OWORD *)&v75->__r_.__value_.__l.__data_;
  qword_25C5FD8 = v75->__r_.__value_.__r.__words[2];
  xmmword_25C5FC8 = v76;
  v75->__r_.__value_.__l.__size_ = 0;
  v75->__r_.__value_.__r.__words[2] = 0;
  v75->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v77 = byte_25C5D27;
  if (byte_25C5D27 >= 0) {
    size_t v78 = byte_25C5D27;
  }
  else {
    size_t v78 = qword_25C5D18;
  }
  int v79 = byte_25C4FD7;
  if (byte_25C4FD7 >= 0) {
    size_t v80 = byte_25C4FD7;
  }
  else {
    size_t v80 = unk_25C4FC8;
  }
  unint64_t v81 = v80 + v78;
  if (v80 + v78 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v81 <= 0x16)
  {
    qword_25C5FE8 = 0;
    unk_25C5FF0 = 0;
    qword_25C5FE0 = 0;
    uint64_t v82 = &qword_25C5FE0;
    byte_25C5FF7 = v80 + v78;
    if (!v78) {
      goto LABEL_154;
    }
    goto LABEL_150;
  }
  uint64_t v102 = (v81 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v81 | 7) != 0x17) {
    uint64_t v102 = v81 | 7;
  }
  uint64_t v103 = v102 + 1;
  uint64_t v82 = (uint64_t *)operator new(v102 + 1);
  qword_25C5FE8 = v80 + v78;
  unk_25C5FF0 = v103 | 0x8000000000000000;
  qword_25C5FE0 = (uint64_t)v82;
  if (v78)
  {
LABEL_150:
    if (v77 >= 0) {
      std::string::size_type v83 = &qword_25C5D10;
    }
    else {
      std::string::size_type v83 = (uint64_t *)qword_25C5D10;
    }
    memmove(v82, v83, v78);
  }
LABEL_154:
  uint64_t v84 = (char *)v82 + v78;
  if (v80)
  {
    if (v79 >= 0) {
      int v85 = &qword_25C4FC0;
    }
    else {
      int v85 = (uint64_t *)qword_25C4FC0;
    }
    memmove(v84, v85, v80);
  }
  v84[v80] = 0;
  int v86 = byte_25C5FF7;
  if (byte_25C5FF7 >= 0) {
    size_t v87 = byte_25C5FF7;
  }
  else {
    size_t v87 = qword_25C5FE8;
  }
  unint64_t v88 = v87 + 5;
  if (v87 + 5 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v88 >= 0x17)
  {
    uint64_t v104 = (v88 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v88 | 7) != 0x17) {
      uint64_t v104 = v88 | 7;
    }
    uint64_t v105 = v104 + 1;
    uint64_t v89 = (uint64_t *)operator new(v104 + 1);
    qword_25C6000 = v87 + 5;
    unk_25C6008 = v105 | 0x8000000000000000;
    qword_25C5FF8 = (uint64_t)v89;
  }
  else
  {
    uint64_t v89 = &qword_25C5FF8;
    qword_25C6000 = 0;
    unk_25C6008 = 0;
    qword_25C5FF8 = 0;
    byte_25C600F = v87 + 5;
    if (!v87) {
      goto LABEL_201;
    }
  }
  if (v86 >= 0) {
    int v106 = &qword_25C5FE0;
  }
  else {
    int v106 = (uint64_t *)qword_25C5FE0;
  }
  memmove(v89, v106, v87);
LABEL_201:
  strcpy((char *)v89 + v87, "_Name");
  int v107 = byte_25C5D27;
  if (byte_25C5D27 >= 0) {
    size_t v108 = byte_25C5D27;
  }
  else {
    size_t v108 = qword_25C5D18;
  }
  int v109 = byte_25C4FD7;
  if (byte_25C4FD7 >= 0) {
    size_t v110 = byte_25C4FD7;
  }
  else {
    size_t v110 = unk_25C4FC8;
  }
  unint64_t v111 = v110 + v108;
  if (v110 + v108 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v111 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    uint64_t v112 = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v110 + v108;
    if (!v108) {
      goto LABEL_214;
    }
    goto LABEL_210;
  }
  uint64_t v122 = (v111 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v111 | 7) != 0x17) {
    uint64_t v122 = v111 | 7;
  }
  uint64_t v123 = v122 + 1;
  uint64_t v112 = (char *)operator new(v122 + 1);
  __dst.__r_.__value_.__l.__size_ = v110 + v108;
  __dst.__r_.__value_.__r.__words[2] = v123 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v112;
  if (v108)
  {
LABEL_210:
    if (v107 >= 0) {
      std::string::size_type v113 = &qword_25C5D10;
    }
    else {
      std::string::size_type v113 = (uint64_t *)qword_25C5D10;
    }
    memmove(v112, v113, v108);
  }
LABEL_214:
  std::string::size_type v114 = &v112[v108];
  if (v110)
  {
    if (v109 >= 0) {
      std::string::size_type v115 = &qword_25C4FC0;
    }
    else {
      std::string::size_type v115 = (uint64_t *)qword_25C4FC0;
    }
    memmove(v114, v115, v110);
  }
  v114[v110] = 0;
  int v116 = std::string::append(&__dst, "_Connector_Type");
  long long v117 = *(_OWORD *)&v116->__r_.__value_.__l.__data_;
  qword_25C6020 = v116->__r_.__value_.__r.__words[2];
  xmmword_25C6010 = v117;
  v116->__r_.__value_.__l.__size_ = 0;
  v116->__r_.__value_.__r.__words[2] = 0;
  v116->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v118 = SHIBYTE(qword_25C6020);
  if (qword_25C6020 >= 0) {
    size_t v119 = HIBYTE(qword_25C6020);
  }
  else {
    size_t v119 = *((void *)&xmmword_25C6010 + 1);
  }
  unint64_t v120 = v119 + 6;
  if (v119 + 6 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v120 >= 0x17)
  {
    uint64_t v124 = (v120 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v120 | 7) != 0x17) {
      uint64_t v124 = v120 | 7;
    }
    uint64_t v125 = v124 + 1;
    int v121 = (uint64_t *)operator new(v124 + 1);
    qword_25C6030 = v119 + 6;
    unk_25C6038 = v125 | 0x8000000000000000;
    qword_25C6028 = (uint64_t)v121;
  }
  else
  {
    int v121 = &qword_25C6028;
    qword_25C6030 = 0;
    unk_25C6038 = 0;
    qword_25C6028 = 0;
    byte_25C603F = v119 + 6;
    if (!v119) {
      goto LABEL_239;
    }
  }
  if (v118 >= 0) {
    v126 = &xmmword_25C6010;
  }
  else {
    v126 = (long long *)xmmword_25C6010;
  }
  memmove(v121, v126, v119);
LABEL_239:
  strcpy((char *)v121 + v119, "_Power");
  int v127 = byte_25C5D27;
  if (byte_25C5D27 >= 0) {
    size_t v128 = byte_25C5D27;
  }
  else {
    size_t v128 = qword_25C5D18;
  }
  int v129 = byte_25C4FD7;
  if (byte_25C4FD7 >= 0) {
    size_t v130 = byte_25C4FD7;
  }
  else {
    size_t v130 = unk_25C4FC8;
  }
  unint64_t v131 = v130 + v128;
  if (v130 + v128 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v131 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    uint64_t v132 = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v130 + v128;
    if (!v128) {
      goto LABEL_252;
    }
    goto LABEL_248;
  }
  uint64_t v161 = (v131 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v131 | 7) != 0x17) {
    uint64_t v161 = v131 | 7;
  }
  uint64_t v162 = v161 + 1;
  uint64_t v132 = (char *)operator new(v161 + 1);
  __dst.__r_.__value_.__l.__size_ = v130 + v128;
  __dst.__r_.__value_.__r.__words[2] = v162 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v132;
  if (v128)
  {
LABEL_248:
    if (v127 >= 0) {
      uint64_t v133 = &qword_25C5D10;
    }
    else {
      uint64_t v133 = (uint64_t *)qword_25C5D10;
    }
    memmove(v132, v133, v128);
  }
LABEL_252:
  int v134 = &v132[v128];
  if (v130)
  {
    if (v129 >= 0) {
      uint64_t v135 = &qword_25C4FC0;
    }
    else {
      uint64_t v135 = (uint64_t *)qword_25C4FC0;
    }
    memmove(v134, v135, v130);
  }
  v134[v130] = 0;
  if (byte_25C579F >= 0) {
    std::string::size_type v136 = (const std::string::value_type *)&xmmword_25C5788;
  }
  else {
    std::string::size_type v136 = (const std::string::value_type *)xmmword_25C5788;
  }
  if (byte_25C579F >= 0) {
    std::string::size_type v137 = byte_25C579F;
  }
  else {
    std::string::size_type v137 = *((void *)&xmmword_25C5788 + 1);
  }
  long long v138 = std::string::append(&__dst, v136, v137);
  long long v139 = *(_OWORD *)&v138->__r_.__value_.__l.__data_;
  qword_25C6050 = v138->__r_.__value_.__r.__words[2];
  xmmword_25C6040 = v139;
  v138->__r_.__value_.__l.__size_ = 0;
  v138->__r_.__value_.__r.__words[2] = 0;
  v138->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v140 = byte_25C5D27;
  if (byte_25C5D27 >= 0) {
    size_t v141 = byte_25C5D27;
  }
  else {
    size_t v141 = qword_25C5D18;
  }
  int v142 = byte_25C4FD7;
  if (byte_25C4FD7 >= 0) {
    size_t v143 = byte_25C4FD7;
  }
  else {
    size_t v143 = unk_25C4FC8;
  }
  unint64_t v144 = v143 + v141;
  if (v143 + v141 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v144 <= 0x16)
  {
    memset(&v283, 0, sizeof(v283));
    v145 = (char *)&v283;
    *((unsigned char *)&v283.__r_.__value_.__s + 23) = v143 + v141;
    if (!v141) {
      goto LABEL_278;
    }
    goto LABEL_274;
  }
  uint64_t v163 = (v144 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v144 | 7) != 0x17) {
    uint64_t v163 = v144 | 7;
  }
  uint64_t v164 = v163 + 1;
  v145 = (char *)operator new(v163 + 1);
  v283.__r_.__value_.__l.__size_ = v143 + v141;
  v283.__r_.__value_.__r.__words[2] = v164 | 0x8000000000000000;
  v283.__r_.__value_.__r.__words[0] = (std::string::size_type)v145;
  if (v141)
  {
LABEL_274:
    if (v140 >= 0) {
      char v146 = &qword_25C5D10;
    }
    else {
      char v146 = (uint64_t *)qword_25C5D10;
    }
    memmove(v145, v146, v141);
  }
LABEL_278:
  uint64_t v147 = &v145[v141];
  if (v143)
  {
    if (v142 >= 0) {
      std::string::size_type v148 = &qword_25C4FC0;
    }
    else {
      std::string::size_type v148 = (uint64_t *)qword_25C4FC0;
    }
    memmove(v147, v148, v143);
  }
  v147[v143] = 0;
  if (byte_25C5007 >= 0) {
    std::string v149 = (const std::string::value_type *)&qword_25C4FF0;
  }
  else {
    std::string v149 = (const std::string::value_type *)qword_25C4FF0;
  }
  if (byte_25C5007 >= 0) {
    std::string::size_type v150 = byte_25C5007;
  }
  else {
    std::string::size_type v150 = *(void *)&byte_25C4FF8;
  }
  unint64_t v151 = std::string::append(&v283, v149, v150);
  long long v152 = *(_OWORD *)&v151->__r_.__value_.__l.__data_;
  __dst.__r_.__value_.__r.__words[2] = v151->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v152;
  v151->__r_.__value_.__l.__size_ = 0;
  v151->__r_.__value_.__r.__words[2] = 0;
  v151->__r_.__value_.__r.__words[0] = 0;
  if (byte_25C579F >= 0) {
    uint64_t v153 = (const std::string::value_type *)&xmmword_25C5788;
  }
  else {
    uint64_t v153 = (const std::string::value_type *)xmmword_25C5788;
  }
  if (byte_25C579F >= 0) {
    std::string::size_type v154 = byte_25C579F;
  }
  else {
    std::string::size_type v154 = *((void *)&xmmword_25C5788 + 1);
  }
  char v155 = std::string::append(&__dst, v153, v154);
  long long v156 = *(_OWORD *)&v155->__r_.__value_.__l.__data_;
  qword_25C6068 = v155->__r_.__value_.__r.__words[2];
  xmmword_25C6058 = v156;
  v155->__r_.__value_.__l.__size_ = 0;
  v155->__r_.__value_.__r.__words[2] = 0;
  v155->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v283.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_297;
    }
  }
  else if ((SHIBYTE(v283.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_297;
  }
  operator delete(v283.__r_.__value_.__l.__data_);
LABEL_297:
  byte_25C6087 = 16;
  strcpy((char *)&xmmword_25C6070, "Use_NACS_Adapter");
  byte_25C609F = 16;
  strcpy(byte_25C6088, "Start_Route_Sign");
  qword_25C60A0 = (uint64_t)operator new(0x20uLL);
  unk_25C60A8 = v278;
  strcpy((char *)qword_25C60A0, "Start_Route_Spoken_Primary");
  int v157 = byte_25C4737;
  if (byte_25C4737 >= 0) {
    size_t v158 = byte_25C4737;
  }
  else {
    size_t v158 = qword_25C4728;
  }
  unint64_t v159 = v158 + 27;
  if (v158 + 27 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v159 <= 0x16)
  {
    std::string::size_type v160 = &qword_25C60B8;
    qword_25C60C0 = 0;
    unk_25C60C8 = 0;
    qword_25C60B8 = 0;
    byte_25C60CF = v158 + 27;
LABEL_314:
    if (v157 >= 0) {
      uint64_t v167 = &qword_25C4720;
    }
    else {
      uint64_t v167 = (uint64_t *)qword_25C4720;
    }
    memmove(v160, v167, v158);
    goto LABEL_318;
  }
  uint64_t v165 = (v159 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v159 | 7) != 0x17) {
    uint64_t v165 = v159 | 7;
  }
  uint64_t v166 = v165 + 1;
  std::string::size_type v160 = (uint64_t *)operator new(v165 + 1);
  qword_25C60C0 = v158 + 27;
  unk_25C60C8 = v166 | 0x8000000000000000;
  qword_25C60B8 = (uint64_t)v160;
  if (v158) {
    goto LABEL_314;
  }
LABEL_318:
  strcpy((char *)v160 + v158, "Turn_Around_To_Route_Spoken");
  strcpy(&byte_25C60E7, "\t_Two_Lanes");
  strcpy((char *)&qword_25C60D0, "_One_Lane");
  strcpy(&byte_25C60FF, "\n_Three_Lanes");
  byte_25C6117 = 12;
  byte_25C612F = 11;
  strcpy((char *)&qword_25C6118, "_Four_Lanes");
  byte_25C6147 = 11;
  strcpy((char *)&qword_25C6130, "_Five_Lanes");
  strcpy(&byte_25C615F, "\n_Seven_Lanes");
  strcpy((char *)&qword_25C6148, "_Six_Lanes");
  byte_25C6177 = 12;
  byte_25C618F = 12;
  strcpy((char *)&qword_25C6178, "_Eight_Lanes");
  byte_25C61A7 = 12;
  strcpy((char *)&qword_25C6190, "_Second_Lane");
  byte_25C61BF = 11;
  strcpy((char *)&qword_25C61A8, "_Third_Lane");
  byte_25C61D7 = 19;
  long long v272 = *(_OWORD *)"_Second_Third_Lanes";
  strcpy((char *)&xmmword_25C61C0, "_Second_Third_Lanes");
  byte_25C61EF = 4;
  strcpy((char *)&dword_25C61D8, "Left");
  byte_25C6207 = 5;
  byte_25C61F4 = 116;
  dword_25C61F0 = 1751607634;
  byte_25C61F5 = 0;
  byte_25C621F = 6;
  strcpy((char *)&dword_25C6208, "Middle");
  BYTE1(qword_25C6230) = 0;
  WORD1(qword_25C6230) = 0;
  HIDWORD(qword_25C6230) = 0x10000000;
  strcpy((char *)dword_25C6220, "Left_Second_Lane");
  BYTE1(qword_25C6248) = 0;
  WORD1(qword_25C6248) = 0;
  HIDWORD(qword_25C6248) = 285212672;
  strcpy((char *)&dword_25C6238, "Right_Second_Lan");
  qword_25C6260 = 0xF00000000000000;
  strcpy((char *)&dword_25C6250, "Left_Third_Lane");
  qword_25C6278 = 0x1000000000000000;
  byte_25C626C = 116;
  dword_25C6268 = 1751607634;
  dword_25C6274 = 1701732684;
  unk_25C626D = *(void *)"_Third_Lane";
  int v168 = (char *)operator new(0x19uLL);
  qword_25C6280 = (uint64_t)v168;
  unk_25C6288 = v282;
  *(_DWORD *)int v168 = 1952867660;
  strcpy(v168 + 19, "anes");
  *(_OWORD *)(v168 + 4) = v272;
  uint64_t v169 = (char *)operator new(0x20uLL);
  qword_25C6298 = (uint64_t)v169;
  xmmword_25C62A0 = v281;
  *(_DWORD *)uint64_t v169 = 1751607634;
  v169[4] = 116;
  strcpy(v169 + 20, "anes");
  *(_OWORD *)(v169 + 5) = v272;
  byte_25C62C7 = 5;
  strcpy((char *)&dword_25C62B0, "_Stay");
  byte_25C62DF = 13;
  strcpy((char *)&qword_25C62C8, "Continue_Sign");
  byte_25C62F7 = 8;
  strcpy((char *)&qword_25C62E0, "Continue");
  int v170 = byte_25C57B7;
  if (byte_25C57B7 >= 0) {
    size_t v171 = byte_25C57B7;
  }
  else {
    size_t v171 = qword_25C57A8;
  }
  unint64_t v172 = v171 + 8;
  if (v171 + 8 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v172 >= 0x17)
  {
    uint64_t v174 = (v172 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v172 | 7) != 0x17) {
      uint64_t v174 = v172 | 7;
    }
    uint64_t v175 = v174 + 1;
    std::string::size_type v176 = operator new(v174 + 1);
    qword_25C6300 = v171 + 8;
    qword_25C6308 = v175 | 0x8000000000000000;
    qword_25C62F8 = (uint64_t)v176;
    *std::string::size_type v176 = 0x65756E69746E6F43;
    uint64_t v173 = v176 + 1;
  }
  else
  {
    qword_25C6308 = 0;
    HIBYTE(qword_25C6308) = v171 + 8;
    qword_25C62F8 = 0x65756E69746E6F43;
    qword_25C6300 = 0;
    uint64_t v173 = &qword_25C6300;
    if (!v171) {
      goto LABEL_332;
    }
  }
  if (v170 >= 0) {
    size_t v177 = &qword_25C57A0;
  }
  else {
    size_t v177 = (uint64_t *)qword_25C57A0;
  }
  memmove(v173, v177, v171);
LABEL_332:
  *((unsigned char *)v173 + v171) = 0;
  int v178 = byte_25C5817;
  if (byte_25C5817 >= 0) {
    size_t v179 = byte_25C5817;
  }
  else {
    size_t v179 = *((void *)&xmmword_25C5800 + 1);
  }
  unint64_t v180 = v179 + 8;
  if (v179 + 8 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v180 >= 0x17)
  {
    uint64_t v182 = (v180 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v180 | 7) != 0x17) {
      uint64_t v182 = v180 | 7;
    }
    uint64_t v183 = v182 + 1;
    char v184 = operator new(v182 + 1);
    qword_25C6318 = v179 + 8;
    qword_25C6320 = v183 | 0x8000000000000000;
    qword_25C6310 = (uint64_t)v184;
    void *v184 = qword_25C62E0;
    v181 = v184 + 1;
  }
  else
  {
    qword_25C6320 = 0;
    HIBYTE(qword_25C6320) = v179 + 8;
    qword_25C6310 = qword_25C62E0;
    qword_25C6318 = 0;
    v181 = &qword_25C6318;
    if (!v179) {
      goto LABEL_346;
    }
  }
  if (v178 >= 0) {
    uint64_t v185 = &xmmword_25C5800;
  }
  else {
    uint64_t v185 = (long long *)xmmword_25C5800;
  }
  memmove(v181, v185, v179);
LABEL_346:
  *((unsigned char *)v181 + v179) = 0;
  *((unsigned char *)&__dst.__r_.__value_.__s + 23) = 1;
  LOWORD(__dst.__r_.__value_.__l.__data_) = 83;
  v285[23] = 2;
  strcpy(v285, "SW");
  v287[7] = 1;
  LOWORD(v286[0]) = 87;
  HIBYTE(v288) = 2;
  strcpy(&v287[8], "NW");
  HIBYTE(v290) = 1;
  LOWORD(v289[0]) = 78;
  HIBYTE(v292) = 2;
  strcpy((char *)&v291, "NE");
  HIBYTE(v294) = 1;
  LOWORD(v293) = 69;
  HIBYTE(v296) = 2;
  strcpy((char *)&__p, "SE");
  sub_4BDC0C(&qword_25C6328, (uint64_t)&__dst, 8uLL);
  if (SHIBYTE(v296) < 0)
  {
    operator delete((void *)__p);
    if ((SHIBYTE(v294) & 0x80000000) == 0)
    {
LABEL_348:
      if ((SHIBYTE(v292) & 0x80000000) == 0) {
        goto LABEL_349;
      }
      goto LABEL_383;
    }
  }
  else if ((SHIBYTE(v294) & 0x80000000) == 0)
  {
    goto LABEL_348;
  }
  operator delete((void *)v293);
  if ((SHIBYTE(v292) & 0x80000000) == 0)
  {
LABEL_349:
    if ((SHIBYTE(v290) & 0x80000000) == 0) {
      goto LABEL_350;
    }
    goto LABEL_384;
  }
LABEL_383:
  operator delete((void *)v291);
  if ((SHIBYTE(v290) & 0x80000000) == 0)
  {
LABEL_350:
    if ((SHIBYTE(v288) & 0x80000000) == 0) {
      goto LABEL_351;
    }
    goto LABEL_385;
  }
LABEL_384:
  operator delete(v289[0]);
  if ((SHIBYTE(v288) & 0x80000000) == 0)
  {
LABEL_351:
    if ((v287[7] & 0x80000000) == 0) {
      goto LABEL_352;
    }
    goto LABEL_386;
  }
LABEL_385:
  operator delete(*(void **)&v287[8]);
  if ((v287[7] & 0x80000000) == 0)
  {
LABEL_352:
    if ((v285[23] & 0x80000000) == 0) {
      goto LABEL_353;
    }
LABEL_387:
    operator delete(*(void **)v285);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_354;
    }
    goto LABEL_388;
  }
LABEL_386:
  operator delete(v286[0]);
  if ((v285[23] & 0x80000000) != 0) {
    goto LABEL_387;
  }
LABEL_353:
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_354;
  }
LABEL_388:
  operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_354:
  byte_25C6357 = 13;
  strcpy((char *)&qword_25C6340, "{instruction}");
  byte_25C636F = 20;
  strcpy(byte_25C6358, "{primaryInstruction}");
  strcpy((char *)&xmmword_25C6370, "{secondaryInstruction}");
  HIBYTE(word_25C6386) = 22;
  qword_25C6388 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25C6390 = v280;
  strcpy((char *)qword_25C6388, "{andSecondaryInstruction}");
  qword_25C63A0 = (uint64_t)operator new(0x20uLL);
  unk_25C63A8 = v281;
  strcpy((char *)qword_25C63A0, "{toSecondaryInstruction}");
  byte_25C63CF = 21;
  strcpy(byte_25C63B8, "{continueInstruction}");
  qword_25C63D0 = (uint64_t)operator new(0x20uLL);
  unk_25C63D8 = v278;
  strcpy((char *)qword_25C63D0, "{thenSecondaryInstruction}");
  byte_25C63FF = 14;
  strcpy((char *)&qword_25C63E8, "{instruction1}");
  byte_25C6417 = 14;
  strcpy((char *)&qword_25C6400, "{instruction2}");
  strcpy(&byte_25C642F, "\n{nextDistance}");
  strcpy((char *)&qword_25C6418, "{distance}");
  byte_25C6447 = 14;
  byte_25C645F = 16;
  strcpy(byte_25C6448, "{valid_distance}");
  strcpy(&byte_25C6477, "\n{valid_distance}");
  strcpy((char *)&qword_25C6460, "{distance}");
  byte_25C648F = 16;
  byte_25C64A7 = 15;
  strcpy((char *)&qword_25C6490, "{ClimbDistance}");
  byte_25C64BF = 17;
  strcpy(byte_25C64A8, "{DescentDistance}");
  byte_25C64D7 = 13;
  strcpy((char *)&qword_25C64C0, "{nonBrkSpace}");
  byte_25C64EF = 9;
  strcpy((char *)&qword_25C64D8, "{newLine}");
  byte_25C6507 = 6;
  word_25C64F4 = -24382;
  dword_25C64F0 = -1211981630;
  byte_25C64F6 = 0;
  byte_25C651F = 2;
  word_25C6508 = -24382;
  byte_25C650A = 0;
  byte_25C6537 = 1;
  word_25C6520 = 10;
  byte_25C654F = 1;
  word_25C6538 = 32;
  byte_25C6567 = 2;
  strcpy((char *)&word_25C6550, "\n\n");
  strcpy(&byte_25C657F, "\t{TowardShield1}");
  strcpy((char *)&qword_25C6568, "{Shield1}");
  byte_25C6597 = 15;
  strcpy(&byte_25C65AF, "\t{TowardShield2}");
  strcpy((char *)&qword_25C6598, "{Shield2}");
  byte_25C65C7 = 15;
  byte_25C65DF = 12;
  strcpy((char *)&qword_25C65C8, "{Direction1}");
  byte_25C65F7 = 12;
  strcpy((char *)&qword_25C65E0, "{Direction2}");
  byte_25C660F = 18;
  strcpy((char *)&xmmword_25C65F8, "{TowardDirection1}");
  byte_25C6627 = 18;
  strcpy((char *)&xmmword_25C6610, "{TowardDirection2}");
  byte_25C663F = 7;
  strcpy((char *)&dword_25C6628, "{Icon1}");
  byte_25C6657 = 7;
  strcpy((char *)&dword_25C6640, "{Icon2}");
  byte_25C6658[23] = 14;
  strcpy(byte_25C6658, "{Intersection}");
  byte_25C6687 = 6;
  strcpy((char *)&xmmword_25C6670, "{Road}");
  byte_25C669F = 7;
  strcpy((char *)&dword_25C6688, "{Road1}");
  byte_25C66B7 = 7;
  strcpy((char *)&xmmword_25C66A0, "{Road2}");
  strcpy(&byte_25C66CF, "\n{Freeway}");
  strcpy((char *)&qword_25C66B8, "{Elevator}");
  strcpy(&byte_25C66E7, "\t{Ferry}");
  byte_25C66FF = 7;
  byte_25C6717 = 13;
  strcpy((char *)&xmmword_25C6700, "{ShuttleName}");
  byte_25C672F = 11;
  strcpy((char *)&qword_25C6718, "{Signpost1}");
  byte_25C6747 = 11;
  strcpy((char *)&xmmword_25C6730, "{Signpost2}");
  byte_25C675F = 12;
  strcpy((char *)&xmmword_25C6748, "{ExitNumber}");
  strcpy(&byte_25C6777, "\t{Name}");
  strcpy((char *)&xmmword_25C6760, "{Address}");
  byte_25C678F = 6;
  byte_25C67A7 = 11;
  strcpy((char *)&xmmword_25C6790, "{PlaceName}");
  byte_25C67BF = 14;
  strcpy((char *)&xmmword_25C67A8, "{ElevatorName}");
  byte_25C67D7 = 15;
  strcpy((char *)&xmmword_25C67C0, "{EscalatorName}");
  byte_25C67EF = 12;
  strcpy((char *)&xmmword_25C67D8, "{StairsName}");
  strcpy(&byte_25C6807, "\n{BridgeName}");
  strcpy((char *)&xmmword_25C67F0, "{RampName}");
  byte_25C681F = 12;
  byte_25C6837 = 12;
  strcpy((char *)&xmmword_25C6820, "{TunnelName}");
  byte_25C684F = 13;
  strcpy((char *)&xmmword_25C6838, "{CustomLabel}");
  std::string __dst = *(std::string *)byte_25C6658;
  *(_OWORD *)v285 = xmmword_25C6670;
  *(void *)&v285[16] = unk_25C6680;
  *(_OWORD *)v286 = *(_OWORD *)&dword_25C6688;
  *(void *)v287 = unk_25C6698;
  *(_OWORD *)&v287[8] = xmmword_25C66A0;
  uint64_t v288 = unk_25C66B0;
  *(_OWORD *)v289 = *(_OWORD *)&qword_25C66B8;
  uint64_t v290 = unk_25C66C8;
  uint64_t v292 = unk_25C66E0;
  long long v291 = xmmword_25C66D0;
  long long v293 = *(_OWORD *)&dword_25C66E8;
  uint64_t v294 = unk_25C66F8;
  uint64_t v296 = unk_25C6710;
  long long __p = xmmword_25C6700;
  long long v297 = *(_OWORD *)&qword_25C6718;
  uint64_t v298 = unk_25C6728;
  uint64_t v300 = unk_25C6740;
  long long v299 = xmmword_25C6730;
  long long v301 = xmmword_25C6748;
  long long v303 = xmmword_25C6760;
  uint64_t v302 = unk_25C6758;
  uint64_t v304 = unk_25C6770;
  long long v305 = xmmword_25C6778;
  long long v307 = xmmword_25C6790;
  uint64_t v306 = unk_25C6788;
  uint64_t v308 = unk_25C67A0;
  long long v309 = xmmword_25C67A8;
  long long v311 = xmmword_25C67C0;
  uint64_t v310 = unk_25C67B8;
  uint64_t v312 = unk_25C67D0;
  long long v313 = xmmword_25C67D8;
  long long v315 = xmmword_25C67F0;
  uint64_t v314 = unk_25C67E8;
  uint64_t v316 = unk_25C6800;
  long long v317 = xmmword_25C6808;
  long long v319 = xmmword_25C6820;
  uint64_t v318 = unk_25C6818;
  uint64_t v320 = unk_25C6830;
  uint64_t v322 = unk_25C6848;
  long long v321 = xmmword_25C6838;
  sub_4BDC0C(qword_25C6850, (uint64_t)&__dst, 0x15uLL);
  if (SHIBYTE(v322) < 0)
  {
    operator delete((void *)v321);
    if ((SHIBYTE(v320) & 0x80000000) == 0)
    {
LABEL_356:
      if ((SHIBYTE(v318) & 0x80000000) == 0) {
        goto LABEL_357;
      }
      goto LABEL_391;
    }
  }
  else if ((SHIBYTE(v320) & 0x80000000) == 0)
  {
    goto LABEL_356;
  }
  operator delete((void *)v319);
  if ((SHIBYTE(v318) & 0x80000000) == 0)
  {
LABEL_357:
    if ((SHIBYTE(v316) & 0x80000000) == 0) {
      goto LABEL_358;
    }
    goto LABEL_392;
  }
LABEL_391:
  operator delete((void *)v317);
  if ((SHIBYTE(v316) & 0x80000000) == 0)
  {
LABEL_358:
    if ((SHIBYTE(v314) & 0x80000000) == 0) {
      goto LABEL_359;
    }
    goto LABEL_393;
  }
LABEL_392:
  operator delete((void *)v315);
  if ((SHIBYTE(v314) & 0x80000000) == 0)
  {
LABEL_359:
    if ((SHIBYTE(v312) & 0x80000000) == 0) {
      goto LABEL_360;
    }
    goto LABEL_394;
  }
LABEL_393:
  operator delete((void *)v313);
  if ((SHIBYTE(v312) & 0x80000000) == 0)
  {
LABEL_360:
    if ((SHIBYTE(v310) & 0x80000000) == 0) {
      goto LABEL_361;
    }
    goto LABEL_395;
  }
LABEL_394:
  operator delete((void *)v311);
  if ((SHIBYTE(v310) & 0x80000000) == 0)
  {
LABEL_361:
    if ((SHIBYTE(v308) & 0x80000000) == 0) {
      goto LABEL_362;
    }
    goto LABEL_396;
  }
LABEL_395:
  operator delete((void *)v309);
  if ((SHIBYTE(v308) & 0x80000000) == 0)
  {
LABEL_362:
    if ((SHIBYTE(v306) & 0x80000000) == 0) {
      goto LABEL_363;
    }
    goto LABEL_397;
  }
LABEL_396:
  operator delete((void *)v307);
  if ((SHIBYTE(v306) & 0x80000000) == 0)
  {
LABEL_363:
    if ((SHIBYTE(v304) & 0x80000000) == 0) {
      goto LABEL_364;
    }
    goto LABEL_398;
  }
LABEL_397:
  operator delete((void *)v305);
  if ((SHIBYTE(v304) & 0x80000000) == 0)
  {
LABEL_364:
    if ((SHIBYTE(v302) & 0x80000000) == 0) {
      goto LABEL_365;
    }
    goto LABEL_399;
  }
LABEL_398:
  operator delete((void *)v303);
  if ((SHIBYTE(v302) & 0x80000000) == 0)
  {
LABEL_365:
    if ((SHIBYTE(v300) & 0x80000000) == 0) {
      goto LABEL_366;
    }
    goto LABEL_400;
  }
LABEL_399:
  operator delete((void *)v301);
  if ((SHIBYTE(v300) & 0x80000000) == 0)
  {
LABEL_366:
    if ((SHIBYTE(v298) & 0x80000000) == 0) {
      goto LABEL_367;
    }
    goto LABEL_401;
  }
LABEL_400:
  operator delete((void *)v299);
  if ((SHIBYTE(v298) & 0x80000000) == 0)
  {
LABEL_367:
    if ((SHIBYTE(v296) & 0x80000000) == 0) {
      goto LABEL_368;
    }
    goto LABEL_402;
  }
LABEL_401:
  operator delete((void *)v297);
  if ((SHIBYTE(v296) & 0x80000000) == 0)
  {
LABEL_368:
    if ((SHIBYTE(v294) & 0x80000000) == 0) {
      goto LABEL_369;
    }
    goto LABEL_403;
  }
LABEL_402:
  operator delete((void *)__p);
  if ((SHIBYTE(v294) & 0x80000000) == 0)
  {
LABEL_369:
    if ((SHIBYTE(v292) & 0x80000000) == 0) {
      goto LABEL_370;
    }
    goto LABEL_404;
  }
LABEL_403:
  operator delete((void *)v293);
  if ((SHIBYTE(v292) & 0x80000000) == 0)
  {
LABEL_370:
    if ((SHIBYTE(v290) & 0x80000000) == 0) {
      goto LABEL_371;
    }
    goto LABEL_405;
  }
LABEL_404:
  operator delete((void *)v291);
  if ((SHIBYTE(v290) & 0x80000000) == 0)
  {
LABEL_371:
    if ((SHIBYTE(v288) & 0x80000000) == 0) {
      goto LABEL_372;
    }
    goto LABEL_406;
  }
LABEL_405:
  operator delete(v289[0]);
  if ((SHIBYTE(v288) & 0x80000000) == 0)
  {
LABEL_372:
    if ((v287[7] & 0x80000000) == 0) {
      goto LABEL_373;
    }
    goto LABEL_407;
  }
LABEL_406:
  operator delete(*(void **)&v287[8]);
  if ((v287[7] & 0x80000000) == 0)
  {
LABEL_373:
    if ((v285[23] & 0x80000000) == 0) {
      goto LABEL_374;
    }
LABEL_408:
    operator delete(*(void **)v285);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_375;
    }
    goto LABEL_409;
  }
LABEL_407:
  operator delete(v286[0]);
  if ((v285[23] & 0x80000000) != 0) {
    goto LABEL_408;
  }
LABEL_374:
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_375;
  }
LABEL_409:
  operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_375:
  qword_25C6868 = (uint64_t)operator new(0x19uLL);
  unk_25C6870 = v282;
  strcpy((char *)qword_25C6868, "From_User_Location_List");
  byte_25C6897 = 20;
  strcpy(byte_25C6880, "Origin_Waypoint_List");
  qword_25C6898 = (uint64_t)operator new(0x20uLL);
  unk_25C68A0 = v278;
  strcpy((char *)qword_25C6898, "Intermediate_Waypoint_List");
  unk_25C68B0 = operator new(0x20uLL);
  unk_25C68B8 = v280;
  strcpy(unk_25C68B0, "Destination_Waypoint_List");
  byte_25C68DF = 15;
  strcpy(byte_25C68C8, "{toDestination}");
  byte_25C68F7 = 13;
  strcpy((char *)&xmmword_25C68E0, "{Destination}");
  byte_25C690F = 7;
  strcpy(byte_25C68F8, "To_Home");
  byte_25C6927 = 14;
  strcpy(byte_25C6910, "To_ContactHome");
  byte_25C693F = 7;
  strcpy(byte_25C6928, "To_Work");
  byte_25C6957 = 14;
  strcpy(byte_25C6940, "To_ContactWork");
  strcpy(&byte_25C696F, "\nTo_Business");
  strcpy(byte_25C6958, "To_Address");
  byte_25C6987 = 11;
  byte_25C699F = 16;
  strcpy(byte_25C6988, "To_Other_Contact");
  strcpy(&byte_25C69B7, "\tTo_ContactSchool");
  strcpy(byte_25C69A0, "To_School");
  byte_25C69CF = 16;
  byte_25C69E7 = 17;
  strcpy(algn_25C69D0, "To_PersonLocation");
  qword_25C69E8 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25C69F0 = v279;
  strcpy((char *)qword_25C69E8, "To_ContactCustomLabelAddress");
  byte_25C6A17 = 7;
  strcpy((char *)&dword_25C6A00, "At_Home");
  byte_25C6A2F = 14;
  strcpy((char *)&qword_25C6A18, "At_ContactHome");
  byte_25C6A47 = 7;
  strcpy((char *)&dword_25C6A30, "At_Work");
  byte_25C6A5F = 14;
  strcpy((char *)&qword_25C6A48, "At_ContactWork");
  strcpy(&byte_25C6A77, "\nAt_Business");
  strcpy((char *)&qword_25C6A60, "At_Address");
  byte_25C6A8F = 11;
  byte_25C6AA7 = 16;
  strcpy(algn_25C6A90, "At_Other_Contact");
  byte_25C6ABF = 4;
  strcpy((char *)&dword_25C6AA8, "Home");
  byte_25C6AD7 = 11;
  strcpy((char *)&qword_25C6AC0 + 7, "Home");
  qword_25C6AC0 = *(void *)&v266[16];
  byte_25C6AEF = 4;
  strcpy((char *)&dword_25C6AD8, "Work");
  byte_25C6B07 = 11;
  strcpy((char *)&qword_25C6AF0 + 7, "Work");
  qword_25C6AF0 = *(void *)v266;
  byte_25C6B1F = 7;
  strcpy((char *)&dword_25C6B08, "Address");
  byte_25C6B37 = 8;
  strcpy((char *)&qword_25C6B20, "Business");
  byte_25C6B4F = 13;
  qword_25C6B38 = *(void *)&v266[48];
  *(uint64_t *)((char *)&qword_25C6B38 + 5) = *(void *)&v266[32];
  byte_25C6B45 = 0;
  byte_25C6B67 = 6;
  strcpy((char *)&dword_25C6B50, "School");
  byte_25C6B7F = 13;
  strcpy((char *)&qword_25C6B68, "ContactSchool");
  byte_25C6B97 = 14;
  strcpy((char *)&qword_25C6B80, "PersonLocation");
  qword_25C6B98 = (uint64_t)operator new(0x20uLL);
  xmmword_25C6BA0 = v280;
  strcpy((char *)qword_25C6B98, "ContactCustomLabelAddress");
  if (byte_25C68F7 < 0)
  {
    sub_4200(&xmmword_25C6BB0, (void *)xmmword_25C68E0, *((unint64_t *)&xmmword_25C68E0 + 1));
  }
  else
  {
    xmmword_25C6BB0 = xmmword_25C68E0;
    qword_25C6BC0 = unk_25C68F0;
  }
  byte_25C6BDF = 16;
  strcpy((char *)&xmmword_25C6BC8, "{PrevExitNumber}");
  byte_25C6BF7 = 10;
  strcpy((char *)&qword_25C6BE0, "{PrevRoad}");
  qword_25C6BF8 = (uint64_t)operator new(0x20uLL);
  unk_25C6C00 = v281;
  strcpy((char *)qword_25C6BF8, "{RouteTotalExpectedTime}");
  byte_25C6C27 = 18;
  strcpy(byte_25C6C10, "{ChargePercentage}");
  qword_25C6C28 = (uint64_t)operator new(0x20uLL);
  unk_25C6C30 = v275;
  strcpy((char *)qword_25C6C28, "{RemainingChargePercentage}");
  byte_25C6C57 = 16;
  strcpy(byte_25C6C40, "{ChargeDuration}");
  byte_25C6C6F = 15;
  strcpy((char *)&qword_25C6C58, "{ConnectorType}");
  byte_25C6C87 = 19;
  strcpy((char *)&xmmword_25C6C70, "{ChargeStationName}");
  byte_25C6C9F = 7;
  strcpy((char *)&dword_25C6C88, "{Power}");
  byte_25C6CB7 = 13;
  strcpy((char *)&qword_25C6CA0, "{VehicleName}");
  byte_25C6CCF = 18;
  strcpy((char *)&xmmword_25C6CB8, "{AreaIncidentName}");
  byte_25C6CE7 = 14;
  strcpy((char *)&qword_25C6CD0, "{AreaIncident}");
  byte_25C6CFF = 16;
  strcpy((char *)&xmmword_25C6CE8, "{AffectedRegion}");
  byte_25C6D17 = 21;
  strcpy(byte_25C6D00, "{AreaIncidentWeblink}");
  byte_25C6D2F = 20;
  strcpy((char *)&xmmword_25C6D18, "{AreaIncidentAgency}");
  byte_25C6D47 = 11;
  strcpy((char *)&qword_25C6D30, "{IssueTime}");
  byte_25C6D5F = 12;
  strcpy((char *)&qword_25C6D48, "{UpdateTime}");
  byte_25C6D77 = 11;
  strcpy((char *)&qword_25C6D60, "{IssueDate}");
  byte_25C6D8F = 12;
  strcpy((char *)&qword_25C6D78, "{UpdateDate}");
  qword_25C6D90 = (uint64_t)operator new(0x20uLL);
  unk_25C6D98 = v281;
  strcpy((char *)qword_25C6D90, "{AreaIncidentDataSource}");
  byte_25C6DBF = 13;
  strcpy((char *)&qword_25C6DA8, "{AreaHectare}");
  byte_25C6DD7 = 10;
  strcpy((char *)&qword_25C6DC0, "{AreaAcre}");
  qword_25C6DD8 = (uint64_t)operator new(0x20uLL);
  unk_25C6DE0 = v277;
  strcpy((char *)qword_25C6DD8, "{WildfirePercentageContained}");
  qword_25C6DF0 = (uint64_t)operator new(0x28uLL);
  unk_25C6DF8 = v270[2];
  strcpy((char *)qword_25C6DF0, "{WildfireExpectedContainmentDate}");
  qword_25C6E08 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25C6E10 = v279;
  strcpy((char *)qword_25C6E08, "{ServerRecommendedRouteName}");
  qword_25C6E20 = (uint64_t)operator new(0x20uLL);
  unk_25C6E28 = v279;
  strcpy((char *)qword_25C6E20, "{ServerNonRecommendedRoute1}");
  qword_25C6E38 = (uint64_t)operator new(0x20uLL);
  unk_25C6E40 = v279;
  strcpy((char *)qword_25C6E38, "{ServerNonRecommendedRoute2}");
  byte_25C6E67 = 12;
  strcpy((char *)&qword_25C6E50, "{ClientDest}");
  byte_25C6E7F = 6;
  strcpy((char *)&dword_25C6E68, "{Name}");
  qword_25C6E80 = (uint64_t)operator new(0x20uLL);
  unk_25C6E88 = v270[1];
  strcpy((char *)qword_25C6E80, "ProactiveAlert_FasterRouteTitle");
  qword_25C6E98 = (uint64_t)operator new(0x20uLL);
  unk_25C6EA0 = v278;
  strcpy((char *)qword_25C6E98, "ProactiveAlert_RoadClosure");
  qword_25C6EB0 = (uint64_t)operator new(0x30uLL);
  unk_25C6EB8 = v273;
  strcpy((char *)qword_25C6EB0, "ProactiveAlert_UnusuallyHeavyTrafficOnTwo");
  qword_25C6EC8 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_25C6ED0 = v276;
  strcpy((char *)qword_25C6EC8, "ProactiveAlert_FasterRouteTitle_to_Home");
  qword_25C6EE0 = (uint64_t)operator new(0x28uLL);
  unk_25C6EE8 = v276;
  strcpy((char *)qword_25C6EE0, "ProactiveAlert_FasterRouteTitle_to_Work");
  qword_25C6EF8 = (uint64_t)operator new(0x28uLL);
  unk_25C6F00 = v276;
  strcpy((char *)qword_25C6EF8, "ProactiveAlert_FasterRouteTitle_to_Name");
  qword_25C6F10 = (uint64_t)operator new(0x30uLL);
  unk_25C6F18 = xmmword_20B93B0;
  strcpy((char *)qword_25C6F10, "ProactiveAlert_FasterRouteTitle_to_StreetName");
  byte_25C6F3F = 17;
  strcpy(byte_25C6F28, "Proactive_Driving");
  strcpy(&byte_25C6F57, "\n{RouteName}");
  strcpy((char *)&qword_25C6F40, "_RouteName");
  byte_25C6F6F = 11;
  qword_25C6F70 = (uint64_t)operator new(0x28uLL);
  unk_25C6F78 = v270[2];
  strcpy((char *)qword_25C6F70, "Pass_Traffic_Light_Spoken_Primary");
  qword_25C6F88 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25C6F90 = v277;
  strcpy((char *)qword_25C6F88, "Pass_Stop_Sign_Spoken_Primary");
  *(void *)&algn_25C6F90[16] = operator new(0x20uLL);
  *(_OWORD *)&algn_25C6F90[24] = v270[0];
  strcpy(*(char **)&algn_25C6F90[16], "Pass_Roundabout_Spoken_Primary");
  strcpy(&byte_25C6FCF, "\nBannerBody");
  strcpy(&algn_25C6F90[40], "BannerHead");
  strcpy(&byte_25C6FE7, "\nBannerDescription");
  byte_25C6FFF = 17;
  strcpy(&byte_25C7017, "\n_Incident");
  strcpy((char *)&qword_25C7000, "VoiceAlert");
  strcpy(&byte_25C702F, "\t_Area_Incident");
  byte_25C7047 = 14;
  byte_25C705F = 15;
  strcpy((char *)&qword_25C7048, "_Area_Incidents");
  strcpy(&byte_25C7077, "\t_Crash");
  strcpy((char *)&qword_25C7060, "_Accident");
  byte_25C708F = 6;
  byte_25C70A7 = 16;
  strcpy((char *)&xmmword_25C7090, "_Congestion_Zone");
  strcpy(&byte_25C70BF, "\n_Environmental_Zone");
  strcpy((char *)&qword_25C70A8, "_Toll_Zone");
  byte_25C70D7 = 19;
  BYTE1(qword_25C70E8) = 116;
  WORD1(qword_25C70E8) = 0;
  HIDWORD(qword_25C70E8) = 301989888;
  strcpy(byte_25C70F0, "_Construction");
  strcpy((char *)&qword_25C70D8, "_Incident_Accide");
  byte_25C7107 = 13;
  byte_25C711F = 7;
  strcpy((char *)&dword_25C7108, "_Hazard");
  byte_25C7137 = 12;
  strcpy((char *)&qword_25C7120, "_LaneClosure");
  byte_25C714F = 12;
  strcpy((char *)&qword_25C7138, "_LaneTrailer");
  qmemcpy(&byte_25C7167, "\t_LaneTrailer", 13);
  strcpy((char *)&qword_25C7150, "_Shoulder");
  qword_25C7178 = 0x1500007200000000;
  *(void *)algn_25C7174 = *(void *)"_Shoulder";
  strcpy((char *)&xmmword_25C7180, "_Causing_Traffic_Delay");
  HIBYTE(word_25C7196) = 22;
  byte_25C71AF = 6;
  strcpy((char *)&dword_25C7198, "_Timed");
  byte_25C71C7 = 12;
  strcpy((char *)&qword_25C71B0, "_HasDistance");
  byte_25C71DF = 8;
  strcpy((char *)&qword_25C71C8, "_Closure");
  strcpy(&byte_25C71F7, "\n_BadRoad");
  strcpy((char *)&qword_25C71E0, "_NoReroute");
  byte_25C720F = 8;
  byte_25C7227 = 12;
  strcpy((char *)&qword_25C7210, "_TollTrailer");
  byte_25C723F = 12;
  strcpy((char *)&qword_25C7228, "_BestTrailer");
  byte_25C7257 = 8;
  strcpy((char *)&qword_25C7240, "_Trailer");
  byte_25C726F = 18;
  strcpy((char *)&xmmword_25C7258, "_Secondary_Trailer");
  byte_25C7287 = 8;
  strcpy((char *)&qword_25C7270, "_Savings");
  byte_25C729F = 8;
  strcpy((char *)&qword_25C7288, "_AltRoad");
  byte_25C72B7 = 6;
  strcpy((char *)&dword_25C72A0, "_Named");
  byte_25C72CF = 6;
  strcpy((char *)&dword_25C72B8, "_NAMED");
  byte_25C72E7 = 22;
  strcpy((char *)&xmmword_25C72D0, "_Named_Suggested_Route");
  qword_25C7300 = 0x1000000000000000;
  xmmword_25C72F0 = xmmword_20E81D0;
  byte_25C731F = 11;
  strcpy((char *)&qword_25C7308, "_Speed_Trap");
  byte_25C7337 = 4;
  strcpy((char *)&dword_25C7320, "_UGI");
  byte_25C734F = 12;
  strcpy((char *)&qword_25C7338, "_Safer_Route");
  qword_25C7350 = (uint64_t)operator new(0x20uLL);
  unk_25C7358 = v270[1];
  strcpy((char *)qword_25C7350, "BlockedRouteByBlockingIncident_");
  qword_25C7368 = (uint64_t)operator new(0x28uLL);
  long long v272 = xmmword_20B9280;
  *(_OWORD *)algn_25C7370 = xmmword_20B9280;
  strcpy((char *)qword_25C7368, "BlockedRouteByManeuverRestriction_");
  qword_25C7380 = (uint64_t)operator new(0x20uLL);
  unk_25C7388 = v270[0];
  strcpy((char *)qword_25C7380, "BlockedRouteByTimeRestriction_");
  qword_25C7398 = (uint64_t)operator new(0x28uLL);
  unk_25C73A0 = xmmword_20B8FD0;
  strcpy((char *)qword_25C7398, "SuggestRouteToAvoidBlockingIncident_");
  qword_25C73B0 = (uint64_t)operator new(0x30uLL);
  unk_25C73B8 = xmmword_20B9380;
  strcpy((char *)qword_25C73B0, "SuggestRouteToAvoidBlockingManeuverRestriction_");
  qword_25C73C8 = (uint64_t)operator new(0x30uLL);
  *(_OWORD *)algn_25C73D0 = xmmword_20B93E0;
  strcpy((char *)qword_25C73C8, "SuggestRouteToAvoidBlockingTimeRestriction_");
  byte_25C73F7 = 1;
  word_25C73E0 = 95;
  strcpy((char *)&xmmword_25C73F8, "IncidentsCausingDelay_");
  HIBYTE(word_25C740E) = 22;
  qword_25C7410 = (uint64_t)operator new(0x19uLL);
  unk_25C7418 = v282;
  strcpy((char *)qword_25C7410, "NonVotableRoadIncident_");
  byte_25C743F = 20;
  strcpy(byte_25C7428, "VotableRoadIncident_");
  byte_25C7457 = 13;
  strcpy((char *)&qword_25C7440, "AreaIncident_");
  byte_25C746F = 15;
  strcpy((char *)&qword_25C7458, "CongestionZone_");
  qword_25C7470 = (uint64_t)operator new(0x20uLL);
  unk_25C7478 = v281;
  strcpy((char *)qword_25C7470, "EVModifiedChargingStops_");
  byte_25C749F = 13;
  strcpy((char *)&qword_25C7488, "EVDisconnect_");
  byte_25C74B7 = 12;
  strcpy((char *)&qword_25C74A0, "EVReconnect_");
  qword_25C74B8 = (uint64_t)operator new(0x20uLL);
  unk_25C74C0 = v279;
  strcpy((char *)qword_25C74B8, "EVOfflineToOnlineTransition_");
  byte_25C74E7 = 13;
  strcpy((char *)&qword_25C74D0, "EVOfflineSAR_");
  byte_25C74FF = 21;
  strcpy((char *)&xmmword_25C74E8, "EVTowingNotSupported_");
  byte_25C7517 = 18;
  strcpy(byte_25C7500, "EVInfeasibleRoute_");
  qword_25C7518 = (uint64_t)operator new(0x38uLL);
  unk_25C7520 = xmmword_20B8DF0;
  strcpy((char *)qword_25C7518, "SuggestRouteAddingStopsBeforeEVInfeasibleOriginalStop_");
  qword_25C7530 = (uint64_t)operator new(0x40uLL);
  unk_25C7538 = xmmword_20B98C0;
  strcpy((char *)qword_25C7530, "LCSuggestRouteAddingStopsBeforeEVInfeasibleOriginalStop_");
  qword_25C7548 = (uint64_t)operator new(0x30uLL);
  *(_OWORD *)algn_25C7550 = v274;
  strcpy((char *)qword_25C7548, "SuggestRouteAddingStopsForEVInfeasibleRoute_");
  qmemcpy(v270, "InfeasibleRoute_ngStopsForEVInfeSuggestRouteAddi", sizeof(v270));
  qword_25C7560 = (uint64_t)operator new(0x30uLL);
  *(_WORD *)&v266[50] = 0;
  *(_DWORD *)&v266[52] = 0;
  *(void *)&v266[56] = 0x8000000000000030;
  unk_25C7568 = xmmword_20B9A80;
  strcpy((char *)qword_25C7560, "LCSuggestRouteAddingStopsForEVInfeasibleRoute_");
  strcpy(v266, "InfeasibleRoute_dingStopsForEVInLCSuggestRouteAd.");
  qword_25C7578 = (uint64_t)operator new(0x30uLL);
  unk_25C7580 = v273;
  strcpy((char *)qword_25C7578, "SuggestRouteAddingStopsToIncreaseDestSoc_");
  uint64_t v186 = operator new(0x30uLL);
  qword_25C7590 = (uint64_t)v186;
  unk_25C7598 = v274;
  *uint64_t v186 = v270[2];
  v186[1] = v270[1];
  *(_OWORD *)((char *)v186 + 28) = v270[0];
  *((unsigned char *)v186 + 44) = 0;
  qword_25C75A8 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_25C75B0 = v272;
  strcpy((char *)qword_25C75A8, "SuggestDetourWithHigherArrivalSOC_");
  uint64_t v187 = operator new(0x30uLL);
  qword_25C75C0 = (uint64_t)v187;
  unk_25C75C8 = *(_OWORD *)&v266[48];
  *uint64_t v187 = *(_OWORD *)&v266[32];
  v187[1] = *(_OWORD *)&v266[16];
  *(_OWORD *)((char *)v187 + 30) = *(_OWORD *)v266;
  *((unsigned char *)v187 + 46) = 0;
  qword_25C75D8 = (uint64_t)operator new(0x28uLL);
  unk_25C75E0 = v276;
  strcpy((char *)qword_25C75D8, "SuggestRouteToDestForEVInfeasibleRoute_");
  qword_25C75F0 = (uint64_t)operator new(0x28uLL);
  unk_25C75F8 = v269;
  strcpy((char *)qword_25C75F0, "SuggestRouteRemovingStopsFromEVRoute_");
  qword_25C7608 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25C7610 = v281;
  strcpy((char *)qword_25C7608, "OfflineToOnlineNewRoute_");
  qword_25C7620 = (uint64_t)operator new(0x40uLL);
  unk_25C7628 = xmmword_20B98C0;
  strcpy((char *)qword_25C7620, "SuggestDetourWithHigherArrivalSOCForInfeasibleUserRoute_");
  byte_25C764F = 20;
  strcpy((char *)&xmmword_25C7638, "LPR_OFFLINE_REROUTE_");
  byte_25C7667 = 16;
  strcpy(algn_25C7650, "LPR_OFFLINE_SAR_");
  byte_25C767F = 20;
  strcpy((char *)&xmmword_25C7668, "LPR_OFFLINE_REROUTE_");
  byte_25C7697 = 16;
  strcpy(byte_25C7680, "LPR_OFFLINE_SAR_");
  byte_25C76AF = 19;
  strcpy((char *)&xmmword_25C7698, "SuggestFasterRoute_");
  qword_25C76B0 = (char *)operator new(0x20uLL);
  xmmword_25C76B8 = v280;
  strcpy(qword_25C76B0, "AreaIncidentSaferReroute_");
  byte_25C76DF = 12;
  strcpy((char *)&qword_25C76C8, "_Remove_Stop");
  byte_25C76F7 = 13;
  strcpy((char *)&qword_25C76E0, "_Remove_Stops");
  strcpy(&byte_25C770F, "\t_Add_Stops");
  strcpy((char *)&qword_25C76F8, "_Add_Stop");
  strcpy(&byte_25C7727, "\n_Change_Route");
  byte_25C773F = 13;
  byte_25C7757 = 15;
  strcpy((char *)&qword_25C7740, "_Different_Stop");
  byte_25C776F = 16;
  strcpy((char *)&xmmword_25C7758, "_Different_Stops");
  byte_25C7787 = 15;
  strcpy((char *)&qword_25C7770, "_EV_Remove_Stop");
  byte_25C779F = 16;
  strcpy((char *)&xmmword_25C7788, "_EV_Remove_Stops");
  byte_25C77B7 = 12;
  strcpy((char *)&qword_25C77A0, "_EV_Add_Stop");
  byte_25C77CF = 13;
  strcpy((char *)&qword_25C77B8, "_EV_Add_Stops");
  byte_25C77E7 = 15;
  strcpy((char *)&qword_25C77D0, "_EV_Low_Battery");
  byte_25C77FF = 14;
  strcpy((char *)&qword_25C77E8, "_EV_Infeasible");
  byte_25C7817 = 15;
  strcpy((char *)&qword_25C7800, "_EV_Last_Chance");
  qword_25C7818 = (uint64_t)operator new(0x20uLL);
  unk_25C7820 = v281;
  strcpy((char *)qword_25C7818, "_EV_Low_Battery_Add_Stop");
  uint64_t v188 = qword_25C7718;
  qword_25C7830 = (uint64_t)operator new(0x20uLL);
  unk_25C7838 = v280;
  strcpy((char *)qword_25C7830, "_EV_Low_Battery_Add_Stops");
  qword_25C7848 = (uint64_t)operator new(0x19uLL);
  *(_OWORD *)algn_25C7850 = v282;
  strcpy((char *)qword_25C7848, "_EV_Infeasible_Add_Stop");
  int v189 = byte_25C7727;
  if (byte_25C7727 >= 0) {
    size_t v190 = byte_25C7727;
  }
  else {
    size_t v190 = v188;
  }
  unint64_t v191 = v190 + 14;
  if (v190 + 14 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v191 >= 0x17)
  {
    uint64_t v194 = (v191 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v191 | 7) != 0x17) {
      uint64_t v194 = v191 | 7;
    }
    uint64_t v195 = v194 + 1;
    unint64_t v196 = (char *)operator new(v194 + 1);
    qword_25C7868 = v190 + 14;
    unk_25C7870 = v195 | 0x8000000000000000;
    qword_25C7860 = (uint64_t)v196;
    qmemcpy(v196, "_EV_Infeasible", 14);
    int v192 = v196 + 14;
  }
  else
  {
    BYTE1(qword_25C7868) = 0;
    WORD1(qword_25C7868) = 0;
    HIDWORD(qword_25C7868) = 0;
    unk_25C7870 = 0;
    byte_25C7877 = v190 + 14;
    strcpy((char *)&qword_25C7860, "_EV_Infe");
    int v192 = (char *)&qword_25C7868 + 6;
    if (!v190)
    {
      char v193 = 1;
      goto LABEL_425;
    }
  }
  if (v189 >= 0) {
    uint64_t v197 = (uint64_t)&qword_25C7710;
  }
  else {
    uint64_t v197 = 0x6F74535F6464415FLL;
  }
  memmove(v192, (const void *)v197, v190);
  char v193 = 0;
LABEL_425:
  v192[v190] = 0;
  uint64_t v198 = (char *)operator new(0x20uLL);
  qword_25C7878 = (uint64_t)v198;
  unk_25C7880 = v281;
  *(void *)uint64_t v198 = qword_25C7800;
  *(void *)(v198 + 7) = *(uint64_t *)((char *)&qword_25C7800 + 7);
  *(void *)(v198 + 15) = qword_25C76F8;
  v198[23] = word_25C7700;
  v198[24] = 0;
  unint64_t v199 = v190 + 15;
  if (v190 + 15 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v199 > 0x16)
  {
    uint64_t v201 = (v199 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v199 | 7) != 0x17) {
      uint64_t v201 = v199 | 7;
    }
    uint64_t v202 = v201 + 1;
    v200 = (uint64_t *)operator new(v201 + 1);
    qword_25C7898 = v190 + 15;
    unk_25C78A0 = v202 | 0x8000000000000000;
    qword_25C7890 = (uint64_t)v200;
  }
  else
  {
    v200 = &qword_25C7890;
    qword_25C7898 = 0;
    unk_25C78A0 = 0;
    qword_25C7890 = 0;
    byte_25C78A7 = v190 + 15;
  }
  uint64_t *v200 = qword_25C7800;
  *(uint64_t *)((char *)v200 + 7) = *(uint64_t *)((char *)&qword_25C7800 + 7);
  unint64_t v203 = (char *)v200 + 15;
  if ((v193 & 1) == 0)
  {
    if (v189 >= 0) {
      long long v204 = &qword_25C7710;
    }
    else {
      long long v204 = (uint64_t *)qword_25C7710;
    }
    memmove((char *)v200 + 15, v204, v190);
  }
  v203[v190] = 0;
  byte_25C78BF = 17;
  strcpy((char *)&xmmword_25C78A8, "_EV_Forced_Detour");
  qword_25C78C0 = (uint64_t)operator new(0x20uLL);
  unk_25C78C8 = v280;
  strcpy((char *)qword_25C78C0, "_EV_Higher_Arrival_Charge");
  qword_25C78D8 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_25C78E0 = xmmword_20B8FD0;
  strcpy((char *)qword_25C78D8, "_EV_Infeasible_Higher_Arrival_Charge");
  byte_25C7907 = 16;
  strcpy(&algn_25C78E0[16], "_EV_Out_Of_Range");
  qword_25C7908 = (uint64_t)operator new(0x20uLL);
  unk_25C7910 = v275;
  strcpy((char *)qword_25C7908, "_EV_Last_Chance_Take_Detour");
  strcpy(byte_25C7920, "_EV_Forced_Modify_Stop");
  HIBYTE(word_25C7936) = 22;
  qword_25C7938 = (uint64_t)operator new(0x19uLL);
  unk_25C7940 = v282;
  strcpy((char *)qword_25C7938, "_EV_Forced_Modify_Stops");
  byte_25C7967 = 19;
  strcpy(byte_25C7950, "_EV_Forced_Add_Stop");
  byte_25C797F = 20;
  strcpy((char *)&xmmword_25C7968, "_EV_Forced_Add_Stops");
  byte_25C7997 = 21;
  strcpy(byte_25C7980, "_EV_Battery_Info_Lost");
  qword_25C7998 = (uint64_t)operator new(0x20uLL);
  unk_25C79A0 = v280;
  strcpy((char *)qword_25C7998, "_EV_Battery_Info_Restored");
  qword_25C79B0 = (uint64_t)operator new(0x20uLL);
  unk_25C79B8 = v281;
  strcpy((char *)qword_25C79B0, "_EV_Towing_Not_Supported");
  qword_25C79C8 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_25C79D0 = v271;
  strcpy((char *)qword_25C79C8, "_EV_Offline_to_Online_Transition");
  byte_25C79F7 = 15;
  strcpy((char *)&qword_25C79E0, "_EV_Offline_SAR");
  qword_25C79F8 = (uint64_t)operator new(0x20uLL);
  unk_25C7A00 = v279;
  strcpy((char *)qword_25C79F8, "_Offline_to_Online_New_Route");
  byte_25C7A27 = 12;
  strcpy((char *)&qword_25C7A10, "BannerButton");
  byte_25C7A3F = 8;
  strcpy((char *)&qword_25C7A28, "_Dismiss");
  byte_25C7A57 = 3;
  word_25C7A40 = 20319;
  byte_25C7A42 = 75;
  byte_25C7A43 = 0;
  byte_25C7A6F = 11;
  strcpy((char *)&qword_25C7A58, "_Still_Here");
  byte_25C7A87 = 8;
  strcpy((char *)&qword_25C7A70, "_Cleared");
  qmemcpy(&byte_25C7A9F, "\nBannerButton", 13);
  strcpy((char *)&qword_25C7A88, "_No_Thanks");
  uint64_t v205 = qword_25C7A18;
  qword_25C7AB0 = 0x1400000000000000;
  *(void *)algn_25C7AAC = 0x7373696D7369445FLL;
  qword_25C7AC8 = 0xF00000000000000;
  qword_25C7AC0 = 0x4B4F5F6E6F7474;
  int v206 = byte_25C77B7;
  if (byte_25C77B7 >= 0) {
    size_t v207 = byte_25C77B7;
  }
  else {
    size_t v207 = qword_25C77A8;
  }
  unint64_t v208 = v207 + 12;
  qword_25C7AB8 = *(void *)"BannerButton";
  if (v207 + 12 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v208 >= 0x17)
  {
    uint64_t v210 = (v208 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v208 | 7) != 0x17) {
      uint64_t v210 = v208 | 7;
    }
    uint64_t v211 = v210 + 1;
    uint64_t v212 = (char *)operator new(v210 + 1);
    qword_25C7AD8 = v207 + 12;
    unk_25C7AE0 = v211 | 0x8000000000000000;
    qword_25C7AD0 = (uint64_t)v212;
    *((_DWORD *)v212 + 2) = 1852798068;
    *(void *)uint64_t v212 = *(void *)"BannerButton";
    uint64_t v209 = v212 + 12;
  }
  else
  {
    BYTE5(qword_25C7AD8) = 0;
    HIWORD(qword_25C7AD8) = 0;
    unk_25C7AE0 = 0;
    byte_25C7AE7 = v207 + 12;
    strcpy((char *)&qword_25C7AD0, "BannerButton");
    uint64_t v209 = (char *)&qword_25C7AD8 + 4;
    if (!v207) {
      goto LABEL_450;
    }
  }
  if (v206 >= 0) {
    std::string v213 = &qword_25C77A0;
  }
  else {
    std::string v213 = (uint64_t *)qword_25C77A0;
  }
  memmove(v209, v213, v207);
LABEL_450:
  v209[v207] = 0;
  int v214 = byte_25C77CF;
  if (byte_25C77CF >= 0) {
    size_t v215 = byte_25C77CF;
  }
  else {
    size_t v215 = unk_25C77C0;
  }
  unint64_t v216 = v215 + 12;
  if (v215 + 12 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v216 >= 0x17)
  {
    uint64_t v218 = (v216 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v216 | 7) != 0x17) {
      uint64_t v218 = v216 | 7;
    }
    uint64_t v219 = v218 + 1;
    int v220 = (char *)operator new(v218 + 1);
    qword_25C7AF0 = v215 + 12;
    unk_25C7AF8 = v219 | 0x8000000000000000;
    qword_25C7AE8 = (uint64_t)v220;
    *(void *)int v220 = qword_25C7A10;
    *((_DWORD *)v220 + 2) = qword_25C7A18;
    std::string::size_type v217 = v220 + 12;
  }
  else
  {
    qword_25C7AF0 = 0;
    unk_25C7AF8 = 0;
    byte_25C7AFF = v215 + 12;
    LODWORD(qword_25C7AF0) = qword_25C7A18;
    qword_25C7AE8 = qword_25C7A10;
    std::string::size_type v217 = (char *)&qword_25C7AF0 + 4;
    if (!v215) {
      goto LABEL_464;
    }
  }
  if (v214 >= 0) {
    int v221 = &qword_25C77B8;
  }
  else {
    int v221 = (uint64_t *)qword_25C77B8;
  }
  memmove(v217, v221, v215);
LABEL_464:
  v217[v215] = 0;
  int v222 = byte_25C7787;
  if (byte_25C7787 >= 0) {
    size_t v223 = byte_25C7787;
  }
  else {
    size_t v223 = unk_25C7778;
  }
  unint64_t v224 = v223 + 12;
  if (v223 + 12 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v224 >= 0x17)
  {
    uint64_t v226 = (v224 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v224 | 7) != 0x17) {
      uint64_t v226 = v224 | 7;
    }
    uint64_t v227 = v226 + 1;
    v228 = (char *)operator new(v226 + 1);
    qword_25C7B08 = v223 + 12;
    unk_25C7B10 = v227 | 0x8000000000000000;
    qword_25C7B00 = (uint64_t)v228;
    *(void *)v228 = qword_25C7A10;
    *((_DWORD *)v228 + 2) = qword_25C7A18;
    unint64_t v225 = v228 + 12;
  }
  else
  {
    qword_25C7B08 = 0;
    unk_25C7B10 = 0;
    byte_25C7B17 = v223 + 12;
    LODWORD(qword_25C7B08) = qword_25C7A18;
    qword_25C7B00 = qword_25C7A10;
    unint64_t v225 = (char *)&qword_25C7B08 + 4;
    if (!v223) {
      goto LABEL_478;
    }
  }
  if (v222 >= 0) {
    v229 = &qword_25C7770;
  }
  else {
    v229 = (uint64_t *)qword_25C7770;
  }
  memmove(v225, v229, v223);
LABEL_478:
  v225[v223] = 0;
  int v230 = byte_25C7A27;
  if (byte_25C7A27 >= 0) {
    size_t v231 = byte_25C7A27;
  }
  else {
    size_t v231 = v205;
  }
  int v232 = byte_25C779F;
  if (byte_25C779F >= 0) {
    size_t v233 = byte_25C779F;
  }
  else {
    size_t v233 = *((void *)&xmmword_25C7788 + 1);
  }
  unint64_t v234 = v233 + v231;
  if (v233 + v231 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v234 <= 0x16)
  {
    uint64_t v235 = &qword_25C7B18;
    qword_25C7B20 = 0;
    unk_25C7B28 = 0;
    qword_25C7B18 = 0;
    byte_25C7B2F = v233 + v231;
    if (!v231) {
      goto LABEL_491;
    }
    goto LABEL_487;
  }
  uint64_t v242 = (v234 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v234 | 7) != 0x17) {
    uint64_t v242 = v234 | 7;
  }
  uint64_t v243 = v242 + 1;
  uint64_t v235 = (uint64_t *)operator new(v242 + 1);
  qword_25C7B20 = v233 + v231;
  unk_25C7B28 = v243 | 0x8000000000000000;
  qword_25C7B18 = (uint64_t)v235;
  if (v231)
  {
LABEL_487:
    if (v230 >= 0) {
      uint64_t v236 = &qword_25C7A10;
    }
    else {
      uint64_t v236 = (uint64_t *)qword_25C7A10;
    }
    memmove(v235, v236, v231);
  }
LABEL_491:
  uint64_t v237 = (char *)v235 + v231;
  if (v233)
  {
    if (v232 >= 0) {
      uint64_t v238 = &xmmword_25C7788;
    }
    else {
      uint64_t v238 = (long long *)xmmword_25C7788;
    }
    memmove(v237, v238, v233);
  }
  v237[v233] = 0;
  unint64_t v239 = v231 + 11;
  if (v231 + 11 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v239 >= 0x17)
  {
    uint64_t v244 = (v239 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v239 | 7) != 0x17) {
      uint64_t v244 = v239 | 7;
    }
    uint64_t v245 = v244 + 1;
    uint64_t v240 = (uint64_t *)operator new(v244 + 1);
    qword_25C7B38 = v231 + 11;
    unk_25C7B40 = v245 | 0x8000000000000000;
    qword_25C7B30 = (uint64_t)v240;
  }
  else
  {
    uint64_t v240 = &qword_25C7B30;
    qword_25C7B38 = 0;
    unk_25C7B40 = 0;
    qword_25C7B30 = 0;
    byte_25C7B47 = v231 + 11;
    if (!v231)
    {
      *(_DWORD *)((char *)&qword_25C7B30 + 7) = *(_DWORD *)((char *)&qword_25C7A58 + 7);
      qword_25C7B30 = qword_25C7A58;
      BYTE3(qword_25C7B38) = 0;
      LOBYTE(v241) = 8;
      goto LABEL_512;
    }
  }
  if (v230 >= 0) {
    v246 = &qword_25C7A10;
  }
  else {
    v246 = (uint64_t *)qword_25C7A10;
  }
  memmove(v240, v246, v231);
  v247 = (char *)v240 + v231;
  int v248 = *(_DWORD *)((char *)&qword_25C7A58 + 7);
  *(void *)v247 = qword_25C7A58;
  *(_DWORD *)(v247 + 7) = v248;
  v247[11] = 0;
  unint64_t v241 = v231 + 8;
  if (v231 + 8 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v241 <= 0x16)
  {
LABEL_512:
    v249 = &qword_25C7B48;
    qword_25C7B50 = 0;
    unk_25C7B58 = 0;
    qword_25C7B48 = 0;
    byte_25C7B5F = v241;
    if (!v231) {
      goto LABEL_517;
    }
    goto LABEL_513;
  }
  uint64_t v264 = (v241 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v241 | 7) != 0x17) {
    uint64_t v264 = v241 | 7;
  }
  uint64_t v265 = v264 + 1;
  v249 = (uint64_t *)operator new(v264 + 1);
  qword_25C7B50 = v231 + 8;
  unk_25C7B58 = v265 | 0x8000000000000000;
  qword_25C7B48 = (uint64_t)v249;
  if (v231)
  {
LABEL_513:
    if (v230 >= 0) {
      long long v250 = &qword_25C7A10;
    }
    else {
      long long v250 = (uint64_t *)qword_25C7A10;
    }
    memmove(v249, v250, v231);
  }
LABEL_517:
  v251 = (char *)v249 + v231;
  *(void *)v251 = qword_25C7A70;
  v251[8] = 0;
  int v252 = byte_25C7A9F;
  if (byte_25C7A9F >= 0) {
    size_t v253 = byte_25C7A9F;
  }
  else {
    size_t v253 = qword_25C7A90;
  }
  unint64_t v254 = v253 + v231;
  if (v253 + v231 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v254 <= 0x16)
  {
    std::string::size_type v255 = &qword_25C7B60;
    qword_25C7B68 = 0;
    unk_25C7B70 = 0;
    qword_25C7B60 = 0;
    byte_25C7B77 = v253 + v231;
    if (!v231) {
      goto LABEL_527;
    }
    goto LABEL_523;
  }
  uint64_t v262 = (v254 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v254 | 7) != 0x17) {
    uint64_t v262 = v254 | 7;
  }
  uint64_t v263 = v262 + 1;
  std::string::size_type v255 = (uint64_t *)operator new(v262 + 1);
  qword_25C7B68 = v253 + v231;
  unk_25C7B70 = v263 | 0x8000000000000000;
  qword_25C7B60 = (uint64_t)v255;
  if (v231)
  {
LABEL_523:
    if (v230 >= 0) {
      v256 = &qword_25C7A10;
    }
    else {
      v256 = (uint64_t *)qword_25C7A10;
    }
    memmove(v255, v256, v231);
  }
LABEL_527:
  uint64_t v257 = (char *)v255 + v231;
  if (v253)
  {
    if (v252 >= 0) {
      int64_t v258 = &qword_25C7A88;
    }
    else {
      int64_t v258 = (uint64_t *)qword_25C7A88;
    }
    memmove(v257, v258, v253);
  }
  v257[v253] = 0;
  strcpy(&byte_25C7B8F, "\n{newroute}");
  strcpy((char *)&qword_25C7B78, "{roadname}");
  strcpy(&byte_25C7BA7, "\n{count}");
  byte_25C7BBF = 7;
  strcpy(&byte_25C7BD7, "\n{dur}");
  strcpy((char *)&qword_25C7BC0, "{duration}");
  byte_25C7BEF = 5;
  qword_25C7BF0 = (uint64_t)operator new(0x20uLL);
  unk_25C7BF8 = v278;
  strcpy((char *)qword_25C7BF0, "{PleaseProceedWithCaution}");
  byte_25C7C1F = 15;
  strcpy((char *)&qword_25C7C08, "{UserRouteName}");
  byte_25C7C37 = 20;
  strcpy((char *)&xmmword_25C7C20, "{SuggestedRouteName}");
  byte_25C7C4F = 18;
  strcpy(byte_25C7C38, "Speed_Camera_Ahead");
  qword_25C7C50 = (uint64_t)operator new(0x20uLL);
  unk_25C7C58 = v277;
  strcpy((char *)qword_25C7C50, "Red_Light_Camera_Ahead_Spoken");
  qword_25C7C68 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25C7C70 = v277;
  strcpy((char *)qword_25C7C68, "Stop_Sign_Camera_Ahead_Spoken");
  qword_25C7C80 = (uint64_t)operator new(0x28uLL);
  unk_25C7C88 = v272;
  strcpy((char *)qword_25C7C80, "Speed_Camera_Ahead_Multiple_Spoken");
  qword_25C7C98 = (uint64_t)operator new(0x28uLL);
  unk_25C7CA0 = v267;
  strcpy((char *)qword_25C7C98, "Red_Light_Camera_Ahead_Multiple_Spoken");
  qword_25C7CB0 = (uint64_t)operator new(0x20uLL);
  unk_25C7CB8 = v279;
  strcpy((char *)qword_25C7CB0, "Camera_Ahead_Multiple_Spoken");
  qword_25C7CC8 = (uint64_t)operator new(0x30uLL);
  unk_25C7CD0 = v268;
  strcpy((char *)qword_25C7CC8, "Red_Light_Camera_Speed_Camera_Ahead_Spoken");
  qword_25C7CE0 = (char *)operator new(0x30uLL);
  strcpy(qword_25C7CE0, "Stop_Sign_Camera_Speed_Camera_Ahead_Spoken");
  byte_25C7D0F = 16;
  xmmword_25C7CE8 = v268;
  strcpy(byte_25C7CF8, "_Speed_Limit_Mph");
  byte_25C7D27 = 16;
  strcpy(algn_25C7D10, "_Speed_Limit_Kph");
  byte_25C7D3F = 11;
  strcpy((char *)&qword_25C7D28, "Watch_Speed");
  byte_25C7D57 = 4;
  strcpy((char *)&dword_25C7D40, "_One");
  byte_25C7D6F = 4;
  strcpy((char *)&dword_25C7D58, "_Two");
  byte_25C7D87 = 4;
  strcpy((char *)&dword_25C7D70, "_Few");
  byte_25C7D9F = 5;
  strcpy((char *)&dword_25C7D88, "_Many");
  byte_25C7DB7 = 6;
  strcpy((char *)&dword_25C7DA0, "_Other");
  byte_25C7DCF = 4;
  strcpy((char *)&dword_25C7DB8, "_ONE");
  byte_25C7DE7 = 7;
  strcpy((char *)&dword_25C7DD0, "{Speed}");
  byte_25C7DFF = 8;
  strcpy((char *)&qword_25C7DE8, "Dismount");
  byte_25C7E17 = 4;
  strcpy((char *)&dword_25C7E00, "Walk");
  byte_25C7E2F = 5;
  strcpy((char *)&dword_25C7E18, "Mount");
  byte_25C7E47 = 7;
  strcpy((char *)&dword_25C7E30, "Remount");
  strcpy(&byte_25C7E5F, "\t_Crosswalk");
  strcpy((char *)&qword_25C7E48, "Walk_Road");
  strcpy(&byte_25C7E77, "\n_PLURAL");
  byte_25C7E8F = 7;
  strcpy(&byte_25C7EA7, "\n{description1}");
  strcpy((char *)&qword_25C7E90, "_SECONDARY");
  byte_25C7EBF = 14;
  byte_25C7ED7 = 14;
  strcpy((char *)&qword_25C7EC0, "{description2}");
  byte_25C7EEF = 21;
  strcpy((char *)&xmmword_25C7ED8, "TWO_ROAD_DESCRIPTIONS");
  byte_25C7F07 = 17;
  strcpy((char *)&xmmword_25C7EF0, "{SlopePercentage}");
  byte_25C7F1F = 15;
  strcpy((char *)&qword_25C7F08, "_Protected_Lane");
  strcpy(&byte_25C7F37, "\n_Paved_Path");
  strcpy((char *)&qword_25C7F20, "_Bike_Path");
  byte_25C7F4F = 11;
  byte_25C7F67 = 15;
  strcpy((char *)&qword_25C7F50, "_Dedicated_Lane");
  byte_25C7F7F = 12;
  strcpy((char *)&qword_25C7F68, "_Shared_Path");
  strcpy(&byte_25C7F97, "\n_UnnamedRoad");
  strcpy((char *)&qword_25C7F80, "_Bike_Lane");
  byte_25C7FAF = 12;
  byte_25C7FC7 = 5;
  strcpy((char *)&qword_25C7FB0, "_Path");
  byte_25C7FDF = 6;
  strcpy((char *)&qword_25C7FC8, "_Trail");
  strcpy(&byte_25C7FF7, "\t_Plaza");
  strcpy((char *)&qword_25C7FE0, "_Sidewalk");
  byte_25C800F = 6;
  byte_25C8027 = 15;
  strcpy((char *)&qword_25C8010, "_Moving_Walkway");
  byte_25C803F = 14;
  strcpy((char *)&qword_25C8028, "Two_Stage_Turn");
  byte_25C8057 = 16;
  strcpy((char *)&xmmword_25C8040, "{OptionalPeriod}");
  byte_25C806F = 18;
  strcpy((char *)&xmmword_25C8058, "Advisory_Separator");
  byte_25C8087 = 6;
  strcpy((char *)&dword_25C8070, "Period");
  byte_25C809F = 21;
  strcpy((char *)&xmmword_25C8088, "Advisory_Title_Notice");
  strcpy((char *)&xmmword_25C80A0, "Advisory_Title_Notices");
  HIBYTE(word_25C80B6) = 22;
  byte_25C80CF = 7;
  strcpy((char *)&dword_25C80B8, "_DETAIL");
  byte_25C80E7 = 17;
  strcpy((char *)&xmmword_25C80D0, "_LONG_REGION_LIST");
  byte_25C80FF = 16;
  strcpy((char *)&xmmword_25C80E8, "Advisory_Grouped");
  byte_25C8117 = 11;
  strcpy((char *)&qword_25C8100, "_Advisories");
  qword_25C8118 = (uint64_t)operator new(0x20uLL);
  unk_25C8120 = v275;
  strcpy((char *)qword_25C8118, "Advisory_WILDFIRE_METADATA_");
  byte_25C8147 = 8;
  strcpy((char *)&qword_25C8130, "Advisory");
  byte_25C815F = 13;
  strcpy((char *)&qword_25C8148, "MPR_NUM_STOPS");
  byte_25C8177 = 17;
  strcpy(byte_25C8160, "EV_CHARGE_STATION");
  byte_25C818F = 11;
  strcpy((char *)&qword_25C8178, "_NAMED_CITY");
  byte_25C81A7 = 5;
  strcpy((char *)&dword_25C8190, "_Stop");
  strcpy(&byte_25C81BF, "\n{StopsCount}");
  strcpy((char *)&qword_25C81A8, "{CityName}");
  byte_25C81D7 = 12;
  byte_25C81EF = 11;
  strcpy((char *)&qword_25C81D8, "_With_Other");
  byte_25C8207 = 15;
  strcpy((char *)&qword_25C81F0, "{DepartureTime}");
  qword_25C8208 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_25C8210 = v276;
  strcpy((char *)qword_25C8208, "Ending_Charge_Station_Port_Availability");
  qword_25C8220 = (uint64_t)operator new(0x28uLL);
  unk_25C8228 = v269;
  strcpy((char *)qword_25C8220, "Ending_Charge_Station_No_Availability");
  qword_25C8238 = (uint64_t)operator new(0x28uLL);
  unk_25C8240 = v272;
  strcpy((char *)qword_25C8238, "Ending_Charge_Station_No_Real_Time");
  byte_25C8267 = 16;
  strcpy(byte_25C8250, "{AvailablePorts}");
  byte_25C827F = 12;
  strcpy((char *)&qword_25C8268, "{TotalPorts}");
  byte_25C8297 = 14;
  strcpy((char *)&qword_25C8280, "{ManeuverIcon}");
  qword_25C8298 = (uint64_t)operator new(0x38uLL);
  unk_25C82A0 = xmmword_20B9A60;
  strcpy((char *)qword_25C8298, "Walking_Distance_ManeuverIcon_PrimaryInstruction");
  qword_25C82B0 = (uint64_t)operator new(0x20uLL);
  unk_25C82B8 = v275;
  strcpy((char *)qword_25C82B0, "Walking_Destination_Unnamed");
  qword_25C82C8 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25C82D0 = v277;
  strcpy((char *)qword_25C82C8, "TrafficDelay_Label_Title_Sign");
  qword_25C82E0 = (uint64_t)operator new(0x20uLL);
  unk_25C82E8 = v279;
  strcpy((char *)qword_25C82E0, "Special_Guidance_Instruction");
  byte_25C830F = 2;
  strcpy((char *)&word_25C82F8, "CZ");
  byte_25C8327 = 3;
  dword_25C8310 = 5919811;
  unk_25C833F = 3;
  dword_25C8328 = 6243649;
  byte_25C8357 = 0;
  byte_25C836F = 7;
  strcpy((char *)&dword_25C8358, "TRANSIT");
  byte_25C8387 = 7;
  strcpy((char *)&dword_25C8370, "OFFLINE");
  qword_25C8388 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_25C8390 = v267;
  strcpy((char *)qword_25C8388, "Advisory_Card_French_Climate_Law_Title");
  qword_25C83A0 = (uint64_t)operator new(0x30uLL);
  unk_25C83A8 = xmmword_20B93C0;
  strcpy((char *)qword_25C83A0, "Advisory_Card_French_Climate_Law_Details");
  qword_25C83B8 = (uint64_t)operator new(0x30uLL);
  unk_25C83C0 = v273;
  strcpy((char *)qword_25C83B8, "French_Climate_Law_Metadata_Weblink_Title");
  qword_25C83D0 = (uint64_t)operator new(0x20uLL);
  unk_25C83D8 = v279;
  strcpy((char *)qword_25C83D0, "{ClimateLawLearnMoreWeblink}");
  byte_25C83FF = 3;
  dword_25C83E8 = 4280902;
  qword_25C8400 = (uint64_t)operator new(0x70uLL);
  unk_25C8408 = xmmword_20E81E0;
  strcpy((char *)qword_25C8400, "https://www.vie-publique.fr/loi/278460-loi-22-aout-2021-climat-et-resilience-convention-citoyenne-climat");
  byte_25C842F = 1;
  word_25C8418 = 65;
  byte_25C8447 = 1;
  word_25C8430 = 65;
  *((unsigned char *)&__dst.__r_.__value_.__s + 23) = 7;
  strcpy((char *)&__dst, "UNKNOWN");
  *(_DWORD *)v285 = 0;
  HIBYTE(v286[0]) = 14;
  strcpy(&v285[8], "ROUTES_THROUGH");
  LODWORD(v286[1]) = 1;
  v287[23] = 9;
  strcpy(v287, "ROUTES_TO");
  LODWORD(v288) = 3;
  HIBYTE(v290) = 11;
  strcpy((char *)v289, "ROUTES_FROM");
  LODWORD(v291) = 2;
  xmmword_25C8478 = 0u;
  xmmword_25C8488 = 0u;
  dword_25C8498 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_25C8478, (uint64_t)&__dst, (uint64_t)&__dst);
  sub_3A6EF0((uint64_t)&xmmword_25C8478, (uint64_t)&v285[8], (uint64_t)&v285[8]);
  sub_3A6EF0((uint64_t)&xmmword_25C8478, (uint64_t)v287, (uint64_t)v287);
  sub_3A6EF0((uint64_t)&xmmword_25C8478, (uint64_t)v289, (uint64_t)v289);
  if (SHIBYTE(v290) < 0)
  {
    operator delete(v289[0]);
    if ((v287[23] & 0x80000000) == 0)
    {
LABEL_534:
      if ((SHIBYTE(v286[0]) & 0x80000000) == 0) {
        goto LABEL_535;
      }
LABEL_547:
      operator delete(*(void **)&v285[8]);
      if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_536;
      }
LABEL_548:
      operator delete(__dst.__r_.__value_.__l.__data_);
      goto LABEL_536;
    }
  }
  else if ((v287[23] & 0x80000000) == 0)
  {
    goto LABEL_534;
  }
  operator delete(*(void **)v287);
  if (SHIBYTE(v286[0]) < 0) {
    goto LABEL_547;
  }
LABEL_535:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_548;
  }
LABEL_536:
  qword_25C8450 = 0;
  qword_25C8458 = 0;
  qword_25C8448 = 0;
  v259 = operator new(9uLL);
  *(void *)v259 = 0x4020C000103050DLL;
  v259[8] = 6;
  qword_25C8448 = (uint64_t)v259;
  qword_25C8450 = (uint64_t)(v259 + 9);
  qword_25C8458 = (uint64_t)(v259 + 9);
  qword_25C8460 = 0;
  qword_25C8468 = 0;
  unk_25C8470 = 0;
  uint64_t v260 = (char *)operator new(9uLL);
  qword_25C8468 = (uint64_t)(v260 + 9);
  unk_25C8470 = v260 + 9;
  double result = 1.10224369e-279;
  *(void *)uint64_t v260 = 0x604020C00010305;
  v260[8] = 13;
  qword_25C8460 = (uint64_t)v260;
  return result;
}

void sub_8226EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,void *a62,uint64_t a63)
{
  if (SLOBYTE(STACK[0x3B7]) < 0)
  {
    operator delete((void *)STACK[0x3A0]);
    if ((SLOBYTE(STACK[0x39F]) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else if ((SLOBYTE(STACK[0x39F]) & 0x80000000) == 0)
  {
LABEL_3:
    if (SLOBYTE(STACK[0x387]) < 0) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }
  operator delete((void *)STACK[0x388]);
  if (SLOBYTE(STACK[0x387]) < 0)
  {
LABEL_4:
    operator delete((void *)STACK[0x370]);
    if ((SLOBYTE(STACK[0x36F]) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  if ((SLOBYTE(STACK[0x36F]) & 0x80000000) == 0)
  {
LABEL_5:
    if (SLOBYTE(STACK[0x357]) < 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete((void *)STACK[0x358]);
  if (SLOBYTE(STACK[0x357]) < 0)
  {
LABEL_6:
    operator delete((void *)STACK[0x340]);
    if ((SLOBYTE(STACK[0x33F]) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  if ((SLOBYTE(STACK[0x33F]) & 0x80000000) == 0)
  {
LABEL_7:
    if (SLOBYTE(STACK[0x327]) < 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete((void *)STACK[0x328]);
  if (SLOBYTE(STACK[0x327]) < 0)
  {
LABEL_8:
    operator delete((void *)STACK[0x310]);
    if ((SLOBYTE(STACK[0x30F]) & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  if ((SLOBYTE(STACK[0x30F]) & 0x80000000) == 0)
  {
LABEL_9:
    if (SLOBYTE(STACK[0x2F7]) < 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  operator delete((void *)STACK[0x2F8]);
  if (SLOBYTE(STACK[0x2F7]) < 0)
  {
LABEL_10:
    operator delete((void *)STACK[0x2E0]);
    if ((SLOBYTE(STACK[0x2DF]) & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  if ((SLOBYTE(STACK[0x2DF]) & 0x80000000) == 0)
  {
LABEL_11:
    if (SLOBYTE(STACK[0x2C7]) < 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  operator delete((void *)STACK[0x2C8]);
  if (SLOBYTE(STACK[0x2C7]) < 0)
  {
LABEL_12:
    operator delete((void *)STACK[0x2B0]);
    if ((SLOBYTE(STACK[0x2AF]) & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  if ((SLOBYTE(STACK[0x2AF]) & 0x80000000) == 0)
  {
LABEL_13:
    if (SLOBYTE(STACK[0x297]) < 0) {
      goto LABEL_14;
    }
    goto LABEL_28;
  }
LABEL_27:
  operator delete((void *)STACK[0x298]);
  if (SLOBYTE(STACK[0x297]) < 0)
  {
LABEL_14:
    operator delete((void *)STACK[0x280]);
    if (SLOBYTE(STACK[0x27F]) < 0)
    {
LABEL_36:
      operator delete((void *)STACK[0x268]);
      if ((SLOBYTE(STACK[0x267]) & 0x80000000) == 0)
      {
LABEL_37:
        if (SLOBYTE(STACK[0x24F]) < 0)
        {
LABEL_38:
          operator delete((void *)STACK[0x238]);
          if ((SLOBYTE(STACK[0x237]) & 0x80000000) == 0)
          {
LABEL_39:
            if (SLOBYTE(STACK[0x21F]) < 0)
            {
LABEL_40:
              operator delete((void *)STACK[0x208]);
              if ((SLOBYTE(STACK[0x207]) & 0x80000000) == 0)
              {
LABEL_41:
                if (a72 < 0) {
                  goto LABEL_42;
                }
                goto LABEL_44;
              }
LABEL_34:
              operator delete(a73);
              if (a72 < 0)
              {
LABEL_42:
                operator delete(a71);
                if ((a70 & 0x80000000) == 0) {
                  goto LABEL_43;
                }
                goto LABEL_45;
              }
LABEL_44:
              if ((a70 & 0x80000000) == 0) {
LABEL_43:
              }
                _Unwind_Resume(a1);
LABEL_45:
              operator delete(a65);
              _Unwind_Resume(a1);
            }
LABEL_33:
            if ((SLOBYTE(STACK[0x207]) & 0x80000000) == 0) {
              goto LABEL_41;
            }
            goto LABEL_34;
          }
LABEL_32:
          operator delete((void *)STACK[0x220]);
          if (SLOBYTE(STACK[0x21F]) < 0) {
            goto LABEL_40;
          }
          goto LABEL_33;
        }
LABEL_31:
        if ((SLOBYTE(STACK[0x237]) & 0x80000000) == 0) {
          goto LABEL_39;
        }
        goto LABEL_32;
      }
LABEL_30:
      operator delete((void *)STACK[0x250]);
      if (SLOBYTE(STACK[0x24F]) < 0) {
        goto LABEL_38;
      }
      goto LABEL_31;
    }
LABEL_29:
    if ((SLOBYTE(STACK[0x267]) & 0x80000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_30;
  }
LABEL_28:
  if (SLOBYTE(STACK[0x27F]) < 0) {
    goto LABEL_36;
  }
  goto LABEL_29;
}

uint64_t sub_822A44(uint64_t a1, uint64_t a2, long long *a3, char a4)
{
  *(void *)a1 = a2;
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200((unsigned char *)(a1 + 8), *(void **)a3, *((void *)a3 + 1));
    uint64_t v8 = *(void **)a1;
  }
  else
  {
    long long v7 = *a3;
    *(void *)(a1 + 24) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v7;
    uint64_t v8 = (void *)a2;
  }
  *(void *)(a1 + 32) = sub_3750CC(v8);
  *(unsigned char *)(a1 + 40) = a4;
  char v21 = 11;
  uint64_t v19 = 0;
  strcpy((char *)v20, "StepBuilder");
  uint64_t v17 = 0;
  unint64_t v18 = 0;
  uint64_t v9 = sub_374CDC(a2, (uint64_t)v20, (uint64_t *)&v17);
  sub_3CB2F0(v9, (uint64_t)__p);
  sub_82643C(a1 + 48, __p);
  uint64_t v10 = v23;
  if (v23)
  {
    do
    {
      int v15 = *(char **)v10;
      sub_57AC8((uint64_t *)v10 + 5);
      if (v10[39] < 0) {
        operator delete(*((void **)v10 + 2));
      }
      operator delete(v10);
      uint64_t v10 = v15;
    }
    while (v15);
  }
  uint64_t v11 = __p[0];
  __p[0] = 0;
  if (v11) {
    operator delete(v11);
  }
  int v12 = (void **)v17;
  if (v17)
  {
    size_t v13 = v18;
    unint64_t v14 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v13 - 1) < 0) {
          operator delete(*(v13 - 3));
        }
        v13 -= 3;
      }
      while (v13 != v12);
      unint64_t v14 = v17;
    }
    unint64_t v18 = v12;
    operator delete(v14);
  }
  if (v21 < 0) {
    operator delete(v20[0]);
  }
  return a1;
}

void sub_822BCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  sub_5450C((uint64_t)&a19);
  sub_1A668(&a10);
  if (a18 < 0)
  {
    operator delete(__p);
    if ((*(char *)(v19 + 31) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(a1);
  }
  else if ((*(char *)(v19 + 31) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v20);
  _Unwind_Resume(a1);
}

void sub_822C34(void **a1, void *a2, void *a3)
{
  uint64_t v6 = sub_45FC7C(a2);
  if (v6)
  {
    uint64_t v7 = v6;
    for (uint64_t i = 0; i != v7; ++i)
    {
      uint64_t v9 = (void *)sub_45FB28(a2, i);
      uint64_t v10 = sub_6467E8(a3, i);
      sub_822CB8(a1, v9, v10);
    }
  }
}

void sub_822CB8(void **a1, void *a2, uint64_t a3)
{
  if (sub_45FB38(a2)) {
    return;
  }
  sub_822ED8((void *)a3, (uint64_t)&v17);
  if (v18 != v17)
  {
    unint64_t v6 = 0;
    uint64_t v7 = (v18 - (unsigned char *)v17) / 56;
    do
      sub_8232D4((uint64_t)a1, a2, &v17, v6++, (void *)a3);
    while (v7 != v6);
  }
  uint64_t v8 = *(void *)(a3 + 9960);
  uint64_t v9 = *(void *)(a3 + 9952);
  while (v8 != v9)
  {
    uint64_t v10 = *(void **)(v8 - 152);
    if (v10)
    {
      *(void *)(v8 - 144) = v10;
      operator delete(v10);
    }
    uint64_t v11 = *(void **)(v8 - 192);
    if (v11)
    {
      *(void *)(v8 - 184) = v11;
      operator delete(v11);
    }
    v8 -= 192;
  }
  *(void *)(a3 + 9960) = v9;
  sub_823C74((char **)(a3 + 9952));
  sub_823E4C((uint64_t)a1, (void *)a3);
  uint64_t v12 = *(void *)(a3 + 1064);
  uint64_t v13 = *(void *)(a3 + 1072);
  while (v12 != v13)
  {
    if (*(unsigned char *)(v12 + 893)) {
      BOOL v15 = *(unsigned char *)(v12 + 892) == 0;
    }
    else {
      BOOL v15 = 1;
    }
    if (!v15)
    {
      int v16 = *(_DWORD *)(v12 + 160);
      switch(v16)
      {
        case 3:
          int v14 = 64;
LABEL_14:
          *(_DWORD *)(v12 + 160) = v14;
          break;
        case 20:
          int v14 = 65;
          goto LABEL_14;
        case 21:
          int v14 = 66;
          goto LABEL_14;
      }
    }
    v12 += 2400;
  }
  sub_8240DC();
  sub_71C0A8(v19, *a1);
  sub_71C148((uint64_t)v19, (uint64_t)a2, (void *)a3);
  if (v20 < 0) {
    operator delete((void *)v19[11]);
  }
  sub_82479C((uint64_t)a1, (void *)a3);
  sub_824970((uint64_t)a1, (void *)a3);
  sub_824A7C((uint64_t)a1, (void *)a3);
  if (v17)
  {
    unint64_t v18 = v17;
    operator delete(v17);
  }
}

void sub_822E88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0)
  {
    operator delete(__p);
    uint64_t v30 = a10;
    if (!a10) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v30 = a10;
    if (!a10) {
      goto LABEL_3;
    }
  }
  operator delete(v30);
  _Unwind_Resume(exception_object);
}

uint64_t sub_822ED8@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  unsigned int v4 = *(_DWORD *)(sub_3AEFFC((uint64_t)a1) + 8);
  unsigned int v5 = *(_DWORD *)(sub_46CAA4((uint64_t)a1) + 8);
  unint64_t v46 = 0;
  unint64_t v6 = sub_46C760(a1);
  if (v6 == 1)
  {
    int v8 = 0;
    uint64_t v25 = *(void *)(a2 + 8);
    if (*(void *)a2 == v25) {
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  for (uint64_t i = 1; i != v6; ++i)
  {
    while (1)
    {
      uint64_t v9 = (int **)sub_46C8EC(a1, i - 1);
      uint64_t v10 = (int **)sub_46C8EC(a1, i);
      uint64_t v11 = (uint64_t)*v9;
      int v12 = *((unsigned __int8 *)v9 + 38);
      uint64_t v13 = (unsigned __int16 *)((char *)*v9 - **v9);
      unsigned int v14 = *v13;
      if (*((unsigned char *)v9 + 38))
      {
        if (v14 >= 0x47)
        {
          unsigned int v15 = v13[35];
          if (!v13[35]) {
            goto LABEL_13;
          }
          int v16 = 2;
LABEL_11:
          unsigned int v15 = (*(_DWORD *)(v11 + v15) & v16) != 0;
          goto LABEL_13;
        }
      }
      else if (v14 >= 0x47)
      {
        unsigned int v15 = v13[35];
        if (!v13[35]) {
          goto LABEL_13;
        }
        int v16 = 1;
        goto LABEL_11;
      }
      unsigned int v15 = 0;
LABEL_13:
      uint64_t v17 = (char *)*v10;
      unint64_t v18 = (unsigned __int16 *)((char *)*v10 - **v10);
      unsigned int v19 = *v18;
      if (!*((unsigned char *)v10 + 38)) {
        break;
      }
      if (v19 < 0x47) {
        goto LABEL_22;
      }
      unsigned int v20 = v18[35];
      if (!v20) {
        goto LABEL_22;
      }
      if (v15 != ((*(_DWORD *)&v17[v20] & 2) != 0)) {
        goto LABEL_23;
      }
LABEL_3:
      int v8 = 0;
      if (v6 == ++i) {
        goto LABEL_38;
      }
    }
    if (v19 < 0x47 || (unsigned int v21 = v18[35]) == 0)
    {
LABEL_22:
      if (v15) {
        goto LABEL_23;
      }
      goto LABEL_3;
    }
    if (v15 == ((*(_DWORD *)&v17[v21] & 1) != 0)) {
      goto LABEL_3;
    }
LABEL_23:
    unint64_t v45 = i;
    if (!v12)
    {
      if (v14 >= 0x47)
      {
        unsigned int v22 = v13[35];
        if (v13[35])
        {
          int v23 = 1;
LABEL_30:
          if ((*(_DWORD *)(v11 + v22) & v23) != 0) {
            LOBYTE(v23) = 3;
          }
          else {
            LOBYTE(v23) = 2;
          }
          goto LABEL_34;
        }
      }
LABEL_33:
      LOBYTE(v23) = 2;
      goto LABEL_34;
    }
    if (v14 < 0x47) {
      goto LABEL_33;
    }
    unsigned int v22 = v13[35];
    int v23 = 2;
    if (v22) {
      goto LABEL_30;
    }
LABEL_34:
    char v44 = v23;
    if (v46) {
      double v24 = 1.0;
    }
    else {
      double v24 = (double)v4 / 1000000000.0;
    }
    double v43 = v24;
    double v42 = 1.0;
    char v41 = 0;
    sub_82F21C((char **)a2, &v46, (uint64_t *)&v45, &v44, (uint64_t *)&v43, (uint64_t *)&v42, &v41);
    unint64_t v46 = v45;
    int v8 = 1;
  }
LABEL_38:
  uint64_t v25 = *(void *)(a2 + 8);
  if (*(void *)a2 == v25)
  {
LABEL_42:
    char v28 = (int **)sub_46C8FC((uint64_t)a1);
    uint64_t v29 = (unsigned __int16 *)((char *)*v28 - **v28);
    unsigned int v30 = *v29;
    if (*((unsigned char *)v28 + 38))
    {
      if (v30 >= 0x47)
      {
        unsigned int v31 = v29[35];
        int v32 = 2;
        if (!v31)
        {
LABEL_53:
          char v44 = v32;
          unint64_t v33 = v46;
          unint64_t v45 = sub_46C760(a1) - 1;
          if (v33) {
            double v34 = 1.0;
          }
          else {
            double v34 = (double)v4 / 1000000000.0;
          }
          double v42 = (double)v5 / 1000000000.0;
          double v43 = v34;
          sub_82F3FC((char **)a2, &v46, (uint64_t *)&v45, &v44, (uint64_t *)&v43, (uint64_t *)&v42);
          goto LABEL_57;
        }
LABEL_49:
        if ((*(int *)((char *)*v28 + v31) & v32) != 0) {
          LOBYTE(v32) = 3;
        }
        else {
          LOBYTE(v32) = 2;
        }
        goto LABEL_53;
      }
    }
    else if (v30 >= 0x47)
    {
      unsigned int v31 = v29[35];
      if (v29[35])
      {
        int v32 = 1;
        goto LABEL_49;
      }
    }
    LOBYTE(v32) = 2;
    goto LABEL_53;
  }
LABEL_41:
  unint64_t v26 = *(void *)(v25 - 48);
  if (((v26 >= sub_46C760(a1) - 1) & ~v8) == 0) {
    goto LABEL_42;
  }
LABEL_57:
  int v35 = *(unint64_t **)(a2 + 8);
  *((unsigned char *)v35 - 16) = 1;
  int v36 = *(unint64_t **)a2;
  if (*(unint64_t **)a2 != v35)
  {
    do
    {
      unint64_t v38 = *v36;
      unint64_t v37 = v36[1];
      if (*v36 <= v37) {
        unint64_t v39 = v36[1];
      }
      else {
        unint64_t v39 = *v36;
      }
      if (*v36 < v37)
      {
        do
          v36[6] += sub_46CCC8(a1, v38++, v27);
        while (v39 != v38);
      }
      v36 += 7;
    }
    while (v36 != v35);
    int v35 = *(unint64_t **)(a2 + 8);
  }
  uint64_t result = sub_46CCC8(a1, *(v35 - 6), v27);
  *(v35 - 1) += result;
  return result;
}

void sub_823290(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_8232D4(uint64_t a1, void *a2, void *a3, unint64_t a4, void *a5)
{
  uint64_t v9 = sub_824E24(a3, a4);
  uint64_t v10 = v9;
  unint64_t v100 = a4;
  if (!a4) {
    sub_824BBC(a1, (uint64_t)a2, (uint64_t)a5, *(unsigned __int8 *)(v9 + 16));
  }
  uint64_t v11 = (uint64_t)(a5[1245] - a5[1244]) >> 6;
  uint64_t v106 = v10;
  if (*(unsigned char *)(v10 + 16) == 2)
  {
    uint64_t result = sub_825A6C();
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * v11;
    uint64_t v101 = a5;
    uint64_t v14 = a5[134];
    if (a5[133] != v14) {
      goto LABEL_8;
    }
  }
  else
  {
    if (!*(unsigned char *)(v10 + 16))
    {
      uint64_t result = sub_825584();
      unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * v11;
      uint64_t v101 = a5;
      uint64_t v14 = a5[134];
      if (a5[133] == v14) {
        goto LABEL_10;
      }
LABEL_8:
      unint64_t v15 = *(void *)(v14 - 2376);
      goto LABEL_11;
    }
    uint64_t result = sub_825F54();
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * v11;
    uint64_t v101 = a5;
    uint64_t v14 = a5[134];
    if (a5[133] != v14) {
      goto LABEL_8;
    }
  }
LABEL_10:
  unint64_t v15 = 0;
LABEL_11:
  unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v101[1245] - v101[1244]) >> 6);
  uint64_t v99 = a3;
  BOOL v17 = v13 >= v16;
  if (v13 > v16) {
    unint64_t v16 = v13;
  }
  unint64_t v98 = v16;
  if (!v17)
  {
    unint64_t v18 = v13;
    BOOL v103 = 0;
    uint64_t v97 = v101 + 133;
    while (1)
    {
      unint64_t v102 = v18;
      uint64_t v20 = sub_68F6BC(v101 + 1244, v18);
      int v105 = *(_DWORD *)(v20 + 24);
      uint64_t v21 = *(void *)(v20 + 32);
      uint64_t v23 = *(void *)v20;
      uint64_t v22 = *(void *)(v20 + 8);
      sub_46B058();
      unint64_t v26 = (void *)sub_46C8EC(v25, v24 + v21);
      sub_46B058();
      uint64_t v27 = (v22 - v23) >> 3;
      unint64_t v28 = v21 + v27 - 1;
      sub_46C8EC(v30, v28 + v29);
      if (v15 <= v28) {
        uint64_t v32 = v21 + v27 - 1;
      }
      else {
        uint64_t v32 = v15;
      }
      uint64_t v33 = 0;
      if (v15 < v28)
      {
        unint64_t v34 = v15;
        do
          v33 += sub_46CCC8(a2, v34++, v31);
        while (v32 != v34);
      }
      uint64_t v126 = v33;
      if (v15 == v28)
      {
        int v35 = 0;
        uint64_t v125 = 0;
        goto LABEL_45;
      }
      uint64_t v36 = a2[66];
      uint64_t v37 = 4 * v15;
      unint64_t v38 = (int32x4_t *)(v36 + 4 * v15);
      unint64_t v39 = 4 * (v21 + v27) - 4 * v15 - 8;
      uint64_t v40 = (v39 >> 2) + 1;
      if (v39 < 0x1C) {
        break;
      }
      double v42 = &v38->i32[v40 & 0x7FFFFFFFFFFFFFF8];
      double v43 = v38 + 1;
      int32x4_t v44 = 0uLL;
      uint64_t v45 = v40 & 0x7FFFFFFFFFFFFFF8;
      int32x4_t v46 = 0uLL;
      do
      {
        int32x4_t v44 = vaddq_s32(v43[-1], v44);
        int32x4_t v46 = vaddq_s32(*v43, v46);
        v43 += 2;
        v45 -= 8;
      }
      while (v45);
      int v41 = vaddvq_s32(vaddq_s32(v46, v44));
      if (v40 != (v40 & 0x7FFFFFFFFFFFFFF8)) {
        goto LABEL_30;
      }
LABEL_32:
      HIDWORD(v125) = v41;
      uint64_t v49 = a2[69];
      long long v50 = (int *)(v49 + 4 * v15);
      if (v39 < 0x1C)
      {
        int v51 = 0;
LABEL_37:
        size_t v56 = (int *)(v49 + 4 * v28);
        do
        {
          int v57 = *v50++;
          v51 += v57;
        }
        while (v50 != v56);
        goto LABEL_39;
      }
      v50 += v40 & 0x7FFFFFFFFFFFFFF8;
      size_t v52 = (int32x4_t *)(v49 + v37 + 16);
      int32x4_t v53 = 0uLL;
      uint64_t v54 = v40 & 0x7FFFFFFFFFFFFFF8;
      int32x4_t v55 = 0uLL;
      do
      {
        int32x4_t v53 = vaddq_s32(v52[-1], v53);
        int32x4_t v55 = vaddq_s32(*v52, v55);
        v52 += 2;
        v54 -= 8;
      }
      while (v54);
      int v51 = vaddvq_s32(vaddq_s32(v55, v53));
      if (v40 != (v40 & 0x7FFFFFFFFFFFFFF8)) {
        goto LABEL_37;
      }
LABEL_39:
      LODWORD(v125) = v51;
      uint64_t v58 = a2[72];
      char v59 = (int *)(v58 + 4 * v15);
      if (v39 < 0x1C)
      {
        int v35 = 0;
        do
        {
LABEL_44:
          int v64 = *v59++;
          v35 += v64;
        }
        while (v59 != (int *)(v58 + 4 * v28));
        goto LABEL_45;
      }
      v59 += v40 & 0x7FFFFFFFFFFFFFF8;
      int v60 = (int32x4_t *)(v58 + v37 + 16);
      int32x4_t v61 = 0uLL;
      uint64_t v62 = v40 & 0x7FFFFFFFFFFFFFF8;
      int32x4_t v63 = 0uLL;
      do
      {
        int32x4_t v61 = vaddq_s32(v60[-1], v61);
        int32x4_t v63 = vaddq_s32(*v60, v63);
        v60 += 2;
        v62 -= 8;
      }
      while (v62);
      int v35 = vaddvq_s32(vaddq_s32(v63, v61));
      if (v40 != (v40 & 0x7FFFFFFFFFFFFFF8)) {
        goto LABEL_44;
      }
LABEL_45:
      int v124 = v35;
      long long v65 = (unsigned __int16 *)(*v26 - *(int *)*v26);
      if (*v65 >= 0xBu && (uint64_t v66 = v65[5]) != 0)
      {
        int v67 = *(_DWORD *)(*v26 + v66);
        int v68 = (v67 & 0x8000) == 0;
        if (*(unsigned char *)(v106 + 16) == 2) {
          int v69 = 2;
        }
        else {
          int v69 = 5;
        }
        if ((v67 & 8) != 0) {
          int v70 = 4;
        }
        else {
          int v70 = v69;
        }
      }
      else
      {
        if (*(unsigned char *)(v106 + 16) == 2) {
          int v70 = 2;
        }
        else {
          int v70 = 5;
        }
        int v68 = 1;
      }
      BOOL v103 = (*(unsigned __int8 *)(v20 + 170) | v103) != 0;
      if (*(unsigned char *)(a1 + 72) && !*(unsigned char *)(v106 + 40) && *(void *)(v106 + 8) <= v28)
      {
        v107[0] = 0;
        v107[1] = 0;
        *(void *)&long long v108 = 0;
        __p[0] = (void *)-1;
        uint64_t v110 = 0;
        uint64_t v111 = 0;
        __p[1] = 0;
        int v112 = 0;
        *(void *)&long long v71 = -1;
        *((void *)&v71 + 1) = -1;
        long long v113 = v71;
        long long v114 = v71;
        long long v115 = v71;
        uint64_t v116 = -1;
        int v117 = 0;
        uint64_t v118 = -1;
        int v119 = 0;
        long long v120 = xmmword_20E2060;
        __int16 v121 = 0;
        char v122 = 0;
        *(void *)((char *)v123 + 7) = 0;
        v123[0] = 0;
        DWORD2(v108) = 16;
        sub_82EEDC((uint64_t)v127, (uint64_t)v107, &v126, (_DWORD *)&v125 + 1, &v125, &v124);
        if (v68 != *((unsigned __int8 *)v101 + 1057))
        {
          char v143 = v68;
          char v144 = 1;
        }
        uint64_t v128 = v21;
        uint64_t v129 = v21 + v27 - 1;
        uint64_t v135 = v21;
        uint64_t v136 = sub_46CCC8(a2, v21, v72);
        uint64_t v74 = sub_46CE8C(a2, v135, v73);
        uint64_t v137 = v136 + v74;
        uint64_t v134 = v136 + v74;
        unint64_t v131 = v15;
        unint64_t v75 = v101[134];
        if (v75 >= v101[135])
        {
          uint64_t v76 = sub_82F5CC(v97, (uint64_t)v127);
        }
        else
        {
          sub_5940FC(v101[134], (uint64_t)v127);
          uint64_t v76 = v75 + 2400;
          v101[134] = v75 + 2400;
        }
        v101[134] = v76;
        uint64_t v125 = 0;
        uint64_t v126 = 0;
        int v124 = 0;
        unint64_t v15 = v129;
        sub_575E00((uint64_t)v127);
        if (__p[1])
        {
          uint64_t v110 = (uint64_t)__p[1];
          operator delete(__p[1]);
        }
        if (v107[0])
        {
          v107[1] = v107[0];
          operator delete(v107[0]);
        }
      }
      uint64_t result = (uint64_t)v99;
      if (0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v99[1] - *v99) >> 3) - 1 <= v100)
      {
        uint64_t v77 = 0;
        if (!*(unsigned char *)(a1 + 73)) {
          goto LABEL_76;
        }
      }
      else
      {
        uint64_t result = sub_824E24(v99, v100 + 1);
        uint64_t v77 = *(void *)(result + 48);
        if (!*(unsigned char *)(a1 + 73)) {
          goto LABEL_76;
        }
      }
      if (*(void *)(v106 + 8) <= v28 && !*(unsigned char *)(v106 + 40) && *(void *)(a1 + 80) <= v77)
      {
        int v81 = v105;
        if (!v105) {
          int v81 = 3;
        }
        int v105 = v81;
        int v82 = *(unsigned __int8 *)(v106 + 16);
        if (*(void *)v106) {
          BOOL v80 = 0;
        }
        else {
          BOOL v80 = v82 == 2;
        }
        if (*(void *)v106) {
          BOOL v78 = v82 == 2;
        }
        else {
          BOOL v78 = 0;
        }
        uint64_t v79 = v82 == 3;
        goto LABEL_89;
      }
LABEL_76:
      if (v105)
      {
        BOOL v78 = 0;
        uint64_t v79 = 0;
        BOOL v80 = 0;
LABEL_89:
        sub_82EEDC((uint64_t)v127, v20, &v126, (_DWORD *)&v125 + 1, &v125, &v124);
        int v138 = v105;
        if (v80 || v78)
        {
          int v86 = 0;
          uint64_t v85 = -1;
          uint64_t v110 = -1;
          *(void *)&long long v87 = -1;
          *((void *)&v87 + 1) = -1;
          long long v108 = v87;
          *(_OWORD *)long long __p = v87;
          *(_OWORD *)int v107 = v87;
          double v84 = 0.0;
        }
        else
        {
          long long v83 = *(_OWORD *)(v20 + 88);
          *(_OWORD *)int v107 = *(_OWORD *)(v20 + 72);
          long long v108 = v83;
          *(_OWORD *)long long __p = *(_OWORD *)(v20 + 104);
          uint64_t v110 = *(void *)(v20 + 120);
          double v84 = *(double *)(v20 + 128);
          uint64_t v85 = *(void *)(v20 + 136);
          int v86 = *(_DWORD *)(v20 + 144);
        }
        long long v145 = *(_OWORD *)v107;
        long long v146 = v108;
        long long v147 = *(_OWORD *)__p;
        uint64_t v148 = v110;
        double v149 = v84;
        uint64_t v150 = v85;
        int v151 = v86;
        unint64_t v152 = (v79 << 8) | ((unint64_t)v78 << 16) | v80;
        if (v141 != -1) {
          uint64_t v130 = v141 + v21;
        }
        uint64_t v128 = v21;
        uint64_t v129 = v28;
        unint64_t v131 = v15;
        char v142 = v70;
        if (v68 != *((unsigned __int8 *)v101 + 1057) && v70 != 4)
        {
          char v143 = v68;
          char v144 = 1;
        }
        if (v139 == -1 || v140 == 0x7FFFFFFFFFFFFFFFLL)
        {
          uint64_t v91 = sub_46CCC8(v101, v21, v84);
          uint64_t v132 = v21;
          uint64_t v92 = *(void *)(a1 + 56);
          if (v92 >= v91) {
            uint64_t v92 = v91;
          }
          uint64_t v90 = v91 - v92;
        }
        else
        {
          uint64_t v132 = v139 + v21;
          uint64_t v88 = sub_46CCC8(v101, v139 + v21, v84);
          uint64_t v90 = v140;
          uint64_t v21 = v132;
          if (v88 < v140) {
            uint64_t v90 = v88;
          }
        }
        uint64_t v133 = v90;
        uint64_t v93 = sub_46CE8C(v101, v21, v89);
        uint64_t v134 = v133 + v93;
        uint64_t v135 = v28;
        uint64_t v136 = 0;
        uint64_t v95 = sub_46CE8C(v101, v28, v94);
        uint64_t v137 = v136 + v95;
        unint64_t v96 = v101[134];
        if (v96 < v101[135]) {
          uint64_t v19 = sub_5A9F18(v96, (uint64_t)v127) + 2400;
        }
        else {
          uint64_t v19 = sub_82F760(v97, (uint64_t)v127);
        }
        v101[134] = v19;
        uint64_t v125 = 0;
        uint64_t v126 = 0;
        int v124 = 0;
        uint64_t result = sub_575E00((uint64_t)v127);
        BOOL v103 = 0;
        unint64_t v15 = v28;
        unint64_t v18 = v102 + 1;
        if (v102 + 1 == v98) {
          goto LABEL_107;
        }
      }
      else
      {
        unint64_t v18 = v102 + 1;
        if (v102 + 1 == v98) {
          goto LABEL_107;
        }
      }
    }
    int v41 = 0;
    double v42 = (__int32 *)(v36 + 4 * v15);
LABEL_30:
    unint64_t v47 = (__int32 *)(v36 + 4 * v28);
    do
    {
      int v48 = *v42++;
      v41 += v48;
    }
    while (v42 != v47);
    goto LABEL_32;
  }
LABEL_107:
  if (0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v99[1] - *v99) >> 3) - 1 == v100) {
    return sub_825064();
  }
  return result;
}

void sub_823C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
}

void sub_823C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_823C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
}

void sub_823C74(char **a1)
{
  uint64_t v1 = *a1;
  int64x2_t v2 = *(int64x2_t *)(a1 + 1);
  int64x2_t v3 = vsubq_s64(v2, vdupq_n_s64((unint64_t)*a1));
  int64x2_t v4 = vshrq_n_s64(v3, 6uLL);
  unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * v4.i64[0];
  unint64_t v6 = v5;
  if (0xAAAAAAAAAAAAAAABLL * v4.i64[1] <= v5) {
    return;
  }
  int v8 = a1[1];
  if ((char *)v2.i64[0] == v1)
  {
    *a1 = (char *)(192 * v5);
    a1[1] = (char *)(192 * v5);
    a1[2] = (char *)(192 * v5);
    if (!v1) {
      return;
    }
    goto LABEL_17;
  }
  if (v5 >= 0x155555555555556) {
    sub_188D718();
  }
  uint64_t v9 = (char *)operator new(v3.u64[0]);
  uint64_t v10 = 0;
  uint64_t v11 = &v9[192 * v6];
  do
  {
    int v12 = &v8[v10];
    unint64_t v13 = &v11[v10];
    *((_OWORD *)v13 - 12) = *(_OWORD *)&v8[v10 - 192];
    *((void *)v13 - 22) = *(void *)&v8[v10 - 176];
    *((void *)v12 - 24) = 0;
    *((void *)v12 - 23) = 0;
    *((void *)v12 - 22) = 0;
    *(_OWORD *)(v13 - 168) = *(_OWORD *)&v8[v10 - 168];
    *(_OWORD *)(v13 - 152) = *(_OWORD *)&v8[v10 - 152];
    *((void *)v13 - 17) = *(void *)&v8[v10 - 136];
    *((void *)v12 - 19) = 0;
    *((void *)v12 - 18) = 0;
    *((void *)v12 - 17) = 0;
    *((_DWORD *)v13 - 32) = *(_DWORD *)&v8[v10 - 128];
    long long v14 = *(_OWORD *)&v8[v10 - 120];
    long long v15 = *(_OWORD *)&v8[v10 - 104];
    long long v16 = *(_OWORD *)&v8[v10 - 88];
    *(_OWORD *)(v13 - 72) = *(_OWORD *)&v8[v10 - 72];
    *(_OWORD *)(v13 - 88) = v16;
    *(_OWORD *)(v13 - 104) = v15;
    *(_OWORD *)(v13 - 120) = v14;
    long long v17 = *(_OWORD *)&v8[v10 - 56];
    long long v18 = *(_OWORD *)&v8[v10 - 40];
    long long v19 = *(_OWORD *)&v8[v10 - 24];
    *(void *)(v13 - 9) = *(void *)&v8[v10 - 9];
    *(_OWORD *)(v13 - 24) = v19;
    *(_OWORD *)(v13 - 40) = v18;
    *(_OWORD *)(v13 - 56) = v17;
    v10 -= 192;
  }
  while (&v8[v10] != v1);
  unint64_t v20 = (unint64_t)*a1;
  uint64_t v1 = a1[1];
  *a1 = &v11[v10];
  a1[1] = v11;
  a1[2] = v11;
  if (v1 != (char *)v20)
  {
    do
    {
      uint64_t v21 = (void *)*((void *)v1 - 19);
      if (v21)
      {
        *((void *)v1 - 18) = v21;
        operator delete(v21);
      }
      uint64_t v22 = (void *)*((void *)v1 - 24);
      if (v22)
      {
        *((void *)v1 - 23) = v22;
        operator delete(v22);
      }
      v1 -= 192;
    }
    while (v1 != (char *)v20);
    uint64_t v1 = (char *)v20;
  }
  if (v1)
  {
LABEL_17:
    operator delete(v1);
  }
}

void sub_823E4C(uint64_t a1, void *a2)
{
  uint64_t v2 = a2[133];
  if ((unint64_t)(0x2FC962FC962FC963 * ((a2[134] - v2) >> 5)) >= 2)
  {
    BOOL v4 = 0;
    unint64_t v5 = 1;
    do
    {
      uint64_t v7 = v2 + 2400 * v5;
      uint64_t v10 = *(void *)(v7 + 16);
      uint64_t v9 = (unint64_t *)(v7 + 16);
      uint64_t v8 = v10;
      if (v10 == -1) {
        uint64_t v8 = *(void *)(v2 + 2400 * v5 + 24) - 1;
      }
      uint64_t v11 = (void *)sub_46C8EC(a2, v8);
      int v12 = (unsigned __int16 *)(*v11 - *(int *)*v11);
      BOOL v14 = *v12 >= 0x2Fu && (v13 = v12[23]) != 0 && *(unsigned char *)(*v11 + v13) == 0;
      uint64_t v15 = v2 + 2400 * v5;
      long long v16 = (unsigned char *)(v15 + 893);
      *(unsigned char *)(v15 + 893) = v14;
      unint64_t v17 = *(void *)(v15 + 40);
      long long v18 = (unint64_t *)(v15 + 24);
      LOBYTE(v19) = 1;
      while (1)
      {
        unint64_t v20 = *v9;
        if (*v9 == -1) {
          unint64_t v20 = *v18 - 1;
        }
        if (v17 > v20) {
          break;
        }
        uint64_t v21 = (void *)sub_46C8EC(a2, v17);
        if (v19)
        {
          uint64_t v22 = (unsigned __int16 *)(*v21 - *(int *)*v21);
          if (*v22 < 0x2Fu)
          {
            LOBYTE(v19) = 0;
            ++v17;
          }
          else
          {
            uint64_t v23 = v22[23];
            if (v23)
            {
              unsigned int v24 = *(unsigned __int8 *)(*v21 + v23);
              if (v24 > 0x2A) {
                LOBYTE(v19) = 0;
              }
              else {
                unint64_t v19 = (0x50426810004uLL >> v24) & 1;
              }
              ++v17;
            }
            else
            {
              LOBYTE(v19) = 0;
              ++v17;
            }
          }
        }
        else
        {
          LOBYTE(v19) = 0;
          ++v17;
        }
      }
      *(unsigned char *)(v2 + 2400 * v5 + 894) = v4 & v19 & 1;
      if (v4 & v19)
      {
        BOOL v4 = 1;
        unint64_t v25 = *v18;
        if (v25 < sub_46C760(a2))
        {
          while (1)
          {
LABEL_30:
            unint64_t v26 = (void *)sub_46C8EC(a2, v25);
            uint64_t v27 = (unsigned __int16 *)(*v26 - *(int *)*v26);
            if (*v27 < 0x2Fu) {
              goto LABEL_3;
            }
            uint64_t v28 = v27[23];
            if (!v28) {
              goto LABEL_3;
            }
            unsigned int v29 = *(unsigned __int8 *)(*v26 + v28);
            if (v29 > 0x2A) {
              goto LABEL_3;
            }
            if (((1 << v29) & 0x50426810004) == 0) {
              break;
            }
            if (++v25 >= sub_46C760(a2)) {
              goto LABEL_5;
            }
          }
          if (*(unsigned char *)(*v26 + v28))
          {
LABEL_3:
            char v6 = 0;
            goto LABEL_4;
          }
          char v6 = 1;
LABEL_4:
          *(unsigned char *)(v2 + 2400 * v5 + 892) = v6;
        }
      }
      else
      {
        BOOL v4 = *v16 != 0;
        unint64_t v25 = *v18;
        if (v25 < sub_46C760(a2)) {
          goto LABEL_30;
        }
      }
LABEL_5:
      ++v5;
      uint64_t v2 = a2[133];
    }
    while (v5 < 0x2FC962FC962FC963 * ((a2[134] - v2) >> 5));
  }
}

uint64_t sub_8240DC()
{
  uint64_t v0 = __chkstk_darwin();
  uint64_t v2 = v1;
  uint64_t v75 = v0;
  sub_68D1B4(v78, *(void *)v0, 1, *(unsigned __int8 *)(v0 + 74), v0 + 8);
  unint64_t v3 = 0x2FC962FC962FC963 * ((uint64_t)(*(void *)(v2 + 1072) - *(void *)(v2 + 1064)) >> 5);
  if (v3 >= 3 && *(unsigned char *)(v2 + 1056) == 0)
  {
    unint64_t v6 = v3 - 1;
    if (v6 <= 1) {
      uint64_t v7 = 1;
    }
    else {
      uint64_t v7 = v6;
    }
    uint64_t v8 = 1;
    do
    {
      uint64_t v9 = sub_51690C((void *)(v2 + 1064), v8++);
      uint64_t v10 = sub_51690C((void *)(v2 + 1064), v8);
      if (*(unsigned char *)(v9 + 328) != 5) {
        continue;
      }
      unsigned int v11 = *(_DWORD *)(v9 + 160) - 11;
      BOOL v12 = v11 > 0x37;
      uint64_t v13 = (1 << v11) & 0xE00000000C0601;
      if (v12 || v13 == 0) {
        continue;
      }
      unint64_t v15 = *(void *)(v9 + 24);
      uint64_t v16 = *(void *)(v9 + 16) == -1 ? v15 - 1 : *(void *)(v9 + 16);
      if (v16 + 1 != v15) {
        continue;
      }
      uint64_t v17 = v10;
      if (v15 >= sub_46C760((void *)v2)) {
        continue;
      }
      long long v18 = (int **)sub_46C8EC((void *)v2, v16);
      unint64_t v19 = (int **)sub_46C8EC((void *)v2, v15);
      uint64_t v21 = sub_46CCC8((void *)v2, v15, v20);
      unint64_t v22 = (unint64_t)v18[4];
      uint64_t v23 = (int *)sub_2D5D58(*(void *)(v75 + 32), v22 & 0xFFFFFFFFFFFFLL);
      unsigned int v24 = (unsigned __int16 *)((char *)v23 - *v23);
      unsigned int v25 = *v24;
      if ((v22 & 0xFF000000000000) != 0)
      {
        if (v25 < 0x29) {
          continue;
        }
        unsigned int v26 = v24[20];
        if (!v26) {
          continue;
        }
      }
      else
      {
        if (v25 < 0x27) {
          continue;
        }
        unsigned int v26 = v24[19];
        if (!v26) {
          continue;
        }
      }
      unsigned int v74 = *(int *)((char *)v23 + v26 + *(int *)((char *)v23 + v26));
      if (v74 >= 3 && v21 >= *(void *)(v75 + 136))
      {
        sub_68D800((uint64_t)v78, (uint64_t)v18, 0, &v76);
        uint64_t v27 = *v76;
        uint64_t v28 = v76[1];
        if (*v76 != v28)
        {
          unint64_t v29 = v28 - v27 - 192;
          if (v29 < 0xC0)
          {
            uint64_t v30 = 0;
            uint64_t v31 = *v76;
            goto LABEL_35;
          }
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          unint64_t v34 = v29 / 0xC0 + 1;
          uint64_t v31 = v27 + 192 * (v34 & 0x3FFFFFFFFFFFFFELL);
          int v35 = (unsigned __int8 *)(v27 + 377);
          uint64_t v36 = v34 & 0x3FFFFFFFFFFFFFELL;
          do
          {
            v32 += *(v35 - 192);
            v33 += *v35;
            v35 += 384;
            v36 -= 2;
          }
          while (v36);
          uint64_t v30 = v33 + v32;
          if (v34 != (v34 & 0x3FFFFFFFFFFFFFELL))
          {
            do
            {
LABEL_35:
              v30 += *(unsigned __int8 *)(v31 + 185);
              v31 += 192;
            }
            while (v31 != v28);
          }
          if (v30 == 2)
          {
            do
            {
              if (*(unsigned char *)(v27 + 185))
              {
                int v38 = *(_DWORD *)(v27 + 24);
                if (!v38 || v38 == 3) {
                  break;
                }
              }
              v27 += 192;
            }
            while (v27 != v28);
            if (v27 != v28 && *(void *)(v17 + 872) >= *(void *)(v75 + 112))
            {
              uint64_t v40 = (unsigned __int16 *)((char *)*v18 - **v18);
              unsigned int v41 = *v40;
              if (*((unsigned char *)v18 + 38))
              {
                if (v41 < 0x49) {
                  goto LABEL_56;
                }
                unsigned int v42 = v40[36];
                if (!v42) {
                  goto LABEL_56;
                }
LABEL_55:
                __int16 v43 = *(_WORD *)((char *)*v18 + v42);
              }
              else
              {
                if (v41 >= 0x4B)
                {
                  unsigned int v42 = v40[37];
                  if (v42) {
                    goto LABEL_55;
                  }
                }
LABEL_56:
                __int16 v43 = -1;
              }
              int32x4_t v44 = (unsigned __int16 *)((char *)*v19 - **v19);
              unsigned int v45 = *v44;
              if (*((unsigned char *)v19 + 38))
              {
                if (v45 < 0x4B) {
                  goto LABEL_64;
                }
                unsigned int v46 = v44[37];
                if (!v46) {
                  goto LABEL_64;
                }
LABEL_63:
                int v47 = *(unsigned __int16 *)((char *)*v19 + v46);
              }
              else
              {
                if (v45 >= 0x49)
                {
                  unsigned int v46 = v44[36];
                  if (v46) {
                    goto LABEL_63;
                  }
                }
LABEL_64:
                int v47 = 0xFFFF;
              }
              unsigned __int16 v48 = v43 + 18000;
              unsigned __int16 v49 = v43 - 18000;
              if ((unsigned __int16)(v48 >> 5) < 0x465u) {
                unsigned __int16 v49 = v48;
              }
              int v50 = v47 - v49;
              if (v50 > 18000) {
                v50 -= 36000;
              }
              if (v50 < -17999) {
                v50 += 36000;
              }
              double v51 = (double)v50 / 100.0;
              if (v51 < *(double *)(v75 + 96)) {
                double v51 = *(double *)(v75 + 96);
              }
              if (v51 <= *(double *)(v75 + 104))
              {
                uint64_t v52 = *(void *)(v17 + 872);
                double v53 = (double)v74 * (double)*(uint64_t *)(v75 + 88);
                uint64_t v54 = (uint64_t)(v53 + v53);
                uint64_t v55 = v54 - 1;
                if (v54 < 1) {
                  uint64_t v55 = (uint64_t)(v53 + v53);
                }
                uint64_t v56 = v55 >> 1;
                if (v53 > -4.50359963e15) {
                  double v57 = (double)v56;
                }
                else {
                  double v57 = (double)v74 * (double)*(uint64_t *)(v75 + 88);
                }
                double v58 = (double)((v54 + 1) >> 1);
                if (v53 >= 4.50359963e15) {
                  double v58 = (double)v74 * (double)*(uint64_t *)(v75 + 88);
                }
                if (v53 >= 0.0) {
                  double v59 = v58;
                }
                else {
                  double v59 = v57;
                }
                long double v60 = sin(v51 * 3.14159265 / 180.0);
                double v61 = (double)(uint64_t)v59 / (v60 + v60);
                if (v61 >= 0.0)
                {
                  if (v61 < 4.50359963e15)
                  {
                    uint64_t v62 = (uint64_t)(v61 + v61) + 1;
                    goto LABEL_91;
                  }
                }
                else if (v61 > -4.50359963e15)
                {
                  uint64_t v62 = (uint64_t)(v61 + v61);
                  if (v62 >= 1) {
                    --v62;
                  }
LABEL_91:
                  double v61 = (double)(v62 >> 1);
                }
                uint64_t v63 = (uint64_t)v61;
                double v64 = *(double *)(v75 + 120) * (double)v52;
                uint64_t v65 = (uint64_t)(v64 + v64);
                uint64_t v66 = v65 - 1;
                if (v65 < 1) {
                  uint64_t v66 = (uint64_t)(v64 + v64);
                }
                uint64_t v67 = v66 >> 1;
                if (v64 > -4.50359963e15) {
                  double v68 = (double)v67;
                }
                else {
                  double v68 = *(double *)(v75 + 120) * (double)v52;
                }
                double v69 = (double)((v65 + 1) >> 1);
                if (v64 >= 4.50359963e15) {
                  double v69 = *(double *)(v75 + 120) * (double)v52;
                }
                if (v64 >= 0.0) {
                  double v70 = v69;
                }
                else {
                  double v70 = v68;
                }
                uint64_t v71 = v21 - *(void *)(v75 + 136);
                if (v71 >= (uint64_t)v70) {
                  uint64_t v71 = (uint64_t)v70;
                }
                if (v71 < v63) {
                  uint64_t v63 = v71;
                }
                if (*(void *)(v75 + 128) < v63) {
                  uint64_t v63 = *(void *)(v75 + 128);
                }
                *(void *)(v9 + 112) = v63;
                uint64_t v72 = sub_46CE8C((void *)v2, *(void *)(v9 + 104), v70);
                uint64_t v73 = *(void *)(v9 + 112);
                *(void *)(v9 + 120) = v73 + v72;
                *(void *)(v9 + 872) += v73;
                *(void *)(v17 + 872) -= v73;
                *(void *)(v17 + 48) = *(void *)(v9 + 112);
              }
            }
          }
        }
        uint64_t v37 = v77;
        if (v77 && !atomic_fetch_add(&v77->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
    }
    while (v8 != v7);
  }
  return sub_68D2B0(v78);
}

void sub_8246E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_14A84((uint64_t)va);
  sub_68D2B0(va1);
  _Unwind_Resume(a1);
}

void sub_8246FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_824710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_824724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_824738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_82474C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_824760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_824774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_824788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_82479C(uint64_t a1, void *a2)
{
  if (*(unsigned char *)(a1 + 145))
  {
    uint64_t v4 = (unsigned __int8 *)operator new(4uLL);
    *(_DWORD *)uint64_t v4 = 807472134;
    uint64_t v5 = a2[134];
    uint64_t v6 = a2[133];
    if ((unint64_t)(0x2FC962FC962FC963 * ((v5 - v6) >> 5)) >= 2)
    {
      unint64_t v7 = 1;
      uint64_t v8 = 3295;
      do
      {
        if (*(void *)(v6 + v8 - 23) >= *(void *)(a1 + 152)) {
          goto LABEL_7;
        }
        uint64_t v11 = *(void *)(v6 + v8 - 879);
        if (v11 == -1) {
          uint64_t v11 = *(void *)(v6 + v8 - 871) - 1;
        }
        BOOL v12 = (void *)sub_46C8EC(a2, v11);
        uint64_t v13 = (unsigned __int16 *)(*v12 - *(int *)*v12);
        if (*v13 >= 0x2Fu && (uint64_t v14 = v13[23]) != 0)
        {
          int v15 = *(unsigned __int8 *)(*v12 + v14);
          if (*v4 == v15) {
            goto LABEL_4;
          }
        }
        else
        {
          int v15 = 32;
          if (*v4 == 32)
          {
LABEL_4:
            uint64_t v9 = 0;
            goto LABEL_5;
          }
        }
        if (v4[1] == v15)
        {
          uint64_t v9 = 1;
        }
        else if (v4[2] == v15)
        {
          uint64_t v9 = 2;
        }
        else
        {
          uint64_t v10 = v4 + 4;
          if (v4[3] != v15) {
            goto LABEL_6;
          }
          uint64_t v9 = 3;
        }
LABEL_5:
        uint64_t v10 = &v4[v9];
LABEL_6:
        *(unsigned char *)(v6 + v8) = v10 - v4 != 4;
        uint64_t v5 = a2[134];
        uint64_t v6 = a2[133];
LABEL_7:
        ++v7;
        v8 += 2400;
      }
      while (v7 < 0x2FC962FC962FC963 * ((v5 - v6) >> 5));
    }
    operator delete(v4);
  }
}

void sub_82495C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

BOOL sub_824970(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[134];
  uint64_t v5 = sub_51690C(a2 + 133, 0x2FC962FC962FC963 * ((v4 - a2[133]) >> 5) - 2);
  unint64_t v6 = *(void *)(v4 - 2360);
  unint64_t v7 = sub_46C760(a2);
  if (v6 <= v7) {
    unint64_t v8 = v7;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v6 >= v7)
  {
    BOOL result = 1;
    if (!*(unsigned char *)(a1 + 144)) {
      return result;
    }
    goto LABEL_14;
  }
  unint64_t v9 = v8 - 1;
  do
  {
    uint64_t v10 = *(void *)(a1 + 32);
    uint64_t v11 = sub_46C8EC(a2, v6);
    BOOL result = sub_2E4CD4(v10, *(void *)(v11 + 32));
  }
  while (result && v9 != v6++);
  if (*(unsigned char *)(a1 + 144))
  {
LABEL_14:
    int v14 = *(_DWORD *)(v5 + 160);
    if (((v14 - 25) > 0x3F || ((1 << (v14 - 25)) & 0x9000000000000001) == 0)
      && v14 != 17)
    {
      *(unsigned char *)(v5 + 680) = result;
    }
  }
  return result;
}

void sub_824A7C(uint64_t a1, void *a2)
{
  uint64_t v2 = (void *)a2[133];
  unint64_t v3 = (void *)a2[134];
  if (v2 != v3)
  {
    uint64_t v5 = a2 + 1445;
    do
    {
      unint64_t v6 = v2[5];
      if (v6 < v2[3])
      {
        do
        {
          unint64_t v7 = (void *)sub_46C8EC(a2, v6);
          unint64_t v8 = (unsigned __int16 *)(*v7 - *(int *)*v7);
          if (*v8 < 0x2Fu) {
            break;
          }
          uint64_t v9 = v8[23];
          if (!v9) {
            break;
          }
          unsigned int v10 = *(unsigned __int8 *)(*v7 + v9);
          BOOL v11 = v10 > 0x2A;
          uint64_t v12 = (1 << v10) & 0x50426810004;
          if (v11 || v12 == 0) {
            break;
          }
          ++v6;
        }
        while (v6 < v2[3]);
        if (v6 != v2[5] && v6 < v2[3])
        {
          if ((int v14 = (void *)sub_46C8EC(a2, v6), v15 = (unsigned __int16 *)(*v14 - *(int *)*v14), *v15 >= 0x2Fu)
            && (uint64_t v16 = v15[23]) != 0
            && !*(unsigned char *)(*v14 + v16)
            || *(_DWORD *)sub_66AF3C(v5, v6) != 3)
          {
            v2[7] = v6;
          }
        }
      }
      v2 += 300;
    }
    while (v2 != v3);
  }
}

void sub_824BBC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v38 = *(void *)sub_3AEFFC(a2);
  int v36 = *(_DWORD *)(a2 + 768);
  int v37 = v36;
  int v35 = v36;
  if (*(unsigned char *)(a2 + 803))
  {
    BOOL v8 = *(double *)(a2 + 808) > *(double *)(a1 + 48);
    if (sub_64F234(a3))
    {
      if (v8)
      {
LABEL_4:
        if (a4) {
          int v9 = 85;
        }
        else {
          int v9 = 88;
        }
        goto LABEL_17;
      }
    }
    else
    {
      if ((*(unsigned char *)(a1 + 40) & 0xFD) != 9)
      {
        if (v8) {
          int v9 = 25;
        }
        else {
          int v9 = 17;
        }
        goto LABEL_17;
      }
      if (v8) {
        goto LABEL_4;
      }
    }
    int v9 = 85;
  }
  else
  {
    char v10 = sub_64F234(a3);
    int v9 = 85;
    if ((v10 & 1) == 0)
    {
      if ((*(unsigned char *)(a1 + 40) & 0xFD) == 9) {
        int v9 = 85;
      }
      else {
        int v9 = 17;
      }
    }
  }
LABEL_17:
  int v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v19 = -1;
  long long __p = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  int v23 = 0;
  *(void *)&long long v11 = -1;
  *((void *)&v11 + 1) = -1;
  long long v24 = v11;
  long long v25 = v11;
  long long v26 = v11;
  uint64_t v27 = -1;
  int v28 = 0;
  uint64_t v29 = -1;
  int v30 = 0;
  long long v31 = xmmword_20E2060;
  __int16 v32 = 0;
  char v33 = 0;
  *(void *)((char *)v34 + 7) = 0;
  v34[0] = 0;
  int v18 = v9;
  sub_82EEDC((uint64_t)v39, (uint64_t)&v15, &v38, &v37, &v36, &v35);
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  uint64_t v45 = 0;
  uint64_t v43 = 0;
  uint64_t v44 = 0;
  uint64_t v42 = 0;
  if (*(unsigned __int8 *)(a3 + 1056) == a4) {
    char v12 = 5;
  }
  else {
    char v12 = a4;
  }
  char v46 = v12;
  unint64_t v13 = *(void *)(a3 + 1072);
  if (v13 >= *(void *)(a3 + 1080))
  {
    uint64_t v14 = sub_82F5CC((uint64_t *)(a3 + 1064), (uint64_t)v39);
  }
  else
  {
    sub_5940FC(*(void *)(a3 + 1072), (uint64_t)v39);
    uint64_t v14 = v13 + 2400;
    *(void *)(a3 + 1072) = v13 + 2400;
  }
  *(void *)(a3 + 1072) = v14;
  sub_575E00((uint64_t)v39);
  if (__p)
  {
    uint64_t v21 = __p;
    operator delete(__p);
  }
  if (v15)
  {
    uint64_t v16 = v15;
    operator delete(v15);
  }
}

void sub_824DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
}

void sub_824DF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  *(void *)(v36 + 1072) = v37;
  sub_575E00((uint64_t)&a36);
  sub_592058((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_824E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_824E24(void *a1, unint64_t a2)
{
  if (0x6DB6DB6DB6DB6DB7 * ((uint64_t)(a1[1] - *a1) >> 3) <= a2)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v16, a2);
    unint64_t v6 = std::string::insert(&v16, 0, "Out-of-bounds access in Vector::at with index=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v17.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    BOOL v8 = std::string::append(&v17, ",size=");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v15, 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(a1[1] - *a1) >> 3));
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      char v10 = &v15;
    }
    else {
      char v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    char v12 = std::string::append(&v18, (const std::string::value_type *)v10, size);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v12->__r_.__value_.__r.__words[2];
    long long v19 = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    uint64_t v14 = (void *)sub_2F404((uint64_t)exception, &v19);
  }
  return *a1 + 56 * a2;
}

void sub_824F84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(__p);
  goto LABEL_11;
}

uint64_t sub_825064()
{
  uint64_t v0 = __chkstk_darwin();
  char v40 = v1;
  uint64_t v43 = v2;
  uint64_t v44 = v0;
  uint64_t v4 = (uint64_t)v3;
  uint64_t v46 = v5;
  unint64_t v6 = *(void *)(*(void *)(v5 + 1072) - 2376);
  unint64_t v7 = sub_46C760(v3);
  unint64_t v41 = v6;
  uint64_t v42 = v7;
  unint64_t v45 = v7 - 1;
  if (v6 <= v7 - 1) {
    unint64_t v9 = v7 - 1;
  }
  else {
    unint64_t v9 = v6;
  }
  if (v6 >= v7 - 1)
  {
    int v13 = 0;
    int v12 = 0;
    int v11 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    int v11 = 0;
    int v12 = 0;
    int v13 = 0;
    do
    {
      v10 += sub_46CCC8((void *)v4, v6, v8);
      v11 += *(_DWORD *)sub_71CC9C((void *)(v4 + 528), v6);
      v12 += *(_DWORD *)sub_71CC9C((void *)(v4 + 552), v6);
      v13 += *(_DWORD *)sub_71CC9C((void *)(v4 + 576), v6++);
    }
    while (v9 != v6);
  }
  uint64_t v14 = *(void *)(v46 + 296) + sub_46CCC8((void *)v4, v45, v8) + v10;
  uint64_t v71 = v14;
  int v15 = *(_DWORD *)(v4 + 772);
  int v70 = *(_DWORD *)(*(void *)(v4 + 528) + 4 * v45) + v15 + v11;
  int v69 = *(_DWORD *)(*(void *)(v4 + 552) + 4 * v45) + v15 + v12;
  int v68 = *(_DWORD *)(*(void *)(v4 + 576) + 4 * v45) + v15 + v13;
  std::string v16 = (void *)sub_46C8EC((void *)v4, v45);
  sub_46C8EC((void *)v4, v45);
  std::string v17 = (unsigned __int16 *)(*v16 - *(int *)*v16);
  if (*v17 >= 0xBu && (uint64_t v18 = v17[5]) != 0)
  {
    int v19 = *(_DWORD *)(*v16 + v18);
    if (*(unsigned char *)(v43 + 16) == 2) {
      char v20 = 2;
    }
    else {
      char v20 = 5;
    }
    if ((v19 & 8) != 0) {
      char v21 = 4;
    }
    else {
      char v21 = v20;
    }
  }
  else if (*(unsigned char *)(v43 + 16) == 2)
  {
    char v21 = 2;
  }
  else
  {
    char v21 = 5;
  }
  sub_68D1B4(v67, *(void *)v44, 1, *(unsigned __int8 *)(v44 + 74), v44 + 8);
  int v22 = sub_690014((uint64_t)v67, (void *)v46);
  if ((v22 - 33) <= 0x33 && ((1 << (v22 - 33)) & 0xC000000000003) != 0)
  {
    if ((v40 & 1) != 0
      || *(void *)(v44 + 64) > v14
      && ((v23 = *(void *)(v44 + 32), uint64_t v24 = sub_46C8FC(v46), sub_2E4CD4(v23, *(void *)(v24 + 32)))
       || (uint64_t v25 = *(void *)(v44 + 32),
           uint64_t v26 = sub_46C8FC(v46),
           uint64_t v27 = (int *)sub_2D5D58(v25, *(unsigned int *)(v26 + 32) | ((unint64_t)*(unsigned __int16 *)(v26 + 36) << 32)), v28 = (unsigned __int16 *)((char *)v27 - *v27), *v28 >= 0x2Fu)&& (v29 = v28[23]) != 0&& *((unsigned char *)v27 + v29) == 18))
    {
      if (sub_64F348(v46)) {
        int v22 = 82;
      }
      else {
        int v22 = 18;
      }
    }
  }
  int v47 = 0;
  unsigned __int16 v48 = 0;
  uint64_t v49 = 0;
  uint64_t v51 = -1;
  long long __p = 0;
  double v53 = 0;
  uint64_t v54 = 0;
  int v55 = 0;
  *(void *)&long long v30 = -1;
  *((void *)&v30 + 1) = -1;
  long long v56 = v30;
  long long v57 = v30;
  long long v58 = v30;
  uint64_t v59 = -1;
  int v60 = 0;
  uint64_t v61 = -1;
  int v62 = 0;
  long long v63 = xmmword_20E2060;
  __int16 v64 = 0;
  char v65 = 0;
  *(void *)((char *)v66 + 7) = 0;
  v66[0] = 0;
  int v50 = v22;
  sub_82EEDC((uint64_t)v72, (uint64_t)&v47, &v71, &v70, &v69, &v68);
  v72[2] = v45;
  v72[3] = v42;
  v72[13] = v42;
  uint64_t v32 = sub_46CE8C((void *)v46, v42, v31);
  uint64_t v74 = v73 + v32;
  v72[12] = v73 + v32;
  v72[5] = v41;
  char v75 = v21;
  uint64_t v33 = (void *)sub_46C8FC(v4);
  unint64_t v34 = (unsigned __int16 *)(*v33 - *(int *)*v33);
  if (*v34 < 0xBu || (uint64_t v35 = v34[5]) == 0)
  {
    LOBYTE(v36) = 1;
    if (*(unsigned char *)(v46 + 1057) == 1) {
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  int v36 = (*(unsigned char *)(*v33 + v35 + 1) & 0x80) == 0;
  if (*(unsigned __int8 *)(v46 + 1057) != v36)
  {
LABEL_36:
    char v76 = v36;
    char v77 = 1;
  }
LABEL_37:
  unint64_t v37 = *(void *)(v46 + 1072);
  if (v37 >= *(void *)(v46 + 1080))
  {
    uint64_t v38 = sub_82F5CC((uint64_t *)(v46 + 1064), (uint64_t)v72);
  }
  else
  {
    sub_5940FC(*(void *)(v46 + 1072), (uint64_t)v72);
    uint64_t v38 = v37 + 2400;
    *(void *)(v46 + 1072) = v37 + 2400;
  }
  *(void *)(v46 + 1072) = v38;
  sub_575E00((uint64_t)v72);
  if (__p)
  {
    double v53 = __p;
    operator delete(__p);
  }
  if (v47)
  {
    unsigned __int16 v48 = v47;
    operator delete(v47);
  }
  return sub_68D2B0(v67);
}

void sub_825518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  *(void *)(v42 + 1072) = v41;
  sub_575E00((uint64_t)&STACK[0x1890]);
  sub_592058((uint64_t)&a17);
  sub_68D2B0(&a41);
  _Unwind_Resume(a1);
}

void sub_825570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
}

uint64_t sub_825584()
{
  uint64_t v0 = __chkstk_darwin();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = v0;
  sub_650C94((uint64_t)v35);
  unint64_t v7 = *v4;
  unint64_t v6 = v4[1];
  double v31 = v4;
  if (*v4 <= v6 + 1) {
    unint64_t v8 = v6 + 1;
  }
  else {
    unint64_t v8 = *v4;
  }
  if (v7 < v6 + 1)
  {
    unint64_t v9 = *v4;
    do
    {
      while (1)
      {
        uint64_t v10 = sub_46C8EC((void *)v2, v9);
        sub_82F8BC((uint64_t)v35, v10, *(void *)(v5 + 32));
        int v11 = (uint64_t *)sub_415F0((void *)(v2 + 12304), v9);
        uint64_t v13 = v12;
        uint64_t v14 = *v11;
        unint64_t v15 = v39;
        if (v39 == v40 << 6)
        {
          if ((uint64_t)(v39 + 1) < 0) {
            sub_2E00();
          }
          unint64_t v16 = v40 << 7;
          if (v40 << 7 <= (v39 & 0xFFFFFFFFFFFFFFC0) + 64) {
            unint64_t v16 = (v39 & 0xFFFFFFFFFFFFFFC0) + 64;
          }
          if (v39 <= 0x3FFFFFFFFFFFFFFELL) {
            unint64_t v17 = v16;
          }
          else {
            unint64_t v17 = 0x7FFFFFFFFFFFFFFFLL;
          }
          sub_3D110((uint64_t)&v38, v17);
          unint64_t v15 = v39;
        }
        unint64_t v39 = v15 + 1;
        unint64_t v18 = v15 >> 6;
        uint64_t v19 = 1 << v15;
        if ((v14 & v13) != 0) {
          break;
        }
        *(void *)(v38 + 8 * v18) &= ~v19;
        if (v8 == ++v9) {
          goto LABEL_17;
        }
      }
      *(void *)(v38 + 8 * v18) |= v19;
      ++v9;
    }
    while (v8 != v9);
  }
LABEL_17:
  *(_DWORD *)(sub_3AEFFC((uint64_t)v35) + 8) = vcvtad_u64_f64(*((double *)v31 + 3) * 1000000000.0);
  *(_DWORD *)(sub_46CAA4((uint64_t)v35) + 8) = vcvtad_u64_f64(*((double *)v31 + 4) * 1000000000.0);
  sub_46C80C(v2, v32);
  sub_46C818((uint64_t)v35, (char **)v32);
  if (__p)
  {
    unint64_t v34 = __p;
    operator delete(__p);
  }
  if (v32[0])
  {
    v32[1] = v32[0];
    operator delete(v32[0]);
  }
  sub_6A4390(v32, *(void *)v5, 1, *(unsigned __int8 *)(v5 + 74), v5 + 8);
  sub_6A4394((uint64_t)v32, (uint64_t)v35, 3);
  sub_82F9BC((char **)(v2 + 9952), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v2 + 9960) - *(void *)(v2 + 9952)) >> 6)- 0x5555555555555555 * ((v37 - (uint64_t)v36) >> 6));
  uint64_t v20 = (uint64_t)v36;
  uint64_t v21 = v37;
  if (v36 != (void *)v37)
  {
    int v22 = v36;
    while (1)
    {
      v22[4] += v7;
      uint64_t v23 = v22[9];
      if (v23 != -1) {
        break;
      }
      uint64_t v24 = v22[10];
      if (v24 != -1) {
        goto LABEL_28;
      }
      if (v22[11] != -1 || v22[12] != -1 || v22[13] != -1 || v22[14] != -1 || v22[15] != -1) {
        goto LABEL_29;
      }
LABEL_23:
      v22 += 24;
      if (v22 == (void *)v21) {
        goto LABEL_45;
      }
    }
    v22[9] = v23 + v7;
    uint64_t v24 = v22[10];
    if (v24 != -1) {
LABEL_28:
    }
      v22[10] = v24 + v7;
LABEL_29:
    uint64_t v25 = v22[11];
    if (v25 != -1) {
      v22[11] = v25 + v7;
    }
    uint64_t v26 = v22[12];
    if (v26 != -1) {
      v22[12] = v26 + v7;
    }
    uint64_t v27 = v22[13];
    if (v27 != -1) {
      v22[13] = v27 + v7;
    }
    uint64_t v28 = v22[14];
    if (v28 != -1) {
      v22[14] = v28 + v7;
    }
    uint64_t v29 = v22[15];
    if (v29 != -1) {
      v22[15] = v29 + v7;
    }
    goto LABEL_23;
  }
LABEL_45:
  sub_82FB68((void **)(v2 + 9952), *(void *)(v2 + 9960), v20, v21, 0xAAAAAAAAAAAAAAABLL * ((v21 - v20) >> 6));
  sub_68D2B0(v32);
  return sub_5752F4((uint64_t)v35);
}

void sub_82597C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_68D2B0(va);
  sub_5752F4((uint64_t)&STACK[0x1788]);
  _Unwind_Resume(a1);
}

void sub_825A24(_Unwind_Exception *a1)
{
}

void sub_825A3C(_Unwind_Exception *a1)
{
}

void sub_825A54(_Unwind_Exception *a1)
{
}

uint64_t sub_825A6C()
{
  uint64_t v0 = __chkstk_darwin();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = v0;
  sub_652D44((uint64_t)v35);
  unint64_t v7 = *v4;
  unint64_t v6 = v4[1];
  double v31 = v4;
  if (*v4 <= v6 + 1) {
    unint64_t v8 = v6 + 1;
  }
  else {
    unint64_t v8 = *v4;
  }
  if (v7 < v6 + 1)
  {
    unint64_t v9 = *v4;
    do
    {
      while (1)
      {
        uint64_t v10 = sub_46C8EC((void *)v2, v9);
        sub_8301FC((uint64_t)v35, v10, *(void *)(v5 + 32));
        int v11 = (uint64_t *)sub_415F0((void *)(v2 + 12304), v9);
        uint64_t v13 = v12;
        uint64_t v14 = *v11;
        unint64_t v15 = v39;
        if (v39 == v40 << 6)
        {
          if ((uint64_t)(v39 + 1) < 0) {
            sub_2E00();
          }
          unint64_t v16 = v40 << 7;
          if (v40 << 7 <= (v39 & 0xFFFFFFFFFFFFFFC0) + 64) {
            unint64_t v16 = (v39 & 0xFFFFFFFFFFFFFFC0) + 64;
          }
          if (v39 <= 0x3FFFFFFFFFFFFFFELL) {
            unint64_t v17 = v16;
          }
          else {
            unint64_t v17 = 0x7FFFFFFFFFFFFFFFLL;
          }
          sub_3D110((uint64_t)&v38, v17);
          unint64_t v15 = v39;
        }
        unint64_t v39 = v15 + 1;
        unint64_t v18 = v15 >> 6;
        uint64_t v19 = 1 << v15;
        if ((v14 & v13) != 0) {
          break;
        }
        *(void *)(v38 + 8 * v18) &= ~v19;
        if (v8 == ++v9) {
          goto LABEL_17;
        }
      }
      *(void *)(v38 + 8 * v18) |= v19;
      ++v9;
    }
    while (v8 != v9);
  }
LABEL_17:
  *(_DWORD *)(sub_3AEFFC((uint64_t)v35) + 8) = vcvtad_u64_f64(*((double *)v31 + 3) * 1000000000.0);
  *(_DWORD *)(sub_46CAA4((uint64_t)v35) + 8) = vcvtad_u64_f64(*((double *)v31 + 4) * 1000000000.0);
  sub_46C80C(v2, v32);
  sub_46C818((uint64_t)v35, (char **)v32);
  if (__p)
  {
    unint64_t v34 = __p;
    operator delete(__p);
  }
  if (v32[0])
  {
    v32[1] = v32[0];
    operator delete(v32[0]);
  }
  sub_6B6EC0(v32, *(void *)v5, 1, *(unsigned __int8 *)(v5 + 74), v5 + 8);
  sub_6B6EC4((uint64_t)v32, v35, 3);
  sub_82F9BC((char **)(v2 + 9952), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v2 + 9960) - *(void *)(v2 + 9952)) >> 6)- 0x5555555555555555 * ((v37 - (uint64_t)v36) >> 6));
  uint64_t v20 = (uint64_t)v36;
  uint64_t v21 = v37;
  if (v36 != (void *)v37)
  {
    int v22 = v36;
    while (1)
    {
      v22[4] += v7;
      uint64_t v23 = v22[9];
      if (v23 != -1) {
        break;
      }
      uint64_t v24 = v22[10];
      if (v24 != -1) {
        goto LABEL_28;
      }
      if (v22[11] != -1 || v22[12] != -1 || v22[13] != -1 || v22[14] != -1 || v22[15] != -1) {
        goto LABEL_29;
      }
LABEL_23:
      v22 += 24;
      if (v22 == (void *)v21) {
        goto LABEL_45;
      }
    }
    v22[9] = v23 + v7;
    uint64_t v24 = v22[10];
    if (v24 != -1) {
LABEL_28:
    }
      v22[10] = v24 + v7;
LABEL_29:
    uint64_t v25 = v22[11];
    if (v25 != -1) {
      v22[11] = v25 + v7;
    }
    uint64_t v26 = v22[12];
    if (v26 != -1) {
      v22[12] = v26 + v7;
    }
    uint64_t v27 = v22[13];
    if (v27 != -1) {
      v22[13] = v27 + v7;
    }
    uint64_t v28 = v22[14];
    if (v28 != -1) {
      v22[14] = v28 + v7;
    }
    uint64_t v29 = v22[15];
    if (v29 != -1) {
      v22[15] = v29 + v7;
    }
    goto LABEL_23;
  }
LABEL_45:
  sub_82FB68((void **)(v2 + 9952), *(void *)(v2 + 9960), v20, v21, 0xAAAAAAAAAAAAAAABLL * ((v21 - v20) >> 6));
  sub_68D2B0(v32);
  return sub_5752F4((uint64_t)v35);
}

void sub_825E64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_68D2B0(va);
  sub_5752F4((uint64_t)&STACK[0x1788]);
  _Unwind_Resume(a1);
}

void sub_825F0C(_Unwind_Exception *a1)
{
}

void sub_825F24(_Unwind_Exception *a1)
{
}

void sub_825F3C(_Unwind_Exception *a1)
{
}

uint64_t sub_825F54()
{
  uint64_t v0 = __chkstk_darwin();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = v0;
  sub_64EDB0((uint64_t)v35);
  unint64_t v7 = *v4;
  unint64_t v6 = v4[1];
  double v31 = v4;
  if (*v4 <= v6 + 1) {
    unint64_t v8 = v6 + 1;
  }
  else {
    unint64_t v8 = *v4;
  }
  if (v7 < v6 + 1)
  {
    unint64_t v9 = *v4;
    do
    {
      while (1)
      {
        uint64_t v10 = sub_46C8EC((void *)v2, v9);
        sub_82F8BC((uint64_t)v35, v10, *(void *)(v5 + 32));
        int v11 = (uint64_t *)sub_415F0((void *)(v2 + 12304), v9);
        uint64_t v13 = v12;
        uint64_t v14 = *v11;
        unint64_t v15 = v39;
        if (v39 == v40 << 6)
        {
          if ((uint64_t)(v39 + 1) < 0) {
            sub_2E00();
          }
          unint64_t v16 = v40 << 7;
          if (v40 << 7 <= (v39 & 0xFFFFFFFFFFFFFFC0) + 64) {
            unint64_t v16 = (v39 & 0xFFFFFFFFFFFFFFC0) + 64;
          }
          if (v39 <= 0x3FFFFFFFFFFFFFFELL) {
            unint64_t v17 = v16;
          }
          else {
            unint64_t v17 = 0x7FFFFFFFFFFFFFFFLL;
          }
          sub_3D110((uint64_t)&v38, v17);
          unint64_t v15 = v39;
        }
        unint64_t v39 = v15 + 1;
        unint64_t v18 = v15 >> 6;
        uint64_t v19 = 1 << v15;
        if ((v14 & v13) != 0) {
          break;
        }
        *(void *)(v38 + 8 * v18) &= ~v19;
        if (v8 == ++v9) {
          goto LABEL_17;
        }
      }
      *(void *)(v38 + 8 * v18) |= v19;
      ++v9;
    }
    while (v8 != v9);
  }
LABEL_17:
  *(_DWORD *)(sub_3AEFFC((uint64_t)v35) + 8) = vcvtad_u64_f64(*((double *)v31 + 3) * 1000000000.0);
  *(_DWORD *)(sub_46CAA4((uint64_t)v35) + 8) = vcvtad_u64_f64(*((double *)v31 + 4) * 1000000000.0);
  sub_46C80C(v2, v32);
  sub_46C818((uint64_t)v35, (char **)v32);
  if (__p)
  {
    unint64_t v34 = __p;
    operator delete(__p);
  }
  if (v32[0])
  {
    v32[1] = v32[0];
    operator delete(v32[0]);
  }
  sub_68D1B4(v32, *(void *)v5, 1, *(unsigned __int8 *)(v5 + 74), v5 + 8);
  sub_68D2B4((uint64_t)v32, (uint64_t)v35, 3);
  sub_82F9BC((char **)(v2 + 9952), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v2 + 9960) - *(void *)(v2 + 9952)) >> 6)- 0x5555555555555555 * ((v37 - (uint64_t)v36) >> 6));
  uint64_t v20 = (uint64_t)v36;
  uint64_t v21 = v37;
  if (v36 != (void *)v37)
  {
    int v22 = v36;
    while (1)
    {
      v22[4] += v7;
      uint64_t v23 = v22[9];
      if (v23 != -1) {
        break;
      }
      uint64_t v24 = v22[10];
      if (v24 != -1) {
        goto LABEL_28;
      }
      if (v22[11] != -1 || v22[12] != -1 || v22[13] != -1 || v22[14] != -1 || v22[15] != -1) {
        goto LABEL_29;
      }
LABEL_23:
      v22 += 24;
      if (v22 == (void *)v21) {
        goto LABEL_45;
      }
    }
    v22[9] = v23 + v7;
    uint64_t v24 = v22[10];
    if (v24 != -1) {
LABEL_28:
    }
      v22[10] = v24 + v7;
LABEL_29:
    uint64_t v25 = v22[11];
    if (v25 != -1) {
      v22[11] = v25 + v7;
    }
    uint64_t v26 = v22[12];
    if (v26 != -1) {
      v22[12] = v26 + v7;
    }
    uint64_t v27 = v22[13];
    if (v27 != -1) {
      v22[13] = v27 + v7;
    }
    uint64_t v28 = v22[14];
    if (v28 != -1) {
      v22[14] = v28 + v7;
    }
    uint64_t v29 = v22[15];
    if (v29 != -1) {
      v22[15] = v29 + v7;
    }
    goto LABEL_23;
  }
LABEL_45:
  sub_82FB68((void **)(v2 + 9952), *(void *)(v2 + 9960), v20, v21, 0xAAAAAAAAAAAAAAABLL * ((v21 - v20) >> 6));
  sub_68D2B0(v32);
  return sub_5752F4((uint64_t)v35);
}

void sub_82634C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_68D2B0(va);
  sub_5752F4((uint64_t)&STACK[0x1788]);
  _Unwind_Resume(a1);
}

void sub_8263F4(_Unwind_Exception *a1)
{
}

void sub_82640C(_Unwind_Exception *a1)
{
}

void sub_826424(_Unwind_Exception *a1)
{
}

uint64_t sub_82643C(uint64_t a1, void *a2)
{
  __p[0] = operator new(0x28uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9240;
  strcpy((char *)__p[0], "start_with_u_turn_speed_threshold_kph");
  double v4 = sub_5C7E8(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(double *)a1 = v4;
  __p[0] = operator new(0x28uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9390;
  strcpy((char *)__p[0], "maneuver_start_pullback_distance");
  double v5 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v5 >= 0.0)
  {
    double v6 = v5;
    if (v5 >= 4.50359963e15) {
      goto LABEL_11;
    }
    uint64_t v7 = (uint64_t)(v5 + v5) + 1;
  }
  else
  {
    double v6 = v5;
    if (v5 <= -4.50359963e15) {
      goto LABEL_11;
    }
    uint64_t v7 = (uint64_t)(v5 + v5);
    if (v7 >= 1) {
      --v7;
    }
  }
  double v6 = (double)(v7 >> 1);
LABEL_11:
  if (v6 < 9.22337204e18)
  {
    if (v5 >= 0.0)
    {
      if (v5 >= 4.50359963e15) {
        goto LABEL_22;
      }
      uint64_t v8 = (uint64_t)(v5 + v5) + 1;
    }
    else
    {
      if (v5 <= -4.50359963e15) {
        goto LABEL_22;
      }
      uint64_t v8 = (uint64_t)(v5 + v5);
      if (v8 >= 1) {
        --v8;
      }
    }
    double v5 = (double)(v8 >> 1);
LABEL_22:
    *(void *)(a1 + 8) = (uint64_t)v5;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  *(void *)(a1 + 8) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_24;
  }
LABEL_23:
  operator delete(__p[0]);
LABEL_24:
  __p[0] = operator new(0x38uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9AC0;
  strcpy((char *)__p[0], "arrival_step_distance_threshold_for_side_calculation");
  double v9 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v9 >= 0.0)
  {
    double v10 = v9;
    if (v9 >= 4.50359963e15) {
      goto LABEL_32;
    }
    uint64_t v11 = (uint64_t)(v9 + v9) + 1;
  }
  else
  {
    double v10 = v9;
    if (v9 <= -4.50359963e15) {
      goto LABEL_32;
    }
    uint64_t v11 = (uint64_t)(v9 + v9);
    if (v11 >= 1) {
      --v11;
    }
  }
  double v10 = (double)(v11 >> 1);
LABEL_32:
  if (v10 < 9.22337204e18)
  {
    if (v9 >= 0.0)
    {
      if (v9 >= 4.50359963e15) {
        goto LABEL_43;
      }
      uint64_t v12 = (uint64_t)(v9 + v9) + 1;
    }
    else
    {
      if (v9 <= -4.50359963e15) {
        goto LABEL_43;
      }
      uint64_t v12 = (uint64_t)(v9 + v9);
      if (v12 >= 1) {
        --v12;
      }
    }
    double v9 = (double)(v12 >> 1);
LABEL_43:
    *(void *)(a1 + 16) = (uint64_t)v9;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  *(void *)(a1 + 16) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_45;
  }
LABEL_44:
  operator delete(__p[0]);
LABEL_45:
  strcpy((char *)__p, "supports_park_car_step");
  HIBYTE(__p[2]) = 22;
  BOOL v13 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 24) = v13;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B91B0;
  strcpy((char *)__p[0], "supports_mount_dismount_step");
  BOOL v14 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 25) = v14;
  __p[0] = operator new(0x38uLL);
  *(_OWORD *)&__p[1] = xmmword_20B99F0;
  strcpy((char *)__p[0], "consider_lane_connections_for_intersection_internal");
  BOOL v15 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 26) = v15;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B91A0;
  strcpy((char *)__p[0], "mount_dismount_min_distance");
  double v16 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v16 >= 0.0)
  {
    double v17 = v16;
    if (v16 >= 4.50359963e15) {
      goto LABEL_59;
    }
    uint64_t v18 = (uint64_t)(v16 + v16) + 1;
  }
  else
  {
    double v17 = v16;
    if (v16 <= -4.50359963e15) {
      goto LABEL_59;
    }
    uint64_t v18 = (uint64_t)(v16 + v16);
    if (v18 >= 1) {
      --v18;
    }
  }
  double v17 = (double)(v18 >> 1);
LABEL_59:
  if (v17 < 9.22337204e18)
  {
    if (v16 >= 0.0)
    {
      if (v16 >= 4.50359963e15) {
        goto LABEL_70;
      }
      uint64_t v19 = (uint64_t)(v16 + v16) + 1;
    }
    else
    {
      if (v16 <= -4.50359963e15) {
        goto LABEL_70;
      }
      uint64_t v19 = (uint64_t)(v16 + v16);
      if (v19 >= 1) {
        --v19;
      }
    }
    double v16 = (double)(v19 >> 1);
LABEL_70:
    *(void *)(a1 + 32) = (uint64_t)v16;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_71;
  }
  *(void *)(a1 + 32) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_72;
  }
LABEL_71:
  operator delete(__p[0]);
LABEL_72:
  HIBYTE(__p[2]) = 20;
  strcpy((char *)__p, "estimated_lane_width");
  double v20 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v20 >= 0.0)
  {
    double v21 = v20;
    if (v20 >= 4.50359963e15) {
      goto LABEL_80;
    }
    uint64_t v22 = (uint64_t)(v20 + v20) + 1;
  }
  else
  {
    double v21 = v20;
    if (v20 <= -4.50359963e15) {
      goto LABEL_80;
    }
    uint64_t v22 = (uint64_t)(v20 + v20);
    if (v22 >= 1) {
      --v22;
    }
  }
  double v21 = (double)(v22 >> 1);
LABEL_80:
  if (v21 < 9.22337204e18)
  {
    if (v20 >= 0.0)
    {
      if (v20 >= 4.50359963e15) {
        goto LABEL_91;
      }
      uint64_t v23 = (uint64_t)(v20 + v20) + 1;
    }
    else
    {
      if (v20 <= -4.50359963e15) {
        goto LABEL_91;
      }
      uint64_t v23 = (uint64_t)(v20 + v20);
      if (v23 >= 1) {
        --v23;
      }
    }
    double v20 = (double)(v23 >> 1);
LABEL_91:
    *(void *)(a1 + 40) = (uint64_t)v20;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_92;
  }
  *(void *)(a1 + 40) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_93;
  }
LABEL_92:
  operator delete(__p[0]);
LABEL_93:
  HIBYTE(__p[2]) = 14;
  strcpy((char *)__p, "min_fork_angle");
  double v24 = sub_5C7E8(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(double *)(a1 + 48) = v24;
  HIBYTE(__p[2]) = 14;
  strcpy((char *)__p, "max_fork_angle");
  double v25 = sub_5C7E8(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(double *)(a1 + 56) = v25;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8870;
  strcpy((char *)__p[0], "min_distance_to_next_mnvr");
  double v26 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v26 >= 0.0)
  {
    double v27 = v26;
    if (v26 >= 4.50359963e15) {
      goto LABEL_105;
    }
    uint64_t v28 = (uint64_t)(v26 + v26) + 1;
  }
  else
  {
    double v27 = v26;
    if (v26 <= -4.50359963e15) {
      goto LABEL_105;
    }
    uint64_t v28 = (uint64_t)(v26 + v26);
    if (v28 >= 1) {
      --v28;
    }
  }
  double v27 = (double)(v28 >> 1);
LABEL_105:
  if (v27 < 9.22337204e18)
  {
    if (v26 >= 0.0)
    {
      if (v26 >= 4.50359963e15) {
        goto LABEL_116;
      }
      uint64_t v29 = (uint64_t)(v26 + v26) + 1;
    }
    else
    {
      if (v26 <= -4.50359963e15) {
        goto LABEL_116;
      }
      uint64_t v29 = (uint64_t)(v26 + v26);
      if (v29 >= 1) {
        --v29;
      }
    }
    double v26 = (double)(v29 >> 1);
LABEL_116:
    *(void *)(a1 + 64) = (uint64_t)v26;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_118;
    }
    goto LABEL_117;
  }
  *(void *)(a1 + 64) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_118;
  }
LABEL_117:
  operator delete(__p[0]);
LABEL_118:
  strcpy((char *)__p, "max_next_step_fraction");
  HIBYTE(__p[2]) = 22;
  double v30 = sub_5C7E8(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(double *)(a1 + 72) = v30;
  strcpy((char *)__p, "max_extension_distance");
  HIBYTE(__p[2]) = 22;
  double v31 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v31 >= 0.0)
  {
    double v32 = v31;
    if (v31 >= 4.50359963e15) {
      goto LABEL_128;
    }
    uint64_t v33 = (uint64_t)(v31 + v31) + 1;
  }
  else
  {
    double v32 = v31;
    if (v31 <= -4.50359963e15) {
      goto LABEL_128;
    }
    uint64_t v33 = (uint64_t)(v31 + v31);
    if (v33 >= 1) {
      --v33;
    }
  }
  double v32 = (double)(v33 >> 1);
LABEL_128:
  if (v32 < 9.22337204e18)
  {
    if (v31 >= 0.0)
    {
      if (v31 >= 4.50359963e15) {
        goto LABEL_139;
      }
      uint64_t v34 = (uint64_t)(v31 + v31) + 1;
    }
    else
    {
      if (v31 <= -4.50359963e15) {
        goto LABEL_139;
      }
      uint64_t v34 = (uint64_t)(v31 + v31);
      if (v34 >= 1) {
        --v34;
      }
    }
    double v31 = (double)(v34 >> 1);
LABEL_139:
    *(void *)(a1 + 80) = (uint64_t)v31;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_141;
    }
    goto LABEL_140;
  }
  *(void *)(a1 + 80) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_141;
  }
LABEL_140:
  operator delete(__p[0]);
LABEL_141:
  strcpy((char *)__p, "min_segment_end_offset");
  HIBYTE(__p[2]) = 22;
  double v35 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v35 >= 0.0)
  {
    double v36 = v35;
    if (v35 >= 4.50359963e15) {
      goto LABEL_149;
    }
    uint64_t v37 = (uint64_t)(v35 + v35) + 1;
  }
  else
  {
    double v36 = v35;
    if (v35 <= -4.50359963e15) {
      goto LABEL_149;
    }
    uint64_t v37 = (uint64_t)(v35 + v35);
    if (v37 >= 1) {
      --v37;
    }
  }
  double v36 = (double)(v37 >> 1);
LABEL_149:
  if (v36 < 9.22337204e18)
  {
    if (v35 >= 0.0)
    {
      if (v35 >= 4.50359963e15) {
        goto LABEL_160;
      }
      uint64_t v38 = (uint64_t)(v35 + v35) + 1;
    }
    else
    {
      if (v35 <= -4.50359963e15) {
        goto LABEL_160;
      }
      uint64_t v38 = (uint64_t)(v35 + v35);
      if (v38 >= 1) {
        --v38;
      }
    }
    double v35 = (double)(v38 >> 1);
LABEL_160:
    *(void *)(a1 + 88) = (uint64_t)v35;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_162;
    }
    goto LABEL_161;
  }
  *(void *)(a1 + 88) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_162;
  }
LABEL_161:
  operator delete(__p[0]);
LABEL_162:
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8E90;
  strcpy((char *)__p[0], "enable_towards_parking_guidance");
  BOOL v39 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 96) = v39;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8890;
  strcpy((char *)__p[0], "enable_walking_light_guidance");
  BOOL v40 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 97) = v40;
  __p[0] = operator new(0x38uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9A60;
  strcpy((char *)__p[0], "walking_light_guidance_min_step_distance_initial");
  double v41 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v41 >= 0.0)
  {
    double v42 = v41;
    if (v41 >= 4.50359963e15) {
      goto LABEL_174;
    }
    uint64_t v43 = (uint64_t)(v41 + v41) + 1;
  }
  else
  {
    double v42 = v41;
    if (v41 <= -4.50359963e15) {
      goto LABEL_174;
    }
    uint64_t v43 = (uint64_t)(v41 + v41);
    if (v43 >= 1) {
      --v43;
    }
  }
  double v42 = (double)(v43 >> 1);
LABEL_174:
  if (v42 >= 9.22337204e18)
  {
    *(void *)(a1 + 104) = 0x7FFFFFFFFFFFFFFELL;
    if (SHIBYTE(__p[2]) < 0) {
      goto LABEL_186;
    }
    return a1;
  }
  if (v41 >= 0.0)
  {
    if (v41 >= 4.50359963e15) {
      goto LABEL_185;
    }
    uint64_t v44 = (uint64_t)(v41 + v41) + 1;
  }
  else
  {
    if (v41 <= -4.50359963e15) {
      goto LABEL_185;
    }
    uint64_t v44 = (uint64_t)(v41 + v41);
    if (v44 >= 1) {
      --v44;
    }
  }
  double v41 = (double)(v44 >> 1);
LABEL_185:
  *(void *)(a1 + 104) = (uint64_t)v41;
  if (SHIBYTE(__p[2]) < 0) {
LABEL_186:
  }
    operator delete(__p[0]);
  return a1;
}

void sub_8270A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_827104(uint64_t a1, uint64_t a2, long long *a3, char a4)
{
  *(void *)a1 = a2;
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200((unsigned char *)(a1 + 8), *(void **)a3, *((void *)a3 + 1));
    uint64_t v8 = *(void **)a1;
  }
  else
  {
    long long v7 = *a3;
    *(void *)(a1 + 24) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v7;
    uint64_t v8 = (void *)a2;
  }
  *(void *)(a1 + 32) = sub_3750CC(v8);
  *(unsigned char *)(a1 + 40) = a4;
  char v21 = 11;
  uint64_t v19 = 0;
  strcpy((char *)v20, "StepBuilder");
  double v17 = 0;
  uint64_t v18 = 0;
  double v9 = sub_374CDC(a2, (uint64_t)v20, (uint64_t *)&v17);
  sub_3CB560(v9, (uint64_t)__p);
  sub_82A1BC(a1 + 48, __p);
  double v10 = v23;
  if (v23)
  {
    do
    {
      BOOL v15 = *(char **)v10;
      sub_57AC8((uint64_t *)v10 + 5);
      if (v10[39] < 0) {
        operator delete(*((void **)v10 + 2));
      }
      operator delete(v10);
      double v10 = v15;
    }
    while (v15);
  }
  uint64_t v11 = __p[0];
  __p[0] = 0;
  if (v11) {
    operator delete(v11);
  }
  uint64_t v12 = (void **)v17;
  if (v17)
  {
    BOOL v13 = v18;
    BOOL v14 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v13 - 1) < 0) {
          operator delete(*(v13 - 3));
        }
        v13 -= 3;
      }
      while (v13 != v12);
      BOOL v14 = v17;
    }
    uint64_t v18 = v12;
    operator delete(v14);
  }
  if (v21 < 0) {
    operator delete(v20[0]);
  }
  return a1;
}

void sub_82728C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  sub_5450C((uint64_t)&a19);
  sub_1A668(&a10);
  if (a18 < 0)
  {
    operator delete(__p);
    if ((*(char *)(v19 + 31) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(a1);
  }
  else if ((*(char *)(v19 + 31) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v20);
  _Unwind_Resume(a1);
}

void sub_8272F4(void **a1, void *a2, void *a3)
{
  uint64_t v6 = sub_45FC7C(a2);
  if (v6)
  {
    uint64_t v7 = v6;
    for (uint64_t i = 0; i != v7; ++i)
    {
      double v9 = (void *)sub_45FB28(a2, i);
      uint64_t v10 = sub_6467E8(a3, i);
      sub_827378(a1, v9, v10);
    }
  }
}

void sub_827378(void **a1, void *a2, uint64_t a3)
{
  if (sub_45FB38(a2)) {
    return;
  }
  sub_827598((void *)a3, (uint64_t)&v17);
  if (v18 != v17)
  {
    unint64_t v6 = 0;
    uint64_t v7 = (v18 - (unsigned char *)v17) / 56;
    do
      sub_827854((uint64_t)a1, a2, &v17, v6++, a3);
    while (v7 != v6);
  }
  uint64_t v8 = *(void *)(a3 + 9960);
  uint64_t v9 = *(void *)(a3 + 9952);
  while (v8 != v9)
  {
    uint64_t v10 = *(void **)(v8 - 152);
    if (v10)
    {
      *(void *)(v8 - 144) = v10;
      operator delete(v10);
    }
    uint64_t v11 = *(void **)(v8 - 192);
    if (v11)
    {
      *(void *)(v8 - 184) = v11;
      operator delete(v11);
    }
    v8 -= 192;
  }
  *(void *)(a3 + 9960) = v9;
  sub_823C74((char **)(a3 + 9952));
  sub_823E4C((uint64_t)a1, (void *)a3);
  uint64_t v12 = *(void *)(a3 + 1064);
  uint64_t v13 = *(void *)(a3 + 1072);
  while (v12 != v13)
  {
    if (*(unsigned char *)(v12 + 893)) {
      BOOL v15 = *(unsigned char *)(v12 + 892) == 0;
    }
    else {
      BOOL v15 = 1;
    }
    if (!v15)
    {
      int v16 = *(_DWORD *)(v12 + 160);
      switch(v16)
      {
        case 3:
          int v14 = 64;
LABEL_14:
          *(_DWORD *)(v12 + 160) = v14;
          break;
        case 20:
          int v14 = 65;
          goto LABEL_14;
        case 21:
          int v14 = 66;
          goto LABEL_14;
      }
    }
    v12 += 2400;
  }
  sub_828294();
  sub_71D718(v19, *a1);
  sub_71D7B8((uint64_t)v19, (uint64_t)a2, (void *)a3);
  if (v20 < 0) {
    operator delete((void *)v19[11]);
  }
  sub_828954((uint64_t)a1, (void *)a3);
  sub_824970((uint64_t)a1, (void *)a3);
  sub_824A7C((uint64_t)a1, (void *)a3);
  if (v17)
  {
    uint64_t v18 = v17;
    operator delete(v17);
  }
}

void sub_827548(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0)
  {
    operator delete(__p);
    double v30 = a10;
    if (!a10) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    double v30 = a10;
    if (!a10) {
      goto LABEL_3;
    }
  }
  operator delete(v30);
  _Unwind_Resume(exception_object);
}

uint64_t sub_827598@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  unsigned int v4 = sub_46CABC((uint64_t)a1);
  unsigned int v5 = sub_46CAC4((uint64_t)a1);
  unint64_t v6 = sub_46C760(a1);
  if (v6)
  {
    for (uint64_t i = 0; v6 != i; ++i)
    {
      uint64_t v9 = (int **)sub_46C8EC(a1, i);
      uint64_t v10 = (char *)*v9;
      uint64_t v11 = (unsigned __int16 *)((char *)*v9 - **v9);
      unsigned int v12 = *v11;
      if (*((unsigned char *)v9 + 38))
      {
        if (v12 < 0xB) {
          goto LABEL_14;
        }
        unsigned int v13 = v11[5];
        if (!v13 || (*(_DWORD *)&v10[v13] & 2) == 0) {
          goto LABEL_14;
        }
      }
      else if (v12 < 0xB || (unsigned int v14 = v11[5]) == 0 || (*(_DWORD *)&v10[v14] & 1) == 0)
      {
LABEL_14:
        if (i)
        {
          unint64_t v25 = i;
          uint64_t v26 = 0;
          char v24 = 0;
          double v23 = (double)v4 / 1000000000.0;
          double v22 = 1.0;
          char v21 = 0;
          sub_82F21C((char **)a2, &v26, (uint64_t *)&v25, &v24, (uint64_t *)&v23, (uint64_t *)&v22, &v21);
        }
        uint64_t v26 = i;
        unint64_t v25 = sub_46C760(a1) - 1;
        char v24 = 2;
        double v23 = 1.0;
        double v22 = (double)v5 / 1000000000.0;
        return (uint64_t)sub_82F3FC((char **)a2, &v26, (uint64_t *)&v25, &v24, (uint64_t *)&v23, (uint64_t *)&v22);
      }
    }
  }
  int v16 = *(char **)a2;
  BOOL v15 = *(char **)(a2 + 8);
  if (*(char **)a2 != v15) {
    goto LABEL_30;
  }
  uint64_t v26 = 0;
  unint64_t v25 = sub_46C760(a1) - 1;
  char v24 = 0;
  double v22 = (double)v5 / 1000000000.0;
  double v23 = (double)v4 / 1000000000.0;
  sub_82F3FC((char **)a2, &v26, (uint64_t *)&v25, &v24, (uint64_t *)&v23, (uint64_t *)&v22);
  int v16 = *(char **)a2;
  BOOL v15 = *(char **)(a2 + 8);
  if (*(char **)a2 != v15)
  {
LABEL_30:
    do
    {
      unint64_t v19 = *(void *)v16;
      unint64_t v18 = *((void *)v16 + 1);
      if (*(void *)v16 <= v18) {
        unint64_t v20 = *((void *)v16 + 1);
      }
      else {
        unint64_t v20 = *(void *)v16;
      }
      if (*(void *)v16 < v18)
      {
        do
          *((void *)v16 + 6) += sub_46CCC8(a1, v19++, v7);
        while (v20 != v19);
      }
      v16 += 56;
    }
    while (v16 != v15);
    BOOL v15 = *(char **)(a2 + 8);
  }
  uint64_t result = sub_46CCC8(a1, *((void *)v15 - 6), v7);
  *((void *)v15 - 1) += result;
  return result;
}

void sub_827814(_Unwind_Exception *exception_object)
{
  unint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_827854(uint64_t a1, void *a2, void *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_824E24(a3, a4);
  uint64_t v10 = v9;
  unint64_t v107 = a4;
  if (!a4) {
    sub_828B28(a1, (uint64_t)a2, a5, *(unsigned __int8 *)(v9 + 16));
  }
  uint64_t v113 = a5;
  uint64_t v11 = (uint64_t)(*(void *)(a5 + 9960) - *(void *)(a5 + 9952)) >> 6;
  uint64_t v109 = v10;
  if (*(unsigned char *)(v10 + 16) == 2)
  {
    uint64_t result = sub_8297EC();
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * v11;
    uint64_t v14 = *(void *)(v113 + 1072);
    if (*(void *)(v113 + 1064) == v14) {
      goto LABEL_6;
    }
  }
  else if (*(unsigned char *)(v10 + 16))
  {
    uint64_t result = sub_829CD4();
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * v11;
    uint64_t v14 = *(void *)(v113 + 1072);
    if (*(void *)(v113 + 1064) == v14) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t result = sub_829304();
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * v11;
    uint64_t v14 = *(void *)(v113 + 1072);
    if (*(void *)(v113 + 1064) == v14)
    {
LABEL_6:
      unint64_t v15 = 0;
      goto LABEL_11;
    }
  }
  unint64_t v15 = *(void *)(v14 - 2376);
LABEL_11:
  unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v113 + 9960) - *(void *)(v113 + 9952)) >> 6);
  uint64_t v106 = a3;
  BOOL v17 = v13 >= v16;
  if (v13 > v16) {
    unint64_t v16 = v13;
  }
  unint64_t v105 = v16;
  if (!v17)
  {
    unint64_t v18 = v13;
    BOOL v110 = 0;
    uint64_t v104 = (uint64_t *)(v113 + 1064);
    while (1)
    {
      unint64_t v108 = v18;
      uint64_t v20 = sub_68F6BC((void *)(v113 + 9952), v18);
      int v112 = *(_DWORD *)(v20 + 24);
      unint64_t v114 = *(void *)(v20 + 32);
      uint64_t v22 = *(void *)v20;
      uint64_t v21 = *(void *)(v20 + 8);
      sub_46B058();
      unint64_t v25 = (void *)sub_46C8EC(v24, v23 + v114);
      sub_46B058();
      uint64_t v26 = (v21 - v22) >> 3;
      unint64_t v27 = v114 + v26 - 1;
      double v30 = (int **)sub_46C8EC(v29, v27 + v28);
      uint64_t v32 = v15 <= v27 ? v114 + v26 - 1 : v15;
      if (v15 >= v27)
      {
        uint64_t v134 = 0;
        unint64_t v35 = v15;
        if (v15 == v27) {
          goto LABEL_24;
        }
      }
      else
      {
        unint64_t v33 = v15;
        uint64_t v34 = 0;
        do
          v34 += sub_46CCC8(a2, v33++, v31);
        while (v32 != v33);
        uint64_t v134 = v34;
        unint64_t v35 = v15;
        if (v15 == v27)
        {
LABEL_24:
          int v36 = 0;
          uint64_t v133 = 0;
          unint64_t v15 = v35;
          goto LABEL_46;
        }
      }
      uint64_t v37 = a2[66];
      uint64_t v38 = 4 * v35;
      BOOL v39 = (int32x4_t *)(v37 + 4 * v35);
      unint64_t v40 = 4 * (v114 + v26) - 4 * v35 - 8;
      uint64_t v41 = (v40 >> 2) + 1;
      if (v40 < 0x1C) {
        break;
      }
      uint64_t v43 = (int32x4_t *)((char *)v39 + 4 * (v41 & 0x7FFFFFFFFFFFFFF8));
      uint64_t v44 = v39 + 1;
      int32x4_t v45 = 0uLL;
      uint64_t v46 = v41 & 0x7FFFFFFFFFFFFFF8;
      int32x4_t v47 = 0uLL;
      do
      {
        int32x4_t v45 = vaddq_s32(v44[-1], v45);
        int32x4_t v47 = vaddq_s32(*v44, v47);
        v44 += 2;
        v46 -= 8;
      }
      while (v46);
      int v42 = vaddvq_s32(vaddq_s32(v47, v45));
      if (v41 != (v41 & 0x7FFFFFFFFFFFFFF8)) {
        goto LABEL_31;
      }
LABEL_33:
      HIDWORD(v133) = v42;
      uint64_t v50 = a2[69];
      uint64_t v51 = (int *)(v50 + 4 * v15);
      if (v40 < 0x1C)
      {
        int v52 = 0;
LABEL_38:
        long long v57 = (int *)(v50 + 4 * v27);
        do
        {
          int v58 = *v51++;
          v52 += v58;
        }
        while (v51 != v57);
        goto LABEL_40;
      }
      v51 += v41 & 0x7FFFFFFFFFFFFFF8;
      double v53 = (int32x4_t *)(v50 + v38 + 16);
      int32x4_t v54 = 0uLL;
      uint64_t v55 = v41 & 0x7FFFFFFFFFFFFFF8;
      int32x4_t v56 = 0uLL;
      do
      {
        int32x4_t v54 = vaddq_s32(v53[-1], v54);
        int32x4_t v56 = vaddq_s32(*v53, v56);
        v53 += 2;
        v55 -= 8;
      }
      while (v55);
      int v52 = vaddvq_s32(vaddq_s32(v56, v54));
      if (v41 != (v41 & 0x7FFFFFFFFFFFFFF8)) {
        goto LABEL_38;
      }
LABEL_40:
      LODWORD(v133) = v52;
      uint64_t v59 = a2[72];
      int v60 = (int *)(v59 + 4 * v15);
      if (v40 < 0x1C)
      {
        int v36 = 0;
        do
        {
LABEL_45:
          int v65 = *v60++;
          v36 += v65;
        }
        while (v60 != (int *)(v59 + 4 * v27));
        goto LABEL_46;
      }
      v60 += v41 & 0x7FFFFFFFFFFFFFF8;
      uint64_t v61 = (int32x4_t *)(v59 + v38 + 16);
      int32x4_t v62 = 0uLL;
      uint64_t v63 = v41 & 0x7FFFFFFFFFFFFFF8;
      int32x4_t v64 = 0uLL;
      do
      {
        int32x4_t v62 = vaddq_s32(v61[-1], v62);
        int32x4_t v64 = vaddq_s32(*v61, v64);
        v61 += 2;
        v63 -= 8;
      }
      while (v63);
      int v36 = vaddvq_s32(vaddq_s32(v64, v62));
      if (v41 != (v41 & 0x7FFFFFFFFFFFFFF8)) {
        goto LABEL_45;
      }
LABEL_46:
      int v132 = v36;
      uint64_t v66 = (unsigned __int16 *)(*v25 - *(int *)*v25);
      if (*v66 >= 0xBu && (uint64_t v67 = v66[5]) != 0)
      {
        int v68 = (*(_DWORD *)(*v25 + v67) & 0x8000) == 0;
        if ((*(_DWORD *)(*v25 + v67) & 8) != 0)
        {
          int v69 = 4;
          goto LABEL_63;
        }
      }
      else
      {
        int v68 = 1;
      }
      int v70 = (char *)*v30;
      uint64_t v71 = (unsigned __int16 *)((char *)*v30 - **v30);
      unsigned int v72 = *v71;
      if (!*((unsigned char *)v30 + 38))
      {
        if (v72 < 0xB || (unsigned int v74 = v71[5]) == 0 || (*(_DWORD *)&v70[v74] & 1) == 0)
        {
LABEL_62:
          int v69 = 2;
          goto LABEL_63;
        }
        goto LABEL_59;
      }
      if (v72 < 0xB) {
        goto LABEL_62;
      }
      unsigned int v73 = v71[5];
      int v69 = 2;
      if (v73)
      {
        if ((*(_DWORD *)&v70[v73] & 2) == 0) {
          goto LABEL_62;
        }
LABEL_59:
        if (*(unsigned char *)(v109 + 16) == 2) {
          int v69 = 2;
        }
        else {
          int v69 = 5;
        }
      }
LABEL_63:
      BOOL v110 = (*(unsigned __int8 *)(v20 + 170) | v110) != 0;
      if (*(unsigned char *)(a1 + 72) && !*(unsigned char *)(v109 + 40) && *(void *)(v109 + 8) <= v27)
      {
        v115[0] = 0;
        v115[1] = 0;
        *(void *)&long long v116 = 0;
        __p[0] = (void *)-1;
        uint64_t v118 = 0;
        uint64_t v119 = 0;
        __p[1] = 0;
        int v120 = 0;
        *(void *)&long long v75 = -1;
        *((void *)&v75 + 1) = -1;
        long long v121 = v75;
        long long v122 = v75;
        long long v123 = v75;
        uint64_t v124 = -1;
        int v125 = 0;
        uint64_t v126 = -1;
        int v127 = 0;
        long long v128 = xmmword_20E2060;
        __int16 v129 = 0;
        char v130 = 0;
        *(void *)((char *)v131 + 7) = 0;
        v131[0] = 0;
        DWORD2(v116) = 16;
        sub_82EEDC((uint64_t)v135, (uint64_t)v115, &v134, (_DWORD *)&v133 + 1, &v133, &v132);
        if (v68 != *(unsigned __int8 *)(v113 + 1057))
        {
          char v151 = v68;
          char v152 = 1;
        }
        unint64_t v136 = v114;
        uint64_t v137 = v114 + v26 - 1;
        unint64_t v143 = v114;
        uint64_t v144 = sub_46CCC8(a2, v114, v76);
        uint64_t v78 = sub_46CE8C(a2, v143, v77);
        uint64_t v145 = v144 + v78;
        uint64_t v142 = v144 + v78;
        unint64_t v139 = v15;
        unint64_t v79 = *(void *)(v113 + 1072);
        if (v79 >= *(void *)(v113 + 1080))
        {
          uint64_t v80 = sub_82F5CC(v104, (uint64_t)v135);
          uint64_t v81 = v113;
        }
        else
        {
          sub_5940FC(*(void *)(v113 + 1072), (uint64_t)v135);
          uint64_t v80 = v79 + 2400;
          uint64_t v81 = v113;
          *(void *)(v113 + 1072) = v79 + 2400;
        }
        *(void *)(v81 + 1072) = v80;
        uint64_t v133 = 0;
        uint64_t v134 = 0;
        int v132 = 0;
        unint64_t v15 = v137;
        sub_575E00((uint64_t)v135);
        if (__p[1])
        {
          uint64_t v118 = (uint64_t)__p[1];
          operator delete(__p[1]);
        }
        if (v115[0])
        {
          v115[1] = v115[0];
          operator delete(v115[0]);
        }
      }
      uint64_t result = (uint64_t)v106;
      if (0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v106[1] - *v106) >> 3) - 1 <= v107)
      {
        uint64_t v82 = 0;
        if (!*(unsigned char *)(a1 + 73)) {
          goto LABEL_82;
        }
      }
      else
      {
        uint64_t result = sub_824E24(v106, v107 + 1);
        uint64_t v82 = *(void *)(result + 48);
        if (!*(unsigned char *)(a1 + 73)) {
          goto LABEL_82;
        }
      }
      if (*(void *)(v109 + 8) <= v27 && !*(unsigned char *)(v109 + 40) && *(void *)(a1 + 80) <= v82)
      {
        int v86 = v112;
        if (!v112) {
          int v86 = 3;
        }
        int v112 = v86;
        int v87 = *(unsigned __int8 *)(v109 + 16);
        if (*(void *)v109) {
          BOOL v85 = 0;
        }
        else {
          BOOL v85 = v87 == 2;
        }
        if (*(void *)v109) {
          BOOL v83 = v87 == 2;
        }
        else {
          BOOL v83 = 0;
        }
        uint64_t v84 = v87 == 3;
        goto LABEL_95;
      }
LABEL_82:
      if (v112)
      {
        BOOL v83 = 0;
        uint64_t v84 = 0;
        BOOL v85 = 0;
LABEL_95:
        sub_82EEDC((uint64_t)v135, v20, &v134, (_DWORD *)&v133 + 1, &v133, &v132);
        int v146 = v112;
        if (v85 || v83)
        {
          int v91 = 0;
          uint64_t v90 = -1;
          uint64_t v118 = -1;
          *(void *)&long long v92 = -1;
          *((void *)&v92 + 1) = -1;
          long long v116 = v92;
          *(_OWORD *)long long __p = v92;
          *(_OWORD *)long long v115 = v92;
          double v89 = 0.0;
        }
        else
        {
          long long v88 = *(_OWORD *)(v20 + 88);
          *(_OWORD *)long long v115 = *(_OWORD *)(v20 + 72);
          long long v116 = v88;
          *(_OWORD *)long long __p = *(_OWORD *)(v20 + 104);
          uint64_t v118 = *(void *)(v20 + 120);
          double v89 = *(double *)(v20 + 128);
          uint64_t v90 = *(void *)(v20 + 136);
          int v91 = *(_DWORD *)(v20 + 144);
        }
        long long v153 = *(_OWORD *)v115;
        long long v154 = v116;
        long long v155 = *(_OWORD *)__p;
        uint64_t v156 = v118;
        double v157 = v89;
        uint64_t v158 = v90;
        int v159 = v91;
        unint64_t v160 = (v84 << 8) | ((unint64_t)v83 << 16) | v85;
        if (v149 != -1) {
          uint64_t v138 = v149 + v114;
        }
        unint64_t v136 = v114;
        uint64_t v137 = v27;
        unint64_t v139 = v15;
        char v150 = v69;
        if (v68 != *(unsigned __int8 *)(v113 + 1057) && v69 != 4)
        {
          char v151 = v68;
          char v152 = 1;
        }
        if (v147 == -1 || v148 == 0x7FFFFFFFFFFFFFFFLL)
        {
          uint64_t v98 = sub_46CCC8((void *)v113, v114, v89);
          unint64_t v140 = v114;
          uint64_t v99 = *(void *)(a1 + 56);
          if (v99 >= v98) {
            uint64_t v99 = v98;
          }
          uint64_t v96 = v98 - v99;
          uint64_t v97 = v114;
        }
        else
        {
          unint64_t v140 = v147 + v114;
          uint64_t v94 = sub_46CCC8((void *)v113, v147 + v114, v89);
          uint64_t v96 = v148;
          uint64_t v97 = v140;
          if (v94 < v148) {
            uint64_t v96 = v94;
          }
        }
        uint64_t v141 = v96;
        uint64_t v100 = sub_46CE8C((void *)v113, v97, v95);
        uint64_t v142 = v141 + v100;
        unint64_t v143 = v27;
        uint64_t v144 = 0;
        uint64_t v102 = sub_46CE8C((void *)v113, v27, v101);
        uint64_t v145 = v144 + v102;
        unint64_t v103 = *(void *)(v113 + 1072);
        if (v103 < *(void *)(v113 + 1080)) {
          uint64_t v19 = sub_5A9F18(v103, (uint64_t)v135) + 2400;
        }
        else {
          uint64_t v19 = sub_82F760(v104, (uint64_t)v135);
        }
        *(void *)(v113 + 1072) = v19;
        uint64_t v133 = 0;
        uint64_t v134 = 0;
        int v132 = 0;
        uint64_t result = sub_575E00((uint64_t)v135);
        BOOL v110 = 0;
        unint64_t v15 = v27;
        unint64_t v18 = v108 + 1;
        if (v108 + 1 == v105) {
          goto LABEL_115;
        }
      }
      else
      {
        unint64_t v18 = v108 + 1;
        if (v108 + 1 == v105) {
          goto LABEL_115;
        }
      }
    }
    int v42 = 0;
    uint64_t v43 = v39;
LABEL_31:
    unsigned __int16 v48 = (int32x4_t *)(v37 + 4 * v27);
    do
    {
      __int32 v49 = v43->i32[0];
      uint64_t v43 = (int32x4_t *)((char *)v43 + 4);
      v42 += v49;
    }
    while (v43 != v48);
    goto LABEL_33;
  }
LABEL_115:
  if (0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v106[1] - *v106) >> 3) - 1 == v107) {
    return sub_828D90();
  }
  return result;
}

void sub_828220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
}

void sub_828268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_82827C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
}

uint64_t sub_828294()
{
  uint64_t v0 = __chkstk_darwin();
  uint64_t v2 = v1;
  uint64_t v75 = v0;
  sub_6A4390(v78, *(void *)v0, 1, *(unsigned __int8 *)(v0 + 74), v0 + 8);
  unint64_t v3 = 0x2FC962FC962FC963 * ((uint64_t)(*(void *)(v2 + 1072) - *(void *)(v2 + 1064)) >> 5);
  if (v3 >= 3 && *(unsigned char *)(v2 + 1056) == 0)
  {
    unint64_t v6 = v3 - 1;
    if (v6 <= 1) {
      uint64_t v7 = 1;
    }
    else {
      uint64_t v7 = v6;
    }
    uint64_t v8 = 1;
    do
    {
      uint64_t v9 = sub_51690C((void *)(v2 + 1064), v8++);
      uint64_t v10 = sub_51690C((void *)(v2 + 1064), v8);
      if (*(unsigned char *)(v9 + 328) != 5) {
        continue;
      }
      unsigned int v11 = *(_DWORD *)(v9 + 160) - 11;
      BOOL v12 = v11 > 0x37;
      uint64_t v13 = (1 << v11) & 0xE00000000C0601;
      if (v12 || v13 == 0) {
        continue;
      }
      unint64_t v15 = *(void *)(v9 + 24);
      uint64_t v16 = *(void *)(v9 + 16) == -1 ? v15 - 1 : *(void *)(v9 + 16);
      if (v16 + 1 != v15) {
        continue;
      }
      uint64_t v17 = v10;
      if (v15 >= sub_46C760((void *)v2)) {
        continue;
      }
      unint64_t v18 = (int **)sub_46C8EC((void *)v2, v16);
      uint64_t v19 = (int **)sub_46C8EC((void *)v2, v15);
      uint64_t v21 = sub_46CCC8((void *)v2, v15, v20);
      unint64_t v22 = (unint64_t)v18[4];
      uint64_t v23 = (int *)sub_2D5D58(*(void *)(v75 + 32), v22 & 0xFFFFFFFFFFFFLL);
      char v24 = (unsigned __int16 *)((char *)v23 - *v23);
      unsigned int v25 = *v24;
      if ((v22 & 0xFF000000000000) != 0)
      {
        if (v25 < 0x29) {
          continue;
        }
        unsigned int v26 = v24[20];
        if (!v26) {
          continue;
        }
      }
      else
      {
        if (v25 < 0x27) {
          continue;
        }
        unsigned int v26 = v24[19];
        if (!v26) {
          continue;
        }
      }
      unsigned int v74 = *(int *)((char *)v23 + v26 + *(int *)((char *)v23 + v26));
      if (v74 >= 3 && v21 >= *(void *)(v75 + 136))
      {
        sub_6A48E0((uint64_t)v78, (uint64_t)v18, 0, &v76);
        uint64_t v27 = *v76;
        uint64_t v28 = v76[1];
        if (*v76 != v28)
        {
          unint64_t v29 = v28 - v27 - 192;
          if (v29 < 0xC0)
          {
            uint64_t v30 = 0;
            uint64_t v31 = *v76;
            goto LABEL_35;
          }
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          unint64_t v34 = v29 / 0xC0 + 1;
          uint64_t v31 = v27 + 192 * (v34 & 0x3FFFFFFFFFFFFFELL);
          unint64_t v35 = (unsigned __int8 *)(v27 + 377);
          uint64_t v36 = v34 & 0x3FFFFFFFFFFFFFELL;
          do
          {
            v32 += *(v35 - 192);
            v33 += *v35;
            v35 += 384;
            v36 -= 2;
          }
          while (v36);
          uint64_t v30 = v33 + v32;
          if (v34 != (v34 & 0x3FFFFFFFFFFFFFELL))
          {
            do
            {
LABEL_35:
              v30 += *(unsigned __int8 *)(v31 + 185);
              v31 += 192;
            }
            while (v31 != v28);
          }
          if (v30 == 2)
          {
            do
            {
              if (*(unsigned char *)(v27 + 185))
              {
                int v38 = *(_DWORD *)(v27 + 24);
                if (!v38 || v38 == 3) {
                  break;
                }
              }
              v27 += 192;
            }
            while (v27 != v28);
            if (v27 != v28 && *(void *)(v17 + 872) >= *(void *)(v75 + 112))
            {
              unint64_t v40 = (unsigned __int16 *)((char *)*v18 - **v18);
              unsigned int v41 = *v40;
              if (*((unsigned char *)v18 + 38))
              {
                if (v41 < 0x49) {
                  goto LABEL_56;
                }
                unsigned int v42 = v40[36];
                if (!v42) {
                  goto LABEL_56;
                }
LABEL_55:
                __int16 v43 = *(_WORD *)((char *)*v18 + v42);
              }
              else
              {
                if (v41 >= 0x4B)
                {
                  unsigned int v42 = v40[37];
                  if (v42) {
                    goto LABEL_55;
                  }
                }
LABEL_56:
                __int16 v43 = -1;
              }
              uint64_t v44 = (unsigned __int16 *)((char *)*v19 - **v19);
              unsigned int v45 = *v44;
              if (*((unsigned char *)v19 + 38))
              {
                if (v45 < 0x4B) {
                  goto LABEL_64;
                }
                unsigned int v46 = v44[37];
                if (!v46) {
                  goto LABEL_64;
                }
LABEL_63:
                int v47 = *(unsigned __int16 *)((char *)*v19 + v46);
              }
              else
              {
                if (v45 >= 0x49)
                {
                  unsigned int v46 = v44[36];
                  if (v46) {
                    goto LABEL_63;
                  }
                }
LABEL_64:
                int v47 = 0xFFFF;
              }
              unsigned __int16 v48 = v43 + 18000;
              unsigned __int16 v49 = v43 - 18000;
              if ((unsigned __int16)(v48 >> 5) < 0x465u) {
                unsigned __int16 v49 = v48;
              }
              int v50 = v47 - v49;
              if (v50 > 18000) {
                v50 -= 36000;
              }
              if (v50 < -17999) {
                v50 += 36000;
              }
              double v51 = (double)v50 / 100.0;
              if (v51 < *(double *)(v75 + 96)) {
                double v51 = *(double *)(v75 + 96);
              }
              if (v51 <= *(double *)(v75 + 104))
              {
                uint64_t v52 = *(void *)(v17 + 872);
                double v53 = (double)v74 * (double)*(uint64_t *)(v75 + 88);
                uint64_t v54 = (uint64_t)(v53 + v53);
                uint64_t v55 = v54 - 1;
                if (v54 < 1) {
                  uint64_t v55 = (uint64_t)(v53 + v53);
                }
                uint64_t v56 = v55 >> 1;
                if (v53 > -4.50359963e15) {
                  double v57 = (double)v56;
                }
                else {
                  double v57 = (double)v74 * (double)*(uint64_t *)(v75 + 88);
                }
                double v58 = (double)((v54 + 1) >> 1);
                if (v53 >= 4.50359963e15) {
                  double v58 = (double)v74 * (double)*(uint64_t *)(v75 + 88);
                }
                if (v53 >= 0.0) {
                  double v59 = v58;
                }
                else {
                  double v59 = v57;
                }
                long double v60 = sin(v51 * 3.14159265 / 180.0);
                double v61 = (double)(uint64_t)v59 / (v60 + v60);
                if (v61 >= 0.0)
                {
                  if (v61 < 4.50359963e15)
                  {
                    uint64_t v62 = (uint64_t)(v61 + v61) + 1;
                    goto LABEL_91;
                  }
                }
                else if (v61 > -4.50359963e15)
                {
                  uint64_t v62 = (uint64_t)(v61 + v61);
                  if (v62 >= 1) {
                    --v62;
                  }
LABEL_91:
                  double v61 = (double)(v62 >> 1);
                }
                uint64_t v63 = (uint64_t)v61;
                double v64 = *(double *)(v75 + 120) * (double)v52;
                uint64_t v65 = (uint64_t)(v64 + v64);
                uint64_t v66 = v65 - 1;
                if (v65 < 1) {
                  uint64_t v66 = (uint64_t)(v64 + v64);
                }
                uint64_t v67 = v66 >> 1;
                if (v64 > -4.50359963e15) {
                  double v68 = (double)v67;
                }
                else {
                  double v68 = *(double *)(v75 + 120) * (double)v52;
                }
                double v69 = (double)((v65 + 1) >> 1);
                if (v64 >= 4.50359963e15) {
                  double v69 = *(double *)(v75 + 120) * (double)v52;
                }
                if (v64 >= 0.0) {
                  double v70 = v69;
                }
                else {
                  double v70 = v68;
                }
                uint64_t v71 = v21 - *(void *)(v75 + 136);
                if (v71 >= (uint64_t)v70) {
                  uint64_t v71 = (uint64_t)v70;
                }
                if (v71 < v63) {
                  uint64_t v63 = v71;
                }
                if (*(void *)(v75 + 128) < v63) {
                  uint64_t v63 = *(void *)(v75 + 128);
                }
                *(void *)(v9 + 112) = v63;
                uint64_t v72 = sub_46CE8C((void *)v2, *(void *)(v9 + 104), v70);
                uint64_t v73 = *(void *)(v9 + 112);
                *(void *)(v9 + 120) = v73 + v72;
                *(void *)(v9 + 872) += v73;
                *(void *)(v17 + 872) -= v73;
                *(void *)(v17 + 48) = *(void *)(v9 + 112);
              }
            }
          }
        }
        uint64_t v37 = v77;
        if (v77 && !atomic_fetch_add(&v77->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
    }
    while (v8 != v7);
  }
  return sub_68D2B0(v78);
}

void sub_828898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_14A84((uint64_t)va);
  sub_68D2B0(va1);
  _Unwind_Resume(a1);
}

void sub_8288B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_8288C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_8288DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_8288F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_828904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_828918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_82892C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_828940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_828954(uint64_t a1, void *a2)
{
  if (*(unsigned char *)(a1 + 145))
  {
    uint64_t v4 = (unsigned __int8 *)operator new(4uLL);
    *(_DWORD *)uint64_t v4 = 807472134;
    uint64_t v5 = a2[134];
    uint64_t v6 = a2[133];
    if ((unint64_t)(0x2FC962FC962FC963 * ((v5 - v6) >> 5)) >= 2)
    {
      unint64_t v7 = 1;
      uint64_t v8 = 3295;
      do
      {
        if (*(void *)(v6 + v8 - 23) >= *(void *)(a1 + 152)) {
          goto LABEL_7;
        }
        uint64_t v11 = *(void *)(v6 + v8 - 879);
        if (v11 == -1) {
          uint64_t v11 = *(void *)(v6 + v8 - 871) - 1;
        }
        BOOL v12 = (void *)sub_46C8EC(a2, v11);
        uint64_t v13 = (unsigned __int16 *)(*v12 - *(int *)*v12);
        if (*v13 >= 0x2Fu && (uint64_t v14 = v13[23]) != 0)
        {
          int v15 = *(unsigned __int8 *)(*v12 + v14);
          if (*v4 == v15) {
            goto LABEL_4;
          }
        }
        else
        {
          int v15 = 32;
          if (*v4 == 32)
          {
LABEL_4:
            uint64_t v9 = 0;
            goto LABEL_5;
          }
        }
        if (v4[1] == v15)
        {
          uint64_t v9 = 1;
        }
        else if (v4[2] == v15)
        {
          uint64_t v9 = 2;
        }
        else
        {
          uint64_t v10 = v4 + 4;
          if (v4[3] != v15) {
            goto LABEL_6;
          }
          uint64_t v9 = 3;
        }
LABEL_5:
        uint64_t v10 = &v4[v9];
LABEL_6:
        *(unsigned char *)(v6 + v8) = v10 - v4 != 4;
        uint64_t v5 = a2[134];
        uint64_t v6 = a2[133];
LABEL_7:
        ++v7;
        v8 += 2400;
      }
      while (v7 < 0x2FC962FC962FC963 * ((v5 - v6) >> 5));
    }
    operator delete(v4);
  }
}

void sub_828B14(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_828B28(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v38 = *(void *)sub_3AEFFC(a2);
  int v36 = *(_DWORD *)(a2 + 768);
  int v37 = v36;
  int v35 = v36;
  if (*(unsigned char *)(a2 + 803))
  {
    BOOL v8 = *(double *)(a2 + 808) > *(double *)(a1 + 48);
    if (sub_64F234(a3))
    {
      if (v8)
      {
LABEL_4:
        if (a4) {
          int v9 = 85;
        }
        else {
          int v9 = 88;
        }
        goto LABEL_17;
      }
    }
    else
    {
      if ((*(unsigned char *)(a1 + 40) & 0xFD) != 9)
      {
        if (v8) {
          int v9 = 25;
        }
        else {
          int v9 = 17;
        }
        goto LABEL_17;
      }
      if (v8) {
        goto LABEL_4;
      }
    }
    int v9 = 85;
  }
  else
  {
    char v10 = sub_64F234(a3);
    int v9 = 85;
    if ((v10 & 1) == 0)
    {
      if ((*(unsigned char *)(a1 + 40) & 0xFD) == 9) {
        int v9 = 85;
      }
      else {
        int v9 = 17;
      }
    }
  }
LABEL_17:
  int v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v19 = -1;
  long long __p = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  int v23 = 0;
  *(void *)&long long v11 = -1;
  *((void *)&v11 + 1) = -1;
  long long v24 = v11;
  long long v25 = v11;
  long long v26 = v11;
  uint64_t v27 = -1;
  int v28 = 0;
  uint64_t v29 = -1;
  int v30 = 0;
  long long v31 = xmmword_20E2060;
  __int16 v32 = 0;
  char v33 = 0;
  *(void *)((char *)v34 + 7) = 0;
  v34[0] = 0;
  int v18 = v9;
  sub_82EEDC((uint64_t)v39, (uint64_t)&v15, &v38, &v37, &v36, &v35);
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  uint64_t v45 = 0;
  uint64_t v43 = 0;
  uint64_t v44 = 0;
  uint64_t v42 = 0;
  if (*(unsigned __int8 *)(a3 + 1056) == a4) {
    char v12 = 5;
  }
  else {
    char v12 = a4;
  }
  char v46 = v12;
  unint64_t v13 = *(void *)(a3 + 1072);
  if (v13 >= *(void *)(a3 + 1080))
  {
    uint64_t v14 = sub_82F5CC((uint64_t *)(a3 + 1064), (uint64_t)v39);
  }
  else
  {
    sub_5940FC(*(void *)(a3 + 1072), (uint64_t)v39);
    uint64_t v14 = v13 + 2400;
    *(void *)(a3 + 1072) = v13 + 2400;
  }
  *(void *)(a3 + 1072) = v14;
  sub_575E00((uint64_t)v39);
  if (__p)
  {
    uint64_t v21 = __p;
    operator delete(__p);
  }
  if (v15)
  {
    uint64_t v16 = v15;
    operator delete(v15);
  }
}

void sub_828D40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
}

void sub_828D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  *(void *)(v36 + 1072) = v37;
  sub_575E00((uint64_t)&a36);
  sub_592058((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_828D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_828D90()
{
  uint64_t v0 = __chkstk_darwin();
  char v46 = v1;
  uint64_t v45 = v2;
  uint64_t v4 = (uint64_t)v3;
  uint64_t v49 = v0;
  uint64_t v51 = v5;
  unint64_t v6 = *(void *)(*(void *)(v5 + 1072) - 2376);
  unint64_t v7 = sub_46C760(v3);
  uint64_t v47 = v7;
  unint64_t v48 = v6;
  unint64_t v50 = v7 - 1;
  if (v6 <= v7 - 1) {
    unint64_t v9 = v7 - 1;
  }
  else {
    unint64_t v9 = v6;
  }
  if (v6 >= v7 - 1)
  {
    int v13 = 0;
    int v12 = 0;
    int v11 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    int v11 = 0;
    int v12 = 0;
    int v13 = 0;
    do
    {
      v10 += sub_46CCC8((void *)v4, v6, v8);
      v11 += *(_DWORD *)sub_71CC9C((void *)(v4 + 528), v6);
      v12 += *(_DWORD *)sub_71CC9C((void *)(v4 + 552), v6);
      v13 += *(_DWORD *)sub_71CC9C((void *)(v4 + 576), v6++);
    }
    while (v9 != v6);
  }
  uint64_t v14 = *(void *)(v51 + 296) + sub_46CCC8((void *)v4, v50, v8) + v10;
  uint64_t v76 = v14;
  int v15 = *(_DWORD *)(v4 + 772);
  int v75 = *(_DWORD *)(*(void *)(v4 + 528) + 4 * v50) + v15 + v11;
  int v74 = *(_DWORD *)(*(void *)(v4 + 552) + 4 * v50) + v15 + v12;
  int v73 = *(_DWORD *)(*(void *)(v4 + 576) + 4 * v50) + v15 + v13;
  uint64_t v16 = (void *)sub_46C8EC((void *)v4, v50);
  uint64_t v17 = (int **)sub_46C8EC((void *)v4, v50);
  int v18 = (unsigned __int16 *)(*v16 - *(int *)*v16);
  if (*v18 >= 0xBu)
  {
    uint64_t v19 = v18[5];
    if (v19)
    {
      if ((*(unsigned char *)(*v16 + v19) & 8) != 0)
      {
        char v25 = 4;
        uint64_t v23 = v49;
        goto LABEL_25;
      }
    }
  }
  double v20 = (char *)*v17;
  uint64_t v21 = (unsigned __int16 *)((char *)*v17 - **v17);
  unsigned int v22 = *v21;
  if (!*((unsigned char *)v17 + 38))
  {
    uint64_t v23 = v49;
    if (v22 < 0xB) {
      goto LABEL_23;
    }
    unsigned int v26 = v21[5];
    if (!v26 || (*(_DWORD *)&v20[v26] & 1) == 0) {
      goto LABEL_23;
    }
LABEL_20:
    if (*(unsigned char *)(v45 + 16) == 2) {
      char v25 = 2;
    }
    else {
      char v25 = 5;
    }
    goto LABEL_25;
  }
  uint64_t v23 = v49;
  if (v22 < 0xB)
  {
LABEL_23:
    char v25 = 2;
    goto LABEL_25;
  }
  unsigned int v24 = v21[5];
  char v25 = 2;
  if (v24)
  {
    if ((*(_DWORD *)&v20[v24] & 2) == 0) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }
LABEL_25:
  sub_6A4390(v72, *(void *)v23, 1, *(unsigned __int8 *)(v23 + 74), v23 + 8);
  int v27 = sub_6A6C20((uint64_t)v72, (void *)v51);
  if ((v27 - 33) <= 0x33 && ((1 << (v27 - 33)) & 0xC000000000003) != 0)
  {
    if ((v46 & 1) != 0
      || *(void *)(v23 + 64) > v14
      && ((uint64_t v28 = *(void *)(v23 + 32), v29 = sub_46C8FC(v51), sub_2E4CD4(v28, *(void *)(v29 + 32)))
       || (uint64_t v30 = *(void *)(v23 + 32),
           uint64_t v31 = sub_46C8FC(v51),
           v32 = (int *)sub_2D5D58(v30, *(unsigned int *)(v31 + 32) | ((unint64_t)*(unsigned __int16 *)(v31 + 36) << 32)), char v33 = (unsigned __int16 *)((char *)v32 - *v32), *v33 >= 0x2Fu)&& (v34 = v33[23]) != 0&& *((unsigned char *)v32 + v34) == 18))
    {
      if (sub_64F348(v51)) {
        int v27 = 82;
      }
      else {
        int v27 = 18;
      }
    }
  }
  uint64_t v52 = 0;
  double v53 = 0;
  uint64_t v54 = 0;
  uint64_t v56 = -1;
  long long __p = 0;
  double v58 = 0;
  uint64_t v59 = 0;
  int v60 = 0;
  *(void *)&long long v35 = -1;
  *((void *)&v35 + 1) = -1;
  long long v61 = v35;
  long long v62 = v35;
  long long v63 = v35;
  uint64_t v64 = -1;
  int v65 = 0;
  uint64_t v66 = -1;
  int v67 = 0;
  long long v68 = xmmword_20E2060;
  __int16 v69 = 0;
  char v70 = 0;
  *(void *)((char *)v71 + 7) = 0;
  v71[0] = 0;
  int v55 = v27;
  sub_82EEDC((uint64_t)v77, (uint64_t)&v52, &v76, &v75, &v74, &v73);
  v77[2] = v50;
  v77[3] = v47;
  v77[13] = v47;
  uint64_t v37 = sub_46CE8C((void *)v51, v47, v36);
  uint64_t v79 = v78 + v37;
  v77[12] = v78 + v37;
  v77[5] = v48;
  char v80 = v25;
  uint64_t v38 = (void *)sub_46C8FC(v4);
  BOOL v39 = (unsigned __int16 *)(*v38 - *(int *)*v38);
  if (*v39 < 0xBu || (uint64_t v40 = v39[5]) == 0)
  {
    LOBYTE(v41) = 1;
    if (*(unsigned char *)(v51 + 1057) == 1) {
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  int v41 = (*(unsigned char *)(*v38 + v40 + 1) & 0x80) == 0;
  if (*(unsigned __int8 *)(v51 + 1057) != v41)
  {
LABEL_41:
    char v81 = v41;
    char v82 = 1;
  }
LABEL_42:
  unint64_t v42 = *(void *)(v51 + 1072);
  if (v42 >= *(void *)(v51 + 1080))
  {
    uint64_t v43 = sub_82F5CC((uint64_t *)(v51 + 1064), (uint64_t)v77);
  }
  else
  {
    sub_5940FC(*(void *)(v51 + 1072), (uint64_t)v77);
    uint64_t v43 = v42 + 2400;
    *(void *)(v51 + 1072) = v42 + 2400;
  }
  *(void *)(v51 + 1072) = v43;
  sub_575E00((uint64_t)v77);
  if (__p)
  {
    double v58 = __p;
    operator delete(__p);
  }
  if (v52)
  {
    double v53 = v52;
    operator delete(v52);
  }
  return sub_68D2B0(v72);
}

void sub_829298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  *(void *)(v42 + 1072) = v41;
  sub_575E00((uint64_t)&STACK[0x1890]);
  sub_592058((uint64_t)&a17);
  sub_68D2B0(&a41);
  _Unwind_Resume(a1);
}

void sub_8292F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
}

uint64_t sub_829304()
{
  uint64_t v0 = __chkstk_darwin();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = v0;
  sub_650C94((uint64_t)v35);
  unint64_t v7 = *v4;
  unint64_t v6 = v4[1];
  uint64_t v31 = v4;
  if (*v4 <= v6 + 1) {
    unint64_t v8 = v6 + 1;
  }
  else {
    unint64_t v8 = *v4;
  }
  if (v7 < v6 + 1)
  {
    unint64_t v9 = *v4;
    do
    {
      while (1)
      {
        uint64_t v10 = sub_46C8EC((void *)v2, v9);
        sub_82F8BC((uint64_t)v35, v10, *(void *)(v5 + 32));
        int v11 = (uint64_t *)sub_415F0((void *)(v2 + 12304), v9);
        uint64_t v13 = v12;
        uint64_t v14 = *v11;
        unint64_t v15 = v39;
        if (v39 == v40 << 6)
        {
          if ((uint64_t)(v39 + 1) < 0) {
            sub_2E00();
          }
          unint64_t v16 = v40 << 7;
          if (v40 << 7 <= (v39 & 0xFFFFFFFFFFFFFFC0) + 64) {
            unint64_t v16 = (v39 & 0xFFFFFFFFFFFFFFC0) + 64;
          }
          if (v39 <= 0x3FFFFFFFFFFFFFFELL) {
            unint64_t v17 = v16;
          }
          else {
            unint64_t v17 = 0x7FFFFFFFFFFFFFFFLL;
          }
          sub_3D110((uint64_t)&v38, v17);
          unint64_t v15 = v39;
        }
        unint64_t v39 = v15 + 1;
        unint64_t v18 = v15 >> 6;
        uint64_t v19 = 1 << v15;
        if ((v14 & v13) != 0) {
          break;
        }
        *(void *)(v38 + 8 * v18) &= ~v19;
        if (v8 == ++v9) {
          goto LABEL_17;
        }
      }
      *(void *)(v38 + 8 * v18) |= v19;
      ++v9;
    }
    while (v8 != v9);
  }
LABEL_17:
  *(_DWORD *)(sub_3AEFFC((uint64_t)v35) + 8) = vcvtad_u64_f64(*((double *)v31 + 3) * 1000000000.0);
  *(_DWORD *)(sub_46CAA4((uint64_t)v35) + 8) = vcvtad_u64_f64(*((double *)v31 + 4) * 1000000000.0);
  sub_46C80C(v2, v32);
  sub_46C818((uint64_t)v35, (char **)v32);
  if (__p)
  {
    uint64_t v34 = __p;
    operator delete(__p);
  }
  if (v32[0])
  {
    v32[1] = v32[0];
    operator delete(v32[0]);
  }
  sub_6A4390(v32, *(void *)v5, 1, *(unsigned __int8 *)(v5 + 74), v5 + 8);
  sub_6A4394((uint64_t)v32, (uint64_t)v35, 0);
  sub_82F9BC((char **)(v2 + 9952), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v2 + 9960) - *(void *)(v2 + 9952)) >> 6)- 0x5555555555555555 * ((v37 - (uint64_t)v36) >> 6));
  uint64_t v20 = (uint64_t)v36;
  uint64_t v21 = v37;
  if (v36 != (void *)v37)
  {
    unsigned int v22 = v36;
    while (1)
    {
      v22[4] += v7;
      uint64_t v23 = v22[9];
      if (v23 != -1) {
        break;
      }
      uint64_t v24 = v22[10];
      if (v24 != -1) {
        goto LABEL_28;
      }
      if (v22[11] != -1 || v22[12] != -1 || v22[13] != -1 || v22[14] != -1 || v22[15] != -1) {
        goto LABEL_29;
      }
LABEL_23:
      v22 += 24;
      if (v22 == (void *)v21) {
        goto LABEL_45;
      }
    }
    v22[9] = v23 + v7;
    uint64_t v24 = v22[10];
    if (v24 != -1) {
LABEL_28:
    }
      v22[10] = v24 + v7;
LABEL_29:
    uint64_t v25 = v22[11];
    if (v25 != -1) {
      v22[11] = v25 + v7;
    }
    uint64_t v26 = v22[12];
    if (v26 != -1) {
      v22[12] = v26 + v7;
    }
    uint64_t v27 = v22[13];
    if (v27 != -1) {
      v22[13] = v27 + v7;
    }
    uint64_t v28 = v22[14];
    if (v28 != -1) {
      v22[14] = v28 + v7;
    }
    uint64_t v29 = v22[15];
    if (v29 != -1) {
      v22[15] = v29 + v7;
    }
    goto LABEL_23;
  }
LABEL_45:
  sub_82FB68((void **)(v2 + 9952), *(void *)(v2 + 9960), v20, v21, 0xAAAAAAAAAAAAAAABLL * ((v21 - v20) >> 6));
  sub_68D2B0(v32);
  return sub_5752F4((uint64_t)v35);
}

void sub_8296FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_68D2B0(va);
  sub_5752F4((uint64_t)&STACK[0x1788]);
  _Unwind_Resume(a1);
}

void sub_8297A4(_Unwind_Exception *a1)
{
}

void sub_8297BC(_Unwind_Exception *a1)
{
}

void sub_8297D4(_Unwind_Exception *a1)
{
}

uint64_t sub_8297EC()
{
  uint64_t v0 = __chkstk_darwin();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = v0;
  sub_652D44((uint64_t)v35);
  unint64_t v7 = *v4;
  unint64_t v6 = v4[1];
  uint64_t v31 = v4;
  if (*v4 <= v6 + 1) {
    unint64_t v8 = v6 + 1;
  }
  else {
    unint64_t v8 = *v4;
  }
  if (v7 < v6 + 1)
  {
    unint64_t v9 = *v4;
    do
    {
      while (1)
      {
        uint64_t v10 = sub_46C8EC((void *)v2, v9);
        sub_8301FC((uint64_t)v35, v10, *(void *)(v5 + 32));
        int v11 = (uint64_t *)sub_415F0((void *)(v2 + 12304), v9);
        uint64_t v13 = v12;
        uint64_t v14 = *v11;
        unint64_t v15 = v39;
        if (v39 == v40 << 6)
        {
          if ((uint64_t)(v39 + 1) < 0) {
            sub_2E00();
          }
          unint64_t v16 = v40 << 7;
          if (v40 << 7 <= (v39 & 0xFFFFFFFFFFFFFFC0) + 64) {
            unint64_t v16 = (v39 & 0xFFFFFFFFFFFFFFC0) + 64;
          }
          if (v39 <= 0x3FFFFFFFFFFFFFFELL) {
            unint64_t v17 = v16;
          }
          else {
            unint64_t v17 = 0x7FFFFFFFFFFFFFFFLL;
          }
          sub_3D110((uint64_t)&v38, v17);
          unint64_t v15 = v39;
        }
        unint64_t v39 = v15 + 1;
        unint64_t v18 = v15 >> 6;
        uint64_t v19 = 1 << v15;
        if ((v14 & v13) != 0) {
          break;
        }
        *(void *)(v38 + 8 * v18) &= ~v19;
        if (v8 == ++v9) {
          goto LABEL_17;
        }
      }
      *(void *)(v38 + 8 * v18) |= v19;
      ++v9;
    }
    while (v8 != v9);
  }
LABEL_17:
  *(_DWORD *)(sub_3AEFFC((uint64_t)v35) + 8) = vcvtad_u64_f64(*((double *)v31 + 3) * 1000000000.0);
  *(_DWORD *)(sub_46CAA4((uint64_t)v35) + 8) = vcvtad_u64_f64(*((double *)v31 + 4) * 1000000000.0);
  sub_46C80C(v2, v32);
  sub_46C818((uint64_t)v35, (char **)v32);
  if (__p)
  {
    uint64_t v34 = __p;
    operator delete(__p);
  }
  if (v32[0])
  {
    v32[1] = v32[0];
    operator delete(v32[0]);
  }
  sub_6B6EC0(v32, *(void *)v5, 1, *(unsigned __int8 *)(v5 + 74), v5 + 8);
  sub_6B6EC4((uint64_t)v32, v35, 0);
  sub_82F9BC((char **)(v2 + 9952), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v2 + 9960) - *(void *)(v2 + 9952)) >> 6)- 0x5555555555555555 * ((v37 - (uint64_t)v36) >> 6));
  uint64_t v20 = (uint64_t)v36;
  uint64_t v21 = v37;
  if (v36 != (void *)v37)
  {
    unsigned int v22 = v36;
    while (1)
    {
      v22[4] += v7;
      uint64_t v23 = v22[9];
      if (v23 != -1) {
        break;
      }
      uint64_t v24 = v22[10];
      if (v24 != -1) {
        goto LABEL_28;
      }
      if (v22[11] != -1 || v22[12] != -1 || v22[13] != -1 || v22[14] != -1 || v22[15] != -1) {
        goto LABEL_29;
      }
LABEL_23:
      v22 += 24;
      if (v22 == (void *)v21) {
        goto LABEL_45;
      }
    }
    v22[9] = v23 + v7;
    uint64_t v24 = v22[10];
    if (v24 != -1) {
LABEL_28:
    }
      v22[10] = v24 + v7;
LABEL_29:
    uint64_t v25 = v22[11];
    if (v25 != -1) {
      v22[11] = v25 + v7;
    }
    uint64_t v26 = v22[12];
    if (v26 != -1) {
      v22[12] = v26 + v7;
    }
    uint64_t v27 = v22[13];
    if (v27 != -1) {
      v22[13] = v27 + v7;
    }
    uint64_t v28 = v22[14];
    if (v28 != -1) {
      v22[14] = v28 + v7;
    }
    uint64_t v29 = v22[15];
    if (v29 != -1) {
      v22[15] = v29 + v7;
    }
    goto LABEL_23;
  }
LABEL_45:
  sub_82FB68((void **)(v2 + 9952), *(void *)(v2 + 9960), v20, v21, 0xAAAAAAAAAAAAAAABLL * ((v21 - v20) >> 6));
  sub_68D2B0(v32);
  return sub_5752F4((uint64_t)v35);
}

void sub_829BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_68D2B0(va);
  sub_5752F4((uint64_t)&STACK[0x1788]);
  _Unwind_Resume(a1);
}

void sub_829C8C(_Unwind_Exception *a1)
{
}

void sub_829CA4(_Unwind_Exception *a1)
{
}

void sub_829CBC(_Unwind_Exception *a1)
{
}

uint64_t sub_829CD4()
{
  uint64_t v0 = __chkstk_darwin();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = v0;
  sub_64EDB0((uint64_t)v35);
  unint64_t v7 = *v4;
  unint64_t v6 = v4[1];
  uint64_t v31 = v4;
  if (*v4 <= v6 + 1) {
    unint64_t v8 = v6 + 1;
  }
  else {
    unint64_t v8 = *v4;
  }
  if (v7 < v6 + 1)
  {
    unint64_t v9 = *v4;
    do
    {
      while (1)
      {
        uint64_t v10 = sub_46C8EC((void *)v2, v9);
        sub_82F8BC((uint64_t)v35, v10, *(void *)(v5 + 32));
        int v11 = (uint64_t *)sub_415F0((void *)(v2 + 12304), v9);
        uint64_t v13 = v12;
        uint64_t v14 = *v11;
        unint64_t v15 = v39;
        if (v39 == v40 << 6)
        {
          if ((uint64_t)(v39 + 1) < 0) {
            sub_2E00();
          }
          unint64_t v16 = v40 << 7;
          if (v40 << 7 <= (v39 & 0xFFFFFFFFFFFFFFC0) + 64) {
            unint64_t v16 = (v39 & 0xFFFFFFFFFFFFFFC0) + 64;
          }
          if (v39 <= 0x3FFFFFFFFFFFFFFELL) {
            unint64_t v17 = v16;
          }
          else {
            unint64_t v17 = 0x7FFFFFFFFFFFFFFFLL;
          }
          sub_3D110((uint64_t)&v38, v17);
          unint64_t v15 = v39;
        }
        unint64_t v39 = v15 + 1;
        unint64_t v18 = v15 >> 6;
        uint64_t v19 = 1 << v15;
        if ((v14 & v13) != 0) {
          break;
        }
        *(void *)(v38 + 8 * v18) &= ~v19;
        if (v8 == ++v9) {
          goto LABEL_17;
        }
      }
      *(void *)(v38 + 8 * v18) |= v19;
      ++v9;
    }
    while (v8 != v9);
  }
LABEL_17:
  *(_DWORD *)(sub_3AEFFC((uint64_t)v35) + 8) = vcvtad_u64_f64(*((double *)v31 + 3) * 1000000000.0);
  *(_DWORD *)(sub_46CAA4((uint64_t)v35) + 8) = vcvtad_u64_f64(*((double *)v31 + 4) * 1000000000.0);
  sub_46C80C(v2, v32);
  sub_46C818((uint64_t)v35, (char **)v32);
  if (__p)
  {
    uint64_t v34 = __p;
    operator delete(__p);
  }
  if (v32[0])
  {
    v32[1] = v32[0];
    operator delete(v32[0]);
  }
  sub_68D1B4(v32, *(void *)v5, 1, *(unsigned __int8 *)(v5 + 74), v5 + 8);
  sub_68D2B4((uint64_t)v32, (uint64_t)v35, 0);
  sub_82F9BC((char **)(v2 + 9952), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v2 + 9960) - *(void *)(v2 + 9952)) >> 6)- 0x5555555555555555 * ((v37 - (uint64_t)v36) >> 6));
  uint64_t v20 = (uint64_t)v36;
  uint64_t v21 = v37;
  if (v36 != (void *)v37)
  {
    unsigned int v22 = v36;
    while (1)
    {
      v22[4] += v7;
      uint64_t v23 = v22[9];
      if (v23 != -1) {
        break;
      }
      uint64_t v24 = v22[10];
      if (v24 != -1) {
        goto LABEL_28;
      }
      if (v22[11] != -1 || v22[12] != -1 || v22[13] != -1 || v22[14] != -1 || v22[15] != -1) {
        goto LABEL_29;
      }
LABEL_23:
      v22 += 24;
      if (v22 == (void *)v21) {
        goto LABEL_45;
      }
    }
    v22[9] = v23 + v7;
    uint64_t v24 = v22[10];
    if (v24 != -1) {
LABEL_28:
    }
      v22[10] = v24 + v7;
LABEL_29:
    uint64_t v25 = v22[11];
    if (v25 != -1) {
      v22[11] = v25 + v7;
    }
    uint64_t v26 = v22[12];
    if (v26 != -1) {
      v22[12] = v26 + v7;
    }
    uint64_t v27 = v22[13];
    if (v27 != -1) {
      v22[13] = v27 + v7;
    }
    uint64_t v28 = v22[14];
    if (v28 != -1) {
      v22[14] = v28 + v7;
    }
    uint64_t v29 = v22[15];
    if (v29 != -1) {
      v22[15] = v29 + v7;
    }
    goto LABEL_23;
  }
LABEL_45:
  sub_82FB68((void **)(v2 + 9952), *(void *)(v2 + 9960), v20, v21, 0xAAAAAAAAAAAAAAABLL * ((v21 - v20) >> 6));
  sub_68D2B0(v32);
  return sub_5752F4((uint64_t)v35);
}

void sub_82A0CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_68D2B0(va);
  sub_5752F4((uint64_t)&STACK[0x1788]);
  _Unwind_Resume(a1);
}

void sub_82A174(_Unwind_Exception *a1)
{
}

void sub_82A18C(_Unwind_Exception *a1)
{
}

void sub_82A1A4(_Unwind_Exception *a1)
{
}

uint64_t sub_82A1BC(uint64_t a1, void *a2)
{
  __p[0] = operator new(0x28uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9240;
  strcpy((char *)__p[0], "start_with_u_turn_speed_threshold_kph");
  double v4 = sub_5C7E8(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(double *)a1 = v4;
  __p[0] = operator new(0x28uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9390;
  strcpy((char *)__p[0], "maneuver_start_pullback_distance");
  double v5 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v5 >= 0.0)
  {
    double v6 = v5;
    if (v5 >= 4.50359963e15) {
      goto LABEL_11;
    }
    uint64_t v7 = (uint64_t)(v5 + v5) + 1;
  }
  else
  {
    double v6 = v5;
    if (v5 <= -4.50359963e15) {
      goto LABEL_11;
    }
    uint64_t v7 = (uint64_t)(v5 + v5);
    if (v7 >= 1) {
      --v7;
    }
  }
  double v6 = (double)(v7 >> 1);
LABEL_11:
  if (v6 < 9.22337204e18)
  {
    if (v5 >= 0.0)
    {
      if (v5 >= 4.50359963e15) {
        goto LABEL_22;
      }
      uint64_t v8 = (uint64_t)(v5 + v5) + 1;
    }
    else
    {
      if (v5 <= -4.50359963e15) {
        goto LABEL_22;
      }
      uint64_t v8 = (uint64_t)(v5 + v5);
      if (v8 >= 1) {
        --v8;
      }
    }
    double v5 = (double)(v8 >> 1);
LABEL_22:
    *(void *)(a1 + 8) = (uint64_t)v5;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  *(void *)(a1 + 8) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_24;
  }
LABEL_23:
  operator delete(__p[0]);
LABEL_24:
  __p[0] = operator new(0x38uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9AC0;
  strcpy((char *)__p[0], "arrival_step_distance_threshold_for_side_calculation");
  double v9 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v9 >= 0.0)
  {
    double v10 = v9;
    if (v9 >= 4.50359963e15) {
      goto LABEL_32;
    }
    uint64_t v11 = (uint64_t)(v9 + v9) + 1;
  }
  else
  {
    double v10 = v9;
    if (v9 <= -4.50359963e15) {
      goto LABEL_32;
    }
    uint64_t v11 = (uint64_t)(v9 + v9);
    if (v11 >= 1) {
      --v11;
    }
  }
  double v10 = (double)(v11 >> 1);
LABEL_32:
  if (v10 < 9.22337204e18)
  {
    if (v9 >= 0.0)
    {
      if (v9 >= 4.50359963e15) {
        goto LABEL_43;
      }
      uint64_t v12 = (uint64_t)(v9 + v9) + 1;
    }
    else
    {
      if (v9 <= -4.50359963e15) {
        goto LABEL_43;
      }
      uint64_t v12 = (uint64_t)(v9 + v9);
      if (v12 >= 1) {
        --v12;
      }
    }
    double v9 = (double)(v12 >> 1);
LABEL_43:
    *(void *)(a1 + 16) = (uint64_t)v9;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  *(void *)(a1 + 16) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_45;
  }
LABEL_44:
  operator delete(__p[0]);
LABEL_45:
  strcpy((char *)__p, "supports_park_car_step");
  HIBYTE(__p[2]) = 22;
  BOOL v13 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 24) = v13;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B91B0;
  strcpy((char *)__p[0], "supports_mount_dismount_step");
  BOOL v14 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 25) = v14;
  __p[0] = operator new(0x38uLL);
  *(_OWORD *)&__p[1] = xmmword_20B99F0;
  strcpy((char *)__p[0], "consider_lane_connections_for_intersection_internal");
  BOOL v15 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 26) = v15;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B91A0;
  strcpy((char *)__p[0], "mount_dismount_min_distance");
  double v16 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v16 >= 0.0)
  {
    double v17 = v16;
    if (v16 >= 4.50359963e15) {
      goto LABEL_59;
    }
    uint64_t v18 = (uint64_t)(v16 + v16) + 1;
  }
  else
  {
    double v17 = v16;
    if (v16 <= -4.50359963e15) {
      goto LABEL_59;
    }
    uint64_t v18 = (uint64_t)(v16 + v16);
    if (v18 >= 1) {
      --v18;
    }
  }
  double v17 = (double)(v18 >> 1);
LABEL_59:
  if (v17 < 9.22337204e18)
  {
    if (v16 >= 0.0)
    {
      if (v16 >= 4.50359963e15) {
        goto LABEL_70;
      }
      uint64_t v19 = (uint64_t)(v16 + v16) + 1;
    }
    else
    {
      if (v16 <= -4.50359963e15) {
        goto LABEL_70;
      }
      uint64_t v19 = (uint64_t)(v16 + v16);
      if (v19 >= 1) {
        --v19;
      }
    }
    double v16 = (double)(v19 >> 1);
LABEL_70:
    *(void *)(a1 + 32) = (uint64_t)v16;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_71;
  }
  *(void *)(a1 + 32) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_72;
  }
LABEL_71:
  operator delete(__p[0]);
LABEL_72:
  HIBYTE(__p[2]) = 20;
  strcpy((char *)__p, "estimated_lane_width");
  double v20 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v20 >= 0.0)
  {
    double v21 = v20;
    if (v20 >= 4.50359963e15) {
      goto LABEL_80;
    }
    uint64_t v22 = (uint64_t)(v20 + v20) + 1;
  }
  else
  {
    double v21 = v20;
    if (v20 <= -4.50359963e15) {
      goto LABEL_80;
    }
    uint64_t v22 = (uint64_t)(v20 + v20);
    if (v22 >= 1) {
      --v22;
    }
  }
  double v21 = (double)(v22 >> 1);
LABEL_80:
  if (v21 < 9.22337204e18)
  {
    if (v20 >= 0.0)
    {
      if (v20 >= 4.50359963e15) {
        goto LABEL_91;
      }
      uint64_t v23 = (uint64_t)(v20 + v20) + 1;
    }
    else
    {
      if (v20 <= -4.50359963e15) {
        goto LABEL_91;
      }
      uint64_t v23 = (uint64_t)(v20 + v20);
      if (v23 >= 1) {
        --v23;
      }
    }
    double v20 = (double)(v23 >> 1);
LABEL_91:
    *(void *)(a1 + 40) = (uint64_t)v20;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_92;
  }
  *(void *)(a1 + 40) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_93;
  }
LABEL_92:
  operator delete(__p[0]);
LABEL_93:
  HIBYTE(__p[2]) = 14;
  strcpy((char *)__p, "min_fork_angle");
  double v24 = sub_5C7E8(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(double *)(a1 + 48) = v24;
  HIBYTE(__p[2]) = 14;
  strcpy((char *)__p, "max_fork_angle");
  double v25 = sub_5C7E8(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(double *)(a1 + 56) = v25;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8870;
  strcpy((char *)__p[0], "min_distance_to_next_mnvr");
  double v26 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v26 >= 0.0)
  {
    double v27 = v26;
    if (v26 >= 4.50359963e15) {
      goto LABEL_105;
    }
    uint64_t v28 = (uint64_t)(v26 + v26) + 1;
  }
  else
  {
    double v27 = v26;
    if (v26 <= -4.50359963e15) {
      goto LABEL_105;
    }
    uint64_t v28 = (uint64_t)(v26 + v26);
    if (v28 >= 1) {
      --v28;
    }
  }
  double v27 = (double)(v28 >> 1);
LABEL_105:
  if (v27 < 9.22337204e18)
  {
    if (v26 >= 0.0)
    {
      if (v26 >= 4.50359963e15) {
        goto LABEL_116;
      }
      uint64_t v29 = (uint64_t)(v26 + v26) + 1;
    }
    else
    {
      if (v26 <= -4.50359963e15) {
        goto LABEL_116;
      }
      uint64_t v29 = (uint64_t)(v26 + v26);
      if (v29 >= 1) {
        --v29;
      }
    }
    double v26 = (double)(v29 >> 1);
LABEL_116:
    *(void *)(a1 + 64) = (uint64_t)v26;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_118;
    }
    goto LABEL_117;
  }
  *(void *)(a1 + 64) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_118;
  }
LABEL_117:
  operator delete(__p[0]);
LABEL_118:
  strcpy((char *)__p, "max_next_step_fraction");
  HIBYTE(__p[2]) = 22;
  double v30 = sub_5C7E8(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(double *)(a1 + 72) = v30;
  strcpy((char *)__p, "max_extension_distance");
  HIBYTE(__p[2]) = 22;
  double v31 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v31 >= 0.0)
  {
    double v32 = v31;
    if (v31 >= 4.50359963e15) {
      goto LABEL_128;
    }
    uint64_t v33 = (uint64_t)(v31 + v31) + 1;
  }
  else
  {
    double v32 = v31;
    if (v31 <= -4.50359963e15) {
      goto LABEL_128;
    }
    uint64_t v33 = (uint64_t)(v31 + v31);
    if (v33 >= 1) {
      --v33;
    }
  }
  double v32 = (double)(v33 >> 1);
LABEL_128:
  if (v32 < 9.22337204e18)
  {
    if (v31 >= 0.0)
    {
      if (v31 >= 4.50359963e15) {
        goto LABEL_139;
      }
      uint64_t v34 = (uint64_t)(v31 + v31) + 1;
    }
    else
    {
      if (v31 <= -4.50359963e15) {
        goto LABEL_139;
      }
      uint64_t v34 = (uint64_t)(v31 + v31);
      if (v34 >= 1) {
        --v34;
      }
    }
    double v31 = (double)(v34 >> 1);
LABEL_139:
    *(void *)(a1 + 80) = (uint64_t)v31;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_141;
    }
    goto LABEL_140;
  }
  *(void *)(a1 + 80) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_141;
  }
LABEL_140:
  operator delete(__p[0]);
LABEL_141:
  strcpy((char *)__p, "min_segment_end_offset");
  HIBYTE(__p[2]) = 22;
  double v35 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v35 >= 0.0)
  {
    double v36 = v35;
    if (v35 >= 4.50359963e15) {
      goto LABEL_149;
    }
    uint64_t v37 = (uint64_t)(v35 + v35) + 1;
  }
  else
  {
    double v36 = v35;
    if (v35 <= -4.50359963e15) {
      goto LABEL_149;
    }
    uint64_t v37 = (uint64_t)(v35 + v35);
    if (v37 >= 1) {
      --v37;
    }
  }
  double v36 = (double)(v37 >> 1);
LABEL_149:
  if (v36 < 9.22337204e18)
  {
    if (v35 >= 0.0)
    {
      if (v35 >= 4.50359963e15) {
        goto LABEL_160;
      }
      uint64_t v38 = (uint64_t)(v35 + v35) + 1;
    }
    else
    {
      if (v35 <= -4.50359963e15) {
        goto LABEL_160;
      }
      uint64_t v38 = (uint64_t)(v35 + v35);
      if (v38 >= 1) {
        --v38;
      }
    }
    double v35 = (double)(v38 >> 1);
LABEL_160:
    *(void *)(a1 + 88) = (uint64_t)v35;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_162;
    }
    goto LABEL_161;
  }
  *(void *)(a1 + 88) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_162;
  }
LABEL_161:
  operator delete(__p[0]);
LABEL_162:
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8E90;
  strcpy((char *)__p[0], "enable_towards_parking_guidance");
  BOOL v39 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 96) = v39;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8890;
  strcpy((char *)__p[0], "enable_walking_light_guidance");
  BOOL v40 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 97) = v40;
  __p[0] = operator new(0x38uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9A60;
  strcpy((char *)__p[0], "walking_light_guidance_min_step_distance_initial");
  double v41 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v41 >= 0.0)
  {
    double v42 = v41;
    if (v41 >= 4.50359963e15) {
      goto LABEL_174;
    }
    uint64_t v43 = (uint64_t)(v41 + v41) + 1;
  }
  else
  {
    double v42 = v41;
    if (v41 <= -4.50359963e15) {
      goto LABEL_174;
    }
    uint64_t v43 = (uint64_t)(v41 + v41);
    if (v43 >= 1) {
      --v43;
    }
  }
  double v42 = (double)(v43 >> 1);
LABEL_174:
  if (v42 >= 9.22337204e18)
  {
    *(void *)(a1 + 104) = 0x7FFFFFFFFFFFFFFELL;
    if (SHIBYTE(__p[2]) < 0) {
      goto LABEL_186;
    }
    return a1;
  }
  if (v41 >= 0.0)
  {
    if (v41 >= 4.50359963e15) {
      goto LABEL_185;
    }
    uint64_t v44 = (uint64_t)(v41 + v41) + 1;
  }
  else
  {
    if (v41 <= -4.50359963e15) {
      goto LABEL_185;
    }
    uint64_t v44 = (uint64_t)(v41 + v41);
    if (v44 >= 1) {
      --v44;
    }
  }
  double v41 = (double)(v44 >> 1);
LABEL_185:
  *(void *)(a1 + 104) = (uint64_t)v41;
  if (SHIBYTE(__p[2]) < 0) {
LABEL_186:
  }
    operator delete(__p[0]);
  return a1;
}

void sub_82AE28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_82AE84(uint64_t a1, uint64_t a2, long long *a3, char a4)
{
  *(void *)a1 = a2;
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200((unsigned char *)(a1 + 8), *(void **)a3, *((void *)a3 + 1));
    uint64_t v8 = *(void **)a1;
  }
  else
  {
    long long v7 = *a3;
    *(void *)(a1 + 24) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v7;
    uint64_t v8 = (void *)a2;
  }
  *(void *)(a1 + 32) = sub_3750CC(v8);
  *(unsigned char *)(a1 + 40) = a4;
  char v21 = 11;
  uint64_t v19 = 0;
  strcpy((char *)v20, "StepBuilder");
  double v17 = 0;
  uint64_t v18 = 0;
  double v9 = sub_374CDC(a2, (uint64_t)v20, (uint64_t *)&v17);
  sub_3CB5E0(v9, (uint64_t)__p);
  sub_82E214(a1 + 48, __p);
  double v10 = v23;
  if (v23)
  {
    do
    {
      BOOL v15 = *(char **)v10;
      sub_57AC8((uint64_t *)v10 + 5);
      if (v10[39] < 0) {
        operator delete(*((void **)v10 + 2));
      }
      operator delete(v10);
      double v10 = v15;
    }
    while (v15);
  }
  uint64_t v11 = __p[0];
  __p[0] = 0;
  if (v11) {
    operator delete(v11);
  }
  uint64_t v12 = (void **)v17;
  if (v17)
  {
    BOOL v13 = v18;
    BOOL v14 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v13 - 1) < 0) {
          operator delete(*(v13 - 3));
        }
        v13 -= 3;
      }
      while (v13 != v12);
      BOOL v14 = v17;
    }
    uint64_t v18 = v12;
    operator delete(v14);
  }
  if (v21 < 0) {
    operator delete(v20[0]);
  }
  return a1;
}

void sub_82B00C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  sub_5450C((uint64_t)&a19);
  sub_1A668(&a10);
  if (a18 < 0)
  {
    operator delete(__p);
    if ((*(char *)(v19 + 31) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(a1);
  }
  else if ((*(char *)(v19 + 31) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v20);
  _Unwind_Resume(a1);
}

void sub_82B074(void **a1, void *a2, void *a3)
{
  uint64_t v6 = sub_45FC7C(a2);
  if (v6)
  {
    uint64_t v7 = v6;
    for (uint64_t i = 0; i != v7; ++i)
    {
      double v9 = (void *)sub_45FB28(a2, i);
      uint64_t v10 = sub_6467E8(a3, i);
      sub_82B0F8(a1, v9, v10);
    }
  }
}

void sub_82B0F8(void **a1, void *a2, uint64_t a3)
{
  if (sub_45FB38(a2)) {
    return;
  }
  sub_82B318((void *)a3, &v17);
  if (v18 != v17)
  {
    unint64_t v6 = 0;
    uint64_t v7 = (v18 - (unsigned char *)v17) / 56;
    do
      sub_82B44C((uint64_t)a1, a2, &v17, v6++, (void *)a3);
    while (v7 != v6);
  }
  uint64_t v8 = *(void *)(a3 + 9960);
  uint64_t v9 = *(void *)(a3 + 9952);
  while (v8 != v9)
  {
    uint64_t v10 = *(void **)(v8 - 152);
    if (v10)
    {
      *(void *)(v8 - 144) = v10;
      operator delete(v10);
    }
    uint64_t v11 = *(void **)(v8 - 192);
    if (v11)
    {
      *(void *)(v8 - 184) = v11;
      operator delete(v11);
    }
    v8 -= 192;
  }
  *(void *)(a3 + 9960) = v9;
  sub_823C74((char **)(a3 + 9952));
  sub_82BDCC((uint64_t)a1, (void *)a3);
  uint64_t v12 = *(void *)(a3 + 1064);
  uint64_t v13 = *(void *)(a3 + 1072);
  while (v12 != v13)
  {
    if (*(unsigned char *)(v12 + 893)) {
      BOOL v15 = *(unsigned char *)(v12 + 892) == 0;
    }
    else {
      BOOL v15 = 1;
    }
    if (!v15)
    {
      int v16 = *(_DWORD *)(v12 + 160);
      switch(v16)
      {
        case 3:
          int v14 = 64;
LABEL_14:
          *(_DWORD *)(v12 + 160) = v14;
          break;
        case 20:
          int v14 = 65;
          goto LABEL_14;
        case 21:
          int v14 = 66;
          goto LABEL_14;
      }
    }
    v12 += 2400;
  }
  sub_82C05C();
  sub_71EB58(v19, *a1);
  sub_71EBF8((uint64_t)v19, (uint64_t)a2, (void *)a3);
  if (v20 < 0) {
    operator delete((void *)v19[11]);
  }
  sub_82C71C((uint64_t)a1, (void *)a3);
  sub_82C8F0((uint64_t)a1, (void *)a3);
  sub_82CA14((uint64_t)a1, (void *)a3);
  if (v17)
  {
    uint64_t v18 = v17;
    operator delete(v17);
  }
}

void sub_82B2C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0)
  {
    operator delete(__p);
    double v30 = a10;
    if (!a10) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    double v30 = a10;
    if (!a10) {
      goto LABEL_3;
    }
  }
  operator delete(v30);
  _Unwind_Resume(exception_object);
}

uint64_t sub_82B318@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  LODWORD(v2) = *(_DWORD *)(sub_3AEFFC((uint64_t)a1) + 8);
  LODWORD(v3) = *(_DWORD *)(sub_46CAA4((uint64_t)a1) + 8);
  unint64_t v6 = sub_470ADC(a1);
  a2[1] = 0;
  a2[2] = 0;
  unint64_t v7 = v6 - 1;
  *a2 = 0;
  uint64_t v8 = operator new(0x38uLL);
  double v9 = (double)v3 / 1000000000.0;
  a2[1] = v8 + 7;
  a2[2] = v8 + 7;
  *uint64_t v8 = 0;
  v8[1] = v7;
  *((unsigned char *)v8 + 16) = 2;
  *((double *)v8 + 3) = (double)v2 / 1000000000.0;
  *((double *)v8 + 4) = v9;
  *((unsigned char *)v8 + 40) = 1;
  v8[6] = 0;
  *a2 = v8;
  if (v7)
  {
    for (unint64_t i = 0; i != v7; ++i)
      v8[6] += sub_470F2C(a1, i, v9);
    unint64_t v11 = v8[1];
  }
  else
  {
    unint64_t v11 = 0;
  }
  uint64_t result = sub_470F2C(a1, v11, v9);
  v8[6] += result;
  return result;
}

void sub_82B41C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  operator delete(v2);
  _Unwind_Resume(a1);
}

void sub_82B434(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  operator delete(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_82B44C(uint64_t a1, void *a2, void *a3, unint64_t a4, void *a5)
{
  uint64_t v9 = sub_824E24(a3, a4);
  uint64_t v10 = v9;
  unint64_t v100 = a4;
  if (!a4) {
    sub_82CB54(a1, (uint64_t)a2, (uint64_t)a5, *(unsigned __int8 *)(v9 + 16));
  }
  uint64_t v11 = (uint64_t)(a5[1245] - a5[1244]) >> 6;
  uint64_t v103 = v10;
  if (*(unsigned char *)(v10 + 16) == 2)
  {
    uint64_t result = sub_82D844();
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * v11;
    double v101 = a5;
    uint64_t v14 = a5[134];
    if (a5[133] != v14) {
      goto LABEL_8;
    }
  }
  else
  {
    if (!*(unsigned char *)(v10 + 16))
    {
      uint64_t result = sub_82D35C();
      unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * v11;
      double v101 = a5;
      uint64_t v14 = a5[134];
      if (a5[133] == v14) {
        goto LABEL_10;
      }
LABEL_8:
      unint64_t v15 = *(void *)(v14 - 2376);
      goto LABEL_11;
    }
    uint64_t result = sub_82DD2C();
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * v11;
    double v101 = a5;
    uint64_t v14 = a5[134];
    if (a5[133] != v14) {
      goto LABEL_8;
    }
  }
LABEL_10:
  unint64_t v15 = 0;
LABEL_11:
  unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v101[1245] - v101[1244]) >> 6);
  uint64_t v99 = a3;
  BOOL v17 = v13 >= v16;
  if (v13 > v16) {
    unint64_t v16 = v13;
  }
  unint64_t v98 = v16;
  if (!v17)
  {
    unint64_t v18 = v13;
    BOOL v104 = 0;
    uint64_t v97 = v101 + 133;
    while (1)
    {
      unint64_t v102 = v18;
      uint64_t v20 = sub_68F6BC(v101 + 1244, v18);
      int v106 = *(_DWORD *)(v20 + 24);
      uint64_t v21 = *(void *)(v20 + 32);
      uint64_t v23 = *(void *)v20;
      uint64_t v22 = *(void *)(v20 + 8);
      sub_46B058();
      uint64_t v26 = sub_470B40(v25, v24 + v21);
      sub_46B058();
      uint64_t v27 = (v22 - v23) >> 3;
      unint64_t v28 = v21 + v27 - 1;
      sub_470B40(v30, v28 + v29);
      if (v15 <= v28) {
        uint64_t v32 = v21 + v27 - 1;
      }
      else {
        uint64_t v32 = v15;
      }
      uint64_t v33 = 0;
      if (v15 < v28)
      {
        unint64_t v34 = v15;
        do
          v33 += sub_470F2C(a2, v34++, v31);
        while (v32 != v34);
      }
      uint64_t v126 = v33;
      if (v15 == v28)
      {
        int v35 = 0;
        uint64_t v125 = 0;
        goto LABEL_45;
      }
      uint64_t v36 = a2[66];
      uint64_t v37 = 4 * v15;
      uint64_t v38 = (int32x4_t *)(v36 + 4 * v15);
      unint64_t v39 = 4 * (v21 + v27) - 4 * v15 - 8;
      uint64_t v40 = (v39 >> 2) + 1;
      if (v39 < 0x1C) {
        break;
      }
      double v42 = &v38->i32[v40 & 0x7FFFFFFFFFFFFFF8];
      uint64_t v43 = v38 + 1;
      int32x4_t v44 = 0uLL;
      uint64_t v45 = v40 & 0x7FFFFFFFFFFFFFF8;
      int32x4_t v46 = 0uLL;
      do
      {
        int32x4_t v44 = vaddq_s32(v43[-1], v44);
        int32x4_t v46 = vaddq_s32(*v43, v46);
        v43 += 2;
        v45 -= 8;
      }
      while (v45);
      int v41 = vaddvq_s32(vaddq_s32(v46, v44));
      if (v40 != (v40 & 0x7FFFFFFFFFFFFFF8)) {
        goto LABEL_30;
      }
LABEL_32:
      HIDWORD(v125) = v41;
      uint64_t v49 = a2[69];
      unint64_t v50 = (int *)(v49 + 4 * v15);
      if (v39 < 0x1C)
      {
        int v51 = 0;
LABEL_37:
        uint64_t v56 = (int *)(v49 + 4 * v28);
        do
        {
          int v57 = *v50++;
          v51 += v57;
        }
        while (v50 != v56);
        goto LABEL_39;
      }
      v50 += v40 & 0x7FFFFFFFFFFFFFF8;
      uint64_t v52 = (int32x4_t *)(v49 + v37 + 16);
      int32x4_t v53 = 0uLL;
      uint64_t v54 = v40 & 0x7FFFFFFFFFFFFFF8;
      int32x4_t v55 = 0uLL;
      do
      {
        int32x4_t v53 = vaddq_s32(v52[-1], v53);
        int32x4_t v55 = vaddq_s32(*v52, v55);
        v52 += 2;
        v54 -= 8;
      }
      while (v54);
      int v51 = vaddvq_s32(vaddq_s32(v55, v53));
      if (v40 != (v40 & 0x7FFFFFFFFFFFFFF8)) {
        goto LABEL_37;
      }
LABEL_39:
      LODWORD(v125) = v51;
      uint64_t v58 = a2[72];
      uint64_t v59 = (int *)(v58 + 4 * v15);
      if (v39 < 0x1C)
      {
        int v35 = 0;
        do
        {
LABEL_44:
          int v64 = *v59++;
          v35 += v64;
        }
        while (v59 != (int *)(v58 + 4 * v28));
        goto LABEL_45;
      }
      v59 += v40 & 0x7FFFFFFFFFFFFFF8;
      int v60 = (int32x4_t *)(v58 + v37 + 16);
      int32x4_t v61 = 0uLL;
      uint64_t v62 = v40 & 0x7FFFFFFFFFFFFFF8;
      int32x4_t v63 = 0uLL;
      do
      {
        int32x4_t v61 = vaddq_s32(v60[-1], v61);
        int32x4_t v63 = vaddq_s32(*v60, v63);
        v60 += 2;
        v62 -= 8;
      }
      while (v62);
      int v35 = vaddvq_s32(vaddq_s32(v63, v61));
      if (v40 != (v40 & 0x7FFFFFFFFFFFFFF8)) {
        goto LABEL_44;
      }
LABEL_45:
      int v124 = v35;
      int v65 = *(int **)(v26 + 8);
      uint64_t v66 = (unsigned __int16 *)((char *)v65 - *v65);
      if (*v66 >= 0xBu && (uint64_t v67 = v66[5]) != 0)
      {
        int v68 = *(int *)((char *)v65 + v67);
        int v69 = (v68 & 0x8000) == 0;
        if ((v68 & 8) != 0) {
          char v70 = 4;
        }
        else {
          char v70 = 5;
        }
      }
      else
      {
        char v70 = 5;
        int v69 = 1;
      }
      BOOL v104 = (*(unsigned __int8 *)(v20 + 170) | v104) != 0;
      if (*(unsigned char *)(a1 + 72) && !*(unsigned char *)(v103 + 40) && *(void *)(v103 + 8) <= v28)
      {
        v107[0] = 0;
        v107[1] = 0;
        *(void *)&long long v108 = 0;
        __p[0] = (void *)-1;
        uint64_t v110 = 0;
        uint64_t v111 = 0;
        __p[1] = 0;
        int v112 = 0;
        *(void *)&long long v71 = -1;
        *((void *)&v71 + 1) = -1;
        long long v113 = v71;
        long long v114 = v71;
        long long v115 = v71;
        uint64_t v116 = -1;
        int v117 = 0;
        uint64_t v118 = -1;
        int v119 = 0;
        long long v120 = xmmword_20E2060;
        __int16 v121 = 0;
        char v122 = 0;
        *(void *)((char *)v123 + 7) = 0;
        v123[0] = 0;
        DWORD2(v108) = 16;
        sub_82EEDC((uint64_t)v127, (uint64_t)v107, &v126, (_DWORD *)&v125 + 1, &v125, &v124);
        if (*((unsigned __int8 *)v101 + 1057) != v69)
        {
          char v143 = v69;
          char v144 = 1;
        }
        uint64_t v128 = v21;
        uint64_t v129 = v21 + v27 - 1;
        uint64_t v135 = v21;
        uint64_t v136 = sub_470F2C(a2, v21, v72);
        uint64_t v74 = sub_4710F0(a2, v135, v73);
        uint64_t v137 = v136 + v74;
        uint64_t v134 = v136 + v74;
        unint64_t v131 = v15;
        unint64_t v75 = v101[134];
        if (v75 >= v101[135])
        {
          uint64_t v76 = sub_82F5CC(v97, (uint64_t)v127);
        }
        else
        {
          sub_5940FC(v101[134], (uint64_t)v127);
          uint64_t v76 = v75 + 2400;
          v101[134] = v75 + 2400;
        }
        v101[134] = v76;
        uint64_t v125 = 0;
        uint64_t v126 = 0;
        int v124 = 0;
        unint64_t v15 = v129;
        sub_575E00((uint64_t)v127);
        if (__p[1])
        {
          uint64_t v110 = (uint64_t)__p[1];
          operator delete(__p[1]);
        }
        if (v107[0])
        {
          v107[1] = v107[0];
          operator delete(v107[0]);
        }
      }
      uint64_t result = (uint64_t)v99;
      if (0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v99[1] - *v99) >> 3) - 1 <= v100)
      {
        uint64_t v77 = 0;
        if (!*(unsigned char *)(a1 + 73)) {
          goto LABEL_70;
        }
      }
      else
      {
        uint64_t result = sub_824E24(v99, v100 + 1);
        uint64_t v77 = *(void *)(result + 48);
        if (!*(unsigned char *)(a1 + 73)) {
          goto LABEL_70;
        }
      }
      if (*(void *)(v103 + 8) <= v28 && !*(unsigned char *)(v103 + 40) && *(void *)(a1 + 80) <= v77)
      {
        int v81 = v106;
        if (!v106) {
          int v81 = 3;
        }
        int v106 = v81;
        int v82 = *(unsigned __int8 *)(v103 + 16);
        if (*(void *)v103) {
          BOOL v80 = 0;
        }
        else {
          BOOL v80 = v82 == 2;
        }
        if (*(void *)v103) {
          BOOL v78 = v82 == 2;
        }
        else {
          BOOL v78 = 0;
        }
        uint64_t v79 = v82 == 3;
        goto LABEL_83;
      }
LABEL_70:
      if (v106)
      {
        BOOL v78 = 0;
        uint64_t v79 = 0;
        BOOL v80 = 0;
LABEL_83:
        sub_82EEDC((uint64_t)v127, v20, &v126, (_DWORD *)&v125 + 1, &v125, &v124);
        int v138 = v106;
        if (v80 || v78)
        {
          int v86 = 0;
          uint64_t v85 = -1;
          uint64_t v110 = -1;
          *(void *)&long long v87 = -1;
          *((void *)&v87 + 1) = -1;
          long long v108 = v87;
          *(_OWORD *)long long __p = v87;
          *(_OWORD *)unint64_t v107 = v87;
          double v84 = 0.0;
        }
        else
        {
          long long v83 = *(_OWORD *)(v20 + 88);
          *(_OWORD *)unint64_t v107 = *(_OWORD *)(v20 + 72);
          long long v108 = v83;
          *(_OWORD *)long long __p = *(_OWORD *)(v20 + 104);
          uint64_t v110 = *(void *)(v20 + 120);
          double v84 = *(double *)(v20 + 128);
          uint64_t v85 = *(void *)(v20 + 136);
          int v86 = *(_DWORD *)(v20 + 144);
        }
        long long v145 = *(_OWORD *)v107;
        long long v146 = v108;
        long long v147 = *(_OWORD *)__p;
        uint64_t v148 = v110;
        double v149 = v84;
        uint64_t v150 = v85;
        int v151 = v86;
        unint64_t v152 = (v79 << 8) | ((unint64_t)v78 << 16) | v80;
        if (v141 != -1) {
          uint64_t v130 = v141 + v21;
        }
        uint64_t v128 = v21;
        uint64_t v129 = v28;
        unint64_t v131 = v15;
        char v142 = v70;
        if (v70 != 4 && *((unsigned __int8 *)v101 + 1057) != v69)
        {
          char v143 = v69;
          char v144 = 1;
        }
        if (v139 == -1 || v140 == 0x7FFFFFFFFFFFFFFFLL)
        {
          uint64_t v91 = sub_470F2C(v101, v21, v84);
          uint64_t v132 = v21;
          uint64_t v92 = *(void *)(a1 + 56);
          if (v92 >= v91) {
            uint64_t v92 = v91;
          }
          uint64_t v90 = v91 - v92;
        }
        else
        {
          uint64_t v132 = v139 + v21;
          uint64_t v88 = sub_470F2C(v101, v139 + v21, v84);
          uint64_t v90 = v140;
          uint64_t v21 = v132;
          if (v88 < v140) {
            uint64_t v90 = v88;
          }
        }
        uint64_t v133 = v90;
        uint64_t v93 = sub_4710F0(v101, v21, v89);
        uint64_t v134 = v133 + v93;
        uint64_t v135 = v28;
        uint64_t v136 = 0;
        uint64_t v95 = sub_4710F0(v101, v28, v94);
        uint64_t v137 = v136 + v95;
        unint64_t v96 = v101[134];
        if (v96 < v101[135]) {
          uint64_t v19 = sub_5A9F18(v96, (uint64_t)v127) + 2400;
        }
        else {
          uint64_t v19 = sub_82F760(v97, (uint64_t)v127);
        }
        v101[134] = v19;
        uint64_t v125 = 0;
        uint64_t v126 = 0;
        int v124 = 0;
        uint64_t result = sub_575E00((uint64_t)v127);
        BOOL v104 = 0;
        unint64_t v15 = v28;
        unint64_t v18 = v102 + 1;
        if (v102 + 1 == v98) {
          goto LABEL_101;
        }
      }
      else
      {
        unint64_t v18 = v102 + 1;
        if (v102 + 1 == v98) {
          goto LABEL_101;
        }
      }
    }
    int v41 = 0;
    double v42 = (__int32 *)(v36 + 4 * v15);
LABEL_30:
    uint64_t v47 = (__int32 *)(v36 + 4 * v28);
    do
    {
      int v48 = *v42++;
      v41 += v48;
    }
    while (v42 != v47);
    goto LABEL_32;
  }
LABEL_101:
  if (0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v99[1] - *v99) >> 3) - 1 == v100) {
    return sub_82CDBC();
  }
  return result;
}

void sub_82BD70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
}

void sub_82BDA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_82BDB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
}

void sub_82BDCC(uint64_t a1, void *a2)
{
  uint64_t v2 = a2[133];
  if ((unint64_t)(0x2FC962FC962FC963 * ((a2[134] - v2) >> 5)) >= 2)
  {
    BOOL v4 = 0;
    unint64_t v5 = 1;
    do
    {
      uint64_t v7 = v2 + 2400 * v5;
      uint64_t v10 = *(void *)(v7 + 16);
      uint64_t v9 = (unint64_t *)(v7 + 16);
      uint64_t v8 = v10;
      if (v10 == -1) {
        uint64_t v8 = *(void *)(v2 + 2400 * v5 + 24) - 1;
      }
      uint64_t v11 = *(int **)(sub_470B40(a2, v8) + 8);
      uint64_t v12 = (unsigned __int16 *)((char *)v11 - *v11);
      BOOL v14 = *v12 >= 0x2Fu && (v13 = v12[23]) != 0 && *((unsigned char *)v11 + v13) == 0;
      uint64_t v15 = v2 + 2400 * v5;
      unint64_t v16 = (unsigned char *)(v15 + 893);
      *(unsigned char *)(v15 + 893) = v14;
      unint64_t v17 = *(void *)(v15 + 40);
      unint64_t v18 = (unint64_t *)(v15 + 24);
      LOBYTE(v19) = 1;
      while (1)
      {
        unint64_t v20 = *v9;
        if (*v9 == -1) {
          unint64_t v20 = *v18 - 1;
        }
        if (v17 > v20) {
          break;
        }
        uint64_t v21 = sub_470B40(a2, v17);
        if (v19)
        {
          uint64_t v22 = *(int **)(v21 + 8);
          uint64_t v23 = (unsigned __int16 *)((char *)v22 - *v22);
          if (*v23 < 0x2Fu)
          {
            LOBYTE(v19) = 0;
            ++v17;
          }
          else
          {
            uint64_t v24 = v23[23];
            if (v24)
            {
              unsigned int v25 = *((unsigned __int8 *)v22 + v24);
              if (v25 > 0x2A) {
                LOBYTE(v19) = 0;
              }
              else {
                unint64_t v19 = (0x50426810004uLL >> v25) & 1;
              }
              ++v17;
            }
            else
            {
              LOBYTE(v19) = 0;
              ++v17;
            }
          }
        }
        else
        {
          LOBYTE(v19) = 0;
          ++v17;
        }
      }
      *(unsigned char *)(v2 + 2400 * v5 + 894) = v4 & v19 & 1;
      if (v4 & v19)
      {
        BOOL v4 = 1;
        unint64_t v26 = *v18;
        if (v26 < sub_470ADC(a2))
        {
          while (1)
          {
LABEL_30:
            uint64_t v27 = *(int **)(sub_470B40(a2, v26) + 8);
            unint64_t v28 = (unsigned __int16 *)((char *)v27 - *v27);
            if (*v28 < 0x2Fu) {
              goto LABEL_3;
            }
            uint64_t v29 = v28[23];
            if (!v29) {
              goto LABEL_3;
            }
            uint64_t v30 = *((unsigned __int8 *)v27 + v29);
            if (v30 > 0x2A) {
              goto LABEL_3;
            }
            if (((1 << v30) & 0x50426810004) == 0) {
              break;
            }
            if (++v26 >= sub_470ADC(a2)) {
              goto LABEL_5;
            }
          }
          if (v30)
          {
LABEL_3:
            char v6 = 0;
            goto LABEL_4;
          }
          char v6 = 1;
LABEL_4:
          *(unsigned char *)(v2 + 2400 * v5 + 892) = v6;
        }
      }
      else
      {
        BOOL v4 = *v16 != 0;
        unint64_t v26 = *v18;
        if (v26 < sub_470ADC(a2)) {
          goto LABEL_30;
        }
      }
LABEL_5:
      ++v5;
      uint64_t v2 = a2[133];
    }
    while (v5 < 0x2FC962FC962FC963 * ((a2[134] - v2) >> 5));
  }
}

uint64_t sub_82C05C()
{
  uint64_t v0 = __chkstk_darwin();
  uint64_t v2 = v1;
  uint64_t v77 = v0;
  sub_6B6EC0(v80, *(void *)v0, 1, *(unsigned __int8 *)(v0 + 74), v0 + 8);
  unint64_t v3 = 0x2FC962FC962FC963 * ((uint64_t)(*(void *)(v2 + 1072) - *(void *)(v2 + 1064)) >> 5);
  if (v3 >= 3 && *(unsigned char *)(v2 + 1056) == 0)
  {
    unint64_t v6 = v3 - 1;
    if (v6 <= 1) {
      uint64_t v7 = 1;
    }
    else {
      uint64_t v7 = v6;
    }
    uint64_t v8 = 1;
    do
    {
      uint64_t v9 = sub_51690C((void *)(v2 + 1064), v8++);
      uint64_t v10 = sub_51690C((void *)(v2 + 1064), v8);
      if (*(unsigned char *)(v9 + 328) != 5) {
        continue;
      }
      unsigned int v11 = *(_DWORD *)(v9 + 160) - 11;
      BOOL v12 = v11 > 0x37;
      uint64_t v13 = (1 << v11) & 0xE00000000C0601;
      if (v12 || v13 == 0) {
        continue;
      }
      unint64_t v15 = *(void *)(v9 + 24);
      uint64_t v16 = *(void *)(v9 + 16) == -1 ? v15 - 1 : *(void *)(v9 + 16);
      if (v16 + 1 != v15) {
        continue;
      }
      uint64_t v17 = v10;
      if (v15 >= sub_470ADC((void *)v2)) {
        continue;
      }
      unint64_t v18 = (unsigned int *)sub_470B40((void *)v2, v16);
      uint64_t v19 = sub_470B40((void *)v2, v15);
      uint64_t v21 = sub_470F2C((void *)v2, v15, v20);
      unsigned int v22 = v18[1];
      uint64_t v23 = (int *)sub_2D5D58(*(void *)(v77 + 32), *v18 | ((unint64_t)(unsigned __int16)v22 << 32));
      uint64_t v24 = (unsigned __int16 *)((char *)v23 - *v23);
      unsigned int v25 = *v24;
      if ((v22 & 0x20000000) != 0)
      {
        if (v25 < 0x27) {
          continue;
        }
        unsigned int v26 = v24[19];
        if (!v26) {
          continue;
        }
      }
      else
      {
        if (v25 < 0x29) {
          continue;
        }
        unsigned int v26 = v24[20];
        if (!v26) {
          continue;
        }
      }
      unsigned int v76 = *(int *)((char *)v23 + v26 + *(int *)((char *)v23 + v26));
      if (v76 >= 3 && v21 >= *(void *)(v77 + 136))
      {
        sub_6B7444((uint64_t)v80, v18, 0, &v78);
        uint64_t v27 = *v78;
        uint64_t v28 = v78[1];
        if (*v78 != v28)
        {
          unint64_t v29 = v28 - v27 - 192;
          if (v29 < 0xC0)
          {
            uint64_t v30 = 0;
            uint64_t v31 = *v78;
            goto LABEL_35;
          }
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          unint64_t v34 = v29 / 0xC0 + 1;
          uint64_t v31 = v27 + 192 * (v34 & 0x3FFFFFFFFFFFFFELL);
          int v35 = (unsigned __int8 *)(v27 + 377);
          uint64_t v36 = v34 & 0x3FFFFFFFFFFFFFELL;
          do
          {
            v32 += *(v35 - 192);
            v33 += *v35;
            v35 += 384;
            v36 -= 2;
          }
          while (v36);
          uint64_t v30 = v33 + v32;
          if (v34 != (v34 & 0x3FFFFFFFFFFFFFELL))
          {
            do
            {
LABEL_35:
              v30 += *(unsigned __int8 *)(v31 + 185);
              v31 += 192;
            }
            while (v31 != v28);
          }
          if (v30 == 2)
          {
            do
            {
              if (*(unsigned char *)(v27 + 185))
              {
                int v38 = *(_DWORD *)(v27 + 24);
                if (!v38 || v38 == 3) {
                  break;
                }
              }
              v27 += 192;
            }
            while (v27 != v28);
            if (v27 != v28 && *(void *)(v17 + 872) >= *(void *)(v77 + 112))
            {
              uint64_t v40 = (int *)*((void *)v18 + 1);
              int v41 = (unsigned __int16 *)((char *)v40 - *v40);
              unsigned int v42 = *v41;
              if (*((unsigned char *)v18 + 46))
              {
                if (v42 < 0x49) {
                  goto LABEL_56;
                }
                unsigned int v43 = v41[36];
                if (!v43) {
                  goto LABEL_56;
                }
LABEL_55:
                __int16 v44 = *(_WORD *)((char *)v40 + v43);
              }
              else
              {
                if (v42 >= 0x4B)
                {
                  unsigned int v43 = v41[37];
                  if (v43) {
                    goto LABEL_55;
                  }
                }
LABEL_56:
                __int16 v44 = -1;
              }
              uint64_t v45 = *(int **)(v19 + 8);
              int32x4_t v46 = (unsigned __int16 *)((char *)v45 - *v45);
              unsigned int v47 = *v46;
              if (*(unsigned char *)(v19 + 46))
              {
                if (v47 < 0x4B) {
                  goto LABEL_64;
                }
                unsigned int v48 = v46[37];
                if (!v48) {
                  goto LABEL_64;
                }
LABEL_63:
                int v49 = *(unsigned __int16 *)((char *)v45 + v48);
              }
              else
              {
                if (v47 >= 0x49)
                {
                  unsigned int v48 = v46[36];
                  if (v48) {
                    goto LABEL_63;
                  }
                }
LABEL_64:
                int v49 = 0xFFFF;
              }
              unsigned __int16 v50 = v44 + 18000;
              unsigned __int16 v51 = v44 - 18000;
              if ((unsigned __int16)(v50 >> 5) < 0x465u) {
                unsigned __int16 v51 = v50;
              }
              int v52 = v49 - v51;
              if (v52 > 18000) {
                v52 -= 36000;
              }
              if (v52 < -17999) {
                v52 += 36000;
              }
              double v53 = (double)v52 / 100.0;
              if (v53 < *(double *)(v77 + 96)) {
                double v53 = *(double *)(v77 + 96);
              }
              if (v53 <= *(double *)(v77 + 104))
              {
                uint64_t v54 = *(void *)(v17 + 872);
                double v55 = (double)v76 * (double)*(uint64_t *)(v77 + 88);
                uint64_t v56 = (uint64_t)(v55 + v55);
                uint64_t v57 = v56 - 1;
                if (v56 < 1) {
                  uint64_t v57 = (uint64_t)(v55 + v55);
                }
                uint64_t v58 = v57 >> 1;
                if (v55 > -4.50359963e15) {
                  double v59 = (double)v58;
                }
                else {
                  double v59 = (double)v76 * (double)*(uint64_t *)(v77 + 88);
                }
                double v60 = (double)((v56 + 1) >> 1);
                if (v55 >= 4.50359963e15) {
                  double v60 = (double)v76 * (double)*(uint64_t *)(v77 + 88);
                }
                if (v55 >= 0.0) {
                  double v61 = v60;
                }
                else {
                  double v61 = v59;
                }
                long double v62 = sin(v53 * 3.14159265 / 180.0);
                double v63 = (double)(uint64_t)v61 / (v62 + v62);
                if (v63 >= 0.0)
                {
                  if (v63 < 4.50359963e15)
                  {
                    uint64_t v64 = (uint64_t)(v63 + v63) + 1;
                    goto LABEL_91;
                  }
                }
                else if (v63 > -4.50359963e15)
                {
                  uint64_t v64 = (uint64_t)(v63 + v63);
                  if (v64 >= 1) {
                    --v64;
                  }
LABEL_91:
                  double v63 = (double)(v64 >> 1);
                }
                uint64_t v65 = (uint64_t)v63;
                double v66 = *(double *)(v77 + 120) * (double)v54;
                uint64_t v67 = (uint64_t)(v66 + v66);
                uint64_t v68 = v67 - 1;
                if (v67 < 1) {
                  uint64_t v68 = (uint64_t)(v66 + v66);
                }
                uint64_t v69 = v68 >> 1;
                if (v66 > -4.50359963e15) {
                  double v70 = (double)v69;
                }
                else {
                  double v70 = *(double *)(v77 + 120) * (double)v54;
                }
                double v71 = (double)((v67 + 1) >> 1);
                if (v66 >= 4.50359963e15) {
                  double v71 = *(double *)(v77 + 120) * (double)v54;
                }
                if (v66 >= 0.0) {
                  double v72 = v71;
                }
                else {
                  double v72 = v70;
                }
                uint64_t v73 = v21 - *(void *)(v77 + 136);
                if (v73 >= (uint64_t)v72) {
                  uint64_t v73 = (uint64_t)v72;
                }
                if (v73 < v65) {
                  uint64_t v65 = v73;
                }
                if (*(void *)(v77 + 128) < v65) {
                  uint64_t v65 = *(void *)(v77 + 128);
                }
                *(void *)(v9 + 112) = v65;
                uint64_t v74 = sub_4710F0((void *)v2, *(void *)(v9 + 104), v72);
                uint64_t v75 = *(void *)(v9 + 112);
                *(void *)(v9 + 120) = v75 + v74;
                *(void *)(v9 + 872) += v75;
                *(void *)(v17 + 872) -= v75;
                *(void *)(v17 + 48) = *(void *)(v9 + 112);
              }
            }
          }
        }
        uint64_t v37 = v79;
        if (v79 && !atomic_fetch_add(&v79->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
    }
    while (v8 != v7);
  }
  return sub_68D2B0(v80);
}

void sub_82C660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_14A84((uint64_t)va);
  sub_68D2B0(va1);
  _Unwind_Resume(a1);
}

void sub_82C67C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_82C690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_82C6A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_82C6B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_82C6CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_82C6E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_82C6F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_82C708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_68D2B0(va);
  _Unwind_Resume(a1);
}

void sub_82C71C(uint64_t a1, void *a2)
{
  if (*(unsigned char *)(a1 + 145))
  {
    uint64_t v4 = (unsigned __int8 *)operator new(4uLL);
    *(_DWORD *)uint64_t v4 = 807472134;
    uint64_t v5 = a2[134];
    uint64_t v6 = a2[133];
    if ((unint64_t)(0x2FC962FC962FC963 * ((v5 - v6) >> 5)) >= 2)
    {
      unint64_t v7 = 1;
      uint64_t v8 = 3295;
      do
      {
        if (*(void *)(v6 + v8 - 23) >= *(void *)(a1 + 152)) {
          goto LABEL_7;
        }
        uint64_t v11 = *(void *)(v6 + v8 - 879);
        if (v11 == -1) {
          uint64_t v11 = *(void *)(v6 + v8 - 871) - 1;
        }
        BOOL v12 = *(int **)(sub_470B40(a2, v11) + 8);
        uint64_t v13 = (unsigned __int16 *)((char *)v12 - *v12);
        if (*v13 >= 0x2Fu && (uint64_t v14 = v13[23]) != 0)
        {
          int v15 = *((unsigned __int8 *)v12 + v14);
          if (*v4 == v15) {
            goto LABEL_4;
          }
        }
        else
        {
          int v15 = 32;
          if (*v4 == 32)
          {
LABEL_4:
            uint64_t v9 = 0;
            goto LABEL_5;
          }
        }
        if (v4[1] == v15)
        {
          uint64_t v9 = 1;
        }
        else if (v4[2] == v15)
        {
          uint64_t v9 = 2;
        }
        else
        {
          uint64_t v10 = v4 + 4;
          if (v4[3] != v15) {
            goto LABEL_6;
          }
          uint64_t v9 = 3;
        }
LABEL_5:
        uint64_t v10 = &v4[v9];
LABEL_6:
        *(unsigned char *)(v6 + v8) = v10 - v4 != 4;
        uint64_t v5 = a2[134];
        uint64_t v6 = a2[133];
LABEL_7:
        ++v7;
        v8 += 2400;
      }
      while (v7 < 0x2FC962FC962FC963 * ((v5 - v6) >> 5));
    }
    operator delete(v4);
  }
}

void sub_82C8DC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

BOOL sub_82C8F0(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[134];
  uint64_t v5 = sub_51690C(a2 + 133, 0x2FC962FC962FC963 * ((v4 - a2[133]) >> 5) - 2);
  unint64_t v6 = *(void *)(v4 - 2360);
  unint64_t v7 = sub_470ADC(a2);
  if (v6 <= v7) {
    unint64_t v8 = v7;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v6 >= v7)
  {
    BOOL result = 1;
    if (!*(unsigned char *)(a1 + 144)) {
      return result;
    }
    goto LABEL_14;
  }
  unint64_t v9 = v8 - 1;
  do
  {
    uint64_t v10 = *(void *)(a1 + 32);
    uint64_t v11 = (unsigned int *)sub_470B40(a2, v6);
    BOOL result = sub_2E4CD4(v10, (((unint64_t)(v11[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v11[1] << 32) | *v11) ^ 0x1000000000000);
  }
  while (result && v9 != v6++);
  if (*(unsigned char *)(a1 + 144))
  {
LABEL_14:
    int v14 = *(_DWORD *)(v5 + 160);
    if (((v14 - 25) > 0x3F || ((1 << (v14 - 25)) & 0x9000000000000001) == 0)
      && v14 != 17)
    {
      *(unsigned char *)(v5 + 680) = result;
    }
  }
  return result;
}

void sub_82CA14(uint64_t a1, void *a2)
{
  uint64_t v2 = (void *)a2[133];
  unint64_t v3 = (void *)a2[134];
  if (v2 != v3)
  {
    uint64_t v5 = a2 + 1445;
    do
    {
      unint64_t v6 = v2[5];
      if (v6 < v2[3])
      {
        do
        {
          unint64_t v7 = *(int **)(sub_470B40(a2, v6) + 8);
          unint64_t v8 = (unsigned __int16 *)((char *)v7 - *v7);
          if (*v8 < 0x2Fu) {
            break;
          }
          uint64_t v9 = v8[23];
          if (!v9) {
            break;
          }
          unsigned int v10 = *((unsigned __int8 *)v7 + v9);
          BOOL v11 = v10 > 0x2A;
          uint64_t v12 = (1 << v10) & 0x50426810004;
          if (v11 || v12 == 0) {
            break;
          }
          ++v6;
        }
        while (v6 < v2[3]);
        if (v6 != v2[5] && v6 < v2[3])
        {
          if ((int v14 = *(int **)(sub_470B40(a2, v6) + 8), v15 = (unsigned __int16 *)((char *)v14 - *v14), *v15 >= 0x2Fu)
            && (uint64_t v16 = v15[23]) != 0
            && !*((unsigned char *)v14 + v16)
            || *(_DWORD *)sub_66AF3C(v5, v6) != 3)
          {
            v2[7] = v6;
          }
        }
      }
      v2 += 300;
    }
    while (v2 != v3);
  }
}

void sub_82CB54(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v38 = *(void *)sub_3AEFFC(a2);
  int v36 = *(_DWORD *)(a2 + 768);
  int v37 = v36;
  int v35 = v36;
  if (*(unsigned char *)(a2 + 803))
  {
    BOOL v8 = *(double *)(a2 + 808) > *(double *)(a1 + 48);
    if (sub_64F234(a3))
    {
      if (v8)
      {
LABEL_4:
        if (a4) {
          int v9 = 85;
        }
        else {
          int v9 = 88;
        }
        goto LABEL_17;
      }
    }
    else
    {
      if ((*(unsigned char *)(a1 + 40) & 0xFD) != 9)
      {
        if (v8) {
          int v9 = 25;
        }
        else {
          int v9 = 17;
        }
        goto LABEL_17;
      }
      if (v8) {
        goto LABEL_4;
      }
    }
    int v9 = 85;
  }
  else
  {
    char v10 = sub_64F234(a3);
    int v9 = 85;
    if ((v10 & 1) == 0)
    {
      if ((*(unsigned char *)(a1 + 40) & 0xFD) == 9) {
        int v9 = 85;
      }
      else {
        int v9 = 17;
      }
    }
  }
LABEL_17:
  int v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v19 = -1;
  long long __p = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  int v23 = 0;
  *(void *)&long long v11 = -1;
  *((void *)&v11 + 1) = -1;
  long long v24 = v11;
  long long v25 = v11;
  long long v26 = v11;
  uint64_t v27 = -1;
  int v28 = 0;
  uint64_t v29 = -1;
  int v30 = 0;
  long long v31 = xmmword_20E2060;
  __int16 v32 = 0;
  char v33 = 0;
  *(void *)((char *)v34 + 7) = 0;
  v34[0] = 0;
  int v18 = v9;
  sub_82EEDC((uint64_t)v39, (uint64_t)&v15, &v38, &v37, &v36, &v35);
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  uint64_t v45 = 0;
  uint64_t v43 = 0;
  uint64_t v44 = 0;
  uint64_t v42 = 0;
  if (*(unsigned __int8 *)(a3 + 1056) == a4) {
    char v12 = 5;
  }
  else {
    char v12 = a4;
  }
  char v46 = v12;
  unint64_t v13 = *(void *)(a3 + 1072);
  if (v13 >= *(void *)(a3 + 1080))
  {
    uint64_t v14 = sub_82F5CC((uint64_t *)(a3 + 1064), (uint64_t)v39);
  }
  else
  {
    sub_5940FC(*(void *)(a3 + 1072), (uint64_t)v39);
    uint64_t v14 = v13 + 2400;
    *(void *)(a3 + 1072) = v13 + 2400;
  }
  *(void *)(a3 + 1072) = v14;
  sub_575E00((uint64_t)v39);
  if (__p)
  {
    uint64_t v21 = __p;
    operator delete(__p);
  }
  if (v15)
  {
    uint64_t v16 = v15;
    operator delete(v15);
  }
}

void sub_82CD6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
}

void sub_82CD88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  *(void *)(v36 + 1072) = v37;
  sub_575E00((uint64_t)&a36);
  sub_592058((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_82CDA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_82CDBC()
{
  uint64_t v0 = __chkstk_darwin();
  char v33 = v1;
  uint64_t v3 = (uint64_t)v2;
  uint64_t v35 = v0;
  uint64_t v38 = v4;
  unint64_t v5 = *(void *)(*(void *)(v4 + 1072) - 2376);
  unint64_t v6 = sub_470ADC(v2);
  uint64_t v34 = v6;
  unint64_t v36 = v6 - 1;
  unint64_t v37 = v5;
  if (v5 <= v6 - 1) {
    unint64_t v8 = v6 - 1;
  }
  else {
    unint64_t v8 = v5;
  }
  if (v5 >= v6 - 1)
  {
    int v12 = 0;
    int v11 = 0;
    int v10 = 0;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = 0;
    int v10 = 0;
    int v11 = 0;
    int v12 = 0;
    do
    {
      v9 += sub_470F2C((void *)v3, v5, v7);
      v10 += *(_DWORD *)sub_71CC9C((void *)(v3 + 528), v5);
      v11 += *(_DWORD *)sub_71CC9C((void *)(v3 + 552), v5);
      v12 += *(_DWORD *)sub_71CC9C((void *)(v3 + 576), v5++);
    }
    while (v8 != v5);
  }
  uint64_t v13 = *(void *)(v38 + 296) + sub_470F2C((void *)v3, v36, v7) + v9;
  uint64_t v63 = v13;
  int v14 = *(_DWORD *)(v3 + 772);
  int v62 = *(_DWORD *)(*(void *)(v3 + 528) + 4 * v36) + v14 + v10;
  int v61 = *(_DWORD *)(*(void *)(v3 + 552) + 4 * v36) + v14 + v11;
  int v60 = *(_DWORD *)(*(void *)(v3 + 576) + 4 * v36) + v14 + v12;
  uint64_t v15 = sub_470B40((void *)v3, v36);
  sub_470B40((void *)v3, v36);
  uint64_t v16 = *(int **)(v15 + 8);
  uint64_t v17 = (unsigned __int16 *)((char *)v16 - *v16);
  if (*v17 < 0xBu)
  {
    char v21 = 5;
    unint64_t v19 = v37;
    uint64_t v20 = v35;
  }
  else
  {
    uint64_t v18 = v17[5];
    unint64_t v19 = v37;
    uint64_t v20 = v35;
    if (v18)
    {
      if ((*(int *)((char *)v16 + v18) & 8) != 0) {
        char v21 = 4;
      }
      else {
        char v21 = 5;
      }
    }
    else
    {
      char v21 = 5;
    }
  }
  sub_6B6EC0(v59, *(void *)v20, 1, *(unsigned __int8 *)(v20 + 74), v20 + 8);
  int v22 = sub_6B9618((uint64_t)v59, (void *)v38);
  if ((v22 - 33) <= 0x33
    && ((1 << (v22 - 33)) & 0xC000000000003) != 0
    && sub_82D264(v20, v38, v13, v33))
  {
    if (sub_64F348(v38)) {
      int v22 = 82;
    }
    else {
      int v22 = 18;
    }
  }
  unint64_t v39 = 0;
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  uint64_t v43 = -1;
  long long __p = 0;
  uint64_t v45 = 0;
  uint64_t v46 = 0;
  int v47 = 0;
  *(void *)&long long v23 = -1;
  *((void *)&v23 + 1) = -1;
  long long v48 = v23;
  long long v49 = v23;
  long long v50 = v23;
  uint64_t v51 = -1;
  int v52 = 0;
  uint64_t v53 = -1;
  int v54 = 0;
  long long v55 = xmmword_20E2060;
  __int16 v56 = 0;
  char v57 = 0;
  *(void *)((char *)v58 + 7) = 0;
  v58[0] = 0;
  int v42 = v22;
  sub_82EEDC((uint64_t)v64, (uint64_t)&v39, &v63, &v62, &v61, &v60);
  v64[2] = v36;
  v64[3] = v34;
  v64[13] = v34;
  uint64_t v25 = sub_4710F0((void *)v38, v34, v24);
  uint64_t v66 = v65 + v25;
  v64[12] = v65 + v25;
  v64[5] = v19;
  char v67 = v21;
  long long v26 = *(int **)(sub_470B50(v3) + 8);
  uint64_t v27 = (unsigned __int16 *)((char *)v26 - *v26);
  if (*v27 < 0xBu || (uint64_t v28 = v27[5]) == 0)
  {
    LOBYTE(v29) = 1;
    if (*(unsigned char *)(v38 + 1057) == 1) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  int v29 = (*((unsigned char *)v26 + v28 + 1) & 0x80) == 0;
  if (*(unsigned __int8 *)(v38 + 1057) != v29)
  {
LABEL_27:
    char v68 = v29;
    char v69 = 1;
  }
LABEL_28:
  unint64_t v30 = *(void *)(v38 + 1072);
  if (v30 >= *(void *)(v38 + 1080))
  {
    uint64_t v31 = sub_82F5CC((uint64_t *)(v38 + 1064), (uint64_t)v64);
  }
  else
  {
    sub_5940FC(*(void *)(v38 + 1072), (uint64_t)v64);
    uint64_t v31 = v30 + 2400;
    *(void *)(v38 + 1072) = v30 + 2400;
  }
  *(void *)(v38 + 1072) = v31;
  sub_575E00((uint64_t)v64);
  if (__p)
  {
    uint64_t v45 = __p;
    operator delete(__p);
  }
  if (v39)
  {
    uint64_t v40 = v39;
    operator delete(v39);
  }
  return sub_68D2B0(v59);
}

void sub_82D1F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  *(void *)(v40 + 1072) = v39;
  sub_575E00((uint64_t)&STACK[0x1880]);
  sub_592058((uint64_t)&a15);
  sub_68D2B0(&a39);
  _Unwind_Resume(a1);
}

void sub_82D250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

BOOL sub_82D264(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return 1;
  }
  if (*(void *)(a1 + 64) <= a3) {
    return 0;
  }
  uint64_t v7 = *(void *)(a1 + 32);
  unint64_t v8 = (unsigned int *)sub_470B50(a2);
  if (sub_2E4CD4(v7, (((unint64_t)(v8[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v8[1] << 32) | *v8) ^ 0x1000000000000))
  {
    return 1;
  }
  uint64_t v9 = *(void *)(a1 + 32);
  int v10 = (unsigned int *)sub_470B50(a2);
  int v11 = (int *)sub_2D5D58(v9, *v10 | ((unint64_t)(v10[1] & 0x1FFFFFFF) << 32));
  int v12 = (unsigned __int16 *)((char *)v11 - *v11);
  return *v12 >= 0x2Fu && (uint64_t v13 = v12[23]) != 0 && *((unsigned char *)v11 + v13) == 18;
}

uint64_t sub_82D35C()
{
  uint64_t v0 = __chkstk_darwin();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = v0;
  sub_650C94((uint64_t)v35);
  unint64_t v7 = *v4;
  unint64_t v6 = v4[1];
  uint64_t v31 = v4;
  if (*v4 <= v6 + 1) {
    unint64_t v8 = v6 + 1;
  }
  else {
    unint64_t v8 = *v4;
  }
  if (v7 < v6 + 1)
  {
    unint64_t v9 = *v4;
    do
    {
      while (1)
      {
        int v10 = (unsigned int *)sub_470B40((void *)v2, v9);
        sub_830314((uint64_t)v35, v10, *(void *)(v5 + 32));
        int v11 = (uint64_t *)sub_415F0((void *)(v2 + 12304), v9);
        uint64_t v13 = v12;
        uint64_t v14 = *v11;
        unint64_t v15 = v39;
        if (v39 == v40 << 6)
        {
          if ((uint64_t)(v39 + 1) < 0) {
            sub_2E00();
          }
          unint64_t v16 = v40 << 7;
          if (v40 << 7 <= (v39 & 0xFFFFFFFFFFFFFFC0) + 64) {
            unint64_t v16 = (v39 & 0xFFFFFFFFFFFFFFC0) + 64;
          }
          if (v39 <= 0x3FFFFFFFFFFFFFFELL) {
            unint64_t v17 = v16;
          }
          else {
            unint64_t v17 = 0x7FFFFFFFFFFFFFFFLL;
          }
          sub_3D110((uint64_t)&v38, v17);
          unint64_t v15 = v39;
        }
        unint64_t v39 = v15 + 1;
        unint64_t v18 = v15 >> 6;
        uint64_t v19 = 1 << v15;
        if ((v14 & v13) != 0) {
          break;
        }
        *(void *)(v38 + 8 * v18) &= ~v19;
        if (v8 == ++v9) {
          goto LABEL_17;
        }
      }
      *(void *)(v38 + 8 * v18) |= v19;
      ++v9;
    }
    while (v8 != v9);
  }
LABEL_17:
  *(_DWORD *)(sub_3AEFFC((uint64_t)v35) + 8) = vcvtad_u64_f64(*((double *)v31 + 3) * 1000000000.0);
  *(_DWORD *)(sub_46CAA4((uint64_t)v35) + 8) = vcvtad_u64_f64(*((double *)v31 + 4) * 1000000000.0);
  sub_46C80C(v2, v32);
  sub_46C818((uint64_t)v35, (char **)v32);
  if (__p)
  {
    uint64_t v34 = __p;
    operator delete(__p);
  }
  if (v32[0])
  {
    v32[1] = v32[0];
    operator delete(v32[0]);
  }
  sub_6A4390(v32, *(void *)v5, 1, *(unsigned __int8 *)(v5 + 74), v5 + 8);
  sub_6A4394((uint64_t)v32, (uint64_t)v35, 2);
  sub_82F9BC((char **)(v2 + 9952), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v2 + 9960) - *(void *)(v2 + 9952)) >> 6)- 0x5555555555555555 * ((v37 - (uint64_t)v36) >> 6));
  uint64_t v20 = (uint64_t)v36;
  uint64_t v21 = v37;
  if (v36 != (void *)v37)
  {
    int v22 = v36;
    while (1)
    {
      v22[4] += v7;
      uint64_t v23 = v22[9];
      if (v23 != -1) {
        break;
      }
      uint64_t v24 = v22[10];
      if (v24 != -1) {
        goto LABEL_28;
      }
      if (v22[11] != -1 || v22[12] != -1 || v22[13] != -1 || v22[14] != -1 || v22[15] != -1) {
        goto LABEL_29;
      }
LABEL_23:
      v22 += 24;
      if (v22 == (void *)v21) {
        goto LABEL_45;
      }
    }
    v22[9] = v23 + v7;
    uint64_t v24 = v22[10];
    if (v24 != -1) {
LABEL_28:
    }
      v22[10] = v24 + v7;
LABEL_29:
    uint64_t v25 = v22[11];
    if (v25 != -1) {
      v22[11] = v25 + v7;
    }
    uint64_t v26 = v22[12];
    if (v26 != -1) {
      v22[12] = v26 + v7;
    }
    uint64_t v27 = v22[13];
    if (v27 != -1) {
      v22[13] = v27 + v7;
    }
    uint64_t v28 = v22[14];
    if (v28 != -1) {
      v22[14] = v28 + v7;
    }
    uint64_t v29 = v22[15];
    if (v29 != -1) {
      v22[15] = v29 + v7;
    }
    goto LABEL_23;
  }
LABEL_45:
  sub_82FB68((void **)(v2 + 9952), *(void *)(v2 + 9960), v20, v21, 0xAAAAAAAAAAAAAAABLL * ((v21 - v20) >> 6));
  sub_68D2B0(v32);
  return sub_5752F4((uint64_t)v35);
}

void sub_82D754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_68D2B0(va);
  sub_5752F4((uint64_t)&STACK[0x1788]);
  _Unwind_Resume(a1);
}

void sub_82D7FC(_Unwind_Exception *a1)
{
}

void sub_82D814(_Unwind_Exception *a1)
{
}

void sub_82D82C(_Unwind_Exception *a1)
{
}

uint64_t sub_82D844()
{
  uint64_t v0 = __chkstk_darwin();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = v0;
  sub_652D44((uint64_t)v35);
  unint64_t v7 = *v4;
  unint64_t v6 = v4[1];
  uint64_t v31 = v4;
  if (*v4 <= v6 + 1) {
    unint64_t v8 = v6 + 1;
  }
  else {
    unint64_t v8 = *v4;
  }
  if (v7 < v6 + 1)
  {
    unint64_t v9 = *v4;
    do
    {
      while (1)
      {
        int v10 = (unsigned int *)sub_470B40((void *)v2, v9);
        sub_830428((uint64_t)v35, v10, *(void *)(v5 + 32));
        int v11 = (uint64_t *)sub_415F0((void *)(v2 + 12304), v9);
        uint64_t v13 = v12;
        uint64_t v14 = *v11;
        unint64_t v15 = v39;
        if (v39 == v40 << 6)
        {
          if ((uint64_t)(v39 + 1) < 0) {
            sub_2E00();
          }
          unint64_t v16 = v40 << 7;
          if (v40 << 7 <= (v39 & 0xFFFFFFFFFFFFFFC0) + 64) {
            unint64_t v16 = (v39 & 0xFFFFFFFFFFFFFFC0) + 64;
          }
          if (v39 <= 0x3FFFFFFFFFFFFFFELL) {
            unint64_t v17 = v16;
          }
          else {
            unint64_t v17 = 0x7FFFFFFFFFFFFFFFLL;
          }
          sub_3D110((uint64_t)&v38, v17);
          unint64_t v15 = v39;
        }
        unint64_t v39 = v15 + 1;
        unint64_t v18 = v15 >> 6;
        uint64_t v19 = 1 << v15;
        if ((v14 & v13) != 0) {
          break;
        }
        *(void *)(v38 + 8 * v18) &= ~v19;
        if (v8 == ++v9) {
          goto LABEL_17;
        }
      }
      *(void *)(v38 + 8 * v18) |= v19;
      ++v9;
    }
    while (v8 != v9);
  }
LABEL_17:
  *(_DWORD *)(sub_3AEFFC((uint64_t)v35) + 8) = vcvtad_u64_f64(*((double *)v31 + 3) * 1000000000.0);
  *(_DWORD *)(sub_46CAA4((uint64_t)v35) + 8) = vcvtad_u64_f64(*((double *)v31 + 4) * 1000000000.0);
  sub_46C80C(v2, v32);
  sub_46C818((uint64_t)v35, (char **)v32);
  if (__p)
  {
    uint64_t v34 = __p;
    operator delete(__p);
  }
  if (v32[0])
  {
    v32[1] = v32[0];
    operator delete(v32[0]);
  }
  sub_6B6EC0(v32, *(void *)v5, 1, *(unsigned __int8 *)(v5 + 74), v5 + 8);
  sub_6B6EC4((uint64_t)v32, v35, 2);
  sub_82F9BC((char **)(v2 + 9952), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v2 + 9960) - *(void *)(v2 + 9952)) >> 6)- 0x5555555555555555 * ((v37 - (uint64_t)v36) >> 6));
  uint64_t v20 = (uint64_t)v36;
  uint64_t v21 = v37;
  if (v36 != (void *)v37)
  {
    int v22 = v36;
    while (1)
    {
      v22[4] += v7;
      uint64_t v23 = v22[9];
      if (v23 != -1) {
        break;
      }
      uint64_t v24 = v22[10];
      if (v24 != -1) {
        goto LABEL_28;
      }
      if (v22[11] != -1 || v22[12] != -1 || v22[13] != -1 || v22[14] != -1 || v22[15] != -1) {
        goto LABEL_29;
      }
LABEL_23:
      v22 += 24;
      if (v22 == (void *)v21) {
        goto LABEL_45;
      }
    }
    v22[9] = v23 + v7;
    uint64_t v24 = v22[10];
    if (v24 != -1) {
LABEL_28:
    }
      v22[10] = v24 + v7;
LABEL_29:
    uint64_t v25 = v22[11];
    if (v25 != -1) {
      v22[11] = v25 + v7;
    }
    uint64_t v26 = v22[12];
    if (v26 != -1) {
      v22[12] = v26 + v7;
    }
    uint64_t v27 = v22[13];
    if (v27 != -1) {
      v22[13] = v27 + v7;
    }
    uint64_t v28 = v22[14];
    if (v28 != -1) {
      v22[14] = v28 + v7;
    }
    uint64_t v29 = v22[15];
    if (v29 != -1) {
      v22[15] = v29 + v7;
    }
    goto LABEL_23;
  }
LABEL_45:
  sub_82FB68((void **)(v2 + 9952), *(void *)(v2 + 9960), v20, v21, 0xAAAAAAAAAAAAAAABLL * ((v21 - v20) >> 6));
  sub_68D2B0(v32);
  return sub_5752F4((uint64_t)v35);
}

void sub_82DC3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_68D2B0(va);
  sub_5752F4((uint64_t)&STACK[0x1788]);
  _Unwind_Resume(a1);
}

void sub_82DCE4(_Unwind_Exception *a1)
{
}

void sub_82DCFC(_Unwind_Exception *a1)
{
}

void sub_82DD14(_Unwind_Exception *a1)
{
}

uint64_t sub_82DD2C()
{
  uint64_t v0 = __chkstk_darwin();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = v0;
  sub_64EDB0((uint64_t)v35);
  unint64_t v7 = *v4;
  unint64_t v6 = v4[1];
  uint64_t v31 = v4;
  if (*v4 <= v6 + 1) {
    unint64_t v8 = v6 + 1;
  }
  else {
    unint64_t v8 = *v4;
  }
  if (v7 < v6 + 1)
  {
    unint64_t v9 = *v4;
    do
    {
      while (1)
      {
        int v10 = (unsigned int *)sub_470B40((void *)v2, v9);
        sub_830314((uint64_t)v35, v10, *(void *)(v5 + 32));
        int v11 = (uint64_t *)sub_415F0((void *)(v2 + 12304), v9);
        uint64_t v13 = v12;
        uint64_t v14 = *v11;
        unint64_t v15 = v39;
        if (v39 == v40 << 6)
        {
          if ((uint64_t)(v39 + 1) < 0) {
            sub_2E00();
          }
          unint64_t v16 = v40 << 7;
          if (v40 << 7 <= (v39 & 0xFFFFFFFFFFFFFFC0) + 64) {
            unint64_t v16 = (v39 & 0xFFFFFFFFFFFFFFC0) + 64;
          }
          if (v39 <= 0x3FFFFFFFFFFFFFFELL) {
            unint64_t v17 = v16;
          }
          else {
            unint64_t v17 = 0x7FFFFFFFFFFFFFFFLL;
          }
          sub_3D110((uint64_t)&v38, v17);
          unint64_t v15 = v39;
        }
        unint64_t v39 = v15 + 1;
        unint64_t v18 = v15 >> 6;
        uint64_t v19 = 1 << v15;
        if ((v14 & v13) != 0) {
          break;
        }
        *(void *)(v38 + 8 * v18) &= ~v19;
        if (v8 == ++v9) {
          goto LABEL_17;
        }
      }
      *(void *)(v38 + 8 * v18) |= v19;
      ++v9;
    }
    while (v8 != v9);
  }
LABEL_17:
  *(_DWORD *)(sub_3AEFFC((uint64_t)v35) + 8) = vcvtad_u64_f64(*((double *)v31 + 3) * 1000000000.0);
  *(_DWORD *)(sub_46CAA4((uint64_t)v35) + 8) = vcvtad_u64_f64(*((double *)v31 + 4) * 1000000000.0);
  sub_46C80C(v2, v32);
  sub_46C818((uint64_t)v35, (char **)v32);
  if (__p)
  {
    uint64_t v34 = __p;
    operator delete(__p);
  }
  if (v32[0])
  {
    v32[1] = v32[0];
    operator delete(v32[0]);
  }
  sub_68D1B4(v32, *(void *)v5, 1, *(unsigned __int8 *)(v5 + 74), v5 + 8);
  sub_68D2B4((uint64_t)v32, (uint64_t)v35, 2);
  sub_82F9BC((char **)(v2 + 9952), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v2 + 9960) - *(void *)(v2 + 9952)) >> 6)- 0x5555555555555555 * ((v37 - (uint64_t)v36) >> 6));
  uint64_t v20 = (uint64_t)v36;
  uint64_t v21 = v37;
  if (v36 != (void *)v37)
  {
    int v22 = v36;
    while (1)
    {
      v22[4] += v7;
      uint64_t v23 = v22[9];
      if (v23 != -1) {
        break;
      }
      uint64_t v24 = v22[10];
      if (v24 != -1) {
        goto LABEL_28;
      }
      if (v22[11] != -1 || v22[12] != -1 || v22[13] != -1 || v22[14] != -1 || v22[15] != -1) {
        goto LABEL_29;
      }
LABEL_23:
      v22 += 24;
      if (v22 == (void *)v21) {
        goto LABEL_45;
      }
    }
    v22[9] = v23 + v7;
    uint64_t v24 = v22[10];
    if (v24 != -1) {
LABEL_28:
    }
      v22[10] = v24 + v7;
LABEL_29:
    uint64_t v25 = v22[11];
    if (v25 != -1) {
      v22[11] = v25 + v7;
    }
    uint64_t v26 = v22[12];
    if (v26 != -1) {
      v22[12] = v26 + v7;
    }
    uint64_t v27 = v22[13];
    if (v27 != -1) {
      v22[13] = v27 + v7;
    }
    uint64_t v28 = v22[14];
    if (v28 != -1) {
      v22[14] = v28 + v7;
    }
    uint64_t v29 = v22[15];
    if (v29 != -1) {
      v22[15] = v29 + v7;
    }
    goto LABEL_23;
  }
LABEL_45:
  sub_82FB68((void **)(v2 + 9952), *(void *)(v2 + 9960), v20, v21, 0xAAAAAAAAAAAAAAABLL * ((v21 - v20) >> 6));
  sub_68D2B0(v32);
  return sub_5752F4((uint64_t)v35);
}

void sub_82E124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_68D2B0(va);
  sub_5752F4((uint64_t)&STACK[0x1788]);
  _Unwind_Resume(a1);
}

void sub_82E1CC(_Unwind_Exception *a1)
{
}

void sub_82E1E4(_Unwind_Exception *a1)
{
}

void sub_82E1FC(_Unwind_Exception *a1)
{
}

uint64_t sub_82E214(uint64_t a1, void *a2)
{
  __p[0] = operator new(0x28uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9240;
  strcpy((char *)__p[0], "start_with_u_turn_speed_threshold_kph");
  double v4 = sub_5C7E8(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(double *)a1 = v4;
  __p[0] = operator new(0x28uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9390;
  strcpy((char *)__p[0], "maneuver_start_pullback_distance");
  double v5 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v5 >= 0.0)
  {
    double v6 = v5;
    if (v5 >= 4.50359963e15) {
      goto LABEL_11;
    }
    uint64_t v7 = (uint64_t)(v5 + v5) + 1;
  }
  else
  {
    double v6 = v5;
    if (v5 <= -4.50359963e15) {
      goto LABEL_11;
    }
    uint64_t v7 = (uint64_t)(v5 + v5);
    if (v7 >= 1) {
      --v7;
    }
  }
  double v6 = (double)(v7 >> 1);
LABEL_11:
  if (v6 < 9.22337204e18)
  {
    if (v5 >= 0.0)
    {
      if (v5 >= 4.50359963e15) {
        goto LABEL_22;
      }
      uint64_t v8 = (uint64_t)(v5 + v5) + 1;
    }
    else
    {
      if (v5 <= -4.50359963e15) {
        goto LABEL_22;
      }
      uint64_t v8 = (uint64_t)(v5 + v5);
      if (v8 >= 1) {
        --v8;
      }
    }
    double v5 = (double)(v8 >> 1);
LABEL_22:
    *(void *)(a1 + 8) = (uint64_t)v5;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  *(void *)(a1 + 8) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_24;
  }
LABEL_23:
  operator delete(__p[0]);
LABEL_24:
  __p[0] = operator new(0x38uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9AC0;
  strcpy((char *)__p[0], "arrival_step_distance_threshold_for_side_calculation");
  double v9 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v9 >= 0.0)
  {
    double v10 = v9;
    if (v9 >= 4.50359963e15) {
      goto LABEL_32;
    }
    uint64_t v11 = (uint64_t)(v9 + v9) + 1;
  }
  else
  {
    double v10 = v9;
    if (v9 <= -4.50359963e15) {
      goto LABEL_32;
    }
    uint64_t v11 = (uint64_t)(v9 + v9);
    if (v11 >= 1) {
      --v11;
    }
  }
  double v10 = (double)(v11 >> 1);
LABEL_32:
  if (v10 < 9.22337204e18)
  {
    if (v9 >= 0.0)
    {
      if (v9 >= 4.50359963e15) {
        goto LABEL_43;
      }
      uint64_t v12 = (uint64_t)(v9 + v9) + 1;
    }
    else
    {
      if (v9 <= -4.50359963e15) {
        goto LABEL_43;
      }
      uint64_t v12 = (uint64_t)(v9 + v9);
      if (v12 >= 1) {
        --v12;
      }
    }
    double v9 = (double)(v12 >> 1);
LABEL_43:
    *(void *)(a1 + 16) = (uint64_t)v9;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  *(void *)(a1 + 16) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_45;
  }
LABEL_44:
  operator delete(__p[0]);
LABEL_45:
  strcpy((char *)__p, "supports_park_car_step");
  HIBYTE(__p[2]) = 22;
  BOOL v13 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 24) = v13;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B91B0;
  strcpy((char *)__p[0], "supports_mount_dismount_step");
  BOOL v14 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 25) = v14;
  __p[0] = operator new(0x38uLL);
  *(_OWORD *)&__p[1] = xmmword_20B99F0;
  strcpy((char *)__p[0], "consider_lane_connections_for_intersection_internal");
  BOOL v15 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 26) = v15;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B91A0;
  strcpy((char *)__p[0], "mount_dismount_min_distance");
  double v16 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v16 >= 0.0)
  {
    double v17 = v16;
    if (v16 >= 4.50359963e15) {
      goto LABEL_59;
    }
    uint64_t v18 = (uint64_t)(v16 + v16) + 1;
  }
  else
  {
    double v17 = v16;
    if (v16 <= -4.50359963e15) {
      goto LABEL_59;
    }
    uint64_t v18 = (uint64_t)(v16 + v16);
    if (v18 >= 1) {
      --v18;
    }
  }
  double v17 = (double)(v18 >> 1);
LABEL_59:
  if (v17 < 9.22337204e18)
  {
    if (v16 >= 0.0)
    {
      if (v16 >= 4.50359963e15) {
        goto LABEL_70;
      }
      uint64_t v19 = (uint64_t)(v16 + v16) + 1;
    }
    else
    {
      if (v16 <= -4.50359963e15) {
        goto LABEL_70;
      }
      uint64_t v19 = (uint64_t)(v16 + v16);
      if (v19 >= 1) {
        --v19;
      }
    }
    double v16 = (double)(v19 >> 1);
LABEL_70:
    *(void *)(a1 + 32) = (uint64_t)v16;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_71;
  }
  *(void *)(a1 + 32) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_72;
  }
LABEL_71:
  operator delete(__p[0]);
LABEL_72:
  HIBYTE(__p[2]) = 20;
  strcpy((char *)__p, "estimated_lane_width");
  double v20 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v20 >= 0.0)
  {
    double v21 = v20;
    if (v20 >= 4.50359963e15) {
      goto LABEL_80;
    }
    uint64_t v22 = (uint64_t)(v20 + v20) + 1;
  }
  else
  {
    double v21 = v20;
    if (v20 <= -4.50359963e15) {
      goto LABEL_80;
    }
    uint64_t v22 = (uint64_t)(v20 + v20);
    if (v22 >= 1) {
      --v22;
    }
  }
  double v21 = (double)(v22 >> 1);
LABEL_80:
  if (v21 < 9.22337204e18)
  {
    if (v20 >= 0.0)
    {
      if (v20 >= 4.50359963e15) {
        goto LABEL_91;
      }
      uint64_t v23 = (uint64_t)(v20 + v20) + 1;
    }
    else
    {
      if (v20 <= -4.50359963e15) {
        goto LABEL_91;
      }
      uint64_t v23 = (uint64_t)(v20 + v20);
      if (v23 >= 1) {
        --v23;
      }
    }
    double v20 = (double)(v23 >> 1);
LABEL_91:
    *(void *)(a1 + 40) = (uint64_t)v20;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_92;
  }
  *(void *)(a1 + 40) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_93;
  }
LABEL_92:
  operator delete(__p[0]);
LABEL_93:
  HIBYTE(__p[2]) = 14;
  strcpy((char *)__p, "min_fork_angle");
  double v24 = sub_5C7E8(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(double *)(a1 + 48) = v24;
  HIBYTE(__p[2]) = 14;
  strcpy((char *)__p, "max_fork_angle");
  double v25 = sub_5C7E8(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(double *)(a1 + 56) = v25;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8870;
  strcpy((char *)__p[0], "min_distance_to_next_mnvr");
  double v26 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v26 >= 0.0)
  {
    double v27 = v26;
    if (v26 >= 4.50359963e15) {
      goto LABEL_105;
    }
    uint64_t v28 = (uint64_t)(v26 + v26) + 1;
  }
  else
  {
    double v27 = v26;
    if (v26 <= -4.50359963e15) {
      goto LABEL_105;
    }
    uint64_t v28 = (uint64_t)(v26 + v26);
    if (v28 >= 1) {
      --v28;
    }
  }
  double v27 = (double)(v28 >> 1);
LABEL_105:
  if (v27 < 9.22337204e18)
  {
    if (v26 >= 0.0)
    {
      if (v26 >= 4.50359963e15) {
        goto LABEL_116;
      }
      uint64_t v29 = (uint64_t)(v26 + v26) + 1;
    }
    else
    {
      if (v26 <= -4.50359963e15) {
        goto LABEL_116;
      }
      uint64_t v29 = (uint64_t)(v26 + v26);
      if (v29 >= 1) {
        --v29;
      }
    }
    double v26 = (double)(v29 >> 1);
LABEL_116:
    *(void *)(a1 + 64) = (uint64_t)v26;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_118;
    }
    goto LABEL_117;
  }
  *(void *)(a1 + 64) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_118;
  }
LABEL_117:
  operator delete(__p[0]);
LABEL_118:
  strcpy((char *)__p, "max_next_step_fraction");
  HIBYTE(__p[2]) = 22;
  double v30 = sub_5C7E8(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(double *)(a1 + 72) = v30;
  strcpy((char *)__p, "max_extension_distance");
  HIBYTE(__p[2]) = 22;
  double v31 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v31 >= 0.0)
  {
    double v32 = v31;
    if (v31 >= 4.50359963e15) {
      goto LABEL_128;
    }
    uint64_t v33 = (uint64_t)(v31 + v31) + 1;
  }
  else
  {
    double v32 = v31;
    if (v31 <= -4.50359963e15) {
      goto LABEL_128;
    }
    uint64_t v33 = (uint64_t)(v31 + v31);
    if (v33 >= 1) {
      --v33;
    }
  }
  double v32 = (double)(v33 >> 1);
LABEL_128:
  if (v32 < 9.22337204e18)
  {
    if (v31 >= 0.0)
    {
      if (v31 >= 4.50359963e15) {
        goto LABEL_139;
      }
      uint64_t v34 = (uint64_t)(v31 + v31) + 1;
    }
    else
    {
      if (v31 <= -4.50359963e15) {
        goto LABEL_139;
      }
      uint64_t v34 = (uint64_t)(v31 + v31);
      if (v34 >= 1) {
        --v34;
      }
    }
    double v31 = (double)(v34 >> 1);
LABEL_139:
    *(void *)(a1 + 80) = (uint64_t)v31;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_141;
    }
    goto LABEL_140;
  }
  *(void *)(a1 + 80) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_141;
  }
LABEL_140:
  operator delete(__p[0]);
LABEL_141:
  strcpy((char *)__p, "min_segment_end_offset");
  HIBYTE(__p[2]) = 22;
  double v35 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v35 >= 0.0)
  {
    double v36 = v35;
    if (v35 >= 4.50359963e15) {
      goto LABEL_149;
    }
    uint64_t v37 = (uint64_t)(v35 + v35) + 1;
  }
  else
  {
    double v36 = v35;
    if (v35 <= -4.50359963e15) {
      goto LABEL_149;
    }
    uint64_t v37 = (uint64_t)(v35 + v35);
    if (v37 >= 1) {
      --v37;
    }
  }
  double v36 = (double)(v37 >> 1);
LABEL_149:
  if (v36 < 9.22337204e18)
  {
    if (v35 >= 0.0)
    {
      if (v35 >= 4.50359963e15) {
        goto LABEL_160;
      }
      uint64_t v38 = (uint64_t)(v35 + v35) + 1;
    }
    else
    {
      if (v35 <= -4.50359963e15) {
        goto LABEL_160;
      }
      uint64_t v38 = (uint64_t)(v35 + v35);
      if (v38 >= 1) {
        --v38;
      }
    }
    double v35 = (double)(v38 >> 1);
LABEL_160:
    *(void *)(a1 + 88) = (uint64_t)v35;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_162;
    }
    goto LABEL_161;
  }
  *(void *)(a1 + 88) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
    goto LABEL_162;
  }
LABEL_161:
  operator delete(__p[0]);
LABEL_162:
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8E90;
  strcpy((char *)__p[0], "enable_towards_parking_guidance");
  BOOL v39 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 96) = v39;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8890;
  strcpy((char *)__p[0], "enable_walking_light_guidance");
  BOOL v40 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 97) = v40;
  __p[0] = operator new(0x38uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9A60;
  strcpy((char *)__p[0], "walking_light_guidance_min_step_distance_initial");
  double v41 = sub_5C7E8(a2, (uint64_t)__p) * 100.0;
  if (v41 >= 0.0)
  {
    double v42 = v41;
    if (v41 >= 4.50359963e15) {
      goto LABEL_174;
    }
    uint64_t v43 = (uint64_t)(v41 + v41) + 1;
  }
  else
  {
    double v42 = v41;
    if (v41 <= -4.50359963e15) {
      goto LABEL_174;
    }
    uint64_t v43 = (uint64_t)(v41 + v41);
    if (v43 >= 1) {
      --v43;
    }
  }
  double v42 = (double)(v43 >> 1);
LABEL_174:
  if (v42 >= 9.22337204e18)
  {
    *(void *)(a1 + 104) = 0x7FFFFFFFFFFFFFFELL;
    if (SHIBYTE(__p[2]) < 0) {
      goto LABEL_186;
    }
    return a1;
  }
  if (v41 >= 0.0)
  {
    if (v41 >= 4.50359963e15) {
      goto LABEL_185;
    }
    uint64_t v44 = (uint64_t)(v41 + v41) + 1;
  }
  else
  {
    if (v41 <= -4.50359963e15) {
      goto LABEL_185;
    }
    uint64_t v44 = (uint64_t)(v41 + v41);
    if (v44 >= 1) {
      --v44;
    }
  }
  double v41 = (double)(v44 >> 1);
LABEL_185:
  *(void *)(a1 + 104) = (uint64_t)v41;
  if (SHIBYTE(__p[2]) < 0) {
LABEL_186:
  }
    operator delete(__p[0]);
  return a1;
}

void sub_82EE80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_82EEDC(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4, _DWORD *a5, _DWORD *a6)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)&long long v11 = -1;
  *((void *)&v11 + 1) = -1;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = v11;
  *(void *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 56) = v11;
  *(_OWORD *)(a1 + 72) = v11;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = -1;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  sub_594714(a1 + 136, a2);
  *(_WORD *)(a1 + 328) = 5;
  *(unsigned char *)(a1 + 330) = 0;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(void *)(a1 + 400) = 0;
  sub_6F30A4(a1 + 408);
  *(unsigned char *)(a1 + 560) = 0;
  *(void *)(a1 + 616) = -1;
  *(void *)&long long v12 = -1;
  *((void *)&v12 + 1) = -1;
  *(_OWORD *)(a1 + 568) = v12;
  *(_OWORD *)(a1 + 584) = v12;
  *(_OWORD *)(a1 + 600) = v12;
  *(_DWORD *)(a1 + 624) = 0;
  *(void *)(a1 + 632) = -1;
  *(_DWORD *)(a1 + 640) = 0;
  *(void *)(a1 + 688) = 0;
  *(void *)(a1 + 704) = 0;
  *(void *)(a1 + 696) = 0;
  *(unsigned char *)(a1 + 680) = 0;
  *(_OWORD *)(a1 + 648) = 0u;
  *(_OWORD *)(a1 + 664) = 0u;
  sub_6F30A4(a1 + 712);
  *(void *)(a1 + 864) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 872) = *a3;
  *(_DWORD *)(a1 + 880) = *a4;
  *(_DWORD *)(a1 + 884) = *a5;
  *(_DWORD *)(a1 + 888) = *a6;
  *(_DWORD *)(a1 + 892) = 0;
  sub_5A9D64(a1 + 896);
  *(unsigned char *)(a1 + 1856) = 0;
  *(_OWORD *)(a1 + 1840) = 0u;
  *(_OWORD *)(a1 + 1824) = 0u;
  *(_OWORD *)(a1 + 1808) = 0u;
  *(_OWORD *)(a1 + 1792) = 0u;
  *(_OWORD *)(a1 + 1776) = 0u;
  *(_OWORD *)(a1 + 1760) = 0u;
  *(_OWORD *)(a1 + 1744) = 0u;
  *(_OWORD *)(a1 + 1728) = 0u;
  *(_OWORD *)(a1 + 1712) = 0u;
  *(_DWORD *)(a1 + 1860) = 3;
  *(unsigned char *)(a1 + 1864) = 0;
  *(void *)(a1 + 1872) = 0;
  *(_OWORD *)(a1 + 1880) = 0u;
  *(unsigned char *)(a1 + 1896) = 1;
  *(_DWORD *)(a1 + 1900) = 0;
  *(void *)(a1 + 1912) = -1;
  *(void *)(a1 + 1904) = -1;
  *(_DWORD *)(a1 + 1920) = -1;
  *(_DWORD *)(a1 + 1924) = 0x7FFFFFFF;
  *(_OWORD *)(a1 + 1928) = 0u;
  *(_OWORD *)(a1 + 1944) = 0u;
  *(_OWORD *)(a1 + 1960) = 0u;
  *(void *)(a1 + 1976) = 0;
  *(void *)(a1 + 1984) = 0xBFF0000000000000;
  *(unsigned char *)(a1 + 1992) = 0;
  *(_OWORD *)(a1 + 2000) = 0u;
  *(_DWORD *)(a1 + 2016) = 0x7FFFFFFF;
  *(void *)(a1 + 2020) = 0x7FFFFFFF7FFFFFFFLL;
  *(void *)(a1 + 2032) = 0;
  *(_OWORD *)(a1 + 2048) = 0u;
  *(_OWORD *)(a1 + 2064) = 0u;
  *(void *)(a1 + 2040) = off_243A000;
  *(_DWORD *)(a1 + 2080) = 0;
  *(unsigned char *)(a1 + 2084) = 1;
  *(_OWORD *)(a1 + 2096) = 0u;
  *(void *)(a1 + 2112) = 0;
  *(void *)(a1 + 2088) = off_243A038;
  *(_WORD *)(a1 + 2120) = 0;
  *(unsigned char *)(a1 + 2122) = 0;
  *(_OWORD *)(a1 + 2136) = 0u;
  *(void *)(a1 + 2152) = 0;
  *(void *)(a1 + 2128) = off_2439F28;
  *(unsigned char *)(a1 + 2160) = 0;
  *(void *)(a1 + 2216) = 0;
  *(_OWORD *)(a1 + 2200) = 0u;
  *(void *)(a1 + 2184) = 0;
  *(_DWORD *)(a1 + 2192) = 0;
  *(_OWORD *)(a1 + 2168) = 0u;
  *(_WORD *)(a1 + 2224) = 1;
  *(unsigned char *)(a1 + 2226) = 0;
  *(_OWORD *)(a1 + 2228) = 0u;
  *(void *)(a1 + 2244) = 0;
  *(void *)(a1 + 2252) = 0x7FFFFFFF00000000;
  *(void *)(a1 + 2272) = 0;
  *(_DWORD *)(a1 + 2264) = 0x7FFFFFFF;
  *(void *)(a1 + 2268) = 0x7FFFFFFF7FFFFFFFLL;
  *(void *)(a1 + 2280) = 0;
  *(void *)(a1 + 2288) = 0x8000000080000000;
  *(unsigned char *)(a1 + 2344) = 0;
  *(_OWORD *)(a1 + 2328) = 0u;
  *(_OWORD *)(a1 + 2312) = 0u;
  *(_OWORD *)(a1 + 2296) = 0u;
  *(_DWORD *)(a1 + 2348) = 0x7FFFFFFF;
  *(void *)(a1 + 2352) = 0x8000000080000000;
  *(_DWORD *)(a1 + 2368) = -1;
  *(void *)(a1 + 2376) = 0;
  *(void *)(a1 + 2384) = 0x7FFFFFFFFFFFFFFFLL;
  *(unsigned char *)(a1 + 2392) = 0;
  return a1;
}

void sub_82F1B4(_Unwind_Exception *a1)
{
  sub_4A50F4(v4);
  sub_4A6814((uint64_t *)(v1 + 688));
  sub_28F14C((void **)(v1 + 656));
  sub_4A50F4(v3);
  sub_59241C((uint64_t *)(v1 + 384));
  sub_59241C((uint64_t *)(v1 + 360));
  sub_59241C((uint64_t *)(v1 + 336));
  sub_592058(v2);
  _Unwind_Resume(a1);
}

char *sub_82F21C(char **a1, void *a2, uint64_t *a3, char *a4, uint64_t *a5, uint64_t *a6, char *a7)
{
  BOOL v14 = a1[1];
  unint64_t v13 = (unint64_t)a1[2];
  if ((unint64_t)v14 < v13)
  {
    uint64_t v15 = *a3;
    char v16 = *a4;
    uint64_t v17 = *a5;
    uint64_t v18 = *a6;
    char v19 = *a7;
    *(void *)BOOL v14 = *a2;
    *((void *)v14 + 1) = v15;
    v14[16] = v16;
    *((void *)v14 + 3) = v17;
    *((void *)v14 + 4) = v18;
    v14[40] = v19;
    double v20 = v14 + 56;
    *((void *)v14 + 6) = 0;
    goto LABEL_14;
  }
  double v21 = *a1;
  uint64_t v22 = 0x6DB6DB6DB6DB6DB7 * ((v14 - *a1) >> 3);
  unint64_t v23 = v22 + 1;
  if ((unint64_t)(v22 + 1) > 0x492492492492492) {
    sub_2E00();
  }
  unint64_t v24 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v13 - (void)v21) >> 3);
  if (2 * v24 > v23) {
    unint64_t v23 = 2 * v24;
  }
  if (v24 >= 0x249249249249249) {
    unint64_t v25 = 0x492492492492492;
  }
  else {
    unint64_t v25 = v23;
  }
  if (v25 > 0x492492492492492) {
    sub_188D718();
  }
  uint64_t v26 = 56 * v25;
  double v27 = (char *)operator new(56 * v25);
  uint64_t v28 = *a3;
  uint64_t v29 = &v27[56 * v22];
  double v30 = &v27[v26];
  char v31 = *a4;
  uint64_t v32 = *a5;
  uint64_t v33 = *a6;
  char v34 = *a7;
  *(void *)uint64_t v29 = *a2;
  *((void *)v29 + 1) = v28;
  v29[16] = v31;
  *((void *)v29 + 3) = v32;
  *((void *)v29 + 4) = v33;
  v29[40] = v34;
  *((void *)v29 + 6) = 0;
  double v20 = v29 + 56;
  if (v14 == v21)
  {
    *a1 = v29;
    a1[1] = v20;
    a1[2] = v30;
    if (!v21) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  do
  {
    long long v35 = *(_OWORD *)(v14 - 56);
    long long v36 = *(_OWORD *)(v14 - 40);
    long long v37 = *(_OWORD *)(v14 - 24);
    uint64_t v38 = v29 - 56;
    *((void *)v29 - 1) = *((void *)v14 - 1);
    *(_OWORD *)(v29 - 24) = v37;
    *(_OWORD *)(v29 - 40) = v36;
    *(_OWORD *)(v29 - 56) = v35;
    v14 -= 56;
    v29 -= 56;
  }
  while (v14 != v21);
  *a1 = v38;
  a1[1] = v20;
  a1[2] = v30;
  if (v21) {
LABEL_13:
  }
    operator delete(v21);
LABEL_14:
  a1[1] = v20;
  return v20 - 56;
}

char *sub_82F3FC(char **a1, void *a2, uint64_t *a3, char *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v13 = a1[1];
  unint64_t v12 = (unint64_t)a1[2];
  if ((unint64_t)v13 < v12)
  {
    uint64_t v14 = *a3;
    char v15 = *a4;
    uint64_t v16 = *a5;
    uint64_t v17 = *a6;
    *(void *)unint64_t v13 = *a2;
    *((void *)v13 + 1) = v14;
    v13[16] = v15;
    *((void *)v13 + 3) = v16;
    *((void *)v13 + 4) = v17;
    v13[40] = 1;
    uint64_t v18 = v13 + 56;
    *((void *)v13 + 6) = 0;
    goto LABEL_14;
  }
  char v19 = *a1;
  uint64_t v20 = 0x6DB6DB6DB6DB6DB7 * ((v13 - *a1) >> 3);
  unint64_t v21 = v20 + 1;
  if ((unint64_t)(v20 + 1) > 0x492492492492492) {
    sub_2E00();
  }
  unint64_t v22 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v12 - (void)v19) >> 3);
  if (2 * v22 > v21) {
    unint64_t v21 = 2 * v22;
  }
  if (v22 >= 0x249249249249249) {
    unint64_t v23 = 0x492492492492492;
  }
  else {
    unint64_t v23 = v21;
  }
  if (v23 > 0x492492492492492) {
    sub_188D718();
  }
  uint64_t v24 = 56 * v23;
  unint64_t v25 = (char *)operator new(56 * v23);
  uint64_t v26 = *a3;
  double v27 = &v25[56 * v20];
  uint64_t v28 = &v25[v24];
  char v29 = *a4;
  uint64_t v30 = *a5;
  uint64_t v31 = *a6;
  *(void *)double v27 = *a2;
  *((void *)v27 + 1) = v26;
  v27[16] = v29;
  *((void *)v27 + 3) = v30;
  *((void *)v27 + 4) = v31;
  v27[40] = 1;
  *((void *)v27 + 6) = 0;
  uint64_t v18 = v27 + 56;
  if (v13 == v19)
  {
    *a1 = v27;
    a1[1] = v18;
    a1[2] = v28;
    if (!v19) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  do
  {
    long long v32 = *(_OWORD *)(v13 - 56);
    long long v33 = *(_OWORD *)(v13 - 40);
    long long v34 = *(_OWORD *)(v13 - 24);
    long long v35 = v27 - 56;
    *((void *)v27 - 1) = *((void *)v13 - 1);
    *(_OWORD *)(v27 - 24) = v34;
    *(_OWORD *)(v27 - 40) = v33;
    *(_OWORD *)(v27 - 56) = v32;
    v13 -= 56;
    v27 -= 56;
  }
  while (v13 != v19);
  *a1 = v35;
  a1[1] = v18;
  a1[2] = v28;
  if (v19) {
LABEL_13:
  }
    operator delete(v19);
LABEL_14:
  a1[1] = v18;
  return v18 - 56;
}

uint64_t sub_82F5CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = 0x2FC962FC962FC963 * ((a1[1] - *a1) >> 5);
  unint64_t v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) > 0x1B4E81B4E81B4ELL) {
    sub_2E00();
  }
  if (0x5F92C5F92C5F92C6 * ((a1[2] - *a1) >> 5) > v4) {
    unint64_t v4 = 0x5F92C5F92C5F92C6 * ((a1[2] - *a1) >> 5);
  }
  if ((unint64_t)(0x2FC962FC962FC963 * ((a1[2] - *a1) >> 5)) >= 0xDA740DA740DA7) {
    unint64_t v6 = 0x1B4E81B4E81B4ELL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0x1B4E81B4E81B4ELL) {
      sub_188D718();
    }
    uint64_t v7 = (char *)operator new(2400 * v6);
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v14 = (uint64_t)&v7[2400 * v3];
  char v15 = &v7[2400 * v6];
  sub_5940FC(v14, a2);
  uint64_t v8 = v14;
  uint64_t v9 = v14 + 2400;
  long long v11 = (char *)*a1;
  double v10 = (char *)a1[1];
  if (v10 == (char *)*a1)
  {
    *a1 = v14;
    a1[1] = v9;
    a1[2] = (uint64_t)v15;
  }
  else
  {
    do
    {
      v10 -= 2400;
      uint64_t v8 = sub_5A9F18(v8 - 2400, (uint64_t)v10);
    }
    while (v10 != v11);
    unint64_t v12 = (char *)*a1;
    double v10 = (char *)a1[1];
    *a1 = v8;
    a1[1] = v9;
    a1[2] = (uint64_t)v15;
    if (v10 != v12)
    {
      do
      {
        v10 -= 2400;
        sub_575E00((uint64_t)v10);
      }
      while (v10 != v12);
      double v10 = v12;
    }
  }
  if (v10) {
    operator delete(v10);
  }
  return v14 + 2400;
}

void sub_82F74C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_5A9EC4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_82F760(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = 0x2FC962FC962FC963 * ((a1[1] - *a1) >> 5);
  unint64_t v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) > 0x1B4E81B4E81B4ELL) {
    sub_2E00();
  }
  if (0x5F92C5F92C5F92C6 * ((a1[2] - *a1) >> 5) > v4) {
    unint64_t v4 = 0x5F92C5F92C5F92C6 * ((a1[2] - *a1) >> 5);
  }
  if ((unint64_t)(0x2FC962FC962FC963 * ((a1[2] - *a1) >> 5)) >= 0xDA740DA740DA7) {
    unint64_t v6 = 0x1B4E81B4E81B4ELL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0x1B4E81B4E81B4ELL) {
      sub_188D718();
    }
    uint64_t v7 = (char *)operator new(2400 * v6);
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v8 = &v7[2400 * v6];
  uint64_t v9 = sub_5A9F18((uint64_t)&v7[2400 * v3], a2);
  uint64_t v10 = v9 + 2400;
  unint64_t v12 = (char *)*a1;
  long long v11 = (char *)a1[1];
  if (v11 == (char *)*a1)
  {
    *a1 = v9;
    a1[1] = v10;
    a1[2] = (uint64_t)v8;
    if (!v11) {
      return v10;
    }
    goto LABEL_17;
  }
  do
  {
    v11 -= 2400;
    uint64_t v9 = sub_5A9F18(v9 - 2400, (uint64_t)v11);
  }
  while (v11 != v12);
  unint64_t v13 = (char *)*a1;
  long long v11 = (char *)a1[1];
  *a1 = v9;
  a1[1] = v10;
  a1[2] = (uint64_t)v8;
  if (v11 != v13)
  {
    do
    {
      v11 -= 2400;
      sub_575E00((uint64_t)v11);
    }
    while (v11 != v13);
    long long v11 = v13;
  }
  if (v11) {
LABEL_17:
  }
    operator delete(v11);
  return v10;
}

uint64_t sub_82F8BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = sub_2D5D58(a3, v5 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(a3 + 7772))
  {
    uint64_t v7 = sub_2DB8E0(a3 + 3896, v5, 0);
    uint64_t v8 = &v7[-*(int *)v7];
    if (*(unsigned __int16 *)v8 < 5u)
    {
      uint64_t v9 = 0;
    }
    else
    {
      uint64_t v9 = *((unsigned __int16 *)v8 + 2);
      if (v9) {
        v9 += (uint64_t)&v7[*(unsigned int *)&v7[v9]];
      }
    }
    uint64_t v10 = v9 + 4 * WORD2(v5) + 4 + *(unsigned int *)(v9 + 4 * WORD2(v5) + 4);
  }
  else
  {
    uint64_t v10 = 0;
  }
  v13[0] = v6;
  v13[1] = v10;
  v13[2] = sub_2E5C38(a3, v5 & 0xFFFFFFFFFFFFLL, 1);
  v13[3] = v11;
  int v14 = v5;
  __int16 v15 = WORD2(v5);
  BOOL v16 = (v5 & 0xFF000000000000) != 0;
  return sub_64F480(a1, v13);
}

void sub_82F9BC(char **a1, unint64_t a2)
{
  uint64_t v2 = *a1;
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 6) >= a2) {
    return;
  }
  if (a2 >= 0x155555555555556) {
    sub_2E00();
  }
  unint64_t v4 = a1[1];
  uint64_t v5 = 192 * a2;
  uint64_t v6 = (char *)operator new(192 * a2);
  uint64_t v7 = &v6[v5];
  uint64_t v8 = &v6[v4 - v2];
  if (v4 == v2)
  {
    *a1 = v8;
    a1[1] = v8;
    a1[2] = v7;
    if (!v2) {
      return;
    }
    goto LABEL_15;
  }
  uint64_t v9 = 0;
  do
  {
    uint64_t v10 = &v4[v9];
    uint64_t v11 = &v8[v9];
    *((_OWORD *)v11 - 12) = *(_OWORD *)&v4[v9 - 192];
    *((void *)v11 - 22) = *(void *)&v4[v9 - 176];
    *((void *)v10 - 24) = 0;
    *((void *)v10 - 23) = 0;
    *((void *)v10 - 22) = 0;
    *(_OWORD *)(v11 - 168) = *(_OWORD *)&v4[v9 - 168];
    *(_OWORD *)(v11 - 152) = *(_OWORD *)&v4[v9 - 152];
    *((void *)v11 - 17) = *(void *)&v4[v9 - 136];
    *((void *)v10 - 19) = 0;
    *((void *)v10 - 18) = 0;
    *((void *)v10 - 17) = 0;
    *((_DWORD *)v11 - 32) = *(_DWORD *)&v4[v9 - 128];
    long long v12 = *(_OWORD *)&v4[v9 - 120];
    long long v13 = *(_OWORD *)&v4[v9 - 104];
    long long v14 = *(_OWORD *)&v4[v9 - 88];
    *(_OWORD *)(v11 - 72) = *(_OWORD *)&v4[v9 - 72];
    *(_OWORD *)(v11 - 88) = v14;
    *(_OWORD *)(v11 - 104) = v13;
    *(_OWORD *)(v11 - 120) = v12;
    long long v15 = *(_OWORD *)&v4[v9 - 56];
    long long v16 = *(_OWORD *)&v4[v9 - 40];
    long long v17 = *(_OWORD *)&v4[v9 - 24];
    *(void *)(v11 - 9) = *(void *)&v4[v9 - 9];
    *(_OWORD *)(v11 - 24) = v17;
    *(_OWORD *)(v11 - 40) = v16;
    *(_OWORD *)(v11 - 56) = v15;
    v9 -= 192;
  }
  while (&v4[v9] != v2);
  uint64_t v18 = *a1;
  uint64_t v2 = a1[1];
  *a1 = &v8[v9];
  a1[1] = v8;
  a1[2] = v7;
  if (v2 != v18)
  {
    do
    {
      char v19 = (void *)*((void *)v2 - 19);
      if (v19)
      {
        *((void *)v2 - 18) = v19;
        operator delete(v19);
      }
      uint64_t v20 = (void *)*((void *)v2 - 24);
      if (v20)
      {
        *((void *)v2 - 23) = v20;
        operator delete(v20);
      }
      v2 -= 192;
    }
    while (v2 != v18);
    uint64_t v2 = v18;
  }
  if (v2)
  {
LABEL_15:
    operator delete(v2);
  }
}

uint64_t sub_82FB68(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a2;
  if (a5 < 1) {
    return v5;
  }
  uint64_t v7 = a3;
  uint64_t v9 = a1[2];
  unint64_t v10 = (unint64_t)a1[1];
  if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v9[-v10] >> 6)) >= a5)
  {
    uint64_t v16 = v10 - a2;
    if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v10 - a2) >> 6)) >= a5)
    {
      uint64_t v18 = a3 + 192 * a5;
    }
    else
    {
      uint64_t v18 = a3 + ((uint64_t)(v10 - a2) >> 6 << 6);
      if (v18 == a4)
      {
        a1[1] = (void *)v10;
        if (v16 < 1) {
          return v5;
        }
      }
      else
      {
        uint64_t v19 = 0;
        do
        {
          sub_594714(v10 + v19, v18 + v19);
          v19 += 192;
        }
        while (v18 + v19 != a4);
        a1[1] = (void *)(v10 + v19);
        if (v16 < 1) {
          return v5;
        }
      }
    }
    sub_82FFF8((uint64_t)a1, v5, v10, v5 + 192 * a5);
    if (v18 != v7)
    {
      uint64_t v20 = 0;
      do
      {
        uint64_t v27 = v5 + v20;
        if (v7 != v5)
        {
          sub_2D8554((void *)(v5 + v20), *(char **)(v7 + v20), *(char **)(v7 + v20 + 8), (uint64_t)(*(void *)(v7 + v20 + 8) - *(void *)(v7 + v20)) >> 3);
          *(_OWORD *)(v27 + 24) = *(_OWORD *)(v7 + v20 + 24);
          sub_531608((void *)(v27 + 40), *(char **)(v7 + v20 + 40), *(char **)(v7 + v20 + 48), (uint64_t)(*(void *)(v7 + v20 + 48) - *(void *)(v7 + v20 + 40)) >> 2);
        }
        *(_DWORD *)(v27 + 64) = *(_DWORD *)(v7 + v20 + 64);
        long long v21 = *(_OWORD *)(v7 + v20 + 72);
        long long v22 = *(_OWORD *)(v7 + v20 + 88);
        long long v23 = *(_OWORD *)(v7 + v20 + 104);
        *(_OWORD *)(v27 + 120) = *(_OWORD *)(v7 + v20 + 120);
        *(_OWORD *)(v27 + 104) = v23;
        *(_OWORD *)(v27 + 88) = v22;
        *(_OWORD *)(v27 + 72) = v21;
        long long v24 = *(_OWORD *)(v7 + v20 + 136);
        long long v25 = *(_OWORD *)(v7 + v20 + 152);
        long long v26 = *(_OWORD *)(v7 + v20 + 168);
        *(void *)(v27 + 183) = *(void *)(v7 + v20 + 183);
        *(_OWORD *)(v27 + 168) = v26;
        *(_OWORD *)(v27 + 152) = v25;
        *(_OWORD *)(v27 + 136) = v24;
        v20 += 192;
      }
      while (v7 + v20 != v18);
    }
    return v5;
  }
  uint64_t v11 = *a1;
  unint64_t v12 = a5 - 0x5555555555555555 * ((uint64_t)(v10 - (void)*a1) >> 6);
  if (v12 > 0x155555555555555) {
    sub_2E00();
  }
  unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((v9 - v11) >> 6);
  if (2 * v13 > v12) {
    unint64_t v12 = 2 * v13;
  }
  if (v13 >= 0xAAAAAAAAAAAAAALL) {
    unint64_t v14 = 0x155555555555555;
  }
  else {
    unint64_t v14 = v12;
  }
  if (v14)
  {
    if (v14 > 0x155555555555555) {
      sub_188D718();
    }
    long long v15 = (char *)operator new(192 * v14);
  }
  else
  {
    long long v15 = 0;
  }
  uint64_t v28 = (uint64_t)&v15[64 * ((v5 - (uint64_t)v11) >> 6)];
  uint64_t v55 = v28;
  __int16 v56 = &v15[192 * v14];
  uint64_t v29 = 192 * a5;
  uint64_t v30 = v28 + v29;
  do
  {
    sub_594714(v28, v7);
    v28 += 192;
    v7 += 192;
    v29 -= 192;
  }
  while (v29);
  uint64_t v31 = v55;
  long long v32 = *a1;
  uint64_t v33 = v55;
  if (*a1 != (void *)v5)
  {
    uint64_t v34 = 0;
    do
    {
      uint64_t v35 = v55 + v34;
      uint64_t v36 = v5 + v34;
      *(void *)(v35 - 192) = 0;
      *(void *)(v35 - 184) = 0;
      *(void *)(v35 - 176) = 0;
      *(_OWORD *)(v35 - 192) = *(_OWORD *)(v5 + v34 - 192);
      *(void *)(v35 - 176) = *(void *)(v5 + v34 - 176);
      *(void *)(v36 - 184) = 0;
      *(void *)(v36 - 176) = 0;
      *(void *)(v36 - 192) = 0;
      long long v37 = *(_OWORD *)(v5 + v34 - 168);
      *(void *)(v35 - 144) = 0;
      *(void *)(v35 - 136) = 0;
      *(_OWORD *)(v35 - 168) = v37;
      *(void *)(v35 - 152) = 0;
      *(_OWORD *)(v35 - 152) = *(_OWORD *)(v5 + v34 - 152);
      *(void *)(v35 - 136) = *(void *)(v5 + v34 - 136);
      *(void *)(v36 - 152) = 0;
      *(void *)(v36 - 144) = 0;
      *(void *)(v36 - 136) = 0;
      *(_DWORD *)(v35 - 128) = *(_DWORD *)(v5 + v34 - 128);
      long long v38 = *(_OWORD *)(v5 + v34 - 120);
      long long v39 = *(_OWORD *)(v5 + v34 - 104);
      long long v40 = *(_OWORD *)(v5 + v34 - 88);
      *(_OWORD *)(v35 - 72) = *(_OWORD *)(v5 + v34 - 72);
      *(_OWORD *)(v35 - 88) = v40;
      *(_OWORD *)(v35 - 104) = v39;
      *(_OWORD *)(v35 - 120) = v38;
      long long v41 = *(_OWORD *)(v5 + v34 - 56);
      long long v42 = *(_OWORD *)(v5 + v34 - 40);
      long long v43 = *(_OWORD *)(v5 + v34 - 24);
      *(void *)(v35 - 9) = *(void *)(v5 + v34 - 9);
      *(_OWORD *)(v35 - 24) = v43;
      *(_OWORD *)(v35 - 40) = v42;
      *(_OWORD *)(v35 - 56) = v41;
      v34 -= 192;
    }
    while ((void *)(v5 + v34) != v32);
    uint64_t v33 = v55 + v34;
  }
  uint64_t v44 = a1[1];
  if (v44 != (void *)v5)
  {
    do
    {
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v5;
      *(void *)(v30 + 16) = *(void *)(v5 + 16);
      *(void *)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      *(void *)(v5 + 16) = 0;
      *(_OWORD *)(v30 + 24) = *(_OWORD *)(v5 + 24);
      *(_OWORD *)(v30 + 40) = *(_OWORD *)(v5 + 40);
      *(void *)(v30 + 56) = *(void *)(v5 + 56);
      *(void *)(v5 + 40) = 0;
      *(void *)(v5 + 48) = 0;
      *(void *)(v5 + 56) = 0;
      *(_DWORD *)(v30 + 64) = *(_DWORD *)(v5 + 64);
      long long v45 = *(_OWORD *)(v5 + 72);
      long long v46 = *(_OWORD *)(v5 + 88);
      long long v47 = *(_OWORD *)(v5 + 104);
      *(_OWORD *)(v30 + 120) = *(_OWORD *)(v5 + 120);
      *(_OWORD *)(v30 + 104) = v47;
      *(_OWORD *)(v30 + 88) = v46;
      *(_OWORD *)(v30 + 72) = v45;
      long long v48 = *(_OWORD *)(v5 + 136);
      long long v49 = *(_OWORD *)(v5 + 152);
      long long v50 = *(_OWORD *)(v5 + 168);
      *(void *)(v30 + 183) = *(void *)(v5 + 183);
      *(_OWORD *)(v30 + 168) = v50;
      *(_OWORD *)(v30 + 152) = v49;
      *(_OWORD *)(v30 + 136) = v48;
      v30 += 192;
      v5 += 192;
    }
    while ((void *)v5 != v44);
    uint64_t v5 = (uint64_t)a1[1];
  }
  uint64_t v51 = *a1;
  *a1 = (void *)v33;
  a1[1] = (void *)v30;
  a1[2] = v56;
  while ((void *)v5 != v51)
  {
    int v52 = *(void **)(v5 - 152);
    if (v52)
    {
      *(void *)(v5 - 144) = v52;
      operator delete(v52);
    }
    uint64_t v53 = *(void **)(v5 - 192);
    if (v53)
    {
      *(void *)(v5 - 184) = v53;
      operator delete(v53);
    }
    v5 -= 192;
  }
  if (v51) {
    operator delete(v51);
  }
  return v31;
}

void sub_82FFC0(_Unwind_Exception *exception_object)
{
  if (v3) {
    sub_20A9A6C();
  }
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(exception_object);
}

void sub_82FFE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_7DBF84((uint64_t)va);
  _Unwind_Resume(a1);
}

__n128 sub_82FFF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = a2 + v4 - a4;
  if (v5 >= a3)
  {
    *(void *)(a1 + 8) = v4;
    if (v4 == a4) {
      return result;
    }
  }
  else
  {
    unint64_t v6 = a2 + v4 - a4;
    uint64_t v7 = *(void *)(a1 + 8);
    do
    {
      *(void *)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      *(void *)(v7 + 16) = 0;
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
      *(void *)(v7 + 16) = *(void *)(v6 + 16);
      *(void *)(v6 + 8) = 0;
      *(void *)(v6 + 16) = 0;
      *(void *)unint64_t v6 = 0;
      *(_OWORD *)(v7 + 24) = *(_OWORD *)(v6 + 24);
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(void *)(v7 + 40) = 0;
      *(_OWORD *)(v7 + 40) = *(_OWORD *)(v6 + 40);
      *(void *)(v7 + 56) = *(void *)(v6 + 56);
      *(void *)(v6 + 40) = 0;
      *(void *)(v6 + 48) = 0;
      *(void *)(v6 + 56) = 0;
      *(_DWORD *)(v7 + 64) = *(_DWORD *)(v6 + 64);
      long long v8 = *(_OWORD *)(v6 + 72);
      long long v9 = *(_OWORD *)(v6 + 88);
      long long v10 = *(_OWORD *)(v6 + 104);
      *(_OWORD *)(v7 + 120) = *(_OWORD *)(v6 + 120);
      *(_OWORD *)(v7 + 104) = v10;
      *(_OWORD *)(v7 + 88) = v9;
      *(_OWORD *)(v7 + 72) = v8;
      __n128 result = *(__n128 *)(v6 + 136);
      long long v12 = *(_OWORD *)(v6 + 152);
      long long v13 = *(_OWORD *)(v6 + 168);
      *(void *)(v7 + 183) = *(void *)(v6 + 183);
      *(_OWORD *)(v7 + 168) = v13;
      *(_OWORD *)(v7 + 152) = v12;
      *(__n128 *)(v7 + 136) = result;
      v7 += 192;
      v6 += 192;
    }
    while (v6 < a3);
    *(void *)(a1 + 8) = v7;
    if (v4 == a4) {
      return result;
    }
  }
  uint64_t v14 = 0;
  uint64_t v15 = -64 * ((v4 - a4) >> 6);
  do
  {
    uint64_t v23 = v4 + v14;
    long long v25 = (void **)(v4 + v14 - 192);
    long long v24 = *v25;
    if (*v25)
    {
      *(void *)(v23 - 184) = v24;
      operator delete(v24);
      *long long v25 = 0;
      *(void *)(v4 + v14 - 184) = 0;
      *(void *)(v4 + v14 - 176) = 0;
    }
    uint64_t v26 = v5 + v14 - 192;
    *(_OWORD *)long long v25 = *(_OWORD *)v26;
    *(void *)(v23 - 176) = *(void *)(v5 + v14 - 176);
    *(void *)uint64_t v26 = 0;
    *(void *)(v26 + 8) = 0;
    *(void *)(v26 + 16) = 0;
    uint64_t v29 = *(void **)(v23 - 152);
    uint64_t v28 = (void *)(v23 - 152);
    uint64_t v27 = v29;
    *((_OWORD *)v28 - 1) = *(_OWORD *)(v5 + v14 - 168);
    if (v29)
    {
      *(void *)(v4 + v14 - 144) = v27;
      operator delete(v27);
      *uint64_t v28 = 0;
      v28[1] = 0;
      v28[2] = 0;
    }
    uint64_t v16 = v5 + v14;
    *(_OWORD *)uint64_t v28 = *(_OWORD *)(v5 + v14 - 152);
    uint64_t v17 = v4 + v14;
    *(void *)(v17 - 136) = *(void *)(v5 + v14 - 136);
    *(void *)(v16 - 152) = 0;
    *(void *)(v16 - 144) = 0;
    *(void *)(v16 - 136) = 0;
    *(_DWORD *)(v17 - 128) = *(_DWORD *)(v5 + v14 - 128);
    long long v18 = *(_OWORD *)(v5 + v14 - 120);
    long long v19 = *(_OWORD *)(v5 + v14 - 104);
    long long v20 = *(_OWORD *)(v5 + v14 - 88);
    *(_OWORD *)(v17 - 72) = *(_OWORD *)(v5 + v14 - 72);
    *(_OWORD *)(v17 - 88) = v20;
    *(_OWORD *)(v17 - 104) = v19;
    *(_OWORD *)(v17 - 120) = v18;
    __n128 result = *(__n128 *)(v5 + v14 - 56);
    long long v21 = *(_OWORD *)(v5 + v14 - 40);
    long long v22 = *(_OWORD *)(v5 + v14 - 24);
    *(void *)(v17 - 9) = *(void *)(v5 + v14 - 9);
    *(_OWORD *)(v17 - 24) = v22;
    *(_OWORD *)(v17 - 40) = v21;
    *(__n128 *)(v17 - 56) = result;
    v14 -= 192;
  }
  while (v15 != v14);
  return result;
}

uint64_t sub_8301FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = sub_2D5D58(a3, v5 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(a3 + 7772))
  {
    uint64_t v7 = sub_2DB8E0(a3 + 3896, v5, 0);
    long long v8 = &v7[-*(int *)v7];
    if (*(unsigned __int16 *)v8 < 5u)
    {
      uint64_t v9 = 0;
    }
    else
    {
      uint64_t v9 = *((unsigned __int16 *)v8 + 2);
      if (v9) {
        v9 += (uint64_t)&v7[*(unsigned int *)&v7[v9]];
      }
    }
    uint64_t v10 = v9 + 4 * WORD2(v5) + 4 + *(unsigned int *)(v9 + 4 * WORD2(v5) + 4);
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t v15 = v6;
  uint64_t v16 = v10;
  uint64_t v17 = sub_2E5C38(a3, v5 & 0xFFFFFFFFFFFFLL, 1);
  uint64_t v18 = v11;
  if ((v5 & 0xFF000000000000) != 0) {
    int v12 = 0x40000000;
  }
  else {
    int v12 = 1610612736;
  }
  v14[0] = v5;
  v14[1] = v12 | WORD2(v5);
  int v19 = v5;
  __int16 v20 = WORD2(v5);
  BOOL v21 = (v5 & 0xFF000000000000) != 0;
  return sub_652DE0(a1, v14);
}

uint64_t sub_830314(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  unint64_t v6 = ((unint64_t)(a2[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)a2[1] << 32) | v5;
  char v7 = BYTE6(v6) ^ 1;
  unint64_t v8 = (v6 ^ 0x1000000000000) >> 32;
  unint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  uint64_t v10 = sub_2D5D58(a3, v6 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(a3 + 7772))
  {
    uint64_t v11 = sub_2DB8E0(a3 + 3896, v5, 0);
    int v12 = &v11[-*(int *)v11];
    if (*(unsigned __int16 *)v12 < 5u)
    {
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v13 = *((unsigned __int16 *)v12 + 2);
      if (v13) {
        v13 += (uint64_t)&v11[*(unsigned int *)&v11[v13]];
      }
    }
    uint64_t v14 = v13 + 4 * (unsigned __int16)v8 + 4 + *(unsigned int *)(v13 + 4 * (unsigned __int16)v8 + 4);
  }
  else
  {
    uint64_t v14 = 0;
  }
  v17[0] = v10;
  v17[1] = v14;
  v17[2] = sub_2E5C38(a3, v9, 1);
  v17[3] = v15;
  int v18 = v5;
  __int16 v19 = v8;
  char v20 = v7;
  return sub_64F480(a1, v17);
}

uint64_t sub_830428(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = ((unint64_t)(a2[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)a2[1] << 32) | v6;
  unint64_t v8 = v7 ^ 0x1000000000000;
  unint64_t v9 = (v7 ^ 0x1000000000000) >> 32;
  unint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  uint64_t v11 = sub_2D5D58(a3, v7 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(a3 + 7772))
  {
    int v12 = sub_2DB8E0(a3 + 3896, v6, 0);
    uint64_t v13 = &v12[-*(int *)v12];
    if (*(unsigned __int16 *)v13 < 5u)
    {
      uint64_t v14 = 0;
    }
    else
    {
      uint64_t v14 = *((unsigned __int16 *)v13 + 2);
      if (v14) {
        v14 += (uint64_t)&v12[*(unsigned int *)&v12[v14]];
      }
    }
    uint64_t v15 = v14 + 4 * (unsigned __int16)v9 + 4 + *(unsigned int *)(v14 + 4 * (unsigned __int16)v9 + 4);
  }
  else
  {
    uint64_t v15 = 0;
  }
  uint64_t v16 = sub_2E5C38(a3, v10, 1);
  unsigned int v17 = a2[1];
  uint64_t v21 = v11;
  uint64_t v22 = v15;
  uint64_t v23 = v16;
  uint64_t v24 = v18;
  v20[0] = v6;
  v20[1] = WORD2(v8) | ((HIWORD(v8) == 0) << 29) | v17 & 0x40000000 | ((v17 >> 30 == 2) << 31);
  int v25 = v6;
  __int16 v26 = v9;
  char v27 = BYTE6(v8);
  return sub_652DE0(a1, v20);
}

double sub_830578()
{
  byte_25C84B7 = 1;
  word_25C84A0 = 65;
  byte_25C84CF = 1;
  word_25C84B8 = 65;
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_25C8560 = 0u;
  *(_OWORD *)&qword_25C8570 = 0u;
  dword_25C8580 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_25C8560, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_25C8560, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_25C8560, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_25C8560, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  byte_25C84E7 = 8;
  strcpy((char *)&qword_25C84D0, "any_mode");
  byte_25C84FF = 7;
  strcpy((char *)&dword_25C84E8, "cycling");
  byte_25C8517 = 7;
  strcpy((char *)&dword_25C8500, "driving");
  byte_25C852F = 7;
  strcpy((char *)&dword_25C8518, "walking");
  qword_25C8538 = 0;
  qword_25C8540 = 0;
  qword_25C8530 = 0;
  uint64_t v0 = operator new(9uLL);
  *(void *)uint64_t v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_25C8530 = (uint64_t)v0;
  qword_25C8538 = (uint64_t)(v0 + 9);
  qword_25C8540 = (uint64_t)(v0 + 9);
  qword_25C8548 = 0;
  qword_25C8550 = 0;
  unk_25C8558 = 0;
  uint64_t v1 = (char *)operator new(9uLL);
  qword_25C8550 = (uint64_t)(v1 + 9);
  unk_25C8558 = v1 + 9;
  double result = 1.10224369e-279;
  *(void *)uint64_t v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_25C8548 = (uint64_t)v1;
  return result;
}

void sub_830840(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (qword_25C8570) {
    sub_20AB248((void **)qword_25C8570);
  }
  long long v37 = (void *)xmmword_25C8560;
  *(void *)&xmmword_25C8560 = 0;
  if (v37)
  {
    operator delete(v37);
    if ((a36 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a29 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((a36 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a24);
  if ((a22 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a15 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
LABEL_12:
  operator delete(a17);
  if ((a15 & 0x80000000) == 0) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

void sub_8308E0(void *a1@<X0>, int *a2@<X1>, char **a3@<X8>)
{
  if (*a2 < 0) {
    char v4 = -5;
  }
  else {
    char v4 = 5;
  }
  if (*a2 / 10 + (((103 * (char)(v4 + *a2 % 10)) >> 15) & 1) + ((103 * (char)(v4 + *a2 % 10)) >> 10) < 0x78
    || (int v5 = a1, v6 = a1[1] - *a1, (unint64_t)v6 <= 0x2F))
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    return;
  }
  long long v153 = a3;
  long long __p = 0;
  int v159 = 0;
  unint64_t v160 = 0;
  long long v155 = 0;
  uint64_t v156 = 0;
  uint64_t v157 = 0;
  LODWORD(v164) = 0;
  *(void *)&long long v166 = v6 >> 4;
  sub_5A88D4((uint64_t)&v155, (int *)&v164, (uint64_t *)&v166);
  int v8 = (char *)v155;
  char v7 = v156;
  if (v156 - (unsigned char *)v155 >= 17)
  {
    unint64_t v9 = ((unint64_t)(v156 - (unsigned char *)v155) >> 4) - 2;
    unint64_t v10 = v9 >> 1;
    int v11 = (unint64_t *)((char *)v155 + 16 * (v9 >> 1));
    unint64_t v12 = *((void *)v156 - 2);
    if (v12 >= *v11)
    {
      if (*v11 < v12) {
        goto LABEL_21;
      }
      unint64_t v13 = *((void *)v156 - 1);
      if (v13 >= v11[1]) {
        goto LABEL_21;
      }
    }
    else
    {
      unint64_t v13 = *((void *)v156 - 1);
    }
    *((_OWORD *)v156 - 1) = *(_OWORD *)v11;
    if (v9 >= 2)
    {
      while (1)
      {
        unint64_t v15 = v10 - 1;
        unint64_t v10 = (v10 - 1) >> 1;
        int v14 = (unint64_t *)&v8[16 * v10];
        if (v12 >= *v14 && (*v14 < v12 || v13 >= v14[1])) {
          break;
        }
        *(_OWORD *)int v11 = *(_OWORD *)v14;
        int v11 = (unint64_t *)&v8[16 * v10];
        if (v15 <= 1) {
          goto LABEL_13;
        }
      }
    }
    int v14 = v11;
LABEL_13:
    *int v14 = v12;
    v14[1] = v13;
    int v8 = (char *)v155;
    char v7 = v156;
  }
LABEL_21:
  if (v8 != v7)
  {
    while (1)
    {
      unint64_t v16 = *(void *)v8;
      unint64_t v17 = *((void *)v8 + 1);
      uint64_t v18 = v7 - v8;
      if (v7 - v8 < 17) {
        goto LABEL_45;
      }
      uint64_t v19 = 0;
      uint64_t v20 = v18 >> 4;
      long long v166 = *(_OWORD *)v8;
      int64_t v21 = (unint64_t)((v18 >> 4) - 2) >> 1;
      uint64_t v22 = v8;
      do
      {
        uint64_t v23 = v22;
        v22 += 16 * v19 + 16;
        uint64_t v24 = 2 * v19;
        uint64_t v19 = (2 * v19) | 1;
        uint64_t v25 = v24 + 2;
        if (v25 < v20)
        {
          unint64_t v26 = *((void *)v22 + 2);
          if (v26 < *(void *)v22 || *(void *)v22 >= v26 && *((void *)v22 + 3) < *((void *)v22 + 1))
          {
            v22 += 16;
            uint64_t v19 = v25;
          }
        }
        *(_OWORD *)uint64_t v23 = *(_OWORD *)v22;
      }
      while (v19 <= v21);
      char v27 = v7 - 16;
      if (v22 == v7 - 16)
      {
        *(_OWORD *)uint64_t v22 = v166;
      }
      else
      {
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v27;
        *(_OWORD *)char v27 = v166;
        uint64_t v28 = v22 - v8 + 16;
        if (v28 >= 17)
        {
          unint64_t v29 = ((unint64_t)v28 >> 4) - 2;
          unint64_t v30 = v29 >> 1;
          uint64_t v31 = &v8[16 * (v29 >> 1)];
          unint64_t v32 = *(void *)v22;
          if (*(void *)v22 < *(void *)v31)
          {
            unint64_t v33 = *((void *)v22 + 1);
LABEL_35:
            *(_OWORD *)uint64_t v22 = *(_OWORD *)v31;
            if (v29 >= 2)
            {
              while (1)
              {
                unint64_t v35 = v30 - 1;
                unint64_t v30 = (v30 - 1) >> 1;
                uint64_t v34 = (unint64_t *)&v8[16 * v30];
                if (v32 >= *v34 && (*v34 < v32 || v33 >= v34[1])) {
                  break;
                }
                *(_OWORD *)uint64_t v31 = *(_OWORD *)v34;
                uint64_t v31 = &v8[16 * v30];
                if (v35 <= 1) {
                  goto LABEL_37;
                }
              }
            }
            uint64_t v34 = (unint64_t *)v31;
LABEL_37:
            *uint64_t v34 = v32;
            v34[1] = v33;
            goto LABEL_44;
          }
          if (*(void *)v31 >= v32)
          {
            unint64_t v33 = *((void *)v22 + 1);
            if (v33 < *((void *)v31 + 1)) {
              goto LABEL_35;
            }
          }
        }
      }
LABEL_44:
      char v7 = v156;
LABEL_45:
      uint64_t v156 = v7 - 16;
      if (v17 <= v16) {
        goto LABEL_63;
      }
      uint64_t v36 = *v5 + 16 * v17;
      uint64_t v37 = *v5 + 16 * v16;
      uint64_t v38 = 0;
      unint64_t v39 = 16 * v17 - 16 - 16 * v16;
      if (v39)
      {
        uint64_t v42 = 0;
        int v43 = 0;
        int v44 = 0;
        uint64_t v45 = (v39 >> 4) + 1;
        uint64_t v41 = v37 + 16 * (v45 & 0x1FFFFFFFFFFFFFFELL);
        uint64_t v46 = v37 + 16;
        uint64_t v47 = v45 & 0x1FFFFFFFFFFFFFFELL;
        do
        {
          v38 += *(void *)(v46 - 16);
          v42 += *(void *)v46;
          v43 += *(_DWORD *)(v46 - 8);
          v44 += *(_DWORD *)(v46 + 8);
          v46 += 32;
          v47 -= 2;
        }
        while (v47);
        int v40 = v44 + v43;
        v38 += v42;
        if (v45 == (v45 & 0x1FFFFFFFFFFFFFFELL)) {
          goto LABEL_52;
        }
      }
      else
      {
        int v40 = 0;
        uint64_t v41 = *v5 + 16 * v16;
      }
      do
      {
        v38 += *(void *)v41;
        v40 += *(_DWORD *)(v41 + 8);
        v41 += 16;
      }
      while (v41 != v36);
LABEL_52:
      uint64_t v48 = v38 / 100;
      __int16 v49 = v38 % 100;
      if (v38 < 0) {
        __int16 v50 = -50;
      }
      else {
        __int16 v50 = 50;
      }
      uint64_t v51 = v48 + (int)(((5243 * (__int16)(v50 + v49)) >> 19) + ((5243 * (__int16)(v50 + v49)) >> 31));
      if (v51) {
        BOOL v52 = v40 == 0;
      }
      else {
        BOOL v52 = 1;
      }
      if (v52
        || ((v53 = (double)v51, int v54 = v40 / 10, v55 = v40 % 10, v40 < 0) ? (v56 = -5) : (v56 = 5),
            double v57 = v53
                / (double)(int)(v54
                              + (((103 * (char)(v56 + v55)) >> 15) & 1)
                              + ((103 * (char)(v56 + v55)) >> 10)),
            v57 == 0.0))
      {
LABEL_63:
        long long v154 = 0uLL;
LABEL_64:
        uint64_t v58 = v159;
        if (v159 < v160)
        {
          *(void *)int v159 = v16;
          v58[1] = v17;
          double v59 = (char *)(v58 + 2);
LABEL_83:
          int v159 = v59;
          goto LABEL_84;
        }
        int v60 = __p;
        uint64_t v61 = (v159 - (unsigned char *)__p) >> 4;
        unint64_t v62 = v61 + 1;
        if ((unint64_t)(v61 + 1) >> 60) {
          sub_2E00();
        }
        uint64_t v63 = v5;
        uint64_t v64 = v160 - (unsigned char *)__p;
        if ((v160 - (unsigned char *)__p) >> 3 > v62) {
          unint64_t v62 = v64 >> 3;
        }
        if ((unint64_t)v64 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v65 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v65 = v62;
        }
        if (v65)
        {
          if (v65 >> 60) {
            sub_188D718();
          }
          uint64_t v66 = (char *)operator new(16 * v65);
          char v67 = &v66[16 * v61];
          *(void *)char v67 = v16;
          *((void *)v67 + 1) = v17;
          char v68 = v67;
          if (v58 == v60)
          {
LABEL_80:
            double v59 = v67 + 16;
            long long __p = v68;
            unint64_t v160 = &v66[16 * v65];
            if (v58) {
              goto LABEL_81;
            }
            goto LABEL_82;
          }
        }
        else
        {
          uint64_t v66 = 0;
          char v67 = (char *)(16 * v61);
          *(void *)char v67 = v16;
          *((void *)v67 + 1) = v17;
          char v68 = (char *)(16 * v61);
          if (v58 == v60) {
            goto LABEL_80;
          }
        }
        do
        {
          *((_OWORD *)v68 - 1) = *((_OWORD *)v58 - 1);
          v68 -= 16;
          v58 -= 2;
        }
        while (v58 != v60);
        uint64_t v58 = __p;
        double v59 = v67 + 16;
        long long __p = v68;
        unint64_t v160 = &v66[16 * v65];
        if (v58) {
LABEL_81:
        }
          operator delete(v58);
LABEL_82:
        int v5 = v63;
        goto LABEL_83;
      }
      long long v166 = 0uLL;
      uint64_t v167 = 0;
      if (v17 >= v16) {
        unint64_t v69 = v17 - v16;
      }
      else {
        unint64_t v69 = 0;
      }
      if (v69 >> 61) {
        sub_2E00();
      }
      *(void *)&long long v166 = operator new(8 * v69);
      *((void *)&v166 + 1) = v166;
      uint64_t v167 = v166 + 8 * v69;
      *(void *)&long long v164 = &v166;
      do
      {
        int v70 = *(_DWORD *)(v37 + 8);
        if (*(uint64_t *)v37 < 0) {
          __int16 v71 = -50;
        }
        else {
          __int16 v71 = 50;
        }
        double v72 = (double)(*(void *)v37 / 100
                     + (int)(((5243 * (__int16)(v71 + *(void *)v37 % 100)) >> 19)
                           + ((5243 * (__int16)(v71 + *(void *)v37 % 100)) >> 31)))
            / v57;
        int v73 = v70 / 10;
        int v74 = v70 % 10;
        if (v70 < 0) {
          char v75 = -5;
        }
        else {
          char v75 = 5;
        }
        double v161 = (double)(int)(v73
                           + (((103 * (char)(v75 + v74)) >> 15) & 1)
                           + ((103 * (char)(v75 + v74)) >> 10))
             - v72;
        sub_831688((uint64_t *)&v164, &v161);
        v37 += 16;
      }
      while (v37 != v36);
      unsigned int v76 = (void *)*((void *)&v166 + 1);
      if ((void)v166 == *((void *)&v166 + 1))
      {
        unint64_t v81 = 0;
        unint64_t v82 = 0;
        if (*((void *)&v166 + 1)) {
          goto LABEL_106;
        }
        goto LABEL_107;
      }
      sub_3D2274((uint64_t *)&v166, (double *)&v164);
      uint64_t v77 = v166;
      uint64_t v78 = *((void *)&v166 + 1) - v166;
      if (*((void *)&v166 + 1) != (void)v166)
      {
        uint64_t v79 = v78 >> 3;
        if ((unint64_t)v78 < 0x20)
        {
          unint64_t v80 = 0;
LABEL_125:
          unint64_t v94 = v79 - v80;
          uint64_t v95 = (double *)(v77 + 8 * v80);
          do
          {
            double *v95 = -*v95;
            ++v95;
            --v94;
          }
          while (v94);
          goto LABEL_127;
        }
        unint64_t v80 = v79 & 0xFFFFFFFFFFFFFFFCLL;
        uint64_t v91 = (float64x2_t *)(v166 + 16);
        unint64_t v92 = v79 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          float64x2_t v93 = vnegq_f64(*v91);
          v91[-1] = vnegq_f64(v91[-1]);
          *uint64_t v91 = v93;
          v91 += 2;
          v92 -= 4;
        }
        while (v92);
        if (v79 != v80) {
          goto LABEL_125;
        }
      }
LABEL_127:
      sub_3D2274((uint64_t *)&v166, &v161);
      if (v163 < v165) {
        double v96 = v165;
      }
      else {
        double v96 = v163;
      }
      if (v96 < 120.0)
      {
        unint64_t v81 = 0;
        unint64_t v82 = 0;
        unsigned int v76 = (void *)v166;
        if (!(void)v166) {
          goto LABEL_107;
        }
        goto LABEL_106;
      }
      if (v163 < v165 && *((void *)&v164 + 1) > (unint64_t)v164)
      {
        unint64_t v82 = v164 + v16;
        unint64_t v81 = *((void *)&v164 + 1) + v16;
        unsigned int v76 = (void *)v166;
        if (!(void)v166) {
          goto LABEL_107;
        }
LABEL_106:
        *((void *)&v166 + 1) = v76;
        operator delete(v76);
        goto LABEL_107;
      }
      if (v162 > *(void *)&v161) {
        unint64_t v81 = v162 + v16;
      }
      else {
        unint64_t v81 = 0;
      }
      if (v162 > *(void *)&v161) {
        unint64_t v82 = *(void *)&v161 + v16;
      }
      else {
        unint64_t v82 = 0;
      }
      unsigned int v76 = (void *)v166;
      if ((void)v166) {
        goto LABEL_106;
      }
LABEL_107:
      *(void *)&long long v154 = v82;
      *((void *)&v154 + 1) = v81;
      if (v81 <= v82 || v82 == v16 && v81 == v17) {
        goto LABEL_64;
      }
      *(void *)&long long v166 = v16;
      *((void *)&v166 + 1) = v82;
      if (v82 > v16)
      {
        sub_3BFF8((char **)&v155, &v166);
        long long v83 = (char *)v155;
        if (v156 - (unsigned char *)v155 >= 17)
        {
          unint64_t v84 = ((unint64_t)(v156 - (unsigned char *)v155) >> 4) - 2;
          unint64_t v85 = v84 >> 1;
          int v86 = (char *)v155 + 16 * (v84 >> 1);
          unint64_t v87 = *((void *)v156 - 2);
          if (v87 >= *(void *)v86)
          {
            if (*(void *)v86 < v87) {
              goto LABEL_149;
            }
            unint64_t v88 = *((void *)v156 - 1);
            if (v88 >= *((void *)v86 + 1)) {
              goto LABEL_149;
            }
          }
          else
          {
            unint64_t v88 = *((void *)v156 - 1);
          }
          *((_OWORD *)v156 - 1) = *(_OWORD *)v86;
          if (v84 >= 2)
          {
            while (1)
            {
              unint64_t v90 = v85 - 1;
              unint64_t v85 = (v85 - 1) >> 1;
              double v89 = &v83[16 * v85];
              if (v87 >= *(void *)v89 && (*(void *)v89 < v87 || v88 >= *((void *)v89 + 1))) {
                break;
              }
              *(_OWORD *)int v86 = *(_OWORD *)v89;
              int v86 = &v83[16 * v85];
              if (v90 <= 1) {
                goto LABEL_116;
              }
            }
          }
          double v89 = v86;
LABEL_116:
          *(void *)double v89 = v87;
          *((void *)v89 + 1) = v88;
        }
      }
LABEL_149:
      sub_3BFF8((char **)&v155, &v154);
      unint64_t v98 = (char *)v155;
      if (v156 - (unsigned char *)v155 < 17) {
        goto LABEL_162;
      }
      unint64_t v99 = ((unint64_t)(v156 - (unsigned char *)v155) >> 4) - 2;
      unint64_t v100 = v99 >> 1;
      double v101 = (char *)v155 + 16 * (v99 >> 1);
      unint64_t v102 = *((void *)v156 - 2);
      if (v102 >= *(void *)v101)
      {
        if (*(void *)v101 < v102) {
          goto LABEL_162;
        }
        unint64_t v103 = *((void *)v156 - 1);
        if (v103 >= *((void *)v101 + 1)) {
          goto LABEL_162;
        }
      }
      else
      {
        unint64_t v103 = *((void *)v156 - 1);
      }
      *((_OWORD *)v156 - 1) = *(_OWORD *)v101;
      if (v99 >= 2)
      {
        while (1)
        {
          unint64_t v105 = v100 - 1;
          unint64_t v100 = (v100 - 1) >> 1;
          BOOL v104 = &v98[16 * v100];
          if (v102 >= *(void *)v104 && (*(void *)v104 < v102 || v103 >= *((void *)v104 + 1))) {
            break;
          }
          *(_OWORD *)double v101 = *(_OWORD *)v104;
          double v101 = &v98[16 * v100];
          if (v105 <= 1) {
            goto LABEL_154;
          }
        }
      }
      BOOL v104 = v101;
LABEL_154:
      *(void *)BOOL v104 = v102;
      *((void *)v104 + 1) = v103;
LABEL_162:
      *(void *)&long long v164 = *((void *)&v154 + 1);
      *((void *)&v164 + 1) = v17;
      if (v17 > *((void *)&v154 + 1))
      {
        sub_3BFF8((char **)&v155, &v164);
        int v106 = (char *)v155;
        if (v156 - (unsigned char *)v155 >= 17)
        {
          unint64_t v107 = ((unint64_t)(v156 - (unsigned char *)v155) >> 4) - 2;
          unint64_t v108 = v107 >> 1;
          uint64_t v109 = (char *)v155 + 16 * (v107 >> 1);
          unint64_t v110 = *((void *)v156 - 2);
          if (v110 < *(void *)v109)
          {
            unint64_t v111 = *((void *)v156 - 1);
LABEL_166:
            *((_OWORD *)v156 - 1) = *(_OWORD *)v109;
            if (v107 >= 2)
            {
              while (1)
              {
                unint64_t v113 = v108 - 1;
                unint64_t v108 = (v108 - 1) >> 1;
                int v112 = &v106[16 * v108];
                if (v110 >= *(void *)v112 && (*(void *)v112 < v110 || v111 >= *((void *)v112 + 1))) {
                  break;
                }
                *(_OWORD *)uint64_t v109 = *(_OWORD *)v112;
                uint64_t v109 = &v106[16 * v108];
                if (v113 <= 1) {
                  goto LABEL_168;
                }
              }
            }
            int v112 = v109;
LABEL_168:
            *(void *)int v112 = v110;
            *((void *)v112 + 1) = v111;
            goto LABEL_84;
          }
          if (*(void *)v109 >= v110)
          {
            unint64_t v111 = *((void *)v156 - 1);
            if (v111 < *((void *)v109 + 1)) {
              goto LABEL_166;
            }
          }
        }
      }
LABEL_84:
      int v8 = (char *)v155;
      char v7 = v156;
      if (v155 == v156)
      {
        long long v114 = (char *)__p;
        char v7 = (char *)v155;
        if ((unint64_t)(v159 - (unsigned char *)__p) <= 0x1F) {
          goto LABEL_178;
        }
LABEL_180:
        long long v115 = v159;
        v153[1] = 0;
        v153[2] = 0;
        const std::string::value_type *v153 = 0;
        if (v114 != v115)
        {
          int v116 = 0;
          int v117 = v114;
          do
          {
            while (1)
            {
              uint64_t v118 = *((void *)v117 + 1);
              if (*(void *)v117 == v118)
              {
                int v119 = 0;
                uint64_t v120 = 0;
                __int16 v121 = v153;
              }
              else
              {
                uint64_t v122 = 16 * *(void *)v117;
                uint64_t v123 = *v5 + v122;
                unint64_t v124 = 16 * v118 - v122 - 16;
                __int16 v121 = v153;
                if (v124 >= 0x80)
                {
                  uint64_t v126 = (v124 >> 4) + 1;
                  uint64_t v127 = v126 & 7;
                  if ((v126 & 7) == 0) {
                    uint64_t v127 = 8;
                  }
                  uint64_t v128 = v126 - v127;
                  uint64_t v125 = v123 + 16 * v128;
                  uint64_t v129 = v123 + 64;
                  int64x2_t v130 = 0uLL;
                  int64x2_t v131 = 0uLL;
                  int64x2_t v132 = 0uLL;
                  int64x2_t v133 = 0uLL;
                  int32x4_t v134 = 0uLL;
                  int32x4_t v135 = 0uLL;
                  do
                  {
                    uint64_t v136 = (const double *)(v129 - 64);
                    unsigned long long v137 = (unsigned __int128)vld2q_f64(v136);
                    int v138 = (const double *)(v129 - 32);
                    unsigned long long v139 = (unsigned __int128)vld2q_f64(v138);
                    uint64_t v140 = (const double *)v129;
                    unsigned long long v141 = (unsigned __int128)vld2q_f64(v140);
                    v140 += 4;
                    unsigned long long v142 = (unsigned __int128)vld2q_f64(v140);
                    int64x2_t v131 = vaddq_s64((int64x2_t)v139, v131);
                    int64x2_t v130 = vaddq_s64((int64x2_t)v137, v130);
                    char v143 = (const float *)(v129 - 56);
                    char v144 = (const float *)(v129 + 8);
                    unsigned long long v145 = (unsigned __int128)vld4q_f32(v143);
                    unsigned long long v146 = (unsigned __int128)vld4q_f32(v144);
                    int64x2_t v132 = vaddq_s64((int64x2_t)v141, v132);
                    int64x2_t v133 = vaddq_s64((int64x2_t)v142, v133);
                    int32x4_t v134 = vaddq_s32((int32x4_t)v145, v134);
                    int32x4_t v135 = vaddq_s32((int32x4_t)v146, v135);
                    v129 += 128;
                    v128 -= 8;
                  }
                  while (v128);
                  int v119 = vaddvq_s32(vaddq_s32(v135, v134));
                  uint64_t v120 = vaddvq_s64(vaddq_s64(vaddq_s64(v132, v130), vaddq_s64(v133, v131)));
                }
                else
                {
                  uint64_t v120 = 0;
                  int v119 = 0;
                  uint64_t v125 = v123;
                }
                uint64_t v147 = *v5 + 16 * v118;
                do
                {
                  v120 += *(void *)v125;
                  v119 += *(_DWORD *)(v125 + 8);
                  v125 += 16;
                }
                while (v125 != v147);
              }
              *(void *)&long long v166 = v120;
              *((void *)&v166 + 1) = v119;
              uint64_t v148 = v121[1];
              if (*v121 == v148) {
                break;
              }
              int v149 = v119 / 10;
              int v150 = v119 % 10;
              char v151 = v119 < 0 ? -5 : 5;
              if ((int)(v149
                       + (((103 * (char)(v151 + v150)) >> 15) & 1)
                       + ((103 * (char)(v151 + v150)) >> 10)) >= 20)
              {
                char v152 = v116 < 0 ? -5 : 5;
                if ((int)(v116 / 10
                         + (((103 * (char)(v152 + v116 % 10)) >> 15) & 1)
                         + ((103 * (char)(v152 + v116 % 10)) >> 10)) > 19)
                  break;
              }
              *((void *)v148 - 2) += v120;
              *((_DWORD *)v121[1] - 2) += DWORD2(v166);
              v116 += DWORD2(v166);
              v117 += 16;
              if (v117 == v115) {
                goto LABEL_204;
              }
            }
            sub_486894(v121, &v166);
            v116 += DWORD2(v166);
            v117 += 16;
          }
          while (v117 != v115);
LABEL_204:
          char v7 = (char *)v155;
        }
        goto LABEL_205;
      }
    }
  }
  long long v114 = (char *)__p;
  if ((unint64_t)-(uint64_t)__p > 0x1F) {
    goto LABEL_180;
  }
LABEL_178:
  const std::string::value_type *v153 = 0;
  v153[1] = 0;
  v153[2] = 0;
LABEL_205:
  if (v7)
  {
    uint64_t v156 = v7;
    operator delete(v7);
    long long v114 = (char *)__p;
  }
  if (v114) {
    operator delete(v114);
  }
}

void sub_8315F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26)
{
  if (__p)
  {
    operator delete(__p);
    char v27 = a16;
    if (!a16) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    char v27 = a16;
    if (!a16) {
      goto LABEL_3;
    }
  }
  operator delete(v27);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_831688(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v6 = *(char **)(*a1 + 8);
  unint64_t v5 = *(void *)(*a1 + 16);
  char v7 = v6;
  if ((unint64_t)v6 >= v5)
  {
    unint64_t v9 = *(char **)v4;
    uint64_t v10 = (uint64_t)&v6[-*(void *)v4];
    uint64_t v11 = v10 >> 3;
    unint64_t v12 = (v10 >> 3) + 1;
    if (v12 >> 61) {
      sub_2E00();
    }
    uint64_t v13 = v5 - (void)v9;
    if (v13 >> 2 > v12) {
      unint64_t v12 = v13 >> 2;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v12;
    }
    if (v14)
    {
      if (v14 >> 61) {
        sub_188D718();
      }
      unint64_t v15 = operator new(8 * v14);
    }
    else
    {
      unint64_t v15 = 0;
    }
    unint64_t v16 = &v15[8 * v11];
    void *v16 = *a2;
    int v8 = v16 + 1;
    if (v6 != v9)
    {
      unint64_t v17 = v6 - v9 - 8;
      if (v17 < 0x58) {
        goto LABEL_27;
      }
      if ((unint64_t)(v6 - v15 - v10) < 0x20) {
        goto LABEL_27;
      }
      uint64_t v18 = (v17 >> 3) + 1;
      uint64_t v19 = 8 * (v18 & 0x3FFFFFFFFFFFFFFCLL);
      char v7 = &v6[-v19];
      unint64_t v16 = (void *)((char *)v16 - v19);
      uint64_t v20 = &v15[8 * v11 - 16];
      int64_t v21 = v6 - 16;
      uint64_t v22 = v18 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        long long v23 = *(_OWORD *)v21;
        *(v20 - 1) = *((_OWORD *)v21 - 1);
        *uint64_t v20 = v23;
        v20 -= 2;
        v21 -= 32;
        v22 -= 4;
      }
      while (v22);
      if (v18 != (v18 & 0x3FFFFFFFFFFFFFFCLL))
      {
LABEL_27:
        do
        {
          uint64_t v24 = *((void *)v7 - 1);
          v7 -= 8;
          *--unint64_t v16 = v24;
        }
        while (v7 != v9);
      }
    }
    *(void *)uint64_t v4 = v16;
    *(void *)(v4 + 8) = v8;
    *(void *)(v4 + 16) = &v15[8 * v14];
    if (v9) {
      operator delete(v9);
    }
  }
  else
  {
    *(void *)uint64_t v6 = *a2;
    int v8 = v6 + 8;
  }
  *(void *)(v4 + 8) = v8;
  return a1;
}

double sub_8317FC()
{
  byte_25C859F = 1;
  word_25C8588 = 65;
  byte_25C85B7 = 1;
  word_25C85A0 = 65;
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_25C85E8 = 0u;
  *(_OWORD *)&qword_25C85F8 = 0u;
  dword_25C8608 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_25C85E8, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_25C85E8, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_25C85E8, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_25C85E8, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  qword_25C85C0 = 0;
  qword_25C85C8 = 0;
  qword_25C85B8 = 0;
  uint64_t v0 = operator new(9uLL);
  *(void *)uint64_t v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_25C85B8 = (uint64_t)v0;
  qword_25C85C0 = (uint64_t)(v0 + 9);
  qword_25C85C8 = (uint64_t)(v0 + 9);
  qword_25C85D0 = 0;
  qword_25C85D8 = 0;
  unk_25C85E0 = 0;
  uint64_t v1 = (char *)operator new(9uLL);
  qword_25C85D8 = (uint64_t)(v1 + 9);
  unk_25C85E0 = v1 + 9;
  double result = 1.10224369e-279;
  *(void *)uint64_t v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_25C85D0 = (uint64_t)v1;
  return result;
}

void sub_831A38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (qword_25C85F8) {
    sub_20AB28C((void **)qword_25C85F8);
  }
  uint64_t v37 = (void *)xmmword_25C85E8;
  *(void *)&xmmword_25C85E8 = 0;
  if (v37)
  {
    operator delete(v37);
    if ((a36 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a29 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((a36 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a24);
  if ((a22 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a15 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
LABEL_12:
  operator delete(a17);
  if ((a15 & 0x80000000) == 0) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

uint64_t sub_831AD8(uint64_t a1, void *a2, char a3, uint64_t a4)
{
  *(void *)a1 = sub_3750CC(a2);
  sub_5F2D5C(a1 + 8, (long long *)a4, a3);
  uint64_t v19 = operator new(0x20uLL);
  long long v20 = xmmword_20B8E90;
  strcpy((char *)v19, "routing/guidance/StepNamer.json");
  if (*(char *)(a4 + 23) < 0)
  {
    sub_4200(&__dst, *(void **)a4, *(void *)(a4 + 8));
  }
  else
  {
    long long __dst = *(_OWORD *)a4;
    uint64_t v24 = *(void *)(a4 + 16);
  }
  sub_28C774(&v17, (uint64_t)&__dst, 1uLL);
  int v8 = sub_374CDC((uint64_t)a2, (uint64_t)&v19, (uint64_t *)&v17);
  sub_3CB2F0(v8, (uint64_t)__p);
  int64x2_t v9 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  *(int64x2_t *)(a1 + 40) = v9;
  *(int64x2_t *)(a1 + 56) = v9;
  *(int64x2_t *)(a1 + 72) = v9;
  *(void *)(a1 + 88) = 0x4050400000000000;
  *(_WORD *)(a1 + 96) = 0;
  sub_835524(a1 + 40, __p);
  char v10 = v22;
  if (v22)
  {
    do
    {
      unint64_t v15 = *(char **)v10;
      sub_57AC8((uint64_t *)v10 + 5);
      if (v10[39] < 0) {
        operator delete(*((void **)v10 + 2));
      }
      operator delete(v10);
      char v10 = v15;
    }
    while (v15);
  }
  int v11 = __p[0];
  __p[0] = 0;
  if (v11) {
    operator delete(v11);
  }
  unint64_t v12 = (void **)v17;
  if (v17)
  {
    char v13 = v18;
    int v14 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v13 - 1) < 0) {
          operator delete(*(v13 - 3));
        }
        v13 -= 3;
      }
      while (v13 != v12);
      int v14 = v17;
    }
    uint64_t v18 = v12;
    operator delete(v14);
  }
  if (SHIBYTE(v24) < 0)
  {
    operator delete((void *)__dst);
    if ((SHIBYTE(v20) & 0x80000000) == 0) {
      return a1;
    }
LABEL_22:
    operator delete(v19);
    return a1;
  }
  if (SHIBYTE(v20) < 0) {
    goto LABEL_22;
  }
  return a1;
}

void sub_831CF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0)
  {
    operator delete(__p);
    if ((*(char *)(v19 + 31) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v19 + 31) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v20);
  _Unwind_Resume(exception_object);
}

void sub_831D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = nullsub_1(a2);
  uint64_t v6 = *(void **)v5;
  char v7 = *(void **)(v5 + 8);
  if (*(void **)v5 != v7)
  {
    do
    {
      uint64_t v8 = v6[134] - v6[133];
      if (v8)
      {
        unint64_t v9 = 0;
        uint64_t v10 = v8 / 2400;
        do
          sub_831E54(a1, v6, v9++, a3);
        while (v10 != v9);
      }
      sub_832B38(a1, (uint64_t)v6);
      v6 += 1541;
    }
    while (v6 != v7);
  }
}

void sub_831E54(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_51690C(a2 + 133, a3);
  if ((*(_DWORD *)(v7 + 160) - 89) < 2) {
    return;
  }
  uint64_t v8 = v7;
  unint64_t v9 = (uint64_t *)nullsub_1(a2);
  unint64_t v10 = *(void *)(v8 + 24);
  if (v10 >= 0xCCCCCCCCCCCCCCCDLL * ((v9[1] - *v9) >> 3)) {
    unint64_t v10 = sub_46C760(a2) - 1;
  }
  uint64_t v77 = (int64x2_t *)(v8 + 336);
  int v11 = (int **)sub_46C8EC(a2, v10);
  unint64_t v12 = (const std::string *)sub_4D4928(a2 + 928, v10);
  std::string::operator=((std::string *)(a1 + 8), v12);
  uint64_t v13 = *(unsigned int *)(v8 + 160);
  if (v13 > 0x3F) {
    goto LABEL_15;
  }
  if (((1 << v13) & 0xC000000000300008) == 0)
  {
    if (v13 == 4)
    {
      sub_832E0C(a1, v8, a4, v9, (uint64_t)v99);
      if (sub_6F2FD8((uint64_t)v99))
      {
        unint64_t v14 = *(void *)(v8 + 344);
        if (v14 >= *(void *)(v8 + 352))
        {
          uint64_t v15 = sub_5B09D8(v77, (long long *)v99);
        }
        else
        {
          sub_4AA8E0(*(char **)(v8 + 344), (long long *)v99);
          uint64_t v15 = v14 + 152;
          *(void *)(v8 + 344) = v14 + 152;
        }
        *(void *)(v8 + 344) = v15;
      }
      goto LABEL_59;
    }
LABEL_15:
    unint64_t v16 = (unsigned __int16 *)((char *)*v11 - **v11);
    if (*v16 >= 0x2Fu)
    {
      uint64_t v17 = v16[23];
      if (v17)
      {
        unsigned int v18 = *((unsigned __int8 *)*v11 + v17);
        BOOL v19 = v18 > 0x2A;
        uint64_t v20 = (1 << v18) & 0x50426810004;
        if (!v19 && v20 != 0) {
          goto LABEL_64;
        }
      }
    }
    v86[0] = v11[4];
    __p[0] = 0;
    __p[1] = 0;
    v90[0] = 0;
    sub_832C78(a1, (unsigned int *)v86, a4, (uint64_t)__p, (uint64_t)v99);
    if (SHIBYTE(v90[0]) < 0) {
      operator delete(__p[0]);
    }
    if (!sub_6F2FD8((uint64_t)v99)) {
      goto LABEL_59;
    }
    unint64_t v22 = *(void *)(v8 + 344);
    if (v22 >= *(void *)(v8 + 352))
    {
      uint64_t v23 = sub_5B09D8(v77, (long long *)v99);
    }
    else
    {
      sub_4AA8E0(*(char **)(v8 + 344), (long long *)v99);
      uint64_t v23 = v22 + 152;
      *(void *)(v8 + 344) = v22 + 152;
    }
    *(void *)(v8 + 344) = v23;
    v83[0] = *(void **)(sub_46C8EC(a2, *(void *)(v8 + 16)) + 32);
    v86[0] = 0;
    v86[1] = 0;
    v87[0] = 0;
    sub_832C78(a1, (unsigned int *)v83, a4, (uint64_t)v86, (uint64_t)__p);
    if (SHIBYTE(v87[0]) < 0) {
      operator delete(v86[0]);
    }
    *(unsigned char *)(v8 + 560) = sub_6F317C((unsigned __int8 *)__p, v99);
    if (v98 < 0)
    {
      operator delete(v97);
      if ((v96 & 0x80000000) == 0)
      {
LABEL_44:
        if ((v94 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        goto LABEL_50;
      }
    }
    else if ((v96 & 0x80000000) == 0)
    {
      goto LABEL_44;
    }
    operator delete(v95);
    if ((v94 & 0x80000000) == 0)
    {
LABEL_45:
      if ((v92 & 0x80000000) == 0) {
        goto LABEL_46;
      }
      goto LABEL_51;
    }
LABEL_50:
    operator delete(v93);
    if ((v92 & 0x80000000) == 0)
    {
LABEL_46:
      if ((SHIBYTE(v90[0]) & 0x80000000) == 0) {
        goto LABEL_59;
      }
LABEL_52:
      operator delete(__p[0]);
      goto LABEL_59;
    }
LABEL_51:
    operator delete(v91);
    if ((SHIBYTE(v90[0]) & 0x80000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_52;
  }
  if (!*(unsigned char *)(v8 + 304) || *(void *)(v8 + 136) == *(void *)(v8 + 144)) {
    goto LABEL_15;
  }
  sub_83313C((uint64_t *)a1, (uint64_t **)(v8 + 136), a4, v99);
  if (sub_6F2FD8((uint64_t)v99))
  {
    sub_8330D4(v77, (long long *)v99);
    if (*(void *)(v8 + 336) == *(void *)(v8 + 344)) {
      goto LABEL_59;
    }
LABEL_32:
    v83[0] = v11[4];
    v86[0] = 0;
    v86[1] = 0;
    v87[0] = 0;
    sub_832C78(a1, (unsigned int *)v83, a4, (uint64_t)v86, (uint64_t)__p);
    if (SHIBYTE(v87[0]) < 0) {
      operator delete(v86[0]);
    }
    if (!sub_6F2FD8((uint64_t)__p)) {
      goto LABEL_58;
    }
    sub_6F3150((char *)v77->i64[0], (uint64_t)v86);
    sub_6F3150((char *)__p, (uint64_t)v83);
    BOOL v24 = sub_69412C((unsigned __int8 *)v86, (unsigned __int8 *)v83);
    if (SBYTE7(v84) < 0)
    {
      operator delete(v83[0]);
      if ((SHIBYTE(v87[0]) & 0x80000000) == 0)
      {
LABEL_37:
        if (!v24) {
          goto LABEL_58;
        }
        goto LABEL_57;
      }
    }
    else if ((SHIBYTE(v87[0]) & 0x80000000) == 0)
    {
      goto LABEL_37;
    }
    operator delete(v86[0]);
    if (!v24)
    {
LABEL_58:
      sub_4A50F4((uint64_t)__p);
      goto LABEL_59;
    }
LABEL_57:
    sub_8330D4(v77, (long long *)__p);
    goto LABEL_58;
  }
  v83[0] = *(void **)(sub_46C8EC(a2, *(void *)(v8 + 16)) + 32);
  v86[0] = 0;
  v86[1] = 0;
  v87[0] = 0;
  sub_832C78(a1, (unsigned int *)v83, a4, (uint64_t)v86, (uint64_t)__p);
  if (SHIBYTE(v87[0]) < 0) {
    operator delete(v86[0]);
  }
  if (sub_6F2FD8((uint64_t)__p)) {
    sub_8330D4(v77, (long long *)__p);
  }
  sub_4A50F4((uint64_t)__p);
  if (*(void *)(v8 + 336) != *(void *)(v8 + 344)) {
    goto LABEL_32;
  }
LABEL_59:
  if (v108 < 0)
  {
    operator delete(v107);
    if ((v105 & 0x80000000) == 0)
    {
LABEL_61:
      if ((v103 & 0x80000000) == 0) {
        goto LABEL_62;
      }
      goto LABEL_102;
    }
  }
  else if ((v105 & 0x80000000) == 0)
  {
    goto LABEL_61;
  }
  operator delete(v104);
  if ((v103 & 0x80000000) == 0)
  {
LABEL_62:
    if ((v101 & 0x80000000) == 0) {
      goto LABEL_63;
    }
LABEL_103:
    operator delete(v100);
    if ((v99[23] & 0x80000000) == 0) {
      goto LABEL_64;
    }
LABEL_104:
    operator delete(*(void **)v99);
    goto LABEL_64;
  }
LABEL_102:
  operator delete(v102);
  if (v101 < 0) {
    goto LABEL_103;
  }
LABEL_63:
  if ((v99[23] & 0x80000000) != 0) {
    goto LABEL_104;
  }
LABEL_64:
  uint64_t v25 = (void **)(v8 + 360);
  sub_833F34((uint64_t *)a1, v9, v8, a4, 0, (int64x2_t *)v99);
  uint64_t v26 = *(void *)(v8 + 360);
  if (v26)
  {
    sub_52FA20(v8 + 360, v26);
    operator delete(*v25);
    *uint64_t v25 = 0;
    *(void *)(v8 + 368) = 0;
    *(void *)(v8 + 376) = 0;
  }
  uint64_t v27 = *(void *)v99;
  *(void *)(v8 + 360) = *(void *)v99;
  uint64_t v28 = *(void *)&v99[8];
  *(_OWORD *)(v8 + 368) = *(_OWORD *)&v99[8];
  *(_OWORD *)long long __p = 0u;
  *(_OWORD *)unint64_t v90 = 0u;
  LODWORD(v91) = 1065353216;
  *(_OWORD *)int v86 = 0u;
  *(_OWORD *)unint64_t v87 = 0u;
  int v88 = 1065353216;
  *(_OWORD *)long long v83 = 0u;
  long long v84 = 0u;
  int v85 = 1065353216;
  uint64_t v29 = *(void *)(v8 + 336);
  unsigned int v76 = (int64x2_t *)(v8 + 360);
  if (v29 == *(void *)(v8 + 344))
  {
    uint64_t v30 = v28;
  }
  else
  {
    sub_24AFC((uint64_t)__p, v29, v29);
    sub_24AFC((uint64_t)v86, v77->i64[0] + 128, v77->i64[0] + 128);
    sub_83D34C((uint64_t)v83, (unsigned int *)(v77->i64[0] + 64), v77->i64[0] + 64);
    uint64_t v27 = *(void *)(v8 + 360);
    uint64_t v30 = *(void *)(v8 + 368);
  }
  *(void *)unint64_t v99 = __p;
  *(void *)&v99[8] = v86;
  *(void *)&v99[16] = v83;
  uint64_t v31 = sub_83D8BC(v27, v30, (uint64_t *)v99);
  if (*(void *)(v8 + 368) != v31) {
    sub_52FA20((uint64_t)v76, v31);
  }
  char v75 = v9;
  uint64_t v32 = 0;
  unint64_t v33 = (uint64_t *)(v8 + 384);
  unint64_t v81 = (void *)nullsub_1(a2);
  uint64_t v82 = v34;
  while (*(_DWORD *)(v8 + 160) != 4
       && *(void *)(v8 + 336) == *(void *)(v8 + 344)
       && *(void *)(v8 + 360) == *(void *)(v8 + 368)
       && v32 < *(void *)(a1 + 40))
  {
    sub_46B060();
    uint64_t v37 = v36;
    unint64_t v39 = v38;
    if (v81)
    {
      unint64_t v40 = v82;
      unint64_t v41 = sub_46C760(v81);
      BOOL v42 = v40 >= v41;
      BOOL v43 = v40 < v41;
      if (!v37)
      {
        if (v42) {
          break;
        }
        goto LABEL_92;
      }
    }
    else
    {
      if (!v36) {
        break;
      }
      BOOL v43 = 0;
    }
    unint64_t v44 = sub_46C760(v37);
    if (v39 < v44 && v43)
    {
      uint64_t v46 = sub_46C8EC(v81, v82);
      if (v46 == sub_46C8EC(v37, v39)) {
        break;
      }
    }
    else if (((v43 ^ (v39 < v44)) & 1) == 0)
    {
      break;
    }
LABEL_92:
    uint64_t v47 = (char **)sub_46C8EC(v81, v82);
    uint64_t v48 = *v47;
    __int16 v49 = &(*v47)[-*(int *)*v47];
    if (*(unsigned __int16 *)v49 < 0x2Fu
      || !*((_WORD *)v49 + 23)
      || ((unsigned int v50 = v48[*((unsigned __int16 *)v49 + 23)],
           BOOL v19 = v50 > 0x2A,
           uint64_t v51 = (1 << v50) & 0x50426810004,
           !v19)
        ? (BOOL v52 = v51 == 0)
        : (BOOL v52 = 1),
          v52))
    {
      int v54 = (int *)v47[4];
      uint64_t v79 = 0;
      unint64_t v80 = v54;
      v78[0] = 0;
      v78[1] = 0;
      sub_832C78(a1, (unsigned int *)&v80, a4, (uint64_t)v78, (uint64_t)v99);
      if (SHIBYTE(v79) < 0) {
        operator delete(v78[0]);
      }
      if (sub_6F2FD8((uint64_t)v99))
      {
        int v106 = 1;
        unint64_t v55 = *(void *)(v8 + 368);
        if (v55 >= *(void *)(v8 + 376))
        {
          uint64_t v56 = sub_83DB04(v76, (long long *)v99);
        }
        else
        {
          sub_4AA8E0(*(char **)(v8 + 368), (long long *)v99);
          uint64_t v56 = v55 + 152;
          *(void *)(v8 + 368) = v55 + 152;
        }
        *(void *)(v8 + 368) = v56;
      }
      if (v108 < 0)
      {
        operator delete(v107);
        if (v105 < 0) {
          goto LABEL_173;
        }
LABEL_114:
        if ((v103 & 0x80000000) == 0) {
          goto LABEL_115;
        }
LABEL_174:
        operator delete(v102);
        if (v101 < 0) {
          goto LABEL_175;
        }
LABEL_116:
        if ((v99[23] & 0x80000000) == 0) {
          break;
        }
      }
      else
      {
        if ((v105 & 0x80000000) == 0) {
          goto LABEL_114;
        }
LABEL_173:
        operator delete(v104);
        if (v103 < 0) {
          goto LABEL_174;
        }
LABEL_115:
        if ((v101 & 0x80000000) == 0) {
          goto LABEL_116;
        }
LABEL_175:
        operator delete(v100);
        if ((v99[23] & 0x80000000) == 0) {
          break;
        }
      }
      operator delete(*(void **)v99);
      break;
    }
    uint64_t v53 = *((unsigned __int16 *)v49 + 4);
    if (v53) {
      uint64_t v35 = *(unsigned int *)&v48[v53];
    }
    else {
      uint64_t v35 = 0;
    }
    v32 += v35;
    sub_83DA0C(&v81);
  }
  sub_833F34((uint64_t *)a1, v75, v8, a4, 1, (int64x2_t *)v99);
  if (*v33)
  {
    sub_52FA20(v8 + 384, *v33);
    operator delete((void *)*v33);
    *unint64_t v33 = 0;
    *(void *)(v8 + 392) = 0;
    *(void *)(v8 + 400) = 0;
  }
  *(_OWORD *)(v8 + 384) = *(_OWORD *)v99;
  *(void *)(v8 + 400) = *(void *)&v99[16];
  sub_833498((uint64_t *)a1, v75, (void *)v8, a4, (uint64_t)v99);
  if (sub_6F2FD8((uint64_t)v99))
  {
    double v57 = *(long long **)(v8 + 336);
    if (v57 != *(long long **)(v8 + 344))
    {
      unint64_t v58 = *(void *)(v8 + 368);
      if (v58 >= *(void *)(v8 + 376))
      {
        uint64_t v59 = sub_83DB04(v76, v57);
      }
      else
      {
        sub_4AA8E0(*(char **)(v8 + 368), v57);
        uint64_t v59 = v58 + 152;
        *(void *)(v8 + 368) = v58 + 152;
      }
      *(void *)(v8 + 368) = v59;
      *(_DWORD *)(v59 - 32) = 1;
      sub_52FA20((uint64_t)v77, *(void *)(v8 + 336));
    }
    unint64_t v60 = *(void *)(v8 + 368);
    if (v60 >= *(void *)(v8 + 376))
    {
      uint64_t v61 = sub_5B09D8(v76, (long long *)v99);
    }
    else
    {
      sub_4AA8E0(*(char **)(v8 + 368), (long long *)v99);
      uint64_t v61 = v60 + 152;
      *(void *)(v8 + 368) = v60 + 152;
    }
    *(void *)(v8 + 368) = v61;
    *(_DWORD *)(v61 - 32) = 4;
  }
  if (*(unsigned char *)(a1 + 96))
  {
    sub_8338D8((uint64_t *)a1, a2, v8, a4, (char **)v78);
    unint64_t v62 = (void **)(v8 + 1784);
    uint64_t v63 = *(void *)(v8 + 1784);
    if (v63)
    {
      uint64_t v64 = *(void *)(v8 + 1792);
      unint64_t v65 = *(void **)(v8 + 1784);
      if (v64 != v63)
      {
        do
        {
          if (*(char *)(v64 - 25) < 0) {
            operator delete(*(void **)(v64 - 48));
          }
          v64 -= 48;
        }
        while (v64 != v63);
        unint64_t v65 = *v62;
      }
      *(void *)(v8 + 1792) = v63;
      operator delete(v65);
      *unint64_t v62 = 0;
      *(void *)(v8 + 1792) = 0;
      *(void *)(v8 + 1800) = 0;
    }
    *(_OWORD *)unint64_t v62 = *(_OWORD *)v78;
    *(void *)(v8 + 1800) = v79;
  }
  if ((v108 & 0x80000000) == 0)
  {
    if ((v105 & 0x80000000) == 0) {
      goto LABEL_141;
    }
LABEL_147:
    operator delete(v104);
    if (v103 < 0) {
      goto LABEL_148;
    }
LABEL_142:
    if ((v101 & 0x80000000) == 0) {
      goto LABEL_143;
    }
LABEL_149:
    operator delete(v100);
    if ((v99[23] & 0x80000000) != 0) {
      goto LABEL_150;
    }
LABEL_144:
    uint64_t v66 = (char *)v84;
    if ((void)v84) {
      goto LABEL_154;
    }
    goto LABEL_157;
  }
  operator delete(v107);
  if (v105 < 0) {
    goto LABEL_147;
  }
LABEL_141:
  if ((v103 & 0x80000000) == 0) {
    goto LABEL_142;
  }
LABEL_148:
  operator delete(v102);
  if (v101 < 0) {
    goto LABEL_149;
  }
LABEL_143:
  if ((v99[23] & 0x80000000) == 0) {
    goto LABEL_144;
  }
LABEL_150:
  operator delete(*(void **)v99);
  uint64_t v66 = (char *)v84;
  if ((void)v84)
  {
    while (1)
    {
LABEL_154:
      char v67 = *(char **)v66;
      if (v66[71] < 0)
      {
        operator delete(*((void **)v66 + 6));
        if ((v66[47] & 0x80000000) == 0) {
          goto LABEL_153;
        }
LABEL_156:
        operator delete(*((void **)v66 + 3));
        operator delete(v66);
        uint64_t v66 = v67;
        if (!v67) {
          break;
        }
      }
      else
      {
        if (v66[47] < 0) {
          goto LABEL_156;
        }
LABEL_153:
        operator delete(v66);
        uint64_t v66 = v67;
        if (!v67) {
          break;
        }
      }
    }
  }
LABEL_157:
  char v68 = v83[0];
  v83[0] = 0;
  if (v68) {
    operator delete(v68);
  }
  unint64_t v69 = (void **)v87[0];
  if (v87[0])
  {
    do
    {
      int v73 = (void **)*v69;
      if (*((char *)v69 + 39) < 0) {
        operator delete(v69[2]);
      }
      operator delete(v69);
      unint64_t v69 = v73;
    }
    while (v73);
  }
  int v70 = v86[0];
  v86[0] = 0;
  if (v70) {
    operator delete(v70);
  }
  __int16 v71 = (void **)v90[0];
  if (v90[0])
  {
    do
    {
      int v74 = (void **)*v71;
      if (*((char *)v71 + 39) < 0) {
        operator delete(v71[2]);
      }
      operator delete(v71);
      __int16 v71 = v74;
    }
    while (v74);
  }
  double v72 = __p[0];
  __p[0] = 0;
  if (v72) {
    operator delete(v72);
  }
}

void sub_8329B4(_Unwind_Exception *a1)
{
  *(void *)(v1 + 344) = v2;
  sub_4A50F4(v3 - 240);
  _Unwind_Resume(a1);
}

void sub_8329CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  *(void *)(v42 + 368) = v43;
  sub_4A50F4(v44 - 240);
  sub_833EAC((uint64_t)&a22);
  sub_3A4C2C((uint64_t)&__p);
  sub_3A4C2C((uint64_t)&a37);
  _Unwind_Resume(a1);
}

void sub_832B38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 1072);
  for (uint64_t i = v2 - 2400; v2 - 2400 != *(void *)(a2 + 1064); uint64_t i = v2 - 2400)
  {
    uint64_t v6 = v2 - 4800;
    uint64_t v7 = v2 - 2400;
    uint64_t v2 = i;
    uint64_t v8 = *(void *)(v6 + 360);
    unint64_t v9 = *(long long **)(v6 + 368);
    v14[0] = a1;
    v14[1] = v7 + 360;
    _DWORD v14[2] = v7 + 336;
    if ((uint64_t)v9 - v8 < 1)
    {
LABEL_8:
      uint64_t v13 = 0;
      unint64_t v10 = 0;
    }
    else
    {
      unint64_t v10 = 0x86BCA1AF286BCA1BLL * (((uint64_t)v9 - v8) >> 3);
      while (1)
      {
        int v11 = operator new(152 * v10, &std::nothrow);
        if (v11) {
          break;
        }
        BOOL v12 = v10 > 1;
        v10 >>= 1;
        if (!v12) {
          goto LABEL_8;
        }
      }
      uint64_t v13 = v11;
    }
    sub_83DD28(v8, v9, v14, 0x86BCA1AF286BCA1BLL * (((uint64_t)v9 - v8) >> 3), (uint64_t)v13, v10);
    if (v13) {
      operator delete(v13);
    }
  }
}

void sub_832C60(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_832C78(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_58E730(*(void *)a1, *(void *)a2, 1u, &v23);
  unint64_t v10 = (int *)sub_2D5D58(*(void *)a1, *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32));
  int v11 = (unsigned __int16 *)((char *)v10 - *v10);
  if (*v11 >= 0x25u && (uint64_t v12 = v11[18]) != 0) {
    uint64_t v13 = (unsigned int *)((char *)v10 + v12 + *(unsigned int *)((char *)v10 + v12));
  }
  else {
    uint64_t v13 = 0;
  }
  sub_2DE69C(v13, &__p);
  uint64_t v14 = *(unsigned __int8 *)(a4 + 23);
  if ((v14 & 0x80u) != 0) {
    uint64_t v14 = *(void *)(a4 + 8);
  }
  if (v14) {
    std::string::operator=((std::string *)(a1 + 8), (const std::string *)a4);
  }
  sub_6F33CC(a1 + 8, (unsigned __int8 **)&v23, (uint64_t *)&__p, a3, a5);
  uint64_t v15 = (void **)__p;
  if (__p)
  {
    unint64_t v16 = v22;
    uint64_t v17 = __p;
    if (v22 != __p)
    {
      do
      {
        if (*((char *)v16 - 9) < 0) {
          operator delete(*(v16 - 4));
        }
        v16 -= 5;
      }
      while (v16 != v15);
      uint64_t v17 = __p;
    }
    unint64_t v22 = v15;
    operator delete(v17);
  }
  unsigned int v18 = v23;
  if (v23)
  {
    uint64_t v19 = (uint64_t)v24;
    uint64_t v20 = v23;
    if (v24 != v23)
    {
      do
        uint64_t v19 = sub_2DF404(v19 - 144);
      while ((void *)v19 != v18);
      uint64_t v20 = v23;
    }
    BOOL v24 = v18;
    operator delete(v20);
  }
}

void sub_832DDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12)
{
}

void sub_832DF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_53BD98((void **)va);
  _Unwind_Resume(a1);
}

void sub_832E0C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(*a4 + 40 * *(void *)(a2 + 16) + 32);
  uint64_t v25 = 0;
  uint64_t v26 = v10;
  long long __p = 0;
  uint64_t v24 = 0;
  sub_832C78(a1, (unsigned int *)&v26, a3, (uint64_t)&__p, (uint64_t)v27);
  if ((SHIBYTE(v25) & 0x80000000) == 0)
  {
    uint64_t v11 = *(void *)(a2 + 16);
    unint64_t v12 = *(void *)(a2 + 24);
    uint64_t v13 = v11 + 1;
    if (v11 + 1 > v12) {
      unint64_t v14 = v11 + 1;
    }
    else {
      unint64_t v14 = v12;
    }
    if (v11 + 1 < v12) {
      goto LABEL_13;
    }
    goto LABEL_42;
  }
  operator delete(__p);
  uint64_t v15 = *(void *)(a2 + 16);
  unint64_t v16 = *(void *)(a2 + 24);
  uint64_t v13 = v15 + 1;
  if (v15 + 1 > v16) {
    unint64_t v14 = v15 + 1;
  }
  else {
    unint64_t v14 = v16;
  }
  if (v15 + 1 < v16)
  {
    do
    {
LABEL_13:
      uint64_t v17 = *(void *)(*a4 + 40 * v13 + 32);
      uint64_t v25 = 0;
      uint64_t v26 = v17;
      long long __p = 0;
      uint64_t v24 = 0;
      sub_832C78(a1, (unsigned int *)&v26, a3, (uint64_t)&__p, a5);
      if (SHIBYTE(v25) < 0) {
        operator delete(__p);
      }
      uint64_t v18 = *(unsigned __int8 *)(a5 + 23);
      if ((v18 & 0x80u) == 0) {
        uint64_t v19 = (void *)*(unsigned __int8 *)(a5 + 23);
      }
      else {
        uint64_t v19 = *(void **)(a5 + 8);
      }
      unint64_t v20 = v28;
      if ((v28 & 0x80u) != 0) {
        unint64_t v20 = (unint64_t)v27[1];
      }
      if (v19 != (void *)v20) {
        goto LABEL_43;
      }
      if ((v28 & 0x80u) == 0) {
        int64_t v21 = v27;
      }
      else {
        int64_t v21 = (void **)v27[0];
      }
      if ((v18 & 0x80) != 0)
      {
        if (memcmp(*(const void **)a5, v21, *(void *)(a5 + 8))) {
          goto LABEL_43;
        }
      }
      else if (*(unsigned char *)(a5 + 23))
      {
        unint64_t v22 = (unsigned __int8 *)a5;
        while (*v22 == *(unsigned __int8 *)v21)
        {
          ++v22;
          int64_t v21 = (void **)((char *)v21 + 1);
          if (!--v18) {
            goto LABEL_31;
          }
        }
        goto LABEL_43;
      }
LABEL_31:
      if (*(char *)(a5 + 151) < 0)
      {
        operator delete(*(void **)(a5 + 128));
        if ((*(char *)(a5 + 119) & 0x80000000) == 0)
        {
LABEL_33:
          if ((*(char *)(a5 + 95) & 0x80000000) == 0) {
            goto LABEL_34;
          }
          goto LABEL_39;
        }
      }
      else if ((*(char *)(a5 + 119) & 0x80000000) == 0)
      {
        goto LABEL_33;
      }
      operator delete(*(void **)(a5 + 96));
      if ((*(char *)(a5 + 95) & 0x80000000) == 0)
      {
LABEL_34:
        if ((*(char *)(a5 + 55) & 0x80000000) == 0) {
          goto LABEL_35;
        }
        goto LABEL_40;
      }
LABEL_39:
      operator delete(*(void **)(a5 + 72));
      if ((*(char *)(a5 + 55) & 0x80000000) == 0)
      {
LABEL_35:
        if (*(char *)(a5 + 23) < 0) {
          goto LABEL_41;
        }
        goto LABEL_12;
      }
LABEL_40:
      operator delete(*(void **)(a5 + 32));
      if (*(char *)(a5 + 23) < 0) {
LABEL_41:
      }
        operator delete(*(void **)a5);
LABEL_12:
      ++v13;
    }
    while (v13 != v14);
  }
LABEL_42:
  sub_6F30A4(a5);
LABEL_43:
  if (v36 < 0)
  {
    operator delete(v35);
    if ((v34 & 0x80000000) == 0)
    {
LABEL_45:
      if ((v32 & 0x80000000) == 0) {
        goto LABEL_46;
      }
      goto LABEL_51;
    }
  }
  else if ((v34 & 0x80000000) == 0)
  {
    goto LABEL_45;
  }
  operator delete(v33);
  if ((v32 & 0x80000000) == 0)
  {
LABEL_46:
    if ((v30 & 0x80000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_52;
  }
LABEL_51:
  operator delete(v31);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_47:
    if (((char)v28 & 0x80000000) == 0) {
      return;
    }
LABEL_53:
    operator delete(v27[0]);
    return;
  }
LABEL_52:
  operator delete(v29);
  if ((char)v28 < 0) {
    goto LABEL_53;
  }
}

void sub_83308C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, char a17)
{
}

uint64_t sub_8330D4(int64x2_t *a1, long long *a2)
{
  unint64_t v3 = a1->u64[1];
  if (v3 >= a1[1].i64[0])
  {
    uint64_t v5 = sub_5B09D8(a1, a2);
    a1->i64[1] = v5;
    return v5 - 152;
  }
  else
  {
    sub_4AA8E0((char *)a1->i64[1], a2);
    a1->i64[1] = v3 + 152;
    a1->i64[1] = v3 + 152;
    return v3;
  }
}

void sub_833134(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_83313C(uint64_t *a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v9 = *(a2[1] - 1);
  uint64_t v10 = sub_2D5D58(*a1, v9 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v8 + 7772))
  {
    uint64_t v11 = sub_2DB8E0(v8 + 3896, v9, 0);
    unint64_t v12 = &v11[-*(int *)v11];
    if (*(unsigned __int16 *)v12 < 5u)
    {
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v13 = *((unsigned __int16 *)v12 + 2);
      if (v13) {
        v13 += (uint64_t)&v11[*(unsigned int *)&v11[v13]];
      }
    }
    uint64_t v14 = v13 + 4 * WORD2(v9) + 4 + *(unsigned int *)(v13 + 4 * WORD2(v9) + 4);
  }
  else
  {
    uint64_t v14 = 0;
  }
  v53[0] = v10;
  v53[1] = v14;
  v53[2] = sub_2E5C38(v8, v9 & 0xFFFFFFFFFFFFLL, 1);
  v53[3] = v15;
  int v54 = v9;
  __int16 v55 = WORD2(v9);
  BOOL v56 = (v9 & 0xFF000000000000) != 0;
  uint64_t v16 = *a1;
  uint64_t v17 = **a2;
  uint64_t v18 = sub_2D5D58(*a1, v17 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v16 + 7772))
  {
    uint64_t v19 = sub_2DB8E0(v16 + 3896, v17, 0);
    unint64_t v20 = &v19[-*(int *)v19];
    if (*(unsigned __int16 *)v20 < 5u)
    {
      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v21 = *((unsigned __int16 *)v20 + 2);
      if (v21) {
        v21 += (uint64_t)&v19[*(unsigned int *)&v19[v21]];
      }
    }
    uint64_t v22 = v21 + 4 * WORD2(v17) + 4 + *(unsigned int *)(v21 + 4 * WORD2(v17) + 4);
  }
  else
  {
    uint64_t v22 = 0;
  }
  v49[0] = v18;
  v49[1] = v22;
  v49[2] = sub_2E5C38(v16, v17 & 0xFFFFFFFFFFFFLL, 1);
  v49[3] = v23;
  int v50 = v17;
  __int16 v51 = WORD2(v17);
  BOOL v52 = (v17 & 0xFF000000000000) != 0;
  sub_6F30A4((uint64_t)v39);
  sub_6F30A4((uint64_t)v29);
  uint64_t v24 = *a2;
  uint64_t v25 = a2[1];
  v57[0] = a1;
  v57[1] = a3;
  v57[2] = v53;
  v57[3] = v49;
  v57[4] = v39;
  v57[5] = v29;
  if (v24 != v25)
  {
    do
    {
      uint64_t v26 = v24 + 1;
      if (v24 + 1 == v25) {
        break;
      }
      int v27 = sub_840E98((uint64_t)v57, v24, v24 + 1);
      uint64_t v24 = v26;
    }
    while (!v27);
  }
  if (sub_6F2FD8((uint64_t)v39)) {
    unsigned __int8 v28 = (long long *)v39;
  }
  else {
    unsigned __int8 v28 = (long long *)v29;
  }
  sub_4AA8E0(a4, v28);
  if (v38 < 0)
  {
    operator delete(__p);
    if ((v36 & 0x80000000) == 0)
    {
LABEL_23:
      if ((v34 & 0x80000000) == 0) {
        goto LABEL_24;
      }
      goto LABEL_34;
    }
  }
  else if ((v36 & 0x80000000) == 0)
  {
    goto LABEL_23;
  }
  operator delete(v35);
  if ((v34 & 0x80000000) == 0)
  {
LABEL_24:
    if ((v32 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_35;
  }
LABEL_34:
  operator delete(v33);
  if ((v32 & 0x80000000) == 0)
  {
LABEL_25:
    if ((v30 & 0x80000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_36;
  }
LABEL_35:
  operator delete(v31);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_26:
    if ((v48 & 0x80000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_37;
  }
LABEL_36:
  operator delete(v29[0]);
  if ((v48 & 0x80000000) == 0)
  {
LABEL_27:
    if ((v46 & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_38;
  }
LABEL_37:
  operator delete(v47);
  if ((v46 & 0x80000000) == 0)
  {
LABEL_28:
    if ((v44 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v45);
  if ((v44 & 0x80000000) == 0)
  {
LABEL_29:
    if ((v42 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v43);
  if ((v42 & 0x80000000) == 0)
  {
LABEL_30:
    if ((v40 & 0x80000000) == 0) {
      return;
    }
LABEL_41:
    operator delete(v39[0]);
    return;
  }
LABEL_40:
  operator delete(v41);
  if (v40 < 0) {
    goto LABEL_41;
  }
}

void sub_833464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_833478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_833498(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if (a3[3] < 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a2[1] - *a2) >> 3))
  {
    unint64_t v9 = a3[2];
    uint64_t v35 = (uint64_t)(a1 + 1);
    while (1)
    {
      if (++v9 > a3[3])
      {
        sub_6F30A4(a5);
        return;
      }
      uint64_t v11 = sub_5A7C34(a2, v9);
      uint64_t v12 = *(void *)(v11 + 32);
      long long v13 = *(_OWORD *)(v11 + 16);
      v44[0] = *(_OWORD *)v11;
      v44[1] = v13;
      uint64_t v45 = v12;
      uint64_t v14 = *a1;
      unint64_t v15 = sub_2E48C4((int **)v44);
      unsigned int v16 = v15;
      uint64_t v17 = sub_290DEC(v14 + 3896, v15, 1);
      if (v17
        && (uint64_t v18 = &v17[-*(int *)v17], *(unsigned __int16 *)v18 >= 7u)
        && (uint64_t v19 = *((unsigned __int16 *)v18 + 3)) != 0
        && (uint64_t v20 = (uint64_t)&v17[4 * HIDWORD(v15) + v19 + *(unsigned int *)&v17[v19]],
            uint64_t v21 = (int *)(v20 + 4 + *(unsigned int *)(v20 + 4)),
            uint64_t v22 = (unsigned __int16 *)((char *)v21 - *v21),
            *v22 >= 9u)
        && (uint64_t v23 = v22[4]) != 0
        && (unsigned int v24 = *(int *)((char *)v21 + v23), v24 != -1))
      {
        unsigned int v25 = sub_2E6AA8(v14, v16);
        sub_58F194(v14, v25, v24, 1u, (uint64_t)&__p);
      }
      else
      {
        long long __p = 0;
        char v42 = 0;
        uint64_t v43 = 0;
      }
      v40[0] = a2;
      v40[1] = a3;
      if (sub_834840(v40, (uint64_t *)&__p))
      {
        sub_6F30A4(a5);
LABEL_26:
        char v29 = 0;
        char v30 = (void **)__p;
        if (!__p) {
          goto LABEL_5;
        }
        goto LABEL_40;
      }
      uint64_t v37 = 0;
      char v38 = 0;
      uint64_t v39 = 0;
      sub_6F33CC(v35, (unsigned __int8 **)&__p, (uint64_t *)&v37, a4, a5);
      uint64_t v26 = (void **)v37;
      if (v37)
      {
        int v27 = v38;
        unsigned __int8 v28 = v37;
        if (v38 != v37)
        {
          do
          {
            if (*((char *)v27 - 9) < 0) {
              operator delete(*(v27 - 4));
            }
            v27 -= 5;
          }
          while (v27 != v26);
          unsigned __int8 v28 = v37;
        }
        char v38 = v26;
        operator delete(v28);
      }
      if (sub_6F2FD8(a5)) {
        goto LABEL_26;
      }
      if (*(char *)(a5 + 151) < 0)
      {
        operator delete(*(void **)(a5 + 128));
        if ((*(char *)(a5 + 119) & 0x80000000) == 0)
        {
LABEL_30:
          if ((*(char *)(a5 + 95) & 0x80000000) == 0) {
            goto LABEL_31;
          }
          goto LABEL_37;
        }
      }
      else if ((*(char *)(a5 + 119) & 0x80000000) == 0)
      {
        goto LABEL_30;
      }
      operator delete(*(void **)(a5 + 96));
      if ((*(char *)(a5 + 95) & 0x80000000) == 0)
      {
LABEL_31:
        if (*(char *)(a5 + 55) < 0) {
          goto LABEL_38;
        }
        goto LABEL_32;
      }
LABEL_37:
      operator delete(*(void **)(a5 + 72));
      if (*(char *)(a5 + 55) < 0)
      {
LABEL_38:
        operator delete(*(void **)(a5 + 32));
        if ((*(char *)(a5 + 23) & 0x80000000) == 0)
        {
LABEL_33:
          char v29 = 1;
          char v30 = (void **)__p;
          if (!__p) {
            goto LABEL_5;
          }
          goto LABEL_40;
        }
        goto LABEL_39;
      }
LABEL_32:
      if ((*(char *)(a5 + 23) & 0x80000000) == 0) {
        goto LABEL_33;
      }
LABEL_39:
      operator delete(*(void **)a5);
      char v29 = 1;
      char v30 = (void **)__p;
      if (!__p) {
        goto LABEL_5;
      }
LABEL_40:
      uint64_t v31 = v42;
      uint64_t v10 = v30;
      if (v42 != v30)
      {
        while (1)
        {
          if (*((char *)v31 - 1) < 0)
          {
            operator delete(*(v31 - 3));
            if (*((char *)v31 - 33) < 0)
            {
LABEL_58:
              operator delete(*(v31 - 7));
              char v32 = (void **)*(v31 - 10);
              if (!v32)
              {
LABEL_59:
                if (*((char *)v31 - 89) < 0) {
                  goto LABEL_42;
                }
                goto LABEL_60;
              }
              goto LABEL_47;
            }
          }
          else if (*((char *)v31 - 33) < 0)
          {
            goto LABEL_58;
          }
          char v32 = (void **)*(v31 - 10);
          if (!v32) {
            goto LABEL_59;
          }
LABEL_47:
          unint64_t v33 = (void **)*(v31 - 9);
          if (v33 == v32)
          {
            *(v31 - 9) = v32;
            operator delete(v32);
            if (*((char *)v31 - 89) < 0) {
              goto LABEL_42;
            }
            goto LABEL_60;
          }
          do
          {
            while (*((char *)v33 - 9) < 0)
            {
              operator delete(*(v33 - 4));
              if (*((char *)v33 - 33) < 0) {
                goto LABEL_54;
              }
LABEL_51:
              v33 -= 7;
              if (v33 == v32) {
                goto LABEL_55;
              }
            }
            if ((*((char *)v33 - 33) & 0x80000000) == 0) {
              goto LABEL_51;
            }
LABEL_54:
            operator delete(*(v33 - 7));
            v33 -= 7;
          }
          while (v33 != v32);
LABEL_55:
          char v34 = *(v31 - 10);
          *(v31 - 9) = v32;
          operator delete(v34);
          if (*((char *)v31 - 89) < 0)
          {
LABEL_42:
            operator delete(*(v31 - 14));
            if ((*((char *)v31 - 113) & 0x80000000) == 0) {
              goto LABEL_43;
            }
LABEL_61:
            operator delete(*(v31 - 17));
            v31 -= 18;
            if (v31 == v30)
            {
LABEL_3:
              uint64_t v10 = __p;
              break;
            }
          }
          else
          {
LABEL_60:
            if (*((char *)v31 - 113) < 0) {
              goto LABEL_61;
            }
LABEL_43:
            v31 -= 18;
            if (v31 == v30) {
              goto LABEL_3;
            }
          }
        }
      }
      char v42 = v30;
      operator delete(v10);
LABEL_5:
      if ((v29 & 1) == 0) {
        return;
      }
    }
  }

  sub_6F30A4(a5);
}

void sub_83388C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_4A50F4(v8);
  sub_53BD98((void **)va);
  _Unwind_Resume(a1);
}

void sub_8338A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  char v4 = va_arg(va1, void *);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  sub_2DE7D0((void **)va);
  sub_53BD98((void **)va1);
  _Unwind_Resume(a1);
}

void sub_8338C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_53BD98((void **)va);
  _Unwind_Resume(a1);
}

void sub_8338D8(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char **a5@<X8>)
{
  if (*(void *)(a3 + 16) == -1)
  {
    *a5 = 0;
    a5[1] = 0;
    a5[2] = 0;
  }
  else
  {
    uint64_t v8 = nullsub_1(a2);
    a5[1] = 0;
    a5[2] = 0;
    *a5 = 0;
    unint64_t v9 = *(void *)(a3 + 40);
    uint64_t v60 = a3;
    unint64_t v10 = *(void *)(a3 + 16);
    if (v9 <= v10) {
      uint64_t v11 = *(void *)(a3 + 16);
    }
    else {
      uint64_t v11 = *(void *)(a3 + 40);
    }
    if (v9 < v10)
    {
      uint64_t v12 = (void *)v8;
      double v57 = (void *)v8;
      uint64_t v62 = 40 * v9 + 32;
      unint64_t v58 = a5;
LABEL_8:
      sub_68F4F8(*a1, *(unsigned int *)(*v12 + 40 * v9 + 32) | ((unint64_t)*(unsigned __int16 *)(*v12 + 40 * v9 + 36) << 32), &v72);
      uint64_t v14 = v72;
      long long v13 = v73;
      if (v72 == v73)
      {
        if (!v72) {
          goto LABEL_7;
        }
        goto LABEL_70;
      }
      while (1)
      {
        unint64_t v15 = (int *)sub_2DBC9C(*a1, *v14);
        unsigned int v16 = (unsigned __int16 *)((char *)v15 - *v15);
        if (*v16 >= 5u)
        {
          uint64_t v17 = v16[2];
          if (v17)
          {
            if (*((unsigned char *)v15 + v17) == 4) {
              break;
            }
          }
        }
LABEL_11:
        if (++v14 == v13)
        {
          uint64_t v14 = v72;
          if (v72)
          {
LABEL_70:
            int v73 = v14;
            operator delete(v14);
          }
LABEL_7:
          ++v9;
          v62 += 40;
          if (v9 == v11) {
            return;
          }
          goto LABEL_8;
        }
      }
      uint64_t v18 = *a1;
      unint64_t v19 = *v14;
      int v70 = 0;
      __int16 v71 = 0;
      unint64_t v69 = 0;
      uint64_t v20 = (int *)sub_2DBC9C(v18, v19);
      uint64_t v21 = (unsigned __int16 *)((char *)v20 - *v20);
      if (*v21 >= 7u)
      {
        uint64_t v22 = v21[3];
        if (v22)
        {
          uint64_t v23 = (unsigned int *)((char *)v20 + v22 + *(unsigned int *)((char *)v20 + v22));
          uint64_t v24 = *v23;
          if (v24)
          {
            uint64_t v25 = 8 * v24;
            uint64_t v26 = (char *)operator new(8 * v24);
            unint64_t v69 = v26;
            int v70 = v26;
            __int16 v71 = &v26[8 * v24];
            int v27 = (uint64_t *)(v23 + 1);
            do
            {
              uint64_t v28 = *v27;
              unint64_t v29 = HIDWORD(*v27);
              LODWORD(__p[0]) = *v27;
              WORD2(__p[0]) = v29;
              BYTE6(__p[0]) = (v28 & 0xFF000000000000) == 0;
              uint64_t v26 = sub_2D6254((unint64_t *)&v69, v26, (int *)__p) + 8;
              ++v27;
              v25 -= 8;
            }
            while (v25);
          }
        }
      }
      char v30 = (char *)v69;
      if (-(uint64_t)v9 - 0x3333333333333333 * ((uint64_t)(v12[1] - *v12) >> 3) < (unint64_t)((v70 - (unsigned char *)v69) >> 3))
      {
LABEL_67:
        if (v30)
        {
          int v70 = v30;
          operator delete(v30);
        }
        goto LABEL_11;
      }
      if (v69 != v70)
      {
        uint64_t v31 = (unint64_t *)(*v12 + v62);
        char v32 = (char *)v69;
        do
        {
          unint64_t v34 = *v31;
          v31 += 5;
          unint64_t v33 = v34;
          if (__PAIR64__(*((unsigned __int16 *)v32 + 2), *(_DWORD *)v32) != __PAIR64__(WORD2(v34), v34)
            || (HIWORD(v33) & 1) == (v32[6] == 0))
          {
            goto LABEL_67;
          }
          v32 += 8;
        }
        while (v32 != v70);
      }
      uint64_t v35 = (int *)sub_2DBC9C(*a1, *v14);
      v67[0] = 0;
      v67[1] = 0;
      uint64_t v68 = 0;
      char v36 = (unsigned __int16 *)((char *)v35 - *v35);
      unsigned int v37 = *v36;
      if (v37 < 5 || !v36[2] || *((unsigned char *)v35 + v36[2]) != 4) {
        goto LABEL_39;
      }
      if (v37 < 0xD)
      {
        char v38 = 0;
        uint64_t v39 = (_WORD *)(&loc_1120530 + 1);
        if (*(unsigned __int16 *)((char *)&loc_1120530 + 1) < 7u) {
          goto LABEL_37;
        }
      }
      else
      {
        char v38 = (int *)v36[6];
        if (v38) {
          char v38 = (int *)((char *)v38 + (void)v35 + *(unsigned int *)((char *)v38 + (void)v35));
        }
        uint64_t v39 = (unsigned __int16 *)((char *)v38 - *v38);
        if (*v39 < 7u) {
          goto LABEL_37;
        }
      }
      uint64_t v40 = v39[3];
      if (v40)
      {
        unint64_t v41 = (unsigned int *)((char *)v38 + v40 + *(unsigned int *)((char *)v38 + v40));
LABEL_38:
        sub_767A8(v41, (uint64_t)__p);
        *(_OWORD *)char v67 = *(_OWORD *)__p;
        uint64_t v68 = v64;
LABEL_39:
        sub_6F5D24((char *)v67, a4, (int64x2_t *)__p);
        if (sub_6F33A4((uint64_t)__p))
        {
          uint64_t v43 = v69;
          char v44 = v70;
          unint64_t v45 = *(void *)(v60 + 16);
          if ((unint64_t)(-1 - 0x3333333333333333 * ((uint64_t)(v12[1] - *v12) >> 3)) >= *(void *)(v60 + 24)) {
            uint64_t v46 = *(void *)(v60 + 24);
          }
          else {
            uint64_t v46 = -1 - 0x3333333333333333 * ((uint64_t)(v12[1] - *v12) >> 3);
          }
          uint64_t v47 = sub_46CE10(a2, v9, 1, v46, 1u, v42);
          if (v45 >= v9 + ((v44 - v43) >> 3)) {
            uint64_t v49 = v9 + ((v44 - v43) >> 3);
          }
          else {
            uint64_t v49 = v45;
          }
          *((void *)&v65 + 1) = v47;
          uint64_t v66 = sub_46CE10(a2, v49, 1, v46, 1u, v48);
          int v50 = v58[1];
          if (v50 >= v58[2])
          {
            BOOL v52 = sub_840C9C(v58, (uint64_t)__p);
            uint64_t v12 = v57;
          }
          else
          {
            uint64_t v12 = v57;
            if (SHIBYTE(v64) < 0)
            {
              sub_4200(v58[1], __p[0], (unint64_t)__p[1]);
            }
            else
            {
              long long v51 = *(_OWORD *)__p;
              *((void *)v50 + 2) = v64;
              *(_OWORD *)int v50 = v51;
            }
            long long v53 = v65;
            *((void *)v50 + 5) = v66;
            *(_OWORD *)(v50 + 24) = v53;
            BOOL v52 = v50 + 48;
            v58[1] = v50 + 48;
          }
          v58[1] = v52;
        }
        if (SHIBYTE(v64) < 0)
        {
          operator delete(__p[0]);
          int v54 = (void **)v67[0];
          if (!v67[0])
          {
LABEL_66:
            char v30 = (char *)v69;
            goto LABEL_67;
          }
        }
        else
        {
          int v54 = (void **)v67[0];
          if (!v67[0]) {
            goto LABEL_66;
          }
        }
        __int16 v55 = (void **)v67[1];
        BOOL v56 = v54;
        if (v67[1] == v54)
        {
LABEL_65:
          v67[1] = v54;
          operator delete(v56);
          goto LABEL_66;
        }
        while (1)
        {
          if (*((char *)v55 - 1) < 0)
          {
            operator delete(*(v55 - 3));
            if ((*((char *)v55 - 25) & 0x80000000) == 0) {
              goto LABEL_60;
            }
LABEL_63:
            operator delete(*(v55 - 6));
            v55 -= 6;
            if (v55 == v54)
            {
LABEL_64:
              BOOL v56 = (void **)v67[0];
              goto LABEL_65;
            }
          }
          else
          {
            if (*((char *)v55 - 25) < 0) {
              goto LABEL_63;
            }
LABEL_60:
            v55 -= 6;
            if (v55 == v54) {
              goto LABEL_64;
            }
          }
        }
      }
LABEL_37:
      unint64_t v41 = 0;
      goto LABEL_38;
    }
  }
}

void sub_833DC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void **a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30)
{
  *(void *)(v30 + 8) = v31;
  if (a22 < 0) {
    operator delete(__p);
  }
  sub_1A6DC(&a26);
  if (a29)
  {
    a30 = (uint64_t)a29;
    operator delete(a29);
  }
  unint64_t v34 = *(void **)(v32 - 112);
  if (!v34)
  {
    sub_A43C(a11);
    _Unwind_Resume(a1);
  }
  *(void *)(v32 - 104) = v34;
  operator delete(v34);
  sub_A43C(a11);
  _Unwind_Resume(a1);
}

uint64_t sub_833EAC(uint64_t a1)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v5 = (void **)*v2;
      if (*((char *)v2 + 71) < 0)
      {
        operator delete(v2[6]);
        if (*((char *)v2 + 47) < 0) {
LABEL_10:
        }
          operator delete(v2[3]);
      }
      else if (*((char *)v2 + 47) < 0)
      {
        goto LABEL_10;
      }
      operator delete(v2);
      uint64_t v2 = v5;
    }
    while (v5);
  }
  unint64_t v3 = *(void **)a1;
  *(void *)a1 = 0;
  if (v3) {
    operator delete(v3);
  }
  return a1;
}

void sub_833F34(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int64x2_t *a6@<X8>)
{
  unint64_t v6 = *(void *)(a3 + 16);
  if (v6 == -1 || (unint64_t v8 = *(void *)(a3 + 24), v8 >= 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - *a2) >> 3)))
  {
    a6->i64[0] = 0;
    a6->i64[1] = 0;
    a6[1].i64[0] = 0;
    return;
  }
  unint64_t v110 = 0;
  unint64_t v111 = 0;
  int v112 = 0;
  unint64_t v11 = *(void *)(a3 + 32);
  if (v11 == -1)
  {
    if (v6 <= v8 + 1) {
      unint64_t v13 = v8 + 1;
    }
    else {
      unint64_t v13 = v6;
    }
    if (v6 > v8) {
      goto LABEL_59;
    }
    while (1)
    {
      uint64_t v15 = *(void *)(sub_5A7C34(a2, v6) + 32);
      unsigned int v16 = v111;
      if (v111 < v112)
      {
        *(void *)unint64_t v111 = v15;
        uint64_t v14 = (char *)(v16 + 1);
      }
      else
      {
        uint64_t v17 = v110;
        uint64_t v18 = (v111 - (unsigned char *)v110) >> 3;
        unint64_t v19 = v18 + 1;
        if ((unint64_t)(v18 + 1) >> 61) {
          sub_2E00();
        }
        uint64_t v20 = v112 - (unsigned char *)v110;
        if ((v112 - (unsigned char *)v110) >> 2 > v19) {
          unint64_t v19 = v20 >> 2;
        }
        if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v21 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v21 = v19;
        }
        if (v21)
        {
          if (v21 >> 61) {
            sub_188D718();
          }
          uint64_t v22 = (char *)operator new(8 * v21);
          uint64_t v23 = &v22[8 * v18];
          *(void *)uint64_t v23 = v15;
          uint64_t v14 = v23 + 8;
          if (v16 != v17)
          {
            do
            {
LABEL_25:
              int v25 = *((_DWORD *)v16-- - 2);
              int v26 = *(_DWORD *)((char *)v16 + 3);
              *((_DWORD *)v23 - 2) = v25;
              v23 -= 8;
              *(_DWORD *)(v23 + 3) = v26;
            }
            while (v16 != v17);
            unsigned int v16 = v17;
            unint64_t v110 = v23;
            int v112 = &v22[8 * v21];
            if (!v17) {
              goto LABEL_12;
            }
LABEL_29:
            operator delete(v16);
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t v22 = 0;
          uint64_t v23 = (char *)(8 * v18);
          uint64_t v24 = (void *)(8 * v18);
          *uint64_t v24 = v15;
          uint64_t v14 = (char *)(v24 + 1);
          if (v16 != v17) {
            goto LABEL_25;
          }
        }
        unint64_t v110 = v23;
        int v112 = &v22[8 * v21];
        if (v16) {
          goto LABEL_29;
        }
      }
LABEL_12:
      unint64_t v111 = v14;
      if (++v6 == v13) {
        goto LABEL_59;
      }
    }
  }
  uint64_t v12 = *(void *)(sub_5A7C34(a2, v11) + 32);
  uint64_t v27 = (v111 - (unsigned char *)v110) >> 3;
  unint64_t v28 = v27 + 1;
  if ((unint64_t)(v27 + 1) >> 61) {
    sub_2E00();
  }
  uint64_t v29 = v112 - (unsigned char *)v110;
  if ((v112 - (unsigned char *)v110) >> 2 > v28) {
    unint64_t v28 = v29 >> 2;
  }
  if ((unint64_t)v29 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v30 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v30 = v28;
  }
  if (v30)
  {
    if (v30 >> 61) {
      sub_188D718();
    }
    uint64_t v31 = (char *)operator new(8 * v30);
    uint64_t v32 = &v31[8 * v27];
    unint64_t v33 = &v31[8 * v30];
    *(void *)uint64_t v32 = v12;
    unint64_t v34 = v32 + 8;
  }
  else
  {
    uint64_t v32 = (char *)(8 * v27);
    unint64_t v33 = 0;
    uint64_t v46 = (void *)(8 * v27);
    void *v46 = v12;
    unint64_t v34 = (char *)(v46 + 1);
  }
  unint64_t v110 = v32;
  int v112 = v33;
  unint64_t v111 = v34;
  uint64_t v35 = *(void *)(sub_5A7C34(a2, *(void *)(a3 + 32) + 1) + 32);
  char v36 = v34;
  if (v34 >= v112)
  {
    char v38 = (char *)v110;
    uint64_t v39 = (v111 - (unsigned char *)v110) >> 3;
    unint64_t v40 = v39 + 1;
    if ((unint64_t)(v39 + 1) >> 61) {
      sub_2E00();
    }
    uint64_t v41 = v112 - (unsigned char *)v110;
    if ((v112 - (unsigned char *)v110) >> 2 > v40) {
      unint64_t v40 = v41 >> 2;
    }
    if ((unint64_t)v41 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v42 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v42 = v40;
    }
    if (v42)
    {
      if (v42 >> 61) {
        sub_188D718();
      }
      uint64_t v43 = (char *)operator new(8 * v42);
      char v44 = &v43[8 * v39];
      unint64_t v45 = &v43[8 * v42];
      *(void *)char v44 = v35;
      unsigned int v37 = v44 + 8;
      if (v36 == v38) {
        goto LABEL_56;
      }
    }
    else
    {
      char v44 = (char *)(8 * v39);
      unint64_t v45 = 0;
      uint64_t v47 = (void *)(8 * v39);
      void *v47 = v35;
      unsigned int v37 = (char *)(v47 + 1);
      if (v36 == v38) {
        goto LABEL_56;
      }
    }
    do
    {
      int v48 = *((_DWORD *)v36 - 2);
      v36 -= 8;
      int v49 = *(_DWORD *)(v36 + 3);
      *((_DWORD *)v44 - 2) = v48;
      v44 -= 8;
      *(_DWORD *)(v44 + 3) = v49;
    }
    while (v36 != v38);
    char v36 = v38;
LABEL_56:
    unint64_t v110 = v44;
    int v112 = v45;
    if (v36) {
      operator delete(v36);
    }
    goto LABEL_58;
  }
  *(void *)unint64_t v111 = v35;
  unsigned int v37 = v34 + 8;
LABEL_58:
  unint64_t v111 = v37;
LABEL_59:
  int v50 = 0;
  long long v51 = 0;
  long long __p = 0;
  long long v109 = 0uLL;
  unint64_t v53 = *(void *)(a3 + 16);
  unint64_t v52 = *(void *)(a3 + 24);
  if (v53 <= v52) {
    uint64_t v54 = *(void *)(a3 + 24);
  }
  else {
    uint64_t v54 = *(void *)(a3 + 16);
  }
  if (v53 < v52)
  {
    do
    {
      sub_8349C0(a1, a2, v53, (uint64_t)&v110, a5, (uint64_t *)&v106);
      long long v65 = (void **)__p;
      if (__p)
      {
        uint64_t v66 = (void **)v109;
        char v67 = __p;
        if ((void *)v109 != __p)
        {
          do
            uint64_t v66 = sub_2DF518(v66 - 16);
          while (v66 != v65);
          char v67 = __p;
        }
        *(void *)&long long v109 = v65;
        operator delete(v67);
      }
      long long v51 = (void **)v106;
      long long __p = v106;
      long long v109 = v107;
      int v50 = (void **)v107;
      ++v53;
    }
    while (v106 == (void *)v107 && v53 != v54);
  }
  unsigned int v55 = *(_DWORD *)(a3 + 160);
  BOOL v56 = v55 > 0x3F;
  unint64_t v57 = (1 << v55) & 0xF000000000000006;
  BOOL v58 = v56 || v57 == 0;
  if (!v58 && !*(unsigned char *)(a3 + 894) && !*(unsigned char *)(a3 + 893) && !*(unsigned char *)(a3 + 892))
  {
    switch(*(_DWORD *)(a3 + 1860))
    {
      case 0:
        break;
      case 1:
        uint64_t v59 = a1 + 7;
        if (v51 == v50) {
          goto LABEL_84;
        }
        goto LABEL_72;
      case 2:
        uint64_t v59 = a1 + 8;
        if (v51 == v50) {
          goto LABEL_84;
        }
        goto LABEL_72;
      default:
        uint64_t v59 = a1 + 9;
        if (v51 == v50) {
          goto LABEL_84;
        }
        goto LABEL_72;
    }
  }
  uint64_t v59 = a1 + 6;
  if (v51 != v50)
  {
LABEL_72:
    uint64_t v60 = v50;
    unint64_t v61 = (char *)v50 - (char *)v51 - 128;
    if (v61 < 0x80) {
      goto LABEL_73;
    }
LABEL_99:
    uint64_t v78 = 0;
    uint64_t v79 = 0;
    uint64_t v80 = (v61 >> 7) + 1;
    uint64_t v63 = &v51[16 * (v80 & 0x3FFFFFFFFFFFFFELL)];
    unint64_t v81 = (char *)v51 + 177;
    uint64_t v82 = v80 & 0x3FFFFFFFFFFFFFELL;
    do
    {
      if (!*(v81 - 128)) {
        ++v78;
      }
      if (!*v81) {
        ++v79;
      }
      v81 += 256;
      v82 -= 2;
    }
    while (v82);
    uint64_t v62 = v79 + v78;
    if (v80 != (v80 & 0x3FFFFFFFFFFFFFELL)) {
      goto LABEL_106;
    }
    goto LABEL_109;
  }
LABEL_84:
  uint64_t v68 = *v59;
  if (*v59 < 1)
  {
LABEL_143:
    a6->i64[0] = 0;
    a6->i64[1] = 0;
    a6[1].i64[0] = 0;
    if (!v50) {
      goto LABEL_148;
    }
    goto LABEL_144;
  }
  uint64_t v69 = 0;
  uint64_t v70 = *(unsigned int *)(a3 + 16);
  while (1)
  {
    if ((int)v70 < 1 || (int)v70 <= *(_DWORD *)(a3 + 40)) {
      goto LABEL_143;
    }
    sub_8349C0(a1, a2, --v70, (uint64_t)&v110, a5, (uint64_t *)&v106);
    double v72 = (void **)__p;
    if (__p)
    {
      int v73 = (void **)v109;
      int v74 = __p;
      if ((void *)v109 != __p)
      {
        do
          int v73 = sub_2DF518(v73 - 16);
        while (v73 != v72);
        int v74 = __p;
      }
      *(void *)&long long v109 = v72;
      operator delete(v74);
    }
    int v50 = (void **)v106;
    long long __p = v106;
    long long v109 = v107;
    char v75 = *(int **)(*a2 + 40 * v70);
    unsigned int v76 = (unsigned __int16 *)((char *)v75 - *v75);
    if (*v76 < 9u || (uint64_t v77 = v76[4]) == 0)
    {
      uint64_t v71 = 0;
      uint64_t v60 = (void **)v107;
      if (v106 != (void *)v107) {
        break;
      }
      goto LABEL_87;
    }
    uint64_t v71 = *(unsigned int *)((char *)v75 + v77);
    uint64_t v60 = (void **)v107;
    if (v106 != (void *)v107) {
      break;
    }
LABEL_87:
    v69 += v71;
    if (v69 >= v68) {
      goto LABEL_143;
    }
  }
  long long v51 = (void **)v106;
  unint64_t v61 = (char *)v60 - (unsigned char *)v106 - 128;
  if (v61 >= 0x80) {
    goto LABEL_99;
  }
LABEL_73:
  uint64_t v62 = 0;
  uint64_t v63 = v51;
  do
  {
LABEL_106:
    if (!*((unsigned char *)v63 + 49)) {
      ++v62;
    }
    v63 += 16;
  }
  while (v63 != v60);
LABEL_109:
  sub_834E28(a1, a2, *(void *)(a3 + 24), (uint64_t *)&v106);
  char v103 = 0;
  BOOL v104 = 0;
  unint64_t v105 = 0;
  long long v83 = (unsigned __int8 **)__p;
  long long v84 = (unsigned __int8 **)v109;
  if (__p == (void *)v109) {
    goto LABEL_130;
  }
  while (2)
  {
    int v86 = (unsigned __int8 **)v106;
    unint64_t v87 = (unsigned __int8 **)v107;
    if (v106 == (void *)v107)
    {
LABEL_121:
      if (v86 != (unsigned __int8 **)v107) {
        goto LABEL_122;
      }
LABEL_124:
      uint64_t v91 = v104;
      if ((unint64_t)v104 >= v105)
      {
        int v85 = (void **)sub_840770((uint64_t *)&v103, (uint64_t)v83);
      }
      else
      {
        sub_840970((uint64_t)v104, (uint64_t)v83);
        int v85 = v91 + 16;
      }
      BOOL v104 = v85;
    }
    else
    {
      do
      {
        double v89 = *v83;
        int v88 = v83[1];
        unint64_t v90 = *v86;
        if (v88 - *v83 == v86[1] - *v86)
        {
          if (v89 == v88) {
            goto LABEL_121;
          }
          while (sub_524DC(v89, v90))
          {
            v89 += 48;
            v90 += 48;
            if (v89 == v88) {
              goto LABEL_121;
            }
          }
        }
        v86 += 16;
      }
      while (v86 != v87);
      if (v87 == (unsigned __int8 **)v107) {
        goto LABEL_124;
      }
LABEL_122:
      if (v62 == 1 && !*((unsigned char *)v83 + 49)) {
        goto LABEL_124;
      }
    }
    v83 += 16;
    if (v83 != v84) {
      continue;
    }
    break;
  }
  if (v103 != v104)
  {
    sub_6F4634((uint64_t)(a1 + 1), (uint64_t *)&v103, a4, a6);
    goto LABEL_131;
  }
LABEL_130:
  sub_6F4634((uint64_t)(a1 + 1), (uint64_t *)&__p, a4, a6);
LABEL_131:
  char v92 = (void **)v103;
  if (v103)
  {
    float64x2_t v93 = v104;
    char v94 = v103;
    if (v104 != v103)
    {
      do
        float64x2_t v93 = sub_2DF518(v93 - 16);
      while (v93 != v92);
      char v94 = v103;
    }
    BOOL v104 = v92;
    operator delete(v94);
  }
  uint64_t v95 = (void **)v106;
  if (v106)
  {
    char v96 = (void **)v107;
    uint64_t v97 = v106;
    if ((void *)v107 != v106)
    {
      do
        char v96 = sub_2DF518(v96 - 16);
      while (v96 != v95);
      uint64_t v97 = v106;
    }
    *(void *)&long long v107 = v95;
    operator delete(v97);
  }
  int v50 = (void **)__p;
  if (__p)
  {
LABEL_144:
    char v98 = (void **)v109;
    unint64_t v99 = v50;
    if ((void **)v109 != v50)
    {
      do
        char v98 = sub_2DF518(v98 - 16);
      while (v98 != v50);
      unint64_t v99 = __p;
    }
    *(void *)&long long v109 = v50;
    operator delete(v99);
  }
LABEL_148:
  if (v110)
  {
    unint64_t v111 = (char *)v110;
    operator delete(v110);
  }
}

void sub_8347B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
  {
    a23 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_834840(void **a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  if (*a2 != v4)
  {
    while (!*(unsigned char *)(v3 + 113))
    {
      v3 += 144;
      if (v3 == v4) {
        return 0;
      }
    }
  }
  if (v3 == v4) {
    return 0;
  }
  uint64_t v5 = *(int **)sub_5A7C34(*a1, a1[1][2]);
  unint64_t v6 = *(int **)sub_5A7C34(*a1, a1[1][3]);
  uint64_t v7 = (unsigned __int16 *)((char *)v5 - *v5);
  unsigned int v8 = *v7;
  if (v8 >= 0xB && v7[5])
  {
    int v9 = *((unsigned char *)v5 + v7[5] + 1) & 1;
    unint64_t v10 = (unsigned __int16 *)((char *)v6 - *v6);
    unsigned int v11 = *v10;
    if (v11 < 0xB)
    {
LABEL_14:
      if (v9) {
        return 0;
      }
      goto LABEL_16;
    }
  }
  else
  {
    int v9 = 0;
    unint64_t v10 = (unsigned __int16 *)((char *)v6 - *v6);
    unsigned int v11 = *v10;
    if (v11 < 0xB) {
      goto LABEL_14;
    }
  }
  if (!v10[5]) {
    goto LABEL_14;
  }
  if ((v9 ^ *((unsigned __int8 *)v6 + v10[5] + 1))) {
    return 0;
  }
LABEL_16:
  if (v8 >= 0xB && v7[5])
  {
    BOOL v13 = v11 < 0xB || (*(int *)((char *)v5 + v7[5]) & 0x100) == 0;
    if (!v13 && v10[5] && (*((unsigned char *)v6 + v10[5] + 1) & 1) != 0)
    {
      if (v8 < 0x2F)
      {
        LODWORD(v14) = 0;
      }
      else
      {
        uint64_t v14 = v7[23];
        if (v14) {
          LODWORD(v14) = *((unsigned __int8 *)v5 + v14) == 0;
        }
      }
      if (v11 >= 0x2F && (uint64_t v15 = v10[23]) != 0)
      {
        if ((v14 ^ (*((unsigned char *)v6 + v15) == 0))) {
          return 0;
        }
      }
      else if (v14)
      {
        return 0;
      }
    }
  }
  return 1;
}

void sub_8349C0(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  *a6 = 0;
  a6[1] = 0;
  a6[2] = 0;
  sub_68F4F8(*a1, *(unsigned int *)(*a2 + 40 * a3 + 32) | ((unint64_t)*(unsigned __int16 *)(*a2 + 40 * a3 + 36) << 32), &v42);
  uint64_t v12 = v42;
  BOOL v13 = v43;
  if (v42 == v43) {
    goto LABEL_35;
  }
  do
  {
    uint64_t v14 = (int *)sub_2DBC9C(*a1, *v12);
    uint64_t v15 = (unsigned __int16 *)((char *)v14 - *v14);
    if (*v15 < 5u) {
      goto LABEL_3;
    }
    uint64_t v16 = v15[2];
    if (!v16 || *((unsigned char *)v14 + v16) != 3) {
      goto LABEL_3;
    }
    sub_68F5DC(*a1, *v12, (unint64_t *)&v40);
    uint64_t v17 = v40;
    uint64_t v18 = (v41 - v40) >> 3;
    if (v18 <= (unint64_t)(-a3 - 0x3333333333333333 * ((uint64_t)(a2[1] - *a2) >> 3)))
    {
      if (v40 != v41)
      {
        unint64_t v19 = (unint64_t *)(*a2 + 40 * a3 + 32);
        unint64_t v20 = (unint64_t)v40;
        do
        {
          unint64_t v22 = *v19;
          v19 += 5;
          unint64_t v21 = v22;
          if (__PAIR64__(*(unsigned __int16 *)(v20 + 4), *(_DWORD *)v20) != __PAIR64__(WORD2(v22), v22)
            || (HIWORD(v21) & 1) == (*(unsigned char *)(v20 + 6) == 0))
          {
            goto LABEL_8;
          }
          v20 += 8;
        }
        while ((unsigned char *)v20 != v41);
      }
      uint64_t v23 = *(unint64_t **)a4;
      uint64_t v24 = *(void **)(a4 + 8);
      unint64_t v25 = (unint64_t)v40;
      uint64_t v26 = (uint64_t)v24 - *(void *)a4;
      if (v24 == *(void **)a4) {
        goto LABEL_27;
      }
      if (v18 >= v26 >> 3)
      {
        unint64_t v27 = (unint64_t)&v40[8 * v18 + 8 * (1 - (v26 >> 3))];
        if ((unsigned char *)v27 != v40)
        {
          unint64_t v30 = *v23;
          unint64_t v28 = v23 + 1;
          unint64_t v29 = v30;
          unint64_t v25 = (unint64_t)v40;
          while (__PAIR64__(*(unsigned __int16 *)(v25 + 4), *(_DWORD *)v25) != __PAIR64__(WORD2(v29), v29)
               || (HIWORD(v29) & 1) == (*(unsigned char *)(v25 + 6) == 0))
          {
LABEL_19:
            v25 += 8;
            if (v25 == v27) {
              goto LABEL_8;
            }
          }
          uint64_t v31 = 0;
          while (&v28[v31] != v24)
          {
            unint64_t v32 = v28[v31];
            if (__PAIR64__(*(unsigned __int16 *)(v25 + v31 * 8 + 12), *(_DWORD *)(v25 + v31 * 8 + 8)) == __PAIR64__(WORD2(v32), v32))
            {
              BOOL v33 = *(unsigned char *)(v25 + v31 * 8 + 14) == 0;
              ++v31;
              if ((HIWORD(v32) & 1 ^ v33)) {
                continue;
              }
            }
            goto LABEL_19;
          }
LABEL_27:
          if ((unsigned char *)v25 != v41)
          {
            sub_834D40(a1, v12, a5, (uint64_t)&__p);
            uint64_t v34 = a5;
            sub_840434(a6, a6[1], (uint64_t)__p, (uint64_t)v39, ((char *)v39 - (unsigned char *)__p) >> 7);
            uint64_t v35 = (void **)__p;
            if (__p)
            {
              char v36 = v39;
              unsigned int v37 = __p;
              if (v39 != __p)
              {
                do
                  char v36 = sub_2DF518(v36 - 16);
                while (v36 != v35);
                unsigned int v37 = __p;
              }
              uint64_t v39 = v35;
              operator delete(v37);
            }
            uint64_t v17 = v40;
            a5 = v34;
          }
        }
      }
    }
LABEL_8:
    if (v17)
    {
      uint64_t v41 = v17;
      operator delete(v17);
    }
LABEL_3:
    ++v12;
  }
  while (v12 != v13);
  uint64_t v12 = v42;
LABEL_35:
  if (v12)
  {
    uint64_t v43 = v12;
    operator delete(v12);
  }
}

void sub_834CB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  sub_6CCDEC(&a10);
  if (__p)
  {
    a14 = (uint64_t)__p;
    operator delete(__p);
    unint64_t v19 = a16;
    if (!a16)
    {
LABEL_3:
      sub_6CCDEC(v17);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    unint64_t v19 = a16;
    if (!a16) {
      goto LABEL_3;
    }
  }
  a17 = (uint64_t)v19;
  operator delete(v19);
  sub_6CCDEC(v17);
  _Unwind_Resume(a1);
}

void **sub_834D40@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v12 = a3;
  sub_6CCCD4(*a1, *a2, (uint64_t *)a4);
  uint64_t v7 = &xmmword_25C86F8;
  if (a3) {
    uint64_t v7 = &xmmword_25C8720;
  }
  v11[0] = a1;
  v11[1] = &v12;
  v11[2] = v7;
  double result = (void **)sub_835258(*(unsigned __int8 **)a4, *(unsigned __int8 **)(a4 + 8), (uint64_t)v11);
  int v9 = result;
  unint64_t v10 = *(void ***)(a4 + 8);
  if (v10 != result)
  {
    while (v10 != v9)
    {
      v10 -= 16;
      double result = sub_2DF518(v10);
    }
    *(void *)(a4 + 8) = v9;
  }
  return result;
}

void sub_834E14(_Unwind_Exception *a1)
{
  sub_6CCDEC(v1);
  _Unwind_Resume(a1);
}

void sub_834E28(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  unint64_t v4 = 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - *a2) >> 3);
  if (a3 <= v4) {
    unint64_t v5 = 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - *a2) >> 3);
  }
  else {
    unint64_t v5 = a3;
  }
  unint64_t v50 = v5;
  if (v4 > a3)
  {
    unint64_t v8 = a3;
    uint64_t v9 = 40 * a3 + 32;
    do
    {
      if (a1[6] < 0) {
        return;
      }
      unint64_t v10 = (void *)sub_5A7C34(a2, v8);
      unsigned int v11 = (unsigned __int16 *)(*v10 - *(int *)*v10);
      if (*v11 < 0x2Fu) {
        return;
      }
      uint64_t v12 = v11[23];
      if (!v12) {
        return;
      }
      unsigned int v13 = *(unsigned __int8 *)(*v10 + v12);
      BOOL v14 = v13 > 0x2A;
      uint64_t v15 = (1 << v13) & 0x50426810004;
      if (v14 || v15 == 0) {
        return;
      }
      sub_68F4F8(*a1, *(unsigned int *)(*a2 + 40 * v8 + 32) | ((unint64_t)*(unsigned __int16 *)(*a2 + 40 * v8 + 36) << 32), &v56);
      uint64_t v18 = v56;
      uint64_t v17 = v57;
      if (v56 == v57)
      {
        if (!v56) {
          goto LABEL_6;
        }
      }
      else
      {
        do
        {
          unint64_t v19 = (int *)sub_2DBC9C(*a1, *v18);
          unint64_t v20 = (unsigned __int16 *)((char *)v19 - *v19);
          if (*v20 >= 5u)
          {
            uint64_t v21 = v20[2];
            if (v21)
            {
              if (*((unsigned char *)v19 + v21) == 3)
              {
                uint64_t v22 = *a1;
                unint64_t v23 = *v18;
                uint64_t v54 = 0;
                unsigned int v55 = 0;
                long long __p = 0;
                uint64_t v24 = (int *)sub_2DBC9C(v22, v23);
                unint64_t v25 = (unsigned __int16 *)((char *)v24 - *v24);
                if (*v25 >= 7u)
                {
                  uint64_t v26 = v25[3];
                  if (v26)
                  {
                    unint64_t v27 = (unsigned int *)((char *)v24 + v26 + *(unsigned int *)((char *)v24 + v26));
                    uint64_t v28 = *v27;
                    if (v28)
                    {
                      uint64_t v29 = 8 * v28;
                      unint64_t v30 = (char *)operator new(8 * v28);
                      long long __p = v30;
                      uint64_t v54 = v30;
                      unsigned int v55 = &v30[8 * v28];
                      uint64_t v31 = (uint64_t *)(v27 + 1);
                      do
                      {
                        uint64_t v32 = *v31;
                        unint64_t v33 = HIDWORD(*v31);
                        LODWORD(v51) = *v31;
                        WORD2(v51) = v33;
                        BYTE6(v51) = (v32 & 0xFF000000000000) == 0;
                        unint64_t v30 = sub_2D6254((unint64_t *)&__p, v30, (int *)&v51) + 8;
                        ++v31;
                        v29 -= 8;
                      }
                      while (v29);
                    }
                  }
                }
                uint64_t v34 = (char *)__p;
                uint64_t v35 = *a2;
                uint64_t v36 = *(void *)(*a2 + 40 * v8 + 32);
                if (__PAIR64__(*((unsigned __int16 *)__p + 2), *(_DWORD *)__p) != __PAIR64__(WORD2(v36), v36)) {
                  goto LABEL_18;
                }
                if (((v36 & 0x1000000000000) == 0) != (*((unsigned char *)__p + 6) == 0)) {
                  goto LABEL_18;
                }
                unint64_t v37 = (v54 - (unsigned char *)__p) >> 3;
                unint64_t v38 = 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - v35) >> 3);
                if (v37 > v38 - a3) {
                  goto LABEL_18;
                }
                unint64_t v39 = v38 - v8;
                if (v39 < v37) {
                  unint64_t v37 = v39;
                }
                if (v37)
                {
                  unint64_t v40 = (char *)__p + 8 * v37;
                  uint64_t v41 = (unint64_t *)(v35 + v9);
                  unint64_t v42 = (char *)__p;
                  while (1)
                  {
                    unint64_t v44 = *v41;
                    v41 += 5;
                    unint64_t v43 = v44;
                    if (__PAIR64__(*((unsigned __int16 *)v42 + 2), *(_DWORD *)v42) != __PAIR64__(WORD2(v44), v44)
                      || (HIWORD(v43) & 1) == (v42[6] == 0))
                    {
                      break;
                    }
                    v42 += 8;
                    if (v42 == v40)
                    {
                      if (!__p) {
                        goto LABEL_19;
                      }
                      goto LABEL_18;
                    }
                  }
                  sub_6CCCD4(*a1, *v18, (uint64_t *)&v51);
                  sub_840434(a4, a4[1], (uint64_t)v51, (uint64_t)v52, ((char *)v52 - (unsigned char *)v51) >> 7);
                  unint64_t v45 = (void **)v51;
                  if (v51)
                  {
                    uint64_t v46 = v52;
                    uint64_t v47 = v51;
                    if (v52 != v51)
                    {
                      do
                        uint64_t v46 = sub_2DF518(v46 - 16);
                      while (v46 != v45);
                      uint64_t v47 = v51;
                    }
                    unint64_t v52 = v45;
                    operator delete(v47);
                  }
                  uint64_t v34 = (char *)__p;
                  if (__p) {
                    goto LABEL_18;
                  }
                }
                else
                {
LABEL_18:
                  uint64_t v54 = v34;
                  operator delete(v34);
                }
              }
            }
          }
LABEL_19:
          ++v18;
        }
        while (v18 != v17);
        uint64_t v18 = v56;
        if (!v56) {
          goto LABEL_6;
        }
      }
      unint64_t v57 = v18;
      operator delete(v18);
LABEL_6:
      ++v8;
      v9 += 40;
    }
    while (v8 != v50);
  }
}

void sub_8351B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, void *a18, uint64_t a19)
{
  sub_6CCDEC(&a12);
  if (__p)
  {
    a16 = (uint64_t)__p;
    operator delete(__p);
    unint64_t v20 = a18;
    if (!a18)
    {
LABEL_3:
      sub_6CCDEC(a9);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    unint64_t v20 = a18;
    if (!a18) {
      goto LABEL_3;
    }
  }
  a19 = (uint64_t)v20;
  operator delete(v20);
  sub_6CCDEC(a9);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_835258(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a2;
  }
  unint64_t v5 = a1;
  int v6 = **(_DWORD **)(a3 + 8);
  while (1)
  {
    unint64_t v7 = v5[48];
    BOOL v8 = v7 == 3 && v5[49] == 3;
    BOOL v9 = v8 || v7 == 1;
    BOOL v10 = v9;
    if (!v6 && v10) {
      break;
    }
    unsigned int v11 = *(void **)(a3 + 16);
    int8x8_t v12 = (int8x8_t)v11[1];
    if (v12)
    {
      uint8x8_t v13 = (uint8x8_t)vcnt_s8(v12);
      v13.i16[0] = vaddlv_u8(v13);
      if (v13.u32[0] > 1uLL)
      {
        unint64_t v14 = v5[48];
        if (*(void *)&v12 <= v7) {
          unint64_t v14 = v7 % *(void *)&v12;
        }
      }
      else
      {
        unint64_t v14 = (v12.i32[0] - 1) & v7;
      }
      uint64_t v15 = *(uint64_t ****)(*v11 + 8 * v14);
      if (v15)
      {
        uint64_t v16 = *v15;
        if (v16)
        {
          if (v13.u32[0] < 2uLL)
          {
            uint64_t v17 = *(void *)&v12 - 1;
            while (1)
            {
              unint64_t v19 = v16[1];
              if (v19 == (uint64_t *)v7)
              {
                if (*((unsigned __int8 *)v16 + 16) == v7) {
                  goto LABEL_37;
                }
              }
              else if (((unint64_t)v19 & v17) != v14)
              {
                goto LABEL_34;
              }
              uint64_t v16 = (uint64_t **)*v16;
              if (!v16) {
                goto LABEL_34;
              }
            }
          }
          do
          {
            unint64_t v18 = (unint64_t)v16[1];
            if (v18 == v7)
            {
              if (*((unsigned __int8 *)v16 + 16) == v7) {
                goto LABEL_37;
              }
            }
            else
            {
              if (v18 >= *(void *)&v12) {
                v18 %= *(void *)&v12;
              }
              if (v18 != v14) {
                break;
              }
            }
            uint64_t v16 = (uint64_t **)*v16;
          }
          while (v16);
        }
      }
    }
LABEL_34:
    char v20 = !v10;
    if (v6 != 1) {
      char v20 = 1;
    }
    if (v20) {
      break;
    }
LABEL_37:
    v5 += 128;
    if (v5 == a2) {
      return a2;
    }
  }
  if (v5 == a2) {
    return a2;
  }
  unint64_t v23 = v5 + 128;
  if (v5 + 128 != a2)
  {
    uint64_t v21 = (uint64_t)v5;
    do
    {
      unint64_t v24 = v5[176];
      int v25 = v5[177];
      unint64_t v5 = v23;
      BOOL v28 = v24 == 3 && v25 == 3 || v24 == 1;
      int v29 = **(_DWORD **)(a3 + 8);
      if (v29 || !v28)
      {
        unint64_t v30 = *(void **)(a3 + 16);
        int8x8_t v31 = (int8x8_t)v30[1];
        if (v31)
        {
          uint8x8_t v32 = (uint8x8_t)vcnt_s8(v31);
          v32.i16[0] = vaddlv_u8(v32);
          if (v32.u32[0] > 1uLL)
          {
            unint64_t v33 = v24;
            if (*(void *)&v31 <= v24) {
              unint64_t v33 = v24 % *(void *)&v31;
            }
          }
          else
          {
            unint64_t v33 = (v31.i32[0] - 1) & v24;
          }
          uint64_t v34 = *(uint64_t ****)(*v30 + 8 * v33);
          if (v34)
          {
            uint64_t v35 = *v34;
            if (v35)
            {
              if (v32.u32[0] < 2uLL)
              {
                uint64_t v36 = *(void *)&v31 - 1;
                while (1)
                {
                  unint64_t v38 = v35[1];
                  if (v38 == (uint64_t *)v24)
                  {
                    if (*((unsigned __int8 *)v35 + 16) == v24) {
                      goto LABEL_43;
                    }
                  }
                  else if (((unint64_t)v38 & v36) != v33)
                  {
                    goto LABEL_76;
                  }
                  uint64_t v35 = (uint64_t **)*v35;
                  if (!v35) {
                    goto LABEL_76;
                  }
                }
              }
              do
              {
                unint64_t v37 = (unint64_t)v35[1];
                if (v37 == v24)
                {
                  if (*((unsigned __int8 *)v35 + 16) == v24) {
                    goto LABEL_43;
                  }
                }
                else
                {
                  if (v37 >= *(void *)&v31) {
                    v37 %= *(void *)&v31;
                  }
                  if (v37 != v33) {
                    break;
                  }
                }
                uint64_t v35 = (uint64_t **)*v35;
              }
              while (v35);
            }
          }
        }
LABEL_76:
        char v39 = !v28;
        if (v29 != 1) {
          char v39 = 1;
        }
        if ((v39 & 1) == 0)
        {
LABEL_43:
          sub_6CD344(v21, (uint64_t)v5);
          v21 += 128;
        }
      }
      unint64_t v23 = v5 + 128;
    }
    while (v5 + 128 != a2);
    return (unsigned __int8 *)v21;
  }
  return v5;
}

void sub_835524(uint64_t a1, void *a2)
{
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B9960;
  strcpy((char *)__p, "max_distance_to_look_forward_for_a_name");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)a1);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x30uLL);
  long long v11 = xmmword_20B93D0;
  strcpy((char *)__p, "max_distance_to_look_backwards_for_a_sign");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)(a1 + 8));
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x38uLL);
  long long v11 = xmmword_20B9AC0;
  strcpy((char *)__p, "distance_to_look_backwards_for_a_sign_major_arterial");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)(a1 + 16));
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x38uLL);
  long long v11 = xmmword_20B9AC0;
  strcpy((char *)__p, "distance_to_look_backwards_for_a_sign_minor_arterial");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)(a1 + 24));
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x30uLL);
  long long v11 = xmmword_20B93E0;
  strcpy((char *)__p, "distance_to_look_backwards_for_a_sign_local");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)(a1 + 32));
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B8FD0;
  strcpy((char *)__p, "distance_to_look_for_off_route_signs");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)(a1 + 40));
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B9260;
  strcpy((char *)__p, "min_turn_angle_cross_and_continue");
  unint64_t v4 = sub_58070(a2, (uint64_t)&__p);
  unint64_t v5 = (void *)(a1 + 48);
  if (v4)
  {
    unint64_t v5 = v4 + 5;
    if (*((_DWORD *)v4 + 12) != 1) {
      unint64_t v5 = (void *)(a1 + 48);
    }
  }
  *(void *)(a1 + 48) = *v5;
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x30uLL);
  long long v11 = xmmword_20B93E0;
  strcpy((char *)__p, "enable_special_guidance_spoken_instructions");
  int v6 = sub_58070(a2, (uint64_t)&__p);
  if (v6 && (int v7 = *((_DWORD *)v6 + 12), (v7 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 56) = v7 == 4;
    if (SHIBYTE(v11) < 0) {
      goto LABEL_23;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a1 + 56) != 0;
    if (SHIBYTE(v11) < 0) {
LABEL_23:
    }
      operator delete(__p);
  }
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B9390;
  strcpy((char *)__p, "prefer_destination_territory_poi");
  BOOL v8 = sub_58070(a2, (uint64_t)&__p);
  if (v8 && (int v9 = *((_DWORD *)v8 + 12), (v9 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 57) = v9 == 4;
    if (SHIBYTE(v11) < 0) {
      goto LABEL_30;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 57) = *(unsigned char *)(a1 + 57) != 0;
    if (SHIBYTE(v11) < 0) {
LABEL_30:
    }
      operator delete(__p);
  }
}

void sub_8358F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_835930(uint64_t a1, void *a2, char a3, uint64_t a4)
{
  *(void *)a1 = sub_3750CC(a2);
  sub_5F2D5C(a1 + 8, (long long *)a4, a3);
  unint64_t v19 = operator new(0x20uLL);
  long long v20 = xmmword_20B8E90;
  strcpy((char *)v19, "routing/guidance/StepNamer.json");
  if (*(char *)(a4 + 23) < 0)
  {
    sub_4200(&__dst, *(void **)a4, *(void *)(a4 + 8));
  }
  else
  {
    long long __dst = *(_OWORD *)a4;
    uint64_t v24 = *(void *)(a4 + 16);
  }
  sub_28C774(&v17, (uint64_t)&__dst, 1uLL);
  BOOL v8 = sub_374CDC((uint64_t)a2, (uint64_t)&v19, (uint64_t *)&v17);
  sub_3CB560(v8, (uint64_t)__p);
  int64x2_t v9 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  *(int64x2_t *)(a1 + 40) = v9;
  *(int64x2_t *)(a1 + 56) = v9;
  *(int64x2_t *)(a1 + 72) = v9;
  *(void *)(a1 + 88) = 0x4050400000000000;
  *(_WORD *)(a1 + 96) = 0;
  sub_838E40(a1 + 40, __p);
  BOOL v10 = v22;
  if (v22)
  {
    do
    {
      uint64_t v15 = *(char **)v10;
      sub_57AC8((uint64_t *)v10 + 5);
      if (v10[39] < 0) {
        operator delete(*((void **)v10 + 2));
      }
      operator delete(v10);
      BOOL v10 = v15;
    }
    while (v15);
  }
  long long v11 = __p[0];
  __p[0] = 0;
  if (v11) {
    operator delete(v11);
  }
  int8x8_t v12 = (void **)v17;
  if (v17)
  {
    uint8x8_t v13 = v18;
    unint64_t v14 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v13 - 1) < 0) {
          operator delete(*(v13 - 3));
        }
        v13 -= 3;
      }
      while (v13 != v12);
      unint64_t v14 = v17;
    }
    unint64_t v18 = v12;
    operator delete(v14);
  }
  if (SHIBYTE(v24) < 0)
  {
    operator delete((void *)__dst);
    if ((SHIBYTE(v20) & 0x80000000) == 0) {
      return a1;
    }
LABEL_22:
    operator delete(v19);
    return a1;
  }
  if (SHIBYTE(v20) < 0) {
    goto LABEL_22;
  }
  return a1;
}

void sub_835B50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0)
  {
    operator delete(__p);
    if ((*(char *)(v19 + 31) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v19 + 31) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v20);
  _Unwind_Resume(exception_object);
}

void sub_835BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = nullsub_1(a2);
  int v6 = *(void **)v5;
  int v7 = *(void **)(v5 + 8);
  if (*(void **)v5 != v7)
  {
    do
    {
      uint64_t v8 = v6[134] - v6[133];
      if (v8)
      {
        unint64_t v9 = 0;
        uint64_t v10 = v8 / 2400;
        do
          sub_835CAC(a1, v6, v9++, a3);
        while (v10 != v9);
      }
      sub_836990(a1, (uint64_t)v6);
      v6 += 1541;
    }
    while (v6 != v7);
  }
}

void sub_835CAC(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_51690C(a2 + 133, a3);
  if ((*(_DWORD *)(v7 + 160) - 89) < 2) {
    return;
  }
  uint64_t v8 = v7;
  unint64_t v9 = (uint64_t *)nullsub_1(a2);
  unint64_t v10 = *(void *)(v8 + 24);
  if (v10 >= 0xCCCCCCCCCCCCCCCDLL * ((v9[1] - *v9) >> 3)) {
    unint64_t v10 = sub_46C760(a2) - 1;
  }
  uint64_t v77 = (int64x2_t *)(v8 + 336);
  long long v11 = (int **)sub_46C8EC(a2, v10);
  int8x8_t v12 = (const std::string *)sub_4D4928(a2 + 928, v10);
  std::string::operator=((std::string *)(a1 + 8), v12);
  uint64_t v13 = *(unsigned int *)(v8 + 160);
  if (v13 > 0x3F) {
    goto LABEL_15;
  }
  if (((1 << v13) & 0xC000000000300008) == 0)
  {
    if (v13 == 4)
    {
      sub_836C64(a1, v8, a4, v9, (uint64_t)v99);
      if (sub_6F2FD8((uint64_t)v99))
      {
        unint64_t v14 = *(void *)(v8 + 344);
        if (v14 >= *(void *)(v8 + 352))
        {
          uint64_t v15 = sub_5B09D8(v77, (long long *)v99);
        }
        else
        {
          sub_4AA8E0(*(char **)(v8 + 344), (long long *)v99);
          uint64_t v15 = v14 + 152;
          *(void *)(v8 + 344) = v14 + 152;
        }
        *(void *)(v8 + 344) = v15;
      }
      goto LABEL_59;
    }
LABEL_15:
    uint64_t v16 = (unsigned __int16 *)((char *)*v11 - **v11);
    if (*v16 >= 0x2Fu)
    {
      uint64_t v17 = v16[23];
      if (v17)
      {
        unsigned int v18 = *((unsigned __int8 *)*v11 + v17);
        BOOL v19 = v18 > 0x2A;
        uint64_t v20 = (1 << v18) & 0x50426810004;
        if (!v19 && v20 != 0) {
          goto LABEL_64;
        }
      }
    }
    v86[0] = v11[4];
    __p[0] = 0;
    __p[1] = 0;
    v90[0] = 0;
    sub_836AD0(a1, (unsigned int *)v86, a4, (uint64_t)__p, (uint64_t)v99);
    if (SHIBYTE(v90[0]) < 0) {
      operator delete(__p[0]);
    }
    if (!sub_6F2FD8((uint64_t)v99)) {
      goto LABEL_59;
    }
    unint64_t v22 = *(void *)(v8 + 344);
    if (v22 >= *(void *)(v8 + 352))
    {
      uint64_t v23 = sub_5B09D8(v77, (long long *)v99);
    }
    else
    {
      sub_4AA8E0(*(char **)(v8 + 344), (long long *)v99);
      uint64_t v23 = v22 + 152;
      *(void *)(v8 + 344) = v22 + 152;
    }
    *(void *)(v8 + 344) = v23;
    v83[0] = *(void **)(sub_46C8EC(a2, *(void *)(v8 + 16)) + 32);
    v86[0] = 0;
    v86[1] = 0;
    v87[0] = 0;
    sub_836AD0(a1, (unsigned int *)v83, a4, (uint64_t)v86, (uint64_t)__p);
    if (SHIBYTE(v87[0]) < 0) {
      operator delete(v86[0]);
    }
    *(unsigned char *)(v8 + 560) = sub_6F317C((unsigned __int8 *)__p, v99);
    if (v98 < 0)
    {
      operator delete(v97);
      if ((v96 & 0x80000000) == 0)
      {
LABEL_44:
        if ((v94 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        goto LABEL_50;
      }
    }
    else if ((v96 & 0x80000000) == 0)
    {
      goto LABEL_44;
    }
    operator delete(v95);
    if ((v94 & 0x80000000) == 0)
    {
LABEL_45:
      if ((v92 & 0x80000000) == 0) {
        goto LABEL_46;
      }
      goto LABEL_51;
    }
LABEL_50:
    operator delete(v93);
    if ((v92 & 0x80000000) == 0)
    {
LABEL_46:
      if ((SHIBYTE(v90[0]) & 0x80000000) == 0) {
        goto LABEL_59;
      }
LABEL_52:
      operator delete(__p[0]);
      goto LABEL_59;
    }
LABEL_51:
    operator delete(v91);
    if ((SHIBYTE(v90[0]) & 0x80000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_52;
  }
  if (!*(unsigned char *)(v8 + 304) || *(void *)(v8 + 136) == *(void *)(v8 + 144)) {
    goto LABEL_15;
  }
  sub_836F2C((uint64_t *)a1, (uint64_t **)(v8 + 136), a4, v99);
  if (sub_6F2FD8((uint64_t)v99))
  {
    sub_8330D4(v77, (long long *)v99);
    if (*(void *)(v8 + 336) == *(void *)(v8 + 344)) {
      goto LABEL_59;
    }
LABEL_32:
    v83[0] = v11[4];
    v86[0] = 0;
    v86[1] = 0;
    v87[0] = 0;
    sub_836AD0(a1, (unsigned int *)v83, a4, (uint64_t)v86, (uint64_t)__p);
    if (SHIBYTE(v87[0]) < 0) {
      operator delete(v86[0]);
    }
    if (!sub_6F2FD8((uint64_t)__p)) {
      goto LABEL_58;
    }
    sub_6F3150((char *)v77->i64[0], (uint64_t)v86);
    sub_6F3150((char *)__p, (uint64_t)v83);
    BOOL v24 = sub_69412C((unsigned __int8 *)v86, (unsigned __int8 *)v83);
    if (SBYTE7(v84) < 0)
    {
      operator delete(v83[0]);
      if ((SHIBYTE(v87[0]) & 0x80000000) == 0)
      {
LABEL_37:
        if (!v24) {
          goto LABEL_58;
        }
        goto LABEL_57;
      }
    }
    else if ((SHIBYTE(v87[0]) & 0x80000000) == 0)
    {
      goto LABEL_37;
    }
    operator delete(v86[0]);
    if (!v24)
    {
LABEL_58:
      sub_4A50F4((uint64_t)__p);
      goto LABEL_59;
    }
LABEL_57:
    sub_8330D4(v77, (long long *)__p);
    goto LABEL_58;
  }
  v83[0] = *(void **)(sub_46C8EC(a2, *(void *)(v8 + 16)) + 32);
  v86[0] = 0;
  v86[1] = 0;
  v87[0] = 0;
  sub_836AD0(a1, (unsigned int *)v83, a4, (uint64_t)v86, (uint64_t)__p);
  if (SHIBYTE(v87[0]) < 0) {
    operator delete(v86[0]);
  }
  if (sub_6F2FD8((uint64_t)__p)) {
    sub_8330D4(v77, (long long *)__p);
  }
  sub_4A50F4((uint64_t)__p);
  if (*(void *)(v8 + 336) != *(void *)(v8 + 344)) {
    goto LABEL_32;
  }
LABEL_59:
  if (v108 < 0)
  {
    operator delete(v107);
    if ((v105 & 0x80000000) == 0)
    {
LABEL_61:
      if ((v103 & 0x80000000) == 0) {
        goto LABEL_62;
      }
      goto LABEL_102;
    }
  }
  else if ((v105 & 0x80000000) == 0)
  {
    goto LABEL_61;
  }
  operator delete(v104);
  if ((v103 & 0x80000000) == 0)
  {
LABEL_62:
    if ((v101 & 0x80000000) == 0) {
      goto LABEL_63;
    }
LABEL_103:
    operator delete(v100);
    if ((v99[23] & 0x80000000) == 0) {
      goto LABEL_64;
    }
LABEL_104:
    operator delete(*(void **)v99);
    goto LABEL_64;
  }
LABEL_102:
  operator delete(v102);
  if (v101 < 0) {
    goto LABEL_103;
  }
LABEL_63:
  if ((v99[23] & 0x80000000) != 0) {
    goto LABEL_104;
  }
LABEL_64:
  int v25 = (void **)(v8 + 360);
  sub_837C9C(a1, v9, v8, a4, 0, (int64x2_t *)v99);
  uint64_t v26 = *(void *)(v8 + 360);
  if (v26)
  {
    sub_52FA20(v8 + 360, v26);
    operator delete(*v25);
    *int v25 = 0;
    *(void *)(v8 + 368) = 0;
    *(void *)(v8 + 376) = 0;
  }
  uint64_t v27 = *(void *)v99;
  *(void *)(v8 + 360) = *(void *)v99;
  uint64_t v28 = *(void *)&v99[8];
  *(_OWORD *)(v8 + 368) = *(_OWORD *)&v99[8];
  *(_OWORD *)long long __p = 0u;
  *(_OWORD *)unint64_t v90 = 0u;
  LODWORD(v91) = 1065353216;
  *(_OWORD *)int v86 = 0u;
  *(_OWORD *)unint64_t v87 = 0u;
  int v88 = 1065353216;
  *(_OWORD *)long long v83 = 0u;
  long long v84 = 0u;
  int v85 = 1065353216;
  uint64_t v29 = *(void *)(v8 + 336);
  unsigned int v76 = (int64x2_t *)(v8 + 360);
  if (v29 == *(void *)(v8 + 344))
  {
    uint64_t v30 = v28;
  }
  else
  {
    sub_24AFC((uint64_t)__p, v29, v29);
    sub_24AFC((uint64_t)v86, v77->i64[0] + 128, v77->i64[0] + 128);
    sub_83D34C((uint64_t)v83, (unsigned int *)(v77->i64[0] + 64), v77->i64[0] + 64);
    uint64_t v27 = *(void *)(v8 + 360);
    uint64_t v30 = *(void *)(v8 + 368);
  }
  *(void *)unint64_t v99 = __p;
  *(void *)&v99[8] = v86;
  *(void *)&v99[16] = v83;
  uint64_t v31 = sub_83D8BC(v27, v30, (uint64_t *)v99);
  if (*(void *)(v8 + 368) != v31) {
    sub_52FA20((uint64_t)v76, v31);
  }
  char v75 = v9;
  uint64_t v32 = 0;
  unint64_t v33 = (uint64_t *)(v8 + 384);
  unint64_t v81 = (void *)nullsub_1(a2);
  uint64_t v82 = v34;
  while (*(_DWORD *)(v8 + 160) != 4
       && *(void *)(v8 + 336) == *(void *)(v8 + 344)
       && *(void *)(v8 + 360) == *(void *)(v8 + 368)
       && v32 < *(void *)(a1 + 40))
  {
    sub_46B060();
    unint64_t v37 = v36;
    unint64_t v39 = v38;
    if (v81)
    {
      unint64_t v40 = v82;
      unint64_t v41 = sub_46C760(v81);
      BOOL v42 = v40 >= v41;
      BOOL v43 = v40 < v41;
      if (!v37)
      {
        if (v42) {
          break;
        }
        goto LABEL_92;
      }
    }
    else
    {
      if (!v36) {
        break;
      }
      BOOL v43 = 0;
    }
    unint64_t v44 = sub_46C760(v37);
    if (v39 < v44 && v43)
    {
      uint64_t v46 = sub_46C8EC(v81, v82);
      if (v46 == sub_46C8EC(v37, v39)) {
        break;
      }
    }
    else if (((v43 ^ (v39 < v44)) & 1) == 0)
    {
      break;
    }
LABEL_92:
    uint64_t v47 = (char **)sub_46C8EC(v81, v82);
    int v48 = *v47;
    int v49 = &(*v47)[-*(int *)*v47];
    if (*(unsigned __int16 *)v49 < 0x2Fu
      || !*((_WORD *)v49 + 23)
      || ((unsigned int v50 = v48[*((unsigned __int16 *)v49 + 23)],
           BOOL v19 = v50 > 0x2A,
           uint64_t v51 = (1 << v50) & 0x50426810004,
           !v19)
        ? (BOOL v52 = v51 == 0)
        : (BOOL v52 = 1),
          v52))
    {
      uint64_t v54 = (int *)v47[4];
      uint64_t v79 = 0;
      uint64_t v80 = v54;
      v78[0] = 0;
      v78[1] = 0;
      sub_836AD0(a1, (unsigned int *)&v80, a4, (uint64_t)v78, (uint64_t)v99);
      if (SHIBYTE(v79) < 0) {
        operator delete(v78[0]);
      }
      if (sub_6F2FD8((uint64_t)v99))
      {
        int v106 = 1;
        unint64_t v55 = *(void *)(v8 + 368);
        if (v55 >= *(void *)(v8 + 376))
        {
          uint64_t v56 = sub_83DB04(v76, (long long *)v99);
        }
        else
        {
          sub_4AA8E0(*(char **)(v8 + 368), (long long *)v99);
          uint64_t v56 = v55 + 152;
          *(void *)(v8 + 368) = v55 + 152;
        }
        *(void *)(v8 + 368) = v56;
      }
      if (v108 < 0)
      {
        operator delete(v107);
        if (v105 < 0) {
          goto LABEL_173;
        }
LABEL_114:
        if ((v103 & 0x80000000) == 0) {
          goto LABEL_115;
        }
LABEL_174:
        operator delete(v102);
        if (v101 < 0) {
          goto LABEL_175;
        }
LABEL_116:
        if ((v99[23] & 0x80000000) == 0) {
          break;
        }
      }
      else
      {
        if ((v105 & 0x80000000) == 0) {
          goto LABEL_114;
        }
LABEL_173:
        operator delete(v104);
        if (v103 < 0) {
          goto LABEL_174;
        }
LABEL_115:
        if ((v101 & 0x80000000) == 0) {
          goto LABEL_116;
        }
LABEL_175:
        operator delete(v100);
        if ((v99[23] & 0x80000000) == 0) {
          break;
        }
      }
      operator delete(*(void **)v99);
      break;
    }
    uint64_t v53 = *((unsigned __int16 *)v49 + 4);
    if (v53) {
      uint64_t v35 = *(unsigned int *)&v48[v53];
    }
    else {
      uint64_t v35 = 0;
    }
    v32 += v35;
    sub_83DA0C(&v81);
  }
  sub_837C9C(a1, v75, v8, a4, 1, (int64x2_t *)v99);
  if (*v33)
  {
    sub_52FA20(v8 + 384, *v33);
    operator delete((void *)*v33);
    *unint64_t v33 = 0;
    *(void *)(v8 + 392) = 0;
    *(void *)(v8 + 400) = 0;
  }
  *(_OWORD *)(v8 + 384) = *(_OWORD *)v99;
  *(void *)(v8 + 400) = *(void *)&v99[16];
  sub_837288((uint64_t *)a1, v75, (void *)v8, a4, (uint64_t)v99);
  if (sub_6F2FD8((uint64_t)v99))
  {
    unint64_t v57 = *(long long **)(v8 + 336);
    if (v57 != *(long long **)(v8 + 344))
    {
      unint64_t v58 = *(void *)(v8 + 368);
      if (v58 >= *(void *)(v8 + 376))
      {
        uint64_t v59 = sub_83DB04(v76, v57);
      }
      else
      {
        sub_4AA8E0(*(char **)(v8 + 368), v57);
        uint64_t v59 = v58 + 152;
        *(void *)(v8 + 368) = v58 + 152;
      }
      *(void *)(v8 + 368) = v59;
      *(_DWORD *)(v59 - 32) = 1;
      sub_52FA20((uint64_t)v77, *(void *)(v8 + 336));
    }
    unint64_t v60 = *(void *)(v8 + 368);
    if (v60 >= *(void *)(v8 + 376))
    {
      uint64_t v61 = sub_5B09D8(v76, (long long *)v99);
    }
    else
    {
      sub_4AA8E0(*(char **)(v8 + 368), (long long *)v99);
      uint64_t v61 = v60 + 152;
      *(void *)(v8 + 368) = v60 + 152;
    }
    *(void *)(v8 + 368) = v61;
    *(_DWORD *)(v61 - 32) = 4;
  }
  if (*(unsigned char *)(a1 + 96))
  {
    sub_8376C8((uint64_t *)a1, a2, v8, a4, (char **)v78);
    uint64_t v62 = (void **)(v8 + 1784);
    uint64_t v63 = *(void *)(v8 + 1784);
    if (v63)
    {
      uint64_t v64 = *(void *)(v8 + 1792);
      long long v65 = *(void **)(v8 + 1784);
      if (v64 != v63)
      {
        do
        {
          if (*(char *)(v64 - 25) < 0) {
            operator delete(*(void **)(v64 - 48));
          }
          v64 -= 48;
        }
        while (v64 != v63);
        long long v65 = *v62;
      }
      *(void *)(v8 + 1792) = v63;
      operator delete(v65);
      *uint64_t v62 = 0;
      *(void *)(v8 + 1792) = 0;
      *(void *)(v8 + 1800) = 0;
    }
    *(_OWORD *)uint64_t v62 = *(_OWORD *)v78;
    *(void *)(v8 + 1800) = v79;
  }
  if ((v108 & 0x80000000) == 0)
  {
    if ((v105 & 0x80000000) == 0) {
      goto LABEL_141;
    }
LABEL_147:
    operator delete(v104);
    if (v103 < 0) {
      goto LABEL_148;
    }
LABEL_142:
    if ((v101 & 0x80000000) == 0) {
      goto LABEL_143;
    }
LABEL_149:
    operator delete(v100);
    if ((v99[23] & 0x80000000) != 0) {
      goto LABEL_150;
    }
LABEL_144:
    uint64_t v66 = (char *)v84;
    if ((void)v84) {
      goto LABEL_154;
    }
    goto LABEL_157;
  }
  operator delete(v107);
  if (v105 < 0) {
    goto LABEL_147;
  }
LABEL_141:
  if ((v103 & 0x80000000) == 0) {
    goto LABEL_142;
  }
LABEL_148:
  operator delete(v102);
  if (v101 < 0) {
    goto LABEL_149;
  }
LABEL_143:
  if ((v99[23] & 0x80000000) == 0) {
    goto LABEL_144;
  }
LABEL_150:
  operator delete(*(void **)v99);
  uint64_t v66 = (char *)v84;
  if ((void)v84)
  {
    while (1)
    {
LABEL_154:
      char v67 = *(char **)v66;
      if (v66[71] < 0)
      {
        operator delete(*((void **)v66 + 6));
        if ((v66[47] & 0x80000000) == 0) {
          goto LABEL_153;
        }
LABEL_156:
        operator delete(*((void **)v66 + 3));
        operator delete(v66);
        uint64_t v66 = v67;
        if (!v67) {
          break;
        }
      }
      else
      {
        if (v66[47] < 0) {
          goto LABEL_156;
        }
LABEL_153:
        operator delete(v66);
        uint64_t v66 = v67;
        if (!v67) {
          break;
        }
      }
    }
  }
LABEL_157:
  uint64_t v68 = v83[0];
  v83[0] = 0;
  if (v68) {
    operator delete(v68);
  }
  uint64_t v69 = (void **)v87[0];
  if (v87[0])
  {
    do
    {
      int v73 = (void **)*v69;
      if (*((char *)v69 + 39) < 0) {
        operator delete(v69[2]);
      }
      operator delete(v69);
      uint64_t v69 = v73;
    }
    while (v73);
  }
  uint64_t v70 = v86[0];
  v86[0] = 0;
  if (v70) {
    operator delete(v70);
  }
  uint64_t v71 = (void **)v90[0];
  if (v90[0])
  {
    do
    {
      int v74 = (void **)*v71;
      if (*((char *)v71 + 39) < 0) {
        operator delete(v71[2]);
      }
      operator delete(v71);
      uint64_t v71 = v74;
    }
    while (v74);
  }
  double v72 = __p[0];
  __p[0] = 0;
  if (v72) {
    operator delete(v72);
  }
}

void sub_83680C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 344) = v2;
  sub_4A50F4(v3 - 240);
  _Unwind_Resume(a1);
}

void sub_836824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  *(void *)(v42 + 368) = v43;
  sub_4A50F4(v44 - 240);
  sub_833EAC((uint64_t)&a22);
  sub_3A4C2C((uint64_t)&__p);
  sub_3A4C2C((uint64_t)&a37);
  _Unwind_Resume(a1);
}

void sub_836990(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 1072);
  for (uint64_t i = v2 - 2400; v2 - 2400 != *(void *)(a2 + 1064); uint64_t i = v2 - 2400)
  {
    uint64_t v6 = v2 - 4800;
    uint64_t v7 = v2 - 2400;
    uint64_t v2 = i;
    uint64_t v8 = *(void *)(v6 + 360);
    unint64_t v9 = *(long long **)(v6 + 368);
    v14[0] = a1;
    v14[1] = v7 + 360;
    _DWORD v14[2] = v7 + 336;
    if ((uint64_t)v9 - v8 < 1)
    {
LABEL_8:
      uint64_t v13 = 0;
      unint64_t v10 = 0;
    }
    else
    {
      unint64_t v10 = 0x86BCA1AF286BCA1BLL * (((uint64_t)v9 - v8) >> 3);
      while (1)
      {
        long long v11 = operator new(152 * v10, &std::nothrow);
        if (v11) {
          break;
        }
        BOOL v12 = v10 > 1;
        v10 >>= 1;
        if (!v12) {
          goto LABEL_8;
        }
      }
      uint64_t v13 = v11;
    }
    sub_84168C(v8, v9, v14, 0x86BCA1AF286BCA1BLL * (((uint64_t)v9 - v8) >> 3), (uint64_t)v13, v10);
    if (v13) {
      operator delete(v13);
    }
  }
}

void sub_836AB8(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_836AD0(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_58E730(*(void *)a1, *(void *)a2, 1u, &v23);
  unint64_t v10 = (int *)sub_2D5D58(*(void *)a1, *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32));
  long long v11 = (unsigned __int16 *)((char *)v10 - *v10);
  if (*v11 >= 0x25u && (uint64_t v12 = v11[18]) != 0) {
    uint64_t v13 = (unsigned int *)((char *)v10 + v12 + *(unsigned int *)((char *)v10 + v12));
  }
  else {
    uint64_t v13 = 0;
  }
  sub_2DE69C(v13, &__p);
  uint64_t v14 = *(unsigned __int8 *)(a4 + 23);
  if ((v14 & 0x80u) != 0) {
    uint64_t v14 = *(void *)(a4 + 8);
  }
  if (v14) {
    std::string::operator=((std::string *)(a1 + 8), (const std::string *)a4);
  }
  sub_6F60AC((unsigned __int16 *)(a1 + 8), (uint64_t *)&v23, (uint64_t *)&__p, a3, a5);
  uint64_t v15 = (void **)__p;
  if (__p)
  {
    uint64_t v16 = v22;
    uint64_t v17 = __p;
    if (v22 != __p)
    {
      do
      {
        if (*((char *)v16 - 9) < 0) {
          operator delete(*(v16 - 4));
        }
        v16 -= 5;
      }
      while (v16 != v15);
      uint64_t v17 = __p;
    }
    unint64_t v22 = v15;
    operator delete(v17);
  }
  unsigned int v18 = v23;
  if (v23)
  {
    uint64_t v19 = (uint64_t)v24;
    uint64_t v20 = v23;
    if (v24 != v23)
    {
      do
        uint64_t v19 = sub_2DF404(v19 - 144);
      while ((void *)v19 != v18);
      uint64_t v20 = v23;
    }
    BOOL v24 = v18;
    operator delete(v20);
  }
}

void sub_836C34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12)
{
}

void sub_836C50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_53BD98((void **)va);
  _Unwind_Resume(a1);
}

void sub_836C64(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(*a4 + 40 * *(void *)(a2 + 16) + 32);
  uint64_t v25 = 0;
  uint64_t v26 = v10;
  long long __p = 0;
  uint64_t v24 = 0;
  sub_836AD0(a1, (unsigned int *)&v26, a3, (uint64_t)&__p, (uint64_t)v27);
  if ((SHIBYTE(v25) & 0x80000000) == 0)
  {
    uint64_t v11 = *(void *)(a2 + 16);
    unint64_t v12 = *(void *)(a2 + 24);
    uint64_t v13 = v11 + 1;
    if (v11 + 1 > v12) {
      unint64_t v14 = v11 + 1;
    }
    else {
      unint64_t v14 = v12;
    }
    if (v11 + 1 < v12) {
      goto LABEL_13;
    }
    goto LABEL_42;
  }
  operator delete(__p);
  uint64_t v15 = *(void *)(a2 + 16);
  unint64_t v16 = *(void *)(a2 + 24);
  uint64_t v13 = v15 + 1;
  if (v15 + 1 > v16) {
    unint64_t v14 = v15 + 1;
  }
  else {
    unint64_t v14 = v16;
  }
  if (v15 + 1 < v16)
  {
    do
    {
LABEL_13:
      uint64_t v17 = *(void *)(*a4 + 40 * v13 + 32);
      uint64_t v25 = 0;
      uint64_t v26 = v17;
      long long __p = 0;
      uint64_t v24 = 0;
      sub_836AD0(a1, (unsigned int *)&v26, a3, (uint64_t)&__p, a5);
      if (SHIBYTE(v25) < 0) {
        operator delete(__p);
      }
      uint64_t v18 = *(unsigned __int8 *)(a5 + 23);
      if ((v18 & 0x80u) == 0) {
        uint64_t v19 = (void *)*(unsigned __int8 *)(a5 + 23);
      }
      else {
        uint64_t v19 = *(void **)(a5 + 8);
      }
      unint64_t v20 = v28;
      if ((v28 & 0x80u) != 0) {
        unint64_t v20 = (unint64_t)v27[1];
      }
      if (v19 != (void *)v20) {
        goto LABEL_43;
      }
      if ((v28 & 0x80u) == 0) {
        uint64_t v21 = v27;
      }
      else {
        uint64_t v21 = (void **)v27[0];
      }
      if ((v18 & 0x80) != 0)
      {
        if (memcmp(*(const void **)a5, v21, *(void *)(a5 + 8))) {
          goto LABEL_43;
        }
      }
      else if (*(unsigned char *)(a5 + 23))
      {
        unint64_t v22 = (unsigned __int8 *)a5;
        while (*v22 == *(unsigned __int8 *)v21)
        {
          ++v22;
          uint64_t v21 = (void **)((char *)v21 + 1);
          if (!--v18) {
            goto LABEL_31;
          }
        }
        goto LABEL_43;
      }
LABEL_31:
      if (*(char *)(a5 + 151) < 0)
      {
        operator delete(*(void **)(a5 + 128));
        if ((*(char *)(a5 + 119) & 0x80000000) == 0)
        {
LABEL_33:
          if ((*(char *)(a5 + 95) & 0x80000000) == 0) {
            goto LABEL_34;
          }
          goto LABEL_39;
        }
      }
      else if ((*(char *)(a5 + 119) & 0x80000000) == 0)
      {
        goto LABEL_33;
      }
      operator delete(*(void **)(a5 + 96));
      if ((*(char *)(a5 + 95) & 0x80000000) == 0)
      {
LABEL_34:
        if ((*(char *)(a5 + 55) & 0x80000000) == 0) {
          goto LABEL_35;
        }
        goto LABEL_40;
      }
LABEL_39:
      operator delete(*(void **)(a5 + 72));
      if ((*(char *)(a5 + 55) & 0x80000000) == 0)
      {
LABEL_35:
        if (*(char *)(a5 + 23) < 0) {
          goto LABEL_41;
        }
        goto LABEL_12;
      }
LABEL_40:
      operator delete(*(void **)(a5 + 32));
      if (*(char *)(a5 + 23) < 0) {
LABEL_41:
      }
        operator delete(*(void **)a5);
LABEL_12:
      ++v13;
    }
    while (v13 != v14);
  }
LABEL_42:
  sub_6F30A4(a5);
LABEL_43:
  if (v36 < 0)
  {
    operator delete(v35);
    if ((v34 & 0x80000000) == 0)
    {
LABEL_45:
      if ((v32 & 0x80000000) == 0) {
        goto LABEL_46;
      }
      goto LABEL_51;
    }
  }
  else if ((v34 & 0x80000000) == 0)
  {
    goto LABEL_45;
  }
  operator delete(v33);
  if ((v32 & 0x80000000) == 0)
  {
LABEL_46:
    if ((v30 & 0x80000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_52;
  }
LABEL_51:
  operator delete(v31);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_47:
    if (((char)v28 & 0x80000000) == 0) {
      return;
    }
LABEL_53:
    operator delete(v27[0]);
    return;
  }
LABEL_52:
  operator delete(v29);
  if ((char)v28 < 0) {
    goto LABEL_53;
  }
}

void sub_836EE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, char a17)
{
}

void sub_836F2C(uint64_t *a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v9 = *(a2[1] - 1);
  uint64_t v10 = sub_2D5D58(*a1, v9 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v8 + 7772))
  {
    uint64_t v11 = sub_2DB8E0(v8 + 3896, v9, 0);
    unint64_t v12 = &v11[-*(int *)v11];
    if (*(unsigned __int16 *)v12 < 5u)
    {
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v13 = *((unsigned __int16 *)v12 + 2);
      if (v13) {
        v13 += (uint64_t)&v11[*(unsigned int *)&v11[v13]];
      }
    }
    uint64_t v14 = v13 + 4 * WORD2(v9) + 4 + *(unsigned int *)(v13 + 4 * WORD2(v9) + 4);
  }
  else
  {
    uint64_t v14 = 0;
  }
  v53[0] = v10;
  v53[1] = v14;
  v53[2] = sub_2E5C38(v8, v9 & 0xFFFFFFFFFFFFLL, 1);
  v53[3] = v15;
  int v54 = v9;
  __int16 v55 = WORD2(v9);
  BOOL v56 = (v9 & 0xFF000000000000) != 0;
  uint64_t v16 = *a1;
  uint64_t v17 = **a2;
  uint64_t v18 = sub_2D5D58(*a1, v17 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v16 + 7772))
  {
    uint64_t v19 = sub_2DB8E0(v16 + 3896, v17, 0);
    unint64_t v20 = &v19[-*(int *)v19];
    if (*(unsigned __int16 *)v20 < 5u)
    {
      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v21 = *((unsigned __int16 *)v20 + 2);
      if (v21) {
        v21 += (uint64_t)&v19[*(unsigned int *)&v19[v21]];
      }
    }
    uint64_t v22 = v21 + 4 * WORD2(v17) + 4 + *(unsigned int *)(v21 + 4 * WORD2(v17) + 4);
  }
  else
  {
    uint64_t v22 = 0;
  }
  v49[0] = v18;
  v49[1] = v22;
  v49[2] = sub_2E5C38(v16, v17 & 0xFFFFFFFFFFFFLL, 1);
  v49[3] = v23;
  int v50 = v17;
  __int16 v51 = WORD2(v17);
  BOOL v52 = (v17 & 0xFF000000000000) != 0;
  sub_6F30A4((uint64_t)v39);
  sub_6F30A4((uint64_t)v29);
  uint64_t v24 = *a2;
  uint64_t v25 = a2[1];
  v57[0] = a1;
  v57[1] = a3;
  v57[2] = v53;
  v57[3] = v49;
  v57[4] = v39;
  v57[5] = v29;
  if (v24 != v25)
  {
    do
    {
      uint64_t v26 = v24 + 1;
      if (v24 + 1 == v25) {
        break;
      }
      int v27 = sub_843988((uint64_t)v57, v24, v24 + 1);
      uint64_t v24 = v26;
    }
    while (!v27);
  }
  if (sub_6F2FD8((uint64_t)v39)) {
    unsigned __int8 v28 = (long long *)v39;
  }
  else {
    unsigned __int8 v28 = (long long *)v29;
  }
  sub_4AA8E0(a4, v28);
  if (v38 < 0)
  {
    operator delete(__p);
    if ((v36 & 0x80000000) == 0)
    {
LABEL_23:
      if ((v34 & 0x80000000) == 0) {
        goto LABEL_24;
      }
      goto LABEL_34;
    }
  }
  else if ((v36 & 0x80000000) == 0)
  {
    goto LABEL_23;
  }
  operator delete(v35);
  if ((v34 & 0x80000000) == 0)
  {
LABEL_24:
    if ((v32 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_35;
  }
LABEL_34:
  operator delete(v33);
  if ((v32 & 0x80000000) == 0)
  {
LABEL_25:
    if ((v30 & 0x80000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_36;
  }
LABEL_35:
  operator delete(v31);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_26:
    if ((v48 & 0x80000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_37;
  }
LABEL_36:
  operator delete(v29[0]);
  if ((v48 & 0x80000000) == 0)
  {
LABEL_27:
    if ((v46 & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_38;
  }
LABEL_37:
  operator delete(v47);
  if ((v46 & 0x80000000) == 0)
  {
LABEL_28:
    if ((v44 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v45);
  if ((v44 & 0x80000000) == 0)
  {
LABEL_29:
    if ((v42 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v43);
  if ((v42 & 0x80000000) == 0)
  {
LABEL_30:
    if ((v40 & 0x80000000) == 0) {
      return;
    }
LABEL_41:
    operator delete(v39[0]);
    return;
  }
LABEL_40:
  operator delete(v41);
  if (v40 < 0) {
    goto LABEL_41;
  }
}

void sub_837254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_837268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_837288(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if (a3[3] < 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a2[1] - *a2) >> 3))
  {
    unint64_t v9 = a3[2];
    uint64_t v35 = (unsigned __int16 *)(a1 + 1);
    while (1)
    {
      if (++v9 > a3[3])
      {
        sub_6F30A4(a5);
        return;
      }
      uint64_t v11 = sub_5A7C34(a2, v9);
      uint64_t v12 = *(void *)(v11 + 32);
      long long v13 = *(_OWORD *)(v11 + 16);
      v44[0] = *(_OWORD *)v11;
      v44[1] = v13;
      uint64_t v45 = v12;
      uint64_t v14 = *a1;
      unint64_t v15 = sub_2E48C4((int **)v44);
      unsigned int v16 = v15;
      uint64_t v17 = sub_290DEC(v14 + 3896, v15, 1);
      if (v17
        && (uint64_t v18 = &v17[-*(int *)v17], *(unsigned __int16 *)v18 >= 7u)
        && (uint64_t v19 = *((unsigned __int16 *)v18 + 3)) != 0
        && (uint64_t v20 = (uint64_t)&v17[4 * HIDWORD(v15) + v19 + *(unsigned int *)&v17[v19]],
            uint64_t v21 = (int *)(v20 + 4 + *(unsigned int *)(v20 + 4)),
            uint64_t v22 = (unsigned __int16 *)((char *)v21 - *v21),
            *v22 >= 9u)
        && (uint64_t v23 = v22[4]) != 0
        && (unsigned int v24 = *(int *)((char *)v21 + v23), v24 != -1))
      {
        unsigned int v25 = sub_2E6AA8(v14, v16);
        sub_58F194(v14, v25, v24, 1u, (uint64_t)&__p);
      }
      else
      {
        long long __p = 0;
        char v42 = 0;
        uint64_t v43 = 0;
      }
      v40[0] = a2;
      v40[1] = a3;
      if (sub_834840(v40, (uint64_t *)&__p))
      {
        sub_6F30A4(a5);
LABEL_26:
        char v29 = 0;
        char v30 = (void **)__p;
        if (!__p) {
          goto LABEL_5;
        }
        goto LABEL_40;
      }
      unint64_t v37 = 0;
      char v38 = 0;
      uint64_t v39 = 0;
      sub_6F60AC(v35, (uint64_t *)&__p, (uint64_t *)&v37, a4, a5);
      uint64_t v26 = (void **)v37;
      if (v37)
      {
        int v27 = v38;
        unsigned __int8 v28 = v37;
        if (v38 != v37)
        {
          do
          {
            if (*((char *)v27 - 9) < 0) {
              operator delete(*(v27 - 4));
            }
            v27 -= 5;
          }
          while (v27 != v26);
          unsigned __int8 v28 = v37;
        }
        char v38 = v26;
        operator delete(v28);
      }
      if (sub_6F2FD8(a5)) {
        goto LABEL_26;
      }
      if (*(char *)(a5 + 151) < 0)
      {
        operator delete(*(void **)(a5 + 128));
        if ((*(char *)(a5 + 119) & 0x80000000) == 0)
        {
LABEL_30:
          if ((*(char *)(a5 + 95) & 0x80000000) == 0) {
            goto LABEL_31;
          }
          goto LABEL_37;
        }
      }
      else if ((*(char *)(a5 + 119) & 0x80000000) == 0)
      {
        goto LABEL_30;
      }
      operator delete(*(void **)(a5 + 96));
      if ((*(char *)(a5 + 95) & 0x80000000) == 0)
      {
LABEL_31:
        if (*(char *)(a5 + 55) < 0) {
          goto LABEL_38;
        }
        goto LABEL_32;
      }
LABEL_37:
      operator delete(*(void **)(a5 + 72));
      if (*(char *)(a5 + 55) < 0)
      {
LABEL_38:
        operator delete(*(void **)(a5 + 32));
        if ((*(char *)(a5 + 23) & 0x80000000) == 0)
        {
LABEL_33:
          char v29 = 1;
          char v30 = (void **)__p;
          if (!__p) {
            goto LABEL_5;
          }
          goto LABEL_40;
        }
        goto LABEL_39;
      }
LABEL_32:
      if ((*(char *)(a5 + 23) & 0x80000000) == 0) {
        goto LABEL_33;
      }
LABEL_39:
      operator delete(*(void **)a5);
      char v29 = 1;
      char v30 = (void **)__p;
      if (!__p) {
        goto LABEL_5;
      }
LABEL_40:
      uint64_t v31 = v42;
      uint64_t v10 = v30;
      if (v42 != v30)
      {
        while (1)
        {
          if (*((char *)v31 - 1) < 0)
          {
            operator delete(*(v31 - 3));
            if (*((char *)v31 - 33) < 0)
            {
LABEL_58:
              operator delete(*(v31 - 7));
              char v32 = (void **)*(v31 - 10);
              if (!v32)
              {
LABEL_59:
                if (*((char *)v31 - 89) < 0) {
                  goto LABEL_42;
                }
                goto LABEL_60;
              }
              goto LABEL_47;
            }
          }
          else if (*((char *)v31 - 33) < 0)
          {
            goto LABEL_58;
          }
          char v32 = (void **)*(v31 - 10);
          if (!v32) {
            goto LABEL_59;
          }
LABEL_47:
          unint64_t v33 = (void **)*(v31 - 9);
          if (v33 == v32)
          {
            *(v31 - 9) = v32;
            operator delete(v32);
            if (*((char *)v31 - 89) < 0) {
              goto LABEL_42;
            }
            goto LABEL_60;
          }
          do
          {
            while (*((char *)v33 - 9) < 0)
            {
              operator delete(*(v33 - 4));
              if (*((char *)v33 - 33) < 0) {
                goto LABEL_54;
              }
LABEL_51:
              v33 -= 7;
              if (v33 == v32) {
                goto LABEL_55;
              }
            }
            if ((*((char *)v33 - 33) & 0x80000000) == 0) {
              goto LABEL_51;
            }
LABEL_54:
            operator delete(*(v33 - 7));
            v33 -= 7;
          }
          while (v33 != v32);
LABEL_55:
          char v34 = *(v31 - 10);
          *(v31 - 9) = v32;
          operator delete(v34);
          if (*((char *)v31 - 89) < 0)
          {
LABEL_42:
            operator delete(*(v31 - 14));
            if ((*((char *)v31 - 113) & 0x80000000) == 0) {
              goto LABEL_43;
            }
LABEL_61:
            operator delete(*(v31 - 17));
            v31 -= 18;
            if (v31 == v30)
            {
LABEL_3:
              uint64_t v10 = __p;
              break;
            }
          }
          else
          {
LABEL_60:
            if (*((char *)v31 - 113) < 0) {
              goto LABEL_61;
            }
LABEL_43:
            v31 -= 18;
            if (v31 == v30) {
              goto LABEL_3;
            }
          }
        }
      }
      char v42 = v30;
      operator delete(v10);
LABEL_5:
      if ((v29 & 1) == 0) {
        return;
      }
    }
  }

  sub_6F30A4(a5);
}

void sub_83767C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_4A50F4(v8);
  sub_53BD98((void **)va);
  _Unwind_Resume(a1);
}

void sub_837698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  unint64_t v4 = va_arg(va1, void *);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  sub_2DE7D0((void **)va);
  sub_53BD98((void **)va1);
  _Unwind_Resume(a1);
}

void sub_8376B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_53BD98((void **)va);
  _Unwind_Resume(a1);
}

void sub_8376C8(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char **a5@<X8>)
{
  if (*(void *)(a3 + 16) == -1)
  {
    *a5 = 0;
    a5[1] = 0;
    a5[2] = 0;
  }
  else
  {
    uint64_t v8 = nullsub_1(a2);
    a5[1] = 0;
    a5[2] = 0;
    *a5 = 0;
    unint64_t v9 = *(void *)(a3 + 40);
    uint64_t v60 = a3;
    unint64_t v10 = *(void *)(a3 + 16);
    if (v9 <= v10) {
      uint64_t v11 = *(void *)(a3 + 16);
    }
    else {
      uint64_t v11 = *(void *)(a3 + 40);
    }
    if (v9 < v10)
    {
      uint64_t v12 = (void *)v8;
      unint64_t v57 = (void *)v8;
      uint64_t v62 = 40 * v9 + 32;
      unint64_t v58 = a5;
LABEL_8:
      sub_68F4F8(*a1, *(unsigned int *)(*v12 + 40 * v9 + 32) | ((unint64_t)*(unsigned __int16 *)(*v12 + 40 * v9 + 36) << 32), &v72);
      uint64_t v14 = v72;
      long long v13 = v73;
      if (v72 == v73)
      {
        if (!v72) {
          goto LABEL_7;
        }
        goto LABEL_70;
      }
      while (1)
      {
        unint64_t v15 = (int *)sub_2DBC9C(*a1, *v14);
        unsigned int v16 = (unsigned __int16 *)((char *)v15 - *v15);
        if (*v16 >= 5u)
        {
          uint64_t v17 = v16[2];
          if (v17)
          {
            if (*((unsigned char *)v15 + v17) == 4) {
              break;
            }
          }
        }
LABEL_11:
        if (++v14 == v13)
        {
          uint64_t v14 = v72;
          if (v72)
          {
LABEL_70:
            int v73 = v14;
            operator delete(v14);
          }
LABEL_7:
          ++v9;
          v62 += 40;
          if (v9 == v11) {
            return;
          }
          goto LABEL_8;
        }
      }
      uint64_t v18 = *a1;
      unint64_t v19 = *v14;
      uint64_t v70 = 0;
      uint64_t v71 = 0;
      uint64_t v69 = 0;
      uint64_t v20 = (int *)sub_2DBC9C(v18, v19);
      uint64_t v21 = (unsigned __int16 *)((char *)v20 - *v20);
      if (*v21 >= 7u)
      {
        uint64_t v22 = v21[3];
        if (v22)
        {
          uint64_t v23 = (unsigned int *)((char *)v20 + v22 + *(unsigned int *)((char *)v20 + v22));
          uint64_t v24 = *v23;
          if (v24)
          {
            uint64_t v25 = 8 * v24;
            uint64_t v26 = (char *)operator new(8 * v24);
            uint64_t v69 = v26;
            uint64_t v70 = v26;
            uint64_t v71 = &v26[8 * v24];
            int v27 = (uint64_t *)(v23 + 1);
            do
            {
              uint64_t v28 = *v27;
              unint64_t v29 = HIDWORD(*v27);
              LODWORD(__p[0]) = *v27;
              WORD2(__p[0]) = v29;
              BYTE6(__p[0]) = (v28 & 0xFF000000000000) == 0;
              uint64_t v26 = sub_2D6254((unint64_t *)&v69, v26, (int *)__p) + 8;
              ++v27;
              v25 -= 8;
            }
            while (v25);
          }
        }
      }
      char v30 = (char *)v69;
      if (-(uint64_t)v9 - 0x3333333333333333 * ((uint64_t)(v12[1] - *v12) >> 3) < (unint64_t)((v70 - (unsigned char *)v69) >> 3))
      {
LABEL_67:
        if (v30)
        {
          uint64_t v70 = v30;
          operator delete(v30);
        }
        goto LABEL_11;
      }
      if (v69 != v70)
      {
        uint64_t v31 = (unint64_t *)(*v12 + v62);
        char v32 = (char *)v69;
        do
        {
          unint64_t v34 = *v31;
          v31 += 5;
          unint64_t v33 = v34;
          if (__PAIR64__(*((unsigned __int16 *)v32 + 2), *(_DWORD *)v32) != __PAIR64__(WORD2(v34), v34)
            || (HIWORD(v33) & 1) == (v32[6] == 0))
          {
            goto LABEL_67;
          }
          v32 += 8;
        }
        while (v32 != v70);
      }
      uint64_t v35 = (int *)sub_2DBC9C(*a1, *v14);
      v67[0] = 0;
      v67[1] = 0;
      uint64_t v68 = 0;
      char v36 = (unsigned __int16 *)((char *)v35 - *v35);
      unsigned int v37 = *v36;
      if (v37 < 5 || !v36[2] || *((unsigned char *)v35 + v36[2]) != 4) {
        goto LABEL_39;
      }
      if (v37 < 0xD)
      {
        char v38 = 0;
        uint64_t v39 = (_WORD *)(&loc_1120530 + 1);
        if (*(unsigned __int16 *)((char *)&loc_1120530 + 1) < 7u) {
          goto LABEL_37;
        }
      }
      else
      {
        char v38 = (int *)v36[6];
        if (v38) {
          char v38 = (int *)((char *)v38 + (void)v35 + *(unsigned int *)((char *)v38 + (void)v35));
        }
        uint64_t v39 = (unsigned __int16 *)((char *)v38 - *v38);
        if (*v39 < 7u) {
          goto LABEL_37;
        }
      }
      uint64_t v40 = v39[3];
      if (v40)
      {
        unint64_t v41 = (unsigned int *)((char *)v38 + v40 + *(unsigned int *)((char *)v38 + v40));
LABEL_38:
        sub_767A8(v41, (uint64_t)__p);
        *(_OWORD *)char v67 = *(_OWORD *)__p;
        uint64_t v68 = v64;
LABEL_39:
        sub_6F8B4C((char *)v67, a4, (int64x2_t *)__p);
        if (sub_6F33A4((uint64_t)__p))
        {
          uint64_t v43 = v69;
          char v44 = v70;
          unint64_t v45 = *(void *)(v60 + 16);
          if ((unint64_t)(-1 - 0x3333333333333333 * ((uint64_t)(v12[1] - *v12) >> 3)) >= *(void *)(v60 + 24)) {
            uint64_t v46 = *(void *)(v60 + 24);
          }
          else {
            uint64_t v46 = -1 - 0x3333333333333333 * ((uint64_t)(v12[1] - *v12) >> 3);
          }
          uint64_t v47 = sub_46CE10(a2, v9, 1, v46, 1u, v42);
          if (v45 >= v9 + ((v44 - v43) >> 3)) {
            uint64_t v49 = v9 + ((v44 - v43) >> 3);
          }
          else {
            uint64_t v49 = v45;
          }
          *((void *)&v65 + 1) = v47;
          uint64_t v66 = sub_46CE10(a2, v49, 1, v46, 1u, v48);
          int v50 = v58[1];
          if (v50 >= v58[2])
          {
            BOOL v52 = sub_840C9C(v58, (uint64_t)__p);
            uint64_t v12 = v57;
          }
          else
          {
            uint64_t v12 = v57;
            if (SHIBYTE(v64) < 0)
            {
              sub_4200(v58[1], __p[0], (unint64_t)__p[1]);
            }
            else
            {
              long long v51 = *(_OWORD *)__p;
              *((void *)v50 + 2) = v64;
              *(_OWORD *)int v50 = v51;
            }
            long long v53 = v65;
            *((void *)v50 + 5) = v66;
            *(_OWORD *)(v50 + 24) = v53;
            BOOL v52 = v50 + 48;
            v58[1] = v50 + 48;
          }
          v58[1] = v52;
        }
        if (SHIBYTE(v64) < 0)
        {
          operator delete(__p[0]);
          int v54 = (void **)v67[0];
          if (!v67[0])
          {
LABEL_66:
            char v30 = (char *)v69;
            goto LABEL_67;
          }
        }
        else
        {
          int v54 = (void **)v67[0];
          if (!v67[0]) {
            goto LABEL_66;
          }
        }
        __int16 v55 = (void **)v67[1];
        BOOL v56 = v54;
        if (v67[1] == v54)
        {
LABEL_65:
          v67[1] = v54;
          operator delete(v56);
          goto LABEL_66;
        }
        while (1)
        {
          if (*((char *)v55 - 1) < 0)
          {
            operator delete(*(v55 - 3));
            if ((*((char *)v55 - 25) & 0x80000000) == 0) {
              goto LABEL_60;
            }
LABEL_63:
            operator delete(*(v55 - 6));
            v55 -= 6;
            if (v55 == v54)
            {
LABEL_64:
              BOOL v56 = (void **)v67[0];
              goto LABEL_65;
            }
          }
          else
          {
            if (*((char *)v55 - 25) < 0) {
              goto LABEL_63;
            }
LABEL_60:
            v55 -= 6;
            if (v55 == v54) {
              goto LABEL_64;
            }
          }
        }
      }
LABEL_37:
      unint64_t v41 = 0;
      goto LABEL_38;
    }
  }
}

void sub_837BB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void **a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30)
{
  *(void *)(v30 + 8) = v31;
  if (a22 < 0) {
    operator delete(__p);
  }
  sub_1A6DC(&a26);
  if (a29)
  {
    a30 = (uint64_t)a29;
    operator delete(a29);
  }
  unint64_t v34 = *(void **)(v32 - 112);
  if (!v34)
  {
    sub_A43C(a11);
    _Unwind_Resume(a1);
  }
  *(void *)(v32 - 104) = v34;
  operator delete(v34);
  sub_A43C(a11);
  _Unwind_Resume(a1);
}

void sub_837C9C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int64x2_t *a6@<X8>)
{
  unint64_t v6 = *(void *)(a3 + 16);
  if (v6 == -1 || (unint64_t v8 = *(void *)(a3 + 24), v8 >= 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - *a2) >> 3)))
  {
    a6->i64[0] = 0;
    a6->i64[1] = 0;
    a6[1].i64[0] = 0;
    return;
  }
  unint64_t v110 = 0;
  unint64_t v111 = 0;
  int v112 = 0;
  unint64_t v11 = *(void *)(a3 + 32);
  if (v11 == -1)
  {
    if (v6 <= v8 + 1) {
      unint64_t v13 = v8 + 1;
    }
    else {
      unint64_t v13 = v6;
    }
    if (v6 > v8) {
      goto LABEL_59;
    }
    while (1)
    {
      uint64_t v15 = *(void *)(sub_5A7C34(a2, v6) + 32);
      unsigned int v16 = v111;
      if (v111 < v112)
      {
        *(void *)unint64_t v111 = v15;
        uint64_t v14 = (char *)(v16 + 1);
      }
      else
      {
        uint64_t v17 = v110;
        uint64_t v18 = (v111 - (unsigned char *)v110) >> 3;
        unint64_t v19 = v18 + 1;
        if ((unint64_t)(v18 + 1) >> 61) {
          sub_2E00();
        }
        uint64_t v20 = v112 - (unsigned char *)v110;
        if ((v112 - (unsigned char *)v110) >> 2 > v19) {
          unint64_t v19 = v20 >> 2;
        }
        if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v21 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v21 = v19;
        }
        if (v21)
        {
          if (v21 >> 61) {
            sub_188D718();
          }
          uint64_t v22 = (char *)operator new(8 * v21);
          uint64_t v23 = &v22[8 * v18];
          *(void *)uint64_t v23 = v15;
          uint64_t v14 = v23 + 8;
          if (v16 != v17)
          {
            do
            {
LABEL_25:
              int v25 = *((_DWORD *)v16-- - 2);
              int v26 = *(_DWORD *)((char *)v16 + 3);
              *((_DWORD *)v23 - 2) = v25;
              v23 -= 8;
              *(_DWORD *)(v23 + 3) = v26;
            }
            while (v16 != v17);
            unsigned int v16 = v17;
            unint64_t v110 = v23;
            int v112 = &v22[8 * v21];
            if (!v17) {
              goto LABEL_12;
            }
LABEL_29:
            operator delete(v16);
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t v22 = 0;
          uint64_t v23 = (char *)(8 * v18);
          uint64_t v24 = (void *)(8 * v18);
          *uint64_t v24 = v15;
          uint64_t v14 = (char *)(v24 + 1);
          if (v16 != v17) {
            goto LABEL_25;
          }
        }
        unint64_t v110 = v23;
        int v112 = &v22[8 * v21];
        if (v16) {
          goto LABEL_29;
        }
      }
LABEL_12:
      unint64_t v111 = v14;
      if (++v6 == v13) {
        goto LABEL_59;
      }
    }
  }
  uint64_t v12 = *(void *)(sub_5A7C34(a2, v11) + 32);
  uint64_t v27 = (v111 - (unsigned char *)v110) >> 3;
  unint64_t v28 = v27 + 1;
  if ((unint64_t)(v27 + 1) >> 61) {
    sub_2E00();
  }
  uint64_t v29 = v112 - (unsigned char *)v110;
  if ((v112 - (unsigned char *)v110) >> 2 > v28) {
    unint64_t v28 = v29 >> 2;
  }
  if ((unint64_t)v29 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v30 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v30 = v28;
  }
  if (v30)
  {
    if (v30 >> 61) {
      sub_188D718();
    }
    uint64_t v31 = (char *)operator new(8 * v30);
    uint64_t v32 = &v31[8 * v27];
    unint64_t v33 = &v31[8 * v30];
    *(void *)uint64_t v32 = v12;
    unint64_t v34 = v32 + 8;
  }
  else
  {
    uint64_t v32 = (char *)(8 * v27);
    unint64_t v33 = 0;
    uint64_t v46 = (void *)(8 * v27);
    void *v46 = v12;
    unint64_t v34 = (char *)(v46 + 1);
  }
  unint64_t v110 = v32;
  int v112 = v33;
  unint64_t v111 = v34;
  uint64_t v35 = *(void *)(sub_5A7C34(a2, *(void *)(a3 + 32) + 1) + 32);
  char v36 = v34;
  if (v34 >= v112)
  {
    char v38 = (char *)v110;
    uint64_t v39 = (v111 - (unsigned char *)v110) >> 3;
    unint64_t v40 = v39 + 1;
    if ((unint64_t)(v39 + 1) >> 61) {
      sub_2E00();
    }
    uint64_t v41 = v112 - (unsigned char *)v110;
    if ((v112 - (unsigned char *)v110) >> 2 > v40) {
      unint64_t v40 = v41 >> 2;
    }
    if ((unint64_t)v41 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v42 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v42 = v40;
    }
    if (v42)
    {
      if (v42 >> 61) {
        sub_188D718();
      }
      uint64_t v43 = (char *)operator new(8 * v42);
      char v44 = &v43[8 * v39];
      unint64_t v45 = &v43[8 * v42];
      *(void *)char v44 = v35;
      unsigned int v37 = v44 + 8;
      if (v36 == v38) {
        goto LABEL_56;
      }
    }
    else
    {
      char v44 = (char *)(8 * v39);
      unint64_t v45 = 0;
      uint64_t v47 = (void *)(8 * v39);
      void *v47 = v35;
      unsigned int v37 = (char *)(v47 + 1);
      if (v36 == v38) {
        goto LABEL_56;
      }
    }
    do
    {
      int v48 = *((_DWORD *)v36 - 2);
      v36 -= 8;
      int v49 = *(_DWORD *)(v36 + 3);
      *((_DWORD *)v44 - 2) = v48;
      v44 -= 8;
      *(_DWORD *)(v44 + 3) = v49;
    }
    while (v36 != v38);
    char v36 = v38;
LABEL_56:
    unint64_t v110 = v44;
    int v112 = v45;
    if (v36) {
      operator delete(v36);
    }
    goto LABEL_58;
  }
  *(void *)unint64_t v111 = v35;
  unsigned int v37 = v34 + 8;
LABEL_58:
  unint64_t v111 = v37;
LABEL_59:
  int v50 = 0;
  long long v51 = 0;
  long long __p = 0;
  long long v109 = 0uLL;
  unint64_t v53 = *(void *)(a3 + 16);
  unint64_t v52 = *(void *)(a3 + 24);
  if (v53 <= v52) {
    uint64_t v54 = *(void *)(a3 + 24);
  }
  else {
    uint64_t v54 = *(void *)(a3 + 16);
  }
  if (v53 < v52)
  {
    do
    {
      sub_8385A8((uint64_t *)a1, a2, v53, (uint64_t)&v110, a5, (uint64_t *)&v106);
      long long v65 = (void **)__p;
      if (__p)
      {
        uint64_t v66 = (void **)v109;
        char v67 = __p;
        if ((void *)v109 != __p)
        {
          do
            uint64_t v66 = sub_2DF518(v66 - 16);
          while (v66 != v65);
          char v67 = __p;
        }
        *(void *)&long long v109 = v65;
        operator delete(v67);
      }
      long long v51 = (void **)v106;
      long long __p = v106;
      long long v109 = v107;
      int v50 = (void **)v107;
      ++v53;
    }
    while (v106 == (void *)v107 && v53 != v54);
  }
  unsigned int v55 = *(_DWORD *)(a3 + 160);
  BOOL v56 = v55 > 0x3F;
  unint64_t v57 = (1 << v55) & 0xF000000000000006;
  BOOL v58 = v56 || v57 == 0;
  if (!v58 && !*(unsigned char *)(a3 + 894) && !*(unsigned char *)(a3 + 893) && !*(unsigned char *)(a3 + 892))
  {
    switch(*(_DWORD *)(a3 + 1860))
    {
      case 0:
        break;
      case 1:
        uint64_t v59 = (uint64_t *)(a1 + 56);
        if (v51 == v50) {
          goto LABEL_84;
        }
        goto LABEL_72;
      case 2:
        uint64_t v59 = (uint64_t *)(a1 + 64);
        if (v51 == v50) {
          goto LABEL_84;
        }
        goto LABEL_72;
      default:
        uint64_t v59 = (uint64_t *)(a1 + 72);
        if (v51 == v50) {
          goto LABEL_84;
        }
        goto LABEL_72;
    }
  }
  uint64_t v59 = (uint64_t *)(a1 + 48);
  if (v51 != v50)
  {
LABEL_72:
    uint64_t v60 = v50;
    unint64_t v61 = (char *)v50 - (char *)v51 - 128;
    if (v61 < 0x80) {
      goto LABEL_73;
    }
LABEL_99:
    uint64_t v78 = 0;
    uint64_t v79 = 0;
    uint64_t v80 = (v61 >> 7) + 1;
    uint64_t v63 = &v51[16 * (v80 & 0x3FFFFFFFFFFFFFELL)];
    unint64_t v81 = (char *)v51 + 177;
    uint64_t v82 = v80 & 0x3FFFFFFFFFFFFFELL;
    do
    {
      if (!*(v81 - 128)) {
        ++v78;
      }
      if (!*v81) {
        ++v79;
      }
      v81 += 256;
      v82 -= 2;
    }
    while (v82);
    uint64_t v62 = v79 + v78;
    if (v80 != (v80 & 0x3FFFFFFFFFFFFFELL)) {
      goto LABEL_106;
    }
    goto LABEL_109;
  }
LABEL_84:
  uint64_t v68 = *v59;
  if (*v59 < 1)
  {
LABEL_143:
    a6->i64[0] = 0;
    a6->i64[1] = 0;
    a6[1].i64[0] = 0;
    if (!v50) {
      goto LABEL_148;
    }
    goto LABEL_144;
  }
  uint64_t v69 = 0;
  uint64_t v70 = *(unsigned int *)(a3 + 16);
  while (1)
  {
    if ((int)v70 < 1 || (int)v70 <= *(_DWORD *)(a3 + 40)) {
      goto LABEL_143;
    }
    sub_8385A8((uint64_t *)a1, a2, --v70, (uint64_t)&v110, a5, (uint64_t *)&v106);
    double v72 = (void **)__p;
    if (__p)
    {
      int v73 = (void **)v109;
      int v74 = __p;
      if ((void *)v109 != __p)
      {
        do
          int v73 = sub_2DF518(v73 - 16);
        while (v73 != v72);
        int v74 = __p;
      }
      *(void *)&long long v109 = v72;
      operator delete(v74);
    }
    int v50 = (void **)v106;
    long long __p = v106;
    long long v109 = v107;
    char v75 = *(int **)(*a2 + 40 * v70);
    unsigned int v76 = (unsigned __int16 *)((char *)v75 - *v75);
    if (*v76 < 9u || (uint64_t v77 = v76[4]) == 0)
    {
      uint64_t v71 = 0;
      uint64_t v60 = (void **)v107;
      if (v106 != (void *)v107) {
        break;
      }
      goto LABEL_87;
    }
    uint64_t v71 = *(unsigned int *)((char *)v75 + v77);
    uint64_t v60 = (void **)v107;
    if (v106 != (void *)v107) {
      break;
    }
LABEL_87:
    v69 += v71;
    if (v69 >= v68) {
      goto LABEL_143;
    }
  }
  long long v51 = (void **)v106;
  unint64_t v61 = (char *)v60 - (unsigned char *)v106 - 128;
  if (v61 >= 0x80) {
    goto LABEL_99;
  }
LABEL_73:
  uint64_t v62 = 0;
  uint64_t v63 = v51;
  do
  {
LABEL_106:
    if (!*((unsigned char *)v63 + 49)) {
      ++v62;
    }
    v63 += 16;
  }
  while (v63 != v60);
LABEL_109:
  sub_838A10((uint64_t *)a1, a2, *(void *)(a3 + 24), (uint64_t *)&v106);
  char v103 = 0;
  BOOL v104 = 0;
  unint64_t v105 = 0;
  long long v83 = (unsigned __int8 **)__p;
  long long v84 = (unsigned __int8 **)v109;
  if (__p == (void *)v109) {
    goto LABEL_130;
  }
  while (2)
  {
    int v86 = (unsigned __int8 **)v106;
    unint64_t v87 = (unsigned __int8 **)v107;
    if (v106 == (void *)v107)
    {
LABEL_121:
      if (v86 != (unsigned __int8 **)v107) {
        goto LABEL_122;
      }
LABEL_124:
      uint64_t v91 = v104;
      if ((unint64_t)v104 >= v105)
      {
        int v85 = (void **)sub_840770((uint64_t *)&v103, (uint64_t)v83);
      }
      else
      {
        sub_840970((uint64_t)v104, (uint64_t)v83);
        int v85 = v91 + 16;
      }
      BOOL v104 = v85;
    }
    else
    {
      do
      {
        double v89 = *v83;
        int v88 = v83[1];
        unint64_t v90 = *v86;
        if (v88 - *v83 == v86[1] - *v86)
        {
          if (v89 == v88) {
            goto LABEL_121;
          }
          while (sub_524DC(v89, v90))
          {
            v89 += 48;
            v90 += 48;
            if (v89 == v88) {
              goto LABEL_121;
            }
          }
        }
        v86 += 16;
      }
      while (v86 != v87);
      if (v87 == (unsigned __int8 **)v107) {
        goto LABEL_124;
      }
LABEL_122:
      if (v62 == 1 && !*((unsigned char *)v83 + 49)) {
        goto LABEL_124;
      }
    }
    v83 += 16;
    if (v83 != v84) {
      continue;
    }
    break;
  }
  if (v103 != v104)
  {
    sub_6F7220((unsigned __int16 *)(a1 + 8), (uint64_t *)&v103, a4, a6);
    goto LABEL_131;
  }
LABEL_130:
  sub_6F7220((unsigned __int16 *)(a1 + 8), (uint64_t *)&__p, a4, a6);
LABEL_131:
  char v92 = (void **)v103;
  if (v103)
  {
    float64x2_t v93 = v104;
    char v94 = v103;
    if (v104 != v103)
    {
      do
        float64x2_t v93 = sub_2DF518(v93 - 16);
      while (v93 != v92);
      char v94 = v103;
    }
    BOOL v104 = v92;
    operator delete(v94);
  }
  uint64_t v95 = (void **)v106;
  if (v106)
  {
    char v96 = (void **)v107;
    uint64_t v97 = v106;
    if ((void *)v107 != v106)
    {
      do
        char v96 = sub_2DF518(v96 - 16);
      while (v96 != v95);
      uint64_t v97 = v106;
    }
    *(void *)&long long v107 = v95;
    operator delete(v97);
  }
  int v50 = (void **)__p;
  if (__p)
  {
LABEL_144:
    char v98 = (void **)v109;
    unint64_t v99 = v50;
    if ((void **)v109 != v50)
    {
      do
        char v98 = sub_2DF518(v98 - 16);
      while (v98 != v50);
      unint64_t v99 = __p;
    }
    *(void *)&long long v109 = v50;
    operator delete(v99);
  }
LABEL_148:
  if (v110)
  {
    unint64_t v111 = (char *)v110;
    operator delete(v110);
  }
}

void sub_838520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
  {
    a23 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_8385A8(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  *a6 = 0;
  a6[1] = 0;
  a6[2] = 0;
  sub_68F4F8(*a1, *(unsigned int *)(*a2 + 40 * a3 + 32) | ((unint64_t)*(unsigned __int16 *)(*a2 + 40 * a3 + 36) << 32), &v42);
  uint64_t v12 = v42;
  unint64_t v13 = v43;
  if (v42 == v43) {
    goto LABEL_35;
  }
  do
  {
    uint64_t v14 = (int *)sub_2DBC9C(*a1, *v12);
    uint64_t v15 = (unsigned __int16 *)((char *)v14 - *v14);
    if (*v15 < 5u) {
      goto LABEL_3;
    }
    uint64_t v16 = v15[2];
    if (!v16 || *((unsigned char *)v14 + v16) != 3) {
      goto LABEL_3;
    }
    sub_68F5DC(*a1, *v12, (unint64_t *)&v40);
    uint64_t v17 = v40;
    uint64_t v18 = (v41 - v40) >> 3;
    if (v18 <= (unint64_t)(-a3 - 0x3333333333333333 * ((uint64_t)(a2[1] - *a2) >> 3)))
    {
      if (v40 != v41)
      {
        unint64_t v19 = (unint64_t *)(*a2 + 40 * a3 + 32);
        unint64_t v20 = (unint64_t)v40;
        do
        {
          unint64_t v22 = *v19;
          v19 += 5;
          unint64_t v21 = v22;
          if (__PAIR64__(*(unsigned __int16 *)(v20 + 4), *(_DWORD *)v20) != __PAIR64__(WORD2(v22), v22)
            || (HIWORD(v21) & 1) == (*(unsigned char *)(v20 + 6) == 0))
          {
            goto LABEL_8;
          }
          v20 += 8;
        }
        while ((unsigned char *)v20 != v41);
      }
      uint64_t v23 = *(unint64_t **)a4;
      uint64_t v24 = *(void **)(a4 + 8);
      unint64_t v25 = (unint64_t)v40;
      uint64_t v26 = (uint64_t)v24 - *(void *)a4;
      if (v24 == *(void **)a4) {
        goto LABEL_27;
      }
      if (v18 >= v26 >> 3)
      {
        unint64_t v27 = (unint64_t)&v40[8 * v18 + 8 * (1 - (v26 >> 3))];
        if ((unsigned char *)v27 != v40)
        {
          unint64_t v30 = *v23;
          unint64_t v28 = v23 + 1;
          unint64_t v29 = v30;
          unint64_t v25 = (unint64_t)v40;
          while (__PAIR64__(*(unsigned __int16 *)(v25 + 4), *(_DWORD *)v25) != __PAIR64__(WORD2(v29), v29)
               || (HIWORD(v29) & 1) == (*(unsigned char *)(v25 + 6) == 0))
          {
LABEL_19:
            v25 += 8;
            if (v25 == v27) {
              goto LABEL_8;
            }
          }
          uint64_t v31 = 0;
          while (&v28[v31] != v24)
          {
            unint64_t v32 = v28[v31];
            if (__PAIR64__(*(unsigned __int16 *)(v25 + v31 * 8 + 12), *(_DWORD *)(v25 + v31 * 8 + 8)) == __PAIR64__(WORD2(v32), v32))
            {
              BOOL v33 = *(unsigned char *)(v25 + v31 * 8 + 14) == 0;
              ++v31;
              if ((HIWORD(v32) & 1 ^ v33)) {
                continue;
              }
            }
            goto LABEL_19;
          }
LABEL_27:
          if ((unsigned char *)v25 != v41)
          {
            sub_838928(a1, v12, a5, (uint64_t)&__p);
            uint64_t v34 = a5;
            sub_840434(a6, a6[1], (uint64_t)__p, (uint64_t)v39, ((char *)v39 - (unsigned char *)__p) >> 7);
            uint64_t v35 = (void **)__p;
            if (__p)
            {
              char v36 = v39;
              unsigned int v37 = __p;
              if (v39 != __p)
              {
                do
                  char v36 = sub_2DF518(v36 - 16);
                while (v36 != v35);
                unsigned int v37 = __p;
              }
              uint64_t v39 = v35;
              operator delete(v37);
            }
            uint64_t v17 = v40;
            a5 = v34;
          }
        }
      }
    }
LABEL_8:
    if (v17)
    {
      uint64_t v41 = v17;
      operator delete(v17);
    }
LABEL_3:
    ++v12;
  }
  while (v12 != v13);
  uint64_t v12 = v42;
LABEL_35:
  if (v12)
  {
    uint64_t v43 = v12;
    operator delete(v12);
  }
}

void sub_838898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  sub_6CCDEC(&a10);
  if (__p)
  {
    a14 = (uint64_t)__p;
    operator delete(__p);
    unint64_t v19 = a16;
    if (!a16)
    {
LABEL_3:
      sub_6CCDEC(v17);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    unint64_t v19 = a16;
    if (!a16) {
      goto LABEL_3;
    }
  }
  a17 = (uint64_t)v19;
  operator delete(v19);
  sub_6CCDEC(v17);
  _Unwind_Resume(a1);
}

void **sub_838928@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v12 = a3;
  sub_6CCCD4(*a1, *a2, (uint64_t *)a4);
  uint64_t v7 = &xmmword_25C86F8;
  if (a3) {
    uint64_t v7 = &xmmword_25C8720;
  }
  v11[0] = a1;
  v11[1] = &v12;
  v11[2] = v7;
  double result = (void **)sub_835258(*(unsigned __int8 **)a4, *(unsigned __int8 **)(a4 + 8), (uint64_t)v11);
  unint64_t v9 = result;
  unint64_t v10 = *(void ***)(a4 + 8);
  if (v10 != result)
  {
    while (v10 != v9)
    {
      v10 -= 16;
      double result = sub_2DF518(v10);
    }
    *(void *)(a4 + 8) = v9;
  }
  return result;
}

void sub_8389FC(_Unwind_Exception *a1)
{
  sub_6CCDEC(v1);
  _Unwind_Resume(a1);
}

void sub_838A10(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  unint64_t v4 = 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - *a2) >> 3);
  if (a3 <= v4) {
    unint64_t v5 = 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - *a2) >> 3);
  }
  else {
    unint64_t v5 = a3;
  }
  unint64_t v50 = v5;
  if (v4 > a3)
  {
    unint64_t v8 = a3;
    uint64_t v9 = 40 * a3 + 32;
    do
    {
      if (a1[6] < 0) {
        return;
      }
      unint64_t v10 = (void *)sub_5A7C34(a2, v8);
      unint64_t v11 = (unsigned __int16 *)(*v10 - *(int *)*v10);
      if (*v11 < 0x2Fu) {
        return;
      }
      uint64_t v12 = v11[23];
      if (!v12) {
        return;
      }
      unsigned int v13 = *(unsigned __int8 *)(*v10 + v12);
      BOOL v14 = v13 > 0x2A;
      uint64_t v15 = (1 << v13) & 0x50426810004;
      if (v14 || v15 == 0) {
        return;
      }
      sub_68F4F8(*a1, *(unsigned int *)(*a2 + 40 * v8 + 32) | ((unint64_t)*(unsigned __int16 *)(*a2 + 40 * v8 + 36) << 32), &v56);
      uint64_t v18 = v56;
      uint64_t v17 = v57;
      if (v56 == v57)
      {
        if (!v56) {
          goto LABEL_6;
        }
      }
      else
      {
        do
        {
          unint64_t v19 = (int *)sub_2DBC9C(*a1, *v18);
          unint64_t v20 = (unsigned __int16 *)((char *)v19 - *v19);
          if (*v20 >= 5u)
          {
            uint64_t v21 = v20[2];
            if (v21)
            {
              if (*((unsigned char *)v19 + v21) == 3)
              {
                uint64_t v22 = *a1;
                unint64_t v23 = *v18;
                uint64_t v54 = 0;
                unsigned int v55 = 0;
                long long __p = 0;
                uint64_t v24 = (int *)sub_2DBC9C(v22, v23);
                unint64_t v25 = (unsigned __int16 *)((char *)v24 - *v24);
                if (*v25 >= 7u)
                {
                  uint64_t v26 = v25[3];
                  if (v26)
                  {
                    unint64_t v27 = (unsigned int *)((char *)v24 + v26 + *(unsigned int *)((char *)v24 + v26));
                    uint64_t v28 = *v27;
                    if (v28)
                    {
                      uint64_t v29 = 8 * v28;
                      unint64_t v30 = (char *)operator new(8 * v28);
                      long long __p = v30;
                      uint64_t v54 = v30;
                      unsigned int v55 = &v30[8 * v28];
                      uint64_t v31 = (uint64_t *)(v27 + 1);
                      do
                      {
                        uint64_t v32 = *v31;
                        unint64_t v33 = HIDWORD(*v31);
                        LODWORD(v51) = *v31;
                        WORD2(v51) = v33;
                        BYTE6(v51) = (v32 & 0xFF000000000000) == 0;
                        unint64_t v30 = sub_2D6254((unint64_t *)&__p, v30, (int *)&v51) + 8;
                        ++v31;
                        v29 -= 8;
                      }
                      while (v29);
                    }
                  }
                }
                uint64_t v34 = (char *)__p;
                uint64_t v35 = *a2;
                uint64_t v36 = *(void *)(*a2 + 40 * v8 + 32);
                if (__PAIR64__(*((unsigned __int16 *)__p + 2), *(_DWORD *)__p) != __PAIR64__(WORD2(v36), v36)) {
                  goto LABEL_18;
                }
                if (((v36 & 0x1000000000000) == 0) != (*((unsigned char *)__p + 6) == 0)) {
                  goto LABEL_18;
                }
                unint64_t v37 = (v54 - (unsigned char *)__p) >> 3;
                unint64_t v38 = 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - v35) >> 3);
                if (v37 > v38 - a3) {
                  goto LABEL_18;
                }
                unint64_t v39 = v38 - v8;
                if (v39 < v37) {
                  unint64_t v37 = v39;
                }
                if (v37)
                {
                  unint64_t v40 = (char *)__p + 8 * v37;
                  uint64_t v41 = (unint64_t *)(v35 + v9);
                  unint64_t v42 = (char *)__p;
                  while (1)
                  {
                    unint64_t v44 = *v41;
                    v41 += 5;
                    unint64_t v43 = v44;
                    if (__PAIR64__(*((unsigned __int16 *)v42 + 2), *(_DWORD *)v42) != __PAIR64__(WORD2(v44), v44)
                      || (HIWORD(v43) & 1) == (v42[6] == 0))
                    {
                      break;
                    }
                    v42 += 8;
                    if (v42 == v40)
                    {
                      if (!__p) {
                        goto LABEL_19;
                      }
                      goto LABEL_18;
                    }
                  }
                  sub_6CCCD4(*a1, *v18, (uint64_t *)&v51);
                  sub_840434(a4, a4[1], (uint64_t)v51, (uint64_t)v52, ((char *)v52 - (unsigned char *)v51) >> 7);
                  unint64_t v45 = (void **)v51;
                  if (v51)
                  {
                    uint64_t v46 = v52;
                    uint64_t v47 = v51;
                    if (v52 != v51)
                    {
                      do
                        uint64_t v46 = sub_2DF518(v46 - 16);
                      while (v46 != v45);
                      uint64_t v47 = v51;
                    }
                    unint64_t v52 = v45;
                    operator delete(v47);
                  }
                  uint64_t v34 = (char *)__p;
                  if (__p) {
                    goto LABEL_18;
                  }
                }
                else
                {
LABEL_18:
                  uint64_t v54 = v34;
                  operator delete(v34);
                }
              }
            }
          }
LABEL_19:
          ++v18;
        }
        while (v18 != v17);
        uint64_t v18 = v56;
        if (!v56) {
          goto LABEL_6;
        }
      }
      unint64_t v57 = v18;
      operator delete(v18);
LABEL_6:
      ++v8;
      v9 += 40;
    }
    while (v8 != v50);
  }
}

void sub_838D98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, void *a18, uint64_t a19)
{
  sub_6CCDEC(&a12);
  if (__p)
  {
    a16 = (uint64_t)__p;
    operator delete(__p);
    unint64_t v20 = a18;
    if (!a18)
    {
LABEL_3:
      sub_6CCDEC(a9);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    unint64_t v20 = a18;
    if (!a18) {
      goto LABEL_3;
    }
  }
  a19 = (uint64_t)v20;
  operator delete(v20);
  sub_6CCDEC(a9);
  _Unwind_Resume(a1);
}

void sub_838E40(uint64_t a1, void *a2)
{
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B9960;
  strcpy((char *)__p, "max_distance_to_look_forward_for_a_name");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)a1);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x30uLL);
  long long v11 = xmmword_20B93D0;
  strcpy((char *)__p, "max_distance_to_look_backwards_for_a_sign");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)(a1 + 8));
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x38uLL);
  long long v11 = xmmword_20B9AC0;
  strcpy((char *)__p, "distance_to_look_backwards_for_a_sign_major_arterial");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)(a1 + 16));
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x38uLL);
  long long v11 = xmmword_20B9AC0;
  strcpy((char *)__p, "distance_to_look_backwards_for_a_sign_minor_arterial");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)(a1 + 24));
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x30uLL);
  long long v11 = xmmword_20B93E0;
  strcpy((char *)__p, "distance_to_look_backwards_for_a_sign_local");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)(a1 + 32));
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B8FD0;
  strcpy((char *)__p, "distance_to_look_for_off_route_signs");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)(a1 + 40));
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B9260;
  strcpy((char *)__p, "min_turn_angle_cross_and_continue");
  unint64_t v4 = sub_58070(a2, (uint64_t)&__p);
  unint64_t v5 = (void *)(a1 + 48);
  if (v4)
  {
    unint64_t v5 = v4 + 5;
    if (*((_DWORD *)v4 + 12) != 1) {
      unint64_t v5 = (void *)(a1 + 48);
    }
  }
  *(void *)(a1 + 48) = *v5;
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x30uLL);
  long long v11 = xmmword_20B93E0;
  strcpy((char *)__p, "enable_special_guidance_spoken_instructions");
  unint64_t v6 = sub_58070(a2, (uint64_t)&__p);
  if (v6 && (int v7 = *((_DWORD *)v6 + 12), (v7 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 56) = v7 == 4;
    if (SHIBYTE(v11) < 0) {
      goto LABEL_23;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a1 + 56) != 0;
    if (SHIBYTE(v11) < 0) {
LABEL_23:
    }
      operator delete(__p);
  }
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B9390;
  strcpy((char *)__p, "prefer_destination_territory_poi");
  unint64_t v8 = sub_58070(a2, (uint64_t)&__p);
  if (v8 && (int v9 = *((_DWORD *)v8 + 12), (v9 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 57) = v9 == 4;
    if (SHIBYTE(v11) < 0) {
      goto LABEL_30;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 57) = *(unsigned char *)(a1 + 57) != 0;
    if (SHIBYTE(v11) < 0) {
LABEL_30:
    }
      operator delete(__p);
  }
}

void sub_839210(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_83924C(uint64_t a1, void *a2, char a3, uint64_t a4)
{
  *(void *)a1 = sub_3750CC(a2);
  sub_5F2D5C(a1 + 8, (long long *)a4, a3);
  unint64_t v19 = operator new(0x20uLL);
  long long v20 = xmmword_20B8E90;
  strcpy((char *)v19, "routing/guidance/StepNamer.json");
  if (*(char *)(a4 + 23) < 0)
  {
    sub_4200(&__dst, *(void **)a4, *(void *)(a4 + 8));
  }
  else
  {
    long long __dst = *(_OWORD *)a4;
    uint64_t v24 = *(void *)(a4 + 16);
  }
  sub_28C774(&v17, (uint64_t)&__dst, 1uLL);
  unint64_t v8 = sub_374CDC((uint64_t)a2, (uint64_t)&v19, (uint64_t *)&v17);
  sub_3CB5E0(v8, (uint64_t)__p);
  int64x2_t v9 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  *(int64x2_t *)(a1 + 40) = v9;
  *(int64x2_t *)(a1 + 56) = v9;
  *(int64x2_t *)(a1 + 72) = v9;
  *(void *)(a1 + 88) = 0x4050400000000000;
  *(_WORD *)(a1 + 96) = 0;
  sub_83CC3C(a1 + 40, __p);
  unint64_t v10 = v22;
  if (v22)
  {
    do
    {
      uint64_t v15 = *(char **)v10;
      sub_57AC8((uint64_t *)v10 + 5);
      if (v10[39] < 0) {
        operator delete(*((void **)v10 + 2));
      }
      operator delete(v10);
      unint64_t v10 = v15;
    }
    while (v15);
  }
  long long v11 = __p[0];
  __p[0] = 0;
  if (v11) {
    operator delete(v11);
  }
  uint64_t v12 = (void **)v17;
  if (v17)
  {
    unsigned int v13 = v18;
    BOOL v14 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v13 - 1) < 0) {
          operator delete(*(v13 - 3));
        }
        v13 -= 3;
      }
      while (v13 != v12);
      BOOL v14 = v17;
    }
    uint64_t v18 = v12;
    operator delete(v14);
  }
  if (SHIBYTE(v24) < 0)
  {
    operator delete((void *)__dst);
    if ((SHIBYTE(v20) & 0x80000000) == 0) {
      return a1;
    }
LABEL_22:
    operator delete(v19);
    return a1;
  }
  if (SHIBYTE(v20) < 0) {
    goto LABEL_22;
  }
  return a1;
}

void sub_83946C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0)
  {
    operator delete(__p);
    if ((*(char *)(v19 + 31) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v19 + 31) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v20);
  _Unwind_Resume(exception_object);
}

void sub_839504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = nullsub_1(a2);
  unint64_t v6 = *(void **)v5;
  int v7 = *(void **)(v5 + 8);
  if (*(void **)v5 != v7)
  {
    do
    {
      uint64_t v8 = v6[134] - v6[133];
      if (v8)
      {
        unint64_t v9 = 0;
        uint64_t v10 = v8 / 2400;
        do
          sub_8395C8(a1, v6, v9++, a3);
        while (v10 != v9);
      }
      sub_83A324(a1, (uint64_t)v6);
      v6 += 1541;
    }
    while (v6 != v7);
  }
}

void sub_8395C8(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_51690C(a2 + 133, a3);
  if ((*(_DWORD *)(v7 + 160) - 89) < 2) {
    return;
  }
  uint64_t v8 = v7;
  unint64_t v9 = (uint64_t *)nullsub_1(a2);
  unint64_t v10 = *(void *)(v8 + 24);
  if (v10 >= 0xAAAAAAAAAAAAAAABLL * ((v9[1] - *v9) >> 4)) {
    unint64_t v10 = sub_470ADC(a2) - 1;
  }
  uint64_t v80 = (int64x2_t *)(v8 + 336);
  long long v11 = (unsigned int *)sub_470B40(a2, v10);
  uint64_t v12 = (const std::string *)sub_4D4928(a2 + 928, v10);
  std::string::operator=((std::string *)(a1 + 8), v12);
  uint64_t v13 = *(unsigned int *)(v8 + 160);
  if (v13 > 0x3F) {
    goto LABEL_15;
  }
  if (((1 << v13) & 0xC000000000300008) == 0)
  {
    if (v13 == 4)
    {
      sub_83A5F8(a1, v8, a4, v9, (uint64_t)v102);
      if (sub_6F2FD8((uint64_t)v102))
      {
        unint64_t v14 = *(void *)(v8 + 344);
        if (v14 >= *(void *)(v8 + 352))
        {
          uint64_t v15 = sub_5B09D8(v80, (long long *)v102);
        }
        else
        {
          sub_4AA8E0(*(char **)(v8 + 344), (long long *)v102);
          uint64_t v15 = v14 + 152;
          *(void *)(v8 + 344) = v14 + 152;
        }
        *(void *)(v8 + 344) = v15;
      }
      goto LABEL_59;
    }
LABEL_15:
    uint64_t v16 = (int *)*((void *)v11 + 1);
    uint64_t v17 = (unsigned __int16 *)((char *)v16 - *v16);
    if (*v17 >= 0x2Fu)
    {
      uint64_t v18 = v17[23];
      if (v18)
      {
        unsigned int v19 = *((unsigned __int8 *)v16 + v18);
        BOOL v20 = v19 > 0x2A;
        uint64_t v21 = (1 << v19) & 0x50426810004;
        if (!v20 && v21 != 0) {
          goto LABEL_64;
        }
      }
    }
    v89[0] = (void *)((((unint64_t)(v11[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v11[1] << 32) | *v11) ^ 0x1000000000000);
    __p[0] = 0;
    __p[1] = 0;
    v93[0] = 0;
    sub_83A464(a1, (unsigned int *)v89, a4, (uint64_t)__p, (uint64_t)v102);
    if (SHIBYTE(v93[0]) < 0) {
      operator delete(__p[0]);
    }
    if (!sub_6F2FD8((uint64_t)v102)) {
      goto LABEL_59;
    }
    unint64_t v23 = *(void *)(v8 + 344);
    if (v23 >= *(void *)(v8 + 352))
    {
      uint64_t v24 = sub_5B09D8(v80, (long long *)v102);
    }
    else
    {
      sub_4AA8E0(*(char **)(v8 + 344), (long long *)v102);
      uint64_t v24 = v23 + 152;
      *(void *)(v8 + 344) = v23 + 152;
    }
    *(void *)(v8 + 344) = v24;
    unint64_t v27 = (unsigned int *)sub_470B40(a2, *(void *)(v8 + 16));
    v86[0] = (void *)((((unint64_t)(v27[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v27[1] << 32) | *v27) ^ 0x1000000000000);
    v89[0] = 0;
    v89[1] = 0;
    v90[0] = 0;
    sub_83A464(a1, (unsigned int *)v86, a4, (uint64_t)v89, (uint64_t)__p);
    if (SHIBYTE(v90[0]) < 0) {
      operator delete(v89[0]);
    }
    *(unsigned char *)(v8 + 560) = sub_6F317C((unsigned __int8 *)__p, v102);
    if (v101 < 0)
    {
      operator delete(v100);
      if ((v99 & 0x80000000) == 0)
      {
LABEL_44:
        if ((v97 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        goto LABEL_50;
      }
    }
    else if ((v99 & 0x80000000) == 0)
    {
      goto LABEL_44;
    }
    operator delete(v98);
    if ((v97 & 0x80000000) == 0)
    {
LABEL_45:
      if ((v95 & 0x80000000) == 0) {
        goto LABEL_46;
      }
      goto LABEL_51;
    }
LABEL_50:
    operator delete(v96);
    if ((v95 & 0x80000000) == 0)
    {
LABEL_46:
      if ((SHIBYTE(v93[0]) & 0x80000000) == 0) {
        goto LABEL_59;
      }
LABEL_52:
      operator delete(__p[0]);
      goto LABEL_59;
    }
LABEL_51:
    operator delete(v94);
    if ((SHIBYTE(v93[0]) & 0x80000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_52;
  }
  if (!*(unsigned char *)(v8 + 304) || *(void *)(v8 + 136) == *(void *)(v8 + 144)) {
    goto LABEL_15;
  }
  sub_83A8F0((uint64_t *)a1, (uint64_t **)(v8 + 136), a4, v102);
  if (sub_6F2FD8((uint64_t)v102))
  {
    sub_8330D4(v80, (long long *)v102);
    if (*(void *)(v8 + 336) == *(void *)(v8 + 344)) {
      goto LABEL_59;
    }
LABEL_32:
    v86[0] = (void *)((((unint64_t)(v11[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v11[1] << 32) | *v11) ^ 0x1000000000000);
    v89[0] = 0;
    v89[1] = 0;
    v90[0] = 0;
    sub_83A464(a1, (unsigned int *)v86, a4, (uint64_t)v89, (uint64_t)__p);
    if (SHIBYTE(v90[0]) < 0) {
      operator delete(v89[0]);
    }
    if (!sub_6F2FD8((uint64_t)__p)) {
      goto LABEL_58;
    }
    sub_6F3150((char *)v80->i64[0], (uint64_t)v89);
    sub_6F3150((char *)__p, (uint64_t)v86);
    BOOL v26 = sub_69412C((unsigned __int8 *)v89, (unsigned __int8 *)v86);
    if (SBYTE7(v87) < 0)
    {
      operator delete(v86[0]);
      if ((SHIBYTE(v90[0]) & 0x80000000) == 0)
      {
LABEL_37:
        if (!v26) {
          goto LABEL_58;
        }
        goto LABEL_57;
      }
    }
    else if ((SHIBYTE(v90[0]) & 0x80000000) == 0)
    {
      goto LABEL_37;
    }
    operator delete(v89[0]);
    if (!v26)
    {
LABEL_58:
      sub_4A50F4((uint64_t)__p);
      goto LABEL_59;
    }
LABEL_57:
    sub_8330D4(v80, (long long *)__p);
    goto LABEL_58;
  }
  unint64_t v25 = (unsigned int *)sub_470B40(a2, *(void *)(v8 + 16));
  v86[0] = (void *)((((unint64_t)(v25[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v25[1] << 32) | *v25) ^ 0x1000000000000);
  v89[0] = 0;
  v89[1] = 0;
  v90[0] = 0;
  sub_83A464(a1, (unsigned int *)v86, a4, (uint64_t)v89, (uint64_t)__p);
  if (SHIBYTE(v90[0]) < 0) {
    operator delete(v89[0]);
  }
  if (sub_6F2FD8((uint64_t)__p)) {
    sub_8330D4(v80, (long long *)__p);
  }
  sub_4A50F4((uint64_t)__p);
  if (*(void *)(v8 + 336) != *(void *)(v8 + 344)) {
    goto LABEL_32;
  }
LABEL_59:
  if (v111 < 0)
  {
    operator delete(v110);
    if ((v108 & 0x80000000) == 0)
    {
LABEL_61:
      if ((v106 & 0x80000000) == 0) {
        goto LABEL_62;
      }
      goto LABEL_102;
    }
  }
  else if ((v108 & 0x80000000) == 0)
  {
    goto LABEL_61;
  }
  operator delete(v107);
  if ((v106 & 0x80000000) == 0)
  {
LABEL_62:
    if ((v104 & 0x80000000) == 0) {
      goto LABEL_63;
    }
LABEL_103:
    operator delete(v103);
    if ((v102[23] & 0x80000000) == 0) {
      goto LABEL_64;
    }
LABEL_104:
    operator delete(*(void **)v102);
    goto LABEL_64;
  }
LABEL_102:
  operator delete(v105);
  if (v104 < 0) {
    goto LABEL_103;
  }
LABEL_63:
  if ((v102[23] & 0x80000000) != 0) {
    goto LABEL_104;
  }
LABEL_64:
  uint64_t v28 = (void **)(v8 + 360);
  sub_83B674((uint64_t *)a1, v9, v8, a4, 0, (int64x2_t *)v102);
  uint64_t v29 = *(void *)(v8 + 360);
  if (v29)
  {
    sub_52FA20(v8 + 360, v29);
    operator delete(*v28);
    *uint64_t v28 = 0;
    *(void *)(v8 + 368) = 0;
    *(void *)(v8 + 376) = 0;
  }
  uint64_t v30 = *(void *)v102;
  *(void *)(v8 + 360) = *(void *)v102;
  uint64_t v31 = *(void *)&v102[8];
  *(_OWORD *)(v8 + 368) = *(_OWORD *)&v102[8];
  *(_OWORD *)long long __p = 0u;
  *(_OWORD *)float64x2_t v93 = 0u;
  LODWORD(v94) = 1065353216;
  *(_OWORD *)double v89 = 0u;
  *(_OWORD *)unint64_t v90 = 0u;
  int v91 = 1065353216;
  *(_OWORD *)int v86 = 0u;
  long long v87 = 0u;
  int v88 = 1065353216;
  uint64_t v32 = *(void *)(v8 + 336);
  uint64_t v79 = (int64x2_t *)(v8 + 360);
  if (v32 == *(void *)(v8 + 344))
  {
    uint64_t v33 = v31;
  }
  else
  {
    sub_24AFC((uint64_t)__p, v32, v32);
    sub_24AFC((uint64_t)v89, v80->i64[0] + 128, v80->i64[0] + 128);
    sub_83D34C((uint64_t)v86, (unsigned int *)(v80->i64[0] + 64), v80->i64[0] + 64);
    uint64_t v30 = *(void *)(v8 + 360);
    uint64_t v33 = *(void *)(v8 + 368);
  }
  *(void *)unint64_t v102 = __p;
  *(void *)&v102[8] = v89;
  *(void *)&v102[16] = v86;
  uint64_t v34 = sub_83D8BC(v30, v33, (uint64_t *)v102);
  if (*(void *)(v8 + 368) != v34) {
    sub_52FA20((uint64_t)v79, v34);
  }
  uint64_t v78 = v9;
  uint64_t v35 = 0;
  uint64_t v36 = (uint64_t *)(v8 + 384);
  long long v84 = (void *)nullsub_1(a2);
  uint64_t v85 = v37;
  while (*(_DWORD *)(v8 + 160) != 4
       && *(void *)(v8 + 336) == *(void *)(v8 + 344)
       && *(void *)(v8 + 360) == *(void *)(v8 + 368)
       && v35 < *(void *)(a1 + 40))
  {
    sub_46FF18();
    unint64_t v40 = v39;
    unint64_t v42 = v41;
    if (v84)
    {
      unint64_t v43 = v85;
      unint64_t v44 = sub_470ADC(v84);
      BOOL v45 = v43 >= v44;
      BOOL v46 = v43 < v44;
      if (!v40)
      {
        if (v45) {
          break;
        }
        goto LABEL_92;
      }
    }
    else
    {
      if (!v39) {
        break;
      }
      BOOL v46 = 0;
    }
    unint64_t v47 = sub_470ADC(v40);
    if (v42 < v47 && v46)
    {
      uint64_t v49 = sub_470B40(v84, v85);
      if (v49 == sub_470B40(v40, v42)) {
        break;
      }
    }
    else if (((v46 ^ (v42 < v47)) & 1) == 0)
    {
      break;
    }
LABEL_92:
    unint64_t v50 = (unsigned int *)sub_470B40(v84, v85);
    long long v51 = (int *)*((void *)v50 + 1);
    unint64_t v52 = (unsigned __int16 *)((char *)v51 - *v51);
    if (*v52 < 0x2Fu
      || !v52[23]
      || ((v53 = *((unsigned __int8 *)v51 + v52[23]), v20 = v53 > 0x2A, uint64_t v54 = (1 << v53) & 0x50426810004, !v20)
        ? (BOOL v55 = v54 == 0)
        : (BOOL v55 = 1),
          v55))
    {
      unint64_t v57 = (((unint64_t)(v50[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v50[1] << 32) | *v50) ^ 0x1000000000000;
      uint64_t v82 = 0;
      unint64_t v83 = v57;
      v81[0] = 0;
      v81[1] = 0;
      sub_83A464(a1, (unsigned int *)&v83, a4, (uint64_t)v81, (uint64_t)v102);
      if (SHIBYTE(v82) < 0) {
        operator delete(v81[0]);
      }
      if (sub_6F2FD8((uint64_t)v102))
      {
        int v109 = 1;
        unint64_t v58 = *(void *)(v8 + 368);
        if (v58 >= *(void *)(v8 + 376))
        {
          uint64_t v59 = sub_83DB04(v79, (long long *)v102);
        }
        else
        {
          sub_4AA8E0(*(char **)(v8 + 368), (long long *)v102);
          uint64_t v59 = v58 + 152;
          *(void *)(v8 + 368) = v58 + 152;
        }
        *(void *)(v8 + 368) = v59;
      }
      if (v111 < 0)
      {
        operator delete(v110);
        if (v108 < 0) {
          goto LABEL_173;
        }
LABEL_114:
        if ((v106 & 0x80000000) == 0) {
          goto LABEL_115;
        }
LABEL_174:
        operator delete(v105);
        if (v104 < 0) {
          goto LABEL_175;
        }
LABEL_116:
        if ((v102[23] & 0x80000000) == 0) {
          break;
        }
      }
      else
      {
        if ((v108 & 0x80000000) == 0) {
          goto LABEL_114;
        }
LABEL_173:
        operator delete(v107);
        if (v106 < 0) {
          goto LABEL_174;
        }
LABEL_115:
        if ((v104 & 0x80000000) == 0) {
          goto LABEL_116;
        }
LABEL_175:
        operator delete(v103);
        if ((v102[23] & 0x80000000) == 0) {
          break;
        }
      }
      operator delete(*(void **)v102);
      break;
    }
    uint64_t v56 = v52[4];
    if (v56) {
      uint64_t v38 = *(unsigned int *)((char *)v51 + v56);
    }
    else {
      uint64_t v38 = 0;
    }
    v35 += v38;
    sub_84417C(&v84);
  }
  sub_83B674((uint64_t *)a1, v78, v8, a4, 1, (int64x2_t *)v102);
  if (*v36)
  {
    sub_52FA20(v8 + 384, *v36);
    operator delete((void *)*v36);
    *uint64_t v36 = 0;
    *(void *)(v8 + 392) = 0;
    *(void *)(v8 + 400) = 0;
  }
  *(_OWORD *)(v8 + 384) = *(_OWORD *)v102;
  *(void *)(v8 + 400) = *(void *)&v102[16];
  sub_83AC4C((uint64_t *)a1, v78, (void *)v8, a4, (uint64_t)v102);
  if (sub_6F2FD8((uint64_t)v102))
  {
    uint64_t v60 = *(long long **)(v8 + 336);
    if (v60 != *(long long **)(v8 + 344))
    {
      unint64_t v61 = *(void *)(v8 + 368);
      if (v61 >= *(void *)(v8 + 376))
      {
        uint64_t v62 = sub_83DB04(v79, v60);
      }
      else
      {
        sub_4AA8E0(*(char **)(v8 + 368), v60);
        uint64_t v62 = v61 + 152;
        *(void *)(v8 + 368) = v61 + 152;
      }
      *(void *)(v8 + 368) = v62;
      *(_DWORD *)(v62 - 32) = 1;
      sub_52FA20((uint64_t)v80, *(void *)(v8 + 336));
    }
    unint64_t v63 = *(void *)(v8 + 368);
    if (v63 >= *(void *)(v8 + 376))
    {
      uint64_t v64 = sub_5B09D8(v79, (long long *)v102);
    }
    else
    {
      sub_4AA8E0(*(char **)(v8 + 368), (long long *)v102);
      uint64_t v64 = v63 + 152;
      *(void *)(v8 + 368) = v63 + 152;
    }
    *(void *)(v8 + 368) = v64;
    *(_DWORD *)(v64 - 32) = 4;
  }
  if (*(unsigned char *)(a1 + 96))
  {
    sub_83B098((uint64_t *)a1, a2, v8, a4, (char **)v81);
    long long v65 = (void **)(v8 + 1784);
    uint64_t v66 = *(void *)(v8 + 1784);
    if (v66)
    {
      uint64_t v67 = *(void *)(v8 + 1792);
      uint64_t v68 = *(void **)(v8 + 1784);
      if (v67 != v66)
      {
        do
        {
          if (*(char *)(v67 - 25) < 0) {
            operator delete(*(void **)(v67 - 48));
          }
          v67 -= 48;
        }
        while (v67 != v66);
        uint64_t v68 = *v65;
      }
      *(void *)(v8 + 1792) = v66;
      operator delete(v68);
      *long long v65 = 0;
      *(void *)(v8 + 1792) = 0;
      *(void *)(v8 + 1800) = 0;
    }
    *(_OWORD *)long long v65 = *(_OWORD *)v81;
    *(void *)(v8 + 1800) = v82;
  }
  if ((v111 & 0x80000000) == 0)
  {
    if ((v108 & 0x80000000) == 0) {
      goto LABEL_141;
    }
LABEL_147:
    operator delete(v107);
    if (v106 < 0) {
      goto LABEL_148;
    }
LABEL_142:
    if ((v104 & 0x80000000) == 0) {
      goto LABEL_143;
    }
LABEL_149:
    operator delete(v103);
    if ((v102[23] & 0x80000000) != 0) {
      goto LABEL_150;
    }
LABEL_144:
    uint64_t v69 = (char *)v87;
    if ((void)v87) {
      goto LABEL_154;
    }
    goto LABEL_157;
  }
  operator delete(v110);
  if (v108 < 0) {
    goto LABEL_147;
  }
LABEL_141:
  if ((v106 & 0x80000000) == 0) {
    goto LABEL_142;
  }
LABEL_148:
  operator delete(v105);
  if (v104 < 0) {
    goto LABEL_149;
  }
LABEL_143:
  if ((v102[23] & 0x80000000) == 0) {
    goto LABEL_144;
  }
LABEL_150:
  operator delete(*(void **)v102);
  uint64_t v69 = (char *)v87;
  if ((void)v87)
  {
    while (1)
    {
LABEL_154:
      uint64_t v70 = *(char **)v69;
      if (v69[71] < 0)
      {
        operator delete(*((void **)v69 + 6));
        if ((v69[47] & 0x80000000) == 0) {
          goto LABEL_153;
        }
LABEL_156:
        operator delete(*((void **)v69 + 3));
        operator delete(v69);
        uint64_t v69 = v70;
        if (!v70) {
          break;
        }
      }
      else
      {
        if (v69[47] < 0) {
          goto LABEL_156;
        }
LABEL_153:
        operator delete(v69);
        uint64_t v69 = v70;
        if (!v70) {
          break;
        }
      }
    }
  }
LABEL_157:
  uint64_t v71 = v86[0];
  v86[0] = 0;
  if (v71) {
    operator delete(v71);
  }
  double v72 = (void **)v90[0];
  if (v90[0])
  {
    do
    {
      unsigned int v76 = (void **)*v72;
      if (*((char *)v72 + 39) < 0) {
        operator delete(v72[2]);
      }
      operator delete(v72);
      double v72 = v76;
    }
    while (v76);
  }
  int v73 = v89[0];
  v89[0] = 0;
  if (v73) {
    operator delete(v73);
  }
  int v74 = (void **)v93[0];
  if (v93[0])
  {
    do
    {
      uint64_t v77 = (void **)*v74;
      if (*((char *)v74 + 39) < 0) {
        operator delete(v74[2]);
      }
      operator delete(v74);
      int v74 = v77;
    }
    while (v77);
  }
  char v75 = __p[0];
  __p[0] = 0;
  if (v75) {
    operator delete(v75);
  }
}

void sub_83A1A0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 344) = v2;
  sub_4A50F4(v3 - 240);
  _Unwind_Resume(a1);
}

void sub_83A1B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  *(void *)(v42 + 368) = v43;
  sub_4A50F4(v44 - 240);
  sub_833EAC((uint64_t)&a22);
  sub_3A4C2C((uint64_t)&__p);
  sub_3A4C2C((uint64_t)&a37);
  _Unwind_Resume(a1);
}

void sub_83A324(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 1072);
  for (uint64_t i = v2 - 2400; v2 - 2400 != *(void *)(a2 + 1064); uint64_t i = v2 - 2400)
  {
    uint64_t v6 = v2 - 4800;
    uint64_t v7 = v2 - 2400;
    uint64_t v2 = i;
    uint64_t v8 = *(void *)(v6 + 360);
    unint64_t v9 = *(long long **)(v6 + 368);
    v14[0] = a1;
    v14[1] = v7 + 360;
    _DWORD v14[2] = v7 + 336;
    if ((uint64_t)v9 - v8 < 1)
    {
LABEL_8:
      uint64_t v13 = 0;
      unint64_t v10 = 0;
    }
    else
    {
      unint64_t v10 = 0x86BCA1AF286BCA1BLL * (((uint64_t)v9 - v8) >> 3);
      while (1)
      {
        long long v11 = operator new(152 * v10, &std::nothrow);
        if (v11) {
          break;
        }
        BOOL v12 = v10 > 1;
        v10 >>= 1;
        if (!v12) {
          goto LABEL_8;
        }
      }
      uint64_t v13 = v11;
    }
    sub_84424C(v8, v9, v14, 0x86BCA1AF286BCA1BLL * (((uint64_t)v9 - v8) >> 3), (uint64_t)v13, v10);
    if (v13) {
      operator delete(v13);
    }
  }
}

void sub_83A44C(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_83A464(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_58E730(*(void *)a1, *(void *)a2, 1u, &v23);
  unint64_t v10 = (int *)sub_2D5D58(*(void *)a1, *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32));
  long long v11 = (unsigned __int16 *)((char *)v10 - *v10);
  if (*v11 >= 0x25u && (uint64_t v12 = v11[18]) != 0) {
    uint64_t v13 = (unsigned int *)((char *)v10 + v12 + *(unsigned int *)((char *)v10 + v12));
  }
  else {
    uint64_t v13 = 0;
  }
  sub_2DE69C(v13, &__p);
  uint64_t v14 = *(unsigned __int8 *)(a4 + 23);
  if ((v14 & 0x80u) != 0) {
    uint64_t v14 = *(void *)(a4 + 8);
  }
  if (v14) {
    std::string::operator=((std::string *)(a1 + 8), (const std::string *)a4);
  }
  sub_6F8CDC(a1 + 8, (unsigned __int8 **)&v23, (uint64_t *)&__p, a3, a5);
  uint64_t v15 = (void **)__p;
  if (__p)
  {
    uint64_t v16 = v22;
    uint64_t v17 = __p;
    if (v22 != __p)
    {
      do
      {
        if (*((char *)v16 - 9) < 0) {
          operator delete(*(v16 - 4));
        }
        v16 -= 5;
      }
      while (v16 != v15);
      uint64_t v17 = __p;
    }
    uint64_t v22 = v15;
    operator delete(v17);
  }
  uint64_t v18 = v23;
  if (v23)
  {
    uint64_t v19 = (uint64_t)v24;
    BOOL v20 = v23;
    if (v24 != v23)
    {
      do
        uint64_t v19 = sub_2DF404(v19 - 144);
      while ((void *)v19 != v18);
      BOOL v20 = v23;
    }
    uint64_t v24 = v18;
    operator delete(v20);
  }
}

void sub_83A5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12)
{
}

void sub_83A5E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_53BD98((void **)va);
  _Unwind_Resume(a1);
}

void sub_83A5F8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v10 = (((unint64_t)(*(_DWORD *)(*a4 + 48 * *(void *)(a2 + 16) + 4) & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)*(_DWORD *)(*a4 + 48 * *(void *)(a2 + 16) + 4) << 32) | *(unsigned int *)(*a4 + 48 * *(void *)(a2 + 16))) ^ 0x1000000000000;
  uint64_t v25 = 0;
  unint64_t v26 = v10;
  long long __p = 0;
  uint64_t v24 = 0;
  sub_83A464(a1, (unsigned int *)&v26, a3, (uint64_t)&__p, (uint64_t)v27);
  if ((SHIBYTE(v25) & 0x80000000) == 0)
  {
    uint64_t v11 = *(void *)(a2 + 16);
    unint64_t v12 = *(void *)(a2 + 24);
    uint64_t v13 = v11 + 1;
    if (v11 + 1 > v12) {
      unint64_t v14 = v11 + 1;
    }
    else {
      unint64_t v14 = v12;
    }
    if (v11 + 1 < v12) {
      goto LABEL_13;
    }
    goto LABEL_42;
  }
  operator delete(__p);
  uint64_t v15 = *(void *)(a2 + 16);
  unint64_t v16 = *(void *)(a2 + 24);
  uint64_t v13 = v15 + 1;
  if (v15 + 1 > v16) {
    unint64_t v14 = v15 + 1;
  }
  else {
    unint64_t v14 = v16;
  }
  if (v15 + 1 < v16)
  {
    do
    {
LABEL_13:
      unint64_t v17 = (((unint64_t)(*(_DWORD *)(*a4 + 48 * v13 + 4) & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)*(_DWORD *)(*a4 + 48 * v13 + 4) << 32) | *(unsigned int *)(*a4 + 48 * v13)) ^ 0x1000000000000;
      uint64_t v25 = 0;
      unint64_t v26 = v17;
      long long __p = 0;
      uint64_t v24 = 0;
      sub_83A464(a1, (unsigned int *)&v26, a3, (uint64_t)&__p, a5);
      if (SHIBYTE(v25) < 0) {
        operator delete(__p);
      }
      uint64_t v18 = *(unsigned __int8 *)(a5 + 23);
      if ((v18 & 0x80u) == 0) {
        uint64_t v19 = (void *)*(unsigned __int8 *)(a5 + 23);
      }
      else {
        uint64_t v19 = *(void **)(a5 + 8);
      }
      unint64_t v20 = v28;
      if ((v28 & 0x80u) != 0) {
        unint64_t v20 = (unint64_t)v27[1];
      }
      if (v19 != (void *)v20) {
        goto LABEL_43;
      }
      if ((v28 & 0x80u) == 0) {
        uint64_t v21 = v27;
      }
      else {
        uint64_t v21 = (void **)v27[0];
      }
      if ((v18 & 0x80) != 0)
      {
        if (memcmp(*(const void **)a5, v21, *(void *)(a5 + 8))) {
          goto LABEL_43;
        }
      }
      else if (*(unsigned char *)(a5 + 23))
      {
        uint64_t v22 = (unsigned __int8 *)a5;
        while (*v22 == *(unsigned __int8 *)v21)
        {
          ++v22;
          uint64_t v21 = (void **)((char *)v21 + 1);
          if (!--v18) {
            goto LABEL_31;
          }
        }
        goto LABEL_43;
      }
LABEL_31:
      if (*(char *)(a5 + 151) < 0)
      {
        operator delete(*(void **)(a5 + 128));
        if ((*(char *)(a5 + 119) & 0x80000000) == 0)
        {
LABEL_33:
          if ((*(char *)(a5 + 95) & 0x80000000) == 0) {
            goto LABEL_34;
          }
          goto LABEL_39;
        }
      }
      else if ((*(char *)(a5 + 119) & 0x80000000) == 0)
      {
        goto LABEL_33;
      }
      operator delete(*(void **)(a5 + 96));
      if ((*(char *)(a5 + 95) & 0x80000000) == 0)
      {
LABEL_34:
        if ((*(char *)(a5 + 55) & 0x80000000) == 0) {
          goto LABEL_35;
        }
        goto LABEL_40;
      }
LABEL_39:
      operator delete(*(void **)(a5 + 72));
      if ((*(char *)(a5 + 55) & 0x80000000) == 0)
      {
LABEL_35:
        if (*(char *)(a5 + 23) < 0) {
          goto LABEL_41;
        }
        goto LABEL_12;
      }
LABEL_40:
      operator delete(*(void **)(a5 + 32));
      if (*(char *)(a5 + 23) < 0) {
LABEL_41:
      }
        operator delete(*(void **)a5);
LABEL_12:
      ++v13;
    }
    while (v13 != v14);
  }
LABEL_42:
  sub_6F30A4(a5);
LABEL_43:
  if (v36 < 0)
  {
    operator delete(v35);
    if ((v34 & 0x80000000) == 0)
    {
LABEL_45:
      if ((v32 & 0x80000000) == 0) {
        goto LABEL_46;
      }
      goto LABEL_51;
    }
  }
  else if ((v34 & 0x80000000) == 0)
  {
    goto LABEL_45;
  }
  operator delete(v33);
  if ((v32 & 0x80000000) == 0)
  {
LABEL_46:
    if ((v30 & 0x80000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_52;
  }
LABEL_51:
  operator delete(v31);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_47:
    if (((char)v28 & 0x80000000) == 0) {
      return;
    }
LABEL_53:
    operator delete(v27[0]);
    return;
  }
LABEL_52:
  operator delete(v29);
  if ((char)v28 < 0) {
    goto LABEL_53;
  }
}

void sub_83A8A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, char a17)
{
}

void sub_83A8F0(uint64_t *a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v9 = *(a2[1] - 1);
  uint64_t v10 = sub_2D5D58(*a1, v9 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v8 + 7772))
  {
    uint64_t v11 = sub_2DB8E0(v8 + 3896, v9, 0);
    unint64_t v12 = &v11[-*(int *)v11];
    if (*(unsigned __int16 *)v12 < 5u)
    {
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v13 = *((unsigned __int16 *)v12 + 2);
      if (v13) {
        v13 += (uint64_t)&v11[*(unsigned int *)&v11[v13]];
      }
    }
    uint64_t v14 = v13 + 4 * WORD2(v9) + 4 + *(unsigned int *)(v13 + 4 * WORD2(v9) + 4);
  }
  else
  {
    uint64_t v14 = 0;
  }
  v53[0] = v10;
  v53[1] = v14;
  v53[2] = sub_2E5C38(v8, v9 & 0xFFFFFFFFFFFFLL, 1);
  v53[3] = v15;
  int v54 = v9;
  __int16 v55 = WORD2(v9);
  BOOL v56 = (v9 & 0xFF000000000000) != 0;
  uint64_t v16 = *a1;
  uint64_t v17 = **a2;
  uint64_t v18 = sub_2D5D58(*a1, v17 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v16 + 7772))
  {
    uint64_t v19 = sub_2DB8E0(v16 + 3896, v17, 0);
    unint64_t v20 = &v19[-*(int *)v19];
    if (*(unsigned __int16 *)v20 < 5u)
    {
      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v21 = *((unsigned __int16 *)v20 + 2);
      if (v21) {
        v21 += (uint64_t)&v19[*(unsigned int *)&v19[v21]];
      }
    }
    uint64_t v22 = v21 + 4 * WORD2(v17) + 4 + *(unsigned int *)(v21 + 4 * WORD2(v17) + 4);
  }
  else
  {
    uint64_t v22 = 0;
  }
  v49[0] = v18;
  v49[1] = v22;
  v49[2] = sub_2E5C38(v16, v17 & 0xFFFFFFFFFFFFLL, 1);
  v49[3] = v23;
  int v50 = v17;
  __int16 v51 = WORD2(v17);
  BOOL v52 = (v17 & 0xFF000000000000) != 0;
  sub_6F30A4((uint64_t)v39);
  sub_6F30A4((uint64_t)v29);
  uint64_t v24 = *a2;
  uint64_t v25 = a2[1];
  v57[0] = a1;
  v57[1] = a3;
  v57[2] = v53;
  v57[3] = v49;
  v57[4] = v39;
  v57[5] = v29;
  if (v24 != v25)
  {
    do
    {
      unint64_t v26 = v24 + 1;
      if (v24 + 1 == v25) {
        break;
      }
      int v27 = sub_846548((uint64_t)v57, v24, v24 + 1);
      uint64_t v24 = v26;
    }
    while (!v27);
  }
  if (sub_6F2FD8((uint64_t)v39)) {
    unsigned __int8 v28 = (long long *)v39;
  }
  else {
    unsigned __int8 v28 = (long long *)v29;
  }
  sub_4AA8E0(a4, v28);
  if (v38 < 0)
  {
    operator delete(__p);
    if ((v36 & 0x80000000) == 0)
    {
LABEL_23:
      if ((v34 & 0x80000000) == 0) {
        goto LABEL_24;
      }
      goto LABEL_34;
    }
  }
  else if ((v36 & 0x80000000) == 0)
  {
    goto LABEL_23;
  }
  operator delete(v35);
  if ((v34 & 0x80000000) == 0)
  {
LABEL_24:
    if ((v32 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_35;
  }
LABEL_34:
  operator delete(v33);
  if ((v32 & 0x80000000) == 0)
  {
LABEL_25:
    if ((v30 & 0x80000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_36;
  }
LABEL_35:
  operator delete(v31);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_26:
    if ((v48 & 0x80000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_37;
  }
LABEL_36:
  operator delete(v29[0]);
  if ((v48 & 0x80000000) == 0)
  {
LABEL_27:
    if ((v46 & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_38;
  }
LABEL_37:
  operator delete(v47);
  if ((v46 & 0x80000000) == 0)
  {
LABEL_28:
    if ((v44 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v45);
  if ((v44 & 0x80000000) == 0)
  {
LABEL_29:
    if ((v42 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v43);
  if ((v42 & 0x80000000) == 0)
  {
LABEL_30:
    if ((v40 & 0x80000000) == 0) {
      return;
    }
LABEL_41:
    operator delete(v39[0]);
    return;
  }
LABEL_40:
  operator delete(v41);
  if (v40 < 0) {
    goto LABEL_41;
  }
}

void sub_83AC18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_83AC2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_83AC4C(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if (a3[3] < 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1] - *a2) >> 4))
  {
    unint64_t v9 = a3[2];
    uint64_t v35 = (uint64_t)(a1 + 1);
    while (1)
    {
      if (++v9 > a3[3])
      {
        sub_6F30A4(a5);
        return;
      }
      uint64_t v11 = (_OWORD *)sub_83BFE4(a2, v9);
      long long v13 = v11[1];
      long long v12 = v11[2];
      v44[0] = *v11;
      v44[1] = v13;
      _OWORD v44[2] = v12;
      uint64_t v14 = *a1;
      unint64_t v15 = sub_2E48C4((int **)v44 + 1);
      unsigned int v16 = v15;
      uint64_t v17 = sub_290DEC(v14 + 3896, v15, 1);
      if (v17
        && (uint64_t v18 = &v17[-*(int *)v17], *(unsigned __int16 *)v18 >= 7u)
        && (uint64_t v19 = *((unsigned __int16 *)v18 + 3)) != 0
        && (uint64_t v20 = (uint64_t)&v17[4 * HIDWORD(v15) + v19 + *(unsigned int *)&v17[v19]],
            uint64_t v21 = (int *)(v20 + 4 + *(unsigned int *)(v20 + 4)),
            uint64_t v22 = (unsigned __int16 *)((char *)v21 - *v21),
            *v22 >= 9u)
        && (uint64_t v23 = v22[4]) != 0
        && (unsigned int v24 = *(int *)((char *)v21 + v23), v24 != -1))
      {
        unsigned int v25 = sub_2E6AA8(v14, v16);
        sub_58F194(v14, v25, v24, 1u, (uint64_t)&__p);
      }
      else
      {
        long long __p = 0;
        char v42 = 0;
        uint64_t v43 = 0;
      }
      v40[0] = a2;
      v40[1] = a3;
      if (sub_83C214(v40, (uint64_t *)&__p))
      {
        sub_6F30A4(a5);
LABEL_26:
        char v29 = 0;
        char v30 = (void **)__p;
        if (!__p) {
          goto LABEL_5;
        }
        goto LABEL_40;
      }
      uint64_t v37 = 0;
      char v38 = 0;
      uint64_t v39 = 0;
      sub_6F8CDC(v35, (unsigned __int8 **)&__p, (uint64_t *)&v37, a4, a5);
      unint64_t v26 = (void **)v37;
      if (v37)
      {
        int v27 = v38;
        unsigned __int8 v28 = v37;
        if (v38 != v37)
        {
          do
          {
            if (*((char *)v27 - 9) < 0) {
              operator delete(*(v27 - 4));
            }
            v27 -= 5;
          }
          while (v27 != v26);
          unsigned __int8 v28 = v37;
        }
        char v38 = v26;
        operator delete(v28);
      }
      if (sub_6F2FD8(a5)) {
        goto LABEL_26;
      }
      if (*(char *)(a5 + 151) < 0)
      {
        operator delete(*(void **)(a5 + 128));
        if ((*(char *)(a5 + 119) & 0x80000000) == 0)
        {
LABEL_30:
          if ((*(char *)(a5 + 95) & 0x80000000) == 0) {
            goto LABEL_31;
          }
          goto LABEL_37;
        }
      }
      else if ((*(char *)(a5 + 119) & 0x80000000) == 0)
      {
        goto LABEL_30;
      }
      operator delete(*(void **)(a5 + 96));
      if ((*(char *)(a5 + 95) & 0x80000000) == 0)
      {
LABEL_31:
        if (*(char *)(a5 + 55) < 0) {
          goto LABEL_38;
        }
        goto LABEL_32;
      }
LABEL_37:
      operator delete(*(void **)(a5 + 72));
      if (*(char *)(a5 + 55) < 0)
      {
LABEL_38:
        operator delete(*(void **)(a5 + 32));
        if ((*(char *)(a5 + 23) & 0x80000000) == 0)
        {
LABEL_33:
          char v29 = 1;
          char v30 = (void **)__p;
          if (!__p) {
            goto LABEL_5;
          }
          goto LABEL_40;
        }
        goto LABEL_39;
      }
LABEL_32:
      if ((*(char *)(a5 + 23) & 0x80000000) == 0) {
        goto LABEL_33;
      }
LABEL_39:
      operator delete(*(void **)a5);
      char v29 = 1;
      char v30 = (void **)__p;
      if (!__p) {
        goto LABEL_5;
      }
LABEL_40:
      uint64_t v31 = v42;
      uint64_t v10 = v30;
      if (v42 != v30)
      {
        while (1)
        {
          if (*((char *)v31 - 1) < 0)
          {
            operator delete(*(v31 - 3));
            if (*((char *)v31 - 33) < 0)
            {
LABEL_58:
              operator delete(*(v31 - 7));
              char v32 = (void **)*(v31 - 10);
              if (!v32)
              {
LABEL_59:
                if (*((char *)v31 - 89) < 0) {
                  goto LABEL_42;
                }
                goto LABEL_60;
              }
              goto LABEL_47;
            }
          }
          else if (*((char *)v31 - 33) < 0)
          {
            goto LABEL_58;
          }
          char v32 = (void **)*(v31 - 10);
          if (!v32) {
            goto LABEL_59;
          }
LABEL_47:
          uint64_t v33 = (void **)*(v31 - 9);
          if (v33 == v32)
          {
            *(v31 - 9) = v32;
            operator delete(v32);
            if (*((char *)v31 - 89) < 0) {
              goto LABEL_42;
            }
            goto LABEL_60;
          }
          do
          {
            while (*((char *)v33 - 9) < 0)
            {
              operator delete(*(v33 - 4));
              if (*((char *)v33 - 33) < 0) {
                goto LABEL_54;
              }
LABEL_51:
              v33 -= 7;
              if (v33 == v32) {
                goto LABEL_55;
              }
            }
            if ((*((char *)v33 - 33) & 0x80000000) == 0) {
              goto LABEL_51;
            }
LABEL_54:
            operator delete(*(v33 - 7));
            v33 -= 7;
          }
          while (v33 != v32);
LABEL_55:
          char v34 = *(v31 - 10);
          *(v31 - 9) = v32;
          operator delete(v34);
          if (*((char *)v31 - 89) < 0)
          {
LABEL_42:
            operator delete(*(v31 - 14));
            if ((*((char *)v31 - 113) & 0x80000000) == 0) {
              goto LABEL_43;
            }
LABEL_61:
            operator delete(*(v31 - 17));
            v31 -= 18;
            if (v31 == v30)
            {
LABEL_3:
              uint64_t v10 = __p;
              break;
            }
          }
          else
          {
LABEL_60:
            if (*((char *)v31 - 113) < 0) {
              goto LABEL_61;
            }
LABEL_43:
            v31 -= 18;
            if (v31 == v30) {
              goto LABEL_3;
            }
          }
        }
      }
      char v42 = v30;
      operator delete(v10);
LABEL_5:
      if ((v29 & 1) == 0) {
        return;
      }
    }
  }

  sub_6F30A4(a5);
}

void sub_83B04C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_4A50F4(v10);
  sub_53BD98((void **)va);
  _Unwind_Resume(a1);
}

void sub_83B068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va1, a5);
  va_start(va, a5);
  uint64_t v6 = va_arg(va1, void *);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  sub_2DE7D0((void **)va);
  sub_53BD98((void **)va1);
  _Unwind_Resume(a1);
}

void sub_83B084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_53BD98((void **)va);
  _Unwind_Resume(a1);
}

void sub_83B098(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char **a5@<X8>)
{
  if (*(void *)(a3 + 16) == -1)
  {
    *a5 = 0;
    a5[1] = 0;
    a5[2] = 0;
  }
  else
  {
    uint64_t v8 = nullsub_1(a2);
    a5[1] = 0;
    a5[2] = 0;
    *a5 = 0;
    unint64_t v9 = *(void *)(a3 + 40);
    uint64_t v58 = a3;
    unint64_t v10 = *(void *)(a3 + 16);
    if (v9 <= v10) {
      uint64_t v11 = *(void *)(a3 + 16);
    }
    else {
      uint64_t v11 = *(void *)(a3 + 40);
    }
    if (v9 < v10)
    {
      long long v12 = (void *)v8;
      __int16 v55 = (void *)v8;
      uint64_t v60 = (48 * v9) | 4;
      BOOL v56 = a5;
LABEL_8:
      sub_68F4F8(*a1, *(unsigned int *)(*v12 + 48 * v9) | ((unint64_t)(*(_DWORD *)(*v12 + 48 * v9 + 4) & 0x1FFFFFFF) << 32), &v70);
      uint64_t v14 = v70;
      long long v13 = v71;
      if (v70 == v71)
      {
        if (!v70) {
          goto LABEL_7;
        }
        goto LABEL_71;
      }
      while (1)
      {
        unint64_t v15 = (int *)sub_2DBC9C(*a1, *v14);
        unsigned int v16 = (unsigned __int16 *)((char *)v15 - *v15);
        if (*v16 >= 5u)
        {
          uint64_t v17 = v16[2];
          if (v17)
          {
            if (*((unsigned char *)v15 + v17) == 4) {
              break;
            }
          }
        }
LABEL_11:
        if (++v14 == v13)
        {
          uint64_t v14 = v70;
          if (v70)
          {
LABEL_71:
            uint64_t v71 = v14;
            operator delete(v14);
          }
LABEL_7:
          ++v9;
          v60 += 48;
          if (v9 == v11) {
            return;
          }
          goto LABEL_8;
        }
      }
      uint64_t v18 = *a1;
      unint64_t v19 = *v14;
      uint64_t v68 = 0;
      uint64_t v69 = 0;
      uint64_t v67 = 0;
      uint64_t v20 = (int *)sub_2DBC9C(v18, v19);
      uint64_t v21 = (unsigned __int16 *)((char *)v20 - *v20);
      if (*v21 >= 7u)
      {
        uint64_t v22 = v21[3];
        if (v22)
        {
          uint64_t v23 = (unsigned int *)((char *)v20 + v22 + *(unsigned int *)((char *)v20 + v22));
          uint64_t v24 = *v23;
          if (v24)
          {
            uint64_t v25 = 8 * v24;
            unint64_t v26 = (char *)operator new(8 * v24);
            uint64_t v67 = v26;
            uint64_t v68 = v26;
            uint64_t v69 = &v26[8 * v24];
            int v27 = (uint64_t *)(v23 + 1);
            do
            {
              uint64_t v28 = *v27;
              unint64_t v29 = HIDWORD(*v27);
              LODWORD(__p[0]) = *v27;
              WORD2(__p[0]) = v29;
              BYTE6(__p[0]) = (v28 & 0xFF000000000000) == 0;
              unint64_t v26 = sub_2D6254((unint64_t *)&v67, v26, (int *)__p) + 8;
              ++v27;
              v25 -= 8;
            }
            while (v25);
          }
        }
      }
      char v30 = (char *)v67;
      if (-(uint64_t)v9 - 0x5555555555555555 * ((uint64_t)(v12[1] - *v12) >> 4) < (unint64_t)((v68 - (unsigned char *)v67) >> 3))
      {
LABEL_68:
        if (v30)
        {
          uint64_t v68 = v30;
          operator delete(v30);
        }
        goto LABEL_11;
      }
      if (v67 != v68)
      {
        uint64_t v31 = (_DWORD *)(*v12 + v60);
        char v32 = (char *)v67;
        while (*(_DWORD *)v32 == *(v31 - 1)
             && *((unsigned __int16 *)v32 + 2) == (unsigned __int16)*v31
             && ((*v31 & 0x20000000) == 0) != (v32[6] == 0))
        {
          v31 += 12;
          v32 += 8;
          if (v32 == v68) {
            goto LABEL_27;
          }
        }
        goto LABEL_68;
      }
LABEL_27:
      uint64_t v33 = (int *)sub_2DBC9C(*a1, *v14);
      v65[0] = 0;
      v65[1] = 0;
      uint64_t v66 = 0;
      char v34 = (unsigned __int16 *)((char *)v33 - *v33);
      unsigned int v35 = *v34;
      if (v35 < 5 || !v34[2] || *((unsigned char *)v33 + v34[2]) != 4) {
        goto LABEL_40;
      }
      if (v35 < 0xD)
      {
        char v36 = 0;
        uint64_t v37 = (_WORD *)(&loc_1120530 + 1);
        if (*(unsigned __int16 *)((char *)&loc_1120530 + 1) < 7u) {
          goto LABEL_38;
        }
      }
      else
      {
        char v36 = (int *)v34[6];
        if (v36) {
          char v36 = (int *)((char *)v36 + (void)v33 + *(unsigned int *)((char *)v36 + (void)v33));
        }
        uint64_t v37 = (unsigned __int16 *)((char *)v36 - *v36);
        if (*v37 < 7u) {
          goto LABEL_38;
        }
      }
      uint64_t v38 = v37[3];
      if (v38)
      {
        uint64_t v39 = (unsigned int *)((char *)v36 + v38 + *(unsigned int *)((char *)v36 + v38));
LABEL_39:
        sub_767A8(v39, (uint64_t)__p);
        *(_OWORD *)long long v65 = *(_OWORD *)__p;
        uint64_t v66 = v62;
LABEL_40:
        sub_6FB468((char *)v65, a4, (int64x2_t *)__p);
        if (sub_6F33A4((uint64_t)__p))
        {
          unint64_t v41 = v67;
          char v42 = v68;
          unint64_t v43 = *(void *)(v58 + 16);
          if ((unint64_t)(-1 - 0x5555555555555555 * ((uint64_t)(v12[1] - *v12) >> 4)) >= *(void *)(v58 + 24)) {
            uint64_t v44 = *(void *)(v58 + 24);
          }
          else {
            uint64_t v44 = -1 - 0x5555555555555555 * ((uint64_t)(v12[1] - *v12) >> 4);
          }
          uint64_t v45 = sub_471074(a2, v9, 1, v44, 1u, v40);
          if (v43 >= v9 + ((v42 - v41) >> 3)) {
            uint64_t v47 = v9 + ((v42 - v41) >> 3);
          }
          else {
            uint64_t v47 = v43;
          }
          *((void *)&v63 + 1) = v45;
          uint64_t v64 = sub_471074(a2, v47, 1, v44, 1u, v46);
          char v48 = v56[1];
          if (v48 >= v56[2])
          {
            int v50 = sub_840C9C(v56, (uint64_t)__p);
            long long v12 = v55;
          }
          else
          {
            long long v12 = v55;
            if (SHIBYTE(v62) < 0)
            {
              sub_4200(v56[1], __p[0], (unint64_t)__p[1]);
            }
            else
            {
              long long v49 = *(_OWORD *)__p;
              *((void *)v48 + 2) = v62;
              *(_OWORD *)char v48 = v49;
            }
            long long v51 = v63;
            *((void *)v48 + 5) = v64;
            *(_OWORD *)(v48 + 24) = v51;
            int v50 = v48 + 48;
            v56[1] = v48 + 48;
          }
          v56[1] = v50;
        }
        if (SHIBYTE(v62) < 0)
        {
          operator delete(__p[0]);
          BOOL v52 = (void **)v65[0];
          if (!v65[0])
          {
LABEL_67:
            char v30 = (char *)v67;
            goto LABEL_68;
          }
        }
        else
        {
          BOOL v52 = (void **)v65[0];
          if (!v65[0]) {
            goto LABEL_67;
          }
        }
        unsigned int v53 = (void **)v65[1];
        int v54 = v52;
        if (v65[1] == v52)
        {
LABEL_66:
          v65[1] = v52;
          operator delete(v54);
          goto LABEL_67;
        }
        while (1)
        {
          if (*((char *)v53 - 1) < 0)
          {
            operator delete(*(v53 - 3));
            if ((*((char *)v53 - 25) & 0x80000000) == 0) {
              goto LABEL_61;
            }
LABEL_64:
            operator delete(*(v53 - 6));
            v53 -= 6;
            if (v53 == v52)
            {
LABEL_65:
              int v54 = (void **)v65[0];
              goto LABEL_66;
            }
          }
          else
          {
            if (*((char *)v53 - 25) < 0) {
              goto LABEL_64;
            }
LABEL_61:
            v53 -= 6;
            if (v53 == v52) {
              goto LABEL_65;
            }
          }
        }
      }
LABEL_38:
      uint64_t v39 = 0;
      goto LABEL_39;
    }
  }
}

void sub_83B58C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void **a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30)
{
  *(void *)(v30 + 8) = v31;
  if (a22 < 0) {
    operator delete(__p);
  }
  sub_1A6DC(&a26);
  if (a29)
  {
    a30 = (uint64_t)a29;
    operator delete(a29);
  }
  char v34 = *(void **)(v32 - 112);
  if (!v34)
  {
    sub_A43C(a11);
    _Unwind_Resume(a1);
  }
  *(void *)(v32 - 104) = v34;
  operator delete(v34);
  sub_A43C(a11);
  _Unwind_Resume(a1);
}

void sub_83B674(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int64x2_t *a6@<X8>)
{
  unint64_t v6 = *(void *)(a3 + 16);
  if (v6 == -1 || (unint64_t v8 = *(void *)(a3 + 24), v8 >= 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4)))
  {
    a6->i64[0] = 0;
    a6->i64[1] = 0;
    a6[1].i64[0] = 0;
    return;
  }
  long long v115 = 0;
  int v116 = 0;
  int v117 = 0;
  unint64_t v11 = *(void *)(a3 + 32);
  if (v11 == -1)
  {
    if (v6 <= v8 + 1) {
      unint64_t v14 = v8 + 1;
    }
    else {
      unint64_t v14 = v6;
    }
    if (v6 > v8) {
      goto LABEL_59;
    }
    while (1)
    {
      unsigned int v16 = (unsigned int *)sub_83BFE4(a2, v6);
      unint64_t v17 = (((unint64_t)(v16[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v16[1] << 32) | *v16) ^ 0x1000000000000;
      uint64_t v18 = v116;
      if (v116 < v117)
      {
        *(void *)int v116 = v17;
        unint64_t v15 = (char *)(v18 + 1);
      }
      else
      {
        unint64_t v19 = v115;
        uint64_t v20 = (v116 - (unsigned char *)v115) >> 3;
        unint64_t v21 = v20 + 1;
        if ((unint64_t)(v20 + 1) >> 61) {
          sub_2E00();
        }
        uint64_t v22 = v117 - (unsigned char *)v115;
        if ((v117 - (unsigned char *)v115) >> 2 > v21) {
          unint64_t v21 = v22 >> 2;
        }
        if ((unint64_t)v22 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v23 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v23 = v21;
        }
        if (v23)
        {
          if (v23 >> 61) {
            sub_188D718();
          }
          uint64_t v24 = (char *)operator new(8 * v23);
          uint64_t v25 = &v24[8 * v20];
          *(void *)uint64_t v25 = v17;
          unint64_t v15 = v25 + 8;
          if (v18 != v19)
          {
            do
            {
LABEL_25:
              int v27 = *((_DWORD *)v18-- - 2);
              int v28 = *(_DWORD *)((char *)v18 + 3);
              *((_DWORD *)v25 - 2) = v27;
              v25 -= 8;
              *(_DWORD *)(v25 + 3) = v28;
            }
            while (v18 != v19);
            uint64_t v18 = v19;
            long long v115 = v25;
            int v117 = &v24[8 * v23];
            if (!v19) {
              goto LABEL_12;
            }
LABEL_29:
            operator delete(v18);
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t v24 = 0;
          uint64_t v25 = (char *)(8 * v20);
          unint64_t v26 = (unint64_t *)(8 * v20);
          unint64_t *v26 = v17;
          unint64_t v15 = (char *)(v26 + 1);
          if (v18 != v19) {
            goto LABEL_25;
          }
        }
        long long v115 = v25;
        int v117 = &v24[8 * v23];
        if (v18) {
          goto LABEL_29;
        }
      }
LABEL_12:
      int v116 = v15;
      if (++v6 == v14) {
        goto LABEL_59;
      }
    }
  }
  long long v12 = (unsigned int *)sub_83BFE4(a2, v11);
  unint64_t v13 = (((unint64_t)(v12[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v12[1] << 32) | *v12) ^ 0x1000000000000;
  uint64_t v29 = (v116 - (unsigned char *)v115) >> 3;
  unint64_t v30 = v29 + 1;
  if ((unint64_t)(v29 + 1) >> 61) {
    sub_2E00();
  }
  uint64_t v31 = v117 - (unsigned char *)v115;
  if ((v117 - (unsigned char *)v115) >> 2 > v30) {
    unint64_t v30 = v31 >> 2;
  }
  if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v32 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v32 = v30;
  }
  if (v32)
  {
    if (v32 >> 61) {
      sub_188D718();
    }
    uint64_t v33 = (char *)operator new(8 * v32);
    char v34 = (unint64_t *)&v33[8 * v29];
    unsigned int v35 = &v33[8 * v32];
    *char v34 = v13;
    char v36 = (char *)(v34 + 1);
  }
  else
  {
    char v34 = (unint64_t *)(8 * v29);
    unsigned int v35 = 0;
    long long v49 = (unint64_t *)(8 * v29);
    unint64_t *v49 = v13;
    char v36 = (char *)(v49 + 1);
  }
  long long v115 = v34;
  int v117 = v35;
  int v116 = v36;
  uint64_t v37 = (unsigned int *)sub_83BFE4(a2, *(void *)(a3 + 32) + 1);
  unint64_t v38 = (((unint64_t)(v37[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v37[1] << 32) | *v37) ^ 0x1000000000000;
  uint64_t v39 = v36;
  if (v36 >= v117)
  {
    unint64_t v41 = (char *)v115;
    uint64_t v42 = (v116 - (unsigned char *)v115) >> 3;
    unint64_t v43 = v42 + 1;
    if ((unint64_t)(v42 + 1) >> 61) {
      sub_2E00();
    }
    uint64_t v44 = v117 - (unsigned char *)v115;
    if ((v117 - (unsigned char *)v115) >> 2 > v43) {
      unint64_t v43 = v44 >> 2;
    }
    if ((unint64_t)v44 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v45 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v45 = v43;
    }
    if (v45)
    {
      if (v45 >> 61) {
        sub_188D718();
      }
      double v46 = (char *)operator new(8 * v45);
      uint64_t v47 = &v46[8 * v42];
      char v48 = &v46[8 * v45];
      *(void *)uint64_t v47 = v38;
      double v40 = v47 + 8;
      if (v39 == v41) {
        goto LABEL_56;
      }
    }
    else
    {
      uint64_t v47 = (char *)(8 * v42);
      char v48 = 0;
      int v50 = (unint64_t *)(8 * v42);
      *int v50 = v38;
      double v40 = (char *)(v50 + 1);
      if (v39 == v41) {
        goto LABEL_56;
      }
    }
    do
    {
      int v51 = *((_DWORD *)v39 - 2);
      v39 -= 8;
      int v52 = *(_DWORD *)(v39 + 3);
      *((_DWORD *)v47 - 2) = v51;
      v47 -= 8;
      *(_DWORD *)(v47 + 3) = v52;
    }
    while (v39 != v41);
    uint64_t v39 = v41;
LABEL_56:
    long long v115 = v47;
    int v117 = v48;
    if (v39) {
      operator delete(v39);
    }
    goto LABEL_58;
  }
  *(void *)int v116 = v38;
  double v40 = v36 + 8;
LABEL_58:
  int v116 = v40;
LABEL_59:
  unsigned int v53 = 0;
  int v54 = 0;
  long long __p = 0;
  long long v114 = 0uLL;
  unint64_t v56 = *(void *)(a3 + 16);
  unint64_t v55 = *(void *)(a3 + 24);
  if (v56 <= v55) {
    uint64_t v57 = *(void *)(a3 + 24);
  }
  else {
    uint64_t v57 = *(void *)(a3 + 16);
  }
  if (v56 < v55)
  {
    do
    {
      sub_83C394(a1, a2, v56, (uint64_t)&v115, a5, (uint64_t *)&v111);
      uint64_t v69 = (void **)__p;
      if (__p)
      {
        uint64_t v70 = (void **)v114;
        uint64_t v71 = __p;
        if ((void *)v114 != __p)
        {
          do
            uint64_t v70 = sub_2DF518(v70 - 16);
          while (v70 != v69);
          uint64_t v71 = __p;
        }
        *(void *)&long long v114 = v69;
        operator delete(v71);
      }
      int v54 = (void **)v111;
      long long __p = v111;
      long long v114 = v112;
      unsigned int v53 = (void **)v112;
      ++v56;
    }
    while (v111 == (void *)v112 && v56 != v57);
  }
  unsigned int v58 = *(_DWORD *)(a3 + 160);
  BOOL v59 = v58 > 0x3F;
  unint64_t v60 = (1 << v58) & 0xF000000000000006;
  BOOL v61 = v59 || v60 == 0;
  if (!v61 && !*(unsigned char *)(a3 + 894) && !*(unsigned char *)(a3 + 893) && !*(unsigned char *)(a3 + 892))
  {
    switch(*(_DWORD *)(a3 + 1860))
    {
      case 0:
        break;
      case 1:
        uint64_t v62 = a1 + 7;
        if (v54 == v53) {
          goto LABEL_84;
        }
        goto LABEL_72;
      case 2:
        uint64_t v62 = a1 + 8;
        if (v54 == v53) {
          goto LABEL_84;
        }
        goto LABEL_72;
      default:
        uint64_t v62 = a1 + 9;
        if (v54 == v53) {
          goto LABEL_84;
        }
        goto LABEL_72;
    }
  }
  uint64_t v62 = a1 + 6;
  if (v54 != v53)
  {
LABEL_72:
    long long v63 = v53;
    unint64_t v64 = (char *)v53 - (char *)v54 - 128;
    long long v65 = a6;
    if (v64 < 0x80) {
      goto LABEL_73;
    }
LABEL_99:
    uint64_t v82 = 0;
    uint64_t v83 = 0;
    uint64_t v84 = (v64 >> 7) + 1;
    uint64_t v67 = &v54[16 * (v84 & 0x3FFFFFFFFFFFFFELL)];
    uint64_t v85 = (char *)v54 + 177;
    uint64_t v86 = v84 & 0x3FFFFFFFFFFFFFELL;
    do
    {
      if (!*(v85 - 128)) {
        ++v82;
      }
      if (!*v85) {
        ++v83;
      }
      v85 += 256;
      v86 -= 2;
    }
    while (v86);
    uint64_t v66 = v83 + v82;
    if (v84 != (v84 & 0x3FFFFFFFFFFFFFELL)) {
      goto LABEL_106;
    }
    goto LABEL_109;
  }
LABEL_84:
  uint64_t v72 = *v62;
  if (*v62 < 1)
  {
LABEL_143:
    a6->i64[0] = 0;
    a6->i64[1] = 0;
    a6[1].i64[0] = 0;
    if (!v53) {
      goto LABEL_148;
    }
    goto LABEL_144;
  }
  uint64_t v73 = 0;
  uint64_t v74 = *(unsigned int *)(a3 + 16);
  while (1)
  {
    if ((int)v74 < 1 || (int)v74 <= *(_DWORD *)(a3 + 40)) {
      goto LABEL_143;
    }
    sub_83C394(a1, a2, --v74, (uint64_t)&v115, a5, (uint64_t *)&v111);
    unsigned int v76 = (void **)__p;
    if (__p)
    {
      uint64_t v77 = (void **)v114;
      uint64_t v78 = __p;
      if ((void *)v114 != __p)
      {
        do
          uint64_t v77 = sub_2DF518(v77 - 16);
        while (v77 != v76);
        uint64_t v78 = __p;
      }
      *(void *)&long long v114 = v76;
      operator delete(v78);
    }
    unsigned int v53 = (void **)v111;
    long long __p = v111;
    long long v114 = v112;
    uint64_t v79 = *(int **)(*a2 + 48 * v74 + 8);
    uint64_t v80 = (unsigned __int16 *)((char *)v79 - *v79);
    if (*v80 < 9u || (uint64_t v81 = v80[4]) == 0)
    {
      uint64_t v75 = 0;
      long long v63 = (void **)v112;
      if (v111 != (void *)v112) {
        break;
      }
      goto LABEL_87;
    }
    uint64_t v75 = *(unsigned int *)((char *)v79 + v81);
    long long v63 = (void **)v112;
    if (v111 != (void *)v112) {
      break;
    }
LABEL_87:
    v73 += v75;
    if (v73 >= v72) {
      goto LABEL_143;
    }
  }
  int v54 = (void **)v111;
  unint64_t v64 = (char *)v63 - (unsigned char *)v111 - 128;
  long long v65 = a6;
  if (v64 >= 0x80) {
    goto LABEL_99;
  }
LABEL_73:
  uint64_t v66 = 0;
  uint64_t v67 = v54;
  do
  {
LABEL_106:
    if (!*((unsigned char *)v67 + 49)) {
      ++v66;
    }
    v67 += 16;
  }
  while (v67 != v63);
LABEL_109:
  sub_83C804(a1, a2, *(void *)(a3 + 24), (uint64_t *)&v111);
  char v108 = 0;
  int v109 = 0;
  unint64_t v110 = 0;
  int v88 = (unsigned __int8 **)__p;
  long long v87 = (unsigned __int8 **)v114;
  if (__p == (void *)v114) {
    goto LABEL_130;
  }
  while (2)
  {
    unint64_t v90 = v65;
    int v91 = (unsigned __int8 **)v111;
    char v92 = (unsigned __int8 **)v112;
    if (v111 == (void *)v112)
    {
LABEL_121:
      long long v65 = v90;
      if (v91 != (unsigned __int8 **)v112) {
        goto LABEL_122;
      }
LABEL_124:
      char v96 = v109;
      if ((unint64_t)v109 >= v110)
      {
        double v89 = (void **)sub_840770((uint64_t *)&v108, (uint64_t)v88);
      }
      else
      {
        sub_840970((uint64_t)v109, (uint64_t)v88);
        double v89 = v96 + 16;
      }
      int v109 = v89;
    }
    else
    {
      do
      {
        char v94 = *v88;
        float64x2_t v93 = v88[1];
        char v95 = *v91;
        if (v93 - *v88 == v91[1] - *v91)
        {
          if (v94 == v93) {
            goto LABEL_121;
          }
          while (sub_524DC(v94, v95))
          {
            v94 += 48;
            v95 += 48;
            if (v94 == v93) {
              goto LABEL_121;
            }
          }
        }
        v91 += 16;
      }
      while (v91 != v92);
      long long v65 = v90;
      if (v92 == (unsigned __int8 **)v112) {
        goto LABEL_124;
      }
LABEL_122:
      if (v66 == 1 && !*((unsigned char *)v88 + 49)) {
        goto LABEL_124;
      }
    }
    v88 += 16;
    if (v88 != v87) {
      continue;
    }
    break;
  }
  if (v108 != v109)
  {
    sub_6F9D78((uint64_t)(a1 + 1), (uint64_t *)&v108, a4, v65);
    goto LABEL_131;
  }
LABEL_130:
  sub_6F9D78((uint64_t)(a1 + 1), (uint64_t *)&__p, a4, v65);
LABEL_131:
  char v97 = (void **)v108;
  if (v108)
  {
    char v98 = v109;
    char v99 = v108;
    if (v109 != v108)
    {
      do
        char v98 = sub_2DF518(v98 - 16);
      while (v98 != v97);
      char v99 = v108;
    }
    int v109 = v97;
    operator delete(v99);
  }
  unint64_t v100 = (void **)v111;
  if (v111)
  {
    char v101 = (void **)v112;
    unint64_t v102 = v111;
    if ((void *)v112 != v111)
    {
      do
        char v101 = sub_2DF518(v101 - 16);
      while (v101 != v100);
      unint64_t v102 = v111;
    }
    *(void *)&long long v112 = v100;
    operator delete(v102);
  }
  unsigned int v53 = (void **)__p;
  if (__p)
  {
LABEL_144:
    char v103 = (void **)v114;
    char v104 = v53;
    if ((void **)v114 != v53)
    {
      do
        char v103 = sub_2DF518(v103 - 16);
      while (v103 != v53);
      char v104 = __p;
    }
    *(void *)&long long v114 = v53;
    operator delete(v104);
  }
LABEL_148:
  if (v115)
  {
    int v116 = (char *)v115;
    operator delete(v115);
  }
}

void sub_83BF5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
  {
    a23 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_83BFE4(void *a1, unint64_t a2)
{
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 4) <= a2)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v16, a2);
    unint64_t v6 = std::string::insert(&v16, 0, "Out-of-bounds access in Vector::at with index=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v17.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    unint64_t v8 = std::string::append(&v17, ",size=");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v15, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 4));
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v10 = &v15;
    }
    else {
      unint64_t v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    long long v12 = std::string::append(&v18, (const std::string::value_type *)v10, size);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v12->__r_.__value_.__r.__words[2];
    long long v19 = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    unint64_t v14 = (void *)sub_2F404((uint64_t)exception, &v19);
  }
  return *a1 + 48 * a2;
}

void sub_83C134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(__p);
  goto LABEL_11;
}

uint64_t sub_83C214(void **a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  if (*a2 != v4)
  {
    while (!*(unsigned char *)(v3 + 113))
    {
      v3 += 144;
      if (v3 == v4) {
        return 0;
      }
    }
  }
  if (v3 == v4) {
    return 0;
  }
  uint64_t v5 = *(int **)(sub_83BFE4(*a1, a1[1][2]) + 8);
  unint64_t v6 = *(int **)(sub_83BFE4(*a1, a1[1][3]) + 8);
  long long v7 = (unsigned __int16 *)((char *)v5 - *v5);
  unsigned int v8 = *v7;
  if (v8 >= 0xB && v7[5])
  {
    int v9 = *((unsigned char *)v5 + v7[5] + 1) & 1;
    unint64_t v10 = (unsigned __int16 *)((char *)v6 - *v6);
    unsigned int v11 = *v10;
    if (v11 < 0xB)
    {
LABEL_14:
      if (v9) {
        return 0;
      }
      goto LABEL_16;
    }
  }
  else
  {
    int v9 = 0;
    unint64_t v10 = (unsigned __int16 *)((char *)v6 - *v6);
    unsigned int v11 = *v10;
    if (v11 < 0xB) {
      goto LABEL_14;
    }
  }
  if (!v10[5]) {
    goto LABEL_14;
  }
  if ((v9 ^ *((unsigned __int8 *)v6 + v10[5] + 1))) {
    return 0;
  }
LABEL_16:
  if (v8 >= 0xB && v7[5])
  {
    BOOL v13 = v11 < 0xB || (*(int *)((char *)v5 + v7[5]) & 0x100) == 0;
    if (!v13 && v10[5] && (*((unsigned char *)v6 + v10[5] + 1) & 1) != 0)
    {
      if (v8 < 0x2F)
      {
        LODWORD(v14) = 0;
      }
      else
      {
        uint64_t v14 = v7[23];
        if (v14) {
          LODWORD(v14) = *((unsigned __int8 *)v5 + v14) == 0;
        }
      }
      if (v11 >= 0x2F && (uint64_t v15 = v10[23]) != 0)
      {
        if ((v14 ^ (*((unsigned char *)v6 + v15) == 0))) {
          return 0;
        }
      }
      else if (v14)
      {
        return 0;
      }
    }
  }
  return 1;
}

void sub_83C394(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  *a6 = 0;
  a6[1] = 0;
  a6[2] = 0;
  sub_68F4F8(*a1, *(unsigned int *)(*a2 + 48 * a3) | ((unint64_t)(*(_DWORD *)(*a2 + 48 * a3 + 4) & 0x1FFFFFFF) << 32), &v40);
  long long v12 = v40;
  BOOL v13 = v41;
  if (v40 == v41) {
    goto LABEL_36;
  }
  do
  {
    uint64_t v14 = (int *)sub_2DBC9C(*a1, *v12);
    uint64_t v15 = (unsigned __int16 *)((char *)v14 - *v14);
    if (*v15 < 5u) {
      goto LABEL_3;
    }
    uint64_t v16 = v15[2];
    if (!v16 || *((unsigned char *)v14 + v16) != 3) {
      goto LABEL_3;
    }
    sub_68F5DC(*a1, *v12, (unint64_t *)&v38);
    std::string v17 = v38;
    uint64_t v18 = (v39 - v38) >> 3;
    if (v18 <= (unint64_t)(-a3 - 0x5555555555555555 * ((uint64_t)(a2[1] - *a2) >> 4)))
    {
      if (v38 != v39)
      {
        long long v19 = (_DWORD *)(*a2 + ((48 * a3) | 4));
        unint64_t v20 = (unint64_t)v38;
        while (*(_DWORD *)v20 == *(v19 - 1)
             && *(unsigned __int16 *)(v20 + 4) == (unsigned __int16)*v19
             && ((*v19 & 0x20000000) == 0) != (*(unsigned char *)(v20 + 6) == 0))
        {
          v19 += 12;
          v20 += 8;
          if ((unsigned char *)v20 == v39) {
            goto LABEL_16;
          }
        }
        goto LABEL_8;
      }
LABEL_16:
      unint64_t v21 = *(unint64_t **)a4;
      uint64_t v22 = *(void **)(a4 + 8);
      unint64_t v23 = (unint64_t)v38;
      uint64_t v24 = (uint64_t)v22 - *(void *)a4;
      if (v22 == *(void **)a4) {
        goto LABEL_28;
      }
      if (v18 >= v24 >> 3)
      {
        unint64_t v25 = (unint64_t)&v38[8 * v18 + 8 * (1 - (v24 >> 3))];
        if ((unsigned char *)v25 != v38)
        {
          unint64_t v28 = *v21;
          unint64_t v26 = v21 + 1;
          unint64_t v27 = v28;
          unint64_t v23 = (unint64_t)v38;
          while (__PAIR64__(*(unsigned __int16 *)(v23 + 4), *(_DWORD *)v23) != __PAIR64__(WORD2(v27), v27)
               || (HIWORD(v27) & 1) == (*(unsigned char *)(v23 + 6) == 0))
          {
LABEL_20:
            v23 += 8;
            if (v23 == v25) {
              goto LABEL_8;
            }
          }
          uint64_t v29 = 0;
          while (&v26[v29] != v22)
          {
            unint64_t v30 = v26[v29];
            if (__PAIR64__(*(unsigned __int16 *)(v23 + v29 * 8 + 12), *(_DWORD *)(v23 + v29 * 8 + 8)) == __PAIR64__(WORD2(v30), v30))
            {
              BOOL v31 = *(unsigned char *)(v23 + v29 * 8 + 14) == 0;
              ++v29;
              if ((HIWORD(v30) & 1 ^ v31)) {
                continue;
              }
            }
            goto LABEL_20;
          }
LABEL_28:
          if ((unsigned char *)v23 != v39)
          {
            sub_83C71C(a1, v12, a5, (uint64_t)&__p);
            uint64_t v32 = a5;
            sub_840434(a6, a6[1], (uint64_t)__p, (uint64_t)v37, ((char *)v37 - (unsigned char *)__p) >> 7);
            uint64_t v33 = (void **)__p;
            if (__p)
            {
              char v34 = v37;
              unsigned int v35 = __p;
              if (v37 != __p)
              {
                do
                  char v34 = sub_2DF518(v34 - 16);
                while (v34 != v33);
                unsigned int v35 = __p;
              }
              uint64_t v37 = v33;
              operator delete(v35);
            }
            std::string v17 = v38;
            a5 = v32;
          }
        }
      }
    }
LABEL_8:
    if (v17)
    {
      uint64_t v39 = v17;
      operator delete(v17);
    }
LABEL_3:
    ++v12;
  }
  while (v12 != v13);
  long long v12 = v40;
LABEL_36:
  if (v12)
  {
    unint64_t v41 = v12;
    operator delete(v12);
  }
}

void sub_83C68C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  sub_6CCDEC(&a10);
  if (__p)
  {
    a14 = (uint64_t)__p;
    operator delete(__p);
    long long v19 = a16;
    if (!a16)
    {
LABEL_3:
      sub_6CCDEC(v17);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    long long v19 = a16;
    if (!a16) {
      goto LABEL_3;
    }
  }
  a17 = (uint64_t)v19;
  operator delete(v19);
  sub_6CCDEC(v17);
  _Unwind_Resume(a1);
}

void **sub_83C71C@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v12 = a3;
  sub_6CCCD4(*a1, *a2, (uint64_t *)a4);
  long long v7 = &xmmword_25C86F8;
  if (a3) {
    long long v7 = &xmmword_25C8720;
  }
  v11[0] = a1;
  v11[1] = &v12;
  v11[2] = v7;
  double result = (void **)sub_835258(*(unsigned __int8 **)a4, *(unsigned __int8 **)(a4 + 8), (uint64_t)v11);
  int v9 = result;
  unint64_t v10 = *(void ***)(a4 + 8);
  if (v10 != result)
  {
    while (v10 != v9)
    {
      v10 -= 16;
      double result = sub_2DF518(v10);
    }
    *(void *)(a4 + 8) = v9;
  }
  return result;
}

void sub_83C7F0(_Unwind_Exception *a1)
{
  sub_6CCDEC(v1);
  _Unwind_Resume(a1);
}

void sub_83C804(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4);
  if (a3 <= v4) {
    unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4);
  }
  else {
    unint64_t v5 = a3;
  }
  unint64_t v49 = v5;
  if (v4 > a3)
  {
    unint64_t v8 = a3;
    uint64_t v9 = (48 * a3) | 4;
    do
    {
      if (a1[6] < 0) {
        return;
      }
      unint64_t v10 = *(int **)(sub_83BFE4(a2, v8) + 8);
      unsigned int v11 = (unsigned __int16 *)((char *)v10 - *v10);
      if (*v11 < 0x2Fu) {
        return;
      }
      uint64_t v12 = v11[23];
      if (!v12) {
        return;
      }
      unsigned int v13 = *((unsigned __int8 *)v10 + v12);
      BOOL v14 = v13 > 0x2A;
      uint64_t v15 = (1 << v13) & 0x50426810004;
      if (v14 || v15 == 0) {
        return;
      }
      sub_68F4F8(*a1, *(unsigned int *)(*a2 + 48 * v8) | ((unint64_t)(*(_DWORD *)(*a2 + 48 * v8 + 4) & 0x1FFFFFFF) << 32), &v55);
      uint64_t v18 = v55;
      std::string v17 = v56;
      if (v55 == v56)
      {
        if (!v55) {
          goto LABEL_6;
        }
      }
      else
      {
        do
        {
          long long v19 = (int *)sub_2DBC9C(*a1, *v18);
          unint64_t v20 = (unsigned __int16 *)((char *)v19 - *v19);
          if (*v20 >= 5u)
          {
            uint64_t v21 = v20[2];
            if (v21)
            {
              if (*((unsigned char *)v19 + v21) == 3)
              {
                uint64_t v22 = *a1;
                unint64_t v23 = *v18;
                unsigned int v53 = 0;
                int v54 = 0;
                long long __p = 0;
                uint64_t v24 = (int *)sub_2DBC9C(v22, v23);
                unint64_t v25 = (unsigned __int16 *)((char *)v24 - *v24);
                if (*v25 >= 7u)
                {
                  uint64_t v26 = v25[3];
                  if (v26)
                  {
                    unint64_t v27 = (unsigned int *)((char *)v24 + v26 + *(unsigned int *)((char *)v24 + v26));
                    uint64_t v28 = *v27;
                    if (v28)
                    {
                      uint64_t v29 = 8 * v28;
                      unint64_t v30 = (char *)operator new(8 * v28);
                      long long __p = v30;
                      unsigned int v53 = v30;
                      int v54 = &v30[8 * v28];
                      BOOL v31 = (uint64_t *)(v27 + 1);
                      do
                      {
                        uint64_t v32 = *v31;
                        unint64_t v33 = HIDWORD(*v31);
                        LODWORD(v50) = *v31;
                        WORD2(v50) = v33;
                        BYTE6(v50) = (v32 & 0xFF000000000000) == 0;
                        unint64_t v30 = sub_2D6254((unint64_t *)&__p, v30, (int *)&v50) + 8;
                        ++v31;
                        v29 -= 8;
                      }
                      while (v29);
                    }
                  }
                }
                char v34 = (char *)__p;
                uint64_t v35 = *a2;
                char v36 = (_DWORD *)(*a2 + 48 * v8);
                if (*(_DWORD *)__p != *v36) {
                  goto LABEL_17;
                }
                int v37 = v36[1];
                if (*((unsigned __int16 *)__p + 2) != (unsigned __int16)v37) {
                  goto LABEL_17;
                }
                if (((*((unsigned char *)__p + 6) == 0) ^ ((v37 & 0x20000000u) >> 29))) {
                  goto LABEL_17;
                }
                unint64_t v38 = (v53 - (unsigned char *)__p) >> 3;
                unint64_t v39 = 0xAAAAAAAAAAAAAAABLL * ((a2[1] - v35) >> 4);
                if (v38 > v39 - a3) {
                  goto LABEL_17;
                }
                unint64_t v40 = v39 - v8;
                if (v40 < v38) {
                  unint64_t v38 = v40;
                }
                if (v38)
                {
                  unint64_t v41 = (char *)__p + 8 * v38;
                  uint64_t v42 = (_DWORD *)(v35 + v9);
                  unint64_t v43 = (char *)__p;
                  while (*(_DWORD *)v43 == *(v42 - 1)
                       && *((unsigned __int16 *)v43 + 2) == (unsigned __int16)*v42
                       && ((*v42 & 0x20000000) == 0) != (v43[6] == 0))
                  {
                    v42 += 12;
                    v43 += 8;
                    if (v43 == v41)
                    {
                      if (__p) {
                        goto LABEL_17;
                      }
                      goto LABEL_18;
                    }
                  }
                  sub_6CCCD4(*a1, *v18, (uint64_t *)&v50);
                  sub_840434(a4, a4[1], (uint64_t)v50, (uint64_t)v51, ((char *)v51 - (unsigned char *)v50) >> 7);
                  uint64_t v44 = (void **)v50;
                  if (v50)
                  {
                    unint64_t v45 = v51;
                    double v46 = v50;
                    if (v51 != v50)
                    {
                      do
                        unint64_t v45 = sub_2DF518(v45 - 16);
                      while (v45 != v44);
                      double v46 = v50;
                    }
                    int v51 = v44;
                    operator delete(v46);
                  }
                  char v34 = (char *)__p;
                  if (__p) {
                    goto LABEL_17;
                  }
                }
                else
                {
LABEL_17:
                  unsigned int v53 = v34;
                  operator delete(v34);
                }
              }
            }
          }
LABEL_18:
          ++v18;
        }
        while (v18 != v17);
        uint64_t v18 = v55;
        if (!v55) {
          goto LABEL_6;
        }
      }
      unint64_t v56 = v18;
      operator delete(v18);
LABEL_6:
      ++v8;
      v9 += 48;
    }
    while (v8 != v49);
  }
}

void sub_83CB94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, void *a18, uint64_t a19)
{
  sub_6CCDEC(&a12);
  if (__p)
  {
    a16 = (uint64_t)__p;
    operator delete(__p);
    unint64_t v20 = a18;
    if (!a18)
    {
LABEL_3:
      sub_6CCDEC(a9);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    unint64_t v20 = a18;
    if (!a18) {
      goto LABEL_3;
    }
  }
  a19 = (uint64_t)v20;
  operator delete(v20);
  sub_6CCDEC(a9);
  _Unwind_Resume(a1);
}

void sub_83CC3C(uint64_t a1, void *a2)
{
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B9960;
  strcpy((char *)__p, "max_distance_to_look_forward_for_a_name");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)a1);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x30uLL);
  long long v11 = xmmword_20B93D0;
  strcpy((char *)__p, "max_distance_to_look_backwards_for_a_sign");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)(a1 + 8));
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x38uLL);
  long long v11 = xmmword_20B9AC0;
  strcpy((char *)__p, "distance_to_look_backwards_for_a_sign_major_arterial");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)(a1 + 16));
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x38uLL);
  long long v11 = xmmword_20B9AC0;
  strcpy((char *)__p, "distance_to_look_backwards_for_a_sign_minor_arterial");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)(a1 + 24));
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x30uLL);
  long long v11 = xmmword_20B93E0;
  strcpy((char *)__p, "distance_to_look_backwards_for_a_sign_local");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)(a1 + 32));
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B8FD0;
  strcpy((char *)__p, "distance_to_look_for_off_route_signs");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)(a1 + 40));
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B9260;
  strcpy((char *)__p, "min_turn_angle_cross_and_continue");
  unint64_t v4 = sub_58070(a2, (uint64_t)&__p);
  unint64_t v5 = (void *)(a1 + 48);
  if (v4)
  {
    unint64_t v5 = v4 + 5;
    if (*((_DWORD *)v4 + 12) != 1) {
      unint64_t v5 = (void *)(a1 + 48);
    }
  }
  *(void *)(a1 + 48) = *v5;
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x30uLL);
  long long v11 = xmmword_20B93E0;
  strcpy((char *)__p, "enable_special_guidance_spoken_instructions");
  unint64_t v6 = sub_58070(a2, (uint64_t)&__p);
  if (v6 && (int v7 = *((_DWORD *)v6 + 12), (v7 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 56) = v7 == 4;
    if (SHIBYTE(v11) < 0) {
      goto LABEL_23;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a1 + 56) != 0;
    if (SHIBYTE(v11) < 0) {
LABEL_23:
    }
      operator delete(__p);
  }
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B9390;
  strcpy((char *)__p, "prefer_destination_territory_poi");
  unint64_t v8 = sub_58070(a2, (uint64_t)&__p);
  if (v8 && (int v9 = *((_DWORD *)v8 + 12), (v9 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 57) = v9 == 4;
    if (SHIBYTE(v11) < 0) {
      goto LABEL_30;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 57) = *(unsigned char *)(a1 + 57) != 0;
    if (SHIBYTE(v11) < 0) {
LABEL_30:
    }
      operator delete(__p);
  }
}

void sub_83D00C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t **sub_83D048(uint64_t a1, unsigned __int8 *a2, unsigned char *a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
    int v9 = *(uint64_t ****)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      unint64_t v10 = *v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v12 = v10[1];
            if (v12 == (uint64_t *)v6)
            {
              if (*((unsigned __int8 *)v10 + 16) == v6) {
                return v10;
              }
            }
            else if (((unint64_t)v12 & (v7 - 1)) != v3)
            {
              goto LABEL_23;
            }
            unint64_t v10 = (uint64_t **)*v10;
            if (!v10) {
              goto LABEL_23;
            }
          }
        }
        do
        {
          unint64_t v11 = (unint64_t)v10[1];
          if (v11 == v6)
          {
            if (*((unsigned __int8 *)v10 + 16) == v6) {
              return v10;
            }
          }
          else
          {
            if (v11 >= v7) {
              v11 %= v7;
            }
            if (v11 != v3) {
              break;
            }
          }
          unint64_t v10 = (uint64_t **)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_23:
  BOOL v14 = operator new(0x18uLL);
  *BOOL v14 = 0;
  v14[1] = v6;
  *((unsigned char *)v14 + 16) = *a3;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (v7 && (float)(v16 * (float)v7) >= v15)
  {
    unint64_t v6 = v3;
  }
  else
  {
    BOOL v17 = 1;
    if (v7 >= 3) {
      BOOL v17 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v7);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t prime = v19;
    }
    else {
      size_t prime = v18;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
      unint64_t v7 = *(void *)(a1 + 8);
    }
    if (prime > v7) {
      goto LABEL_36;
    }
    if (prime < v7)
    {
      unint64_t v21 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v7 < 3 || (uint8x8_t v22 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v22.i16[0] = vaddlv_u8(v22), v22.u32[0] > 1uLL))
      {
        unint64_t v21 = std::__next_prime(v21);
      }
      else
      {
        uint64_t v23 = 1 << -(char)__clz(v21 - 1);
        if (v21 >= 2) {
          unint64_t v21 = v23;
        }
      }
      if (prime <= v21) {
        size_t prime = v21;
      }
      if (prime < v7) {
LABEL_36:
      }
        sub_B6C0(a1, prime);
    }
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6) {
        v6 %= v7;
      }
    }
    else
    {
      unint64_t v6 = (v7 - 1) & v6;
    }
  }
  uint64_t v24 = *(void *)a1;
  unint64_t v25 = *(void **)(*(void *)a1 + 8 * v6);
  if (v25)
  {
    *BOOL v14 = *v25;
LABEL_59:
    *unint64_t v25 = v14;
    goto LABEL_60;
  }
  *BOOL v14 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v14;
  *(void *)(v24 + 8 * v6) = a1 + 16;
  if (*v14)
  {
    unint64_t v26 = *(void *)(*v14 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v26 >= v7) {
        v26 %= v7;
      }
    }
    else
    {
      v26 &= v7 - 1;
    }
    unint64_t v25 = (void *)(*(void *)a1 + 8 * v26);
    goto LABEL_59;
  }
LABEL_60:
  ++*(void *)(a1 + 24);
  return (uint64_t **)v14;
}

void sub_83D338(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_83D34C(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  unint64_t v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_83D6A4(a1 + 24, a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    uint64_t v12 = *(void **)(*(void *)a1 + 8 * v3);
    if (v12)
    {
      unsigned int v13 = (void *)*v12;
      if (*v12)
      {
        if (v11.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v15 = v13[1];
            if (v15 == v9)
            {
              if (sub_6F2DD0((uint64_t)(v13 + 2), (uint64_t)a2)) {
                return v13;
              }
            }
            else if ((v15 & (v10 - 1)) != v3)
            {
              goto LABEL_23;
            }
            unsigned int v13 = (void *)*v13;
            if (!v13) {
              goto LABEL_23;
            }
          }
        }
        do
        {
          unint64_t v14 = v13[1];
          if (v14 == v9)
          {
            if (sub_6F2DD0((uint64_t)(v13 + 2), (uint64_t)a2)) {
              return v13;
            }
          }
          else
          {
            if (v14 >= v10) {
              v14 %= v10;
            }
            if (v14 != v3) {
              break;
            }
          }
          unsigned int v13 = (void *)*v13;
        }
        while (v13);
      }
    }
  }
LABEL_23:
  sub_83D758(a1, v9, a3, (uint64_t)&v30);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v19 = 1;
    if (v10 >= 3) {
      BOOL v19 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v10);
    unint64_t v21 = vcvtps_u32_f32(v16 / v17);
    if (v20 <= v21) {
      size_t prime = v21;
    }
    else {
      size_t prime = v20;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
    }
    int8x8_t v23 = *(int8x8_t *)(a1 + 8);
    if (prime > *(void *)&v23) {
      goto LABEL_37;
    }
    if (prime < *(void *)&v23)
    {
      unint64_t v24 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(void *)&v23 < 3uLL || (uint8x8_t v25 = (uint8x8_t)vcnt_s8(v23), v25.i16[0] = vaddlv_u8(v25), v25.u32[0] > 1uLL))
      {
        unint64_t v24 = std::__next_prime(v24);
      }
      else
      {
        uint64_t v26 = 1 << -(char)__clz(v24 - 1);
        if (v24 >= 2) {
          unint64_t v24 = v26;
        }
      }
      if (prime <= v24) {
        size_t prime = v24;
      }
      if (prime < *(void *)&v23) {
LABEL_37:
      }
        sub_B6C0(a1, prime);
    }
    unint64_t v10 = *(void *)(a1 + 8);
    unint64_t v27 = v10 - 1;
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
      {
        unint64_t v3 = v9 % v10;
        unint64_t v18 = *(void **)(*(void *)a1 + 8 * (v9 % v10));
        if (v18) {
          goto LABEL_26;
        }
      }
      else
      {
        unint64_t v3 = v9;
        unint64_t v18 = *(void **)(*(void *)a1 + 8 * v9);
        if (v18) {
          goto LABEL_26;
        }
      }
    }
    else
    {
      unint64_t v3 = v27 & v9;
      unint64_t v18 = *(void **)(*(void *)a1 + 8 * (v27 & v9));
      if (v18) {
        goto LABEL_26;
      }
    }
LABEL_50:
    *unint64_t v30 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v30;
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*v30)
    {
      unint64_t v28 = *(void *)(*v30 + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v28 >= v10) {
          v28 %= v10;
        }
      }
      else
      {
        v28 &= v10 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v28) = v30;
    }
    goto LABEL_61;
  }
  unint64_t v18 = *(void **)(*(void *)a1 + 8 * v3);
  if (!v18) {
    goto LABEL_50;
  }
LABEL_26:
  *unint64_t v30 = *v18;
  *unint64_t v18 = v30;
LABEL_61:
  unsigned int v13 = v30;
  ++*v7;
  return v13;
}

void sub_83D690(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_83D850((uint64_t *)va);
  _Unwind_Resume(a1);
}

unint64_t sub_83D6A4(uint64_t a1, unsigned int *a2)
{
  uint64_t v2 = *a2;
  if (*((char *)a2 + 31) < 0)
  {
    sub_4200(__p, *((void **)a2 + 1), *((void *)a2 + 2));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)(a2 + 2);
    uint64_t v8 = *((void *)a2 + 3);
  }
  if (v8 >= 0) {
    unint64_t v3 = (uint64_t *)__p;
  }
  else {
    unint64_t v3 = (uint64_t *)__p[0];
  }
  if (v8 >= 0) {
    unint64_t v4 = HIBYTE(v8);
  }
  else {
    unint64_t v4 = (unint64_t)__p[1];
  }
  unint64_t v5 = sub_B128((uint64_t)&v9, v3, v4);
  if (SHIBYTE(v8) < 0) {
    operator delete(__p[0]);
  }
  return (((v2 + 2654435769) << 6) + ((unint64_t)(v2 + 2654435769) >> 2) + v5 + 2654435769u) ^ (v2 + 2654435769);
}

unsigned char *sub_83D758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  uint64_t v8 = (char *)operator new(0x48uLL);
  char v9 = v8;
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = a2;
  *((_DWORD *)v8 + 4) = *(_DWORD *)a3;
  if (*(char *)(a3 + 31) < 0)
  {
    sub_4200(v8 + 24, *(void **)(a3 + 8), *(void *)(a3 + 16));
  }
  else
  {
    *(_OWORD *)(v8 + 24) = *(_OWORD *)(a3 + 8);
    *((void *)v8 + 5) = *(void *)(a3 + 24);
  }
  double result = v9 + 48;
  if (*(char *)(a3 + 55) < 0)
  {
    double result = sub_4200(result, *(void **)(a3 + 32), *(void *)(a3 + 40));
  }
  else
  {
    *(_OWORD *)double result = *(_OWORD *)(a3 + 32);
    *((void *)v9 + 8) = *(void *)(a3 + 48);
  }
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_83D818(_Unwind_Exception *a1)
{
  if (*(char *)(v2 + 47) < 0)
  {
    operator delete(*v3);
    sub_83D850(v1);
    _Unwind_Resume(a1);
  }
  sub_83D850(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_83D850(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((unsigned char *)a1 + 16))
    {
      if (*(char *)(v2 + 71) < 0)
      {
        operator delete(*(void **)(v2 + 48));
        if ((*(char *)(v2 + 47) & 0x80000000) == 0) {
          goto LABEL_5;
        }
      }
      else if ((*(char *)(v2 + 47) & 0x80000000) == 0)
      {
        goto LABEL_5;
      }
      operator delete(*(void **)(v2 + 24));
    }
LABEL_5:
    operator delete((void *)v2);
  }
  return a1;
}

uint64_t sub_83D8BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (a1 == a2) {
    return a2;
  }
  uint64_t v5 = a1;
  while (1)
  {
    sub_24AFC(*a3, v5, v5);
    if ((v6 & 1) == 0) {
      break;
    }
    sub_24AFC(a3[1], v5 + 128, v5 + 128);
    if ((v7 & 1) == 0) {
      break;
    }
    if (sub_6F2880(v5 + 64))
    {
      sub_83D34C(a3[2], (unsigned int *)(v5 + 64), v5 + 64);
      if ((v8 & 1) == 0) {
        break;
      }
    }
    v5 += 152;
    if (v5 == a2) {
      return a2;
    }
  }
  if (v5 != a2 && v5 + 152 != a2)
  {
    uint64_t v9 = v5 + 280;
    do
    {
      sub_24AFC(*a3, v9 - 128, v9 - 128);
      if (v11)
      {
        sub_24AFC(a3[1], v9, v9);
        if (v12)
        {
          if (!sub_6F2880(v9 - 64) || (sub_83D34C(a3[2], (unsigned int *)(v9 - 64), v9 - 64), (v13 & 1) != 0))
          {
            sub_4C2034(v5, (long long *)(v9 - 128));
            v5 += 152;
          }
        }
      }
      uint64_t v10 = v9 + 24;
      v9 += 152;
    }
    while (v10 != a2);
  }
  return v5;
}

unint64_t sub_83DA0C(void **a1)
{
  uint64_t v2 = (uint64_t)a1[1];
  unint64_t result = sub_46C760(*a1);
  if (v2 != result
    && (unint64_t result = sub_46C894(*a1, v2), v4)
    && (unint64_t result = sub_46C894(*a1, v2), *(unsigned char *)(result + 48 * v5 - 8)))
  {
    uint64_t v6 = sub_46C8EC(*a1, (uint64_t)a1[1]);
    char v7 = *a1;
    unint64_t v8 = (unint64_t)a1[1] + 1;
    a1[1] = (void *)v8;
    while (1)
    {
      unint64_t result = sub_46C760(v7);
      if (v8 >= result) {
        break;
      }
      unint64_t result = sub_46C8EC(*a1, (uint64_t)a1[1]);
      int v9 = *(_DWORD *)(result + 32);
      int v10 = *(unsigned __int16 *)(result + 36);
      int v11 = *(unsigned __int8 *)(result + 38);
      unint64_t v8 = (unint64_t)a1[1] + 1;
      a1[1] = (void *)v8;
      unint64_t v12 = *(void *)(v6 + 32);
      if (v9 == v12 && v10 == WORD2(v12) && (v11 == 0) != (HIWORD(v12) & 1)) {
        break;
      }
      char v7 = *a1;
    }
  }
  else
  {
    a1[1] = (void *)((char *)a1[1] + 1);
  }
  return result;
}

uint64_t sub_83DB04(int64x2_t *a1, long long *a2)
{
  unint64_t v3 = 0x86BCA1AF286BCA1BLL * ((a1->i64[1] - a1->i64[0]) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x1AF286BCA1AF286) {
    sub_2E00();
  }
  if (0xD79435E50D79436 * ((a1[1].i64[0] - a1->i64[0]) >> 3) > v4) {
    unint64_t v4 = 0xD79435E50D79436 * ((a1[1].i64[0] - a1->i64[0]) >> 3);
  }
  if (0x86BCA1AF286BCA1BLL * ((a1[1].i64[0] - a1->i64[0]) >> 3) >= 0xD79435E50D7943) {
    unint64_t v6 = 0x1AF286BCA1AF286;
  }
  else {
    unint64_t v6 = v4;
  }
  uint64_t v26 = a1 + 1;
  if (v6)
  {
    if (v6 > 0x1AF286BCA1AF286) {
      sub_188D718();
    }
    char v7 = (char *)operator new(152 * v6);
  }
  else
  {
    char v7 = 0;
  }
  long long __p = v7;
  v24.i64[0] = (uint64_t)&v7[152 * v3];
  uint8x8_t v25 = &v7[152 * v6];
  sub_4AA8E0((char *)v24.i64[0], a2);
  uint64_t v8 = v24.i64[0];
  uint64_t v9 = v24.i64[0] + 152;
  v24.i64[1] = v24.i64[0] + 152;
  uint64_t v11 = a1->i64[0];
  unint64_t v10 = a1->u64[1];
  if (v10 == a1->i64[0])
  {
    int64x2_t v20 = vdupq_n_s64(v10);
  }
  else
  {
    uint64_t v12 = 0;
    do
    {
      uint64_t v13 = v8 + v12;
      uint64_t v14 = v10 + v12;
      long long v15 = *(_OWORD *)(v10 + v12 - 152);
      *(void *)(v13 - 136) = *(void *)(v10 + v12 - 136);
      *(_OWORD *)(v13 - 152) = v15;
      *(void *)(v14 - 144) = 0;
      *(void *)(v14 - 136) = 0;
      *(void *)(v14 - 152) = 0;
      *(void *)(v13 - 128) = *(void *)(v10 + v12 - 128);
      long long v16 = *(_OWORD *)(v10 + v12 - 120);
      *(void *)(v13 - 104) = *(void *)(v10 + v12 - 104);
      *(_OWORD *)(v13 - 120) = v16;
      *(void *)(v14 - 112) = 0;
      *(void *)(v14 - 104) = 0;
      *(void *)(v14 - 120) = 0;
      *(void *)(v13 - 96) = *(void *)(v10 + v12 - 96);
      *(_DWORD *)(v13 - 88) = *(_DWORD *)(v10 + v12 - 88);
      long long v17 = *(_OWORD *)(v10 + v12 - 80);
      *(void *)(v13 - 64) = *(void *)(v10 + v12 - 64);
      *(_OWORD *)(v13 - 80) = v17;
      *(void *)(v14 - 72) = 0;
      *(void *)(v14 - 64) = 0;
      *(void *)(v14 - 80) = 0;
      long long v18 = *(_OWORD *)(v10 + v12 - 56);
      *(void *)(v13 - 40) = *(void *)(v10 + v12 - 40);
      *(_OWORD *)(v13 - 56) = v18;
      *(void *)(v14 - 48) = 0;
      *(void *)(v14 - 40) = 0;
      *(void *)(v14 - 56) = 0;
      *(_DWORD *)(v13 - 32) = *(_DWORD *)(v10 + v12 - 32);
      long long v19 = *(_OWORD *)(v10 + v12 - 24);
      *(void *)(v13 - 8) = *(void *)(v10 + v12 - 8);
      *(_OWORD *)(v13 - 24) = v19;
      *(void *)(v14 - 16) = 0;
      *(void *)(v14 - 8) = 0;
      *(void *)(v14 - 24) = 0;
      v12 -= 152;
    }
    while (v10 + v12 != v11);
    int64x2_t v20 = *a1;
    uint64_t v9 = v24.i64[1];
    v8 += v12;
  }
  a1->i64[0] = v8;
  a1->i64[1] = v9;
  int64x2_t v24 = v20;
  unint64_t v21 = (char *)a1[1].i64[0];
  a1[1].i64[0] = (uint64_t)v25;
  uint8x8_t v25 = v21;
  long long __p = (void *)v20.i64[0];
  sub_5B0C34((uint64_t)&__p, v20.i64[0]);
  if (__p) {
    operator delete(__p);
  }
  return v9;
}

void sub_83DD14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_5B0BFC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_83DD28(uint64_t a1, long long *a2, void *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a4 >= 2)
  {
    uint64_t v8 = a1;
    if (a4 == 2)
    {
      if (sub_83DFE0(a3, (uint64_t)a2 - 152, a1))
      {
        sub_83F69C(v8, (uint64_t)a2 - 152);
      }
    }
    else if ((uint64_t)a4 <= 0)
    {
      sub_83E560(a1, (uint64_t)a2, a3);
    }
    else
    {
      uint64_t v12 = a4 >> 1;
      uint64_t v13 = (long long *)(a1 + 152 * (a4 >> 1));
      if ((uint64_t)a4 <= a6)
      {
        sub_83E9A8(a1, a1 + 152 * (a4 >> 1), a3, a4 >> 1, a5);
        uint64_t v15 = a5 + 152 * v12;
        sub_83E9A8(v8 + 152 * (a4 >> 1), (uint64_t)a2, a3, a4 - v12, v15);
        unint64_t v21 = a4;
        long long v16 = (long long *)(a5 + 152 * a4);
        long long v17 = (long long *)v15;
        long long v18 = (long long *)a5;
        while (v17 != v16)
        {
          if (sub_83DFE0(a3, (uint64_t)v17, (uint64_t)v18))
          {
            sub_4C2034(v8, v17);
            long long v17 = (long long *)((char *)v17 + 152);
            v8 += 152;
            if (v18 == (long long *)v15)
            {
LABEL_20:
              if (v17 != v16)
              {
                uint64_t v19 = 0;
                do
                {
                  sub_4C2034(v8 + v19, (long long *)((char *)v17 + v19));
                  v19 += 152;
                }
                while ((long long *)((char *)v17 + v19) != v16);
              }
              goto LABEL_27;
            }
          }
          else
          {
            sub_4C2034(v8, v18);
            long long v18 = (long long *)((char *)v18 + 152);
            v8 += 152;
            if (v18 == (long long *)v15) {
              goto LABEL_20;
            }
          }
        }
        if (v18 != (long long *)v15)
        {
          uint64_t v20 = 0;
          do
          {
            sub_4C2034(v8 + v20, (long long *)((char *)v18 + v20));
            v20 += 152;
          }
          while ((long long *)((char *)v18 + v20) != (long long *)v15);
        }
LABEL_27:
        if (a5) {
          sub_840044(&v21, a5);
        }
      }
      else
      {
        sub_83DD28(a1, a1 + 152 * (a4 >> 1), a3, a4 >> 1, a5, a6);
        uint64_t v14 = a4 - v12;
        sub_83DD28(v13, a2, a3, v14, a5, a6);
        sub_83EE20(v8, v13, a2, a3, v12, v14, a5, a6);
      }
    }
  }
}

void sub_83DFC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unint64_t a10)
{
  if (v10) {
    sub_840044(&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_83DFE0(void *a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 120);
  int v4 = *(_DWORD *)(a3 + 120);
  if (v3 == 1 && v4 != 1) {
    return 1;
  }
  if (v3 != 1 && v4 == 1) {
    return 0;
  }
  if (*(unsigned char *)(*a1 + 97))
  {
    if (v3 == 2 && v4 != 2) {
      return 1;
    }
    if (v3 != 2 && v4 == 2) {
      return 0;
    }
  }
  uint64_t v12 = (unsigned __int8 **)a1[1];
  sub_4AA8E0((char *)v30, (long long *)a2);
  uint64_t v13 = sub_83F23C(v12, (uint64_t)&v29);
  if (v39 < 0)
  {
    operator delete(__p);
    if ((v37 & 0x80000000) == 0)
    {
LABEL_22:
      if ((v35 & 0x80000000) == 0) {
        goto LABEL_23;
      }
      goto LABEL_34;
    }
  }
  else if ((v37 & 0x80000000) == 0)
  {
    goto LABEL_22;
  }
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_23:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_24;
    }
LABEL_35:
    operator delete(v32);
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_36;
  }
LABEL_34:
  operator delete(v34);
  if (v33 < 0) {
    goto LABEL_35;
  }
LABEL_24:
  if ((v31 & 0x80000000) == 0) {
    goto LABEL_25;
  }
LABEL_36:
  operator delete(v30[0]);
LABEL_25:
  uint64_t v14 = (unsigned __int8 **)a1[1];
  sub_4AA8E0((char *)v30, (long long *)a3);
  uint64_t v15 = sub_83F23C(v14, (uint64_t)&v29);
  if (v39 < 0)
  {
    operator delete(__p);
    if ((v37 & 0x80000000) == 0)
    {
LABEL_27:
      if ((v35 & 0x80000000) == 0) {
        goto LABEL_28;
      }
      goto LABEL_39;
    }
  }
  else if ((v37 & 0x80000000) == 0)
  {
    goto LABEL_27;
  }
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_28:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v34);
  if ((v33 & 0x80000000) == 0)
  {
LABEL_29:
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v32);
  if ((v31 & 0x80000000) == 0)
  {
LABEL_30:
    BOOL v16 = v13 >= v15;
    if (v13 != v15) {
      return !v16;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v30[0]);
  BOOL v16 = v13 >= v15;
  if (v13 != v15) {
    return !v16;
  }
LABEL_42:
  long long v17 = (unsigned __int8 **)a1[2];
  sub_4AA8E0((char *)v30, (long long *)a2);
  long long v18 = sub_83F23C(v17, (uint64_t)&v29);
  if (v39 < 0)
  {
    operator delete(__p);
    if ((v37 & 0x80000000) == 0)
    {
LABEL_44:
      if ((v35 & 0x80000000) == 0) {
        goto LABEL_45;
      }
      goto LABEL_56;
    }
  }
  else if ((v37 & 0x80000000) == 0)
  {
    goto LABEL_44;
  }
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_45:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_46;
    }
LABEL_57:
    operator delete(v32);
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_58;
  }
LABEL_56:
  operator delete(v34);
  if (v33 < 0) {
    goto LABEL_57;
  }
LABEL_46:
  if ((v31 & 0x80000000) == 0) {
    goto LABEL_47;
  }
LABEL_58:
  operator delete(v30[0]);
LABEL_47:
  uint64_t v19 = (unsigned __int8 **)a1[2];
  sub_4AA8E0((char *)v30, (long long *)a3);
  uint64_t v20 = sub_83F23C(v19, (uint64_t)&v29);
  if (v39 < 0)
  {
    operator delete(__p);
    if ((v37 & 0x80000000) == 0)
    {
LABEL_49:
      if ((v35 & 0x80000000) == 0) {
        goto LABEL_50;
      }
      goto LABEL_61;
    }
  }
  else if ((v37 & 0x80000000) == 0)
  {
    goto LABEL_49;
  }
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_50:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_62;
  }
LABEL_61:
  operator delete(v34);
  if ((v33 & 0x80000000) == 0)
  {
LABEL_51:
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_63;
  }
LABEL_62:
  operator delete(v32);
  if ((v31 & 0x80000000) == 0)
  {
LABEL_52:
    BOOL v16 = v18 >= v20;
    if (v18 != v20) {
      return !v16;
    }
    goto LABEL_64;
  }
LABEL_63:
  operator delete(v30[0]);
  BOOL v16 = v18 >= v20;
  if (v18 != v20) {
    return !v16;
  }
LABEL_64:
  unint64_t v21 = (uint64_t *)a1[1];
  sub_4AA8E0((char *)v30, (long long *)a2);
  unint64_t v22 = sub_83F3AC(v21, (uint64_t)&v29);
  if (v39 < 0)
  {
    operator delete(__p);
    if ((v37 & 0x80000000) == 0)
    {
LABEL_66:
      if ((v35 & 0x80000000) == 0) {
        goto LABEL_67;
      }
      goto LABEL_78;
    }
  }
  else if ((v37 & 0x80000000) == 0)
  {
    goto LABEL_66;
  }
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_67:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_68;
    }
LABEL_79:
    operator delete(v32);
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_80;
  }
LABEL_78:
  operator delete(v34);
  if (v33 < 0) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v31 & 0x80000000) == 0) {
    goto LABEL_69;
  }
LABEL_80:
  operator delete(v30[0]);
LABEL_69:
  int8x8_t v23 = (uint64_t *)a1[1];
  sub_4AA8E0((char *)v30, (long long *)a3);
  unint64_t v24 = sub_83F3AC(v23, (uint64_t)&v29);
  if (v39 < 0)
  {
    operator delete(__p);
    if ((v37 & 0x80000000) == 0)
    {
LABEL_71:
      if ((v35 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_83;
    }
  }
  else if ((v37 & 0x80000000) == 0)
  {
    goto LABEL_71;
  }
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_72:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_84;
  }
LABEL_83:
  operator delete(v34);
  if ((v33 & 0x80000000) == 0)
  {
LABEL_73:
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_74;
    }
LABEL_85:
    operator delete(v30[0]);
    BOOL v16 = v22 >= v24;
    if (v22 != v24) {
      return !v16;
    }
    goto LABEL_86;
  }
LABEL_84:
  operator delete(v32);
  if (v31 < 0) {
    goto LABEL_85;
  }
LABEL_74:
  BOOL v16 = v22 >= v24;
  if (v22 != v24) {
    return !v16;
  }
LABEL_86:
  uint8x8_t v25 = (uint64_t *)a1[2];
  sub_4AA8E0((char *)v30, (long long *)a2);
  unint64_t v26 = sub_83F3AC(v25, (uint64_t)&v29);
  sub_7D0A58((uint64_t)&v29);
  unint64_t v27 = (uint64_t *)a1[2];
  sub_4AA8E0((char *)v30, (long long *)a3);
  unint64_t v28 = sub_83F3AC(v27, (uint64_t)&v29);
  sub_7D0A58((uint64_t)&v29);
  BOOL v16 = v26 >= v28;
  return !v16;
}

void sub_83E4C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_83E4D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_83E4E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_83E4FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_83E510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_83E524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_83E538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_83E54C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_83E560(uint64_t a1, uint64_t a2, void *a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a1 + 152;
    if (a1 + 152 != a2)
    {
      uint64_t v7 = 0;
      uint64_t v8 = a1;
      do
      {
        uint64_t v9 = v5;
        if (!sub_83DFE0(a3, v5, v8)) {
          goto LABEL_4;
        }
        long long v10 = *(_OWORD *)v9;
        uint64_t v43 = *(void *)(v9 + 16);
        *(_OWORD *)uint64_t v42 = v10;
        *(void *)(v9 + 8) = 0;
        *(void *)(v9 + 16) = 0;
        *(void *)uint64_t v9 = 0;
        uint64_t v11 = *(void *)(v8 + 208);
        uint64_t v46 = *(void *)(v8 + 200);
        uint64_t v12 = *(void *)(v8 + 176);
        long long v45 = *(_OWORD *)(v8 + 184);
        *(void *)(v8 + 184) = 0;
        *(void *)(v8 + 192) = 0;
        *(void *)(v8 + 200) = 0;
        uint64_t v44 = v12;
        uint64_t v47 = v11;
        LODWORD(v12) = *(_DWORD *)(v8 + 216);
        uint64_t v50 = *(void *)(v8 + 240);
        long long v49 = *(_OWORD *)(v8 + 224);
        *(void *)(v8 + 224) = 0;
        *(void *)(v8 + 232) = 0;
        long long v13 = *(_OWORD *)(v8 + 248);
        uint64_t v52 = *(void *)(v8 + 264);
        long long __p = v13;
        *(void *)(v8 + 240) = 0;
        *(void *)(v8 + 248) = 0;
        *(void *)(v8 + 256) = 0;
        *(void *)(v8 + 264) = 0;
        LODWORD(v11) = *(_DWORD *)(v8 + 272);
        int v48 = v12;
        int v53 = v11;
        long long v14 = *(_OWORD *)(v8 + 280);
        uint64_t v55 = *(void *)(v8 + 296);
        long long v54 = v14;
        *(void *)(v8 + 280) = 0;
        *(void *)(v8 + 288) = 0;
        uint64_t v15 = v7;
        *(void *)(v8 + 296) = 0;
        while (1)
        {
          uint64_t v16 = v15;
          uint64_t v17 = a1 + v15;
          uint64_t v18 = a1 + v15 + 152;
          if (*(char *)(a1 + v15 + 175) < 0) {
            operator delete(*(void **)v18);
          }
          *(_OWORD *)uint64_t v18 = *(_OWORD *)v17;
          *(void *)(v18 + 16) = *(void *)(v17 + 16);
          *(unsigned char *)(v17 + 23) = 0;
          *(unsigned char *)uint64_t v17 = 0;
          *(void *)(v17 + 176) = *(void *)(v17 + 24);
          uint64_t v19 = v17 + 184;
          if (*(char *)(v17 + 207) < 0) {
            operator delete(*(void **)v19);
          }
          uint64_t v20 = v17 + 32;
          uint64_t v21 = a1 + v16;
          *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          *(void *)(v19 + 16) = *(void *)(v20 + 16);
          *(unsigned char *)(v21 + 55) = 0;
          *(unsigned char *)uint64_t v20 = 0;
          *(void *)(v21 + 208) = *(void *)(a1 + v16 + 56);
          *(_DWORD *)(v21 + 216) = *(_DWORD *)(a1 + v16 + 64);
          unint64_t v22 = (void **)(a1 + v16 + 224);
          if (*(char *)(a1 + v16 + 247) < 0) {
            operator delete(*v22);
          }
          *(_OWORD *)unint64_t v22 = *(_OWORD *)(v21 + 72);
          *(void *)(a1 + v16 + 240) = *(void *)(v21 + 88);
          *(unsigned char *)(v21 + 95) = 0;
          *(unsigned char *)(v21 + 72) = 0;
          uint64_t v23 = v21 + 248;
          if (*(char *)(v21 + 271) < 0) {
            operator delete(*(void **)v23);
          }
          uint64_t v24 = a1 + v16;
          long long v25 = *(_OWORD *)(a1 + v16 + 96);
          *(void *)(v23 + 16) = *(void *)(a1 + v16 + 112);
          *(_OWORD *)uint64_t v23 = v25;
          *(unsigned char *)(v24 + 119) = 0;
          *(unsigned char *)(v24 + 96) = 0;
          *(_DWORD *)(v24 + 272) = *(_DWORD *)(a1 + v16 + 120);
          unint64_t v26 = (void **)(a1 + v16 + 280);
          if (*(char *)(a1 + v16 + 303) < 0) {
            operator delete(*v26);
          }
          long long v27 = *(_OWORD *)(v24 + 128);
          *(void *)(a1 + v16 + 296) = *(void *)(v24 + 144);
          *(_OWORD *)unint64_t v26 = v27;
          *(unsigned char *)(v24 + 151) = 0;
          *(unsigned char *)(v24 + 128) = 0;
          if (!v16) {
            break;
          }
          char v28 = sub_83DFE0(a3, (uint64_t)v42, a1 + v16 - 152);
          uint64_t v15 = v16 - 152;
          if ((v28 & 1) == 0)
          {
            uint64_t v29 = a1 + v16;
            if ((*(char *)(a1 + v15 + 175) & 0x80000000) == 0) {
              goto LABEL_23;
            }
            goto LABEL_22;
          }
        }
        uint64_t v29 = a1;
        if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
          goto LABEL_23;
        }
LABEL_22:
        operator delete(*(void **)v29);
LABEL_23:
        uint64_t v30 = a1 + v16;
        char v31 = (void **)(v30 + 32);
        long long v32 = *(_OWORD *)v42;
        *(void *)(v29 + 16) = v43;
        *(_OWORD *)uint64_t v29 = v32;
        HIBYTE(v43) = 0;
        LOBYTE(v42[0]) = 0;
        *(void *)(v29 + 24) = v44;
        if (*(char *)(v29 + 55) < 0) {
          operator delete(*v31);
        }
        char v33 = (void **)(v30 + 72);
        long long v34 = v45;
        *(void *)(v30 + 48) = v46;
        *(_OWORD *)char v31 = v34;
        HIBYTE(v46) = 0;
        LOBYTE(v45) = 0;
        *(void *)(v29 + 56) = v47;
        *(_DWORD *)(v29 + 64) = v48;
        if (*(char *)(v29 + 95) < 0) {
          operator delete(*v33);
        }
        uint64_t v35 = v30 + 96;
        long long v36 = v49;
        *(void *)(v30 + 88) = v50;
        *(_OWORD *)char v33 = v36;
        HIBYTE(v50) = 0;
        LOBYTE(v49) = 0;
        if (*(char *)(v29 + 119) < 0) {
          operator delete(*(void **)v35);
        }
        uint64_t v37 = v30 + 128;
        long long v38 = __p;
        *(void *)(v35 + 16) = v52;
        *(_OWORD *)uint64_t v35 = v38;
        HIBYTE(v52) = 0;
        LOBYTE(__p) = 0;
        *(_DWORD *)(v29 + 120) = v53;
        if (*(char *)(v29 + 151) < 0)
        {
          operator delete(*(void **)v37);
          int v40 = SHIBYTE(v52);
          long long v41 = v54;
          *(void *)(v37 + 16) = v55;
          *(_OWORD *)uint64_t v37 = v41;
          HIBYTE(v55) = 0;
          LOBYTE(v54) = 0;
          if (v40 < 0)
          {
            operator delete((void *)__p);
            if ((SHIBYTE(v50) & 0x80000000) == 0)
            {
LABEL_34:
              if ((SHIBYTE(v46) & 0x80000000) == 0) {
                goto LABEL_35;
              }
              goto LABEL_39;
            }
          }
          else if ((SHIBYTE(v50) & 0x80000000) == 0)
          {
            goto LABEL_34;
          }
        }
        else
        {
          long long v39 = v54;
          *(void *)(v37 + 16) = v55;
          *(_OWORD *)uint64_t v37 = v39;
          HIBYTE(v55) = 0;
          LOBYTE(v54) = 0;
          if ((SHIBYTE(v50) & 0x80000000) == 0) {
            goto LABEL_34;
          }
        }
        operator delete((void *)v49);
        if ((SHIBYTE(v46) & 0x80000000) == 0)
        {
LABEL_35:
          if (SHIBYTE(v43) < 0) {
            goto LABEL_40;
          }
          goto LABEL_4;
        }
LABEL_39:
        operator delete((void *)v45);
        if (SHIBYTE(v43) < 0) {
LABEL_40:
        }
          operator delete(v42[0]);
LABEL_4:
        uint64_t v5 = v9 + 152;
        v7 += 152;
        uint64_t v8 = v9;
      }
      while (v9 + 152 != a2);
    }
  }
}

void sub_83E994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_4A50F4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_83E9A8(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, uint64_t a5)
{
  if (a4)
  {
    if (a4 == 2)
    {
      uint64_t v15 = (long long *)(a2 - 152);
      int v16 = sub_83DFE0(a3, a2 - 152, a1);
      uint64_t v17 = (_OWORD *)(a5 + 32);
      uint64_t v18 = (_OWORD *)(a5 + 72);
      uint64_t v19 = (_OWORD *)(a5 + 96);
      if (v16)
      {
        long long v20 = *v15;
        *(void *)(a5 + 16) = *(void *)(a2 - 136);
        *(_OWORD *)a5 = v20;
        *(void *)(a2 - 144) = 0;
        *(void *)(a2 - 136) = 0;
        *(void *)uint64_t v15 = 0;
        *(void *)(a5 + 24) = *(void *)(a2 - 128);
        long long v21 = *(_OWORD *)(a2 - 120);
        *(void *)(a5 + 48) = *(void *)(a2 - 104);
        _OWORD *v17 = v21;
        *(void *)(a2 - 112) = 0;
        *(void *)(a2 - 104) = 0;
        *(void *)(a2 - 120) = 0;
        *(void *)(a5 + 56) = *(void *)(a2 - 96);
        *(_DWORD *)(a5 + 64) = *(_DWORD *)(a2 - 88);
        long long v22 = *(_OWORD *)(a2 - 80);
        *(void *)(a5 + 88) = *(void *)(a2 - 64);
        *uint64_t v18 = v22;
        *(void *)(a2 - 72) = 0;
        *(void *)(a2 - 64) = 0;
        *(void *)(a2 - 80) = 0;
        long long v23 = *(_OWORD *)(a2 - 56);
        *(void *)(a5 + 112) = *(void *)(a2 - 40);
        *uint64_t v19 = v23;
        *(void *)(a2 - 48) = 0;
        *(void *)(a2 - 40) = 0;
        *(void *)(a2 - 56) = 0;
        *(_DWORD *)(a5 + 120) = *(_DWORD *)(a2 - 32);
        long long v24 = *(_OWORD *)(a2 - 24);
        *(void *)(a5 + 144) = *(void *)(a2 - 8);
        *(_OWORD *)(a5 + 128) = v24;
        *(void *)(a2 - 16) = 0;
        *(void *)(a2 - 8) = 0;
        *(void *)(a2 - 24) = 0;
        uint64_t v25 = a5 + 152;
        long long v26 = *(_OWORD *)a1;
        *(void *)(a5 + 168) = *(void *)(a1 + 16);
        *(_OWORD *)(a5 + 152) = v26;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)a1 = 0;
        *(void *)(a5 + 176) = *(void *)(a1 + 24);
        long long v27 = *(_OWORD *)(a1 + 32);
        *(void *)(a5 + 200) = *(void *)(a1 + 48);
        *(_OWORD *)(a5 + 184) = v27;
        *(void *)(a1 + 40) = 0;
        *(void *)(a1 + 48) = 0;
        *(void *)(a1 + 32) = 0;
        *(void *)(a5 + 208) = *(void *)(a1 + 56);
        *(_DWORD *)(a5 + 216) = *(_DWORD *)(a1 + 64);
        long long v28 = *(_OWORD *)(a1 + 72);
        *(void *)(a5 + 240) = *(void *)(a1 + 88);
        *(_OWORD *)(a5 + 224) = v28;
        *(void *)(a1 + 80) = 0;
        *(void *)(a1 + 88) = 0;
        *(void *)(a1 + 72) = 0;
        long long v29 = *(_OWORD *)(a1 + 96);
        *(void *)(a5 + 264) = *(void *)(a1 + 112);
        *(_OWORD *)(a5 + 248) = v29;
        *(void *)(a1 + 104) = 0;
        *(void *)(a1 + 112) = 0;
        *(void *)(a1 + 96) = 0;
        *(_DWORD *)(a5 + 272) = *(_DWORD *)(a1 + 120);
        uint64_t v30 = (void *)(a1 + 128);
        long long v31 = *(_OWORD *)(a1 + 128);
        uint64_t v32 = *(void *)(a1 + 144);
      }
      else
      {
        long long v35 = *(_OWORD *)a1;
        *(void *)(a5 + 16) = *(void *)(a1 + 16);
        *(_OWORD *)a5 = v35;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)a1 = 0;
        *(void *)(a5 + 24) = *(void *)(a1 + 24);
        long long v36 = *(_OWORD *)(a1 + 32);
        *(void *)(a5 + 48) = *(void *)(a1 + 48);
        _OWORD *v17 = v36;
        *(void *)(a1 + 40) = 0;
        *(void *)(a1 + 48) = 0;
        *(void *)(a1 + 32) = 0;
        *(void *)(a5 + 56) = *(void *)(a1 + 56);
        *(_DWORD *)(a5 + 64) = *(_DWORD *)(a1 + 64);
        long long v37 = *(_OWORD *)(a1 + 72);
        *(void *)(a5 + 88) = *(void *)(a1 + 88);
        *uint64_t v18 = v37;
        *(void *)(a1 + 80) = 0;
        *(void *)(a1 + 88) = 0;
        *(void *)(a1 + 72) = 0;
        long long v38 = *(_OWORD *)(a1 + 96);
        *(void *)(a5 + 112) = *(void *)(a1 + 112);
        *uint64_t v19 = v38;
        *(void *)(a1 + 104) = 0;
        *(void *)(a1 + 112) = 0;
        *(void *)(a1 + 96) = 0;
        *(_DWORD *)(a5 + 120) = *(_DWORD *)(a1 + 120);
        long long v39 = *(_OWORD *)(a1 + 128);
        *(void *)(a5 + 144) = *(void *)(a1 + 144);
        *(_OWORD *)(a5 + 128) = v39;
        *(void *)(a1 + 136) = 0;
        *(void *)(a1 + 144) = 0;
        *(void *)(a1 + 128) = 0;
        uint64_t v25 = a5 + 152;
        long long v40 = *v15;
        *(void *)(a5 + 168) = *(void *)(a2 - 136);
        *(_OWORD *)(a5 + 152) = v40;
        *(void *)(a2 - 144) = 0;
        *(void *)(a2 - 136) = 0;
        *(void *)uint64_t v15 = 0;
        *(void *)(a5 + 176) = *(void *)(a2 - 128);
        long long v41 = *(_OWORD *)(a2 - 120);
        *(void *)(a5 + 200) = *(void *)(a2 - 104);
        *(_OWORD *)(a5 + 184) = v41;
        *(void *)(a2 - 112) = 0;
        *(void *)(a2 - 104) = 0;
        *(void *)(a2 - 120) = 0;
        *(void *)(a5 + 208) = *(void *)(a2 - 96);
        *(_DWORD *)(a5 + 216) = *(_DWORD *)(a2 - 88);
        long long v42 = *(_OWORD *)(a2 - 80);
        *(void *)(a5 + 240) = *(void *)(a2 - 64);
        *(_OWORD *)(a5 + 224) = v42;
        *(void *)(a2 - 72) = 0;
        *(void *)(a2 - 64) = 0;
        *(void *)(a2 - 80) = 0;
        long long v43 = *(_OWORD *)(a2 - 56);
        *(void *)(a5 + 264) = *(void *)(a2 - 40);
        *(_OWORD *)(a5 + 248) = v43;
        *(void *)(a2 - 48) = 0;
        *(void *)(a2 - 40) = 0;
        *(void *)(a2 - 56) = 0;
        *(_DWORD *)(a5 + 272) = *(_DWORD *)(a2 - 32);
        uint64_t v30 = (void *)(a2 - 24);
        long long v31 = *(_OWORD *)(a2 - 24);
        uint64_t v32 = *(void *)(a2 - 8);
      }
      *(void *)(a5 + 296) = v32;
      *(_OWORD *)(v25 + 128) = v31;
      *uint64_t v30 = 0;
      v30[1] = 0;
      v30[2] = 0;
    }
    else if (a4 == 1)
    {
      long long v10 = *(_OWORD *)a1;
      *(void *)(a5 + 16) = *(void *)(a1 + 16);
      *(_OWORD *)a5 = v10;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)a1 = 0;
      *(void *)(a5 + 24) = *(void *)(a1 + 24);
      long long v11 = *(_OWORD *)(a1 + 32);
      *(void *)(a5 + 48) = *(void *)(a1 + 48);
      *(_OWORD *)(a5 + 32) = v11;
      *(void *)(a1 + 40) = 0;
      *(void *)(a1 + 48) = 0;
      *(void *)(a1 + 32) = 0;
      *(void *)(a5 + 56) = *(void *)(a1 + 56);
      *(_DWORD *)(a5 + 64) = *(_DWORD *)(a1 + 64);
      long long v12 = *(_OWORD *)(a1 + 72);
      *(void *)(a5 + 88) = *(void *)(a1 + 88);
      *(_OWORD *)(a5 + 72) = v12;
      *(void *)(a1 + 80) = 0;
      *(void *)(a1 + 88) = 0;
      *(void *)(a1 + 72) = 0;
      long long v13 = *(_OWORD *)(a1 + 96);
      *(void *)(a5 + 112) = *(void *)(a1 + 112);
      *(_OWORD *)(a5 + 96) = v13;
      *(void *)(a1 + 104) = 0;
      *(void *)(a1 + 112) = 0;
      *(void *)(a1 + 96) = 0;
      *(_DWORD *)(a5 + 120) = *(_DWORD *)(a1 + 120);
      long long v14 = *(_OWORD *)(a1 + 128);
      *(void *)(a5 + 144) = *(void *)(a1 + 144);
      *(_OWORD *)(a5 + 128) = v14;
      *(void *)(a1 + 136) = 0;
      *(void *)(a1 + 144) = 0;
      *(void *)(a1 + 128) = 0;
    }
    else if ((uint64_t)a4 > 8)
    {
      unint64_t v33 = a4 >> 1;
      uint64_t v34 = 152 * (a4 >> 1);
      sub_83DD28(a1, a1 + v34, a3, a4 >> 1, a5, a4 >> 1);
      sub_83DD28(a1 + v34, a2, a3, a4 - v33, a5 + v34, a4 - v33);
      sub_83FCC0(a1, (void *)(a1 + v34), a1 + v34, a2, a5, a3);
    }
    else
    {
      sub_83F890(a1, a2, a5, a3);
    }
  }
}

void sub_83EE04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unint64_t a10)
{
  if (v10) {
    sub_840044(&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

void sub_83EE20(uint64_t a1, long long *a2, long long *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v49 = a6;
  if (a6)
  {
    while (1)
    {
      if (v49 <= a8 || a5 <= a8)
      {
        sub_84010C(a1, a2, a3, a4, a5, v49, a7);
        return;
      }
      if (!a5) {
        return;
      }
      long long v12 = 0;
      uint64_t v13 = -a5;
      while (1)
      {
        uint64_t v14 = a1;
        uint64_t v15 = (uint64_t)v12 + a1;
        int v16 = a4;
        if (sub_83DFE0(a4, (uint64_t)a2, (uint64_t)v12 + a1)) {
          break;
        }
        long long v12 = (long long *)((char *)v12 + 152);
        BOOL v17 = __CFADD__(v13++, 1);
        a1 = v14;
        a4 = v16;
        if (v17) {
          return;
        }
      }
      uint64_t v18 = -v13;
      uint64_t v19 = v49;
      uint64_t v46 = a3;
      uint64_t v47 = a8;
      if (-v13 >= v49)
      {
        if (v13 == -1)
        {
          sub_83F69C((uint64_t)v12 + v14, (uint64_t)a2);
          return;
        }
        if (v13 > 0) {
          uint64_t v18 = 1 - v13;
        }
        uint64_t v29 = v18 >> 1;
        uint64_t v23 = v14;
        uint64_t v24 = (uint64_t)v12 + 152 * (v18 >> 1) + v14;
        long long v55 = *(_OWORD *)v16;
        uint64_t v56 = v16[2];
        long long v22 = a2;
        if (a2 != a3)
        {
          uint64_t v51 = v18 >> 1;
          uint64_t v54 = (uint64_t)v12 + 152 * (v18 >> 1) + v14;
          unint64_t v35 = 0x86BCA1AF286BCA1BLL * (((char *)a3 - (char *)a2) >> 3);
          long long v22 = a2;
          do
          {
            uint64_t v36 = (uint64_t)v22 + 152 * (v35 >> 1);
            int v37 = sub_83DFE0(&v55, v36, v54);
            if (v37) {
              v35 += ~(v35 >> 1);
            }
            else {
              v35 >>= 1;
            }
            if (v37) {
              long long v22 = (long long *)(v36 + 152);
            }
          }
          while (v35);
          uint64_t v19 = v49;
          uint64_t v29 = v51;
          uint64_t v23 = v14;
          uint64_t v24 = v54;
        }
        uint64_t v21 = 0x86BCA1AF286BCA1BLL * (((char *)v22 - (char *)a2) >> 3);
        int v53 = (long long *)v24;
        if ((long long *)v24 != a2)
        {
LABEL_25:
          if (v22 == a2)
          {
            a3 = (long long *)v24;
          }
          else
          {
            uint64_t v45 = v21;
            uint64_t v50 = v29;
            sub_83F69C(v24, (uint64_t)a2);
            a3 = (long long *)(v24 + 152);
            for (uint64_t i = (uint64_t)a2 + 152; (long long *)i != v22; i += 152)
            {
              if (a3 == a2) {
                a2 = (long long *)i;
              }
              sub_83F69C((uint64_t)a3, i);
              a3 = (long long *)((char *)a3 + 152);
            }
            if (a3 != a2)
            {
              uint64_t v31 = (uint64_t)a3;
              uint64_t v32 = (uint64_t)a2;
              while (1)
              {
                sub_83F69C(v31, v32);
                v32 += 152;
                BOOL v33 = v31 + 152 == (void)a2;
                if ((long long *)v32 == v22)
                {
                  if ((long long *)(v31 + 152) == a2) {
                    break;
                  }
                  uint64_t v32 = (uint64_t)a2 + 152;
                  v31 += 304;
                  while (1)
                  {
                    sub_83F69C(v31 - 152, (uint64_t)a2);
                    BOOL v33 = v31 == (void)a2;
                    if ((long long *)v32 != v22) {
                      break;
                    }
                    BOOL v34 = v31 == (void)a2;
                    v31 += 152;
                    if (v34) {
                      goto LABEL_42;
                    }
                  }
                }
                else
                {
                  v31 += 152;
                }
                if (v33) {
                  a2 = (long long *)v32;
                }
              }
            }
LABEL_42:
            uint64_t v19 = v49;
            uint64_t v29 = v50;
            uint64_t v23 = v14;
            uint64_t v21 = v45;
          }
          goto LABEL_58;
        }
      }
      else
      {
        if (v49 >= 0) {
          uint64_t v20 = v49;
        }
        else {
          uint64_t v20 = v49 + 1;
        }
        uint64_t v21 = v20 >> 1;
        long long v22 = (long long *)((char *)a2 + 152 * (v20 >> 1));
        uint64_t v23 = v14;
        uint64_t v24 = (uint64_t)a2;
        if ((long long *)((char *)a2 - v14) != v12)
        {
          uint64_t v44 = v20 >> 1;
          unint64_t v25 = 0x86BCA1AF286BCA1BLL * (((char *)a2 - v14 - (char *)v12) >> 3);
          uint64_t v24 = v15;
          uint64_t v52 = (uint64_t)a2 + 152 * (v20 >> 1);
          do
          {
            uint64_t v26 = v24;
            uint64_t v27 = v24 + 152 * (v25 >> 1);
            int v28 = sub_83DFE0(v16, v52, v27);
            if (v28) {
              uint64_t v24 = v26;
            }
            else {
              uint64_t v24 = v27 + 152;
            }
            if (v28) {
              v25 >>= 1;
            }
            else {
              v25 += ~(v25 >> 1);
            }
          }
          while (v25);
          uint64_t v19 = v49;
          uint64_t v23 = v14;
          long long v22 = (long long *)v52;
          uint64_t v21 = v44;
        }
        uint64_t v29 = 0x86BCA1AF286BCA1BLL * ((v24 - v23 - (uint64_t)v12) >> 3);
        int v53 = (long long *)v24;
        if ((long long *)v24 != a2) {
          goto LABEL_25;
        }
      }
      a3 = v22;
LABEL_58:
      a5 = -v29 - v13;
      uint64_t v38 = v19 - v21;
      if (v29 + v21 >= v19 - (v29 + v21) - v13)
      {
        long long v40 = v22;
        a8 = v47;
        uint64_t v41 = v29;
        uint64_t v42 = v21;
        sub_83EE20(a3, v40, v46, v16, -v29 - v13, v19 - v21, a7, v47);
        a4 = v16;
        a2 = v53;
        uint64_t v43 = v42;
        a5 = v41;
        uint64_t v49 = v43;
        a1 = v15;
        if (!v43) {
          return;
        }
      }
      else
      {
        sub_83EE20((char *)v12 + v23, v53, a3, v16, v29, v21, a7, v47);
        a4 = v16;
        long long v39 = a3;
        a2 = v22;
        a8 = v47;
        a3 = v46;
        uint64_t v49 = v38;
        a1 = (uint64_t)v39;
        if (!v38) {
          return;
        }
      }
    }
  }
}

unsigned __int8 *sub_83F23C(unsigned __int8 **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  int v3 = a1[1];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 8) = 0;
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  *(_OWORD *)int v16 = *(_OWORD *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a2 + 56) = 0;
  uint64_t v17 = v6;
  uint64_t v18 = v7;
  int v19 = *(_DWORD *)(a2 + 72);
  long long v8 = *(_OWORD *)(a2 + 80);
  uint64_t v21 = *(void *)(a2 + 96);
  *(_OWORD *)uint64_t v20 = v8;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0;
  long long v9 = *(_OWORD *)(a2 + 104);
  uint64_t v23 = *(void *)(a2 + 120);
  *(_OWORD *)long long v22 = v9;
  *(void *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  *(void *)(a2 + 120) = 0;
  int v24 = *(_DWORD *)(a2 + 128);
  long long v10 = *(_OWORD *)(a2 + 136);
  uint64_t v26 = *(void *)(a2 + 152);
  *(_OWORD *)long long __p = v10;
  *(void *)(a2 + 136) = 0;
  *(void *)(a2 + 144) = 0;
  *(void *)(a2 + 152) = 0;
  if (v2 != v3)
  {
    while (!sub_83F548((uint64_t)&v12, v2))
    {
      v2 += 152;
      if (v2 == v3)
      {
        uint64_t v2 = v3;
        break;
      }
    }
  }
  if (SHIBYTE(v26) < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v23) & 0x80000000) == 0)
    {
LABEL_7:
      if ((SHIBYTE(v21) & 0x80000000) == 0) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
  }
  else if ((SHIBYTE(v23) & 0x80000000) == 0)
  {
    goto LABEL_7;
  }
  operator delete(v22[0]);
  if ((SHIBYTE(v21) & 0x80000000) == 0)
  {
LABEL_8:
    if ((SHIBYTE(v17) & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_14:
    operator delete(v16[0]);
    if ((SHIBYTE(v14) & 0x80000000) == 0) {
      return v2;
    }
    goto LABEL_15;
  }
LABEL_13:
  operator delete(v20[0]);
  if (SHIBYTE(v17) < 0) {
    goto LABEL_14;
  }
LABEL_9:
  if ((SHIBYTE(v14) & 0x80000000) == 0) {
    return v2;
  }
LABEL_15:
  operator delete(v13[0]);
  return v2;
}

void sub_83F398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_83F3AC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *(_OWORD *)long long v10 = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 8) = 0;
  char v11 = HIBYTE(v4);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a2 + 56) = 0;
  char v13 = HIBYTE(v5);
  int v14 = *(_DWORD *)(a2 + 72);
  long long v6 = *(_OWORD *)(a2 + 80);
  uint64_t v16 = *(void *)(a2 + 96);
  *(_OWORD *)uint64_t v15 = v6;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0;
  long long v7 = *(_OWORD *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 120);
  *(_OWORD *)uint64_t v17 = v7;
  *(void *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  *(void *)(a2 + 120) = 0;
  int v19 = *(_DWORD *)(a2 + 128);
  long long v8 = *(_OWORD *)(a2 + 136);
  uint64_t v21 = *(void *)(a2 + 152);
  *(_OWORD *)long long __p = v8;
  *(void *)(a2 + 136) = 0;
  *(void *)(a2 + 144) = 0;
  *(void *)(a2 + 152) = 0;
  if (v2 != v3)
  {
    while (!sub_6F2880((uint64_t)&v14) || !sub_6F2DD0((uint64_t)&v14, v2 + 64))
    {
      v2 += 152;
      if (v2 == v3)
      {
        uint64_t v2 = v3;
        if ((SHIBYTE(v21) & 0x80000000) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
  }
  if (SHIBYTE(v21) < 0)
  {
LABEL_13:
    operator delete(__p[0]);
    if ((SHIBYTE(v18) & 0x80000000) == 0)
    {
LABEL_8:
      if ((SHIBYTE(v16) & 0x80000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
  }
  else
  {
LABEL_7:
    if ((SHIBYTE(v18) & 0x80000000) == 0) {
      goto LABEL_8;
    }
  }
  operator delete(v17[0]);
  if ((SHIBYTE(v16) & 0x80000000) == 0)
  {
LABEL_9:
    if ((v13 & 0x80000000) == 0) {
      goto LABEL_10;
    }
LABEL_16:
    operator delete(v12[0]);
    if ((v11 & 0x80000000) == 0) {
      return v2;
    }
    goto LABEL_17;
  }
LABEL_15:
  operator delete(v15[0]);
  if (v13 < 0) {
    goto LABEL_16;
  }
LABEL_10:
  if ((v11 & 0x80000000) == 0) {
    return v2;
  }
LABEL_17:
  operator delete(v10[0]);
  return v2;
}

void sub_83F534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL sub_83F548(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = a2[23];
  size_t v5 = *((void *)a2 + 1);
  if ((v4 & 0x80u) == 0) {
    uint64_t v6 = a2[23];
  }
  else {
    uint64_t v6 = *((void *)a2 + 1);
  }
  uint64_t v7 = *(unsigned __int8 *)(a1 + 31);
  int v8 = (char)v7;
  if ((v7 & 0x80u) != 0) {
    uint64_t v7 = *(void *)(a1 + 16);
  }
  if (v6 == v7)
  {
    if (v8 >= 0) {
      long long v9 = (unsigned __int8 *)(a1 + 8);
    }
    else {
      long long v9 = *(unsigned __int8 **)(a1 + 8);
    }
    if ((v4 & 0x80) != 0)
    {
      if (!memcmp(*(const void **)a2, v9, v5)) {
        return 1;
      }
    }
    else
    {
      if (!v4) {
        return 1;
      }
      for (uint64_t i = a2; *i == *v9; ++i)
      {
        ++v9;
        if (!--v4) {
          return 1;
        }
      }
    }
  }
  uint64_t v12 = a2[151];
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = a2[151];
  }
  else {
    uint64_t v13 = *((void *)a2 + 17);
  }
  uint64_t v14 = *(unsigned __int8 *)(a1 + 159);
  int v15 = (char)v14;
  if ((v14 & 0x80u) != 0) {
    uint64_t v14 = *(void *)(a1 + 144);
  }
  if (v13 != v14) {
    return 0;
  }
  uint64_t v16 = (const void **)(a2 + 128);
  int v19 = *(unsigned __int8 **)(a1 + 136);
  uint64_t v18 = (unsigned __int8 *)(a1 + 136);
  uint64_t v17 = v19;
  if (v15 >= 0) {
    uint64_t v20 = v18;
  }
  else {
    uint64_t v20 = v17;
  }
  if ((v12 & 0x80) != 0) {
    return memcmp(*v16, v20, *((void *)a2 + 17)) == 0;
  }
  if (!a2[151]) {
    return 1;
  }
  uint64_t v21 = v12 - 1;
  do
  {
    int v23 = *(unsigned __int8 *)v16;
    uint64_t v16 = (const void **)((char *)v16 + 1);
    int v22 = v23;
    int v25 = *v20++;
    int v24 = v25;
    BOOL v27 = v21-- != 0;
    BOOL result = v22 == v24;
  }
  while (v22 == v24 && v27);
  return result;
}

void sub_83F69C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  *(void *)int v22 = *(void *)(a1 + 8);
  *(void *)&v22[7] = *(void *)(a1 + 15);
  char v4 = *(unsigned char *)(a1 + 23);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  *(void *)&v21[7] = *(void *)(a1 + 47);
  *(void *)uint64_t v21 = *(void *)(a1 + 40);
  char v7 = *(unsigned char *)(a1 + 55);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 32) = 0;
  uint64_t v8 = *(void *)(a1 + 56);
  int v9 = *(_DWORD *)(a1 + 64);
  uint64_t v10 = *(void *)(a1 + 72);
  *(void *)&v20[7] = *(void *)(a1 + 87);
  *(void *)uint64_t v20 = *(void *)(a1 + 80);
  char v11 = *(unsigned char *)(a1 + 95);
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  uint64_t v15 = *(void *)(a1 + 96);
  *(void *)&v19[7] = *(void *)(a1 + 111);
  *(void *)int v19 = *(void *)(a1 + 104);
  char v12 = *(unsigned char *)(a1 + 119);
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v13 = *(_DWORD *)(a1 + 120);
  char v14 = v12;
  *(void *)&v18[7] = *(void *)(a1 + 143);
  uint64_t v17 = *(void *)(a1 + 128);
  *(void *)uint64_t v18 = *(void *)(a1 + 136);
  char v16 = *(unsigned char *)(a1 + 151);
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  sub_4C2034(a1, (long long *)a2);
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = *(void *)v22;
  *(void *)(a2 + 15) = *(void *)&v22[7];
  *(unsigned char *)(a2 + 23) = v4;
  *(void *)(a2 + 24) = v5;
  if (*(char *)(a2 + 55) < 0) {
    operator delete(*(void **)(a2 + 32));
  }
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = *(void *)v21;
  *(void *)(a2 + 47) = *(void *)&v21[7];
  *(unsigned char *)(a2 + 55) = v7;
  *(void *)(a2 + 56) = v8;
  *(_DWORD *)(a2 + 64) = v9;
  if (*(char *)(a2 + 95) < 0) {
    operator delete(*(void **)(a2 + 72));
  }
  *(void *)(a2 + 72) = v10;
  *(void *)(a2 + 80) = *(void *)v20;
  *(void *)(a2 + 87) = *(void *)&v20[7];
  *(unsigned char *)(a2 + 95) = v11;
  if (*(char *)(a2 + 119) < 0) {
    operator delete(*(void **)(a2 + 96));
  }
  *(void *)(a2 + 96) = v15;
  *(void *)(a2 + 104) = *(void *)v19;
  *(void *)(a2 + 111) = *(void *)&v19[7];
  *(unsigned char *)(a2 + 119) = v14;
  *(_DWORD *)(a2 + 120) = v13;
  if (*(char *)(a2 + 151) < 0) {
    operator delete(*(void **)(a2 + 128));
  }
  *(void *)(a2 + 128) = v17;
  *(void *)(a2 + 136) = *(void *)v18;
  *(void *)(a2 + 143) = *(void *)&v18[7];
  *(unsigned char *)(a2 + 151) = v16;
}

uint64_t sub_83F890(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  if (result != a2)
  {
    uint64_t v6 = result;
    long long v7 = *(_OWORD *)result;
    *(void *)(a3 + 16) = *(void *)(result + 16);
    *(_OWORD *)a3 = v7;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)BOOL result = 0;
    *(void *)(a3 + 24) = *(void *)(result + 24);
    long long v8 = *(_OWORD *)(result + 32);
    *(void *)(a3 + 48) = *(void *)(result + 48);
    *(_OWORD *)(a3 + 32) = v8;
    *(void *)(result + 40) = 0;
    *(void *)(result + 48) = 0;
    *(void *)(result + 32) = 0;
    *(void *)(a3 + 56) = *(void *)(result + 56);
    *(_DWORD *)(a3 + 64) = *(_DWORD *)(result + 64);
    long long v9 = *(_OWORD *)(result + 72);
    *(void *)(a3 + 88) = *(void *)(result + 88);
    *(_OWORD *)(a3 + 72) = v9;
    *(void *)(result + 80) = 0;
    *(void *)(result + 88) = 0;
    *(void *)(result + 72) = 0;
    long long v10 = *(_OWORD *)(result + 96);
    *(void *)(a3 + 112) = *(void *)(result + 112);
    *(_OWORD *)(a3 + 96) = v10;
    *(void *)(result + 104) = 0;
    *(void *)(result + 112) = 0;
    *(void *)(result + 96) = 0;
    *(_DWORD *)(a3 + 120) = *(_DWORD *)(result + 120);
    long long v11 = *(_OWORD *)(result + 128);
    *(void *)(a3 + 144) = *(void *)(result + 144);
    *(_OWORD *)(a3 + 128) = v11;
    *(void *)(result + 136) = 0;
    *(void *)(result + 144) = 0;
    *(void *)(result + 128) = 0;
    uint64_t v41 = 1;
    uint64_t v12 = result + 152;
    if (result + 152 != a2)
    {
      uint64_t v14 = 0;
      uint64_t v15 = a3;
      do
      {
        while (1)
        {
          uint64_t v21 = v12;
          BOOL result = sub_83DFE0(a4, v12, v15);
          int v22 = (long long *)(v15 + 152);
          int v23 = (_OWORD *)(v15 + 184);
          int v24 = (_OWORD *)(v15 + 224);
          int v25 = (_OWORD *)(v15 + 248);
          if (result) {
            break;
          }
          long long v16 = *(_OWORD *)v21;
          *(void *)(v15 + 168) = *(void *)(v21 + 16);
          long long *v22 = v16;
          *(void *)(v21 + 8) = 0;
          *(void *)(v21 + 16) = 0;
          *(void *)uint64_t v21 = 0;
          *(void *)(v15 + 176) = *(void *)(v6 + 176);
          long long v17 = *(_OWORD *)(v6 + 184);
          *(void *)(v15 + 200) = *(void *)(v6 + 200);
          _OWORD *v23 = v17;
          *(void *)(v6 + 192) = 0;
          *(void *)(v6 + 200) = 0;
          *(void *)(v6 + 184) = 0;
          *(void *)(v15 + 208) = *(void *)(v6 + 208);
          *(_DWORD *)(v15 + 216) = *(_DWORD *)(v6 + 216);
          long long v18 = *(_OWORD *)(v6 + 224);
          *(void *)(v15 + 240) = *(void *)(v6 + 240);
          *int v24 = v18;
          *(void *)(v6 + 232) = 0;
          *(void *)(v6 + 240) = 0;
          *(void *)(v6 + 224) = 0;
          long long v19 = *(_OWORD *)(v6 + 248);
          *(void *)(v15 + 264) = *(void *)(v6 + 264);
          *int v25 = v19;
          *(void *)(v6 + 256) = 0;
          *(void *)(v6 + 264) = 0;
          *(void *)(v6 + 248) = 0;
          *(_DWORD *)(v15 + 272) = *(_DWORD *)(v6 + 272);
          long long v20 = *(_OWORD *)(v6 + 280);
          *(void *)(v15 + 296) = *(void *)(v6 + 296);
          *(_OWORD *)(v15 + 280) = v20;
          *(void *)(v6 + 288) = 0;
          *(void *)(v6 + 296) = 0;
          *(void *)(v6 + 280) = 0;
          ++v41;
          uint64_t v12 = v21 + 152;
          v14 += 152;
          v15 += 152;
          uint64_t v6 = v21;
          if (v21 + 152 == a2) {
            return result;
          }
        }
        uint64_t v26 = *(void *)(v15 + 24);
        *(void *)(v15 + 168) = *(void *)(v15 + 16);
        *(void *)(v15 + 176) = v26;
        uint64_t v27 = *(void *)(v15 + 56);
        *(void *)(v15 + 200) = *(void *)(v15 + 48);
        long long *v22 = *(_OWORD *)v15;
        *(void *)(v15 + 8) = 0;
        *(void *)(v15 + 16) = 0;
        *(void *)uint64_t v15 = 0;
        _OWORD *v23 = *(_OWORD *)(v15 + 32);
        *(void *)(v15 + 32) = 0;
        *(void *)(v15 + 40) = 0;
        *(void *)(v15 + 48) = 0;
        *(void *)(v15 + 208) = v27;
        *(_DWORD *)(v15 + 216) = *(_DWORD *)(v15 + 64);
        long long v28 = *(_OWORD *)(v15 + 72);
        *(void *)(v15 + 240) = *(void *)(v15 + 88);
        *int v24 = v28;
        *(void *)(v15 + 72) = 0;
        *(void *)(v15 + 80) = 0;
        long long v29 = *(_OWORD *)(v15 + 96);
        *(void *)(v15 + 264) = *(void *)(v15 + 112);
        *int v25 = v29;
        *(void *)(v15 + 88) = 0;
        *(void *)(v15 + 96) = 0;
        *(void *)(v15 + 104) = 0;
        *(void *)(v15 + 112) = 0;
        *(_DWORD *)(v15 + 272) = *(_DWORD *)(v15 + 120);
        long long v30 = *(_OWORD *)(v15 + 128);
        *(void *)(v15 + 296) = *(void *)(v15 + 144);
        *(_OWORD *)(v15 + 280) = v30;
        *(void *)(v15 + 128) = 0;
        *(void *)(v15 + 136) = 0;
        *(void *)(v15 + 144) = 0;
        uint64_t v31 = a3;
        ++v41;
        if (v15 != a3)
        {
          uint64_t v32 = v14;
          do
          {
            uint64_t v33 = a3 + v32;
            if (!sub_83DFE0(a4, v21, a3 + v32 - 152))
            {
              uint64_t v31 = a3 + v32;
              goto LABEL_22;
            }
            uint64_t v34 = a3 + v32;
            if (*(char *)(a3 + v32 + 23) < 0) {
              operator delete(*(void **)v33);
            }
            *(_OWORD *)uint64_t v33 = *(_OWORD *)(a3 + v32 - 152);
            *(void *)(v33 + 16) = *(void *)(a3 + v32 - 136);
            *(unsigned char *)(v34 - 129) = 0;
            *(unsigned char *)(v33 - 152) = 0;
            *(void *)(v34 + 24) = *(void *)(v34 - 128);
            unint64_t v35 = (void **)(v34 + 32);
            if (*(char *)(v34 + 55) < 0) {
              operator delete(*v35);
            }
            uint64_t v36 = a3 + v32;
            *(_OWORD *)unint64_t v35 = *(_OWORD *)(v34 - 120);
            *(void *)(v34 + 48) = *(void *)(v34 - 104);
            *(unsigned char *)(v36 - 97) = 0;
            *(unsigned char *)(v34 - 120) = 0;
            *(void *)(v36 + 56) = *(void *)(a3 + v32 - 96);
            *(_DWORD *)(v36 + 64) = *(_DWORD *)(a3 + v32 - 88);
            int v37 = (void **)(a3 + v32 + 72);
            if (*(char *)(a3 + v32 + 95) < 0) {
              operator delete(*v37);
            }
            *(_OWORD *)int v37 = *(_OWORD *)(v36 - 80);
            *(void *)(a3 + v32 + 88) = *(void *)(v36 - 64);
            *(unsigned char *)(v36 - 57) = 0;
            *(unsigned char *)(v36 - 80) = 0;
            uint64_t v38 = v36 + 96;
            if (*(char *)(v36 + 119) < 0) {
              operator delete(*(void **)v38);
            }
            uint64_t v39 = a3 + v32;
            *(_OWORD *)uint64_t v38 = *(_OWORD *)(a3 + v32 - 56);
            *(void *)(v38 + 16) = *(void *)(a3 + v32 - 40);
            *(unsigned char *)(v39 - 33) = 0;
            *(unsigned char *)(v39 - 56) = 0;
            *(_DWORD *)(v39 + 120) = *(_DWORD *)(a3 + v32 - 32);
            long long v40 = (void **)(a3 + v32 + 128);
            if (*(char *)(a3 + v32 + 151) < 0) {
              operator delete(*v40);
            }
            *(_OWORD *)long long v40 = *(_OWORD *)(v39 - 24);
            *(void *)(a3 + v32 + 144) = *(void *)(v39 - 8);
            *(unsigned char *)(v39 - 1) = 0;
            *(unsigned char *)(v39 - 24) = 0;
            v32 -= 152;
          }
          while (v32);
          uint64_t v31 = a3;
        }
LABEL_22:
        BOOL result = sub_4C2034(v31, (long long *)v21);
        uint64_t v12 = v21 + 152;
        v14 += 152;
        uint64_t v15 = (uint64_t)v22;
        uint64_t v6 = v21;
      }
      while (v21 + 152 != a2);
    }
  }
  return result;
}

void sub_83FCA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unint64_t a10)
{
  if (v10) {
    sub_840044(&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_83FCC0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v40 = 0;
  if ((void *)a1 == a2)
  {
LABEL_14:
    while (a3 != a4)
    {
      long long v36 = *(_OWORD *)a3;
      *(void *)(a5 + 16) = *(void *)(a3 + 16);
      *(_OWORD *)a5 = v36;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)a3 = 0;
      *(void *)(a5 + 24) = *(void *)(a3 + 24);
      long long v37 = *(_OWORD *)(a3 + 32);
      *(void *)(a5 + 48) = *(void *)(a3 + 48);
      *(_OWORD *)(a5 + 32) = v37;
      *(void *)(a3 + 40) = 0;
      *(void *)(a3 + 48) = 0;
      *(void *)(a3 + 32) = 0;
      *(void *)(a5 + 56) = *(void *)(a3 + 56);
      *(_DWORD *)(a5 + 64) = *(_DWORD *)(a3 + 64);
      long long v38 = *(_OWORD *)(a3 + 72);
      *(void *)(a5 + 88) = *(void *)(a3 + 88);
      *(_OWORD *)(a5 + 72) = v38;
      *(void *)(a3 + 80) = 0;
      *(void *)(a3 + 88) = 0;
      *(void *)(a3 + 72) = 0;
      long long v39 = *(_OWORD *)(a3 + 96);
      *(void *)(a5 + 112) = *(void *)(a3 + 112);
      *(_OWORD *)(a5 + 96) = v39;
      *(void *)(a3 + 104) = 0;
      *(void *)(a3 + 112) = 0;
      *(void *)(a3 + 96) = 0;
      *(_DWORD *)(a5 + 120) = *(_DWORD *)(a3 + 120);
      __n128 result = *(__n128 *)(a3 + 128);
      *(void *)(a5 + 144) = *(void *)(a3 + 144);
      *(__n128 *)(a5 + 128) = result;
      *(void *)(a3 + 136) = 0;
      *(void *)(a3 + 144) = 0;
      *(void *)(a3 + 128) = 0;
      a3 += 152;
      a5 += 152;
    }
  }
  else
  {
    uint64_t v11 = a1;
    uint64_t v12 = 0;
    while (a3 != a4)
    {
      int v18 = sub_83DFE0(a6, a3, v11);
      uint64_t v19 = a5 + v12;
      long long v20 = (__n128 *)(a5 + v12);
      uint64_t v21 = (_OWORD *)(a5 + v12 + 32);
      int v22 = (_OWORD *)(a5 + v12 + 72);
      int v23 = (_OWORD *)(a5 + v12 + 96);
      if (v18)
      {
        long long v24 = *(_OWORD *)a3;
        *(void *)(v19 + 16) = *(void *)(a3 + 16);
        *(_OWORD *)uint64_t v19 = v24;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)a3 = 0;
        v20[1].n128_u64[1] = *(void *)(a3 + 24);
        long long v25 = *(_OWORD *)(a3 + 32);
        *(void *)(a5 + v12 + 48) = *(void *)(a3 + 48);
        *uint64_t v21 = v25;
        *(void *)(a3 + 40) = 0;
        *(void *)(a3 + 48) = 0;
        *(void *)(a3 + 32) = 0;
        v20[3].n128_u64[1] = *(void *)(a3 + 56);
        v20[4].n128_u32[0] = *(_DWORD *)(a3 + 64);
        long long v26 = *(_OWORD *)(a3 + 72);
        *(void *)(a5 + v12 + 88) = *(void *)(a3 + 88);
        _OWORD *v22 = v26;
        *(void *)(a3 + 80) = 0;
        *(void *)(a3 + 88) = 0;
        *(void *)(a3 + 72) = 0;
        long long v27 = *(_OWORD *)(a3 + 96);
        *(void *)(a5 + v12 + 112) = *(void *)(a3 + 112);
        _OWORD *v23 = v27;
        *(void *)(a3 + 104) = 0;
        *(void *)(a3 + 112) = 0;
        *(void *)(a3 + 96) = 0;
        v20[7].n128_u32[2] = *(_DWORD *)(a3 + 120);
        __n128 result = *(__n128 *)(a3 + 128);
        v20[9].n128_u64[0] = *(void *)(a3 + 144);
        v20[8] = result;
        *(void *)(a3 + 136) = 0;
        *(void *)(a3 + 144) = 0;
        *(void *)(a3 + 128) = 0;
        a3 += 152;
      }
      else
      {
        long long v13 = *(_OWORD *)v11;
        *(void *)(v19 + 16) = *(void *)(v11 + 16);
        *(_OWORD *)uint64_t v19 = v13;
        *(void *)(v11 + 8) = 0;
        *(void *)(v11 + 16) = 0;
        *(void *)uint64_t v11 = 0;
        v20[1].n128_u64[1] = *(void *)(v11 + 24);
        long long v14 = *(_OWORD *)(v11 + 32);
        *(void *)(a5 + v12 + 48) = *(void *)(v11 + 48);
        *uint64_t v21 = v14;
        *(void *)(v11 + 40) = 0;
        *(void *)(v11 + 48) = 0;
        *(void *)(v11 + 32) = 0;
        v20[3].n128_u64[1] = *(void *)(v11 + 56);
        v20[4].n128_u32[0] = *(_DWORD *)(v11 + 64);
        long long v15 = *(_OWORD *)(v11 + 72);
        *(void *)(a5 + v12 + 88) = *(void *)(v11 + 88);
        _OWORD *v22 = v15;
        *(void *)(v11 + 80) = 0;
        *(void *)(v11 + 88) = 0;
        *(void *)(v11 + 72) = 0;
        long long v16 = *(_OWORD *)(v11 + 96);
        *(void *)(a5 + v12 + 112) = *(void *)(v11 + 112);
        _OWORD *v23 = v16;
        *(void *)(v11 + 104) = 0;
        *(void *)(v11 + 112) = 0;
        *(void *)(v11 + 96) = 0;
        v20[7].n128_u32[2] = *(_DWORD *)(v11 + 120);
        __n128 result = *(__n128 *)(v11 + 128);
        v20[9].n128_u64[0] = *(void *)(v11 + 144);
        v20[8] = result;
        *(void *)(v11 + 136) = 0;
        *(void *)(v11 + 144) = 0;
        *(void *)(v11 + 128) = 0;
        v11 += 152;
      }
      ++v40;
      v12 += 152;
      if ((void *)v11 == a2)
      {
        a5 += v12;
        goto LABEL_14;
      }
    }
    if ((void *)v11 != a2)
    {
      uint64_t v28 = 0;
      do
      {
        long long v29 = (void *)(v11 + v28);
        uint64_t v30 = a5 + v12 + v28;
        long long v31 = *(_OWORD *)(v11 + v28);
        *(void *)(v30 + 16) = *(void *)(v11 + v28 + 16);
        *(_OWORD *)uint64_t v30 = v31;
        v29[1] = 0;
        v29[2] = 0;
        *long long v29 = 0;
        uint64_t v32 = a5 + v28 + v12;
        *(void *)(v32 + 24) = *(void *)(v11 + v28 + 24);
        long long v33 = *(_OWORD *)(v11 + v28 + 32);
        *(void *)(v32 + 48) = *(void *)(v11 + v28 + 48);
        *(_OWORD *)(v32 + 32) = v33;
        v29[5] = 0;
        v29[6] = 0;
        v29[4] = 0;
        *(void *)(v32 + 56) = *(void *)(v11 + v28 + 56);
        *(_DWORD *)(v32 + 64) = *(_DWORD *)(v11 + v28 + 64);
        long long v34 = *(_OWORD *)(v11 + v28 + 72);
        *(void *)(v32 + 88) = *(void *)(v11 + v28 + 88);
        *(_OWORD *)(v32 + 72) = v34;
        v29[10] = 0;
        v29[11] = 0;
        v29[9] = 0;
        long long v35 = *(_OWORD *)(v11 + v28 + 96);
        *(void *)(v32 + 112) = *(void *)(v11 + v28 + 112);
        *(_OWORD *)(v32 + 96) = v35;
        v29[13] = 0;
        v29[14] = 0;
        v29[12] = 0;
        *(_DWORD *)(v32 + 120) = *(_DWORD *)(v11 + v28 + 120);
        __n128 result = *(__n128 *)(v11 + v28 + 128);
        *(void *)(v30 + 144) = *(void *)(v11 + v28 + 144);
        *(__n128 *)(v30 + 128) = result;
        v29[17] = 0;
        v29[18] = 0;
        v29[16] = 0;
        v28 += 152;
      }
      while (v29 + 19 != a2);
    }
  }
  return result;
}

void sub_840028(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unint64_t a10)
{
  if (v10) {
    sub_840044(&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

void sub_840044(unint64_t *a1, uint64_t a2)
{
  if (*a1)
  {
    unint64_t v3 = 0;
    char v4 = (char *)(a2 + 95);
    do
    {
      if (v4[56] < 0)
      {
        operator delete(*(void **)(v4 + 33));
        if ((v4[24] & 0x80000000) == 0)
        {
LABEL_6:
          if ((*v4 & 0x80000000) == 0) {
            goto LABEL_7;
          }
          goto LABEL_12;
        }
      }
      else if ((v4[24] & 0x80000000) == 0)
      {
        goto LABEL_6;
      }
      operator delete(*(void **)(v4 + 1));
      if ((*v4 & 0x80000000) == 0)
      {
LABEL_7:
        if ((*(v4 - 40) & 0x80000000) == 0) {
          goto LABEL_8;
        }
        goto LABEL_13;
      }
LABEL_12:
      operator delete(*(void **)(v4 - 23));
      if ((*(v4 - 40) & 0x80000000) == 0)
      {
LABEL_8:
        if (*(v4 - 72) < 0) {
          goto LABEL_14;
        }
        goto LABEL_3;
      }
LABEL_13:
      operator delete(*(void **)(v4 - 63));
      if (*(v4 - 72) < 0) {
LABEL_14:
      }
        operator delete(*(void **)(v4 - 95));
LABEL_3:
      ++v3;
      v4 += 152;
    }
    while (v3 < *a1);
  }
}

void sub_84010C(uint64_t a1, long long *a2, long long *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = a2;
  uint64_t v11 = a1;
  if (a5 > a6)
  {
    if (a2 != a3)
    {
      uint64_t v12 = 0;
      unint64_t v13 = 0;
      do
      {
        uint64_t v14 = a7 + v12;
        long long v15 = (void *)((char *)a2 + v12);
        long long v16 = *(long long *)((char *)a2 + v12);
        *(void *)(v14 + 16) = *(void *)((char *)a2 + v12 + 16);
        *(_OWORD *)uint64_t v14 = v16;
        v15[1] = 0;
        v15[2] = 0;
        *long long v15 = 0;
        *(void *)(v14 + 24) = *(void *)((char *)a2 + v12 + 24);
        long long v17 = *(long long *)((char *)a2 + v12 + 32);
        *(void *)(v14 + 48) = *(void *)((char *)a2 + v12 + 48);
        *(_OWORD *)(v14 + 32) = v17;
        v15[5] = 0;
        v15[6] = 0;
        uint64_t v18 = *(void *)((char *)a2 + v12 + 56);
        v15[4] = 0;
        *(void *)(v14 + 56) = v18;
        *(_DWORD *)(v14 + 64) = *(_DWORD *)((char *)a2 + v12 + 64);
        long long v19 = *(long long *)((char *)a2 + v12 + 72);
        *(void *)(v14 + 88) = *(void *)((char *)a2 + v12 + 88);
        *(_OWORD *)(v14 + 72) = v19;
        v15[10] = 0;
        v15[11] = 0;
        long long v20 = *(long long *)((char *)a2 + v12 + 96);
        uint64_t v21 = *(void *)((char *)a2 + v12 + 112);
        v15[9] = 0;
        *(void *)(v14 + 112) = v21;
        *(_OWORD *)(v14 + 96) = v20;
        v15[13] = 0;
        v15[14] = 0;
        LODWORD(v21) = *(_DWORD *)((char *)a2 + v12 + 120);
        v15[12] = 0;
        *(_DWORD *)(v14 + 120) = v21;
        long long v22 = *(long long *)((char *)a2 + v12 + 128);
        *(void *)(v14 + 144) = *(void *)((char *)a2 + v12 + 144);
        *(_OWORD *)(v14 + 128) = v22;
        v15[17] = 0;
        v15[18] = 0;
        v15[16] = 0;
        ++v13;
        v12 += 152;
      }
      while (v15 + 19 != (void *)a3);
      unint64_t v44 = v13;
      if (v12)
      {
        uint64_t v23 = a7 + v12;
        uint64_t v24 = (uint64_t)a3 - 152;
        while (v10 != (long long *)v11)
        {
          int v25 = sub_83DFE0(a4, v23 - 152, (uint64_t)v10 - 152);
          if (v25) {
            long long v26 = (long long *)((char *)v10 - 152);
          }
          else {
            long long v26 = (long long *)(v23 - 152);
          }
          if (v25) {
            uint64_t v10 = (long long *)((char *)v10 - 152);
          }
          else {
            v23 -= 152;
          }
          sub_4C2034(v24, v26);
          v24 -= 152;
          if (v23 == a7) {
            goto LABEL_32;
          }
        }
        uint64_t v41 = 0;
        do
        {
          uint64_t v42 = v24 + v41;
          v41 -= 152;
          sub_4C2034(v42, (long long *)(v23 + v41));
        }
        while (v23 + v41 != a7);
      }
      goto LABEL_32;
    }
LABEL_26:
    unint64_t v44 = 0;
    goto LABEL_32;
  }
  if ((long long *)a1 == a2) {
    goto LABEL_26;
  }
  uint64_t v27 = 0;
  unint64_t v28 = 0;
  do
  {
    long long v29 = (void *)(a1 + v27);
    uint64_t v30 = a7 + v27;
    long long v31 = *(_OWORD *)(a1 + v27);
    *(void *)(v30 + 16) = *(void *)(a1 + v27 + 16);
    *(_OWORD *)uint64_t v30 = v31;
    v29[1] = 0;
    v29[2] = 0;
    *long long v29 = 0;
    *(void *)(v30 + 24) = *(void *)(a1 + v27 + 24);
    long long v32 = *(_OWORD *)(a1 + v27 + 32);
    *(void *)(v30 + 48) = *(void *)(a1 + v27 + 48);
    *(_OWORD *)(v30 + 32) = v32;
    v29[5] = 0;
    v29[6] = 0;
    uint64_t v33 = *(void *)(a1 + v27 + 56);
    v29[4] = 0;
    *(void *)(v30 + 56) = v33;
    *(_DWORD *)(v30 + 64) = *(_DWORD *)(a1 + v27 + 64);
    long long v34 = *(_OWORD *)(a1 + v27 + 72);
    *(void *)(v30 + 88) = *(void *)(a1 + v27 + 88);
    *(_OWORD *)(v30 + 72) = v34;
    v29[10] = 0;
    v29[11] = 0;
    long long v35 = *(_OWORD *)(a1 + v27 + 96);
    uint64_t v36 = *(void *)(a1 + v27 + 112);
    v29[9] = 0;
    *(void *)(v30 + 112) = v36;
    *(_OWORD *)(v30 + 96) = v35;
    v29[13] = 0;
    v29[14] = 0;
    LODWORD(v36) = *(_DWORD *)(a1 + v27 + 120);
    v29[12] = 0;
    *(_DWORD *)(v30 + 120) = v36;
    long long v37 = *(_OWORD *)(a1 + v27 + 128);
    *(void *)(v30 + 144) = *(void *)(a1 + v27 + 144);
    *(_OWORD *)(v30 + 128) = v37;
    v29[17] = 0;
    v29[18] = 0;
    v29[16] = 0;
    ++v28;
    v27 += 152;
  }
  while (v29 + 19 != (void *)a2);
  unint64_t v44 = v28;
  if (v27)
  {
    long long v38 = (long long *)(a7 + v27);
    uint64_t v39 = a7 + v27 - 152;
    uint64_t v40 = (long long *)a7;
    while (v10 != a3)
    {
      if (sub_83DFE0(a4, (uint64_t)v10, (uint64_t)v40))
      {
        sub_4C2034(v11, v10);
        uint64_t v10 = (long long *)((char *)v10 + 152);
        v11 += 152;
        if (v38 == v40) {
          goto LABEL_32;
        }
      }
      else
      {
        sub_4C2034(v11, v40);
        uint64_t v40 = (long long *)((char *)v40 + 152);
        v11 += 152;
        if (v38 == v40) {
          goto LABEL_32;
        }
      }
    }
    uint64_t v43 = 0;
    do
    {
      sub_4C2034(v11 + v43, (long long *)((char *)v40 + v43));
      v43 += 152;
    }
    while ((long long *)v39 != (long long *)((char *)v40 + v43 - 152));
  }
LABEL_32:
  if (a7) {
    sub_840044(&v44, a7);
  }
}

void sub_840414(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unint64_t a10)
{
  if (v10) {
    sub_840044(&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_840434(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a2;
  if (a5 < 1) {
    return v5;
  }
  uint64_t v9 = a1[2];
  unint64_t v10 = a1[1];
  if (a5 > (uint64_t)(v9 - v10) >> 7)
  {
    uint64_t v11 = *a1;
    unint64_t v12 = a5 + ((uint64_t)(v10 - *a1) >> 7);
    if (v12 >> 57) {
      sub_2E00();
    }
    uint64_t v13 = v9 - v11;
    if (v13 >> 6 > v12) {
      unint64_t v12 = v13 >> 6;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFF80) {
      unint64_t v14 = 0x1FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v12;
    }
    long long v34 = a1 + 2;
    if (v14)
    {
      if (v14 >> 57) {
        sub_188D718();
      }
      long long v15 = (char *)operator new(v14 << 7);
    }
    else
    {
      long long v15 = 0;
    }
    uint64_t v22 = 0;
    uint64_t v23 = &v15[128 * ((v5 - v11) >> 7)];
    long long __p = v15;
    long long v31 = v23;
    long long v32 = v23;
    uint64_t v33 = &v15[128 * v14];
    do
    {
      uint64_t v24 = &v23[v22];
      int v25 = (void *)(a3 + v22);
      *((void *)v24 + 2) = 0;
      *(_OWORD *)uint64_t v24 = *(_OWORD *)(a3 + v22);
      *((void *)v24 + 2) = *(void *)(a3 + v22 + 16);
      *int v25 = 0;
      v25[1] = 0;
      v25[2] = 0;
      *((void *)v24 + 4) = 0;
      *((void *)v24 + 5) = 0;
      *(_OWORD *)(v24 + 24) = *(_OWORD *)(a3 + v22 + 24);
      *((void *)v24 + 5) = *(void *)(a3 + v22 + 40);
      v25[4] = 0;
      v25[5] = 0;
      __int16 v26 = *(_WORD *)(a3 + v22 + 48);
      v25[3] = 0;
      *((_WORD *)v24 + 24) = v26;
      *((void *)v24 + 8) = 0;
      *((void *)v24 + 9) = 0;
      *(_OWORD *)(v24 + 56) = *(_OWORD *)(a3 + v22 + 56);
      *((void *)v24 + 9) = *(void *)(a3 + v22 + 72);
      v25[7] = 0;
      v25[8] = 0;
      v25[9] = 0;
      *((void *)v24 + 11) = 0;
      *((void *)v24 + 12) = 0;
      *((_OWORD *)v24 + 5) = *(_OWORD *)(a3 + v22 + 80);
      *((void *)v24 + 12) = *(void *)(a3 + v22 + 96);
      v25[10] = 0;
      v25[11] = 0;
      v25[12] = 0;
      *((void *)v24 + 14) = 0;
      *((void *)v24 + 15) = 0;
      *(_OWORD *)(v24 + 104) = *(_OWORD *)(a3 + v22 + 104);
      *((void *)v24 + 15) = *(void *)(a3 + v22 + 120);
      v25[13] = 0;
      v25[14] = 0;
      v25[15] = 0;
      v22 += 128;
    }
    while (a5 << 7 != v22);
    long long v32 = &v23[128 * a5];
    uint64_t v5 = sub_6CD8A0(a1, &__p, v5);
    unint64_t v28 = v31;
    for (uint64_t i = v32; v32 != v28; uint64_t i = v32)
    {
      long long v32 = i - 128;
      sub_2DF518((void **)i - 16);
    }
    if (__p) {
      operator delete(__p);
    }
    return v5;
  }
  uint64_t v16 = (uint64_t)(v10 - a2) >> 7;
  if (v16 >= a5)
  {
    uint64_t v17 = a3 + (a5 << 7);
    sub_6CD21C((uint64_t)a1, a2, v10, a2 + (a5 << 7));
    if (v17 == a3) {
      return v5;
    }
    goto LABEL_20;
  }
  uint64_t v17 = a3 + (v16 << 7);
  uint64_t v18 = a1[1];
  if (v17 != a4)
  {
    uint64_t v19 = v17;
    uint64_t v20 = a1[1];
    do
    {
      *(void *)uint64_t v20 = 0;
      *(void *)(v20 + 8) = 0;
      *(void *)(v20 + 16) = 0;
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v19;
      *(void *)(v20 + 16) = *(void *)(v19 + 16);
      *(void *)uint64_t v19 = 0;
      *(void *)(v19 + 8) = 0;
      *(void *)(v19 + 16) = 0;
      *(void *)(v20 + 24) = 0;
      *(void *)(v20 + 32) = 0;
      *(void *)(v20 + 40) = 0;
      *(_OWORD *)(v20 + 24) = *(_OWORD *)(v19 + 24);
      *(void *)(v20 + 40) = *(void *)(v19 + 40);
      *(void *)(v19 + 32) = 0;
      *(void *)(v19 + 40) = 0;
      *(void *)(v19 + 24) = 0;
      *(_WORD *)(v20 + 48) = *(_WORD *)(v19 + 48);
      *(void *)(v20 + 64) = 0;
      *(void *)(v20 + 72) = 0;
      *(void *)(v20 + 56) = 0;
      *(_OWORD *)(v20 + 56) = *(_OWORD *)(v19 + 56);
      *(void *)(v20 + 72) = *(void *)(v19 + 72);
      *(void *)(v19 + 56) = 0;
      *(void *)(v19 + 64) = 0;
      *(void *)(v19 + 72) = 0;
      *(void *)(v20 + 80) = 0;
      *(void *)(v20 + 88) = 0;
      *(void *)(v20 + 96) = 0;
      *(_OWORD *)(v20 + 80) = *(_OWORD *)(v19 + 80);
      *(void *)(v20 + 96) = *(void *)(v19 + 96);
      *(void *)(v19 + 80) = 0;
      *(void *)(v19 + 88) = 0;
      *(void *)(v19 + 96) = 0;
      *(void *)(v20 + 104) = 0;
      *(void *)(v20 + 112) = 0;
      *(void *)(v20 + 120) = 0;
      *(_OWORD *)(v20 + 104) = *(_OWORD *)(v19 + 104);
      *(void *)(v20 + 120) = *(void *)(v19 + 120);
      *(void *)(v19 + 104) = 0;
      *(void *)(v19 + 112) = 0;
      *(void *)(v19 + 120) = 0;
      v18 += 128;
      v19 += 128;
      v20 += 128;
    }
    while (v19 != a4);
  }
  a1[1] = v18;
  if ((uint64_t)(v10 - a2) >= 1)
  {
    sub_6CD21C((uint64_t)a1, a2, v10, a2 + (a5 << 7));
    if (v17 != a3)
    {
LABEL_20:
      uint64_t v21 = v5;
      do
      {
        sub_6CD344(v21, a3);
        a3 += 128;
        v21 += 128;
      }
      while (a3 != v17);
    }
  }
  return v5;
}

void sub_84075C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_6CCFB4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_840770(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = (a1[1] - *a1) >> 7;
  unint64_t v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 57) {
    sub_2E00();
  }
  uint64_t v6 = a1[2] - *a1;
  if (v6 >> 6 > v4) {
    unint64_t v4 = v6 >> 6;
  }
  if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFF80) {
    unint64_t v7 = 0x1FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v7 = v4;
  }
  if (v7)
  {
    if (v7 >> 57) {
      sub_188D718();
    }
    long long v8 = (char *)operator new(v7 << 7);
  }
  else
  {
    long long v8 = 0;
  }
  uint64_t v18 = (uint64_t)&v8[128 * v3];
  uint64_t v19 = &v8[128 * v7];
  sub_840970(v18, a2);
  uint64_t v9 = v18 + 128;
  uint64_t v11 = (void **)*a1;
  unint64_t v10 = (void **)a1[1];
  if (v10 == (void **)*a1)
  {
    *a1 = v18;
    a1[1] = v9;
    a1[2] = (uint64_t)v19;
  }
  else
  {
    uint64_t v12 = 0;
    do
    {
      uint64_t v13 = v18 + v12 * 8;
      unint64_t v14 = &v10[v12];
      *(void *)(v13 - 128) = 0;
      *(void *)(v13 - 120) = 0;
      *(void *)(v13 - 112) = 0;
      *(_OWORD *)(v13 - 128) = *(_OWORD *)&v10[v12 - 16];
      *(void *)(v13 - 112) = v10[v12 - 14];
      *(v14 - 16) = 0;
      *(v14 - 15) = 0;
      *(v14 - 14) = 0;
      *(void *)(v13 - 104) = 0;
      *(void *)(v13 - 96) = 0;
      *(void *)(v13 - 88) = 0;
      *(_OWORD *)(v13 - 104) = *(_OWORD *)&v10[v12 - 13];
      *(void *)(v13 - 88) = v10[v12 - 11];
      *(v14 - 12) = 0;
      *(v14 - 11) = 0;
      *(v14 - 13) = 0;
      __int16 v15 = (__int16)v10[v12 - 10];
      *(void *)(v13 - 64) = 0;
      *(void *)(v13 - 56) = 0;
      *(void *)(v13 - 72) = 0;
      *(_WORD *)(v13 - 80) = v15;
      *(_OWORD *)(v13 - 72) = *(_OWORD *)&v10[v12 - 9];
      *(void *)(v13 - 56) = v10[v12 - 7];
      *(v14 - 9) = 0;
      *(v14 - 8) = 0;
      *(v14 - 7) = 0;
      *(void *)(v13 - 48) = 0;
      *(void *)(v13 - 40) = 0;
      *(void *)(v13 - 32) = 0;
      *(_OWORD *)(v13 - 48) = *(_OWORD *)&v10[v12 - 6];
      *(void *)(v13 - 32) = v10[v12 - 4];
      *(v14 - 6) = 0;
      *(v14 - 5) = 0;
      *(v14 - 4) = 0;
      *(void *)(v13 - 24) = 0;
      *(void *)(v13 - 16) = 0;
      *(void *)(v13 - 8) = 0;
      *(_OWORD *)(v13 - 24) = *(_OWORD *)&v10[v12 - 3];
      *(void *)(v13 - 8) = v10[v12 - 1];
      *(v14 - 3) = 0;
      *(v14 - 2) = 0;
      *(v14 - 1) = 0;
      v12 -= 16;
    }
    while (&v10[v12] != v11);
    uint64_t v16 = (void **)*a1;
    unint64_t v10 = (void **)a1[1];
    *a1 = v18 + v12 * 8;
    a1[1] = v9;
    a1[2] = (uint64_t)v19;
    if (v10 != v16)
    {
      do
        unint64_t v10 = sub_2DF518(v10 - 16);
      while (v10 != v16);
      unint64_t v10 = v16;
    }
  }
  if (v10) {
    operator delete(v10);
  }
  return v18 + 128;
}

void sub_84095C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_6CCFB4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_840970(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_840A74((char **)a1, (long long **)a2);
  sub_840A74(v4 + 3, (long long **)(a2 + 24));
  __int16 v5 = *(_WORD *)(a2 + 48);
  *(void *)(a1 + 56) = 0;
  *(_WORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  sub_840B4C((unsigned char *)(a1 + 56), *(void *)(a2 + 56), *(void *)(a2 + 64), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 3));
  sub_6C8C90((char **)(a1 + 80), (long long **)(a2 + 80));
  sub_840A74((char **)(a1 + 104), (long long **)(a2 + 104));
  return a1;
}

void sub_840A24(_Unwind_Exception *a1)
{
  sub_2DE3B8(v4);
  sub_2DE7D0(v3);
  sub_1A6DC(v2);
  sub_1A6DC(v1);
  _Unwind_Resume(a1);
}

void sub_840A60(_Unwind_Exception *a1)
{
  sub_1A6DC(v1);
  _Unwind_Resume(a1);
}

char **sub_840A74(char **a1, long long **a2)
{
  a1[2] = 0;
  int v3 = a1 + 16;
  *a1 = 0;
  a1[1] = 0;
  unint64_t v4 = *a2;
  __int16 v5 = a2[1];
  int64_t v6 = (char *)v5 - (char *)*a2;
  if (v5 != *a2)
  {
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * (v6 >> 4);
    if (v7 >= 0x555555555555556) {
      sub_2E00();
    }
    long long v8 = (char *)operator new(v6);
    *a1 = v8;
    a1[1] = v8;
    a1[2] = &v8[48 * v7];
    a1[1] = sub_34B5B0(v3, v4, v5, v8);
  }
  return a1;
}

void sub_840B20(_Unwind_Exception *exception_object)
{
  v1[1] = v2;
  if (*v1) {
    sub_20AB2D0((uint64_t)(v1 + 1), *v1);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_840B4C(unsigned char *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    __int16 v5 = result;
    if (a4 >= 0x666666666666667) {
      sub_2E00();
    }
    __n128 result = operator new(40 * a4);
    long long v8 = result;
    *__int16 v5 = result;
    v5[1] = result;
    v5[2] = &result[40 * a4];
    if (a2 != a3)
    {
      uint64_t v9 = 0;
      do
      {
        uint64_t v10 = a2 + v9;
        *(_DWORD *)&v8[v9] = *(_DWORD *)(a2 + v9);
        __n128 result = &v8[v9 + 8];
        uint64_t v11 = (void **)(a2 + v9 + 8);
        if (*(char *)(a2 + v9 + 31) < 0)
        {
          __n128 result = sub_4200(result, *v11, *(void *)(v10 + 16));
        }
        else
        {
          *(_OWORD *)__n128 result = *(_OWORD *)v11;
          *(void *)&v8[v9 + 24] = *(void *)(a2 + v9 + 24);
        }
        v8[v9 + 32] = *(unsigned char *)(v10 + 32);
        v9 += 40;
      }
      while (v10 + 40 != a3);
      v8 += v9;
    }
    v5[1] = v8;
  }
  return result;
}

void sub_840C4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_840C60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  for (; v11; v11 -= 40)
  {
    if (*(char *)(v10 + v11 - 9) < 0) {
      operator delete(*(void **)(v10 + v11 - 32));
    }
  }
  *(void *)(v9 + 8) = v10;
  sub_4F6254(&a9);
  _Unwind_Resume(a1);
}

char *sub_840C9C(char **a1, uint64_t a2)
{
  int v3 = *a1;
  unint64_t v4 = a1[1];
  unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 4);
  unint64_t v6 = v5 + 1;
  if (v5 + 1 > 0x555555555555555) {
    sub_2E00();
  }
  if (0x5555555555555556 * ((a1[2] - v3) >> 4) > v6) {
    unint64_t v6 = 0x5555555555555556 * ((a1[2] - v3) >> 4);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 4) >= 0x2AAAAAAAAAAAAAALL) {
    unint64_t v8 = 0x555555555555555;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v8)
  {
    if (v8 > 0x555555555555555) {
      sub_188D718();
    }
    uint64_t v9 = (char *)operator new(48 * v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = &v9[48 * v5];
  uint64_t v18 = &v9[48 * v8];
  if (*(char *)(a2 + 23) < 0)
  {
    sub_4200(v10, *(void **)a2, *(void *)(a2 + 8));
    int v3 = *a1;
    unint64_t v4 = a1[1];
    uint64_t v10 = &v9[48 * v5];
  }
  else
  {
    *(_OWORD *)uint64_t v10 = *(_OWORD *)a2;
    *((void *)v10 + 2) = *(void *)(a2 + 16);
  }
  uint64_t v11 = &v9[48 * v5];
  *(_OWORD *)(v11 + 24) = *(_OWORD *)(a2 + 24);
  *((void *)v11 + 5) = *(void *)(a2 + 40);
  uint64_t v12 = v11 + 48;
  if (v4 == v3)
  {
    __int16 v15 = v3;
  }
  else
  {
    do
    {
      long long v13 = *((_OWORD *)v4 - 3);
      *((void *)v10 - 4) = *((void *)v4 - 4);
      *((_OWORD *)v10 - 3) = v13;
      *((void *)v4 - 5) = 0;
      *((void *)v4 - 4) = 0;
      *((void *)v4 - 6) = 0;
      long long v14 = *(_OWORD *)(v4 - 24);
      *((void *)v10 - 1) = *((void *)v4 - 1);
      *(_OWORD *)(v10 - 24) = v14;
      v10 -= 48;
      v4 -= 48;
    }
    while (v4 != v3);
    __int16 v15 = *a1;
    int v3 = a1[1];
  }
  *a1 = v10;
  a1[1] = v12;
  a1[2] = v18;
  if (v3 != v15)
  {
    uint64_t v16 = (void **)(v3 - 48);
    do
    {
      if (*((char *)v16 + 23) < 0) {
        operator delete(*v16);
      }
      v16 -= 6;
    }
    while (v16 + 6 != (void **)v15);
    int v3 = v15;
  }
  if (v3) {
    operator delete(v3);
  }
  return v12;
}

void sub_840E84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_354580((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_840E98(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  unint64_t v5 = *(uint64_t **)a1;
  uint64_t v6 = **(void **)a1;
  uint64_t v7 = *a2;
  unint64_t v8 = HIDWORD(*a2);
  unint64_t v9 = *a2 & 0xFFFFFFFFFFFFLL;
  uint64_t v10 = sub_2D5D58(v6, v9);
  if (*(unsigned char *)(v6 + 7772))
  {
    uint64_t v11 = sub_2DB8E0(v6 + 3896, v7, 0);
    uint64_t v12 = &v11[-*(int *)v11];
    if (*(unsigned __int16 *)v12 < 5u)
    {
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v13 = *((unsigned __int16 *)v12 + 2);
      if (v13) {
        v13 += (uint64_t)&v11[*(unsigned int *)&v11[v13]];
      }
    }
    uint64_t v14 = v13 + 4 * (unsigned __int16)v8 + 4 + *(unsigned int *)(v13 + 4 * (unsigned __int16)v8 + 4);
  }
  else
  {
    uint64_t v14 = 0;
  }
  *(void *)&long long v100 = v10;
  *((void *)&v100 + 1) = v14;
  *(void *)&long long v101 = sub_2E5C38(v6, v9, 1);
  *((void *)&v101 + 1) = v15;
  LODWORD(v102) = v7;
  WORD2(v102) = v8;
  BYTE6(v102) = (v7 & 0xFF000000000000) != 0;
  uint64_t v16 = *v5;
  uint64_t v17 = *a3;
  unint64_t v18 = HIDWORD(*a3);
  unint64_t v19 = *a3 & 0xFFFFFFFFFFFFLL;
  uint64_t v20 = sub_2D5D58(*v5, v19);
  if (*(unsigned char *)(v16 + 7772))
  {
    uint64_t v21 = sub_2DB8E0(v16 + 3896, v17, 0);
    uint64_t v22 = &v21[-*(int *)v21];
    if (*(unsigned __int16 *)v22 < 5u)
    {
      uint64_t v23 = 0;
    }
    else
    {
      uint64_t v23 = *((unsigned __int16 *)v22 + 2);
      if (v23) {
        v23 += (uint64_t)&v21[*(unsigned int *)&v21[v23]];
      }
    }
    uint64_t v24 = v23 + 4 * (unsigned __int16)v18 + 4 + *(unsigned int *)(v23 + 4 * (unsigned __int16)v18 + 4);
  }
  else
  {
    uint64_t v24 = 0;
  }
  v98[0] = v20;
  v98[1] = v24;
  v98[2] = sub_2E5C38(v16, v19, 1);
  v98[3] = v25;
  LODWORD(v99) = v17;
  WORD2(v99) = v18;
  BYTE6(v99) = (v17 & 0xFF000000000000) != 0;
  uint64_t v95 = 0;
  uint64_t v96 = 0;
  uint64_t v97 = 0;
  sub_2E44A4(*v5, (uint64_t)&v100, &v95);
  uint64_t v26 = v95;
  uint64_t v27 = v96;
  if (v95 != v96)
  {
    unint64_t v28 = &v75;
    while (1)
    {
      long long v29 = (unsigned __int16 *)(v100 - *(int *)v100);
      if (*v29 < 0x2Fu) {
        goto LABEL_19;
      }
      uint64_t v30 = v29[23];
      if (!v30
        || *(unsigned char *)(v100 + v30) != 14
        || __PAIR64__(*(unsigned __int16 *)(v26 + 36), *(_DWORD *)(v26 + 32)) == __PAIR64__(WORD2(v99), v99)
        && (HIWORD(v99) & 1) != (*(unsigned char *)(v26 + 38) == 0))
      {
        goto LABEL_19;
      }
      uint64_t v31 = *v5;
      __p.__r_.__value_.__r.__words[0] = v102;
      long long __str = v100;
      long long __str_16 = v101;
      __p.__r_.__value_.__s.__data_[6] = BYTE6(v102) ^ 1;
      int v32 = sub_2E41C4(v31, v26, (uint64_t)&__str);
      if (v32 == sub_2E41C4(*v5, v26, (uint64_t)v98)) {
        goto LABEL_19;
      }
      v69[0] = *(void **)(v26 + 32);
      uint64_t v33 = *(void *)(a1 + 8);
      v72[0] = 0;
      v72[1] = 0;
      uint64_t v73 = 0;
      sub_832C78((uint64_t)v5, (unsigned int *)v69, v33, (uint64_t)v72, (uint64_t)&__str);
      if (SHIBYTE(v73) < 0) {
        operator delete(v72[0]);
      }
      uint64_t v34 = *(void *)(a1 + 16);
      long long v35 = (unsigned __int16 *)(*((void *)&v100 + 1) - (int)**((_DWORD **)&v100 + 1));
      unsigned int v36 = *v35;
      if (BYTE6(v102))
      {
        if (v36 >= 5)
        {
          unsigned int v37 = v35[2];
          if (v37) {
            goto LABEL_34;
          }
        }
      }
      else if (v36 >= 9)
      {
        unsigned int v37 = v35[4];
        if (v37)
        {
LABEL_34:
          __int16 v38 = *(_WORD *)(*((void *)&v100 + 1) + v37);
          int v39 = *(unsigned __int8 *)(v34 + 38);
          uint64_t v40 = *(int **)(v34 + 8);
          uint64_t v41 = (unsigned __int16 *)((char *)v40 - *v40);
          unsigned int v42 = *v41;
          if (v39) {
            goto LABEL_39;
          }
          goto LABEL_35;
        }
      }
      __int16 v38 = 0;
      int v44 = *(unsigned __int8 *)(v34 + 38);
      uint64_t v40 = *(int **)(v34 + 8);
      uint64_t v41 = (unsigned __int16 *)((char *)v40 - *v40);
      unsigned int v42 = *v41;
      if (v44)
      {
LABEL_39:
        if (v42 >= 9)
        {
          unsigned int v43 = v41[4];
          if (v43) {
            goto LABEL_41;
          }
        }
        goto LABEL_42;
      }
LABEL_35:
      if (v42 >= 5)
      {
        unsigned int v43 = v41[2];
        if (v43)
        {
LABEL_41:
          int v45 = *(unsigned __int16 *)((char *)v40 + v43);
          goto LABEL_43;
        }
      }
LABEL_42:
      int v45 = 0;
LABEL_43:
      unsigned __int16 v46 = v38 + 18000;
      unsigned __int16 v47 = v38 - 18000;
      if ((unsigned __int16)(v46 >> 5) < 0x465u) {
        unsigned __int16 v47 = v46;
      }
      int v48 = v45 - v47;
      if (v48 > 18000) {
        v48 -= 36000;
      }
      if (v48 < -17999) {
        v48 += 36000;
      }
      if (fabs((double)v48 / 100.0) > *((double *)v5 + 11))
      {
        int v49 = sub_2E41C4(*v5, v26, *(void *)(a1 + 24));
        if (v49 != sub_2E41C4(*v5, v26, *(void *)(a1 + 16)) && sub_6F2FD8((uint64_t)&__str))
        {
          uint64_t v50 = *(void *)(v26 + 32);
          uint64_t v70 = 0;
          uint64_t v71 = v50;
          uint64_t v51 = *(void *)(a1 + 8);
          v69[0] = 0;
          v69[1] = 0;
          sub_832C78((uint64_t)v5, (unsigned int *)&v71, v51, (uint64_t)v69, (uint64_t)v72);
          uint64_t v68 = v28;
          uint64_t v52 = *(void *)(a1 + 32);
          if (*(char *)(v52 + 23) < 0) {
            operator delete(*(void **)v52);
          }
          long long v53 = *(_OWORD *)v72;
          *(void *)(v52 + 16) = v73;
          *(_OWORD *)uint64_t v52 = v53;
          HIBYTE(v73) = 0;
          LOBYTE(v72[0]) = 0;
          *(void *)(v52 + 24) = v74;
          uint64_t v54 = (void **)(v52 + 32);
          if (*(char *)(v52 + 55) < 0) {
            operator delete(*v54);
          }
          long long v55 = *(_OWORD *)v68;
          *(void *)(v52 + 48) = v68[2];
          *(_OWORD *)uint64_t v54 = v55;
          char v76 = 0;
          LOBYTE(v75) = 0;
          *(void *)(v52 + 56) = v77;
          *(_DWORD *)(v52 + 64) = v78;
          uint64_t v56 = (void **)(v52 + 72);
          if (*(char *)(v52 + 95) < 0) {
            operator delete(*v56);
          }
          long long v57 = v79;
          *(void *)(v52 + 88) = v80;
          *(_OWORD *)uint64_t v56 = v57;
          HIBYTE(v80) = 0;
          LOBYTE(v79) = 0;
          unsigned int v58 = (void **)(v52 + 96);
          if (*(char *)(v52 + 119) < 0) {
            operator delete(*v58);
          }
          long long v59 = v81;
          *(void *)(v52 + 112) = v82;
          *(_OWORD *)unsigned int v58 = v59;
          HIBYTE(v82) = 0;
          LOBYTE(v81) = 0;
          *(_DWORD *)(v52 + 120) = v83;
          unint64_t v60 = (void **)(v52 + 128);
          if (*(char *)(v52 + 151) < 0)
          {
            operator delete(*v60);
            int v64 = SHIBYTE(v82);
            uint64_t v65 = v85;
            *(_OWORD *)unint64_t v60 = v84;
            *(void *)(v52 + 144) = v65;
            HIBYTE(v85) = 0;
            LOBYTE(v84) = 0;
            if (v64 < 0)
            {
              operator delete((void *)v81);
              unint64_t v28 = v68;
              if ((SHIBYTE(v80) & 0x80000000) == 0) {
                goto LABEL_77;
              }
            }
            else
            {
              unint64_t v28 = v68;
              if ((SHIBYTE(v80) & 0x80000000) == 0) {
                goto LABEL_77;
              }
            }
LABEL_62:
            operator delete((void *)v79);
            if (v76 < 0) {
              goto LABEL_63;
            }
LABEL_78:
            if ((SHIBYTE(v73) & 0x80000000) == 0) {
              goto LABEL_79;
            }
LABEL_64:
            operator delete(v72[0]);
            if (SHIBYTE(v70) < 0) {
              goto LABEL_65;
            }
          }
          else
          {
            long long v61 = v84;
            *(void *)(v52 + 144) = v85;
            *(_OWORD *)unint64_t v60 = v61;
            HIBYTE(v85) = 0;
            LOBYTE(v84) = 0;
            unint64_t v28 = v68;
            if (SHIBYTE(v80) < 0) {
              goto LABEL_62;
            }
LABEL_77:
            if ((v76 & 0x80000000) == 0) {
              goto LABEL_78;
            }
LABEL_63:
            operator delete(v75);
            if (SHIBYTE(v73) < 0) {
              goto LABEL_64;
            }
LABEL_79:
            if (SHIBYTE(v70) < 0)
            {
LABEL_65:
              operator delete(v69[0]);
              int v62 = 0;
              if ((SHIBYTE(v94.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                goto LABEL_71;
              }
              goto LABEL_81;
            }
          }
          int v62 = 0;
          if ((SHIBYTE(v94.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_71;
          }
          goto LABEL_81;
        }
      }
      if (!sub_6F2FD8(*(void *)(a1 + 40)) && sub_6F2FD8((uint64_t)&__str))
      {
        uint64_t v63 = *(void *)(a1 + 40);
        std::string::operator=((std::string *)v63, (const std::string *)&__str);
        *(void *)(v63 + 24) = *((void *)&__str_16 + 1);
        std::string::operator=((std::string *)(v63 + 32), &__p);
        *(void *)(v63 + 56) = v89;
        *(_DWORD *)(v63 + 64) = v90;
        std::string::operator=((std::string *)(v63 + 72), &v91);
        std::string::operator=((std::string *)(v63 + 96), &v92);
        *(_DWORD *)(v63 + 120) = v93;
        std::string::operator=((std::string *)(v63 + 128), &v94);
      }
      int v62 = 1;
      if ((SHIBYTE(v94.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_71:
        if ((SHIBYTE(v92.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_72;
        }
        goto LABEL_82;
      }
LABEL_81:
      operator delete(v94.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v92.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_72:
        if ((SHIBYTE(v91.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_73;
        }
        goto LABEL_83;
      }
LABEL_82:
      operator delete(v92.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v91.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_73:
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          goto LABEL_17;
        }
        goto LABEL_84;
      }
LABEL_83:
      operator delete(v91.__r_.__value_.__l.__data_);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
LABEL_17:
        operator delete(__p.__r_.__value_.__l.__data_);
        if ((SBYTE7(__str_16) & 0x80000000) == 0) {
          goto LABEL_18;
        }
        goto LABEL_85;
      }
LABEL_84:
      if ((SBYTE7(__str_16) & 0x80000000) == 0)
      {
LABEL_18:
        if (!v62) {
          goto LABEL_94;
        }
        goto LABEL_19;
      }
LABEL_85:
      operator delete((void *)__str);
      if (!v62)
      {
LABEL_94:
        uint64_t v66 = 1;
        uint64_t v26 = v95;
        if (v95) {
          goto LABEL_90;
        }
        return v66;
      }
LABEL_19:
      v26 += 40;
      if (v26 == v27)
      {
        uint64_t v66 = 0;
        uint64_t v26 = v95;
        if (!v95) {
          return v66;
        }
        goto LABEL_90;
      }
    }
  }
  uint64_t v66 = 0;
  if (v95)
  {
LABEL_90:
    uint64_t v96 = v26;
    operator delete((void *)v26);
  }
  return v66;
}

void sub_84160C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  sub_4A50F4((uint64_t)&a43);
  int v45 = *(void **)(v43 - 200);
  if (v45)
  {
    *(void *)(v43 - 192) = v45;
    operator delete(v45);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_84168C(uint64_t a1, long long *a2, void *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a4 >= 2)
  {
    uint64_t v8 = a1;
    if (a4 == 2)
    {
      if (sub_841944(a3, (uint64_t)a2 - 152, a1))
      {
        sub_83F69C(v8, (uint64_t)a2 - 152);
      }
    }
    else if ((uint64_t)a4 <= 0)
    {
      sub_841EC4(a1, (uint64_t)a2, a3);
    }
    else
    {
      uint64_t v12 = a4 >> 1;
      uint64_t v13 = (long long *)(a1 + 152 * (a4 >> 1));
      if ((uint64_t)a4 <= a6)
      {
        sub_84230C(a1, a1 + 152 * (a4 >> 1), a3, a4 >> 1, a5);
        uint64_t v15 = a5 + 152 * v12;
        sub_84230C(v8 + 152 * (a4 >> 1), (uint64_t)a2, a3, a4 - v12, v15);
        unint64_t v21 = a4;
        uint64_t v16 = (long long *)(a5 + 152 * a4);
        uint64_t v17 = (long long *)v15;
        unint64_t v18 = (long long *)a5;
        while (v17 != v16)
        {
          if (sub_841944(a3, (uint64_t)v17, (uint64_t)v18))
          {
            sub_4C2034(v8, v17);
            uint64_t v17 = (long long *)((char *)v17 + 152);
            v8 += 152;
            if (v18 == (long long *)v15)
            {
LABEL_20:
              if (v17 != v16)
              {
                uint64_t v19 = 0;
                do
                {
                  sub_4C2034(v8 + v19, (long long *)((char *)v17 + v19));
                  v19 += 152;
                }
                while ((long long *)((char *)v17 + v19) != v16);
              }
              goto LABEL_27;
            }
          }
          else
          {
            sub_4C2034(v8, v18);
            unint64_t v18 = (long long *)((char *)v18 + 152);
            v8 += 152;
            if (v18 == (long long *)v15) {
              goto LABEL_20;
            }
          }
        }
        if (v18 != (long long *)v15)
        {
          uint64_t v20 = 0;
          do
          {
            sub_4C2034(v8 + v20, (long long *)((char *)v18 + v20));
            v20 += 152;
          }
          while ((long long *)((char *)v18 + v20) != (long long *)v15);
        }
LABEL_27:
        if (a5) {
          sub_840044(&v21, a5);
        }
      }
      else
      {
        sub_84168C(a1, a1 + 152 * (a4 >> 1), a3, a4 >> 1, a5, a6);
        uint64_t v14 = a4 - v12;
        sub_84168C(v13, a2, a3, v14, a5, a6);
        sub_842784(v8, v13, a2, a3, v12, v14, a5, a6);
      }
    }
  }
}

void sub_841924(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unint64_t a10)
{
  if (v10) {
    sub_840044(&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_841944(void *a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 120);
  int v4 = *(_DWORD *)(a3 + 120);
  if (v3 == 1 && v4 != 1) {
    return 1;
  }
  if (v3 != 1 && v4 == 1) {
    return 0;
  }
  if (*(unsigned char *)(*a1 + 97))
  {
    if (v3 == 2 && v4 != 2) {
      return 1;
    }
    if (v3 != 2 && v4 == 2) {
      return 0;
    }
  }
  uint64_t v12 = (unsigned __int8 **)a1[1];
  sub_4AA8E0((char *)v30, (long long *)a2);
  uint64_t v13 = sub_842BA0(v12, (uint64_t)&v29);
  if (v39 < 0)
  {
    operator delete(__p);
    if ((v37 & 0x80000000) == 0)
    {
LABEL_22:
      if ((v35 & 0x80000000) == 0) {
        goto LABEL_23;
      }
      goto LABEL_34;
    }
  }
  else if ((v37 & 0x80000000) == 0)
  {
    goto LABEL_22;
  }
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_23:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_24;
    }
LABEL_35:
    operator delete(v32);
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_36;
  }
LABEL_34:
  operator delete(v34);
  if (v33 < 0) {
    goto LABEL_35;
  }
LABEL_24:
  if ((v31 & 0x80000000) == 0) {
    goto LABEL_25;
  }
LABEL_36:
  operator delete(v30[0]);
LABEL_25:
  uint64_t v14 = (unsigned __int8 **)a1[1];
  sub_4AA8E0((char *)v30, (long long *)a3);
  uint64_t v15 = sub_842BA0(v14, (uint64_t)&v29);
  if (v39 < 0)
  {
    operator delete(__p);
    if ((v37 & 0x80000000) == 0)
    {
LABEL_27:
      if ((v35 & 0x80000000) == 0) {
        goto LABEL_28;
      }
      goto LABEL_39;
    }
  }
  else if ((v37 & 0x80000000) == 0)
  {
    goto LABEL_27;
  }
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_28:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v34);
  if ((v33 & 0x80000000) == 0)
  {
LABEL_29:
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v32);
  if ((v31 & 0x80000000) == 0)
  {
LABEL_30:
    BOOL v16 = v13 >= v15;
    if (v13 != v15) {
      return !v16;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v30[0]);
  BOOL v16 = v13 >= v15;
  if (v13 != v15) {
    return !v16;
  }
LABEL_42:
  uint64_t v17 = (unsigned __int8 **)a1[2];
  sub_4AA8E0((char *)v30, (long long *)a2);
  unint64_t v18 = sub_842BA0(v17, (uint64_t)&v29);
  if (v39 < 0)
  {
    operator delete(__p);
    if ((v37 & 0x80000000) == 0)
    {
LABEL_44:
      if ((v35 & 0x80000000) == 0) {
        goto LABEL_45;
      }
      goto LABEL_56;
    }
  }
  else if ((v37 & 0x80000000) == 0)
  {
    goto LABEL_44;
  }
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_45:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_46;
    }
LABEL_57:
    operator delete(v32);
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_58;
  }
LABEL_56:
  operator delete(v34);
  if (v33 < 0) {
    goto LABEL_57;
  }
LABEL_46:
  if ((v31 & 0x80000000) == 0) {
    goto LABEL_47;
  }
LABEL_58:
  operator delete(v30[0]);
LABEL_47:
  uint64_t v19 = (unsigned __int8 **)a1[2];
  sub_4AA8E0((char *)v30, (long long *)a3);
  uint64_t v20 = sub_842BA0(v19, (uint64_t)&v29);
  if (v39 < 0)
  {
    operator delete(__p);
    if ((v37 & 0x80000000) == 0)
    {
LABEL_49:
      if ((v35 & 0x80000000) == 0) {
        goto LABEL_50;
      }
      goto LABEL_61;
    }
  }
  else if ((v37 & 0x80000000) == 0)
  {
    goto LABEL_49;
  }
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_50:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_62;
  }
LABEL_61:
  operator delete(v34);
  if ((v33 & 0x80000000) == 0)
  {
LABEL_51:
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_63;
  }
LABEL_62:
  operator delete(v32);
  if ((v31 & 0x80000000) == 0)
  {
LABEL_52:
    BOOL v16 = v18 >= v20;
    if (v18 != v20) {
      return !v16;
    }
    goto LABEL_64;
  }
LABEL_63:
  operator delete(v30[0]);
  BOOL v16 = v18 >= v20;
  if (v18 != v20) {
    return !v16;
  }
LABEL_64:
  unint64_t v21 = (uint64_t *)a1[1];
  sub_4AA8E0((char *)v30, (long long *)a2);
  unint64_t v22 = sub_842D10(v21, (uint64_t)&v29);
  if (v39 < 0)
  {
    operator delete(__p);
    if ((v37 & 0x80000000) == 0)
    {
LABEL_66:
      if ((v35 & 0x80000000) == 0) {
        goto LABEL_67;
      }
      goto LABEL_78;
    }
  }
  else if ((v37 & 0x80000000) == 0)
  {
    goto LABEL_66;
  }
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_67:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_68;
    }
LABEL_79:
    operator delete(v32);
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_80;
  }
LABEL_78:
  operator delete(v34);
  if (v33 < 0) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v31 & 0x80000000) == 0) {
    goto LABEL_69;
  }
LABEL_80:
  operator delete(v30[0]);
LABEL_69:
  uint64_t v23 = (uint64_t *)a1[1];
  sub_4AA8E0((char *)v30, (long long *)a3);
  unint64_t v24 = sub_842D10(v23, (uint64_t)&v29);
  if (v39 < 0)
  {
    operator delete(__p);
    if ((v37 & 0x80000000) == 0)
    {
LABEL_71:
      if ((v35 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_83;
    }
  }
  else if ((v37 & 0x80000000) == 0)
  {
    goto LABEL_71;
  }
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_72:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_84;
  }
LABEL_83:
  operator delete(v34);
  if ((v33 & 0x80000000) == 0)
  {
LABEL_73:
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_74;
    }
LABEL_85:
    operator delete(v30[0]);
    BOOL v16 = v22 >= v24;
    if (v22 != v24) {
      return !v16;
    }
    goto LABEL_86;
  }
LABEL_84:
  operator delete(v32);
  if (v31 < 0) {
    goto LABEL_85;
  }
LABEL_74:
  BOOL v16 = v22 >= v24;
  if (v22 != v24) {
    return !v16;
  }
LABEL_86:
  uint64_t v25 = (uint64_t *)a1[2];
  sub_4AA8E0((char *)v30, (long long *)a2);
  unint64_t v26 = sub_842D10(v25, (uint64_t)&v29);
  sub_7D0A58((uint64_t)&v29);
  uint64_t v27 = (uint64_t *)a1[2];
  sub_4AA8E0((char *)v30, (long long *)a3);
  unint64_t v28 = sub_842D10(v27, (uint64_t)&v29);
  sub_7D0A58((uint64_t)&v29);
  BOOL v16 = v26 >= v28;
  return !v16;
}

void sub_841E24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_841E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_841E4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_841E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_841E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_841E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_841E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_841EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_841EC4(uint64_t a1, uint64_t a2, void *a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a1 + 152;
    if (a1 + 152 != a2)
    {
      uint64_t v7 = 0;
      uint64_t v8 = a1;
      do
      {
        uint64_t v9 = v5;
        if (!sub_841944(a3, v5, v8)) {
          goto LABEL_4;
        }
        long long v10 = *(_OWORD *)v9;
        uint64_t v43 = *(void *)(v9 + 16);
        *(_OWORD *)unsigned int v42 = v10;
        *(void *)(v9 + 8) = 0;
        *(void *)(v9 + 16) = 0;
        *(void *)uint64_t v9 = 0;
        uint64_t v11 = *(void *)(v8 + 208);
        uint64_t v46 = *(void *)(v8 + 200);
        uint64_t v12 = *(void *)(v8 + 176);
        long long v45 = *(_OWORD *)(v8 + 184);
        *(void *)(v8 + 184) = 0;
        *(void *)(v8 + 192) = 0;
        *(void *)(v8 + 200) = 0;
        uint64_t v44 = v12;
        uint64_t v47 = v11;
        LODWORD(v12) = *(_DWORD *)(v8 + 216);
        uint64_t v50 = *(void *)(v8 + 240);
        long long v49 = *(_OWORD *)(v8 + 224);
        *(void *)(v8 + 224) = 0;
        *(void *)(v8 + 232) = 0;
        long long v13 = *(_OWORD *)(v8 + 248);
        uint64_t v52 = *(void *)(v8 + 264);
        long long __p = v13;
        *(void *)(v8 + 240) = 0;
        *(void *)(v8 + 248) = 0;
        *(void *)(v8 + 256) = 0;
        *(void *)(v8 + 264) = 0;
        LODWORD(v11) = *(_DWORD *)(v8 + 272);
        int v48 = v12;
        int v53 = v11;
        long long v14 = *(_OWORD *)(v8 + 280);
        uint64_t v55 = *(void *)(v8 + 296);
        long long v54 = v14;
        *(void *)(v8 + 280) = 0;
        *(void *)(v8 + 288) = 0;
        uint64_t v15 = v7;
        *(void *)(v8 + 296) = 0;
        while (1)
        {
          uint64_t v16 = v15;
          uint64_t v17 = a1 + v15;
          uint64_t v18 = a1 + v15 + 152;
          if (*(char *)(a1 + v15 + 175) < 0) {
            operator delete(*(void **)v18);
          }
          *(_OWORD *)uint64_t v18 = *(_OWORD *)v17;
          *(void *)(v18 + 16) = *(void *)(v17 + 16);
          *(unsigned char *)(v17 + 23) = 0;
          *(unsigned char *)uint64_t v17 = 0;
          *(void *)(v17 + 176) = *(void *)(v17 + 24);
          uint64_t v19 = v17 + 184;
          if (*(char *)(v17 + 207) < 0) {
            operator delete(*(void **)v19);
          }
          uint64_t v20 = v17 + 32;
          uint64_t v21 = a1 + v16;
          *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          *(void *)(v19 + 16) = *(void *)(v20 + 16);
          *(unsigned char *)(v21 + 55) = 0;
          *(unsigned char *)uint64_t v20 = 0;
          *(void *)(v21 + 208) = *(void *)(a1 + v16 + 56);
          *(_DWORD *)(v21 + 216) = *(_DWORD *)(a1 + v16 + 64);
          unint64_t v22 = (void **)(a1 + v16 + 224);
          if (*(char *)(a1 + v16 + 247) < 0) {
            operator delete(*v22);
          }
          *(_OWORD *)unint64_t v22 = *(_OWORD *)(v21 + 72);
          *(void *)(a1 + v16 + 240) = *(void *)(v21 + 88);
          *(unsigned char *)(v21 + 95) = 0;
          *(unsigned char *)(v21 + 72) = 0;
          uint64_t v23 = v21 + 248;
          if (*(char *)(v21 + 271) < 0) {
            operator delete(*(void **)v23);
          }
          uint64_t v24 = a1 + v16;
          long long v25 = *(_OWORD *)(a1 + v16 + 96);
          *(void *)(v23 + 16) = *(void *)(a1 + v16 + 112);
          *(_OWORD *)uint64_t v23 = v25;
          *(unsigned char *)(v24 + 119) = 0;
          *(unsigned char *)(v24 + 96) = 0;
          *(_DWORD *)(v24 + 272) = *(_DWORD *)(a1 + v16 + 120);
          unint64_t v26 = (void **)(a1 + v16 + 280);
          if (*(char *)(a1 + v16 + 303) < 0) {
            operator delete(*v26);
          }
          long long v27 = *(_OWORD *)(v24 + 128);
          *(void *)(a1 + v16 + 296) = *(void *)(v24 + 144);
          *(_OWORD *)unint64_t v26 = v27;
          *(unsigned char *)(v24 + 151) = 0;
          *(unsigned char *)(v24 + 128) = 0;
          if (!v16) {
            break;
          }
          char v28 = sub_841944(a3, (uint64_t)v42, a1 + v16 - 152);
          uint64_t v15 = v16 - 152;
          if ((v28 & 1) == 0)
          {
            uint64_t v29 = a1 + v16;
            if ((*(char *)(a1 + v15 + 175) & 0x80000000) == 0) {
              goto LABEL_23;
            }
            goto LABEL_22;
          }
        }
        uint64_t v29 = a1;
        if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
          goto LABEL_23;
        }
LABEL_22:
        operator delete(*(void **)v29);
LABEL_23:
        uint64_t v30 = a1 + v16;
        char v31 = (void **)(v30 + 32);
        long long v32 = *(_OWORD *)v42;
        *(void *)(v29 + 16) = v43;
        *(_OWORD *)uint64_t v29 = v32;
        HIBYTE(v43) = 0;
        LOBYTE(v42[0]) = 0;
        *(void *)(v29 + 24) = v44;
        if (*(char *)(v29 + 55) < 0) {
          operator delete(*v31);
        }
        char v33 = (void **)(v30 + 72);
        long long v34 = v45;
        *(void *)(v30 + 48) = v46;
        *(_OWORD *)char v31 = v34;
        HIBYTE(v46) = 0;
        LOBYTE(v45) = 0;
        *(void *)(v29 + 56) = v47;
        *(_DWORD *)(v29 + 64) = v48;
        if (*(char *)(v29 + 95) < 0) {
          operator delete(*v33);
        }
        uint64_t v35 = v30 + 96;
        long long v36 = v49;
        *(void *)(v30 + 88) = v50;
        *(_OWORD *)char v33 = v36;
        HIBYTE(v50) = 0;
        LOBYTE(v49) = 0;
        if (*(char *)(v29 + 119) < 0) {
          operator delete(*(void **)v35);
        }
        uint64_t v37 = v30 + 128;
        long long v38 = __p;
        *(void *)(v35 + 16) = v52;
        *(_OWORD *)uint64_t v35 = v38;
        HIBYTE(v52) = 0;
        LOBYTE(__p) = 0;
        *(_DWORD *)(v29 + 120) = v53;
        if (*(char *)(v29 + 151) < 0)
        {
          operator delete(*(void **)v37);
          int v40 = SHIBYTE(v52);
          long long v41 = v54;
          *(void *)(v37 + 16) = v55;
          *(_OWORD *)uint64_t v37 = v41;
          HIBYTE(v55) = 0;
          LOBYTE(v54) = 0;
          if (v40 < 0)
          {
            operator delete((void *)__p);
            if ((SHIBYTE(v50) & 0x80000000) == 0)
            {
LABEL_34:
              if ((SHIBYTE(v46) & 0x80000000) == 0) {
                goto LABEL_35;
              }
              goto LABEL_39;
            }
          }
          else if ((SHIBYTE(v50) & 0x80000000) == 0)
          {
            goto LABEL_34;
          }
        }
        else
        {
          long long v39 = v54;
          *(void *)(v37 + 16) = v55;
          *(_OWORD *)uint64_t v37 = v39;
          HIBYTE(v55) = 0;
          LOBYTE(v54) = 0;
          if ((SHIBYTE(v50) & 0x80000000) == 0) {
            goto LABEL_34;
          }
        }
        operator delete((void *)v49);
        if ((SHIBYTE(v46) & 0x80000000) == 0)
        {
LABEL_35:
          if (SHIBYTE(v43) < 0) {
            goto LABEL_40;
          }
          goto LABEL_4;
        }
LABEL_39:
        operator delete((void *)v45);
        if (SHIBYTE(v43) < 0) {
LABEL_40:
        }
          operator delete(v42[0]);
LABEL_4:
        uint64_t v5 = v9 + 152;
        v7 += 152;
        uint64_t v8 = v9;
      }
      while (v9 + 152 != a2);
    }
  }
}

void sub_8422F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_4A50F4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_84230C(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, uint64_t a5)
{
  if (a4)
  {
    if (a4 == 2)
    {
      uint64_t v15 = (long long *)(a2 - 152);
      int v16 = sub_841944(a3, a2 - 152, a1);
      uint64_t v17 = (_OWORD *)(a5 + 32);
      uint64_t v18 = (_OWORD *)(a5 + 72);
      uint64_t v19 = (_OWORD *)(a5 + 96);
      if (v16)
      {
        long long v20 = *v15;
        *(void *)(a5 + 16) = *(void *)(a2 - 136);
        *(_OWORD *)a5 = v20;
        *(void *)(a2 - 144) = 0;
        *(void *)(a2 - 136) = 0;
        *(void *)uint64_t v15 = 0;
        *(void *)(a5 + 24) = *(void *)(a2 - 128);
        long long v21 = *(_OWORD *)(a2 - 120);
        *(void *)(a5 + 48) = *(void *)(a2 - 104);
        _OWORD *v17 = v21;
        *(void *)(a2 - 112) = 0;
        *(void *)(a2 - 104) = 0;
        *(void *)(a2 - 120) = 0;
        *(void *)(a5 + 56) = *(void *)(a2 - 96);
        *(_DWORD *)(a5 + 64) = *(_DWORD *)(a2 - 88);
        long long v22 = *(_OWORD *)(a2 - 80);
        *(void *)(a5 + 88) = *(void *)(a2 - 64);
        *uint64_t v18 = v22;
        *(void *)(a2 - 72) = 0;
        *(void *)(a2 - 64) = 0;
        *(void *)(a2 - 80) = 0;
        long long v23 = *(_OWORD *)(a2 - 56);
        *(void *)(a5 + 112) = *(void *)(a2 - 40);
        *uint64_t v19 = v23;
        *(void *)(a2 - 48) = 0;
        *(void *)(a2 - 40) = 0;
        *(void *)(a2 - 56) = 0;
        *(_DWORD *)(a5 + 120) = *(_DWORD *)(a2 - 32);
        long long v24 = *(_OWORD *)(a2 - 24);
        *(void *)(a5 + 144) = *(void *)(a2 - 8);
        *(_OWORD *)(a5 + 128) = v24;
        *(void *)(a2 - 16) = 0;
        *(void *)(a2 - 8) = 0;
        *(void *)(a2 - 24) = 0;
        uint64_t v25 = a5 + 152;
        long long v26 = *(_OWORD *)a1;
        *(void *)(a5 + 168) = *(void *)(a1 + 16);
        *(_OWORD *)(a5 + 152) = v26;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)a1 = 0;
        *(void *)(a5 + 176) = *(void *)(a1 + 24);
        long long v27 = *(_OWORD *)(a1 + 32);
        *(void *)(a5 + 200) = *(void *)(a1 + 48);
        *(_OWORD *)(a5 + 184) = v27;
        *(void *)(a1 + 40) = 0;
        *(void *)(a1 + 48) = 0;
        *(void *)(a1 + 32) = 0;
        *(void *)(a5 + 208) = *(void *)(a1 + 56);
        *(_DWORD *)(a5 + 216) = *(_DWORD *)(a1 + 64);
        long long v28 = *(_OWORD *)(a1 + 72);
        *(void *)(a5 + 240) = *(void *)(a1 + 88);
        *(_OWORD *)(a5 + 224) = v28;
        *(void *)(a1 + 80) = 0;
        *(void *)(a1 + 88) = 0;
        *(void *)(a1 + 72) = 0;
        long long v29 = *(_OWORD *)(a1 + 96);
        *(void *)(a5 + 264) = *(void *)(a1 + 112);
        *(_OWORD *)(a5 + 248) = v29;
        *(void *)(a1 + 104) = 0;
        *(void *)(a1 + 112) = 0;
        *(void *)(a1 + 96) = 0;
        *(_DWORD *)(a5 + 272) = *(_DWORD *)(a1 + 120);
        uint64_t v30 = (void *)(a1 + 128);
        long long v31 = *(_OWORD *)(a1 + 128);
        uint64_t v32 = *(void *)(a1 + 144);
      }
      else
      {
        long long v35 = *(_OWORD *)a1;
        *(void *)(a5 + 16) = *(void *)(a1 + 16);
        *(_OWORD *)a5 = v35;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)a1 = 0;
        *(void *)(a5 + 24) = *(void *)(a1 + 24);
        long long v36 = *(_OWORD *)(a1 + 32);
        *(void *)(a5 + 48) = *(void *)(a1 + 48);
        _OWORD *v17 = v36;
        *(void *)(a1 + 40) = 0;
        *(void *)(a1 + 48) = 0;
        *(void *)(a1 + 32) = 0;
        *(void *)(a5 + 56) = *(void *)(a1 + 56);
        *(_DWORD *)(a5 + 64) = *(_DWORD *)(a1 + 64);
        long long v37 = *(_OWORD *)(a1 + 72);
        *(void *)(a5 + 88) = *(void *)(a1 + 88);
        *uint64_t v18 = v37;
        *(void *)(a1 + 80) = 0;
        *(void *)(a1 + 88) = 0;
        *(void *)(a1 + 72) = 0;
        long long v38 = *(_OWORD *)(a1 + 96);
        *(void *)(a5 + 112) = *(void *)(a1 + 112);
        *uint64_t v19 = v38;
        *(void *)(a1 + 104) = 0;
        *(void *)(a1 + 112) = 0;
        *(void *)(a1 + 96) = 0;
        *(_DWORD *)(a5 + 120) = *(_DWORD *)(a1 + 120);
        long long v39 = *(_OWORD *)(a1 + 128);
        *(void *)(a5 + 144) = *(void *)(a1 + 144);
        *(_OWORD *)(a5 + 128) = v39;
        *(void *)(a1 + 136) = 0;
        *(void *)(a1 + 144) = 0;
        *(void *)(a1 + 128) = 0;
        uint64_t v25 = a5 + 152;
        long long v40 = *v15;
        *(void *)(a5 + 168) = *(void *)(a2 - 136);
        *(_OWORD *)(a5 + 152) = v40;
        *(void *)(a2 - 144) = 0;
        *(void *)(a2 - 136) = 0;
        *(void *)uint64_t v15 = 0;
        *(void *)(a5 + 176) = *(void *)(a2 - 128);
        long long v41 = *(_OWORD *)(a2 - 120);
        *(void *)(a5 + 200) = *(void *)(a2 - 104);
        *(_OWORD *)(a5 + 184) = v41;
        *(void *)(a2 - 112) = 0;
        *(void *)(a2 - 104) = 0;
        *(void *)(a2 - 120) = 0;
        *(void *)(a5 + 208) = *(void *)(a2 - 96);
        *(_DWORD *)(a5 + 216) = *(_DWORD *)(a2 - 88);
        long long v42 = *(_OWORD *)(a2 - 80);
        *(void *)(a5 + 240) = *(void *)(a2 - 64);
        *(_OWORD *)(a5 + 224) = v42;
        *(void *)(a2 - 72) = 0;
        *(void *)(a2 - 64) = 0;
        *(void *)(a2 - 80) = 0;
        long long v43 = *(_OWORD *)(a2 - 56);
        *(void *)(a5 + 264) = *(void *)(a2 - 40);
        *(_OWORD *)(a5 + 248) = v43;
        *(void *)(a2 - 48) = 0;
        *(void *)(a2 - 40) = 0;
        *(void *)(a2 - 56) = 0;
        *(_DWORD *)(a5 + 272) = *(_DWORD *)(a2 - 32);
        uint64_t v30 = (void *)(a2 - 24);
        long long v31 = *(_OWORD *)(a2 - 24);
        uint64_t v32 = *(void *)(a2 - 8);
      }
      *(void *)(a5 + 296) = v32;
      *(_OWORD *)(v25 + 128) = v31;
      *uint64_t v30 = 0;
      v30[1] = 0;
      v30[2] = 0;
    }
    else if (a4 == 1)
    {
      long long v10 = *(_OWORD *)a1;
      *(void *)(a5 + 16) = *(void *)(a1 + 16);
      *(_OWORD *)a5 = v10;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)a1 = 0;
      *(void *)(a5 + 24) = *(void *)(a1 + 24);
      long long v11 = *(_OWORD *)(a1 + 32);
      *(void *)(a5 + 48) = *(void *)(a1 + 48);
      *(_OWORD *)(a5 + 32) = v11;
      *(void *)(a1 + 40) = 0;
      *(void *)(a1 + 48) = 0;
      *(void *)(a1 + 32) = 0;
      *(void *)(a5 + 56) = *(void *)(a1 + 56);
      *(_DWORD *)(a5 + 64) = *(_DWORD *)(a1 + 64);
      long long v12 = *(_OWORD *)(a1 + 72);
      *(void *)(a5 + 88) = *(void *)(a1 + 88);
      *(_OWORD *)(a5 + 72) = v12;
      *(void *)(a1 + 80) = 0;
      *(void *)(a1 + 88) = 0;
      *(void *)(a1 + 72) = 0;
      long long v13 = *(_OWORD *)(a1 + 96);
      *(void *)(a5 + 112) = *(void *)(a1 + 112);
      *(_OWORD *)(a5 + 96) = v13;
      *(void *)(a1 + 104) = 0;
      *(void *)(a1 + 112) = 0;
      *(void *)(a1 + 96) = 0;
      *(_DWORD *)(a5 + 120) = *(_DWORD *)(a1 + 120);
      long long v14 = *(_OWORD *)(a1 + 128);
      *(void *)(a5 + 144) = *(void *)(a1 + 144);
      *(_OWORD *)(a5 + 128) = v14;
      *(void *)(a1 + 136) = 0;
      *(void *)(a1 + 144) = 0;
      *(void *)(a1 + 128) = 0;
    }
    else if ((uint64_t)a4 > 8)
    {
      unint64_t v33 = a4 >> 1;
      uint64_t v34 = 152 * (a4 >> 1);
      sub_84168C(a1, a1 + v34, a3, a4 >> 1, a5, a4 >> 1);
      sub_84168C(a1 + v34, a2, a3, a4 - v33, a5 + v34, a4 - v33);
      sub_8432DC(a1, (void *)(a1 + v34), a1 + v34, a2, a5, a3);
    }
    else
    {
      sub_842EAC(a1, a2, a5, a3);
    }
  }
}

void sub_842768(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unint64_t a10)
{
  if (v10) {
    sub_840044(&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

void sub_842784(uint64_t a1, long long *a2, long long *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v49 = a6;
  if (a6)
  {
    while (1)
    {
      if (v49 <= a8 || a5 <= a8)
      {
        sub_843660(a1, a2, a3, a4, a5, v49, a7);
        return;
      }
      if (!a5) {
        return;
      }
      long long v12 = 0;
      uint64_t v13 = -a5;
      while (1)
      {
        uint64_t v14 = a1;
        uint64_t v15 = (uint64_t)v12 + a1;
        int v16 = a4;
        if (sub_841944(a4, (uint64_t)a2, (uint64_t)v12 + a1)) {
          break;
        }
        long long v12 = (long long *)((char *)v12 + 152);
        BOOL v17 = __CFADD__(v13++, 1);
        a1 = v14;
        a4 = v16;
        if (v17) {
          return;
        }
      }
      uint64_t v18 = -v13;
      uint64_t v19 = v49;
      uint64_t v46 = a3;
      uint64_t v47 = a8;
      if (-v13 >= v49)
      {
        if (v13 == -1)
        {
          sub_83F69C((uint64_t)v12 + v14, (uint64_t)a2);
          return;
        }
        if (v13 > 0) {
          uint64_t v18 = 1 - v13;
        }
        uint64_t v29 = v18 >> 1;
        uint64_t v23 = v14;
        uint64_t v24 = (uint64_t)v12 + 152 * (v18 >> 1) + v14;
        long long v55 = *(_OWORD *)v16;
        uint64_t v56 = v16[2];
        long long v22 = a2;
        if (a2 != a3)
        {
          uint64_t v51 = v18 >> 1;
          uint64_t v54 = (uint64_t)v12 + 152 * (v18 >> 1) + v14;
          unint64_t v35 = 0x86BCA1AF286BCA1BLL * (((char *)a3 - (char *)a2) >> 3);
          long long v22 = a2;
          do
          {
            uint64_t v36 = (uint64_t)v22 + 152 * (v35 >> 1);
            int v37 = sub_841944(&v55, v36, v54);
            if (v37) {
              v35 += ~(v35 >> 1);
            }
            else {
              v35 >>= 1;
            }
            if (v37) {
              long long v22 = (long long *)(v36 + 152);
            }
          }
          while (v35);
          uint64_t v19 = v49;
          uint64_t v29 = v51;
          uint64_t v23 = v14;
          uint64_t v24 = v54;
        }
        uint64_t v21 = 0x86BCA1AF286BCA1BLL * (((char *)v22 - (char *)a2) >> 3);
        int v53 = (long long *)v24;
        if ((long long *)v24 != a2)
        {
LABEL_25:
          if (v22 == a2)
          {
            a3 = (long long *)v24;
          }
          else
          {
            uint64_t v45 = v21;
            uint64_t v50 = v29;
            sub_83F69C(v24, (uint64_t)a2);
            a3 = (long long *)(v24 + 152);
            for (uint64_t i = (uint64_t)a2 + 152; (long long *)i != v22; i += 152)
            {
              if (a3 == a2) {
                a2 = (long long *)i;
              }
              sub_83F69C((uint64_t)a3, i);
              a3 = (long long *)((char *)a3 + 152);
            }
            if (a3 != a2)
            {
              uint64_t v31 = (uint64_t)a3;
              uint64_t v32 = (uint64_t)a2;
              while (1)
              {
                sub_83F69C(v31, v32);
                v32 += 152;
                BOOL v33 = v31 + 152 == (void)a2;
                if ((long long *)v32 == v22)
                {
                  if ((long long *)(v31 + 152) == a2) {
                    break;
                  }
                  uint64_t v32 = (uint64_t)a2 + 152;
                  v31 += 304;
                  while (1)
                  {
                    sub_83F69C(v31 - 152, (uint64_t)a2);
                    BOOL v33 = v31 == (void)a2;
                    if ((long long *)v32 != v22) {
                      break;
                    }
                    BOOL v34 = v31 == (void)a2;
                    v31 += 152;
                    if (v34) {
                      goto LABEL_42;
                    }
                  }
                }
                else
                {
                  v31 += 152;
                }
                if (v33) {
                  a2 = (long long *)v32;
                }
              }
            }
LABEL_42:
            uint64_t v19 = v49;
            uint64_t v29 = v50;
            uint64_t v23 = v14;
            uint64_t v21 = v45;
          }
          goto LABEL_58;
        }
      }
      else
      {
        if (v49 >= 0) {
          uint64_t v20 = v49;
        }
        else {
          uint64_t v20 = v49 + 1;
        }
        uint64_t v21 = v20 >> 1;
        long long v22 = (long long *)((char *)a2 + 152 * (v20 >> 1));
        uint64_t v23 = v14;
        uint64_t v24 = (uint64_t)a2;
        if ((long long *)((char *)a2 - v14) != v12)
        {
          uint64_t v44 = v20 >> 1;
          unint64_t v25 = 0x86BCA1AF286BCA1BLL * (((char *)a2 - v14 - (char *)v12) >> 3);
          uint64_t v24 = v15;
          uint64_t v52 = (uint64_t)a2 + 152 * (v20 >> 1);
          do
          {
            uint64_t v26 = v24;
            uint64_t v27 = v24 + 152 * (v25 >> 1);
            int v28 = sub_841944(v16, v52, v27);
            if (v28) {
              uint64_t v24 = v26;
            }
            else {
              uint64_t v24 = v27 + 152;
            }
            if (v28) {
              v25 >>= 1;
            }
            else {
              v25 += ~(v25 >> 1);
            }
          }
          while (v25);
          uint64_t v19 = v49;
          uint64_t v23 = v14;
          long long v22 = (long long *)v52;
          uint64_t v21 = v44;
        }
        uint64_t v29 = 0x86BCA1AF286BCA1BLL * ((v24 - v23 - (uint64_t)v12) >> 3);
        int v53 = (long long *)v24;
        if ((long long *)v24 != a2) {
          goto LABEL_25;
        }
      }
      a3 = v22;
LABEL_58:
      a5 = -v29 - v13;
      uint64_t v38 = v19 - v21;
      if (v29 + v21 >= v19 - (v29 + v21) - v13)
      {
        long long v40 = v22;
        a8 = v47;
        uint64_t v41 = v29;
        uint64_t v42 = v21;
        sub_842784(a3, v40, v46, v16, -v29 - v13, v19 - v21, a7, v47);
        a4 = v16;
        a2 = v53;
        uint64_t v43 = v42;
        a5 = v41;
        uint64_t v49 = v43;
        a1 = v15;
        if (!v43) {
          return;
        }
      }
      else
      {
        sub_842784((char *)v12 + v23, v53, a3, v16, v29, v21, a7, v47);
        a4 = v16;
        long long v39 = a3;
        a2 = v22;
        a8 = v47;
        a3 = v46;
        uint64_t v49 = v38;
        a1 = (uint64_t)v39;
        if (!v38) {
          return;
        }
      }
    }
  }
}

unsigned __int8 *sub_842BA0(unsigned __int8 **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  int v3 = a1[1];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 8) = 0;
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  *(_OWORD *)int v16 = *(_OWORD *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a2 + 56) = 0;
  uint64_t v17 = v6;
  uint64_t v18 = v7;
  int v19 = *(_DWORD *)(a2 + 72);
  long long v8 = *(_OWORD *)(a2 + 80);
  uint64_t v21 = *(void *)(a2 + 96);
  *(_OWORD *)uint64_t v20 = v8;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0;
  long long v9 = *(_OWORD *)(a2 + 104);
  uint64_t v23 = *(void *)(a2 + 120);
  *(_OWORD *)long long v22 = v9;
  *(void *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  *(void *)(a2 + 120) = 0;
  int v24 = *(_DWORD *)(a2 + 128);
  long long v10 = *(_OWORD *)(a2 + 136);
  uint64_t v26 = *(void *)(a2 + 152);
  *(_OWORD *)long long __p = v10;
  *(void *)(a2 + 136) = 0;
  *(void *)(a2 + 144) = 0;
  *(void *)(a2 + 152) = 0;
  if (v2 != v3)
  {
    while (!sub_83F548((uint64_t)&v12, v2))
    {
      v2 += 152;
      if (v2 == v3)
      {
        uint64_t v2 = v3;
        break;
      }
    }
  }
  if (SHIBYTE(v26) < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v23) & 0x80000000) == 0)
    {
LABEL_7:
      if ((SHIBYTE(v21) & 0x80000000) == 0) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
  }
  else if ((SHIBYTE(v23) & 0x80000000) == 0)
  {
    goto LABEL_7;
  }
  operator delete(v22[0]);
  if ((SHIBYTE(v21) & 0x80000000) == 0)
  {
LABEL_8:
    if ((SHIBYTE(v17) & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_14:
    operator delete(v16[0]);
    if ((SHIBYTE(v14) & 0x80000000) == 0) {
      return v2;
    }
    goto LABEL_15;
  }
LABEL_13:
  operator delete(v20[0]);
  if (SHIBYTE(v17) < 0) {
    goto LABEL_14;
  }
LABEL_9:
  if ((SHIBYTE(v14) & 0x80000000) == 0) {
    return v2;
  }
LABEL_15:
  operator delete(v13[0]);
  return v2;
}

void sub_842CFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_842D10(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *(_OWORD *)long long v10 = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 8) = 0;
  char v11 = HIBYTE(v4);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a2 + 56) = 0;
  char v13 = HIBYTE(v5);
  int v14 = *(_DWORD *)(a2 + 72);
  long long v6 = *(_OWORD *)(a2 + 80);
  uint64_t v16 = *(void *)(a2 + 96);
  *(_OWORD *)uint64_t v15 = v6;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0;
  long long v7 = *(_OWORD *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 120);
  *(_OWORD *)uint64_t v17 = v7;
  *(void *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  *(void *)(a2 + 120) = 0;
  int v19 = *(_DWORD *)(a2 + 128);
  long long v8 = *(_OWORD *)(a2 + 136);
  uint64_t v21 = *(void *)(a2 + 152);
  *(_OWORD *)long long __p = v8;
  *(void *)(a2 + 136) = 0;
  *(void *)(a2 + 144) = 0;
  *(void *)(a2 + 152) = 0;
  if (v2 != v3)
  {
    while (!sub_6F2880((uint64_t)&v14) || !sub_6F2DD0((uint64_t)&v14, v2 + 64))
    {
      v2 += 152;
      if (v2 == v3)
      {
        uint64_t v2 = v3;
        if ((SHIBYTE(v21) & 0x80000000) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
  }
  if (SHIBYTE(v21) < 0)
  {
LABEL_13:
    operator delete(__p[0]);
    if ((SHIBYTE(v18) & 0x80000000) == 0)
    {
LABEL_8:
      if ((SHIBYTE(v16) & 0x80000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
  }
  else
  {
LABEL_7:
    if ((SHIBYTE(v18) & 0x80000000) == 0) {
      goto LABEL_8;
    }
  }
  operator delete(v17[0]);
  if ((SHIBYTE(v16) & 0x80000000) == 0)
  {
LABEL_9:
    if ((v13 & 0x80000000) == 0) {
      goto LABEL_10;
    }
LABEL_16:
    operator delete(v12[0]);
    if ((v11 & 0x80000000) == 0) {
      return v2;
    }
    goto LABEL_17;
  }
LABEL_15:
  operator delete(v15[0]);
  if (v13 < 0) {
    goto LABEL_16;
  }
LABEL_10:
  if ((v11 & 0x80000000) == 0) {
    return v2;
  }
LABEL_17:
  operator delete(v10[0]);
  return v2;
}

void sub_842E98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_842EAC(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  if (result != a2)
  {
    uint64_t v6 = result;
    long long v7 = *(_OWORD *)result;
    *(void *)(a3 + 16) = *(void *)(result + 16);
    *(_OWORD *)a3 = v7;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = 0;
    *(void *)(a3 + 24) = *(void *)(result + 24);
    long long v8 = *(_OWORD *)(result + 32);
    *(void *)(a3 + 48) = *(void *)(result + 48);
    *(_OWORD *)(a3 + 32) = v8;
    *(void *)(result + 40) = 0;
    *(void *)(result + 48) = 0;
    *(void *)(result + 32) = 0;
    *(void *)(a3 + 56) = *(void *)(result + 56);
    *(_DWORD *)(a3 + 64) = *(_DWORD *)(result + 64);
    long long v9 = *(_OWORD *)(result + 72);
    *(void *)(a3 + 88) = *(void *)(result + 88);
    *(_OWORD *)(a3 + 72) = v9;
    *(void *)(result + 80) = 0;
    *(void *)(result + 88) = 0;
    *(void *)(result + 72) = 0;
    long long v10 = *(_OWORD *)(result + 96);
    *(void *)(a3 + 112) = *(void *)(result + 112);
    *(_OWORD *)(a3 + 96) = v10;
    *(void *)(result + 104) = 0;
    *(void *)(result + 112) = 0;
    *(void *)(result + 96) = 0;
    *(_DWORD *)(a3 + 120) = *(_DWORD *)(result + 120);
    long long v11 = *(_OWORD *)(result + 128);
    *(void *)(a3 + 144) = *(void *)(result + 144);
    *(_OWORD *)(a3 + 128) = v11;
    *(void *)(result + 136) = 0;
    *(void *)(result + 144) = 0;
    *(void *)(result + 128) = 0;
    uint64_t v41 = 1;
    uint64_t v12 = result + 152;
    if (result + 152 != a2)
    {
      uint64_t v14 = 0;
      uint64_t v15 = a3;
      do
      {
        while (1)
        {
          uint64_t v21 = v12;
          __n128 result = sub_841944(a4, v12, v15);
          long long v22 = (long long *)(v15 + 152);
          uint64_t v23 = (_OWORD *)(v15 + 184);
          int v24 = (_OWORD *)(v15 + 224);
          unint64_t v25 = (_OWORD *)(v15 + 248);
          if (result) {
            break;
          }
          long long v16 = *(_OWORD *)v21;
          *(void *)(v15 + 168) = *(void *)(v21 + 16);
          long long *v22 = v16;
          *(void *)(v21 + 8) = 0;
          *(void *)(v21 + 16) = 0;
          *(void *)uint64_t v21 = 0;
          *(void *)(v15 + 176) = *(void *)(v6 + 176);
          long long v17 = *(_OWORD *)(v6 + 184);
          *(void *)(v15 + 200) = *(void *)(v6 + 200);
          _OWORD *v23 = v17;
          *(void *)(v6 + 192) = 0;
          *(void *)(v6 + 200) = 0;
          *(void *)(v6 + 184) = 0;
          *(void *)(v15 + 208) = *(void *)(v6 + 208);
          *(_DWORD *)(v15 + 216) = *(_DWORD *)(v6 + 216);
          long long v18 = *(_OWORD *)(v6 + 224);
          *(void *)(v15 + 240) = *(void *)(v6 + 240);
          *int v24 = v18;
          *(void *)(v6 + 232) = 0;
          *(void *)(v6 + 240) = 0;
          *(void *)(v6 + 224) = 0;
          long long v19 = *(_OWORD *)(v6 + 248);
          *(void *)(v15 + 264) = *(void *)(v6 + 264);
          *unint64_t v25 = v19;
          *(void *)(v6 + 256) = 0;
          *(void *)(v6 + 264) = 0;
          *(void *)(v6 + 248) = 0;
          *(_DWORD *)(v15 + 272) = *(_DWORD *)(v6 + 272);
          long long v20 = *(_OWORD *)(v6 + 280);
          *(void *)(v15 + 296) = *(void *)(v6 + 296);
          *(_OWORD *)(v15 + 280) = v20;
          *(void *)(v6 + 288) = 0;
          *(void *)(v6 + 296) = 0;
          *(void *)(v6 + 280) = 0;
          ++v41;
          uint64_t v12 = v21 + 152;
          v14 += 152;
          v15 += 152;
          uint64_t v6 = v21;
          if (v21 + 152 == a2) {
            return result;
          }
        }
        uint64_t v26 = *(void *)(v15 + 24);
        *(void *)(v15 + 168) = *(void *)(v15 + 16);
        *(void *)(v15 + 176) = v26;
        uint64_t v27 = *(void *)(v15 + 56);
        *(void *)(v15 + 200) = *(void *)(v15 + 48);
        long long *v22 = *(_OWORD *)v15;
        *(void *)(v15 + 8) = 0;
        *(void *)(v15 + 16) = 0;
        *(void *)uint64_t v15 = 0;
        _OWORD *v23 = *(_OWORD *)(v15 + 32);
        *(void *)(v15 + 32) = 0;
        *(void *)(v15 + 40) = 0;
        *(void *)(v15 + 48) = 0;
        *(void *)(v15 + 208) = v27;
        *(_DWORD *)(v15 + 216) = *(_DWORD *)(v15 + 64);
        long long v28 = *(_OWORD *)(v15 + 72);
        *(void *)(v15 + 240) = *(void *)(v15 + 88);
        *int v24 = v28;
        *(void *)(v15 + 72) = 0;
        *(void *)(v15 + 80) = 0;
        long long v29 = *(_OWORD *)(v15 + 96);
        *(void *)(v15 + 264) = *(void *)(v15 + 112);
        *unint64_t v25 = v29;
        *(void *)(v15 + 88) = 0;
        *(void *)(v15 + 96) = 0;
        *(void *)(v15 + 104) = 0;
        *(void *)(v15 + 112) = 0;
        *(_DWORD *)(v15 + 272) = *(_DWORD *)(v15 + 120);
        long long v30 = *(_OWORD *)(v15 + 128);
        *(void *)(v15 + 296) = *(void *)(v15 + 144);
        *(_OWORD *)(v15 + 280) = v30;
        *(void *)(v15 + 128) = 0;
        *(void *)(v15 + 136) = 0;
        *(void *)(v15 + 144) = 0;
        uint64_t v31 = a3;
        ++v41;
        if (v15 != a3)
        {
          uint64_t v32 = v14;
          do
          {
            uint64_t v33 = a3 + v32;
            if (!sub_841944(a4, v21, a3 + v32 - 152))
            {
              uint64_t v31 = a3 + v32;
              goto LABEL_22;
            }
            uint64_t v34 = a3 + v32;
            if (*(char *)(a3 + v32 + 23) < 0) {
              operator delete(*(void **)v33);
            }
            *(_OWORD *)uint64_t v33 = *(_OWORD *)(a3 + v32 - 152);
            *(void *)(v33 + 16) = *(void *)(a3 + v32 - 136);
            *(unsigned char *)(v34 - 129) = 0;
            *(unsigned char *)(v33 - 152) = 0;
            *(void *)(v34 + 24) = *(void *)(v34 - 128);
            unint64_t v35 = (void **)(v34 + 32);
            if (*(char *)(v34 + 55) < 0) {
              operator delete(*v35);
            }
            uint64_t v36 = a3 + v32;
            *(_OWORD *)unint64_t v35 = *(_OWORD *)(v34 - 120);
            *(void *)(v34 + 48) = *(void *)(v34 - 104);
            *(unsigned char *)(v36 - 97) = 0;
            *(unsigned char *)(v34 - 120) = 0;
            *(void *)(v36 + 56) = *(void *)(a3 + v32 - 96);
            *(_DWORD *)(v36 + 64) = *(_DWORD *)(a3 + v32 - 88);
            int v37 = (void **)(a3 + v32 + 72);
            if (*(char *)(a3 + v32 + 95) < 0) {
              operator delete(*v37);
            }
            *(_OWORD *)int v37 = *(_OWORD *)(v36 - 80);
            *(void *)(a3 + v32 + 88) = *(void *)(v36 - 64);
            *(unsigned char *)(v36 - 57) = 0;
            *(unsigned char *)(v36 - 80) = 0;
            uint64_t v38 = v36 + 96;
            if (*(char *)(v36 + 119) < 0) {
              operator delete(*(void **)v38);
            }
            uint64_t v39 = a3 + v32;
            *(_OWORD *)uint64_t v38 = *(_OWORD *)(a3 + v32 - 56);
            *(void *)(v38 + 16) = *(void *)(a3 + v32 - 40);
            *(unsigned char *)(v39 - 33) = 0;
            *(unsigned char *)(v39 - 56) = 0;
            *(_DWORD *)(v39 + 120) = *(_DWORD *)(a3 + v32 - 32);
            long long v40 = (void **)(a3 + v32 + 128);
            if (*(char *)(a3 + v32 + 151) < 0) {
              operator delete(*v40);
            }
            *(_OWORD *)long long v40 = *(_OWORD *)(v39 - 24);
            *(void *)(a3 + v32 + 144) = *(void *)(v39 - 8);
            *(unsigned char *)(v39 - 1) = 0;
            *(unsigned char *)(v39 - 24) = 0;
            v32 -= 152;
          }
          while (v32);
          uint64_t v31 = a3;
        }
LABEL_22:
        __n128 result = sub_4C2034(v31, (long long *)v21);
        uint64_t v12 = v21 + 152;
        v14 += 152;
        uint64_t v15 = (uint64_t)v22;
        uint64_t v6 = v21;
      }
      while (v21 + 152 != a2);
    }
  }
  return result;
}

void sub_8432BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unint64_t a10)
{
  if (v10) {
    sub_840044(&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_8432DC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v40 = 0;
  if ((void *)a1 == a2)
  {
LABEL_14:
    while (a3 != a4)
    {
      long long v36 = *(_OWORD *)a3;
      *(void *)(a5 + 16) = *(void *)(a3 + 16);
      *(_OWORD *)a5 = v36;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)a3 = 0;
      *(void *)(a5 + 24) = *(void *)(a3 + 24);
      long long v37 = *(_OWORD *)(a3 + 32);
      *(void *)(a5 + 48) = *(void *)(a3 + 48);
      *(_OWORD *)(a5 + 32) = v37;
      *(void *)(a3 + 40) = 0;
      *(void *)(a3 + 48) = 0;
      *(void *)(a3 + 32) = 0;
      *(void *)(a5 + 56) = *(void *)(a3 + 56);
      *(_DWORD *)(a5 + 64) = *(_DWORD *)(a3 + 64);
      long long v38 = *(_OWORD *)(a3 + 72);
      *(void *)(a5 + 88) = *(void *)(a3 + 88);
      *(_OWORD *)(a5 + 72) = v38;
      *(void *)(a3 + 80) = 0;
      *(void *)(a3 + 88) = 0;
      *(void *)(a3 + 72) = 0;
      long long v39 = *(_OWORD *)(a3 + 96);
      *(void *)(a5 + 112) = *(void *)(a3 + 112);
      *(_OWORD *)(a5 + 96) = v39;
      *(void *)(a3 + 104) = 0;
      *(void *)(a3 + 112) = 0;
      *(void *)(a3 + 96) = 0;
      *(_DWORD *)(a5 + 120) = *(_DWORD *)(a3 + 120);
      __n128 result = *(__n128 *)(a3 + 128);
      *(void *)(a5 + 144) = *(void *)(a3 + 144);
      *(__n128 *)(a5 + 128) = result;
      *(void *)(a3 + 136) = 0;
      *(void *)(a3 + 144) = 0;
      *(void *)(a3 + 128) = 0;
      a3 += 152;
      a5 += 152;
    }
  }
  else
  {
    uint64_t v11 = a1;
    uint64_t v12 = 0;
    while (a3 != a4)
    {
      int v18 = sub_841944(a6, a3, v11);
      uint64_t v19 = a5 + v12;
      long long v20 = (__n128 *)(a5 + v12);
      uint64_t v21 = (_OWORD *)(a5 + v12 + 32);
      long long v22 = (_OWORD *)(a5 + v12 + 72);
      uint64_t v23 = (_OWORD *)(a5 + v12 + 96);
      if (v18)
      {
        long long v24 = *(_OWORD *)a3;
        *(void *)(v19 + 16) = *(void *)(a3 + 16);
        *(_OWORD *)uint64_t v19 = v24;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)a3 = 0;
        v20[1].n128_u64[1] = *(void *)(a3 + 24);
        long long v25 = *(_OWORD *)(a3 + 32);
        *(void *)(a5 + v12 + 48) = *(void *)(a3 + 48);
        *uint64_t v21 = v25;
        *(void *)(a3 + 40) = 0;
        *(void *)(a3 + 48) = 0;
        *(void *)(a3 + 32) = 0;
        v20[3].n128_u64[1] = *(void *)(a3 + 56);
        v20[4].n128_u32[0] = *(_DWORD *)(a3 + 64);
        long long v26 = *(_OWORD *)(a3 + 72);
        *(void *)(a5 + v12 + 88) = *(void *)(a3 + 88);
        _OWORD *v22 = v26;
        *(void *)(a3 + 80) = 0;
        *(void *)(a3 + 88) = 0;
        *(void *)(a3 + 72) = 0;
        long long v27 = *(_OWORD *)(a3 + 96);
        *(void *)(a5 + v12 + 112) = *(void *)(a3 + 112);
        _OWORD *v23 = v27;
        *(void *)(a3 + 104) = 0;
        *(void *)(a3 + 112) = 0;
        *(void *)(a3 + 96) = 0;
        v20[7].n128_u32[2] = *(_DWORD *)(a3 + 120);
        __n128 result = *(__n128 *)(a3 + 128);
        v20[9].n128_u64[0] = *(void *)(a3 + 144);
        v20[8] = result;
        *(void *)(a3 + 136) = 0;
        *(void *)(a3 + 144) = 0;
        *(void *)(a3 + 128) = 0;
        a3 += 152;
      }
      else
      {
        long long v13 = *(_OWORD *)v11;
        *(void *)(v19 + 16) = *(void *)(v11 + 16);
        *(_OWORD *)uint64_t v19 = v13;
        *(void *)(v11 + 8) = 0;
        *(void *)(v11 + 16) = 0;
        *(void *)uint64_t v11 = 0;
        v20[1].n128_u64[1] = *(void *)(v11 + 24);
        long long v14 = *(_OWORD *)(v11 + 32);
        *(void *)(a5 + v12 + 48) = *(void *)(v11 + 48);
        *uint64_t v21 = v14;
        *(void *)(v11 + 40) = 0;
        *(void *)(v11 + 48) = 0;
        *(void *)(v11 + 32) = 0;
        v20[3].n128_u64[1] = *(void *)(v11 + 56);
        v20[4].n128_u32[0] = *(_DWORD *)(v11 + 64);
        long long v15 = *(_OWORD *)(v11 + 72);
        *(void *)(a5 + v12 + 88) = *(void *)(v11 + 88);
        _OWORD *v22 = v15;
        *(void *)(v11 + 80) = 0;
        *(void *)(v11 + 88) = 0;
        *(void *)(v11 + 72) = 0;
        long long v16 = *(_OWORD *)(v11 + 96);
        *(void *)(a5 + v12 + 112) = *(void *)(v11 + 112);
        _OWORD *v23 = v16;
        *(void *)(v11 + 104) = 0;
        *(void *)(v11 + 112) = 0;
        *(void *)(v11 + 96) = 0;
        v20[7].n128_u32[2] = *(_DWORD *)(v11 + 120);
        __n128 result = *(__n128 *)(v11 + 128);
        v20[9].n128_u64[0] = *(void *)(v11 + 144);
        v20[8] = result;
        *(void *)(v11 + 136) = 0;
        *(void *)(v11 + 144) = 0;
        *(void *)(v11 + 128) = 0;
        v11 += 152;
      }
      ++v40;
      v12 += 152;
      if ((void *)v11 == a2)
      {
        a5 += v12;
        goto LABEL_14;
      }
    }
    if ((void *)v11 != a2)
    {
      uint64_t v28 = 0;
      do
      {
        long long v29 = (void *)(v11 + v28);
        uint64_t v30 = a5 + v12 + v28;
        long long v31 = *(_OWORD *)(v11 + v28);
        *(void *)(v30 + 16) = *(void *)(v11 + v28 + 16);
        *(_OWORD *)uint64_t v30 = v31;
        v29[1] = 0;
        v29[2] = 0;
        *long long v29 = 0;
        uint64_t v32 = a5 + v28 + v12;
        *(void *)(v32 + 24) = *(void *)(v11 + v28 + 24);
        long long v33 = *(_OWORD *)(v11 + v28 + 32);
        *(void *)(v32 + 48) = *(void *)(v11 + v28 + 48);
        *(_OWORD *)(v32 + 32) = v33;
        v29[5] = 0;
        v29[6] = 0;
        v29[4] = 0;
        *(void *)(v32 + 56) = *(void *)(v11 + v28 + 56);
        *(_DWORD *)(v32 + 64) = *(_DWORD *)(v11 + v28 + 64);
        long long v34 = *(_OWORD *)(v11 + v28 + 72);
        *(void *)(v32 + 88) = *(void *)(v11 + v28 + 88);
        *(_OWORD *)(v32 + 72) = v34;
        v29[10] = 0;
        v29[11] = 0;
        v29[9] = 0;
        long long v35 = *(_OWORD *)(v11 + v28 + 96);
        *(void *)(v32 + 112) = *(void *)(v11 + v28 + 112);
        *(_OWORD *)(v32 + 96) = v35;
        v29[13] = 0;
        v29[14] = 0;
        v29[12] = 0;
        *(_DWORD *)(v32 + 120) = *(_DWORD *)(v11 + v28 + 120);
        __n128 result = *(__n128 *)(v11 + v28 + 128);
        *(void *)(v30 + 144) = *(void *)(v11 + v28 + 144);
        *(__n128 *)(v30 + 128) = result;
        v29[17] = 0;
        v29[18] = 0;
        v29[16] = 0;
        v28 += 152;
      }
      while (v29 + 19 != a2);
    }
  }
  return result;
}

void sub_843644(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unint64_t a10)
{
  if (v10) {
    sub_840044(&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

void sub_843660(uint64_t a1, long long *a2, long long *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = a2;
  uint64_t v11 = a1;
  if (a5 > a6)
  {
    if (a2 != a3)
    {
      uint64_t v12 = 0;
      unint64_t v13 = 0;
      do
      {
        uint64_t v14 = a7 + v12;
        long long v15 = (void *)((char *)a2 + v12);
        long long v16 = *(long long *)((char *)a2 + v12);
        *(void *)(v14 + 16) = *(void *)((char *)a2 + v12 + 16);
        *(_OWORD *)uint64_t v14 = v16;
        v15[1] = 0;
        v15[2] = 0;
        *long long v15 = 0;
        *(void *)(v14 + 24) = *(void *)((char *)a2 + v12 + 24);
        long long v17 = *(long long *)((char *)a2 + v12 + 32);
        *(void *)(v14 + 48) = *(void *)((char *)a2 + v12 + 48);
        *(_OWORD *)(v14 + 32) = v17;
        v15[5] = 0;
        v15[6] = 0;
        uint64_t v18 = *(void *)((char *)a2 + v12 + 56);
        v15[4] = 0;
        *(void *)(v14 + 56) = v18;
        *(_DWORD *)(v14 + 64) = *(_DWORD *)((char *)a2 + v12 + 64);
        long long v19 = *(long long *)((char *)a2 + v12 + 72);
        *(void *)(v14 + 88) = *(void *)((char *)a2 + v12 + 88);
        *(_OWORD *)(v14 + 72) = v19;
        v15[10] = 0;
        v15[11] = 0;
        long long v20 = *(long long *)((char *)a2 + v12 + 96);
        uint64_t v21 = *(void *)((char *)a2 + v12 + 112);
        v15[9] = 0;
        *(void *)(v14 + 112) = v21;
        *(_OWORD *)(v14 + 96) = v20;
        v15[13] = 0;
        v15[14] = 0;
        LODWORD(v21) = *(_DWORD *)((char *)a2 + v12 + 120);
        v15[12] = 0;
        *(_DWORD *)(v14 + 120) = v21;
        long long v22 = *(long long *)((char *)a2 + v12 + 128);
        *(void *)(v14 + 144) = *(void *)((char *)a2 + v12 + 144);
        *(_OWORD *)(v14 + 128) = v22;
        v15[17] = 0;
        v15[18] = 0;
        v15[16] = 0;
        ++v13;
        v12 += 152;
      }
      while (v15 + 19 != (void *)a3);
      unint64_t v44 = v13;
      if (v12)
      {
        uint64_t v23 = a7 + v12;
        uint64_t v24 = (uint64_t)a3 - 152;
        while (v10 != (long long *)v11)
        {
          int v25 = sub_841944(a4, v23 - 152, (uint64_t)v10 - 152);
          if (v25) {
            long long v26 = (long long *)((char *)v10 - 152);
          }
          else {
            long long v26 = (long long *)(v23 - 152);
          }
          if (v25) {
            uint64_t v10 = (long long *)((char *)v10 - 152);
          }
          else {
            v23 -= 152;
          }
          sub_4C2034(v24, v26);
          v24 -= 152;
          if (v23 == a7) {
            goto LABEL_32;
          }
        }
        uint64_t v41 = 0;
        do
        {
          uint64_t v42 = v24 + v41;
          v41 -= 152;
          sub_4C2034(v42, (long long *)(v23 + v41));
        }
        while (v23 + v41 != a7);
      }
      goto LABEL_32;
    }
LABEL_26:
    unint64_t v44 = 0;
    goto LABEL_32;
  }
  if ((long long *)a1 == a2) {
    goto LABEL_26;
  }
  uint64_t v27 = 0;
  unint64_t v28 = 0;
  do
  {
    long long v29 = (void *)(a1 + v27);
    uint64_t v30 = a7 + v27;
    long long v31 = *(_OWORD *)(a1 + v27);
    *(void *)(v30 + 16) = *(void *)(a1 + v27 + 16);
    *(_OWORD *)uint64_t v30 = v31;
    v29[1] = 0;
    v29[2] = 0;
    *long long v29 = 0;
    *(void *)(v30 + 24) = *(void *)(a1 + v27 + 24);
    long long v32 = *(_OWORD *)(a1 + v27 + 32);
    *(void *)(v30 + 48) = *(void *)(a1 + v27 + 48);
    *(_OWORD *)(v30 + 32) = v32;
    v29[5] = 0;
    v29[6] = 0;
    uint64_t v33 = *(void *)(a1 + v27 + 56);
    v29[4] = 0;
    *(void *)(v30 + 56) = v33;
    *(_DWORD *)(v30 + 64) = *(_DWORD *)(a1 + v27 + 64);
    long long v34 = *(_OWORD *)(a1 + v27 + 72);
    *(void *)(v30 + 88) = *(void *)(a1 + v27 + 88);
    *(_OWORD *)(v30 + 72) = v34;
    v29[10] = 0;
    v29[11] = 0;
    long long v35 = *(_OWORD *)(a1 + v27 + 96);
    uint64_t v36 = *(void *)(a1 + v27 + 112);
    v29[9] = 0;
    *(void *)(v30 + 112) = v36;
    *(_OWORD *)(v30 + 96) = v35;
    v29[13] = 0;
    v29[14] = 0;
    LODWORD(v36) = *(_DWORD *)(a1 + v27 + 120);
    v29[12] = 0;
    *(_DWORD *)(v30 + 120) = v36;
    long long v37 = *(_OWORD *)(a1 + v27 + 128);
    *(void *)(v30 + 144) = *(void *)(a1 + v27 + 144);
    *(_OWORD *)(v30 + 128) = v37;
    v29[17] = 0;
    v29[18] = 0;
    v29[16] = 0;
    ++v28;
    v27 += 152;
  }
  while (v29 + 19 != (void *)a2);
  unint64_t v44 = v28;
  if (v27)
  {
    long long v38 = (long long *)(a7 + v27);
    uint64_t v39 = a7 + v27 - 152;
    uint64_t v40 = (long long *)a7;
    while (v10 != a3)
    {
      if (sub_841944(a4, (uint64_t)v10, (uint64_t)v40))
      {
        sub_4C2034(v11, v10);
        uint64_t v10 = (long long *)((char *)v10 + 152);
        v11 += 152;
        if (v38 == v40) {
          goto LABEL_32;
        }
      }
      else
      {
        sub_4C2034(v11, v40);
        uint64_t v40 = (long long *)((char *)v40 + 152);
        v11 += 152;
        if (v38 == v40) {
          goto LABEL_32;
        }
      }
    }
    uint64_t v43 = 0;
    do
    {
      sub_4C2034(v11 + v43, (long long *)((char *)v40 + v43));
      v43 += 152;
    }
    while ((long long *)v39 != (long long *)((char *)v40 + v43 - 152));
  }
LABEL_32:
  if (a7) {
    sub_840044(&v44, a7);
  }
}

void sub_843968(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unint64_t a10)
{
  if (v10) {
    sub_840044(&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_843988(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = *(uint64_t **)a1;
  uint64_t v6 = **(void **)a1;
  uint64_t v7 = *a2;
  unint64_t v8 = HIDWORD(*a2);
  unint64_t v9 = *a2 & 0xFFFFFFFFFFFFLL;
  uint64_t v10 = sub_2D5D58(v6, v9);
  if (*(unsigned char *)(v6 + 7772))
  {
    uint64_t v11 = sub_2DB8E0(v6 + 3896, v7, 0);
    uint64_t v12 = &v11[-*(int *)v11];
    if (*(unsigned __int16 *)v12 < 5u)
    {
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v13 = *((unsigned __int16 *)v12 + 2);
      if (v13) {
        v13 += (uint64_t)&v11[*(unsigned int *)&v11[v13]];
      }
    }
    uint64_t v14 = v13 + 4 * (unsigned __int16)v8 + 4 + *(unsigned int *)(v13 + 4 * (unsigned __int16)v8 + 4);
  }
  else
  {
    uint64_t v14 = 0;
  }
  *(void *)&long long v100 = v10;
  *((void *)&v100 + 1) = v14;
  *(void *)&long long v101 = sub_2E5C38(v6, v9, 1);
  *((void *)&v101 + 1) = v15;
  LODWORD(v102) = v7;
  WORD2(v102) = v8;
  BYTE6(v102) = (v7 & 0xFF000000000000) != 0;
  uint64_t v16 = *v5;
  uint64_t v17 = *a3;
  unint64_t v18 = HIDWORD(*a3);
  unint64_t v19 = *a3 & 0xFFFFFFFFFFFFLL;
  uint64_t v20 = sub_2D5D58(*v5, v19);
  if (*(unsigned char *)(v16 + 7772))
  {
    uint64_t v21 = sub_2DB8E0(v16 + 3896, v17, 0);
    long long v22 = &v21[-*(int *)v21];
    if (*(unsigned __int16 *)v22 < 5u)
    {
      uint64_t v23 = 0;
    }
    else
    {
      uint64_t v23 = *((unsigned __int16 *)v22 + 2);
      if (v23) {
        v23 += (uint64_t)&v21[*(unsigned int *)&v21[v23]];
      }
    }
    uint64_t v24 = v23 + 4 * (unsigned __int16)v18 + 4 + *(unsigned int *)(v23 + 4 * (unsigned __int16)v18 + 4);
  }
  else
  {
    uint64_t v24 = 0;
  }
  v98[0] = v20;
  v98[1] = v24;
  v98[2] = sub_2E5C38(v16, v19, 1);
  v98[3] = v25;
  LODWORD(v99) = v17;
  WORD2(v99) = v18;
  BYTE6(v99) = (v17 & 0xFF000000000000) != 0;
  uint64_t v95 = 0;
  uint64_t v96 = 0;
  uint64_t v97 = 0;
  sub_2E44A4(*v5, (uint64_t)&v100, &v95);
  uint64_t v26 = v95;
  uint64_t v27 = v96;
  if (v95 != v96)
  {
    unint64_t v28 = &v75;
    while (1)
    {
      long long v29 = (unsigned __int16 *)(v100 - *(int *)v100);
      if (*v29 < 0x2Fu) {
        goto LABEL_19;
      }
      uint64_t v30 = v29[23];
      if (!v30
        || *(unsigned char *)(v100 + v30) != 14
        || __PAIR64__(*(unsigned __int16 *)(v26 + 36), *(_DWORD *)(v26 + 32)) == __PAIR64__(WORD2(v99), v99)
        && (HIWORD(v99) & 1) != (*(unsigned char *)(v26 + 38) == 0))
      {
        goto LABEL_19;
      }
      uint64_t v31 = *v5;
      __p.__r_.__value_.__r.__words[0] = v102;
      long long __str = v100;
      long long __str_16 = v101;
      __p.__r_.__value_.__s.__data_[6] = BYTE6(v102) ^ 1;
      int v32 = sub_2E41C4(v31, v26, (uint64_t)&__str);
      if (v32 == sub_2E41C4(*v5, v26, (uint64_t)v98)) {
        goto LABEL_19;
      }
      v69[0] = *(void **)(v26 + 32);
      uint64_t v33 = *(void *)(a1 + 8);
      v72[0] = 0;
      v72[1] = 0;
      uint64_t v73 = 0;
      sub_836AD0((uint64_t)v5, (unsigned int *)v69, v33, (uint64_t)v72, (uint64_t)&__str);
      if (SHIBYTE(v73) < 0) {
        operator delete(v72[0]);
      }
      uint64_t v34 = *(void *)(a1 + 16);
      long long v35 = (unsigned __int16 *)(*((void *)&v100 + 1) - (int)**((_DWORD **)&v100 + 1));
      unsigned int v36 = *v35;
      if (BYTE6(v102))
      {
        if (v36 >= 5)
        {
          unsigned int v37 = v35[2];
          if (v37) {
            goto LABEL_34;
          }
        }
      }
      else if (v36 >= 9)
      {
        unsigned int v37 = v35[4];
        if (v37)
        {
LABEL_34:
          __int16 v38 = *(_WORD *)(*((void *)&v100 + 1) + v37);
          int v39 = *(unsigned __int8 *)(v34 + 38);
          uint64_t v40 = *(int **)(v34 + 8);
          uint64_t v41 = (unsigned __int16 *)((char *)v40 - *v40);
          unsigned int v42 = *v41;
          if (v39) {
            goto LABEL_39;
          }
          goto LABEL_35;
        }
      }
      __int16 v38 = 0;
      int v44 = *(unsigned __int8 *)(v34 + 38);
      uint64_t v40 = *(int **)(v34 + 8);
      uint64_t v41 = (unsigned __int16 *)((char *)v40 - *v40);
      unsigned int v42 = *v41;
      if (v44)
      {
LABEL_39:
        if (v42 >= 9)
        {
          unsigned int v43 = v41[4];
          if (v43) {
            goto LABEL_41;
          }
        }
        goto LABEL_42;
      }
LABEL_35:
      if (v42 >= 5)
      {
        unsigned int v43 = v41[2];
        if (v43)
        {
LABEL_41:
          int v45 = *(unsigned __int16 *)((char *)v40 + v43);
          goto LABEL_43;
        }
      }
LABEL_42:
      int v45 = 0;
LABEL_43:
      unsigned __int16 v46 = v38 + 18000;
      unsigned __int16 v47 = v38 - 18000;
      if ((unsigned __int16)(v46 >> 5) < 0x465u) {
        unsigned __int16 v47 = v46;
      }
      int v48 = v45 - v47;
      if (v48 > 18000) {
        v48 -= 36000;
      }
      if (v48 < -17999) {
        v48 += 36000;
      }
      if (fabs((double)v48 / 100.0) > *((double *)v5 + 11))
      {
        int v49 = sub_2E41C4(*v5, v26, *(void *)(a1 + 24));
        if (v49 != sub_2E41C4(*v5, v26, *(void *)(a1 + 16)) && sub_6F2FD8((uint64_t)&__str))
        {
          uint64_t v50 = *(void *)(v26 + 32);
          uint64_t v70 = 0;
          uint64_t v71 = v50;
          uint64_t v51 = *(void *)(a1 + 8);
          v69[0] = 0;
          v69[1] = 0;
          sub_836AD0((uint64_t)v5, (unsigned int *)&v71, v51, (uint64_t)v69, (uint64_t)v72);
          uint64_t v68 = v28;
          uint64_t v52 = *(void *)(a1 + 32);
          if (*(char *)(v52 + 23) < 0) {
            operator delete(*(void **)v52);
          }
          long long v53 = *(_OWORD *)v72;
          *(void *)(v52 + 16) = v73;
          *(_OWORD *)uint64_t v52 = v53;
          HIBYTE(v73) = 0;
          LOBYTE(v72[0]) = 0;
          *(void *)(v52 + 24) = v74;
          uint64_t v54 = (void **)(v52 + 32);
          if (*(char *)(v52 + 55) < 0) {
            operator delete(*v54);
          }
          long long v55 = *(_OWORD *)v68;
          *(void *)(v52 + 48) = v68[2];
          *(_OWORD *)uint64_t v54 = v55;
          char v76 = 0;
          LOBYTE(v75) = 0;
          *(void *)(v52 + 56) = v77;
          *(_DWORD *)(v52 + 64) = v78;
          uint64_t v56 = (void **)(v52 + 72);
          if (*(char *)(v52 + 95) < 0) {
            operator delete(*v56);
          }
          long long v57 = v79;
          *(void *)(v52 + 88) = v80;
          *(_OWORD *)uint64_t v56 = v57;
          HIBYTE(v80) = 0;
          LOBYTE(v79) = 0;
          unsigned int v58 = (void **)(v52 + 96);
          if (*(char *)(v52 + 119) < 0) {
            operator delete(*v58);
          }
          long long v59 = v81;
          *(void *)(v52 + 112) = v82;
          *(_OWORD *)unsigned int v58 = v59;
          HIBYTE(v82) = 0;
          LOBYTE(v81) = 0;
          *(_DWORD *)(v52 + 120) = v83;
          unint64_t v60 = (void **)(v52 + 128);
          if (*(char *)(v52 + 151) < 0)
          {
            operator delete(*v60);
            int v64 = SHIBYTE(v82);
            uint64_t v65 = v85;
            *(_OWORD *)unint64_t v60 = v84;
            *(void *)(v52 + 144) = v65;
            HIBYTE(v85) = 0;
            LOBYTE(v84) = 0;
            if (v64 < 0)
            {
              operator delete((void *)v81);
              unint64_t v28 = v68;
              if ((SHIBYTE(v80) & 0x80000000) == 0) {
                goto LABEL_77;
              }
            }
            else
            {
              unint64_t v28 = v68;
              if ((SHIBYTE(v80) & 0x80000000) == 0) {
                goto LABEL_77;
              }
            }
LABEL_62:
            operator delete((void *)v79);
            if (v76 < 0) {
              goto LABEL_63;
            }
LABEL_78:
            if ((SHIBYTE(v73) & 0x80000000) == 0) {
              goto LABEL_79;
            }
LABEL_64:
            operator delete(v72[0]);
            if (SHIBYTE(v70) < 0) {
              goto LABEL_65;
            }
          }
          else
          {
            long long v61 = v84;
            *(void *)(v52 + 144) = v85;
            *(_OWORD *)unint64_t v60 = v61;
            HIBYTE(v85) = 0;
            LOBYTE(v84) = 0;
            unint64_t v28 = v68;
            if (SHIBYTE(v80) < 0) {
              goto LABEL_62;
            }
LABEL_77:
            if ((v76 & 0x80000000) == 0) {
              goto LABEL_78;
            }
LABEL_63:
            operator delete(v75);
            if (SHIBYTE(v73) < 0) {
              goto LABEL_64;
            }
LABEL_79:
            if (SHIBYTE(v70) < 0)
            {
LABEL_65:
              operator delete(v69[0]);
              int v62 = 0;
              if ((SHIBYTE(v94.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                goto LABEL_71;
              }
              goto LABEL_81;
            }
          }
          int v62 = 0;
          if ((SHIBYTE(v94.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_71;
          }
          goto LABEL_81;
        }
      }
      if (!sub_6F2FD8(*(void *)(a1 + 40)) && sub_6F2FD8((uint64_t)&__str))
      {
        uint64_t v63 = *(void *)(a1 + 40);
        std::string::operator=((std::string *)v63, (const std::string *)&__str);
        *(void *)(v63 + 24) = *((void *)&__str_16 + 1);
        std::string::operator=((std::string *)(v63 + 32), &__p);
        *(void *)(v63 + 56) = v89;
        *(_DWORD *)(v63 + 64) = v90;
        std::string::operator=((std::string *)(v63 + 72), &v91);
        std::string::operator=((std::string *)(v63 + 96), &v92);
        *(_DWORD *)(v63 + 120) = v93;
        std::string::operator=((std::string *)(v63 + 128), &v94);
      }
      int v62 = 1;
      if ((SHIBYTE(v94.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_71:
        if ((SHIBYTE(v92.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_72;
        }
        goto LABEL_82;
      }
LABEL_81:
      operator delete(v94.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v92.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_72:
        if ((SHIBYTE(v91.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_73;
        }
        goto LABEL_83;
      }
LABEL_82:
      operator delete(v92.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v91.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_73:
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          goto LABEL_17;
        }
        goto LABEL_84;
      }
LABEL_83:
      operator delete(v91.__r_.__value_.__l.__data_);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
LABEL_17:
        operator delete(__p.__r_.__value_.__l.__data_);
        if ((SBYTE7(__str_16) & 0x80000000) == 0) {
          goto LABEL_18;
        }
        goto LABEL_85;
      }
LABEL_84:
      if ((SBYTE7(__str_16) & 0x80000000) == 0)
      {
LABEL_18:
        if (!v62) {
          goto LABEL_94;
        }
        goto LABEL_19;
      }
LABEL_85:
      operator delete((void *)__str);
      if (!v62)
      {
LABEL_94:
        uint64_t v66 = 1;
        uint64_t v26 = v95;
        if (v95) {
          goto LABEL_90;
        }
        return v66;
      }
LABEL_19:
      v26 += 40;
      if (v26 == v27)
      {
        uint64_t v66 = 0;
        uint64_t v26 = v95;
        if (!v95) {
          return v66;
        }
        goto LABEL_90;
      }
    }
  }
  uint64_t v66 = 0;
  if (v95)
  {
LABEL_90:
    uint64_t v96 = v26;
    operator delete((void *)v26);
  }
  return v66;
}

void sub_8440FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  sub_4A50F4((uint64_t)&a43);
  int v45 = *(void **)(v43 - 200);
  if (v45)
  {
    *(void *)(v43 - 192) = v45;
    operator delete(v45);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

int *sub_84417C(void **a1)
{
  uint64_t v2 = (uint64_t)a1[1];
  __n128 result = (int *)sub_470ADC(*a1);
  if ((int *)v2 != result
    && (__n128 result = (int *)sub_46C894(*a1, v2), v4)
    && (__n128 result = (int *)sub_46C894(*a1, v2), LOBYTE(result[12 * v5 - 2])))
  {
    uint64_t v6 = (_DWORD *)sub_470B40(*a1, (uint64_t)a1[1]);
    unint64_t v7 = (unint64_t)a1[1] + 1;
    a1[1] = (void *)v7;
    do
    {
      __n128 result = (int *)sub_470ADC(*a1);
      if (v7 >= (unint64_t)result) {
        break;
      }
      __n128 result = (int *)sub_470B40(*a1, (uint64_t)a1[1]);
      int v8 = *result;
      int v9 = result[1];
      unint64_t v7 = (unint64_t)a1[1] + 1;
      a1[1] = (void *)v7;
    }
    while (v8 != *v6 || v9 != v6[1]);
  }
  else
  {
    a1[1] = (void *)((char *)a1[1] + 1);
  }
  return result;
}

void sub_84424C(uint64_t a1, long long *a2, void *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a4 >= 2)
  {
    uint64_t v8 = a1;
    if (a4 == 2)
    {
      if (sub_844504(a3, (uint64_t)a2 - 152, a1))
      {
        sub_83F69C(v8, (uint64_t)a2 - 152);
      }
    }
    else if ((uint64_t)a4 <= 0)
    {
      sub_844A84(a1, (uint64_t)a2, a3);
    }
    else
    {
      uint64_t v12 = a4 >> 1;
      uint64_t v13 = (long long *)(a1 + 152 * (a4 >> 1));
      if ((uint64_t)a4 <= a6)
      {
        sub_844ECC(a1, a1 + 152 * (a4 >> 1), a3, a4 >> 1, a5);
        uint64_t v15 = a5 + 152 * v12;
        sub_844ECC(v8 + 152 * (a4 >> 1), (uint64_t)a2, a3, a4 - v12, v15);
        unint64_t v21 = a4;
        uint64_t v16 = (long long *)(a5 + 152 * a4);
        uint64_t v17 = (long long *)v15;
        unint64_t v18 = (long long *)a5;
        while (v17 != v16)
        {
          if (sub_844504(a3, (uint64_t)v17, (uint64_t)v18))
          {
            sub_4C2034(v8, v17);
            uint64_t v17 = (long long *)((char *)v17 + 152);
            v8 += 152;
            if (v18 == (long long *)v15)
            {
LABEL_20:
              if (v17 != v16)
              {
                uint64_t v19 = 0;
                do
                {
                  sub_4C2034(v8 + v19, (long long *)((char *)v17 + v19));
                  v19 += 152;
                }
                while ((long long *)((char *)v17 + v19) != v16);
              }
              goto LABEL_27;
            }
          }
          else
          {
            sub_4C2034(v8, v18);
            unint64_t v18 = (long long *)((char *)v18 + 152);
            v8 += 152;
            if (v18 == (long long *)v15) {
              goto LABEL_20;
            }
          }
        }
        if (v18 != (long long *)v15)
        {
          uint64_t v20 = 0;
          do
          {
            sub_4C2034(v8 + v20, (long long *)((char *)v18 + v20));
            v20 += 152;
          }
          while ((long long *)((char *)v18 + v20) != (long long *)v15);
        }
LABEL_27:
        if (a5) {
          sub_840044(&v21, a5);
        }
      }
      else
      {
        sub_84424C(a1, a1 + 152 * (a4 >> 1), a3, a4 >> 1, a5, a6);
        uint64_t v14 = a4 - v12;
        sub_84424C(v13, a2, a3, v14, a5, a6);
        sub_845344(v8, v13, a2, a3, v12, v14, a5, a6);
      }
    }
  }
}

void sub_8444E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unint64_t a10)
{
  if (v10) {
    sub_840044(&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_844504(void *a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 120);
  int v4 = *(_DWORD *)(a3 + 120);
  if (v3 == 1 && v4 != 1) {
    return 1;
  }
  if (v3 != 1 && v4 == 1) {
    return 0;
  }
  if (*(unsigned char *)(*a1 + 97))
  {
    if (v3 == 2 && v4 != 2) {
      return 1;
    }
    if (v3 != 2 && v4 == 2) {
      return 0;
    }
  }
  uint64_t v12 = (unsigned __int8 **)a1[1];
  sub_4AA8E0((char *)v30, (long long *)a2);
  uint64_t v13 = sub_845760(v12, (uint64_t)&v29);
  if (v39 < 0)
  {
    operator delete(__p);
    if ((v37 & 0x80000000) == 0)
    {
LABEL_22:
      if ((v35 & 0x80000000) == 0) {
        goto LABEL_23;
      }
      goto LABEL_34;
    }
  }
  else if ((v37 & 0x80000000) == 0)
  {
    goto LABEL_22;
  }
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_23:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_24;
    }
LABEL_35:
    operator delete(v32);
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_36;
  }
LABEL_34:
  operator delete(v34);
  if (v33 < 0) {
    goto LABEL_35;
  }
LABEL_24:
  if ((v31 & 0x80000000) == 0) {
    goto LABEL_25;
  }
LABEL_36:
  operator delete(v30[0]);
LABEL_25:
  uint64_t v14 = (unsigned __int8 **)a1[1];
  sub_4AA8E0((char *)v30, (long long *)a3);
  uint64_t v15 = sub_845760(v14, (uint64_t)&v29);
  if (v39 < 0)
  {
    operator delete(__p);
    if ((v37 & 0x80000000) == 0)
    {
LABEL_27:
      if ((v35 & 0x80000000) == 0) {
        goto LABEL_28;
      }
      goto LABEL_39;
    }
  }
  else if ((v37 & 0x80000000) == 0)
  {
    goto LABEL_27;
  }
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_28:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v34);
  if ((v33 & 0x80000000) == 0)
  {
LABEL_29:
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v32);
  if ((v31 & 0x80000000) == 0)
  {
LABEL_30:
    BOOL v16 = v13 >= v15;
    if (v13 != v15) {
      return !v16;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v30[0]);
  BOOL v16 = v13 >= v15;
  if (v13 != v15) {
    return !v16;
  }
LABEL_42:
  uint64_t v17 = (unsigned __int8 **)a1[2];
  sub_4AA8E0((char *)v30, (long long *)a2);
  unint64_t v18 = sub_845760(v17, (uint64_t)&v29);
  if (v39 < 0)
  {
    operator delete(__p);
    if ((v37 & 0x80000000) == 0)
    {
LABEL_44:
      if ((v35 & 0x80000000) == 0) {
        goto LABEL_45;
      }
      goto LABEL_56;
    }
  }
  else if ((v37 & 0x80000000) == 0)
  {
    goto LABEL_44;
  }
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_45:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_46;
    }
LABEL_57:
    operator delete(v32);
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_58;
  }
LABEL_56:
  operator delete(v34);
  if (v33 < 0) {
    goto LABEL_57;
  }
LABEL_46:
  if ((v31 & 0x80000000) == 0) {
    goto LABEL_47;
  }
LABEL_58:
  operator delete(v30[0]);
LABEL_47:
  uint64_t v19 = (unsigned __int8 **)a1[2];
  sub_4AA8E0((char *)v30, (long long *)a3);
  uint64_t v20 = sub_845760(v19, (uint64_t)&v29);
  if (v39 < 0)
  {
    operator delete(__p);
    if ((v37 & 0x80000000) == 0)
    {
LABEL_49:
      if ((v35 & 0x80000000) == 0) {
        goto LABEL_50;
      }
      goto LABEL_61;
    }
  }
  else if ((v37 & 0x80000000) == 0)
  {
    goto LABEL_49;
  }
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_50:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_62;
  }
LABEL_61:
  operator delete(v34);
  if ((v33 & 0x80000000) == 0)
  {
LABEL_51:
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_63;
  }
LABEL_62:
  operator delete(v32);
  if ((v31 & 0x80000000) == 0)
  {
LABEL_52:
    BOOL v16 = v18 >= v20;
    if (v18 != v20) {
      return !v16;
    }
    goto LABEL_64;
  }
LABEL_63:
  operator delete(v30[0]);
  BOOL v16 = v18 >= v20;
  if (v18 != v20) {
    return !v16;
  }
LABEL_64:
  unint64_t v21 = (uint64_t *)a1[1];
  sub_4AA8E0((char *)v30, (long long *)a2);
  unint64_t v22 = sub_8458D0(v21, (uint64_t)&v29);
  if (v39 < 0)
  {
    operator delete(__p);
    if ((v37 & 0x80000000) == 0)
    {
LABEL_66:
      if ((v35 & 0x80000000) == 0) {
        goto LABEL_67;
      }
      goto LABEL_78;
    }
  }
  else if ((v37 & 0x80000000) == 0)
  {
    goto LABEL_66;
  }
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_67:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_68;
    }
LABEL_79:
    operator delete(v32);
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_80;
  }
LABEL_78:
  operator delete(v34);
  if (v33 < 0) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v31 & 0x80000000) == 0) {
    goto LABEL_69;
  }
LABEL_80:
  operator delete(v30[0]);
LABEL_69:
  uint64_t v23 = (uint64_t *)a1[1];
  sub_4AA8E0((char *)v30, (long long *)a3);
  unint64_t v24 = sub_8458D0(v23, (uint64_t)&v29);
  if (v39 < 0)
  {
    operator delete(__p);
    if ((v37 & 0x80000000) == 0)
    {
LABEL_71:
      if ((v35 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_83;
    }
  }
  else if ((v37 & 0x80000000) == 0)
  {
    goto LABEL_71;
  }
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_72:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_84;
  }
LABEL_83:
  operator delete(v34);
  if ((v33 & 0x80000000) == 0)
  {
LABEL_73:
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_74;
    }
LABEL_85:
    operator delete(v30[0]);
    BOOL v16 = v22 >= v24;
    if (v22 != v24) {
      return !v16;
    }
    goto LABEL_86;
  }
LABEL_84:
  operator delete(v32);
  if (v31 < 0) {
    goto LABEL_85;
  }
LABEL_74:
  BOOL v16 = v22 >= v24;
  if (v22 != v24) {
    return !v16;
  }
LABEL_86:
  uint64_t v25 = (uint64_t *)a1[2];
  sub_4AA8E0((char *)v30, (long long *)a2);
  unint64_t v26 = sub_8458D0(v25, (uint64_t)&v29);
  sub_7D0A58((uint64_t)&v29);
  uint64_t v27 = (uint64_t *)a1[2];
  sub_4AA8E0((char *)v30, (long long *)a3);
  unint64_t v28 = sub_8458D0(v27, (uint64_t)&v29);
  sub_7D0A58((uint64_t)&v29);
  BOOL v16 = v26 >= v28;
  return !v16;
}

void sub_8449E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_8449F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_844A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_844A20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_844A34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_844A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_844A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_844A70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_844A84(uint64_t a1, uint64_t a2, void *a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a1 + 152;
    if (a1 + 152 != a2)
    {
      uint64_t v7 = 0;
      uint64_t v8 = a1;
      do
      {
        uint64_t v9 = v5;
        if (!sub_844504(a3, v5, v8)) {
          goto LABEL_4;
        }
        long long v10 = *(_OWORD *)v9;
        uint64_t v43 = *(void *)(v9 + 16);
        *(_OWORD *)unsigned int v42 = v10;
        *(void *)(v9 + 8) = 0;
        *(void *)(v9 + 16) = 0;
        *(void *)uint64_t v9 = 0;
        uint64_t v11 = *(void *)(v8 + 208);
        uint64_t v46 = *(void *)(v8 + 200);
        uint64_t v12 = *(void *)(v8 + 176);
        long long v45 = *(_OWORD *)(v8 + 184);
        *(void *)(v8 + 184) = 0;
        *(void *)(v8 + 192) = 0;
        *(void *)(v8 + 200) = 0;
        uint64_t v44 = v12;
        uint64_t v47 = v11;
        LODWORD(v12) = *(_DWORD *)(v8 + 216);
        uint64_t v50 = *(void *)(v8 + 240);
        long long v49 = *(_OWORD *)(v8 + 224);
        *(void *)(v8 + 224) = 0;
        *(void *)(v8 + 232) = 0;
        long long v13 = *(_OWORD *)(v8 + 248);
        uint64_t v52 = *(void *)(v8 + 264);
        long long __p = v13;
        *(void *)(v8 + 240) = 0;
        *(void *)(v8 + 248) = 0;
        *(void *)(v8 + 256) = 0;
        *(void *)(v8 + 264) = 0;
        LODWORD(v11) = *(_DWORD *)(v8 + 272);
        int v48 = v12;
        int v53 = v11;
        long long v14 = *(_OWORD *)(v8 + 280);
        uint64_t v55 = *(void *)(v8 + 296);
        long long v54 = v14;
        *(void *)(v8 + 280) = 0;
        *(void *)(v8 + 288) = 0;
        uint64_t v15 = v7;
        *(void *)(v8 + 296) = 0;
        while (1)
        {
          uint64_t v16 = v15;
          uint64_t v17 = a1 + v15;
          uint64_t v18 = a1 + v15 + 152;
          if (*(char *)(a1 + v15 + 175) < 0) {
            operator delete(*(void **)v18);
          }
          *(_OWORD *)uint64_t v18 = *(_OWORD *)v17;
          *(void *)(v18 + 16) = *(void *)(v17 + 16);
          *(unsigned char *)(v17 + 23) = 0;
          *(unsigned char *)uint64_t v17 = 0;
          *(void *)(v17 + 176) = *(void *)(v17 + 24);
          uint64_t v19 = v17 + 184;
          if (*(char *)(v17 + 207) < 0) {
            operator delete(*(void **)v19);
          }
          uint64_t v20 = v17 + 32;
          uint64_t v21 = a1 + v16;
          *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          *(void *)(v19 + 16) = *(void *)(v20 + 16);
          *(unsigned char *)(v21 + 55) = 0;
          *(unsigned char *)uint64_t v20 = 0;
          *(void *)(v21 + 208) = *(void *)(a1 + v16 + 56);
          *(_DWORD *)(v21 + 216) = *(_DWORD *)(a1 + v16 + 64);
          unint64_t v22 = (void **)(a1 + v16 + 224);
          if (*(char *)(a1 + v16 + 247) < 0) {
            operator delete(*v22);
          }
          *(_OWORD *)unint64_t v22 = *(_OWORD *)(v21 + 72);
          *(void *)(a1 + v16 + 240) = *(void *)(v21 + 88);
          *(unsigned char *)(v21 + 95) = 0;
          *(unsigned char *)(v21 + 72) = 0;
          uint64_t v23 = v21 + 248;
          if (*(char *)(v21 + 271) < 0) {
            operator delete(*(void **)v23);
          }
          uint64_t v24 = a1 + v16;
          long long v25 = *(_OWORD *)(a1 + v16 + 96);
          *(void *)(v23 + 16) = *(void *)(a1 + v16 + 112);
          *(_OWORD *)uint64_t v23 = v25;
          *(unsigned char *)(v24 + 119) = 0;
          *(unsigned char *)(v24 + 96) = 0;
          *(_DWORD *)(v24 + 272) = *(_DWORD *)(a1 + v16 + 120);
          unint64_t v26 = (void **)(a1 + v16 + 280);
          if (*(char *)(a1 + v16 + 303) < 0) {
            operator delete(*v26);
          }
          long long v27 = *(_OWORD *)(v24 + 128);
          *(void *)(a1 + v16 + 296) = *(void *)(v24 + 144);
          *(_OWORD *)unint64_t v26 = v27;
          *(unsigned char *)(v24 + 151) = 0;
          *(unsigned char *)(v24 + 128) = 0;
          if (!v16) {
            break;
          }
          char v28 = sub_844504(a3, (uint64_t)v42, a1 + v16 - 152);
          uint64_t v15 = v16 - 152;
          if ((v28 & 1) == 0)
          {
            uint64_t v29 = a1 + v16;
            if ((*(char *)(a1 + v15 + 175) & 0x80000000) == 0) {
              goto LABEL_23;
            }
            goto LABEL_22;
          }
        }
        uint64_t v29 = a1;
        if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
          goto LABEL_23;
        }
LABEL_22:
        operator delete(*(void **)v29);
LABEL_23:
        uint64_t v30 = a1 + v16;
        char v31 = (void **)(v30 + 32);
        long long v32 = *(_OWORD *)v42;
        *(void *)(v29 + 16) = v43;
        *(_OWORD *)uint64_t v29 = v32;
        HIBYTE(v43) = 0;
        LOBYTE(v42[0]) = 0;
        *(void *)(v29 + 24) = v44;
        if (*(char *)(v29 + 55) < 0) {
          operator delete(*v31);
        }
        char v33 = (void **)(v30 + 72);
        long long v34 = v45;
        *(void *)(v30 + 48) = v46;
        *(_OWORD *)char v31 = v34;
        HIBYTE(v46) = 0;
        LOBYTE(v45) = 0;
        *(void *)(v29 + 56) = v47;
        *(_DWORD *)(v29 + 64) = v48;
        if (*(char *)(v29 + 95) < 0) {
          operator delete(*v33);
        }
        uint64_t v35 = v30 + 96;
        long long v36 = v49;
        *(void *)(v30 + 88) = v50;
        *(_OWORD *)char v33 = v36;
        HIBYTE(v50) = 0;
        LOBYTE(v49) = 0;
        if (*(char *)(v29 + 119) < 0) {
          operator delete(*(void **)v35);
        }
        uint64_t v37 = v30 + 128;
        long long v38 = __p;
        *(void *)(v35 + 16) = v52;
        *(_OWORD *)uint64_t v35 = v38;
        HIBYTE(v52) = 0;
        LOBYTE(__p) = 0;
        *(_DWORD *)(v29 + 120) = v53;
        if (*(char *)(v29 + 151) < 0)
        {
          operator delete(*(void **)v37);
          int v40 = SHIBYTE(v52);
          long long v41 = v54;
          *(void *)(v37 + 16) = v55;
          *(_OWORD *)uint64_t v37 = v41;
          HIBYTE(v55) = 0;
          LOBYTE(v54) = 0;
          if (v40 < 0)
          {
            operator delete((void *)__p);
            if ((SHIBYTE(v50) & 0x80000000) == 0)
            {
LABEL_34:
              if ((SHIBYTE(v46) & 0x80000000) == 0) {
                goto LABEL_35;
              }
              goto LABEL_39;
            }
          }
          else if ((SHIBYTE(v50) & 0x80000000) == 0)
          {
            goto LABEL_34;
          }
        }
        else
        {
          long long v39 = v54;
          *(void *)(v37 + 16) = v55;
          *(_OWORD *)uint64_t v37 = v39;
          HIBYTE(v55) = 0;
          LOBYTE(v54) = 0;
          if ((SHIBYTE(v50) & 0x80000000) == 0) {
            goto LABEL_34;
          }
        }
        operator delete((void *)v49);
        if ((SHIBYTE(v46) & 0x80000000) == 0)
        {
LABEL_35:
          if (SHIBYTE(v43) < 0) {
            goto LABEL_40;
          }
          goto LABEL_4;
        }
LABEL_39:
        operator delete((void *)v45);
        if (SHIBYTE(v43) < 0) {
LABEL_40:
        }
          operator delete(v42[0]);
LABEL_4:
        uint64_t v5 = v9 + 152;
        v7 += 152;
        uint64_t v8 = v9;
      }
      while (v9 + 152 != a2);
    }
  }
}

void sub_844EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_4A50F4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_844ECC(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, uint64_t a5)
{
  if (a4)
  {
    if (a4 == 2)
    {
      uint64_t v15 = (long long *)(a2 - 152);
      int v16 = sub_844504(a3, a2 - 152, a1);
      uint64_t v17 = (_OWORD *)(a5 + 32);
      uint64_t v18 = (_OWORD *)(a5 + 72);
      uint64_t v19 = (_OWORD *)(a5 + 96);
      if (v16)
      {
        long long v20 = *v15;
        *(void *)(a5 + 16) = *(void *)(a2 - 136);
        *(_OWORD *)a5 = v20;
        *(void *)(a2 - 144) = 0;
        *(void *)(a2 - 136) = 0;
        *(void *)uint64_t v15 = 0;
        *(void *)(a5 + 24) = *(void *)(a2 - 128);
        long long v21 = *(_OWORD *)(a2 - 120);
        *(void *)(a5 + 48) = *(void *)(a2 - 104);
        _OWORD *v17 = v21;
        *(void *)(a2 - 112) = 0;
        *(void *)(a2 - 104) = 0;
        *(void *)(a2 - 120) = 0;
        *(void *)(a5 + 56) = *(void *)(a2 - 96);
        *(_DWORD *)(a5 + 64) = *(_DWORD *)(a2 - 88);
        long long v22 = *(_OWORD *)(a2 - 80);
        *(void *)(a5 + 88) = *(void *)(a2 - 64);
        *uint64_t v18 = v22;
        *(void *)(a2 - 72) = 0;
        *(void *)(a2 - 64) = 0;
        *(void *)(a2 - 80) = 0;
        long long v23 = *(_OWORD *)(a2 - 56);
        *(void *)(a5 + 112) = *(void *)(a2 - 40);
        *uint64_t v19 = v23;
        *(void *)(a2 - 48) = 0;
        *(void *)(a2 - 40) = 0;
        *(void *)(a2 - 56) = 0;
        *(_DWORD *)(a5 + 120) = *(_DWORD *)(a2 - 32);
        long long v24 = *(_OWORD *)(a2 - 24);
        *(void *)(a5 + 144) = *(void *)(a2 - 8);
        *(_OWORD *)(a5 + 128) = v24;
        *(void *)(a2 - 16) = 0;
        *(void *)(a2 - 8) = 0;
        *(void *)(a2 - 24) = 0;
        uint64_t v25 = a5 + 152;
        long long v26 = *(_OWORD *)a1;
        *(void *)(a5 + 168) = *(void *)(a1 + 16);
        *(_OWORD *)(a5 + 152) = v26;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)a1 = 0;
        *(void *)(a5 + 176) = *(void *)(a1 + 24);
        long long v27 = *(_OWORD *)(a1 + 32);
        *(void *)(a5 + 200) = *(void *)(a1 + 48);
        *(_OWORD *)(a5 + 184) = v27;
        *(void *)(a1 + 40) = 0;
        *(void *)(a1 + 48) = 0;
        *(void *)(a1 + 32) = 0;
        *(void *)(a5 + 208) = *(void *)(a1 + 56);
        *(_DWORD *)(a5 + 216) = *(_DWORD *)(a1 + 64);
        long long v28 = *(_OWORD *)(a1 + 72);
        *(void *)(a5 + 240) = *(void *)(a1 + 88);
        *(_OWORD *)(a5 + 224) = v28;
        *(void *)(a1 + 80) = 0;
        *(void *)(a1 + 88) = 0;
        *(void *)(a1 + 72) = 0;
        long long v29 = *(_OWORD *)(a1 + 96);
        *(void *)(a5 + 264) = *(void *)(a1 + 112);
        *(_OWORD *)(a5 + 248) = v29;
        *(void *)(a1 + 104) = 0;
        *(void *)(a1 + 112) = 0;
        *(void *)(a1 + 96) = 0;
        *(_DWORD *)(a5 + 272) = *(_DWORD *)(a1 + 120);
        uint64_t v30 = (void *)(a1 + 128);
        long long v31 = *(_OWORD *)(a1 + 128);
        uint64_t v32 = *(void *)(a1 + 144);
      }
      else
      {
        long long v35 = *(_OWORD *)a1;
        *(void *)(a5 + 16) = *(void *)(a1 + 16);
        *(_OWORD *)a5 = v35;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)a1 = 0;
        *(void *)(a5 + 24) = *(void *)(a1 + 24);
        long long v36 = *(_OWORD *)(a1 + 32);
        *(void *)(a5 + 48) = *(void *)(a1 + 48);
        _OWORD *v17 = v36;
        *(void *)(a1 + 40) = 0;
        *(void *)(a1 + 48) = 0;
        *(void *)(a1 + 32) = 0;
        *(void *)(a5 + 56) = *(void *)(a1 + 56);
        *(_DWORD *)(a5 + 64) = *(_DWORD *)(a1 + 64);
        long long v37 = *(_OWORD *)(a1 + 72);
        *(void *)(a5 + 88) = *(void *)(a1 + 88);
        *uint64_t v18 = v37;
        *(void *)(a1 + 80) = 0;
        *(void *)(a1 + 88) = 0;
        *(void *)(a1 + 72) = 0;
        long long v38 = *(_OWORD *)(a1 + 96);
        *(void *)(a5 + 112) = *(void *)(a1 + 112);
        *uint64_t v19 = v38;
        *(void *)(a1 + 104) = 0;
        *(void *)(a1 + 112) = 0;
        *(void *)(a1 + 96) = 0;
        *(_DWORD *)(a5 + 120) = *(_DWORD *)(a1 + 120);
        long long v39 = *(_OWORD *)(a1 + 128);
        *(void *)(a5 + 144) = *(void *)(a1 + 144);
        *(_OWORD *)(a5 + 128) = v39;
        *(void *)(a1 + 136) = 0;
        *(void *)(a1 + 144) = 0;
        *(void *)(a1 + 128) = 0;
        uint64_t v25 = a5 + 152;
        long long v40 = *v15;
        *(void *)(a5 + 168) = *(void *)(a2 - 136);
        *(_OWORD *)(a5 + 152) = v40;
        *(void *)(a2 - 144) = 0;
        *(void *)(a2 - 136) = 0;
        *(void *)uint64_t v15 = 0;
        *(void *)(a5 + 176) = *(void *)(a2 - 128);
        long long v41 = *(_OWORD *)(a2 - 120);
        *(void *)(a5 + 200) = *(void *)(a2 - 104);
        *(_OWORD *)(a5 + 184) = v41;
        *(void *)(a2 - 112) = 0;
        *(void *)(a2 - 104) = 0;
        *(void *)(a2 - 120) = 0;
        *(void *)(a5 + 208) = *(void *)(a2 - 96);
        *(_DWORD *)(a5 + 216) = *(_DWORD *)(a2 - 88);
        long long v42 = *(_OWORD *)(a2 - 80);
        *(void *)(a5 + 240) = *(void *)(a2 - 64);
        *(_OWORD *)(a5 + 224) = v42;
        *(void *)(a2 - 72) = 0;
        *(void *)(a2 - 64) = 0;
        *(void *)(a2 - 80) = 0;
        long long v43 = *(_OWORD *)(a2 - 56);
        *(void *)(a5 + 264) = *(void *)(a2 - 40);
        *(_OWORD *)(a5 + 248) = v43;
        *(void *)(a2 - 48) = 0;
        *(void *)(a2 - 40) = 0;
        *(void *)(a2 - 56) = 0;
        *(_DWORD *)(a5 + 272) = *(_DWORD *)(a2 - 32);
        uint64_t v30 = (void *)(a2 - 24);
        long long v31 = *(_OWORD *)(a2 - 24);
        uint64_t v32 = *(void *)(a2 - 8);
      }
      *(void *)(a5 + 296) = v32;
      *(_OWORD *)(v25 + 128) = v31;
      *uint64_t v30 = 0;
      v30[1] = 0;
      v30[2] = 0;
    }
    else if (a4 == 1)
    {
      long long v10 = *(_OWORD *)a1;
      *(void *)(a5 + 16) = *(void *)(a1 + 16);
      *(_OWORD *)a5 = v10;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)a1 = 0;
      *(void *)(a5 + 24) = *(void *)(a1 + 24);
      long long v11 = *(_OWORD *)(a1 + 32);
      *(void *)(a5 + 48) = *(void *)(a1 + 48);
      *(_OWORD *)(a5 + 32) = v11;
      *(void *)(a1 + 40) = 0;
      *(void *)(a1 + 48) = 0;
      *(void *)(a1 + 32) = 0;
      *(void *)(a5 + 56) = *(void *)(a1 + 56);
      *(_DWORD *)(a5 + 64) = *(_DWORD *)(a1 + 64);
      long long v12 = *(_OWORD *)(a1 + 72);
      *(void *)(a5 + 88) = *(void *)(a1 + 88);
      *(_OWORD *)(a5 + 72) = v12;
      *(void *)(a1 + 80) = 0;
      *(void *)(a1 + 88) = 0;
      *(void *)(a1 + 72) = 0;
      long long v13 = *(_OWORD *)(a1 + 96);
      *(void *)(a5 + 112) = *(void *)(a1 + 112);
      *(_OWORD *)(a5 + 96) = v13;
      *(void *)(a1 + 104) = 0;
      *(void *)(a1 + 112) = 0;
      *(void *)(a1 + 96) = 0;
      *(_DWORD *)(a5 + 120) = *(_DWORD *)(a1 + 120);
      long long v14 = *(_OWORD *)(a1 + 128);
      *(void *)(a5 + 144) = *(void *)(a1 + 144);
      *(_OWORD *)(a5 + 128) = v14;
      *(void *)(a1 + 136) = 0;
      *(void *)(a1 + 144) = 0;
      *(void *)(a1 + 128) = 0;
    }
    else if ((uint64_t)a4 > 8)
    {
      unint64_t v33 = a4 >> 1;
      uint64_t v34 = 152 * (a4 >> 1);
      sub_84424C(a1, a1 + v34, a3, a4 >> 1, a5, a4 >> 1);
      sub_84424C(a1 + v34, a2, a3, a4 - v33, a5 + v34, a4 - v33);
      sub_845E9C(a1, (void *)(a1 + v34), a1 + v34, a2, a5, a3);
    }
    else
    {
      sub_845A6C(a1, a2, a5, a3);
    }
  }
}

void sub_845328(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unint64_t a10)
{
  if (v10) {
    sub_840044(&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

void sub_845344(uint64_t a1, long long *a2, long long *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v49 = a6;
  if (a6)
  {
    while (1)
    {
      if (v49 <= a8 || a5 <= a8)
      {
        sub_846220(a1, a2, a3, a4, a5, v49, a7);
        return;
      }
      if (!a5) {
        return;
      }
      long long v12 = 0;
      uint64_t v13 = -a5;
      while (1)
      {
        uint64_t v14 = a1;
        uint64_t v15 = (uint64_t)v12 + a1;
        int v16 = a4;
        if (sub_844504(a4, (uint64_t)a2, (uint64_t)v12 + a1)) {
          break;
        }
        long long v12 = (long long *)((char *)v12 + 152);
        BOOL v17 = __CFADD__(v13++, 1);
        a1 = v14;
        a4 = v16;
        if (v17) {
          return;
        }
      }
      uint64_t v18 = -v13;
      uint64_t v19 = v49;
      uint64_t v46 = a3;
      uint64_t v47 = a8;
      if (-v13 >= v49)
      {
        if (v13 == -1)
        {
          sub_83F69C((uint64_t)v12 + v14, (uint64_t)a2);
          return;
        }
        if (v13 > 0) {
          uint64_t v18 = 1 - v13;
        }
        uint64_t v29 = v18 >> 1;
        uint64_t v23 = v14;
        uint64_t v24 = (uint64_t)v12 + 152 * (v18 >> 1) + v14;
        long long v55 = *(_OWORD *)v16;
        uint64_t v56 = v16[2];
        long long v22 = a2;
        if (a2 != a3)
        {
          uint64_t v51 = v18 >> 1;
          uint64_t v54 = (uint64_t)v12 + 152 * (v18 >> 1) + v14;
          unint64_t v35 = 0x86BCA1AF286BCA1BLL * (((char *)a3 - (char *)a2) >> 3);
          long long v22 = a2;
          do
          {
            uint64_t v36 = (uint64_t)v22 + 152 * (v35 >> 1);
            int v37 = sub_844504(&v55, v36, v54);
            if (v37) {
              v35 += ~(v35 >> 1);
            }
            else {
              v35 >>= 1;
            }
            if (v37) {
              long long v22 = (long long *)(v36 + 152);
            }
          }
          while (v35);
          uint64_t v19 = v49;
          uint64_t v29 = v51;
          uint64_t v23 = v14;
          uint64_t v24 = v54;
        }
        uint64_t v21 = 0x86BCA1AF286BCA1BLL * (((char *)v22 - (char *)a2) >> 3);
        int v53 = (long long *)v24;
        if ((long long *)v24 != a2)
        {
LABEL_25:
          if (v22 == a2)
          {
            a3 = (long long *)v24;
          }
          else
          {
            uint64_t v45 = v21;
            uint64_t v50 = v29;
            sub_83F69C(v24, (uint64_t)a2);
            a3 = (long long *)(v24 + 152);
            for (uint64_t i = (uint64_t)a2 + 152; (long long *)i != v22; i += 152)
            {
              if (a3 == a2) {
                a2 = (long long *)i;
              }
              sub_83F69C((uint64_t)a3, i);
              a3 = (long long *)((char *)a3 + 152);
            }
            if (a3 != a2)
            {
              uint64_t v31 = (uint64_t)a3;
              uint64_t v32 = (uint64_t)a2;
              while (1)
              {
                sub_83F69C(v31, v32);
                v32 += 152;
                BOOL v33 = v31 + 152 == (void)a2;
                if ((long long *)v32 == v22)
                {
                  if ((long long *)(v31 + 152) == a2) {
                    break;
                  }
                  uint64_t v32 = (uint64_t)a2 + 152;
                  v31 += 304;
                  while (1)
                  {
                    sub_83F69C(v31 - 152, (uint64_t)a2);
                    BOOL v33 = v31 == (void)a2;
                    if ((long long *)v32 != v22) {
                      break;
                    }
                    BOOL v34 = v31 == (void)a2;
                    v31 += 152;
                    if (v34) {
                      goto LABEL_42;
                    }
                  }
                }
                else
                {
                  v31 += 152;
                }
                if (v33) {
                  a2 = (long long *)v32;
                }
              }
            }
LABEL_42:
            uint64_t v19 = v49;
            uint64_t v29 = v50;
            uint64_t v23 = v14;
            uint64_t v21 = v45;
          }
          goto LABEL_58;
        }
      }
      else
      {
        if (v49 >= 0) {
          uint64_t v20 = v49;
        }
        else {
          uint64_t v20 = v49 + 1;
        }
        uint64_t v21 = v20 >> 1;
        long long v22 = (long long *)((char *)a2 + 152 * (v20 >> 1));
        uint64_t v23 = v14;
        uint64_t v24 = (uint64_t)a2;
        if ((long long *)((char *)a2 - v14) != v12)
        {
          uint64_t v44 = v20 >> 1;
          unint64_t v25 = 0x86BCA1AF286BCA1BLL * (((char *)a2 - v14 - (char *)v12) >> 3);
          uint64_t v24 = v15;
          uint64_t v52 = (uint64_t)a2 + 152 * (v20 >> 1);
          do
          {
            uint64_t v26 = v24;
            uint64_t v27 = v24 + 152 * (v25 >> 1);
            int v28 = sub_844504(v16, v52, v27);
            if (v28) {
              uint64_t v24 = v26;
            }
            else {
              uint64_t v24 = v27 + 152;
            }
            if (v28) {
              v25 >>= 1;
            }
            else {
              v25 += ~(v25 >> 1);
            }
          }
          while (v25);
          uint64_t v19 = v49;
          uint64_t v23 = v14;
          long long v22 = (long long *)v52;
          uint64_t v21 = v44;
        }
        uint64_t v29 = 0x86BCA1AF286BCA1BLL * ((v24 - v23 - (uint64_t)v12) >> 3);
        int v53 = (long long *)v24;
        if ((long long *)v24 != a2) {
          goto LABEL_25;
        }
      }
      a3 = v22;
LABEL_58:
      a5 = -v29 - v13;
      uint64_t v38 = v19 - v21;
      if (v29 + v21 >= v19 - (v29 + v21) - v13)
      {
        long long v40 = v22;
        a8 = v47;
        uint64_t v41 = v29;
        uint64_t v42 = v21;
        sub_845344(a3, v40, v46, v16, -v29 - v13, v19 - v21, a7, v47);
        a4 = v16;
        a2 = v53;
        uint64_t v43 = v42;
        a5 = v41;
        uint64_t v49 = v43;
        a1 = v15;
        if (!v43) {
          return;
        }
      }
      else
      {
        sub_845344((char *)v12 + v23, v53, a3, v16, v29, v21, a7, v47);
        a4 = v16;
        long long v39 = a3;
        a2 = v22;
        a8 = v47;
        a3 = v46;
        uint64_t v49 = v38;
        a1 = (uint64_t)v39;
        if (!v38) {
          return;
        }
      }
    }
  }
}

unsigned __int8 *sub_845760(unsigned __int8 **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  int v3 = a1[1];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 8) = 0;
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  *(_OWORD *)int v16 = *(_OWORD *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a2 + 56) = 0;
  uint64_t v17 = v6;
  uint64_t v18 = v7;
  int v19 = *(_DWORD *)(a2 + 72);
  long long v8 = *(_OWORD *)(a2 + 80);
  uint64_t v21 = *(void *)(a2 + 96);
  *(_OWORD *)uint64_t v20 = v8;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0;
  long long v9 = *(_OWORD *)(a2 + 104);
  uint64_t v23 = *(void *)(a2 + 120);
  *(_OWORD *)long long v22 = v9;
  *(void *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  *(void *)(a2 + 120) = 0;
  int v24 = *(_DWORD *)(a2 + 128);
  long long v10 = *(_OWORD *)(a2 + 136);
  uint64_t v26 = *(void *)(a2 + 152);
  *(_OWORD *)long long __p = v10;
  *(void *)(a2 + 136) = 0;
  *(void *)(a2 + 144) = 0;
  *(void *)(a2 + 152) = 0;
  if (v2 != v3)
  {
    while (!sub_83F548((uint64_t)&v12, v2))
    {
      v2 += 152;
      if (v2 == v3)
      {
        uint64_t v2 = v3;
        break;
      }
    }
  }
  if (SHIBYTE(v26) < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v23) & 0x80000000) == 0)
    {
LABEL_7:
      if ((SHIBYTE(v21) & 0x80000000) == 0) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
  }
  else if ((SHIBYTE(v23) & 0x80000000) == 0)
  {
    goto LABEL_7;
  }
  operator delete(v22[0]);
  if ((SHIBYTE(v21) & 0x80000000) == 0)
  {
LABEL_8:
    if ((SHIBYTE(v17) & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_14:
    operator delete(v16[0]);
    if ((SHIBYTE(v14) & 0x80000000) == 0) {
      return v2;
    }
    goto LABEL_15;
  }
LABEL_13:
  operator delete(v20[0]);
  if (SHIBYTE(v17) < 0) {
    goto LABEL_14;
  }
LABEL_9:
  if ((SHIBYTE(v14) & 0x80000000) == 0) {
    return v2;
  }
LABEL_15:
  operator delete(v13[0]);
  return v2;
}

void sub_8458BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_8458D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *(_OWORD *)long long v10 = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 8) = 0;
  char v11 = HIBYTE(v4);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a2 + 56) = 0;
  char v13 = HIBYTE(v5);
  int v14 = *(_DWORD *)(a2 + 72);
  long long v6 = *(_OWORD *)(a2 + 80);
  uint64_t v16 = *(void *)(a2 + 96);
  *(_OWORD *)uint64_t v15 = v6;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0;
  long long v7 = *(_OWORD *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 120);
  *(_OWORD *)uint64_t v17 = v7;
  *(void *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  *(void *)(a2 + 120) = 0;
  int v19 = *(_DWORD *)(a2 + 128);
  long long v8 = *(_OWORD *)(a2 + 136);
  uint64_t v21 = *(void *)(a2 + 152);
  *(_OWORD *)long long __p = v8;
  *(void *)(a2 + 136) = 0;
  *(void *)(a2 + 144) = 0;
  *(void *)(a2 + 152) = 0;
  if (v2 != v3)
  {
    while (!sub_6F2880((uint64_t)&v14) || !sub_6F2DD0((uint64_t)&v14, v2 + 64))
    {
      v2 += 152;
      if (v2 == v3)
      {
        uint64_t v2 = v3;
        if ((SHIBYTE(v21) & 0x80000000) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
  }
  if (SHIBYTE(v21) < 0)
  {
LABEL_13:
    operator delete(__p[0]);
    if ((SHIBYTE(v18) & 0x80000000) == 0)
    {
LABEL_8:
      if ((SHIBYTE(v16) & 0x80000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
  }
  else
  {
LABEL_7:
    if ((SHIBYTE(v18) & 0x80000000) == 0) {
      goto LABEL_8;
    }
  }
  operator delete(v17[0]);
  if ((SHIBYTE(v16) & 0x80000000) == 0)
  {
LABEL_9:
    if ((v13 & 0x80000000) == 0) {
      goto LABEL_10;
    }
LABEL_16:
    operator delete(v12[0]);
    if ((v11 & 0x80000000) == 0) {
      return v2;
    }
    goto LABEL_17;
  }
LABEL_15:
  operator delete(v15[0]);
  if (v13 < 0) {
    goto LABEL_16;
  }
LABEL_10:
  if ((v11 & 0x80000000) == 0) {
    return v2;
  }
LABEL_17:
  operator delete(v10[0]);
  return v2;
}

void sub_845A58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_845A6C(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  if (result != a2)
  {
    uint64_t v6 = result;
    long long v7 = *(_OWORD *)result;
    *(void *)(a3 + 16) = *(void *)(result + 16);
    *(_OWORD *)a3 = v7;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = 0;
    *(void *)(a3 + 24) = *(void *)(result + 24);
    long long v8 = *(_OWORD *)(result + 32);
    *(void *)(a3 + 48) = *(void *)(result + 48);
    *(_OWORD *)(a3 + 32) = v8;
    *(void *)(result + 40) = 0;
    *(void *)(result + 48) = 0;
    *(void *)(result + 32) = 0;
    *(void *)(a3 + 56) = *(void *)(result + 56);
    *(_DWORD *)(a3 + 64) = *(_DWORD *)(result + 64);
    long long v9 = *(_OWORD *)(result + 72);
    *(void *)(a3 + 88) = *(void *)(result + 88);
    *(_OWORD *)(a3 + 72) = v9;
    *(void *)(result + 80) = 0;
    *(void *)(result + 88) = 0;
    *(void *)(result + 72) = 0;
    long long v10 = *(_OWORD *)(result + 96);
    *(void *)(a3 + 112) = *(void *)(result + 112);
    *(_OWORD *)(a3 + 96) = v10;
    *(void *)(result + 104) = 0;
    *(void *)(result + 112) = 0;
    *(void *)(result + 96) = 0;
    *(_DWORD *)(a3 + 120) = *(_DWORD *)(result + 120);
    long long v11 = *(_OWORD *)(result + 128);
    *(void *)(a3 + 144) = *(void *)(result + 144);
    *(_OWORD *)(a3 + 128) = v11;
    *(void *)(result + 136) = 0;
    *(void *)(result + 144) = 0;
    *(void *)(result + 128) = 0;
    uint64_t v41 = 1;
    uint64_t v12 = result + 152;
    if (result + 152 != a2)
    {
      uint64_t v14 = 0;
      uint64_t v15 = a3;
      do
      {
        while (1)
        {
          uint64_t v21 = v12;
          __n128 result = sub_844504(a4, v12, v15);
          long long v22 = (long long *)(v15 + 152);
          uint64_t v23 = (_OWORD *)(v15 + 184);
          int v24 = (_OWORD *)(v15 + 224);
          unint64_t v25 = (_OWORD *)(v15 + 248);
          if (result) {
            break;
          }
          long long v16 = *(_OWORD *)v21;
          *(void *)(v15 + 168) = *(void *)(v21 + 16);
          long long *v22 = v16;
          *(void *)(v21 + 8) = 0;
          *(void *)(v21 + 16) = 0;
          *(void *)uint64_t v21 = 0;
          *(void *)(v15 + 176) = *(void *)(v6 + 176);
          long long v17 = *(_OWORD *)(v6 + 184);
          *(void *)(v15 + 200) = *(void *)(v6 + 200);
          _OWORD *v23 = v17;
          *(void *)(v6 + 192) = 0;
          *(void *)(v6 + 200) = 0;
          *(void *)(v6 + 184) = 0;
          *(void *)(v15 + 208) = *(void *)(v6 + 208);
          *(_DWORD *)(v15 + 216) = *(_DWORD *)(v6 + 216);
          long long v18 = *(_OWORD *)(v6 + 224);
          *(void *)(v15 + 240) = *(void *)(v6 + 240);
          *int v24 = v18;
          *(void *)(v6 + 232) = 0;
          *(void *)(v6 + 240) = 0;
          *(void *)(v6 + 224) = 0;
          long long v19 = *(_OWORD *)(v6 + 248);
          *(void *)(v15 + 264) = *(void *)(v6 + 264);
          *unint64_t v25 = v19;
          *(void *)(v6 + 256) = 0;
          *(void *)(v6 + 264) = 0;
          *(void *)(v6 + 248) = 0;
          *(_DWORD *)(v15 + 272) = *(_DWORD *)(v6 + 272);
          long long v20 = *(_OWORD *)(v6 + 280);
          *(void *)(v15 + 296) = *(void *)(v6 + 296);
          *(_OWORD *)(v15 + 280) = v20;
          *(void *)(v6 + 288) = 0;
          *(void *)(v6 + 296) = 0;
          *(void *)(v6 + 280) = 0;
          ++v41;
          uint64_t v12 = v21 + 152;
          v14 += 152;
          v15 += 152;
          uint64_t v6 = v21;
          if (v21 + 152 == a2) {
            return result;
          }
        }
        uint64_t v26 = *(void *)(v15 + 24);
        *(void *)(v15 + 168) = *(void *)(v15 + 16);
        *(void *)(v15 + 176) = v26;
        uint64_t v27 = *(void *)(v15 + 56);
        *(void *)(v15 + 200) = *(void *)(v15 + 48);
        long long *v22 = *(_OWORD *)v15;
        *(void *)(v15 + 8) = 0;
        *(void *)(v15 + 16) = 0;
        *(void *)uint64_t v15 = 0;
        _OWORD *v23 = *(_OWORD *)(v15 + 32);
        *(void *)(v15 + 32) = 0;
        *(void *)(v15 + 40) = 0;
        *(void *)(v15 + 48) = 0;
        *(void *)(v15 + 208) = v27;
        *(_DWORD *)(v15 + 216) = *(_DWORD *)(v15 + 64);
        long long v28 = *(_OWORD *)(v15 + 72);
        *(void *)(v15 + 240) = *(void *)(v15 + 88);
        *int v24 = v28;
        *(void *)(v15 + 72) = 0;
        *(void *)(v15 + 80) = 0;
        long long v29 = *(_OWORD *)(v15 + 96);
        *(void *)(v15 + 264) = *(void *)(v15 + 112);
        *unint64_t v25 = v29;
        *(void *)(v15 + 88) = 0;
        *(void *)(v15 + 96) = 0;
        *(void *)(v15 + 104) = 0;
        *(void *)(v15 + 112) = 0;
        *(_DWORD *)(v15 + 272) = *(_DWORD *)(v15 + 120);
        long long v30 = *(_OWORD *)(v15 + 128);
        *(void *)(v15 + 296) = *(void *)(v15 + 144);
        *(_OWORD *)(v15 + 280) = v30;
        *(void *)(v15 + 128) = 0;
        *(void *)(v15 + 136) = 0;
        *(void *)(v15 + 144) = 0;
        uint64_t v31 = a3;
        ++v41;
        if (v15 != a3)
        {
          uint64_t v32 = v14;
          do
          {
            uint64_t v33 = a3 + v32;
            if (!sub_844504(a4, v21, a3 + v32 - 152))
            {
              uint64_t v31 = a3 + v32;
              goto LABEL_22;
            }
            uint64_t v34 = a3 + v32;
            if (*(char *)(a3 + v32 + 23) < 0) {
              operator delete(*(void **)v33);
            }
            *(_OWORD *)uint64_t v33 = *(_OWORD *)(a3 + v32 - 152);
            *(void *)(v33 + 16) = *(void *)(a3 + v32 - 136);
            *(unsigned char *)(v34 - 129) = 0;
            *(unsigned char *)(v33 - 152) = 0;
            *(void *)(v34 + 24) = *(void *)(v34 - 128);
            unint64_t v35 = (void **)(v34 + 32);
            if (*(char *)(v34 + 55) < 0) {
              operator delete(*v35);
            }
            uint64_t v36 = a3 + v32;
            *(_OWORD *)unint64_t v35 = *(_OWORD *)(v34 - 120);
            *(void *)(v34 + 48) = *(void *)(v34 - 104);
            *(unsigned char *)(v36 - 97) = 0;
            *(unsigned char *)(v34 - 120) = 0;
            *(void *)(v36 + 56) = *(void *)(a3 + v32 - 96);
            *(_DWORD *)(v36 + 64) = *(_DWORD *)(a3 + v32 - 88);
            int v37 = (void **)(a3 + v32 + 72);
            if (*(char *)(a3 + v32 + 95) < 0) {
              operator delete(*v37);
            }
            *(_OWORD *)int v37 = *(_OWORD *)(v36 - 80);
            *(void *)(a3 + v32 + 88) = *(void *)(v36 - 64);
            *(unsigned char *)(v36 - 57) = 0;
            *(unsigned char *)(v36 - 80) = 0;
            uint64_t v38 = v36 + 96;
            if (*(char *)(v36 + 119) < 0) {
              operator delete(*(void **)v38);
            }
            uint64_t v39 = a3 + v32;
            *(_OWORD *)uint64_t v38 = *(_OWORD *)(a3 + v32 - 56);
            *(void *)(v38 + 16) = *(void *)(a3 + v32 - 40);
            *(unsigned char *)(v39 - 33) = 0;
            *(unsigned char *)(v39 - 56) = 0;
            *(_DWORD *)(v39 + 120) = *(_DWORD *)(a3 + v32 - 32);
            long long v40 = (void **)(a3 + v32 + 128);
            if (*(char *)(a3 + v32 + 151) < 0) {
              operator delete(*v40);
            }
            *(_OWORD *)long long v40 = *(_OWORD *)(v39 - 24);
            *(void *)(a3 + v32 + 144) = *(void *)(v39 - 8);
            *(unsigned char *)(v39 - 1) = 0;
            *(unsigned char *)(v39 - 24) = 0;
            v32 -= 152;
          }
          while (v32);
          uint64_t v31 = a3;
        }
LABEL_22:
        __n128 result = sub_4C2034(v31, (long long *)v21);
        uint64_t v12 = v21 + 152;
        v14 += 152;
        uint64_t v15 = (uint64_t)v22;
        uint64_t v6 = v21;
      }
      while (v21 + 152 != a2);
    }
  }
  return result;
}

void sub_845E7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unint64_t a10)
{
  if (v10) {
    sub_840044(&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_845E9C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v40 = 0;
  if ((void *)a1 == a2)
  {
LABEL_14:
    while (a3 != a4)
    {
      long long v36 = *(_OWORD *)a3;
      *(void *)(a5 + 16) = *(void *)(a3 + 16);
      *(_OWORD *)a5 = v36;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)a3 = 0;
      *(void *)(a5 + 24) = *(void *)(a3 + 24);
      long long v37 = *(_OWORD *)(a3 + 32);
      *(void *)(a5 + 48) = *(void *)(a3 + 48);
      *(_OWORD *)(a5 + 32) = v37;
      *(void *)(a3 + 40) = 0;
      *(void *)(a3 + 48) = 0;
      *(void *)(a3 + 32) = 0;
      *(void *)(a5 + 56) = *(void *)(a3 + 56);
      *(_DWORD *)(a5 + 64) = *(_DWORD *)(a3 + 64);
      long long v38 = *(_OWORD *)(a3 + 72);
      *(void *)(a5 + 88) = *(void *)(a3 + 88);
      *(_OWORD *)(a5 + 72) = v38;
      *(void *)(a3 + 80) = 0;
      *(void *)(a3 + 88) = 0;
      *(void *)(a3 + 72) = 0;
      long long v39 = *(_OWORD *)(a3 + 96);
      *(void *)(a5 + 112) = *(void *)(a3 + 112);
      *(_OWORD *)(a5 + 96) = v39;
      *(void *)(a3 + 104) = 0;
      *(void *)(a3 + 112) = 0;
      *(void *)(a3 + 96) = 0;
      *(_DWORD *)(a5 + 120) = *(_DWORD *)(a3 + 120);
      __n128 result = *(__n128 *)(a3 + 128);
      *(void *)(a5 + 144) = *(void *)(a3 + 144);
      *(__n128 *)(a5 + 128) = result;
      *(void *)(a3 + 136) = 0;
      *(void *)(a3 + 144) = 0;
      *(void *)(a3 + 128) = 0;
      a3 += 152;
      a5 += 152;
    }
  }
  else
  {
    uint64_t v11 = a1;
    uint64_t v12 = 0;
    while (a3 != a4)
    {
      int v18 = sub_844504(a6, a3, v11);
      uint64_t v19 = a5 + v12;
      long long v20 = (__n128 *)(a5 + v12);
      uint64_t v21 = (_OWORD *)(a5 + v12 + 32);
      long long v22 = (_OWORD *)(a5 + v12 + 72);
      uint64_t v23 = (_OWORD *)(a5 + v12 + 96);
      if (v18)
      {
        long long v24 = *(_OWORD *)a3;
        *(void *)(v19 + 16) = *(void *)(a3 + 16);
        *(_OWORD *)uint64_t v19 = v24;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)a3 = 0;
        v20[1].n128_u64[1] = *(void *)(a3 + 24);
        long long v25 = *(_OWORD *)(a3 + 32);
        *(void *)(a5 + v12 + 48) = *(void *)(a3 + 48);
        *uint64_t v21 = v25;
        *(void *)(a3 + 40) = 0;
        *(void *)(a3 + 48) = 0;
        *(void *)(a3 + 32) = 0;
        v20[3].n128_u64[1] = *(void *)(a3 + 56);
        v20[4].n128_u32[0] = *(_DWORD *)(a3 + 64);
        long long v26 = *(_OWORD *)(a3 + 72);
        *(void *)(a5 + v12 + 88) = *(void *)(a3 + 88);
        _OWORD *v22 = v26;
        *(void *)(a3 + 80) = 0;
        *(void *)(a3 + 88) = 0;
        *(void *)(a3 + 72) = 0;
        long long v27 = *(_OWORD *)(a3 + 96);
        *(void *)(a5 + v12 + 112) = *(void *)(a3 + 112);
        _OWORD *v23 = v27;
        *(void *)(a3 + 104) = 0;
        *(void *)(a3 + 112) = 0;
        *(void *)(a3 + 96) = 0;
        v20[7].n128_u32[2] = *(_DWORD *)(a3 + 120);
        __n128 result = *(__n128 *)(a3 + 128);
        v20[9].n128_u64[0] = *(void *)(a3 + 144);
        v20[8] = result;
        *(void *)(a3 + 136) = 0;
        *(void *)(a3 + 144) = 0;
        *(void *)(a3 + 128) = 0;
        a3 += 152;
      }
      else
      {
        long long v13 = *(_OWORD *)v11;
        *(void *)(v19 + 16) = *(void *)(v11 + 16);
        *(_OWORD *)uint64_t v19 = v13;
        *(void *)(v11 + 8) = 0;
        *(void *)(v11 + 16) = 0;
        *(void *)uint64_t v11 = 0;
        v20[1].n128_u64[1] = *(void *)(v11 + 24);
        long long v14 = *(_OWORD *)(v11 + 32);
        *(void *)(a5 + v12 + 48) = *(void *)(v11 + 48);
        *uint64_t v21 = v14;
        *(void *)(v11 + 40) = 0;
        *(void *)(v11 + 48) = 0;
        *(void *)(v11 + 32) = 0;
        v20[3].n128_u64[1] = *(void *)(v11 + 56);
        v20[4].n128_u32[0] = *(_DWORD *)(v11 + 64);
        long long v15 = *(_OWORD *)(v11 + 72);
        *(void *)(a5 + v12 + 88) = *(void *)(v11 + 88);
        _OWORD *v22 = v15;
        *(void *)(v11 + 80) = 0;
        *(void *)(v11 + 88) = 0;
        *(void *)(v11 + 72) = 0;
        long long v16 = *(_OWORD *)(v11 + 96);
        *(void *)(a5 + v12 + 112) = *(void *)(v11 + 112);
        _OWORD *v23 = v16;
        *(void *)(v11 + 104) = 0;
        *(void *)(v11 + 112) = 0;
        *(void *)(v11 + 96) = 0;
        v20[7].n128_u32[2] = *(_DWORD *)(v11 + 120);
        __n128 result = *(__n128 *)(v11 + 128);
        v20[9].n128_u64[0] = *(void *)(v11 + 144);
        v20[8] = result;
        *(void *)(v11 + 136) = 0;
        *(void *)(v11 + 144) = 0;
        *(void *)(v11 + 128) = 0;
        v11 += 152;
      }
      ++v40;
      v12 += 152;
      if ((void *)v11 == a2)
      {
        a5 += v12;
        goto LABEL_14;
      }
    }
    if ((void *)v11 != a2)
    {
      uint64_t v28 = 0;
      do
      {
        long long v29 = (void *)(v11 + v28);
        uint64_t v30 = a5 + v12 + v28;
        long long v31 = *(_OWORD *)(v11 + v28);
        *(void *)(v30 + 16) = *(void *)(v11 + v28 + 16);
        *(_OWORD *)uint64_t v30 = v31;
        v29[1] = 0;
        v29[2] = 0;
        *long long v29 = 0;
        uint64_t v32 = a5 + v28 + v12;
        *(void *)(v32 + 24) = *(void *)(v11 + v28 + 24);
        long long v33 = *(_OWORD *)(v11 + v28 + 32);
        *(void *)(v32 + 48) = *(void *)(v11 + v28 + 48);
        *(_OWORD *)(v32 + 32) = v33;
        v29[5] = 0;
        v29[6] = 0;
        v29[4] = 0;
        *(void *)(v32 + 56) = *(void *)(v11 + v28 + 56);
        *(_DWORD *)(v32 + 64) = *(_DWORD *)(v11 + v28 + 64);
        long long v34 = *(_OWORD *)(v11 + v28 + 72);
        *(void *)(v32 + 88) = *(void *)(v11 + v28 + 88);
        *(_OWORD *)(v32 + 72) = v34;
        v29[10] = 0;
        v29[11] = 0;
        v29[9] = 0;
        long long v35 = *(_OWORD *)(v11 + v28 + 96);
        *(void *)(v32 + 112) = *(void *)(v11 + v28 + 112);
        *(_OWORD *)(v32 + 96) = v35;
        v29[13] = 0;
        v29[14] = 0;
        v29[12] = 0;
        *(_DWORD *)(v32 + 120) = *(_DWORD *)(v11 + v28 + 120);
        __n128 result = *(__n128 *)(v11 + v28 + 128);
        *(void *)(v30 + 144) = *(void *)(v11 + v28 + 144);
        *(__n128 *)(v30 + 128) = result;
        v29[17] = 0;
        v29[18] = 0;
        v29[16] = 0;
        v28 += 152;
      }
      while (v29 + 19 != a2);
    }
  }
  return result;
}

void sub_846204(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unint64_t a10)
{
  if (v10) {
    sub_840044(&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

void sub_846220(uint64_t a1, long long *a2, long long *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = a2;
  uint64_t v11 = a1;
  if (a5 > a6)
  {
    if (a2 != a3)
    {
      uint64_t v12 = 0;
      unint64_t v13 = 0;
      do
      {
        uint64_t v14 = a7 + v12;
        long long v15 = (void *)((char *)a2 + v12);
        long long v16 = *(long long *)((char *)a2 + v12);
        *(void *)(v14 + 16) = *(void *)((char *)a2 + v12 + 16);
        *(_OWORD *)uint64_t v14 = v16;
        v15[1] = 0;
        v15[2] = 0;
        *long long v15 = 0;
        *(void *)(v14 + 24) = *(void *)((char *)a2 + v12 + 24);
        long long v17 = *(long long *)((char *)a2 + v12 + 32);
        *(void *)(v14 + 48) = *(void *)((char *)a2 + v12 + 48);
        *(_OWORD *)(v14 + 32) = v17;
        v15[5] = 0;
        v15[6] = 0;
        uint64_t v18 = *(void *)((char *)a2 + v12 + 56);
        v15[4] = 0;
        *(void *)(v14 + 56) = v18;
        *(_DWORD *)(v14 + 64) = *(_DWORD *)((char *)a2 + v12 + 64);
        long long v19 = *(long long *)((char *)a2 + v12 + 72);
        *(void *)(v14 + 88) = *(void *)((char *)a2 + v12 + 88);
        *(_OWORD *)(v14 + 72) = v19;
        v15[10] = 0;
        v15[11] = 0;
        long long v20 = *(long long *)((char *)a2 + v12 + 96);
        uint64_t v21 = *(void *)((char *)a2 + v12 + 112);
        v15[9] = 0;
        *(void *)(v14 + 112) = v21;
        *(_OWORD *)(v14 + 96) = v20;
        v15[13] = 0;
        v15[14] = 0;
        LODWORD(v21) = *(_DWORD *)((char *)a2 + v12 + 120);
        v15[12] = 0;
        *(_DWORD *)(v14 + 120) = v21;
        long long v22 = *(long long *)((char *)a2 + v12 + 128);
        *(void *)(v14 + 144) = *(void *)((char *)a2 + v12 + 144);
        *(_OWORD *)(v14 + 128) = v22;
        v15[17] = 0;
        v15[18] = 0;
        v15[16] = 0;
        ++v13;
        v12 += 152;
      }
      while (v15 + 19 != (void *)a3);
      unint64_t v44 = v13;
      if (v12)
      {
        uint64_t v23 = a7 + v12;
        uint64_t v24 = (uint64_t)a3 - 152;
        while (v10 != (long long *)v11)
        {
          int v25 = sub_844504(a4, v23 - 152, (uint64_t)v10 - 152);
          if (v25) {
            long long v26 = (long long *)((char *)v10 - 152);
          }
          else {
            long long v26 = (long long *)(v23 - 152);
          }
          if (v25) {
            uint64_t v10 = (long long *)((char *)v10 - 152);
          }
          else {
            v23 -= 152;
          }
          sub_4C2034(v24, v26);
          v24 -= 152;
          if (v23 == a7) {
            goto LABEL_32;
          }
        }
        uint64_t v41 = 0;
        do
        {
          uint64_t v42 = v24 + v41;
          v41 -= 152;
          sub_4C2034(v42, (long long *)(v23 + v41));
        }
        while (v23 + v41 != a7);
      }
      goto LABEL_32;
    }
LABEL_26:
    unint64_t v44 = 0;
    goto LABEL_32;
  }
  if ((long long *)a1 == a2) {
    goto LABEL_26;
  }
  uint64_t v27 = 0;
  unint64_t v28 = 0;
  do
  {
    long long v29 = (void *)(a1 + v27);
    uint64_t v30 = a7 + v27;
    long long v31 = *(_OWORD *)(a1 + v27);
    *(void *)(v30 + 16) = *(void *)(a1 + v27 + 16);
    *(_OWORD *)uint64_t v30 = v31;
    v29[1] = 0;
    v29[2] = 0;
    *long long v29 = 0;
    *(void *)(v30 + 24) = *(void *)(a1 + v27 + 24);
    long long v32 = *(_OWORD *)(a1 + v27 + 32);
    *(void *)(v30 + 48) = *(void *)(a1 + v27 + 48);
    *(_OWORD *)(v30 + 32) = v32;
    v29[5] = 0;
    v29[6] = 0;
    uint64_t v33 = *(void *)(a1 + v27 + 56);
    v29[4] = 0;
    *(void *)(v30 + 56) = v33;
    *(_DWORD *)(v30 + 64) = *(_DWORD *)(a1 + v27 + 64);
    long long v34 = *(_OWORD *)(a1 + v27 + 72);
    *(void *)(v30 + 88) = *(void *)(a1 + v27 + 88);
    *(_OWORD *)(v30 + 72) = v34;
    v29[10] = 0;
    v29[11] = 0;
    long long v35 = *(_OWORD *)(a1 + v27 + 96);
    uint64_t v36 = *(void *)(a1 + v27 + 112);
    v29[9] = 0;
    *(void *)(v30 + 112) = v36;
    *(_OWORD *)(v30 + 96) = v35;
    v29[13] = 0;
    v29[14] = 0;
    LODWORD(v36) = *(_DWORD *)(a1 + v27 + 120);
    v29[12] = 0;
    *(_DWORD *)(v30 + 120) = v36;
    long long v37 = *(_OWORD *)(a1 + v27 + 128);
    *(void *)(v30 + 144) = *(void *)(a1 + v27 + 144);
    *(_OWORD *)(v30 + 128) = v37;
    v29[17] = 0;
    v29[18] = 0;
    v29[16] = 0;
    ++v28;
    v27 += 152;
  }
  while (v29 + 19 != (void *)a2);
  unint64_t v44 = v28;
  if (v27)
  {
    long long v38 = (long long *)(a7 + v27);
    uint64_t v39 = a7 + v27 - 152;
    uint64_t v40 = (long long *)a7;
    while (v10 != a3)
    {
      if (sub_844504(a4, (uint64_t)v10, (uint64_t)v40))
      {
        sub_4C2034(v11, v10);
        uint64_t v10 = (long long *)((char *)v10 + 152);
        v11 += 152;
        if (v38 == v40) {
          goto LABEL_32;
        }
      }
      else
      {
        sub_4C2034(v11, v40);
        uint64_t v40 = (long long *)((char *)v40 + 152);
        v11 += 152;
        if (v38 == v40) {
          goto LABEL_32;
        }
      }
    }
    uint64_t v43 = 0;
    do
    {
      sub_4C2034(v11 + v43, (long long *)((char *)v40 + v43));
      v43 += 152;
    }
    while ((long long *)v39 != (long long *)((char *)v40 + v43 - 152));
  }
LABEL_32:
  if (a7) {
    sub_840044(&v44, a7);
  }
}

void sub_846528(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unint64_t a10)
{
  if (v10) {
    sub_840044(&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_846548(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = *(uint64_t **)a1;
  uint64_t v6 = **(void **)a1;
  uint64_t v7 = *a2;
  unint64_t v8 = HIDWORD(*a2);
  unint64_t v9 = *a2 & 0xFFFFFFFFFFFFLL;
  uint64_t v10 = sub_2D5D58(v6, v9);
  if (*(unsigned char *)(v6 + 7772))
  {
    uint64_t v11 = sub_2DB8E0(v6 + 3896, v7, 0);
    uint64_t v12 = &v11[-*(int *)v11];
    if (*(unsigned __int16 *)v12 < 5u)
    {
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v13 = *((unsigned __int16 *)v12 + 2);
      if (v13) {
        v13 += (uint64_t)&v11[*(unsigned int *)&v11[v13]];
      }
    }
    uint64_t v14 = v13 + 4 * (unsigned __int16)v8 + 4 + *(unsigned int *)(v13 + 4 * (unsigned __int16)v8 + 4);
  }
  else
  {
    uint64_t v14 = 0;
  }
  *(void *)&long long v100 = v10;
  *((void *)&v100 + 1) = v14;
  *(void *)&long long v101 = sub_2E5C38(v6, v9, 1);
  *((void *)&v101 + 1) = v15;
  LODWORD(v102) = v7;
  WORD2(v102) = v8;
  BYTE6(v102) = (v7 & 0xFF000000000000) != 0;
  uint64_t v16 = *v5;
  uint64_t v17 = *a3;
  unint64_t v18 = HIDWORD(*a3);
  unint64_t v19 = *a3 & 0xFFFFFFFFFFFFLL;
  uint64_t v20 = sub_2D5D58(*v5, v19);
  if (*(unsigned char *)(v16 + 7772))
  {
    uint64_t v21 = sub_2DB8E0(v16 + 3896, v17, 0);
    long long v22 = &v21[-*(int *)v21];
    if (*(unsigned __int16 *)v22 < 5u)
    {
      uint64_t v23 = 0;
    }
    else
    {
      uint64_t v23 = *((unsigned __int16 *)v22 + 2);
      if (v23) {
        v23 += (uint64_t)&v21[*(unsigned int *)&v21[v23]];
      }
    }
    uint64_t v24 = v23 + 4 * (unsigned __int16)v18 + 4 + *(unsigned int *)(v23 + 4 * (unsigned __int16)v18 + 4);
  }
  else
  {
    uint64_t v24 = 0;
  }
  v98[0] = v20;
  v98[1] = v24;
  v98[2] = sub_2E5C38(v16, v19, 1);
  v98[3] = v25;
  LODWORD(v99) = v17;
  WORD2(v99) = v18;
  BYTE6(v99) = (v17 & 0xFF000000000000) != 0;
  uint64_t v95 = 0;
  uint64_t v96 = 0;
  uint64_t v97 = 0;
  sub_2E44A4(*v5, (uint64_t)&v100, &v95);
  uint64_t v26 = v95;
  uint64_t v27 = v96;
  if (v95 != v96)
  {
    unint64_t v28 = &v75;
    while (1)
    {
      long long v29 = (unsigned __int16 *)(v100 - *(int *)v100);
      if (*v29 < 0x2Fu) {
        goto LABEL_19;
      }
      uint64_t v30 = v29[23];
      if (!v30
        || *(unsigned char *)(v100 + v30) != 14
        || __PAIR64__(*(unsigned __int16 *)(v26 + 36), *(_DWORD *)(v26 + 32)) == __PAIR64__(WORD2(v99), v99)
        && (HIWORD(v99) & 1) != (*(unsigned char *)(v26 + 38) == 0))
      {
        goto LABEL_19;
      }
      uint64_t v31 = *v5;
      __p.__r_.__value_.__r.__words[0] = v102;
      long long __str = v100;
      long long __str_16 = v101;
      __p.__r_.__value_.__s.__data_[6] = BYTE6(v102) ^ 1;
      int v32 = sub_2E41C4(v31, v26, (uint64_t)&__str);
      if (v32 == sub_2E41C4(*v5, v26, (uint64_t)v98)) {
        goto LABEL_19;
      }
      v69[0] = *(void **)(v26 + 32);
      uint64_t v33 = *(void *)(a1 + 8);
      v72[0] = 0;
      v72[1] = 0;
      uint64_t v73 = 0;
      sub_83A464((uint64_t)v5, (unsigned int *)v69, v33, (uint64_t)v72, (uint64_t)&__str);
      if (SHIBYTE(v73) < 0) {
        operator delete(v72[0]);
      }
      uint64_t v34 = *(void *)(a1 + 16);
      long long v35 = (unsigned __int16 *)(*((void *)&v100 + 1) - (int)**((_DWORD **)&v100 + 1));
      unsigned int v36 = *v35;
      if (BYTE6(v102))
      {
        if (v36 >= 5)
        {
          unsigned int v37 = v35[2];
          if (v37) {
            goto LABEL_34;
          }
        }
      }
      else if (v36 >= 9)
      {
        unsigned int v37 = v35[4];
        if (v37)
        {
LABEL_34:
          __int16 v38 = *(_WORD *)(*((void *)&v100 + 1) + v37);
          int v39 = *(unsigned __int8 *)(v34 + 38);
          uint64_t v40 = *(int **)(v34 + 8);
          uint64_t v41 = (unsigned __int16 *)((char *)v40 - *v40);
          unsigned int v42 = *v41;
          if (v39) {
            goto LABEL_39;
          }
          goto LABEL_35;
        }
      }
      __int16 v38 = 0;
      int v44 = *(unsigned __int8 *)(v34 + 38);
      uint64_t v40 = *(int **)(v34 + 8);
      uint64_t v41 = (unsigned __int16 *)((char *)v40 - *v40);
      unsigned int v42 = *v41;
      if (v44)
      {
LABEL_39:
        if (v42 >= 9)
        {
          unsigned int v43 = v41[4];
          if (v43) {
            goto LABEL_41;
          }
        }
        goto LABEL_42;
      }
LABEL_35:
      if (v42 >= 5)
      {
        unsigned int v43 = v41[2];
        if (v43)
        {
LABEL_41:
          int v45 = *(unsigned __int16 *)((char *)v40 + v43);
          goto LABEL_43;
        }
      }
LABEL_42:
      int v45 = 0;
LABEL_43:
      unsigned __int16 v46 = v38 + 18000;
      unsigned __int16 v47 = v38 - 18000;
      if ((unsigned __int16)(v46 >> 5) < 0x465u) {
        unsigned __int16 v47 = v46;
      }
      int v48 = v45 - v47;
      if (v48 > 18000) {
        v48 -= 36000;
      }
      if (v48 < -17999) {
        v48 += 36000;
      }
      if (fabs((double)v48 / 100.0) > *((double *)v5 + 11))
      {
        int v49 = sub_2E41C4(*v5, v26, *(void *)(a1 + 24));
        if (v49 != sub_2E41C4(*v5, v26, *(void *)(a1 + 16)) && sub_6F2FD8((uint64_t)&__str))
        {
          uint64_t v50 = *(void *)(v26 + 32);
          uint64_t v70 = 0;
          uint64_t v71 = v50;
          uint64_t v51 = *(void *)(a1 + 8);
          v69[0] = 0;
          v69[1] = 0;
          sub_83A464((uint64_t)v5, (unsigned int *)&v71, v51, (uint64_t)v69, (uint64_t)v72);
          uint64_t v68 = v28;
          uint64_t v52 = *(void *)(a1 + 32);
          if (*(char *)(v52 + 23) < 0) {
            operator delete(*(void **)v52);
          }
          long long v53 = *(_OWORD *)v72;
          *(void *)(v52 + 16) = v73;
          *(_OWORD *)uint64_t v52 = v53;
          HIBYTE(v73) = 0;
          LOBYTE(v72[0]) = 0;
          *(void *)(v52 + 24) = v74;
          uint64_t v54 = (void **)(v52 + 32);
          if (*(char *)(v52 + 55) < 0) {
            operator delete(*v54);
          }
          long long v55 = *(_OWORD *)v68;
          *(void *)(v52 + 48) = v68[2];
          *(_OWORD *)uint64_t v54 = v55;
          char v76 = 0;
          LOBYTE(v75) = 0;
          *(void *)(v52 + 56) = v77;
          *(_DWORD *)(v52 + 64) = v78;
          uint64_t v56 = (void **)(v52 + 72);
          if (*(char *)(v52 + 95) < 0) {
            operator delete(*v56);
          }
          long long v57 = v79;
          *(void *)(v52 + 88) = v80;
          *(_OWORD *)uint64_t v56 = v57;
          HIBYTE(v80) = 0;
          LOBYTE(v79) = 0;
          unsigned int v58 = (void **)(v52 + 96);
          if (*(char *)(v52 + 119) < 0) {
            operator delete(*v58);
          }
          long long v59 = v81;
          *(void *)(v52 + 112) = v82;
          *(_OWORD *)unsigned int v58 = v59;
          HIBYTE(v82) = 0;
          LOBYTE(v81) = 0;
          *(_DWORD *)(v52 + 120) = v83;
          unint64_t v60 = (void **)(v52 + 128);
          if (*(char *)(v52 + 151) < 0)
          {
            operator delete(*v60);
            int v64 = SHIBYTE(v82);
            uint64_t v65 = v85;
            *(_OWORD *)unint64_t v60 = v84;
            *(void *)(v52 + 144) = v65;
            HIBYTE(v85) = 0;
            LOBYTE(v84) = 0;
            if (v64 < 0)
            {
              operator delete((void *)v81);
              unint64_t v28 = v68;
              if ((SHIBYTE(v80) & 0x80000000) == 0) {
                goto LABEL_77;
              }
            }
            else
            {
              unint64_t v28 = v68;
              if ((SHIBYTE(v80) & 0x80000000) == 0) {
                goto LABEL_77;
              }
            }
LABEL_62:
            operator delete((void *)v79);
            if (v76 < 0) {
              goto LABEL_63;
            }
LABEL_78:
            if ((SHIBYTE(v73) & 0x80000000) == 0) {
              goto LABEL_79;
            }
LABEL_64:
            operator delete(v72[0]);
            if (SHIBYTE(v70) < 0) {
              goto LABEL_65;
            }
          }
          else
          {
            long long v61 = v84;
            *(void *)(v52 + 144) = v85;
            *(_OWORD *)unint64_t v60 = v61;
            HIBYTE(v85) = 0;
            LOBYTE(v84) = 0;
            unint64_t v28 = v68;
            if (SHIBYTE(v80) < 0) {
              goto LABEL_62;
            }
LABEL_77:
            if ((v76 & 0x80000000) == 0) {
              goto LABEL_78;
            }
LABEL_63:
            operator delete(v75);
            if (SHIBYTE(v73) < 0) {
              goto LABEL_64;
            }
LABEL_79:
            if (SHIBYTE(v70) < 0)
            {
LABEL_65:
              operator delete(v69[0]);
              int v62 = 0;
              if ((SHIBYTE(v94.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                goto LABEL_71;
              }
              goto LABEL_81;
            }
          }
          int v62 = 0;
          if ((SHIBYTE(v94.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_71;
          }
          goto LABEL_81;
        }
      }
      if (!sub_6F2FD8(*(void *)(a1 + 40)) && sub_6F2FD8((uint64_t)&__str))
      {
        uint64_t v63 = *(void *)(a1 + 40);
        std::string::operator=((std::string *)v63, (const std::string *)&__str);
        *(void *)(v63 + 24) = *((void *)&__str_16 + 1);
        std::string::operator=((std::string *)(v63 + 32), &__p);
        *(void *)(v63 + 56) = v89;
        *(_DWORD *)(v63 + 64) = v90;
        std::string::operator=((std::string *)(v63 + 72), &v91);
        std::string::operator=((std::string *)(v63 + 96), &v92);
        *(_DWORD *)(v63 + 120) = v93;
        std::string::operator=((std::string *)(v63 + 128), &v94);
      }
      int v62 = 1;
      if ((SHIBYTE(v94.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_71:
        if ((SHIBYTE(v92.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_72;
        }
        goto LABEL_82;
      }
LABEL_81:
      operator delete(v94.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v92.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_72:
        if ((SHIBYTE(v91.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_73;
        }
        goto LABEL_83;
      }
LABEL_82:
      operator delete(v92.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v91.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_73:
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          goto LABEL_17;
        }
        goto LABEL_84;
      }
LABEL_83:
      operator delete(v91.__r_.__value_.__l.__data_);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
LABEL_17:
        operator delete(__p.__r_.__value_.__l.__data_);
        if ((SBYTE7(__str_16) & 0x80000000) == 0) {
          goto LABEL_18;
        }
        goto LABEL_85;
      }
LABEL_84:
      if ((SBYTE7(__str_16) & 0x80000000) == 0)
      {
LABEL_18:
        if (!v62) {
          goto LABEL_94;
        }
        goto LABEL_19;
      }
LABEL_85:
      operator delete((void *)__str);
      if (!v62)
      {
LABEL_94:
        uint64_t v66 = 1;
        uint64_t v26 = v95;
        if (v95) {
          goto LABEL_90;
        }
        return v66;
      }
LABEL_19:
      v26 += 40;
      if (v26 == v27)
      {
        uint64_t v66 = 0;
        uint64_t v26 = v95;
        if (!v95) {
          return v66;
        }
        goto LABEL_90;
      }
    }
  }
  uint64_t v66 = 0;
  if (v95)
  {
LABEL_90:
    uint64_t v96 = v26;
    operator delete((void *)v26);
  }
  return v66;
}

void sub_846CBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  sub_4A50F4((uint64_t)&a43);
  int v45 = *(void **)(v43 - 200);
  if (v45)
  {
    *(void *)(v43 - 192) = v45;
    operator delete(v45);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t **sub_846D3C()
{
  byte_25C8627 = 1;
  word_25C8610 = 65;
  byte_25C863F = 1;
  word_25C8628 = 65;
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_25C86D0 = 0u;
  *(_OWORD *)&qword_25C86E0 = 0u;
  dword_25C86F0 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_25C86D0, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_25C86D0, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_25C86D0, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_25C86D0, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  byte_25C8657 = 8;
  strcpy((char *)&qword_25C8640, "any_mode");
  byte_25C866F = 7;
  strcpy((char *)&dword_25C8658, "cycling");
  byte_25C8687 = 7;
  strcpy((char *)&dword_25C8670, "driving");
  byte_25C869F = 7;
  strcpy((char *)&dword_25C8688, "walking");
  qword_25C86A8 = 0;
  qword_25C86B0 = 0;
  qword_25C86A0 = 0;
  uint64_t v0 = operator new(9uLL);
  *(void *)uint64_t v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_25C86A0 = (uint64_t)v0;
  qword_25C86A8 = (uint64_t)(v0 + 9);
  qword_25C86B0 = (uint64_t)(v0 + 9);
  qword_25C86B8 = 0;
  qword_25C86C0 = 0;
  unk_25C86C8 = 0;
  uint64_t v1 = (char *)operator new(9uLL);
  qword_25C86C0 = (uint64_t)(v1 + 9);
  unk_25C86C8 = v1 + 9;
  *(void *)uint64_t v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_25C86B8 = (uint64_t)v1;
  LODWORD(v3[0]) = 84148992;
  WORD2(v3[0]) = 1798;
  BYTE6(v3[0]) = 8;
  xmmword_25C8708 = 0u;
  dword_25C8718 = 1065353216;
  xmmword_25C86F8 = 0u;
  sub_83D048((uint64_t)&xmmword_25C86F8, (unsigned __int8 *)v3, v3);
  sub_83D048((uint64_t)&xmmword_25C86F8, (unsigned __int8 *)v3 + 1, (unsigned char *)v3 + 1);
  sub_83D048((uint64_t)&xmmword_25C86F8, (unsigned __int8 *)v3 + 2, (unsigned char *)v3 + 2);
  sub_83D048((uint64_t)&xmmword_25C86F8, (unsigned __int8 *)v3 + 3, (unsigned char *)v3 + 3);
  sub_83D048((uint64_t)&xmmword_25C86F8, (unsigned __int8 *)v3 + 4, (unsigned char *)v3 + 4);
  sub_83D048((uint64_t)&xmmword_25C86F8, (unsigned __int8 *)v3 + 5, (unsigned char *)v3 + 5);
  sub_83D048((uint64_t)&xmmword_25C86F8, (unsigned __int8 *)v3 + 6, (unsigned char *)v3 + 6);
  LOBYTE(v3[0]) = 1;
  xmmword_25C8720 = 0u;
  *(_OWORD *)&qword_25C8730 = 0u;
  dword_25C8740 = 1065353216;
  return sub_83D048((uint64_t)&xmmword_25C8720, (unsigned __int8 *)v3, v3);
}

void sub_8470EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  unsigned int v37 = (void *)qword_25C8730;
  if (qword_25C8730)
  {
    do
    {
      __int16 v38 = (void *)*v37;
      operator delete(v37);
      unsigned int v37 = v38;
    }
    while (v38);
  }
  int v39 = (void *)xmmword_25C8720;
  *(void *)&xmmword_25C8720 = 0;
  if (!v39) {
    _Unwind_Resume(exception_object);
  }
  operator delete(v39);
  _Unwind_Resume(exception_object);
}

uint64_t sub_8471FC(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6)
{
  char v13 = (void *)sub_7E4E40(a1, (uint64_t)a2, a3, a4, a5, a6);
  void *v13 = off_243A778;
  uint64_t v185 = (uint64_t)(v13 + 275);
  uint64_t v200 = a4;
  uint64_t v202 = a5;
  sub_88F780((std::string::size_type)(v13 + 275), (uint64_t)a2, a3, a4, a5, a6);
  *(void *)(a1 + 5144) = 0x7FFFFFFFFFFFFFFFLL;
  int v14 = (char *)(a1 + 5184);
  *(void *)(a1 + 5152) = 0;
  unint64_t v203 = (char **)(a1 + 5152);
  *(void *)(a1 + 5168) = 0;
  *(void *)(a1 + 5160) = 0;
  *(void *)(a1 + 5176) = 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(a1 + 5184) = 0;
  *(unsigned char *)(a1 + 5186) = 0;
  *(void *)(a1 + 5192) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 5200) = 0;
  *(void *)(a1 + 5216) = 0;
  *(void *)(a1 + 5208) = 0;
  *(unsigned char *)(a1 + 5224) = 1;
  uint64_t v198 = (_OWORD *)(a1 + 5224);
  *(_DWORD *)(a1 + 5228) = 0;
  *(void *)(a1 + 5232) = -1;
  *(void *)(a1 + 5240) = -1;
  *(_OWORD *)(a1 + 5256) = 0u;
  *(void *)(a1 + 5248) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 5304) = 0;
  *(_OWORD *)(a1 + 5288) = 0u;
  uint64_t v201 = (uint64_t **)(a1 + 5200);
  *(_OWORD *)(a1 + 5272) = 0u;
  *(void *)(a1 + 5312) = 0xBFF0000000000000;
  *(unsigned char *)(a1 + 5320) = 0;
  *(void *)(a1 + 5328) = 0;
  *(void *)(a1 + 5336) = 0;
  *(void *)(a1 + 5344) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 5352);
  *(void *)(a1 + 5512) = -1;
  uint64_t v194 = (uint64_t *)(a1 + 5344);
  *(void *)(a1 + 5504) = -1;
  *(void *)(a1 + 5520) = 0;
  *(unsigned char *)(a1 + 5528) = 0;
  *(void *)(a1 + 5536) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 5544);
  *(void *)(a1 + 5704) = -1;
  *(void *)(a1 + 5696) = -1;
  *(void *)(a1 + 5712) = 0;
  *(unsigned char *)(a1 + 5720) = 0;
  *(void *)(a1 + 5728) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 5736);
  *(void *)(a1 + 5896) = -1;
  *(void *)(a1 + 5888) = -1;
  *(void *)(a1 + 5904) = 0;
  *(unsigned char *)(a1 + 5912) = 0;
  *(void *)(a1 + 5920) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 5928);
  *(void *)(a1 + 6088) = -1;
  *(void *)(a1 + 6080) = -1;
  *(void *)(a1 + 6096) = 0;
  *(unsigned char *)(a1 + 6104) = 0;
  *(void *)(a1 + 6112) = 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v188 = (void **)(a1 + 6120);
  sub_6F30A4(a1 + 6120);
  *(void *)(a1 + 6280) = -1;
  unint64_t v199 = (uint64_t *)(a1 + 6112);
  *(void *)(a1 + 6272) = -1;
  *(void *)(a1 + 6288) = 0;
  *(unsigned char *)(a1 + 6296) = 0;
  *(void *)(a1 + 6304) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 6312);
  *(void *)(a1 + 6472) = -1;
  unint64_t v191 = (uint64_t *)(a1 + 6304);
  *(void *)(a1 + 6464) = -1;
  *(void *)(a1 + 6480) = 0;
  *(unsigned char *)(a1 + 6488) = 0;
  *(void *)(a1 + 6496) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 6504);
  *(void *)(a1 + 6664) = -1;
  *(void *)(a1 + 6656) = -1;
  *(void *)(a1 + 6672) = 0;
  *(unsigned char *)(a1 + 6680) = 0;
  *(void *)(a1 + 6688) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 6696);
  *(void *)(a1 + 6856) = -1;
  *(void *)(a1 + 6848) = -1;
  *(void *)(a1 + 6864) = 0;
  *(unsigned char *)(a1 + 6872) = 0;
  *(void *)(a1 + 6880) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 6888);
  *(void *)(a1 + 7048) = -1;
  char v193 = (uint64_t *)(a1 + 6880);
  *(void *)(a1 + 7040) = -1;
  *(void *)(a1 + 7056) = 0;
  *(unsigned char *)(a1 + 7064) = 0;
  *(void *)(a1 + 7072) = 0x7FFFFFFFFFFFFFFFLL;
  int v192 = (void **)(a1 + 7080);
  sub_6F30A4(a1 + 7080);
  unint64_t v196 = (void *)(a1 + 7072);
  *(void *)(a1 + 7240) = -1;
  *(void *)(a1 + 7232) = -1;
  *(_OWORD *)(a1 + 7248) = xmmword_20E8160;
  uint64_t v186 = (void **)(a1 + 7264);
  sub_6F30A4(a1 + 7264);
  unint64_t v15 = a5;
  *(void *)(a1 + 7424) = -1;
  *(void *)(a1 + 7416) = -1;
  uint64_t v195 = (uint64_t *)(a1 + 7440);
  *(_OWORD *)(a1 + 7432) = 0u;
  *(_OWORD *)(a1 + 7448) = 0u;
  uint64_t v190 = a1 + 7464;
  sub_68206C(a1 + 7464);
  *(void *)(a1 + 7824) = 0;
  *(void *)(a1 + 7816) = 0;
  *(void *)(a1 + 7840) = 0;
  *(void *)(a1 + 7832) = 0;
  *(_DWORD *)(a1 + 7800) = 0;
  *(_DWORD *)(a1 + 7803) = 0;
  *(void *)(a1 + 7808) = off_243A000;
  *(_DWORD *)(a1 + 7848) = 0;
  *(unsigned char *)(a1 + 7852) = 1;
  *(unsigned char *)(a1 + 7856) = 0;
  int64x2_t v16 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  *(int64x2_t *)(a1 + 7864) = v16;
  *(int64x2_t *)(a1 + 7880) = v16;
  *(void *)(a1 + 7896) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 7904) = 0;
  *(_DWORD *)(a1 + 7912) = 0;
  *(_OWORD *)(a1 + 7916) = xmmword_20E2060;
  *(_DWORD *)(a1 + 7932) = -1;
  *(void *)(a1 + 7936) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 7944) = sub_4A5E10((void *)(a4 + 1064), a5) + 1832;
  *(void *)(a1 + 7952) = sub_4A5E10((void *)(a4 + 1064), a5) + 336;
  *(void *)(a1 + 7960) = sub_4A5E10((void *)(a4 + 1064), a5) + 360;
  *(void *)(a1 + 7968) = a4 + 10176;
  *(void *)(a1 + 7976) = sub_4A5E10((void *)(a4 + 1064), a5) + 1784;
  *(unsigned char *)(a1 + 7984) = 0;
  *(_DWORD *)(a1 + 7988) = a6 + 1;
  uint64_t v17 = *(void *)(a4 + 1064);
  uint64_t v18 = v17 + 2400 * v15;
  *(_DWORD *)(a1 + 7916) = 1000 * *(_DWORD *)v18;
  *(void *)(a1 + 5144) = *(void *)(v18 + 864);
  unsigned int v21 = *(_DWORD *)(v18 + 160);
  uint64_t v20 = (_DWORD *)(v18 + 160);
  unsigned int v19 = v21;
  char v22 = 1;
  char v23 = v21 - 25;
  if (v21 - 25 <= 0x3F && ((1 << v23) & 0x9000000000000001) != 0)
  {
    uint64_t v24 = (uint64_t *)(a1 + 5200);
  }
  else
  {
    uint64_t v24 = (uint64_t *)(a1 + 5200);
    if (v19 != 17) {
      char v22 = 0;
    }
  }
  *int v14 = v22;
  BOOL v26 = v19 == 85 || v19 == 88;
  *(unsigned char *)(a1 + 5185) = v26;
  if (v19 - 82 >= 3)
  {
    if (v19 > 0x27) {
      LOBYTE(v27) = 0;
    }
    else {
      unint64_t v27 = (0x8600050000uLL >> v19) & 1;
    }
  }
  else
  {
    LOBYTE(v27) = 1;
  }
  char v184 = (void *)(a1 + 7864);
  *(unsigned char *)(a1 + 5186) = v27;
  uint64_t v28 = v17 + 2400 * v202;
  *(_DWORD *)(a1 + 5188) = *(_DWORD *)(v28 + 1860);
  long long v29 = (uint64_t *)(v28 + 1872);
  if (v24 == v29)
  {
    long long v32 = *(_OWORD *)(v17 + 2400 * v202 + 1912);
    _OWORD *v198 = *(_OWORD *)(v17 + 2400 * v202 + 1896);
    *(_OWORD *)(a1 + 5240) = v32;
  }
  else
  {
    sub_5A09C0(v24, *v29, v29[1], 0xD37A6F4DE9BD37A7 * ((v29[1] - *v29) >> 3));
    uint64_t v30 = v17 + 2400 * v202;
    long long v31 = *(_OWORD *)(v30 + 1912);
    _OWORD *v198 = *(_OWORD *)(v30 + 1896);
    *(_OWORD *)(a1 + 5240) = v31;
    sub_5A0D34((uint64_t *)(a1 + 5256), *(void *)(v30 + 1928), *(void *)(v30 + 1936), 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*(void *)(v30 + 1936) - *(void *)(v30 + 1928)) >> 4));
  }
  uint64_t v33 = v17 + 2400 * v202;
  long long v34 = *(_OWORD *)(v33 + 1952);
  long long v35 = *(_OWORD *)(v33 + 1968);
  *(_OWORD *)(a1 + 5305) = *(_OWORD *)(v33 + 1977);
  *(_OWORD *)(a1 + 5296) = v35;
  *(_OWORD *)(a1 + 5280) = v34;
  *(_OWORD *)(a1 + 5328) = *(_OWORD *)(v33 + 2000);
  unsigned int v36 = (uint64_t *)(v33 + 1808);
  if (v195 != (uint64_t *)(v33 + 1808)) {
    sub_59F08C(v195, *v36, *(void *)(v33 + 1816), 0xCF3CF3CF3CF3CF3DLL * ((*(void *)(v33 + 1816) - *v36) >> 4));
  }
  uint64_t v187 = v17 + 2400 * v202;
  *(unsigned char *)(a1 + 7803) = *(unsigned char *)(v187 + 1856);
  *(unsigned char *)(a1 + 7804) = sub_63A4A4((uint64_t)v198);
  *(unsigned char *)(a1 + 7806) = sub_62CDBC(a2, *(_DWORD *)(a1 + 5188));
  std::string::operator=((std::string *)(a1 + 7816), (const std::string *)(v187 + 2048));
  int v189 = v36;
  uint64_t v37 = *(void *)(v187 + 2072);
  *(void *)(a1 + 7845) = *(void *)(v187 + 2077);
  *(void *)(a1 + 7840) = v37;
  uint64_t v197 = v17;
  *(unsigned char *)(a1 + 7984) = *(unsigned char *)(v187 + 325);
  BOOL v40 = (*v20 & 0xFFFFFFFE) == 6 || (*v20 - 41) < 0x13 || *(unsigned char *)(v187 + 2226) != 0;
  *(unsigned char *)(a1 + 7805) = v40;
  uint64_t v41 = *(void *)(v187 + 688);
  uint64_t v42 = *(void *)(v187 + 696);
  if (v41 != v42)
  {
    uint64_t v43 = *(char **)(a1 + 5160);
    do
    {
      unint64_t v45 = *(void *)(a1 + 5168);
      if ((unint64_t)v43 < v45)
      {
        *(void *)uint64_t v43 = *(void *)(v41 + 152);
        uint64_t v44 = (uint64_t)(v43 + 8);
      }
      else
      {
        unsigned __int16 v46 = *v203;
        uint64_t v47 = v43 - *v203;
        uint64_t v48 = v47 >> 3;
        unint64_t v49 = (v47 >> 3) + 1;
        if (v49 >> 61) {
          sub_2E00();
        }
        uint64_t v50 = v45 - (void)v46;
        if (v50 >> 2 > v49) {
          unint64_t v49 = v50 >> 2;
        }
        if ((unint64_t)v50 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v51 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v51 = v49;
        }
        if (v51)
        {
          if (v51 >> 61) {
            sub_188D718();
          }
          uint64_t v52 = operator new(8 * v51);
          long long v53 = &v52[8 * v48];
          void *v53 = *(void *)(v41 + 152);
          uint64_t v44 = (uint64_t)(v53 + 1);
          if (v43 != v46)
          {
LABEL_45:
            unint64_t v54 = v43 - 8 - v46;
            if (v54 < 0x168)
            {
              long long v55 = v43;
              goto LABEL_47;
            }
            if (&v52[v47 - 8 - (v54 & 0xFFFFFFFFFFFFFFF8)] > &v52[v47 - 8])
            {
              long long v55 = v43;
              goto LABEL_47;
            }
            if (&v43[-(v54 & 0xFFFFFFFFFFFFFFF8) - 8] > v43 - 8)
            {
              long long v55 = v43;
              goto LABEL_47;
            }
            if ((unint64_t)(v43 - v52 - v47) < 0x20)
            {
              long long v55 = v43;
              goto LABEL_47;
            }
            uint64_t v57 = (v54 >> 3) + 1;
            uint64_t v58 = 8 * (v57 & 0x3FFFFFFFFFFFFFFCLL);
            long long v55 = &v43[-v58];
            long long v53 = (void *)((char *)v53 - v58);
            long long v59 = &v52[8 * v48 - 16];
            unint64_t v60 = v43 - 16;
            uint64_t v61 = v57 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v62 = *(_OWORD *)v60;
              *(v59 - 1) = *((_OWORD *)v60 - 1);
              *long long v59 = v62;
              v59 -= 2;
              v60 -= 32;
              v61 -= 4;
            }
            while (v61);
            if (v57 != (v57 & 0x3FFFFFFFFFFFFFFCLL))
            {
              do
              {
LABEL_47:
                uint64_t v56 = *((void *)v55 - 1);
                v55 -= 8;
                *--long long v53 = v56;
              }
              while (v55 != v46);
            }
            uint64_t v43 = *v203;
            *(void *)(a1 + 5152) = v53;
            *(void *)(a1 + 5160) = v44;
            *(void *)(a1 + 5168) = &v52[8 * v51];
            if (!v43) {
              goto LABEL_34;
            }
LABEL_52:
            operator delete(v43);
            goto LABEL_34;
          }
        }
        else
        {
          uint64_t v52 = 0;
          long long v53 = (void *)(8 * v48);
          *(void *)(8 * v48) = *(void *)(v41 + 152);
          uint64_t v44 = 8 * v48 + 8;
          if (v43 != v46) {
            goto LABEL_45;
          }
        }
        *(void *)(a1 + 5152) = v53;
        *(void *)(a1 + 5160) = v44;
        *(void *)(a1 + 5168) = &v52[8 * v51];
        if (v43) {
          goto LABEL_52;
        }
      }
LABEL_34:
      *(void *)(a1 + 5160) = v44;
      v41 += 160;
      uint64_t v43 = (char *)v44;
    }
    while (v41 != v42);
  }
  uint64_t v63 = *(void *)(v197 + 2400 * v202 + 128);
  *(void *)(a1 + 5176) = v63;
  uint64_t v64 = *(void *)(a1 + 2152);
  if (v64 < 0) {
    __int16 v65 = -50;
  }
  else {
    __int16 v65 = 50;
  }
  if (v64 / 100 != ((-5243 * (__int16)(v65 + v64 % 100)) >> 19)
                  + ((-5243 * (__int16)(v65 + v64 % 100)) >> 31))
  {
    uint64_t v66 = 5144;
    if (!*(unsigned char *)(a1 + 2180)) {
      uint64_t v66 = 2152;
    }
    uint64_t v67 = *(void *)(a1 + v66);
    if (v67 < 0) {
      __int16 v68 = -50;
    }
    else {
      __int16 v68 = 50;
    }
    if (v63 < 0) {
      __int16 v69 = -50;
    }
    else {
      __int16 v69 = 50;
    }
    uint64_t v70 = v63 / 100
        + (int)(((5243 * (__int16)(v69 + v63 % 100)) >> 19) + ((5243 * (__int16)(v69 + v63 % 100)) >> 31));
    uint64_t v71 = v67 - v63;
    if (v67 / 100
       + (int)(((5243 * (__int16)(v68 + v67 % 100)) >> 19) + ((5243 * (__int16)(v68 + v67 % 100)) >> 31)) > v70)
      uint64_t v64 = v71;
  }
  *(void *)(a1 + 5192) = v64;
  uint64_t v72 = *v189;
  uint64_t v73 = *(void *)(v197 + 2400 * v202 + 1816);
  if (*v189 == v73)
  {
LABEL_80:
    sub_68206C((uint64_t)&v204);
  }
  else
  {
    while (!sub_683488(v72))
    {
      v72 += 336;
      if (v72 == v73) {
        goto LABEL_80;
      }
    }
    sub_5964A0((uint64_t)&v204, v72);
  }
  sub_674798(v190, (uint64_t)&v204);
  sub_576848((uint64_t)&v204);
  int v74 = sub_682F60(v190);
  *(unsigned char *)(a1 + 7800) = v74;
  if (*(unsigned char *)(v187 + 1856)) {
    char v75 = v74;
  }
  else {
    char v75 = 0;
  }
  *(unsigned char *)(a1 + 7801) = v75;
  if (*(void *)(a1 + 7440) == *(void *)(a1 + 7448))
  {
    uint64_t v77 = (char *)(a1 + 7800);
    *(unsigned char *)(a1 + 7802) = 0;
    uint64_t v79 = a1 + 5928;
    if (!v74) {
      goto LABEL_106;
    }
  }
  else
  {
    BOOL v76 = !sub_683488(*(void *)(a1 + 7440));
    uint64_t v77 = (char *)(a1 + 7800);
    int v78 = *(unsigned __int8 *)(a1 + 7800);
    *(unsigned char *)(a1 + 7802) = v76;
    uint64_t v79 = a1 + 5928;
    if (!v78) {
      goto LABEL_106;
    }
  }
  sub_89CDA4(v185, 1, 0, (uint64_t)&v204);
  if (!sub_637DD8((long long **)&v204)) {
    *(unsigned char *)(a1 + 7801) = 1;
  }
  uint64_t v80 = (std::__shared_weak_count *)v209[2];
  if (v209[2] && !atomic_fetch_add((atomic_ullong *volatile)(v209[2] + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
    std::__shared_weak_count::__release_weak(v80);
  }
  long long v81 = (void *)v207;
  if ((void)v207)
  {
    do
    {
      uint64_t v82 = (void *)*v81;
      sub_4F4B48((uint64_t)(v81 + 2));
      operator delete(v81);
      long long v81 = v82;
    }
    while (v82);
  }
  int v83 = (void *)__p;
  *(void *)&long long __p = 0;
  if (v83) {
    operator delete(v83);
  }
  long long v84 = (void **)v204;
  if (v204)
  {
    uint64_t v85 = (void **)v205;
    uint64_t v86 = v204;
    if ((void *)v205 != v204)
    {
      do
      {
        if (*((char *)v85 - 1) < 0) {
          operator delete(*(v85 - 3));
        }
        v85 -= 3;
      }
      while (v85 != v84);
      uint64_t v86 = v204;
    }
    *(void *)&long long v205 = v84;
    operator delete(v86);
  }
LABEL_106:
  char v87 = *(unsigned char *)(a1 + 2179);
  if (v87)
  {
    char v87 = *v77;
    if (*v77) {
      char v87 = *(unsigned char *)(a1 + 7801) == 0;
    }
  }
  *(unsigned char *)(a1 + 7906) = v87;
  sub_849ADC(a1, (uint64_t)&v204);
  *(void *)(a1 + 5920) = v204;
  if (*(char *)(a1 + 5951) < 0) {
    operator delete(*(void **)v79);
  }
  *(_OWORD *)uint64_t v79 = v205;
  *(void *)(v79 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 5952) = *((void *)&__p + 1);
  int v88 = (void **)(a1 + 5960);
  if (*(char *)(a1 + 5983) < 0) {
    operator delete(*v88);
  }
  *(_OWORD *)int v88 = v207;
  *(void *)(a1 + 5976) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 5984) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 5992) = v209[0];
  uint64_t v89 = (void **)(a1 + 6000);
  if (*(char *)(a1 + 6023) < 0) {
    operator delete(*v89);
  }
  *(_OWORD *)uint64_t v89 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 6016) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  int v90 = (void **)(a1 + 6024);
  if (*(char *)(a1 + 6047) < 0) {
    operator delete(*v90);
  }
  char v91 = 0;
  *(_OWORD *)int v90 = v210;
  *(void *)(a1 + 6040) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 6048) = DWORD2(v211);
  std::string v92 = (void **)(a1 + 6056);
  if (*(char *)(a1 + 6079) < 0)
  {
    operator delete(*v92);
    char v91 = BYTE7(v211);
  }
  *(_OWORD *)std::string v92 = v212;
  *(void *)(a1 + 6072) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 6080) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 6096) = v213[3];
  if (v91 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_121:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_122;
      }
LABEL_176:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_123;
      }
LABEL_177:
      operator delete((void *)v205);
      goto LABEL_123;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_121;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_176;
  }
LABEL_122:
  if (SBYTE7(__p) < 0) {
    goto LABEL_177;
  }
LABEL_123:
  *(unsigned char *)(a1 + 6104) = sub_564868((void *)(a1 + 5920));
  if (*(unsigned char *)(a1 + 7906) || *(unsigned char *)(a1 + 7801))
  {
    uint64_t v93 = sub_62BBE4(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v94 = a1 + 5736;
  }
  else
  {
    uint64_t v93 = sub_62BB78(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v94 = a1 + 5736;
  }
  uint64_t v95 = *(void *)(a1 + 5192);
  if (v95 >= v93) {
    uint64_t v95 = v93;
  }
  v215[0] = v95;
  sub_63AD1C(v201, v215, 1, (uint64_t)&v204);
  *(void *)(a1 + 5728) = v204;
  if (*(char *)(a1 + 5759) < 0) {
    operator delete(*(void **)v94);
  }
  *(_OWORD *)uint64_t v94 = v205;
  *(void *)(v94 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 5760) = *((void *)&__p + 1);
  uint64_t v96 = (void **)(a1 + 5768);
  if (*(char *)(a1 + 5791) < 0) {
    operator delete(*v96);
  }
  *(_OWORD *)uint64_t v96 = v207;
  *(void *)(a1 + 5784) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 5792) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 5800) = v209[0];
  uint64_t v97 = (void **)(a1 + 5808);
  if (*(char *)(a1 + 5831) < 0) {
    operator delete(*v97);
  }
  *(_OWORD *)uint64_t v97 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 5824) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  char v98 = (void **)(a1 + 5832);
  if (*(char *)(a1 + 5855) < 0) {
    operator delete(*v98);
  }
  char v99 = 0;
  *(_OWORD *)char v98 = v210;
  *(void *)(a1 + 5848) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 5856) = DWORD2(v211);
  long long v100 = (void **)(a1 + 5864);
  if (*(char *)(a1 + 5887) < 0)
  {
    operator delete(*v100);
    char v99 = BYTE7(v211);
  }
  *(_OWORD *)long long v100 = v212;
  *(void *)(a1 + 5880) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 5888) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 5904) = v213[3];
  if (v99 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_140:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_141;
      }
LABEL_180:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_142;
      }
      goto LABEL_181;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_140;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_180;
  }
LABEL_141:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_142;
  }
LABEL_181:
  operator delete((void *)v205);
LABEL_142:
  *(unsigned char *)(a1 + 5912) = sub_564868((void *)(a1 + 5728));
  v215[0] = sub_62C62C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_63AF5C(v201, v215, (uint64_t)&v204);
  *(void *)(a1 + 6112) = v204;
  if (*(char *)(a1 + 6143) < 0) {
    operator delete(*v188);
  }
  *(_OWORD *)uint64_t v188 = v205;
  *(void *)(a1 + 6136) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 6144) = *((void *)&__p + 1);
  long long v101 = (void **)(a1 + 6152);
  if (*(char *)(a1 + 6175) < 0) {
    operator delete(*v101);
  }
  *(_OWORD *)long long v101 = v207;
  *(void *)(a1 + 6168) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 6176) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 6184) = v209[0];
  std::string::size_type v102 = (void **)(a1 + 6192);
  if (*(char *)(a1 + 6215) < 0) {
    operator delete(*v102);
  }
  *(_OWORD *)std::string::size_type v102 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 6208) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  char v103 = (void **)(a1 + 6216);
  if (*(char *)(a1 + 6239) < 0) {
    operator delete(*v103);
  }
  char v104 = 0;
  *(_OWORD *)char v103 = v210;
  *(void *)(a1 + 6232) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 6240) = DWORD2(v211);
  unint64_t v105 = (void **)(a1 + 6248);
  if (*(char *)(a1 + 6271) < 0)
  {
    operator delete(*v105);
    char v104 = BYTE7(v211);
  }
  *(_OWORD *)unint64_t v105 = v212;
  *(void *)(a1 + 6264) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 6272) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 6288) = v213[3];
  if (v104 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_154:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_155;
      }
LABEL_184:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_156;
      }
      goto LABEL_185;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_154;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_184;
  }
LABEL_155:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_156;
  }
LABEL_185:
  operator delete((void *)v205);
LABEL_156:
  BOOL v106 = sub_564868(v199);
  *(unsigned char *)(a1 + 6296) = v106;
  if (v106)
  {
    uint64_t v107 = a1 + 6312;
    v215[0] = sub_62C62C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    sub_63AE58(v201, v215, v199, (uint64_t)&v204);
    *(void *)(a1 + 6304) = v204;
    if ((*(char *)(a1 + 6335) & 0x80000000) == 0) {
      goto LABEL_158;
    }
  }
  else
  {
    memset(v213, 0, sizeof(v213));
    long long v212 = 0u;
    long long v211 = 0u;
    long long v210 = 0u;
    memset(v209, 0, sizeof(v209));
    long long v208 = 0u;
    long long v207 = 0u;
    long long __p = 0u;
    long long v205 = 0u;
    long long v204 = (void *)0x7FFFFFFFFFFFFFFFLL;
    sub_6F30A4((uint64_t)&v205);
    uint64_t v107 = a1 + 6312;
    v213[1] = -1;
    v213[2] = -1;
    v213[3] = 0;
    *(void *)(a1 + 6304) = v204;
    if ((*(char *)(a1 + 6335) & 0x80000000) == 0) {
      goto LABEL_158;
    }
  }
  operator delete(*(void **)v107);
LABEL_158:
  *(_OWORD *)uint64_t v107 = v205;
  *(void *)(v107 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 6336) = *((void *)&__p + 1);
  char v108 = (void **)(a1 + 6344);
  if (*(char *)(a1 + 6367) < 0) {
    operator delete(*v108);
  }
  *(_OWORD *)char v108 = v207;
  *(void *)(a1 + 6360) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 6368) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 6376) = v209[0];
  int v109 = (void **)(a1 + 6384);
  if (*(char *)(a1 + 6407) < 0) {
    operator delete(*v109);
  }
  *(_OWORD *)int v109 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 6400) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  unint64_t v110 = (void **)(a1 + 6408);
  if (*(char *)(a1 + 6431) < 0) {
    operator delete(*v110);
  }
  char v111 = 0;
  *(_OWORD *)unint64_t v110 = v210;
  *(void *)(a1 + 6424) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 6432) = DWORD2(v211);
  long long v112 = (void **)(a1 + 6440);
  if (*(char *)(a1 + 6463) < 0)
  {
    operator delete(*v112);
    char v111 = BYTE7(v211);
  }
  *(_OWORD *)long long v112 = v212;
  *(void *)(a1 + 6456) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 6464) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 6480) = v213[3];
  if (v111 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_168:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_169;
      }
LABEL_188:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_170;
      }
      goto LABEL_189;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_168;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_188;
  }
LABEL_169:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_170;
  }
LABEL_189:
  operator delete((void *)v205);
LABEL_170:
  *(unsigned char *)(a1 + 6488) = sub_564868(v191);
  if (*(unsigned char *)(a1 + 7906))
  {
    uint64_t v113 = sub_62BC50(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v114 = a1 + 6504;
  }
  else
  {
    long long v115 = *(void **)(a1 + 2160);
    int v116 = *(_DWORD *)(a1 + 5188);
    uint64_t v114 = a1 + 6504;
    if (*(unsigned char *)(a1 + 7801)) {
      uint64_t v113 = sub_62BAA0(v115, v116);
    }
    else {
      uint64_t v113 = sub_62BB0C(v115, v116);
    }
  }
  uint64_t v117 = *(void *)(a1 + 5192);
  if (v117 >= v113) {
    uint64_t v117 = v113;
  }
  v215[0] = v117;
  sub_63AF5C(v201, v215, (uint64_t)&v204);
  *(void *)(a1 + 6496) = v204;
  if (*(char *)(a1 + 6527) < 0) {
    operator delete(*(void **)v114);
  }
  *(_OWORD *)uint64_t v114 = v205;
  *(void *)(v114 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 6528) = *((void *)&__p + 1);
  uint64_t v118 = (void **)(a1 + 6536);
  if (*(char *)(a1 + 6559) < 0) {
    operator delete(*v118);
  }
  *(_OWORD *)uint64_t v118 = v207;
  *(void *)(a1 + 6552) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 6560) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 6568) = v209[0];
  int v119 = (void **)(a1 + 6576);
  if (*(char *)(a1 + 6599) < 0) {
    operator delete(*v119);
  }
  *(_OWORD *)int v119 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 6592) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  uint64_t v120 = (void **)(a1 + 6600);
  if (*(char *)(a1 + 6623) < 0) {
    operator delete(*v120);
  }
  char v121 = 0;
  *(_OWORD *)uint64_t v120 = v210;
  *(void *)(a1 + 6616) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 6624) = DWORD2(v211);
  uint64_t v122 = (void **)(a1 + 6632);
  if (*(char *)(a1 + 6655) < 0)
  {
    operator delete(*v122);
    char v121 = BYTE7(v211);
  }
  *(_OWORD *)uint64_t v122 = v212;
  *(void *)(a1 + 6648) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 6656) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 6672) = v213[3];
  if (v121 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_208:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_209;
      }
LABEL_214:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_210;
      }
      goto LABEL_215;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_208;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_214;
  }
LABEL_209:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_210;
  }
LABEL_215:
  operator delete((void *)v205);
LABEL_210:
  *(unsigned char *)(a1 + 6680) = sub_564868((void *)(a1 + 6496));
  if (*(unsigned char *)(a1 + 7804))
  {
    memset(v213, 0, sizeof(v213));
    long long v212 = 0u;
    long long v211 = 0u;
    long long v210 = 0u;
    memset(v209, 0, sizeof(v209));
    long long v208 = 0u;
    long long v207 = 0u;
    long long __p = 0u;
    long long v205 = 0u;
    long long v204 = (void *)0x7FFFFFFFFFFFFFFFLL;
    sub_6F30A4((uint64_t)&v205);
    uint64_t v123 = a1 + 6696;
    v213[1] = -1;
    v213[2] = -1;
    v213[3] = 0;
  }
  else
  {
    uint64_t v124 = sub_62C8B4(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v123 = a1 + 6696;
    uint64_t v214 = 0;
    v215[0] = v124;
    sub_63AF84(v201, v215, &v214, (uint64_t)&v204);
  }
  *(void *)(a1 + 6688) = v204;
  if (*(char *)(a1 + 6719) < 0) {
    operator delete(*(void **)v123);
  }
  *(_OWORD *)uint64_t v123 = v205;
  *(void *)(v123 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 6720) = *((void *)&__p + 1);
  uint64_t v125 = (void **)(a1 + 6728);
  if (*(char *)(a1 + 6751) < 0) {
    operator delete(*v125);
  }
  *(_OWORD *)uint64_t v125 = v207;
  *(void *)(a1 + 6744) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 6752) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 6760) = v209[0];
  uint64_t v126 = (void **)(a1 + 6768);
  if (*(char *)(a1 + 6791) < 0) {
    operator delete(*v126);
  }
  *(_OWORD *)uint64_t v126 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 6784) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  uint64_t v127 = (void **)(a1 + 6792);
  if (*(char *)(a1 + 6815) < 0) {
    operator delete(*v127);
  }
  char v128 = 0;
  *(_OWORD *)uint64_t v127 = v210;
  *(void *)(a1 + 6808) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 6816) = DWORD2(v211);
  uint64_t v129 = (void **)(a1 + 6824);
  if (*(char *)(a1 + 6847) < 0)
  {
    operator delete(*v129);
    char v128 = BYTE7(v211);
  }
  *(_OWORD *)uint64_t v129 = v212;
  *(void *)(a1 + 6840) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 6848) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 6864) = v213[3];
  if (v128 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_229:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_230;
      }
LABEL_281:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_231;
      }
      goto LABEL_282;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_229;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_281;
  }
LABEL_230:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_231;
  }
LABEL_282:
  operator delete((void *)v205);
LABEL_231:
  BOOL v130 = sub_564868((void *)(a1 + 6688));
  *(unsigned char *)(a1 + 6872) = v130;
  if (v130)
  {
    v215[0] = *(void *)(a1 + 6688);
    uint64_t v131 = a1 + 6888;
    uint64_t v214 = sub_62C62C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v132 = sub_856CCC(*(void **)(a1 + 7968), *(void *)(a1 + 6856));
    sub_8564A0(a1, v132, &v214, v215, (uint64_t)&v204);
    *(void *)(a1 + 6880) = v204;
    if ((*(char *)(a1 + 6911) & 0x80000000) == 0) {
      goto LABEL_233;
    }
  }
  else
  {
    memset(v213, 0, sizeof(v213));
    long long v212 = 0u;
    long long v211 = 0u;
    long long v210 = 0u;
    memset(v209, 0, sizeof(v209));
    long long v208 = 0u;
    long long v207 = 0u;
    long long __p = 0u;
    long long v205 = 0u;
    long long v204 = (void *)0x7FFFFFFFFFFFFFFFLL;
    sub_6F30A4((uint64_t)&v205);
    uint64_t v131 = a1 + 6888;
    v213[1] = -1;
    v213[2] = -1;
    v213[3] = 0;
    *(void *)(a1 + 6880) = v204;
    if ((*(char *)(a1 + 6911) & 0x80000000) == 0) {
      goto LABEL_233;
    }
  }
  operator delete(*(void **)v131);
LABEL_233:
  *(_OWORD *)uint64_t v131 = v205;
  *(void *)(v131 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 6912) = *((void *)&__p + 1);
  int64x2_t v133 = (void **)(a1 + 6920);
  if (*(char *)(a1 + 6943) < 0) {
    operator delete(*v133);
  }
  *(_OWORD *)int64x2_t v133 = v207;
  *(void *)(a1 + 6936) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 6944) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 6952) = v209[0];
  int32x4_t v134 = (void **)(a1 + 6960);
  if (*(char *)(a1 + 6983) < 0) {
    operator delete(*v134);
  }
  *(_OWORD *)int32x4_t v134 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 6976) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  int32x4_t v135 = (void **)(a1 + 6984);
  if (*(char *)(a1 + 7007) < 0) {
    operator delete(*v135);
  }
  char v136 = 0;
  *(_OWORD *)int32x4_t v135 = v210;
  *(void *)(a1 + 7000) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 7008) = DWORD2(v211);
  unsigned long long v137 = (void **)(a1 + 7016);
  if (*(char *)(a1 + 7039) < 0)
  {
    operator delete(*v137);
    char v136 = BYTE7(v211);
  }
  *(_OWORD *)unsigned long long v137 = v212;
  *(void *)(a1 + 7032) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 7040) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 7056) = v213[3];
  if (v136 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_243:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_244;
      }
LABEL_285:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_245;
      }
      goto LABEL_286;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_243;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_285;
  }
LABEL_244:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_245;
  }
LABEL_286:
  operator delete((void *)v205);
LABEL_245:
  *(unsigned char *)(a1 + 7064) = sub_564868(v193);
  v215[0] = sub_62C9F8(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_63B130(v201, v215, (uint64_t)&v204);
  *(void *)(a1 + 7072) = v204;
  if (*(char *)(a1 + 7103) < 0) {
    operator delete(*v192);
  }
  *(_OWORD *)int v192 = v205;
  *(void *)(a1 + 7096) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 7104) = *((void *)&__p + 1);
  int v138 = (void **)(a1 + 7112);
  if (*(char *)(a1 + 7135) < 0) {
    operator delete(*v138);
  }
  *(_OWORD *)int v138 = v207;
  *(void *)(a1 + 7128) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 7136) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 7144) = v209[0];
  unsigned long long v139 = (void **)(a1 + 7152);
  if (*(char *)(a1 + 7175) < 0) {
    operator delete(*v139);
  }
  *(_OWORD *)unsigned long long v139 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 7168) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  uint64_t v140 = (void **)(a1 + 7176);
  if (*(char *)(a1 + 7199) < 0) {
    operator delete(*v140);
  }
  char v141 = 0;
  *(_OWORD *)uint64_t v140 = v210;
  *(void *)(a1 + 7192) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 7200) = DWORD2(v211);
  unsigned long long v142 = (void **)(a1 + 7208);
  if (*(char *)(a1 + 7231) < 0)
  {
    operator delete(*v142);
    char v141 = BYTE7(v211);
  }
  *(_OWORD *)unsigned long long v142 = v212;
  *(void *)(a1 + 7224) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 7232) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 7248) = v213[3];
  if (v141 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_257:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_258;
      }
LABEL_289:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_259;
      }
      goto LABEL_290;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_257;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_289;
  }
LABEL_258:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_259;
  }
LABEL_290:
  operator delete((void *)v205);
LABEL_259:
  if (sub_564868(v196))
  {
    v215[0] = sub_62C98C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    sub_63B05C(v201, v215, v196, (uint64_t)&v204);
    *(void *)(a1 + 7256) = v204;
    if ((*(char *)(a1 + 7287) & 0x80000000) == 0) {
      goto LABEL_261;
    }
  }
  else
  {
    memset(v213, 0, sizeof(v213));
    long long v212 = 0u;
    long long v211 = 0u;
    long long v210 = 0u;
    memset(v209, 0, sizeof(v209));
    long long v208 = 0u;
    long long v207 = 0u;
    long long __p = 0u;
    long long v205 = 0u;
    long long v204 = (void *)0x7FFFFFFFFFFFFFFFLL;
    sub_6F30A4((uint64_t)&v205);
    v213[1] = -1;
    v213[2] = -1;
    v213[3] = 0;
    *(void *)(a1 + 7256) = v204;
    if ((*(char *)(a1 + 7287) & 0x80000000) == 0) {
      goto LABEL_261;
    }
  }
  operator delete(*v186);
LABEL_261:
  *(_OWORD *)uint64_t v186 = v205;
  *(void *)(a1 + 7280) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 7288) = *((void *)&__p + 1);
  char v143 = (void **)(a1 + 7296);
  if (*(char *)(a1 + 7319) < 0) {
    operator delete(*v143);
  }
  *(_OWORD *)char v143 = v207;
  *(void *)(a1 + 7312) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 7320) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 7328) = v209[0];
  char v144 = (void **)(a1 + 7336);
  if (*(char *)(a1 + 7359) < 0) {
    operator delete(*v144);
  }
  *(_OWORD *)char v144 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 7352) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  unsigned long long v145 = (void **)(a1 + 7360);
  if (*(char *)(a1 + 7383) < 0) {
    operator delete(*v145);
  }
  char v146 = 0;
  *(_OWORD *)unsigned long long v145 = v210;
  *(void *)(a1 + 7376) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 7384) = DWORD2(v211);
  uint64_t v147 = (void **)(a1 + 7392);
  if (*(char *)(a1 + 7415) < 0)
  {
    operator delete(*v147);
    char v146 = BYTE7(v211);
  }
  *(_OWORD *)uint64_t v147 = v212;
  *(void *)(a1 + 7408) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 7416) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 7432) = v213[3];
  if (v146 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_271:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_272;
      }
      goto LABEL_293;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_271;
  }
  operator delete((void *)v209[1]);
  if ((SBYTE7(v208) & 0x80000000) == 0)
  {
LABEL_272:
    if ((SBYTE7(__p) & 0x80000000) == 0) {
      goto LABEL_273;
    }
    goto LABEL_294;
  }
LABEL_293:
  operator delete((void *)v207);
  if ((SBYTE7(__p) & 0x80000000) == 0)
  {
LABEL_273:
    uint64_t v148 = *(void *)(a1 + 2160);
    if (!*(unsigned char *)(v148 + 1968)) {
      goto LABEL_296;
    }
    goto LABEL_295;
  }
LABEL_294:
  operator delete((void *)v205);
  uint64_t v148 = *(void *)(a1 + 2160);
  if (!*(unsigned char *)(v148 + 1968)) {
    goto LABEL_296;
  }
LABEL_295:
  if (*(_DWORD *)(a1 + 2144) == 3) {
    goto LABEL_299;
  }
LABEL_296:
  int v149 = *(unsigned __int8 *)(v148 + 1970);
  if (!v149) {
    goto LABEL_300;
  }
  if (*(unsigned char *)(a1 + 5186) || *v14) {
    goto LABEL_299;
  }
  LOBYTE(v149) = *(unsigned char *)(a1 + 7804);
  if ((_BYTE)v149)
  {
    if (sub_63A8F8((uint64_t)v198))
    {
      int v149 = *(unsigned __int8 *)(a1 + 7841);
LABEL_390:
      LOBYTE(v149) = v149 != 0;
      goto LABEL_300;
    }
    if (sub_63A908((uint64_t)v198))
    {
      int v149 = *(unsigned __int8 *)(a1 + 7842);
      goto LABEL_390;
    }
LABEL_299:
    LOBYTE(v149) = 0;
  }
LABEL_300:
  *(unsigned char *)(a1 + 7909) = v149;
  *(unsigned char *)(a1 + 7912) = sub_849BE8(a1);
  BOOL v150 = sub_849DD0(a1);
  *(unsigned char *)(a1 + 7911) = v150;
  if (v150)
  {
    uint64_t v151 = *(void *)(a1 + 6112) + sub_62C410(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    if (v151 >= *(void *)(a1 + 5192)) {
      uint64_t v151 = *(void *)(a1 + 5192);
    }
    if (*(unsigned char *)(a1 + 6488) && *v191 < v151) {
      uint64_t v151 = *v191;
    }
    *(void *)(a1 + 7888) = v151;
  }
  uint64_t v152 = sub_62C47C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  long long v153 = (uint64_t *)(a1 + 6112);
  if (*(unsigned char *)(a1 + 7911) || (long long v153 = (uint64_t *)(a1 + 6688), *(unsigned char *)(a1 + 7912)))
  {
    *(unsigned char *)(a1 + 7915) = *v153 < v152;
    char v154 = *(unsigned char *)(a1 + 7805);
    uint64_t v155 = a1 + 5352;
    if (!v154) {
      goto LABEL_313;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 7915) = 0;
    char v154 = *(unsigned char *)(a1 + 7805);
    uint64_t v155 = a1 + 5352;
    if (!v154) {
      goto LABEL_313;
    }
  }
  if (*(unsigned char *)(a1 + 7804) || *(unsigned char *)(a1 + 7912))
  {
    char v154 = 0;
  }
  else
  {
    if (sub_564868(v196))
    {
      BOOL v181 = sub_564868((void *)(a1 + 7256));
      uint64_t v182 = 5192;
      if (v181) {
        uint64_t v182 = 7256;
      }
      uint64_t v183 = *(void *)(a1 + v182);
      char v154 = v183 >= *v196 + sub_62C4E8(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    }
    else
    {
      char v154 = 0;
    }
    uint64_t v155 = a1 + 5352;
  }
LABEL_313:
  *(unsigned char *)(a1 + 7913) = v154;
  sub_849EE4(a1, (uint64_t)&v204);
  *(void *)(a1 + 5344) = v204;
  if (*(char *)(a1 + 5375) < 0) {
    operator delete(*(void **)v155);
  }
  *(_OWORD *)uint64_t v155 = v205;
  *(void *)(v155 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 5376) = *((void *)&__p + 1);
  uint64_t v156 = (void **)(a1 + 5384);
  if (*(char *)(a1 + 5407) < 0) {
    operator delete(*v156);
  }
  *(_OWORD *)uint64_t v156 = v207;
  *(void *)(a1 + 5400) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 5408) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 5416) = v209[0];
  uint64_t v157 = (void **)(a1 + 5424);
  if (*(char *)(a1 + 5447) < 0) {
    operator delete(*v157);
  }
  *(_OWORD *)uint64_t v157 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 5440) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  uint64_t v158 = (void **)(a1 + 5448);
  if (*(char *)(a1 + 5471) < 0) {
    operator delete(*v158);
  }
  char v159 = 0;
  *(_OWORD *)uint64_t v158 = v210;
  *(void *)(a1 + 5464) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 5472) = DWORD2(v211);
  unint64_t v160 = (void **)(a1 + 5480);
  if (*(char *)(a1 + 5503) < 0)
  {
    operator delete(*v160);
    char v159 = BYTE7(v211);
  }
  *(_OWORD *)unint64_t v160 = v212;
  *(void *)(a1 + 5496) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 5504) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 5520) = v213[3];
  if (v159 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_325:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_326;
      }
LABEL_362:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_327;
      }
      goto LABEL_363;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_325;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_362;
  }
LABEL_326:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_327;
  }
LABEL_363:
  operator delete((void *)v205);
LABEL_327:
  BOOL v161 = sub_564868(v194);
  *(unsigned char *)(a1 + 5528) = v161;
  if (v161)
  {
    uint64_t v162 = a1 + 5544;
    v215[0] = sub_62C920(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    sub_63AD48(v201, v215, v194, 1, (uint64_t)&v204);
    *(void *)(a1 + 5536) = v204;
    if ((*(char *)(a1 + 5567) & 0x80000000) == 0) {
      goto LABEL_329;
    }
  }
  else
  {
    memset(v213, 0, sizeof(v213));
    long long v212 = 0u;
    long long v211 = 0u;
    long long v210 = 0u;
    memset(v209, 0, sizeof(v209));
    long long v208 = 0u;
    long long v207 = 0u;
    long long __p = 0u;
    long long v205 = 0u;
    long long v204 = (void *)0x7FFFFFFFFFFFFFFFLL;
    sub_6F30A4((uint64_t)&v205);
    uint64_t v162 = a1 + 5544;
    v213[1] = -1;
    v213[2] = -1;
    v213[3] = 0;
    *(void *)(a1 + 5536) = v204;
    if ((*(char *)(a1 + 5567) & 0x80000000) == 0) {
      goto LABEL_329;
    }
  }
  operator delete(*(void **)v162);
LABEL_329:
  *(_OWORD *)uint64_t v162 = v205;
  *(void *)(v162 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 5568) = *((void *)&__p + 1);
  double v163 = (void **)(a1 + 5576);
  if (*(char *)(a1 + 5599) < 0) {
    operator delete(*v163);
  }
  *(_OWORD *)double v163 = v207;
  *(void *)(a1 + 5592) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 5600) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 5608) = v209[0];
  long long v164 = (void **)(a1 + 5616);
  if (*(char *)(a1 + 5639) < 0) {
    operator delete(*v164);
  }
  *(_OWORD *)long long v164 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 5632) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  double v165 = (void **)(a1 + 5640);
  if (*(char *)(a1 + 5663) < 0) {
    operator delete(*v165);
  }
  char v166 = 0;
  *(_OWORD *)double v165 = v210;
  *(void *)(a1 + 5656) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 5664) = DWORD2(v211);
  uint64_t v167 = (void **)(a1 + 5672);
  if (*(char *)(a1 + 5695) < 0)
  {
    operator delete(*v167);
    char v166 = BYTE7(v211);
  }
  *(_OWORD *)uint64_t v167 = v212;
  *(void *)(a1 + 5688) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 5696) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 5712) = v213[3];
  if (v166 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_339:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_340;
      }
LABEL_366:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_341;
      }
      goto LABEL_367;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_339;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_366;
  }
LABEL_340:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_341;
  }
LABEL_367:
  operator delete((void *)v205);
LABEL_341:
  *(unsigned char *)(a1 + 5720) = sub_564868((void *)(a1 + 5536));
  *(unsigned char *)(a1 + 7908) = sub_84A03C(a1);
  *(void *)(a1 + 7864) = sub_84A1A4(a1);
  *(void *)(a1 + 7872) = sub_84A348(a1);
  if (*(unsigned char *)(a1 + 7912))
  {
    uint64_t v168 = *(void *)(a1 + 6688) + sub_62C410(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    if (*(void *)(a1 + 5192) < v168) {
      uint64_t v168 = *(void *)(a1 + 5192);
    }
    if (*(unsigned char *)(a1 + 7064) && *v193 < v168) {
      uint64_t v168 = *v193;
    }
    *(void *)(a1 + 7896) = v168;
  }
  BOOL v169 = sub_84A5C8(a1);
  *(unsigned char *)(a1 + 7910) = v169;
  if (v169)
  {
    uint64_t v170 = sub_62C62C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v171 = *(void *)(a1 + 5192);
    if (v171 >= v170) {
      uint64_t v171 = v170;
    }
    if (*(unsigned char *)(a1 + 6296)) {
      uint64_t v171 = *v199;
    }
    *(void *)(a1 + 7880) = v171;
  }
  uint64_t v172 = sub_62BD28(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v173 = sub_62BCBC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (*(unsigned char *)(a1 + 7906) && *v184 != 0x7FFFFFFFFFFFFFFFLL)
  {
    char v174 = *v184 > v173 + v172;
  }
  else if (*(unsigned char *)(a1 + 7912))
  {
    char v174 = 1;
  }
  else
  {
    char v174 = *(unsigned char *)(a1 + 7915);
    if (v174) {
      char v174 = *(unsigned char *)(a1 + 7911) != 0;
    }
  }
  *(unsigned char *)(a1 + 7907) = v174;
  if (*(unsigned char *)(a1 + 7984))
  {
    BOOL v175 = 0;
  }
  else if (*(unsigned char *)(a1 + 2179))
  {
    BOOL v175 = sub_8569A8(a1);
  }
  else
  {
    BOOL v175 = sub_856AC0(a1);
  }
  *(unsigned char *)(a1 + 7904) = v175;
  *(unsigned char *)(a1 + 7905) = sub_84A704(a1);
  *(unsigned char *)(a1 + 2181) = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
  *(unsigned char *)(a1 + 7914) = sub_84A8A4(a1, v200, v202);
  *(unsigned char *)(a1 + 2182) = (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))a1)(a1, v200, v202);
  sub_84AA34(a1);
  uint64_t v176 = sub_64EFB8(v200);
  uint64_t v177 = *(void *)v176;
  *(_DWORD *)(a1 + 7928) = *(_DWORD *)(v176 + 8);
  *(void *)(a1 + 7920) = v177;
  uint64_t v178 = sub_64EFC4(v200);
  uint64_t v179 = *(void *)v178;
  *(_DWORD *)(a1 + 7940) = *(_DWORD *)(v178 + 8);
  *(void *)(a1 + 7932) = v179;
  return a1;
}

void sub_8498F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void **a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void **a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t *a45,uint64_t a46,void **a47)
{
  v47[976] = off_2438EC8;
  if (*(char *)(v48 + 2655) < 0) {
    operator delete(*a28);
  }
  sub_576848(a30);
  sub_592364(a39);
  sub_7D0A58(a11);
  sub_7D0A58(a40);
  sub_7D0A58(a37);
  sub_7D0A58(a36);
  sub_7D0A58(a29);
  sub_7D0A58(a34);
  sub_7D0A58(a43);
  sub_7D0A58(a32);
  sub_7D0A58(a31);
  sub_7D0A58(a27);
  sub_7D0A58(a38);
  sub_59230C(a45);
  uint64_t v50 = *a47;
  if (*a47)
  {
    v47[645] = v50;
    operator delete(v50);
  }
  sub_7C5F94(a14);
  void *v47 = &off_2439B78;
  sub_52F364((uint64_t)(v47 + 1));
  _Unwind_Resume(a1);
}

uint64_t sub_849ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = (unsigned char *)(a1 + 7801);
  if (*(unsigned char *)(a1 + 7906))
  {
    uint64_t v5 = sub_62BC50(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v6 = *(void *)(a1 + 5192);
    if (v6 >= v5) {
      uint64_t v6 = v5;
    }
    uint64_t v17 = v6;
    if (v4[105]) {
      goto LABEL_15;
    }
  }
  else
  {
    char v7 = *(void **)(a1 + 2160);
    int v8 = *(_DWORD *)(a1 + 5188);
    if (*v4)
    {
      uint64_t v9 = sub_62BAA0(v7, v8);
      uint64_t v10 = *(void *)(a1 + 5192);
      if (v10 >= v9) {
        uint64_t v10 = v9;
      }
      uint64_t v17 = v10;
      if (v4[105]) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v11 = sub_62BB0C(v7, v8);
      uint64_t v12 = *(void *)(a1 + 5192);
      if (v12 >= v11) {
        uint64_t v12 = v11;
      }
      uint64_t v17 = v12;
      if (v4[105]) {
        goto LABEL_15;
      }
    }
  }
  if (*v4)
  {
LABEL_15:
    uint64_t v13 = sub_62BBE4(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    goto LABEL_16;
  }
  uint64_t v13 = sub_62BB78(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
LABEL_16:
  uint64_t v14 = *(void *)(a1 + 5192);
  if (v14 >= v13) {
    uint64_t v14 = v13;
  }
  uint64_t v16 = v14;
  return sub_63AD48((uint64_t **)(a1 + 5200), &v17, &v16, 1, a2);
}

BOOL sub_849BE8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 2160);
  if (*(unsigned char *)(v2 + 1968) && *(_DWORD *)(a1 + 2144) == 3) {
    return 0;
  }
  if (!*(unsigned char *)(v2 + 1970) || *(unsigned char *)(a1 + 5186) || *(unsigned char *)(a1 + 5184) || !sub_63ACB4(a1 + 6688)) {
    return 0;
  }
  uint64_t v5 = sub_856CCC(*(void **)(a1 + 7968), *(void *)(a1 + 6856));
  if (sub_63A8F8(v5))
  {
    if (!*(unsigned char *)(a1 + 7847)) {
      return 0;
    }
  }
  else if (!sub_63A908(v5) || !*(unsigned char *)(a1 + 7848))
  {
    return 0;
  }
  if (*(unsigned char *)(a1 + 7804) || !*(unsigned char *)(a1 + 6872)) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 6688);
  uint64_t v20 = v6;
  uint64_t v7 = 6880;
  if (!*(unsigned char *)(a1 + 7064)) {
    uint64_t v7 = 5192;
  }
  uint64_t v8 = *(void *)(a1 + v7);
  if (v8 < v6 + sub_62C47C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188))) {
    return 0;
  }
  sub_63AD1C((uint64_t **)(a1 + 5200), &v20, 1, (uint64_t)v10);
  BOOL v9 = sub_564868(v10);
  if (v19 < 0)
  {
    operator delete(__p);
    if ((v17 & 0x80000000) == 0)
    {
LABEL_22:
      if ((v15 & 0x80000000) == 0) {
        goto LABEL_23;
      }
      goto LABEL_28;
    }
  }
  else if ((v17 & 0x80000000) == 0)
  {
    goto LABEL_22;
  }
  operator delete(v16);
  if ((v15 & 0x80000000) == 0)
  {
LABEL_23:
    if ((v13 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_29;
  }
LABEL_28:
  operator delete(v14);
  if ((v13 & 0x80000000) == 0)
  {
LABEL_24:
    BOOL v3 = !v9;
    if ((v11 & 0x80000000) == 0) {
      return v3;
    }
    goto LABEL_30;
  }
LABEL_29:
  operator delete(v12);
  BOOL v3 = !v9;
  if ((v11 & 0x80000000) == 0) {
    return v3;
  }
LABEL_30:
  operator delete(v10[1]);
  return v3;
}

void sub_849DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL sub_849DD0(uint64_t a1)
{
  uint64_t v2 = *(unsigned char **)(a1 + 2160);
  if (v2[1968] && *(_DWORD *)(a1 + 2144) == 3) {
    return 0;
  }
  if (!v2[1970] || *(unsigned char *)(a1 + 5186) || *(unsigned char *)(a1 + 5184) || !v2[1971]) {
    return 0;
  }
  if (sub_63A8F8(a1 + 5224))
  {
    if (!*(unsigned char *)(a1 + 7845)) {
      return 0;
    }
LABEL_15:
    if (*(unsigned char *)(a1 + 6296))
    {
      uint64_t v4 = *(void *)(a1 + 6112);
      uint64_t v5 = 6304;
      if (!*(unsigned char *)(a1 + 6488)) {
        uint64_t v5 = 5192;
      }
      uint64_t v6 = *(void *)(a1 + v5);
      if (v6 >= sub_62C47C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188)) + v4) {
        return v4 <= sub_62C698(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
      }
    }
    return 0;
  }
  BOOL result = sub_63A908(a1 + 5224);
  if (result)
  {
    if (!*(unsigned char *)(a1 + 7846)) {
      return 0;
    }
    goto LABEL_15;
  }
  return result;
}

void sub_849EE4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = sub_62C704(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188), 1);
  sub_63AD1C((uint64_t **)(a1 + 5200), &v18, 1, (uint64_t)&v5);
  uint64_t v4 = sub_62C704(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188), 0);
  if (BYTE4(v17))
  {
    *(void *)a2 = v5;
    sub_4AA8E0((char *)(a2 + 8), &v6);
    *(_OWORD *)(a2 + 160) = v16;
    *(void *)(a2 + 176) = v17;
  }
  else
  {
    sub_63AD1C((uint64_t **)(a1 + 5200), &v4, 1, a2);
  }
  if (v15 < 0)
  {
    operator delete(__p);
    if ((v13 & 0x80000000) == 0)
    {
LABEL_6:
      if ((v11 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
  }
  else if ((v13 & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  operator delete(v12);
  if ((v11 & 0x80000000) == 0)
  {
LABEL_7:
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(v10);
  if ((v9 & 0x80000000) == 0)
  {
LABEL_8:
    if ((v7 & 0x80000000) == 0) {
      return;
    }
LABEL_14:
    operator delete((void *)v6);
    return;
  }
LABEL_13:
  operator delete(v8);
  if (v7 < 0) {
    goto LABEL_14;
  }
}

void sub_84A028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_7D0A58((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_84A03C(uint64_t a1)
{
  uint64_t v1 = (unsigned char *)(a1 + 5184);
  if (!*(unsigned char *)(a1 + 7806) || !*(unsigned char *)(a1 + 2179) || *v1) {
    return 0;
  }
  BOOL v3 = *(unsigned char *)(a1 + 5186) || *(_DWORD *)(a1 + 2144) == 3;
  if (v3
    || *(unsigned char *)(a1 + 7804)
    || *(unsigned char *)(a1 + 7913)
    || *(unsigned char *)(a1 + 7912)
    || !*(unsigned char *)(a1 + 5528)
    || !*(unsigned char *)(a1 + 5521) && !*(unsigned char *)(a1 + 5524))
  {
    return 0;
  }
  uint64_t v5 = (void *)(a1 + 5344);
  if (!sub_63ACAC(a1 + 5344) && !v1[340] && !v1[341]) {
    return 0;
  }
  sub_63AD1C((uint64_t **)(a1 + 5200), (uint64_t *)(a1 + 5344), 0, (uint64_t)v9);
  if (sub_564868(v9))
  {
    BOOL v6 = 0;
  }
  else
  {
    uint64_t v7 = 5536;
    if (!v1[536]) {
      uint64_t v7 = 5192;
    }
    uint64_t v8 = *(void *)(a1 + v7);
    BOOL v6 = v8 >= *v5 + sub_62C4E8(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  }
  sub_7D0A58((uint64_t)v9);
  return v6;
}

void sub_84A17C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_7D0A58((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_84A190(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_7D0A58((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_84A1A4(uint64_t a1)
{
  uint64_t v1 = (unsigned char *)(a1 + 5912);
  if (!*(unsigned char *)(a1 + 7906)) {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t v3 = sub_62BC50(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (*(void *)(a1 + 5192) >= v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = *(void *)(a1 + 5192);
  }
  uint64_t v5 = sub_62BBE4(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (*(void *)(a1 + 5192) >= v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = *(void *)(a1 + 5192);
  }
  if (v1[1996])
  {
    uint64_t v7 = *(void *)(a1 + 5344);
    goto LABEL_13;
  }
  if (v1[2001])
  {
    uint64_t v7 = *(void *)(a1 + 7072);
LABEL_13:
    if (v7 >= v4) {
      return v4;
    }
    else {
      return v7;
    }
  }
  uint64_t v9 = sub_683498(a1 + 7464);
  uint64_t v10 = sub_6834A8(a1 + 7464);
  uint64_t v11 = v10;
  if (v1[1999])
  {
    if (v10 >= v9) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12 >= *(void *)(a1 + 6112)) {
      return *(void *)(a1 + 6112);
    }
    else {
      return v12;
    }
  }
  else
  {
    if (v1[1997] && v1[768])
    {
      if (v10 >= v9) {
        uint64_t v13 = v9;
      }
      else {
        uint64_t v13 = v10;
      }
      uint64_t v14 = *(void *)(a1 + 6496);
    }
    else
    {
      if (*v1) {
        uint64_t v15 = v6;
      }
      else {
        uint64_t v15 = v4;
      }
      if (v1[192] && !*v1) {
        uint64_t v15 = *(void *)(a1 + 5920);
      }
      if (v1[1890]) {
        uint64_t v16 = sub_85642C(a1, v4);
      }
      else {
        uint64_t v16 = v4;
      }
      if (v11 >= v9) {
        uint64_t v13 = v9;
      }
      else {
        uint64_t v13 = v11;
      }
      if (v13 <= v6) {
        uint64_t v13 = v6;
      }
      if (v16 >= v4) {
        uint64_t v14 = v4;
      }
      else {
        uint64_t v14 = v16;
      }
      if (v15 < v14) {
        uint64_t v14 = v15;
      }
    }
    if (v13 >= v14) {
      return v14;
    }
    else {
      return v13;
    }
  }
}

uint64_t sub_84A348(uint64_t a1)
{
  switch(*(unsigned char *)(a1 + 2178))
  {
    case 0:
      return sub_85615C(a1);
    case 1:
    case 2:
    case 4:
      uint64_t v1 = *(void *)(a1 + 2160);
      int v2 = *(_DWORD *)(v1 + 164);
      int v3 = v2 / 10;
      int v4 = v2 % 10;
      if (v2 < 0) {
        char v5 = -5;
      }
      else {
        char v5 = 5;
      }
      double v6 = *(double *)(v1 + 2008)
         / 3.6
         * (double)(int)(v3 + (((103 * (char)(v5 + v4)) >> 15) & 1) + ((103 * (char)(v5 + v4)) >> 10))
         * 100.0;
      if (v6 >= 0.0)
      {
        double v7 = *(double *)(v1 + 2008)
           / 3.6
           * (double)(int)(v3 + (((103 * (char)(v5 + v4)) >> 15) & 1) + ((103 * (char)(v5 + v4)) >> 10))
           * 100.0;
        if (v6 >= 4.50359963e15) {
          goto LABEL_13;
        }
        uint64_t v8 = (uint64_t)(v6 + v6) + 1;
      }
      else
      {
        double v7 = *(double *)(v1 + 2008)
           / 3.6
           * (double)(int)(v3 + (((103 * (char)(v5 + v4)) >> 15) & 1) + ((103 * (char)(v5 + v4)) >> 10))
           * 100.0;
        if (v6 <= -4.50359963e15) {
          goto LABEL_13;
        }
        uint64_t v8 = (uint64_t)(v6 + v6);
        if (v8 >= 1) {
          --v8;
        }
      }
      double v7 = (double)(v8 >> 1);
LABEL_13:
      if (v7 >= 9.22337204e18) {
        goto LABEL_39;
      }
      goto LABEL_14;
    case 3:
      return sub_855D04(a1);
    default:
      uint64_t v11 = *(void *)(a1 + 2160);
      int v12 = *(_DWORD *)(v11 + 164);
      int v13 = v12 / 10;
      int v14 = v12 % 10;
      if (v12 < 0) {
        char v15 = -5;
      }
      else {
        char v15 = 5;
      }
      double v6 = *(double *)(v11 + 2008)
         / 3.6
         * (double)(int)(v13 + (((103 * (char)(v15 + v14)) >> 15) & 1) + ((103 * (char)(v15 + v14)) >> 10))
         * 100.0;
      if (v6 >= 0.0)
      {
        double v16 = *(double *)(v11 + 2008)
            / 3.6
            * (double)(int)(v13
                          + (((103 * (char)(v15 + v14)) >> 15) & 1)
                          + ((103 * (char)(v15 + v14)) >> 10))
            * 100.0;
        if (v6 >= 4.50359963e15) {
          goto LABEL_38;
        }
        uint64_t v17 = (uint64_t)(v6 + v6) + 1;
      }
      else
      {
        double v16 = *(double *)(v11 + 2008)
            / 3.6
            * (double)(int)(v13
                          + (((103 * (char)(v15 + v14)) >> 15) & 1)
                          + ((103 * (char)(v15 + v14)) >> 10))
            * 100.0;
        if (v6 <= -4.50359963e15) {
          goto LABEL_38;
        }
        uint64_t v17 = (uint64_t)(v6 + v6);
        if (v17 >= 1) {
          --v17;
        }
      }
      double v16 = (double)(v17 >> 1);
LABEL_38:
      if (v16 < 9.22337204e18)
      {
LABEL_14:
        if (v6 >= 0.0)
        {
          if (v6 >= 4.50359963e15) {
            goto LABEL_24;
          }
          uint64_t v9 = (uint64_t)(v6 + v6) + 1;
        }
        else
        {
          if (v6 <= -4.50359963e15) {
            goto LABEL_24;
          }
          uint64_t v9 = (uint64_t)(v6 + v6);
          if (v9 >= 1) {
            --v9;
          }
        }
        double v6 = (double)(v9 >> 1);
LABEL_24:
        if ((uint64_t)v6 >= *(void *)(a1 + 5192)) {
          return *(void *)(a1 + 5192);
        }
        else {
          return (uint64_t)v6;
        }
      }
LABEL_39:
      if (*(void *)(a1 + 5192) == 0x7FFFFFFFFFFFFFFFLL) {
        return 0x7FFFFFFFFFFFFFFELL;
      }
      else {
        return *(void *)(a1 + 5192);
      }
  }
}

BOOL sub_84A5C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 2160);
  if (*(unsigned char *)(v2 + 1968) && *(_DWORD *)(a1 + 2144) == 3) {
    return 0;
  }
  if (!*(unsigned char *)(v2 + 1970) || *(unsigned char *)(a1 + 5186) || *(unsigned char *)(a1 + 5184)) {
    return 0;
  }
  if (sub_63A8F8(a1 + 5224))
  {
    if (!*(unsigned char *)(a1 + 7843)) {
      return 0;
    }
LABEL_14:
    uint64_t v4 = 7864;
    if (!*(unsigned char *)(a1 + 7906)) {
      uint64_t v4 = 7872;
    }
    uint64_t v5 = *(void *)(a1 + v4);
    double v6 = *(void **)(a1 + 2160);
    int v7 = *(_DWORD *)(a1 + 5188);
    if (*(unsigned char *)(a1 + 6296)) {
      uint64_t v8 = sub_62C47C(v6, v7);
    }
    else {
      uint64_t v8 = sub_62BD94(v6, v7);
    }
    uint64_t v9 = v8 + v5;
    if (!*(unsigned char *)(a1 + 6296)) {
      return *(void *)(a1 + 5192) >= v9;
    }
    if (*(void *)(a1 + 6112) >= v9) {
      return *(void *)(a1 + 6112) > sub_62C698(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    }
    return 0;
  }
  BOOL result = sub_63A908(a1 + 5224);
  if (result)
  {
    if (!*(unsigned char *)(a1 + 7844)) {
      return 0;
    }
    goto LABEL_14;
  }
  return result;
}

BOOL sub_84A704(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 2160);
  if (*(unsigned char *)(v2 + 1968) && *(_DWORD *)(a1 + 2144) == 3 || *(unsigned char *)(a1 + 7910) || *(unsigned char *)(a1 + 7984)) {
    return 0;
  }
  uint64_t v4 = sub_62BD94((void *)v2, *(_DWORD *)(a1 + 5188));
  uint64_t v5 = sub_62B9C8(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v6 = sub_62BA34(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (*(unsigned char *)(a1 + 2176)) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v6;
  }
  if (*(unsigned char *)(a1 + 7911))
  {
    uint64_t v8 = *(void *)(a1 + 7888);
  }
  else if (*(unsigned char *)(a1 + 7913))
  {
    uint64_t v9 = sub_62CA64(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    if (*(void *)(a1 + 7072) + v9 >= *(void *)(a1 + 5192)) {
      uint64_t v8 = *(void *)(a1 + 5192);
    }
    else {
      uint64_t v8 = *(void *)(a1 + 7072) + v9;
    }
    uint64_t v10 = (uint64_t *)(a1 + 7256);
    if (sub_564868((void *)(a1 + 7256)) && *v10 < v8) {
      uint64_t v8 = *v10;
    }
  }
  else
  {
    if (*(unsigned char *)(a1 + 7906))
    {
      uint64_t v11 = (uint64_t *)(a1 + 7864);
    }
    else if (*(unsigned char *)(a1 + 7912))
    {
      uint64_t v11 = (uint64_t *)(a1 + 7896);
    }
    else
    {
      uint64_t v11 = (uint64_t *)(a1 + 7872);
    }
    uint64_t v8 = *v11;
  }
  return v7 >= v8 + v4 && *(void *)(a1 + 5192) >= v7 + v4;
}

BOOL sub_84A8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_89E85C(a1 + 2200)) {
    return 1;
  }
  uint64_t v7 = *(void *)(a2 + 1072);
  uint64_t v8 = *(void *)(a2 + 1064);
  if (0x2FC962FC962FC963 * ((v7 - v8) >> 5) - 1 == a3) {
    return 0;
  }
  BOOL result = 0;
  int v9 = *(_DWORD *)(v8 + 2400 * a3 + 160);
  if (v9 != 16 && v9 != 89)
  {
    int v10 = *(unsigned __int8 *)(v8 + 2400 * a3 + 328);
    if (v10 == 2 || v10 == 4)
    {
      return 1;
    }
    else
    {
      uint64_t v12 = a3 + 1;
      int v13 = *(unsigned __int8 *)(v8 + 2400 * (a3 + 1) + 328);
      if (v13 == 2 || v13 == 4)
      {
        return 1;
      }
      else if ((v9 - 41) > 0x12 || (*(_DWORD *)(v8 + 2400 * v12 + 160) - 41) >= 0x13)
      {
        char v15 = *(void **)(a1 + 2160);
        if (*(unsigned char *)(v8 + 2400 * a3 + 893)) {
          uint64_t v16 = v15[6];
        }
        else {
          uint64_t v16 = sub_62CC54(v15, *(_DWORD *)(v8 + 2400 * a3 + 1860));
        }
        uint64_t v17 = v8 + 2400 * v12;
        uint64_t v18 = *(void *)(v17 + 872);
        int v19 = *(unsigned __int8 *)(v17 + 2225);
        return v18 <= v16 && v19 == 0;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_84AA34(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = (unsigned char *)(result + 5184);
  if (!*(unsigned char *)(result + 7911) && !*(unsigned char *)(result + 7912))
  {
    uint64_t v12 = *(void *)(result + 2160);
    if ((!*(unsigned char *)(v12 + 1968) || *(_DWORD *)(result + 2144) != 3)
      && *(unsigned char *)(v12 + 1970)
      && !*(unsigned char *)(result + 5186)
      && !*v2
      && *(unsigned char *)(result + 7804))
    {
      BOOL result = sub_63A8F8(result + 5224);
      if (result)
      {
        if (v2[2657]) {
          goto LABEL_3;
        }
      }
      else
      {
        BOOL result = sub_63A908(v1 + 5224);
        if (result && v2[2658]) {
          goto LABEL_3;
        }
      }
    }
    if (!v2[2724]) {
      return result;
    }
    char v3 = 0;
    uint64_t v4 = *(void *)(v1 + 7448) - *(void *)(v1 + 7440);
    if (!v4) {
      return result;
    }
    goto LABEL_4;
  }
LABEL_3:
  char v3 = 1;
  uint64_t v4 = *(void *)(v1 + 7448) - *(void *)(v1 + 7440);
  if (!v4) {
    return result;
  }
LABEL_4:
  uint64_t v5 = v4 / 336;
  if (v3)
  {
    uint64_t v6 = 336 * v5 - 336;
    char v7 = 1;
    do
    {
      uint64_t v8 = *(void *)(v1 + 7440) + v6;
      BOOL result = sub_683448(v8);
      if (result)
      {
        if (v7) {
          BOOL result = sub_684674(v8, 1);
        }
        else {
          BOOL result = sub_6846A0(v8, 1);
        }
        char v7 = 0;
      }
      v6 -= 336;
      --v5;
    }
    while (v5);
  }
  else
  {
    uint64_t v9 = 336 * v5 - 336;
    char v10 = 1;
    do
    {
      uint64_t v11 = *(void *)(v1 + 7440) + v9;
      BOOL result = sub_683448(v11);
      if (result)
      {
        if (v10)
        {
          BOOL result = sub_684674(v11, 1);
        }
        else if (v2[2724] && !*(_DWORD *)(v1 + 5188) && v2[340])
        {
          BOOL result = sub_6846CC(v11, 1);
        }
        char v10 = 0;
      }
      v9 -= 336;
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_84AC00(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6)
{
  return sub_8471FC(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_84AC08()
{
  uint64_t v0 = __chkstk_darwin();
  if (!*(unsigned char *)(v0 + 7914) || !*(unsigned char *)(v0 + 2182)) {
    return 0;
  }
  uint64_t v3 = v1;
  uint64_t v4 = *(unsigned char **)(v0 + 2160);
  if (!v4[1877]) {
    return 1;
  }
  sub_8471FC((uint64_t)v7, v4, *(void *)(v0 + 2168), v3, v2 + 1, *(_DWORD *)(v0 + 7988) - 1);
  BOOL v5 = !v7[7912] && !v7[7911] && !v7[7908] && v7[7913] == 0;
  sub_7C58FC((uint64_t)v7);
  return v5;
}

void sub_84AD34(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  if (a1[2180])
  {
    (*(void (**)(void **__return_ptr, unsigned char *))(*(void *)a1 + 32))(&v31, a1);
    unint64_t v4 = *(void *)(a2 + 8);
    if (v4 >= *(void *)(a2 + 16))
    {
      uint64_t v6 = sub_7576B4((void **)a2, (uint64_t)&v31);
    }
    else
    {
      sub_7574DC(v4, (uint64_t)&v31);
      uint64_t v6 = (void *)(v5 + 1080);
    }
    *(void *)(a2 + 8) = v6;
    sub_52F1E8((uint64_t)&v31);
  }
  if (a1[2181])
  {
    sub_84B118((uint64_t)a1, (uint64_t *)&v31);
    uint64_t v7 = (uint64_t)v31;
    uint64_t v8 = v32;
    if (v31 != v32)
    {
      uint64_t v9 = *(void **)(a2 + 8);
      do
      {
        if ((unint64_t)v9 < *(void *)(a2 + 16))
        {
          sub_7574DC((uint64_t)v9, v7);
          uint64_t v9 = (void *)(v10 + 1080);
        }
        else
        {
          uint64_t v9 = sub_7576B4((void **)a2, v7);
        }
        *(void *)(a2 + 8) = v9;
        v7 += 1080;
      }
      while ((void *)v7 != v8);
      uint64_t v7 = (uint64_t)v31;
    }
    if (v7)
    {
      uint64_t v11 = v32;
      uint64_t v12 = (void *)v7;
      if (v32 != (void *)v7)
      {
        do
          uint64_t v11 = sub_52F1E8((uint64_t)(v11 - 135));
        while (v11 != (void *)v7);
        uint64_t v12 = v31;
      }
      long long v32 = (void *)v7;
      operator delete(v12);
    }
  }
  (*(void (**)(void **__return_ptr, unsigned char *))(*(void *)a1 + 40))(&v31, a1);
  unint64_t v13 = *(void *)(a2 + 8);
  if (v13 >= *(void *)(a2 + 16))
  {
    char v15 = sub_7576B4((void **)a2, (uint64_t)&v31);
  }
  else
  {
    sub_7574DC(v13, (uint64_t)&v31);
    char v15 = (void *)(v14 + 1080);
  }
  *(void *)(a2 + 8) = v15;
  sub_52F1E8((uint64_t)&v31);
  if (a1[7908])
  {
    sub_84B470((uint64_t)a1, (uint64_t)&v31);
    unint64_t v16 = *(void *)(a2 + 8);
    if (v16 >= *(void *)(a2 + 16))
    {
      uint64_t v18 = sub_7576B4((void **)a2, (uint64_t)&v31);
    }
    else
    {
      sub_7574DC(v16, (uint64_t)&v31);
      uint64_t v18 = (void *)(v17 + 1080);
    }
    *(void *)(a2 + 8) = v18;
    sub_52F1E8((uint64_t)&v31);
  }
  sub_84B7EC((uint64_t)a1, (uint64_t *)&__p);
  int v19 = (char *)__p;
  uint64_t v20 = v30;
  if (__p != v30)
  {
    unsigned int v21 = *(void **)(a2 + 8);
    do
    {
      if ((unint64_t)v21 < *(void *)(a2 + 16))
      {
        sub_7574DC((uint64_t)v21, (uint64_t)v19);
        unsigned int v21 = (void *)(v22 + 1080);
      }
      else
      {
        unsigned int v21 = sub_7576B4((void **)a2, (uint64_t)v19);
      }
      *(void *)(a2 + 8) = v21;
      v19 += 1080;
    }
    while (v19 != v20);
  }
  sub_84BBF0((uint64_t)a1, (unint64_t *)a2);
  sub_7E6814((uint64_t)a1, (uint64_t)&v31);
  unint64_t v23 = *(void *)(a2 + 8);
  if (v23 >= *(void *)(a2 + 16))
  {
    uint64_t v25 = sub_7576B4((void **)a2, (uint64_t)&v31);
  }
  else
  {
    sub_7574DC(v23, (uint64_t)&v31);
    uint64_t v25 = (void *)(v24 + 1080);
  }
  *(void *)(a2 + 8) = v25;
  sub_52F1E8((uint64_t)&v31);
  BOOL v26 = (char *)__p;
  if (__p)
  {
    unint64_t v27 = v30;
    uint64_t v28 = __p;
    if (v30 != __p)
    {
      do
        unint64_t v27 = (char *)sub_52F1E8((uint64_t)(v27 - 1080));
      while (v27 != v26);
      uint64_t v28 = __p;
    }
    uint64_t v30 = v26;
    operator delete(v28);
  }
}

void sub_84B02C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_52F1E8((uint64_t)va);
  sub_591E78(v5);
  _Unwind_Resume(a1);
}

void sub_84B074(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_84B088(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_84B09C(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_84B0B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_591E78((void **)va);
  sub_591E78(v2);
  _Unwind_Resume(a1);
}

void sub_84B118(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v3 = *(unsigned __int8 *)(a1 + 2181);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  if (v3)
  {
    uint64_t v5 = *(uint64_t **)(a1 + 5152);
    uint64_t v6 = *(uint64_t **)(a1 + 5160);
    if (v5 != v6)
    {
      while (1)
      {
        uint64_t v7 = *v5;
        if (*v5 == 0x7FFFFFFFFFFFFFFFLL || v7 > *(void *)(a1 + 2152)) {
          break;
        }
        uint64_t v8 = *(unsigned char *)(a1 + 2176) ? 128 : 136;
        if (v7 < *(void *)(*(void *)(a1 + 2160) + v8)) {
          break;
        }
        if (++v5 == v6)
        {
          uint64_t v9 = 5144;
          if (!*(unsigned char *)(a1 + 2180)) {
            uint64_t v9 = 2152;
          }
          uint64_t v26 = *(void *)(a1 + v9);
          sub_891A64(a1 + 2200, (uint64_t)&v23);
          uint64_t v10 = v24;
          if (v24 != v23)
          {
            uint64_t v11 = 0;
            uint64_t v12 = 0;
            uint64_t v13 = ((char *)v24 - (char *)v23) / 72;
            do
            {
              sub_7C4620((uint64_t)v27, (uint64_t)&v23[v12], *(unsigned __int8 *)(*(void *)(a1 + 2160) + 418), 3, (void *)(a1 + 5176));
              sub_63841C((uint64_t)v27, 4);
              sub_638408((uint64_t)v27, &v26, (void *)(*(void *)(a1 + 5152) + v11));
              sub_5F3D48((uint64_t)v22, (uint64_t)&qword_25CA580);
              char v21 = 1;
              sub_5F6090(v22, (uint64_t)&qword_25CA580, &v26, &v21);
              sub_638E74((uint64_t)v27, (uint64_t)v22);
              unint64_t v15 = a2[1];
              if (v15 >= a2[2])
              {
                uint64_t v14 = sub_7572F4(a2, (uint64_t)v27);
              }
              else
              {
                sub_599644(a2[1], (uint64_t)v27);
                uint64_t v14 = v15 + 1080;
                a2[1] = v15 + 1080;
              }
              a2[1] = v14;
              uint64_t v26 = *(void *)(*(void *)(a1 + 5152) + v11);
              sub_4D4B58((uint64_t)v22);
              sub_52F1E8((uint64_t)v27);
              v12 += 9;
              v11 += 8;
              --v13;
            }
            while (v13);
            uint64_t v10 = v23;
          }
          if (v10)
          {
            int v19 = v24;
            uint64_t v20 = v10;
            if (v24 != v10)
            {
              do
              {
                v19 -= 9;
                sub_8728F4((uint64_t)&v25, v19);
              }
              while (v19 != v10);
              uint64_t v20 = v23;
            }
            uint64_t v24 = v10;
            operator delete(v20);
          }
          return;
        }
      }
    }
    sub_84F610(a1, (uint64_t)v27);
    unint64_t v16 = a2[1];
    if (v16 >= a2[2])
    {
      uint64_t v18 = sub_7576B4((void **)a2, (uint64_t)v27);
    }
    else
    {
      sub_7574DC(v16, (uint64_t)v27);
      uint64_t v18 = (void *)(v17 + 1080);
    }
    a2[1] = (uint64_t)v18;
    sub_52F1E8((uint64_t)v27);
  }
}

void sub_84B3C8(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_84B3DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  sub_52F1E8((uint64_t)&a34);
  sub_591E78(v34);
  _Unwind_Resume(a1);
}

void sub_84B3F8(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_84B40C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void **a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  *(void *)(v34 + 8) = v35;
  sub_4D4B58((uint64_t)&a10);
  sub_52F1E8((uint64_t)&a34);
  sub_84F7EC(&a30);
  sub_591E78((void **)v34);
  _Unwind_Resume(a1);
}

void sub_84B470(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_8927B8((_DWORD *)(a1 + 2200), a1 + 5344, (uint64_t)&v17);
  sub_7C47A4(a2, (uint64_t)&v17);
  uint64_t v4 = nullsub_1(&v17);
  sub_638D90(a2, v4);
  sub_7C43E4(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 418));
  v16[0] = 0;
  sub_638408(a2, (void *)(a1 + 5344), v16);
  uint64_t v5 = (unsigned char *)(a1 + 5524);
  int v6 = 8;
  switch(*(_DWORD *)(a1 + 2144))
  {
    case 2:
    case 0x15:
    case 0x1C:
    case 0x1E:
    case 0x22:
    case 0x3D:
    case 0x3F:
    case 0x42:
      if (!*v5) {
        goto LABEL_5;
      }
      goto LABEL_3;
    default:
      int v6 = 9;
      if (*v5)
      {
LABEL_3:
        int v7 = 7;
      }
      else
      {
LABEL_5:
        if (*(unsigned char *)(a1 + 5525)) {
          int v7 = 10;
        }
        else {
          int v7 = v6;
        }
      }
      sub_63841C(a2, v7);
      sub_5F3D48((uint64_t)v16, (uint64_t)&qword_25CA580);
      char v15 = 1;
      sub_5F6090(v16, (uint64_t)&qword_25CA580, (uint64_t *)(a1 + 5344), &v15);
      sub_638E74(a2, (uint64_t)v16);
      sub_638A0C(a2);
      sub_4D4B58((uint64_t)v16);
      uint64_t v8 = v21;
      if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      uint64_t v9 = v20;
      if (v20)
      {
        do
        {
          uint64_t v10 = (void *)*v9;
          sub_4F4B48((uint64_t)(v9 + 2));
          operator delete(v9);
          uint64_t v9 = v10;
        }
        while (v10);
      }
      uint64_t v11 = v19;
      int v19 = 0;
      if (v11) {
        operator delete(v11);
      }
      uint64_t v12 = v17;
      if (v17)
      {
        uint64_t v13 = v18;
        uint64_t v14 = v17;
        if (v18 != v17)
        {
          do
          {
            if (*((char *)v13 - 1) < 0) {
              operator delete(*(v13 - 3));
            }
            v13 -= 3;
          }
          while (v13 != v12);
          uint64_t v14 = v17;
        }
        uint64_t v18 = v12;
        operator delete(v14);
      }
      return;
  }
}

void sub_84B684(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_4D4B58((uint64_t)va);
  sub_52F1E8(v2);
  sub_4F31D0((void **)(v3 - 136));
  _Unwind_Resume(a1);
}

void sub_84B7EC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v3 = *(void *)(a1 + 7448) - *(void *)(a1 + 7440);
  if (v3)
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xCF3CF3CF3CF3CF3DLL * (v3 >> 4);
    int v7 = (unsigned char *)(a1 + 7803);
    while (1)
    {
      uint64_t v8 = (void *)(*(void *)(a1 + 7440) + 336 * v5);
      if ((!sub_683488((uint64_t)v8) || !*v7) && sub_6834B8(v8))
      {
        uint64_t v9 = sub_685CD8((uint64_t)v8);
        v32.n128_u64[0] = v9;
        v32.n128_u64[1] = v10;
        if (!*(unsigned char *)(a1 + 2180)) {
          goto LABEL_12;
        }
        int64_t v11 = *(void *)(a1 + 5144);
        if (v11 >= v10) {
          break;
        }
      }
LABEL_4:
      if (++v5 == v6) {
        return;
      }
    }
    if (v9 > v11 && v11 - v10 >= *(void *)(*(void *)(a1 + 2160) + 1504)) {
      v32.n128_u64[0] = *(void *)(a1 + 5144);
    }
LABEL_12:
    sub_676048((uint64_t)v8, (uint64_t)&v28);
    sub_7C43EC(v33, &v28, 0);
    sub_7C47A8((uint64_t)v33, v5);
    sub_638424((uint64_t)v33, &v32);
    if (sub_683488((uint64_t)v8)) {
      int v12 = 17;
    }
    else {
      int v12 = 16;
    }
    sub_63841C((uint64_t)v33, v12);
    BOOL v13 = sub_683488((uint64_t)v8);
    uint64_t v14 = 416;
    if (v13) {
      uint64_t v14 = 418;
    }
    sub_7C43E4((uint64_t)v33, *(unsigned __int8 *)(*(void *)(a1 + 2160) + v14));
    if (sub_68346C((uint64_t)v8))
    {
      sub_5F3D48((uint64_t)v27, (uint64_t)&unk_25CA598);
      v25[0] = sub_638A20((uint64_t)v33);
      v25[1] = v15;
      uint64_t v26 = sub_6383A0(v25);
      char v24 = 1;
      sub_5F6090(v27, (uint64_t)&unk_25CA598, &v26, &v24);
      sub_638E74((uint64_t)v33, (uint64_t)v27);
      sub_4D4B58((uint64_t)v27);
    }
    unint64_t v16 = a2[1];
    if (v16 >= a2[2])
    {
      uint64_t v17 = sub_7572F4(a2, (uint64_t)v33);
    }
    else
    {
      sub_599644(a2[1], (uint64_t)v33);
      uint64_t v17 = v16 + 1080;
      a2[1] = v16 + 1080;
    }
    a2[1] = v17;
    sub_52F1E8((uint64_t)v33);
    uint64_t v18 = v31;
    if (!v31)
    {
LABEL_23:
      int v19 = v30;
      uint64_t v30 = 0;
      if (v19) {
        operator delete(v19);
      }
      uint64_t v20 = v28;
      if (v28)
      {
        char v21 = v29;
        uint64_t v22 = v28;
        if (v29 != v28)
        {
          do
          {
            if (*((char *)v21 - 1) < 0) {
              operator delete(*(v21 - 3));
            }
            v21 -= 3;
          }
          while (v21 != v20);
          uint64_t v22 = v28;
        }
        long long v29 = v20;
        operator delete(v22);
      }
      goto LABEL_4;
    }
    while (1)
    {
      unint64_t v23 = (void **)*v18;
      if (*((char *)v18 + 191) < 0)
      {
        operator delete(v18[21]);
        if ((*((char *)v18 + 159) & 0x80000000) == 0)
        {
LABEL_31:
          if ((*((char *)v18 + 135) & 0x80000000) == 0) {
            goto LABEL_32;
          }
          goto LABEL_38;
        }
      }
      else if ((*((char *)v18 + 159) & 0x80000000) == 0)
      {
        goto LABEL_31;
      }
      operator delete(v18[17]);
      if ((*((char *)v18 + 135) & 0x80000000) == 0)
      {
LABEL_32:
        if ((*((char *)v18 + 95) & 0x80000000) == 0) {
          goto LABEL_33;
        }
        goto LABEL_39;
      }
LABEL_38:
      operator delete(v18[14]);
      if ((*((char *)v18 + 95) & 0x80000000) == 0)
      {
LABEL_33:
        if ((*((char *)v18 + 63) & 0x80000000) == 0) {
          goto LABEL_34;
        }
        goto LABEL_40;
      }
LABEL_39:
      operator delete(v18[9]);
      if ((*((char *)v18 + 63) & 0x80000000) == 0)
      {
LABEL_34:
        if (*((char *)v18 + 39) < 0) {
          goto LABEL_41;
        }
        goto LABEL_28;
      }
LABEL_40:
      operator delete(v18[5]);
      if (*((char *)v18 + 39) < 0) {
LABEL_41:
      }
        operator delete(v18[2]);
LABEL_28:
      operator delete(v18);
      uint64_t v18 = v23;
      if (!v23) {
        goto LABEL_23;
      }
    }
  }
}

void sub_84BB4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  *(void *)(v44 + 8) = v45;
  sub_52F1E8((uint64_t)&a44);
  sub_4D4880(&a33);
  sub_591E78((void **)v44);
  _Unwind_Resume(a1);
}

void sub_84BBF0(uint64_t a1, unint64_t *a2)
{
  if (*a2 != a2[1])
  {
    uint64_t v4 = sub_62BE00(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v5 = *(void *)(*(void *)(a1 + 2160) + 1504);
    int v7 = (void *)*a2;
    unint64_t v6 = a2[1];
    unint64_t v8 = 126 - 2 * __clz(0x1A8C536FE1A8C537 * ((uint64_t)(v6 - *a2) >> 3));
    BOOL v9 = v6 == *a2;
    v14[0] = v4;
    v14[1] = v5;
    _DWORD v14[2] = a1;
    if (v9) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v8;
    }
    sub_873AF0(v7, v6, (uint64_t)&v15, v10, 1);
    sub_84FB90(v14, a2);
    unint64_t v11 = a2[1];
    unint64_t v12 = 126 - 2 * __clz(0x1A8C536FE1A8C537 * ((uint64_t)(v11 - *a2) >> 3));
    if (v11 == *a2) {
      uint64_t v13 = 0;
    }
    else {
      uint64_t v13 = v12;
    }
    sub_875EE8((void *)*a2, v11, (uint64_t)&v15, v13, 1);
    sub_84FB90(v14, a2);
  }
}

void *sub_84BCD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void **a3@<X8>)
{
  BOOL result = (*(void *(**)(void **__return_ptr))(*(void *)a1 + 16))(a3);
  if (*(unsigned char *)(a1 + 7914))
  {
    int v7 = sub_89E85C(a1 + 2200);
    sub_84BE5C(a1, a2, *(void *)(a1 + 2192) + (v7 ^ 1u), (uint64_t)v14);
    unint64_t v8 = (unint64_t)a3[1];
    if (v8 >= (unint64_t)a3[2])
    {
      uint64_t v10 = sub_7576B4(a3, (uint64_t)v14);
    }
    else
    {
      sub_7574DC(v8, (uint64_t)v14);
      uint64_t v10 = (void *)(v9 + 1080);
    }
    a3[1] = v10;
    BOOL result = sub_52F1E8((uint64_t)v14);
  }
  unint64_t v11 = *a3;
  unint64_t v12 = a3[1];
  while (v11 != v12)
  {
    BOOL result = (void *)sub_638AF0(v11);
    if ((result & 1) == 0)
    {
      int v13 = *(_DWORD *)(a1 + 7916);
      *(_DWORD *)(a1 + 7916) = v13 + 1;
      BOOL result = sub_BB6C(v11, v13);
    }
    v11 += 270;
  }
  return result;
}

void sub_84BE04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_52F1E8((uint64_t)&a9);
  sub_591E78(v9);
  _Unwind_Resume(a1);
}

void sub_84BE20(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_84BE34(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_84BE48(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_84BE5C(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 + 1064);
  uint64_t v9 = a1 + 2200;
  sub_892F54(a1 + 2200, a2, a3, (uint64_t)&v29);
  sub_7C47A4(a4, (uint64_t)&v29);
  uint64_t v10 = nullsub_1(&v29);
  sub_638D90(a4, v10);
  sub_7C43E4(a4, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 419));
  unint64_t v11 = *(void **)(a1 + 2160);
  if (*(unsigned char *)(a1 + 2179))
  {
    uint64_t v12 = sub_62B9C8(v11, *(_DWORD *)(a1 + 5188));
    uint64_t v13 = sub_62BA34(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    if (*(unsigned char *)(a1 + 2176)) {
      uint64_t v14 = v12;
    }
    else {
      uint64_t v14 = v13;
    }
  }
  else
  {
    uint64_t v14 = v11[3];
  }
  if (*(void *)(a1 + 2152) < v14) {
    uint64_t v14 = *(void *)(a1 + 2152);
  }
  uint64_t v27 = 0;
  uint64_t v28 = v14;
  sub_638408(a4, &v28, &v27);
  if (sub_89E85C(v9))
  {
    int v15 = 13;
  }
  else if (*(unsigned char *)(a1 + 5184))
  {
    int v15 = 12;
  }
  else
  {
    int v15 = 11;
  }
  sub_63841C(a4, v15);
  int v16 = *(_DWORD *)(v8 + 2400 * a3 + 160);
  if ((v16 & 0xFFFFFFFE) != 6 && (v16 - 41) > 0x12)
  {
    sub_7C43DC(a4, v16);
  }
  else
  {
    uint64_t v18 = v8 + 2400 * a3;
    int v19 = (char *)(v18 + 329);
    if (!*(unsigned char *)(v18 + 330)) {
      int v19 = (char *)(a2 + 1057);
    }
    sub_7C4888(a4, v18 + 176, *v19);
  }
  uint64_t v20 = v33;
  if (v33 && !atomic_fetch_add(&v33->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
  }
  char v21 = v32;
  if (v32)
  {
    do
    {
      uint64_t v22 = (void *)*v21;
      sub_4F4B48((uint64_t)(v21 + 2));
      operator delete(v21);
      char v21 = v22;
    }
    while (v22);
  }
  unint64_t v23 = __p;
  long long __p = 0;
  if (v23) {
    operator delete(v23);
  }
  char v24 = (void **)v29;
  if (v29)
  {
    uint64_t v25 = v30;
    uint64_t v26 = v29;
    if (v30 != v29)
    {
      do
      {
        if (*((char *)v25 - 1) < 0) {
          operator delete(*(v25 - 3));
        }
        v25 -= 3;
      }
      while (v25 != v24);
      uint64_t v26 = v29;
    }
    uint64_t v30 = v24;
    operator delete(v26);
  }
}

void sub_84C090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_52F1E8(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_84C0D0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 2182);
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 2192) + 1;
    char v3 = 1;
    if (*(unsigned char *)(a1 + 2179))
    {
LABEL_3:
      uint64_t v8 = v4;
      char v9 = v3;
      *(_DWORD *)uint64_t v10 = v11[0];
      *(_DWORD *)&v10[3] = *(_DWORD *)((char *)v11 + 3);
      sub_84C168(a1, a2, (unint64_t *)&v8, a3);
      return;
    }
  }
  else
  {
    uint64_t v4 = 0;
    *(_DWORD *)((char *)v11 + 3) = 0;
    v11[0] = 0;
    if (*(unsigned char *)(a1 + 2179)) {
      goto LABEL_3;
    }
  }
  uint64_t v5 = v4;
  char v6 = v3;
  *(_DWORD *)int v7 = v11[0];
  *(_DWORD *)&v7[3] = *(_DWORD *)((char *)v11 + 3);
  sub_84DE4C((unsigned char *)a1, a2, (uint64_t)&v5, a3);
}

void sub_84C168(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  if (*(unsigned char *)(a1 + 2180))
  {
    sub_84FF7C(a1, (uint64_t)&v204);
    unint64_t v8 = a4[1];
    if (v8 >= a4[2])
    {
      uint64_t v18 = sub_757E08(a4, (uint64_t)&v204);
      int v19 = __p;
      a4[1] = v18;
      if (v19)
      {
        size_t v233 = v19;
        operator delete(v19);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v8 = v204;
      *(void *)(v8 + 16) = 0;
      *(void *)(v8 + 24) = 0;
      *(void *)(v8 + 8) = 0;
      *(_OWORD *)(v8 + 8) = *(_OWORD *)v205;
      *(void *)(v8 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v9 = v209;
      long long v10 = v207;
      *(_OWORD *)(v8 + 48) = v208;
      *(_OWORD *)(v8 + 64) = v9;
      *(_OWORD *)(v8 + 32) = v10;
      uint64_t v11 = v212;
      long long v12 = v211;
      *(_OWORD *)(v8 + 80) = v210;
      *(_OWORD *)(v8 + 96) = v12;
      *(void *)(v8 + 112) = v11;
      *(void *)(v8 + 120) = 0;
      *(void *)(v8 + 128) = 0;
      *(void *)(v8 + 136) = 0;
      *(_OWORD *)(v8 + 120) = v213;
      *(void *)(v8 + 136) = v214;
      *(void *)(v8 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v8 + 152) = 0;
      *(void *)(v8 + 160) = 0;
      *(_OWORD *)(v8 + 144) = v215;
      *(void *)(v8 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v8 + 168) = v217;
      *(_DWORD *)(v8 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v8 + 184) = v218;
      }
      *(_OWORD *)(v8 + 200) = v220;
      long long v13 = v221;
      uint64_t v14 = v223;
      *(_OWORD *)(v8 + 232) = v222;
      *(_OWORD *)(v8 + 216) = v13;
      *(void *)(v8 + 248) = v14;
      *(void *)(v8 + 256) = 0;
      *(void *)(v8 + 264) = 0;
      *(void *)(v8 + 272) = 0;
      *(_OWORD *)(v8 + 256) = v224;
      *(void *)(v8 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v8 + 280) = v226;
      *(void *)(v8 + 288) = 0;
      *(void *)(v8 + 296) = 0;
      *(void *)(v8 + 304) = 0;
      *(_OWORD *)(v8 + 288) = v227;
      *(void *)(v8 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v15 = *(_OWORD *)v229;
      *(_OWORD *)(v8 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v8 + 312) = v15;
      long long v16 = v230;
      *(_DWORD *)(v8 + 356) = v231;
      *(_OWORD *)(v8 + 340) = v16;
      *(void *)(v8 + 360) = 0;
      *(void *)(v8 + 368) = 0;
      *(void *)(v8 + 376) = 0;
      *(void *)(v8 + 360) = __p;
      *(void *)(v8 + 368) = v233;
      *(void *)(v8 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v17 = v235;
      *(_DWORD *)(v8 + 400) = v236;
      *(_OWORD *)(v8 + 384) = v17;
      a4[1] = v8 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v20 = (void **)v224;
    if ((void)v224)
    {
      char v21 = (void **)*((void *)&v224 + 1);
      uint64_t v22 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          char v21 = sub_4F31D0(v21 - 13);
        while (v21 != v20);
        uint64_t v22 = (void *)v224;
      }
      *((void *)&v224 + 1) = v20;
      operator delete(v22);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    unint64_t v23 = v205[0];
    if (v205[0])
    {
      char v24 = v205[1];
      uint64_t v25 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          char v24 = (void *)sub_4D4B58((uint64_t)v24 - 160);
        while (v24 != v23);
        uint64_t v25 = v205[0];
      }
      v205[1] = v23;
      operator delete(v25);
    }
  }
  if (*(unsigned char *)(a1 + 2181))
  {
    sub_850218(a1, (uint64_t *)&v204);
    sub_878048(a4, (void *)a4[1], (uint64_t)v204, (uint64_t)v205[0], 0xFAFAFAFAFAFAFAFBLL * (((char *)v205[0] - (char *)v204) >> 3));
    uint64_t v26 = v204;
    if (v204)
    {
      uint64_t v27 = v205[0];
      uint64_t v28 = v204;
      if (v205[0] != v204)
      {
        do
        {
          long long v29 = (void *)*(v27 - 6);
          if (v29)
          {
            *(v27 - 5) = v29;
            operator delete(v29);
          }
          v27 -= 51;
          sub_4F32CC(v27);
        }
        while (v27 != v26);
        uint64_t v28 = v204;
      }
      v205[0] = v26;
      operator delete(v28);
    }
  }
  if (*(unsigned char *)(a1 + 7904))
  {
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 56))(&v204, a1);
    unint64_t v30 = a4[1];
    if (v30 >= a4[2])
    {
      uint64_t v40 = sub_757E08(a4, (uint64_t)&v204);
      uint64_t v41 = __p;
      a4[1] = v40;
      if (v41)
      {
        size_t v233 = v41;
        operator delete(v41);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v30 = v204;
      *(void *)(v30 + 16) = 0;
      *(void *)(v30 + 24) = 0;
      *(void *)(v30 + 8) = 0;
      *(_OWORD *)(v30 + 8) = *(_OWORD *)v205;
      *(void *)(v30 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v31 = v209;
      long long v32 = v207;
      *(_OWORD *)(v30 + 48) = v208;
      *(_OWORD *)(v30 + 64) = v31;
      *(_OWORD *)(v30 + 32) = v32;
      uint64_t v33 = v212;
      long long v34 = v211;
      *(_OWORD *)(v30 + 80) = v210;
      *(_OWORD *)(v30 + 96) = v34;
      *(void *)(v30 + 112) = v33;
      *(void *)(v30 + 120) = 0;
      *(void *)(v30 + 128) = 0;
      *(void *)(v30 + 136) = 0;
      *(_OWORD *)(v30 + 120) = v213;
      *(void *)(v30 + 136) = v214;
      *(void *)(v30 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v30 + 152) = 0;
      *(void *)(v30 + 160) = 0;
      *(_OWORD *)(v30 + 144) = v215;
      *(void *)(v30 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v30 + 168) = v217;
      *(_DWORD *)(v30 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v30 + 184) = v218;
      }
      *(_OWORD *)(v30 + 200) = v220;
      long long v35 = v221;
      uint64_t v36 = v223;
      *(_OWORD *)(v30 + 232) = v222;
      *(_OWORD *)(v30 + 216) = v35;
      *(void *)(v30 + 248) = v36;
      *(void *)(v30 + 256) = 0;
      *(void *)(v30 + 264) = 0;
      *(void *)(v30 + 272) = 0;
      *(_OWORD *)(v30 + 256) = v224;
      *(void *)(v30 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v30 + 280) = v226;
      *(void *)(v30 + 288) = 0;
      *(void *)(v30 + 296) = 0;
      *(void *)(v30 + 304) = 0;
      *(_OWORD *)(v30 + 288) = v227;
      *(void *)(v30 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v37 = *(_OWORD *)v229;
      *(_OWORD *)(v30 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v30 + 312) = v37;
      long long v38 = v230;
      *(_DWORD *)(v30 + 356) = v231;
      *(_OWORD *)(v30 + 340) = v38;
      *(void *)(v30 + 360) = 0;
      *(void *)(v30 + 368) = 0;
      *(void *)(v30 + 376) = 0;
      *(void *)(v30 + 360) = __p;
      *(void *)(v30 + 368) = v233;
      *(void *)(v30 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v39 = v235;
      *(_DWORD *)(v30 + 400) = v236;
      *(_OWORD *)(v30 + 384) = v39;
      a4[1] = v30 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v42 = (void **)v224;
    if ((void)v224)
    {
      uint64_t v43 = (void **)*((void *)&v224 + 1);
      uint64_t v44 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          uint64_t v43 = sub_4F31D0(v43 - 13);
        while (v43 != v42);
        uint64_t v44 = (void *)v224;
      }
      *((void *)&v224 + 1) = v42;
      operator delete(v44);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    uint64_t v45 = v205[0];
    if (v205[0])
    {
      unsigned __int16 v46 = v205[1];
      uint64_t v47 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          unsigned __int16 v46 = (void *)sub_4D4B58((uint64_t)v46 - 160);
        while (v46 != v45);
        uint64_t v47 = v205[0];
      }
      v205[1] = v45;
      operator delete(v47);
    }
  }
  if (*(unsigned char *)(a1 + 7905))
  {
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 64))(&v204, a1);
    unint64_t v48 = a4[1];
    if (v48 >= a4[2])
    {
      uint64_t v58 = sub_757E08(a4, (uint64_t)&v204);
      long long v59 = __p;
      a4[1] = v58;
      if (v59)
      {
        size_t v233 = v59;
        operator delete(v59);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v48 = v204;
      *(void *)(v48 + 16) = 0;
      *(void *)(v48 + 24) = 0;
      *(void *)(v48 + 8) = 0;
      *(_OWORD *)(v48 + 8) = *(_OWORD *)v205;
      *(void *)(v48 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v49 = v209;
      long long v50 = v207;
      *(_OWORD *)(v48 + 48) = v208;
      *(_OWORD *)(v48 + 64) = v49;
      *(_OWORD *)(v48 + 32) = v50;
      uint64_t v51 = v212;
      long long v52 = v211;
      *(_OWORD *)(v48 + 80) = v210;
      *(_OWORD *)(v48 + 96) = v52;
      *(void *)(v48 + 112) = v51;
      *(void *)(v48 + 120) = 0;
      *(void *)(v48 + 128) = 0;
      *(void *)(v48 + 136) = 0;
      *(_OWORD *)(v48 + 120) = v213;
      *(void *)(v48 + 136) = v214;
      *(void *)(v48 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v48 + 152) = 0;
      *(void *)(v48 + 160) = 0;
      *(_OWORD *)(v48 + 144) = v215;
      *(void *)(v48 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v48 + 168) = v217;
      *(_DWORD *)(v48 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v48 + 184) = v218;
      }
      *(_OWORD *)(v48 + 200) = v220;
      long long v53 = v221;
      uint64_t v54 = v223;
      *(_OWORD *)(v48 + 232) = v222;
      *(_OWORD *)(v48 + 216) = v53;
      *(void *)(v48 + 248) = v54;
      *(void *)(v48 + 256) = 0;
      *(void *)(v48 + 264) = 0;
      *(void *)(v48 + 272) = 0;
      *(_OWORD *)(v48 + 256) = v224;
      *(void *)(v48 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v48 + 280) = v226;
      *(void *)(v48 + 288) = 0;
      *(void *)(v48 + 296) = 0;
      *(void *)(v48 + 304) = 0;
      *(_OWORD *)(v48 + 288) = v227;
      *(void *)(v48 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v55 = *(_OWORD *)v229;
      *(_OWORD *)(v48 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v48 + 312) = v55;
      long long v56 = v230;
      *(_DWORD *)(v48 + 356) = v231;
      *(_OWORD *)(v48 + 340) = v56;
      *(void *)(v48 + 360) = 0;
      *(void *)(v48 + 368) = 0;
      *(void *)(v48 + 376) = 0;
      *(void *)(v48 + 360) = __p;
      *(void *)(v48 + 368) = v233;
      *(void *)(v48 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v57 = v235;
      *(_DWORD *)(v48 + 400) = v236;
      *(_OWORD *)(v48 + 384) = v57;
      a4[1] = v48 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    unint64_t v60 = (void **)v224;
    if ((void)v224)
    {
      uint64_t v61 = (void **)*((void *)&v224 + 1);
      long long v62 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          uint64_t v61 = sub_4F31D0(v61 - 13);
        while (v61 != v60);
        long long v62 = (void *)v224;
      }
      *((void *)&v224 + 1) = v60;
      operator delete(v62);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    uint64_t v63 = v205[0];
    if (v205[0])
    {
      uint64_t v64 = v205[1];
      __int16 v65 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          uint64_t v64 = (void *)sub_4D4B58((uint64_t)v64 - 160);
        while (v64 != v63);
        __int16 v65 = v205[0];
      }
      v205[1] = v63;
      operator delete(v65);
    }
  }
  if (*(unsigned char *)(a1 + 7908))
  {
    sub_851428(a1, (uint64_t)&v204);
    unint64_t v66 = a4[1];
    if (v66 >= a4[2])
    {
      uint64_t v76 = sub_757E08(a4, (uint64_t)&v204);
      uint64_t v77 = __p;
      a4[1] = v76;
      if (v77)
      {
        size_t v233 = v77;
        operator delete(v77);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v66 = v204;
      *(void *)(v66 + 16) = 0;
      *(void *)(v66 + 24) = 0;
      *(void *)(v66 + 8) = 0;
      *(_OWORD *)(v66 + 8) = *(_OWORD *)v205;
      *(void *)(v66 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v67 = v209;
      long long v68 = v207;
      *(_OWORD *)(v66 + 48) = v208;
      *(_OWORD *)(v66 + 64) = v67;
      *(_OWORD *)(v66 + 32) = v68;
      uint64_t v69 = v212;
      long long v70 = v211;
      *(_OWORD *)(v66 + 80) = v210;
      *(_OWORD *)(v66 + 96) = v70;
      *(void *)(v66 + 112) = v69;
      *(void *)(v66 + 120) = 0;
      *(void *)(v66 + 128) = 0;
      *(void *)(v66 + 136) = 0;
      *(_OWORD *)(v66 + 120) = v213;
      *(void *)(v66 + 136) = v214;
      *(void *)(v66 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v66 + 152) = 0;
      *(void *)(v66 + 160) = 0;
      *(_OWORD *)(v66 + 144) = v215;
      *(void *)(v66 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v66 + 168) = v217;
      *(_DWORD *)(v66 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v66 + 184) = v218;
      }
      *(_OWORD *)(v66 + 200) = v220;
      long long v71 = v221;
      uint64_t v72 = v223;
      *(_OWORD *)(v66 + 232) = v222;
      *(_OWORD *)(v66 + 216) = v71;
      *(void *)(v66 + 248) = v72;
      *(void *)(v66 + 256) = 0;
      *(void *)(v66 + 264) = 0;
      *(void *)(v66 + 272) = 0;
      *(_OWORD *)(v66 + 256) = v224;
      *(void *)(v66 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v66 + 280) = v226;
      *(void *)(v66 + 288) = 0;
      *(void *)(v66 + 296) = 0;
      *(void *)(v66 + 304) = 0;
      *(_OWORD *)(v66 + 288) = v227;
      *(void *)(v66 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v73 = *(_OWORD *)v229;
      *(_OWORD *)(v66 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v66 + 312) = v73;
      long long v74 = v230;
      *(_DWORD *)(v66 + 356) = v231;
      *(_OWORD *)(v66 + 340) = v74;
      *(void *)(v66 + 360) = 0;
      *(void *)(v66 + 368) = 0;
      *(void *)(v66 + 376) = 0;
      *(void *)(v66 + 360) = __p;
      *(void *)(v66 + 368) = v233;
      *(void *)(v66 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v75 = v235;
      *(_DWORD *)(v66 + 400) = v236;
      *(_OWORD *)(v66 + 384) = v75;
      a4[1] = v66 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    int v78 = (void **)v224;
    if ((void)v224)
    {
      uint64_t v79 = (void **)*((void *)&v224 + 1);
      uint64_t v80 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          uint64_t v79 = sub_4F31D0(v79 - 13);
        while (v79 != v78);
        uint64_t v80 = (void *)v224;
      }
      *((void *)&v224 + 1) = v78;
      operator delete(v80);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    long long v81 = v205[0];
    if (v205[0])
    {
      uint64_t v82 = v205[1];
      int v83 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          uint64_t v82 = (void *)sub_4D4B58((uint64_t)v82 - 160);
        while (v82 != v81);
        int v83 = v205[0];
      }
      v205[1] = v81;
      operator delete(v83);
    }
  }
  if (*(unsigned char *)(a1 + 7910))
  {
    sub_851220(a1, (uint64_t)&v204);
    unint64_t v84 = a4[1];
    if (v84 >= a4[2])
    {
      uint64_t v94 = sub_757E08(a4, (uint64_t)&v204);
      uint64_t v95 = __p;
      a4[1] = v94;
      if (v95)
      {
        size_t v233 = v95;
        operator delete(v95);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v84 = v204;
      *(void *)(v84 + 16) = 0;
      *(void *)(v84 + 24) = 0;
      *(void *)(v84 + 8) = 0;
      *(_OWORD *)(v84 + 8) = *(_OWORD *)v205;
      *(void *)(v84 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v85 = v209;
      long long v86 = v207;
      *(_OWORD *)(v84 + 48) = v208;
      *(_OWORD *)(v84 + 64) = v85;
      *(_OWORD *)(v84 + 32) = v86;
      uint64_t v87 = v212;
      long long v88 = v211;
      *(_OWORD *)(v84 + 80) = v210;
      *(_OWORD *)(v84 + 96) = v88;
      *(void *)(v84 + 112) = v87;
      *(void *)(v84 + 120) = 0;
      *(void *)(v84 + 128) = 0;
      *(void *)(v84 + 136) = 0;
      *(_OWORD *)(v84 + 120) = v213;
      *(void *)(v84 + 136) = v214;
      *(void *)(v84 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v84 + 152) = 0;
      *(void *)(v84 + 160) = 0;
      *(_OWORD *)(v84 + 144) = v215;
      *(void *)(v84 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v84 + 168) = v217;
      *(_DWORD *)(v84 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v84 + 184) = v218;
      }
      *(_OWORD *)(v84 + 200) = v220;
      long long v89 = v221;
      uint64_t v90 = v223;
      *(_OWORD *)(v84 + 232) = v222;
      *(_OWORD *)(v84 + 216) = v89;
      *(void *)(v84 + 248) = v90;
      *(void *)(v84 + 256) = 0;
      *(void *)(v84 + 264) = 0;
      *(void *)(v84 + 272) = 0;
      *(_OWORD *)(v84 + 256) = v224;
      *(void *)(v84 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v84 + 280) = v226;
      *(void *)(v84 + 288) = 0;
      *(void *)(v84 + 296) = 0;
      *(void *)(v84 + 304) = 0;
      *(_OWORD *)(v84 + 288) = v227;
      *(void *)(v84 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v91 = *(_OWORD *)v229;
      *(_OWORD *)(v84 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v84 + 312) = v91;
      long long v92 = v230;
      *(_DWORD *)(v84 + 356) = v231;
      *(_OWORD *)(v84 + 340) = v92;
      *(void *)(v84 + 360) = 0;
      *(void *)(v84 + 368) = 0;
      *(void *)(v84 + 376) = 0;
      *(void *)(v84 + 360) = __p;
      *(void *)(v84 + 368) = v233;
      *(void *)(v84 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v93 = v235;
      *(_DWORD *)(v84 + 400) = v236;
      *(_OWORD *)(v84 + 384) = v93;
      a4[1] = v84 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v96 = (void **)v224;
    if ((void)v224)
    {
      uint64_t v97 = (void **)*((void *)&v224 + 1);
      char v98 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          uint64_t v97 = sub_4F31D0(v97 - 13);
        while (v97 != v96);
        char v98 = (void *)v224;
      }
      *((void *)&v224 + 1) = v96;
      operator delete(v98);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    char v99 = v205[0];
    if (v205[0])
    {
      long long v100 = v205[1];
      long long v101 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          long long v100 = (void *)sub_4D4B58((uint64_t)v100 - 160);
        while (v100 != v99);
        long long v101 = v205[0];
      }
      v205[1] = v99;
      operator delete(v101);
    }
  }
  if (*(unsigned char *)(a1 + 7911))
  {
    sub_850FF4(a1, (uint64_t)&v204);
    unint64_t v102 = a4[1];
    if (v102 >= a4[2])
    {
      uint64_t v112 = sub_757E08(a4, (uint64_t)&v204);
      uint64_t v113 = __p;
      a4[1] = v112;
      if (v113)
      {
        size_t v233 = v113;
        operator delete(v113);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v102 = v204;
      *(void *)(v102 + 16) = 0;
      *(void *)(v102 + 24) = 0;
      *(void *)(v102 + 8) = 0;
      *(_OWORD *)(v102 + 8) = *(_OWORD *)v205;
      *(void *)(v102 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v103 = v209;
      long long v104 = v207;
      *(_OWORD *)(v102 + 48) = v208;
      *(_OWORD *)(v102 + 64) = v103;
      *(_OWORD *)(v102 + 32) = v104;
      uint64_t v105 = v212;
      long long v106 = v211;
      *(_OWORD *)(v102 + 80) = v210;
      *(_OWORD *)(v102 + 96) = v106;
      *(void *)(v102 + 112) = v105;
      *(void *)(v102 + 120) = 0;
      *(void *)(v102 + 128) = 0;
      *(void *)(v102 + 136) = 0;
      *(_OWORD *)(v102 + 120) = v213;
      *(void *)(v102 + 136) = v214;
      *(void *)(v102 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v102 + 152) = 0;
      *(void *)(v102 + 160) = 0;
      *(_OWORD *)(v102 + 144) = v215;
      *(void *)(v102 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v102 + 168) = v217;
      *(_DWORD *)(v102 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v102 + 184) = v218;
      }
      *(_OWORD *)(v102 + 200) = v220;
      long long v107 = v221;
      uint64_t v108 = v223;
      *(_OWORD *)(v102 + 232) = v222;
      *(_OWORD *)(v102 + 216) = v107;
      *(void *)(v102 + 248) = v108;
      *(void *)(v102 + 256) = 0;
      *(void *)(v102 + 264) = 0;
      *(void *)(v102 + 272) = 0;
      *(_OWORD *)(v102 + 256) = v224;
      *(void *)(v102 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v102 + 280) = v226;
      *(void *)(v102 + 288) = 0;
      *(void *)(v102 + 296) = 0;
      *(void *)(v102 + 304) = 0;
      *(_OWORD *)(v102 + 288) = v227;
      *(void *)(v102 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v109 = *(_OWORD *)v229;
      *(_OWORD *)(v102 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v102 + 312) = v109;
      long long v110 = v230;
      *(_DWORD *)(v102 + 356) = v231;
      *(_OWORD *)(v102 + 340) = v110;
      *(void *)(v102 + 360) = 0;
      *(void *)(v102 + 368) = 0;
      *(void *)(v102 + 376) = 0;
      *(void *)(v102 + 360) = __p;
      *(void *)(v102 + 368) = v233;
      *(void *)(v102 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v111 = v235;
      *(_DWORD *)(v102 + 400) = v236;
      *(_OWORD *)(v102 + 384) = v111;
      a4[1] = v102 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v114 = (void **)v224;
    if ((void)v224)
    {
      long long v115 = (void **)*((void *)&v224 + 1);
      int v116 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          long long v115 = sub_4F31D0(v115 - 13);
        while (v115 != v114);
        int v116 = (void *)v224;
      }
      *((void *)&v224 + 1) = v114;
      operator delete(v116);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    uint64_t v117 = v205[0];
    if (v205[0])
    {
      uint64_t v118 = v205[1];
      int v119 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          uint64_t v118 = (void *)sub_4D4B58((uint64_t)v118 - 160);
        while (v118 != v117);
        int v119 = v205[0];
      }
      v205[1] = v117;
      operator delete(v119);
    }
  }
  if (*(unsigned char *)(a1 + 7913))
  {
    sub_851CF0(a1, (uint64_t)&v204);
    unint64_t v120 = a4[1];
    if (v120 >= a4[2])
    {
      uint64_t v130 = sub_757E08(a4, (uint64_t)&v204);
      uint64_t v131 = __p;
      a4[1] = v130;
      if (v131)
      {
        size_t v233 = v131;
        operator delete(v131);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v120 = v204;
      *(void *)(v120 + 16) = 0;
      *(void *)(v120 + 24) = 0;
      *(void *)(v120 + 8) = 0;
      *(_OWORD *)(v120 + 8) = *(_OWORD *)v205;
      *(void *)(v120 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v121 = v209;
      long long v122 = v207;
      *(_OWORD *)(v120 + 48) = v208;
      *(_OWORD *)(v120 + 64) = v121;
      *(_OWORD *)(v120 + 32) = v122;
      uint64_t v123 = v212;
      long long v124 = v211;
      *(_OWORD *)(v120 + 80) = v210;
      *(_OWORD *)(v120 + 96) = v124;
      *(void *)(v120 + 112) = v123;
      *(void *)(v120 + 120) = 0;
      *(void *)(v120 + 128) = 0;
      *(void *)(v120 + 136) = 0;
      *(_OWORD *)(v120 + 120) = v213;
      *(void *)(v120 + 136) = v214;
      *(void *)(v120 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v120 + 152) = 0;
      *(void *)(v120 + 160) = 0;
      *(_OWORD *)(v120 + 144) = v215;
      *(void *)(v120 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v120 + 168) = v217;
      *(_DWORD *)(v120 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v120 + 184) = v218;
      }
      *(_OWORD *)(v120 + 200) = v220;
      long long v125 = v221;
      uint64_t v126 = v223;
      *(_OWORD *)(v120 + 232) = v222;
      *(_OWORD *)(v120 + 216) = v125;
      *(void *)(v120 + 248) = v126;
      *(void *)(v120 + 256) = 0;
      *(void *)(v120 + 264) = 0;
      *(void *)(v120 + 272) = 0;
      *(_OWORD *)(v120 + 256) = v224;
      *(void *)(v120 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v120 + 280) = v226;
      *(void *)(v120 + 288) = 0;
      *(void *)(v120 + 296) = 0;
      *(void *)(v120 + 304) = 0;
      *(_OWORD *)(v120 + 288) = v227;
      *(void *)(v120 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v127 = *(_OWORD *)v229;
      *(_OWORD *)(v120 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v120 + 312) = v127;
      long long v128 = v230;
      *(_DWORD *)(v120 + 356) = v231;
      *(_OWORD *)(v120 + 340) = v128;
      *(void *)(v120 + 360) = 0;
      *(void *)(v120 + 368) = 0;
      *(void *)(v120 + 376) = 0;
      *(void *)(v120 + 360) = __p;
      *(void *)(v120 + 368) = v233;
      *(void *)(v120 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v129 = v235;
      *(_DWORD *)(v120 + 400) = v236;
      *(_OWORD *)(v120 + 384) = v129;
      a4[1] = v120 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v132 = (void **)v224;
    if ((void)v224)
    {
      int64x2_t v133 = (void **)*((void *)&v224 + 1);
      int32x4_t v134 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          int64x2_t v133 = sub_4F31D0(v133 - 13);
        while (v133 != v132);
        int32x4_t v134 = (void *)v224;
      }
      *((void *)&v224 + 1) = v132;
      operator delete(v134);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    int32x4_t v135 = v205[0];
    if (v205[0])
    {
      char v136 = v205[1];
      unsigned long long v137 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          char v136 = (void *)sub_4D4B58((uint64_t)v136 - 160);
        while (v136 != v135);
        unsigned long long v137 = v205[0];
      }
      v205[1] = v135;
      operator delete(v137);
    }
  }
  if (*(unsigned char *)(a1 + 7912))
  {
    sub_851ABC(a1, (uint64_t)&v204);
    unint64_t v138 = a4[1];
    if (v138 >= a4[2])
    {
      uint64_t v148 = sub_757E08(a4, (uint64_t)&v204);
      int v149 = __p;
      a4[1] = v148;
      if (v149)
      {
        size_t v233 = v149;
        operator delete(v149);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v138 = v204;
      *(void *)(v138 + 16) = 0;
      *(void *)(v138 + 24) = 0;
      *(void *)(v138 + 8) = 0;
      *(_OWORD *)(v138 + 8) = *(_OWORD *)v205;
      *(void *)(v138 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v139 = v209;
      long long v140 = v207;
      *(_OWORD *)(v138 + 48) = v208;
      *(_OWORD *)(v138 + 64) = v139;
      *(_OWORD *)(v138 + 32) = v140;
      uint64_t v141 = v212;
      long long v142 = v211;
      *(_OWORD *)(v138 + 80) = v210;
      *(_OWORD *)(v138 + 96) = v142;
      *(void *)(v138 + 112) = v141;
      *(void *)(v138 + 120) = 0;
      *(void *)(v138 + 128) = 0;
      *(void *)(v138 + 136) = 0;
      *(_OWORD *)(v138 + 120) = v213;
      *(void *)(v138 + 136) = v214;
      *(void *)(v138 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v138 + 152) = 0;
      *(void *)(v138 + 160) = 0;
      *(_OWORD *)(v138 + 144) = v215;
      *(void *)(v138 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v138 + 168) = v217;
      *(_DWORD *)(v138 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v138 + 184) = v218;
      }
      *(_OWORD *)(v138 + 200) = v220;
      long long v143 = v221;
      uint64_t v144 = v223;
      *(_OWORD *)(v138 + 232) = v222;
      *(_OWORD *)(v138 + 216) = v143;
      *(void *)(v138 + 248) = v144;
      *(void *)(v138 + 256) = 0;
      *(void *)(v138 + 264) = 0;
      *(void *)(v138 + 272) = 0;
      *(_OWORD *)(v138 + 256) = v224;
      *(void *)(v138 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v138 + 280) = v226;
      *(void *)(v138 + 288) = 0;
      *(void *)(v138 + 296) = 0;
      *(void *)(v138 + 304) = 0;
      *(_OWORD *)(v138 + 288) = v227;
      *(void *)(v138 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v145 = *(_OWORD *)v229;
      *(_OWORD *)(v138 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v138 + 312) = v145;
      long long v146 = v230;
      *(_DWORD *)(v138 + 356) = v231;
      *(_OWORD *)(v138 + 340) = v146;
      *(void *)(v138 + 360) = 0;
      *(void *)(v138 + 368) = 0;
      *(void *)(v138 + 376) = 0;
      *(void *)(v138 + 360) = __p;
      *(void *)(v138 + 368) = v233;
      *(void *)(v138 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v147 = v235;
      *(_DWORD *)(v138 + 400) = v236;
      *(_OWORD *)(v138 + 384) = v147;
      a4[1] = v138 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    BOOL v150 = (void **)v224;
    if ((void)v224)
    {
      uint64_t v151 = (void **)*((void *)&v224 + 1);
      uint64_t v152 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          uint64_t v151 = sub_4F31D0(v151 - 13);
        while (v151 != v150);
        uint64_t v152 = (void *)v224;
      }
      *((void *)&v224 + 1) = v150;
      operator delete(v152);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    long long v153 = v205[0];
    if (v205[0])
    {
      char v154 = v205[1];
      uint64_t v155 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          char v154 = (void *)sub_4D4B58((uint64_t)v154 - 160);
        while (v154 != v153);
LABEL_217:
        uint64_t v155 = v205[0];
        goto LABEL_218;
      }
      goto LABEL_218;
    }
  }
  else if (*(unsigned char *)(a1 + 7906))
  {
    if (*((unsigned char *)a3 + 8) && !*(unsigned char *)(a1 + 7907)) {
      sub_852540(a1, a2, *a3, (uint64_t)&v204);
    }
    else {
      sub_852284(a1, (uint64_t)&v204);
    }
    unint64_t v156 = a4[1];
    if (v156 >= a4[2])
    {
      uint64_t v157 = sub_75796C(a4, (uint64_t)&v204);
    }
    else
    {
      sub_757B28((uint64_t)(a4 + 2), a4[1], (uint64_t)&v204);
      uint64_t v157 = v156 + 408;
      a4[1] = v156 + 408;
    }
    a4[1] = v157;
    if (__p)
    {
      size_t v233 = __p;
      operator delete(__p);
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v158 = (void **)v224;
    if ((void)v224)
    {
      char v159 = (void **)*((void *)&v224 + 1);
      unint64_t v160 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          char v159 = sub_4F31D0(v159 - 13);
        while (v159 != v158);
        unint64_t v160 = (void *)v224;
      }
      *((void *)&v224 + 1) = v158;
      operator delete(v160);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    long long v153 = v205[0];
    if (v205[0])
    {
      BOOL v161 = v205[1];
      uint64_t v155 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          BOOL v161 = (void *)sub_4D4B58((uint64_t)v161 - 160);
        while (v161 != v153);
        goto LABEL_217;
      }
LABEL_218:
      v205[1] = v153;
      operator delete(v155);
    }
  }
  if (*(unsigned char *)(a1 + 7907))
  {
    if (*((unsigned char *)a3 + 8)) {
      sub_8528C8(a1, a2, *a3, (uint64_t)&v204);
    }
    else {
      sub_8526AC(a1, (uint64_t)&v204);
    }
    unint64_t v162 = a4[1];
    if (v162 >= a4[2])
    {
      uint64_t v163 = sub_75796C(a4, (uint64_t)&v204);
    }
    else
    {
      sub_757B28((uint64_t)(a4 + 2), a4[1], (uint64_t)&v204);
      uint64_t v163 = v162 + 408;
      a4[1] = v162 + 408;
    }
    a4[1] = v163;
    if (__p)
    {
      size_t v233 = __p;
      operator delete(__p);
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    long long v164 = (void **)v224;
    if ((void)v224)
    {
      double v165 = (void **)*((void *)&v224 + 1);
      char v166 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          double v165 = sub_4F31D0(v165 - 13);
        while (v165 != v164);
        char v166 = (void *)v224;
      }
      *((void *)&v224 + 1) = v164;
      operator delete(v166);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    uint64_t v167 = v205[0];
    if (v205[0])
    {
      uint64_t v168 = v205[1];
      BOOL v169 = v205[0];
      if (v205[1] == v205[0])
      {
LABEL_246:
        v205[1] = v167;
        operator delete(v169);
        goto LABEL_247;
      }
      do
        uint64_t v168 = (void *)sub_4D4B58((uint64_t)v168 - 160);
      while (v168 != v167);
LABEL_245:
      BOOL v169 = v205[0];
      goto LABEL_246;
    }
  }
  else if (!*(unsigned char *)(a1 + 7906))
  {
    if (*((unsigned char *)a3 + 8)) {
      (*(void (**)(void **__return_ptr, uint64_t, uint64_t, unint64_t))(*(void *)a1 + 80))(&v204, a1, a2, *a3);
    }
    else {
      (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 72))(&v204, a1);
    }
    unint64_t v196 = a4[1];
    if (v196 >= a4[2])
    {
      uint64_t v197 = sub_75796C(a4, (uint64_t)&v204);
    }
    else
    {
      sub_757B28((uint64_t)(a4 + 2), a4[1], (uint64_t)&v204);
      uint64_t v197 = v196 + 408;
      a4[1] = v196 + 408;
    }
    a4[1] = v197;
    if (__p)
    {
      size_t v233 = __p;
      operator delete(__p);
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v198 = (void **)v224;
    if ((void)v224)
    {
      unint64_t v199 = (void **)*((void *)&v224 + 1);
      uint64_t v200 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          unint64_t v199 = sub_4F31D0(v199 - 13);
        while (v199 != v198);
        uint64_t v200 = (void *)v224;
      }
      *((void *)&v224 + 1) = v198;
      operator delete(v200);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    uint64_t v167 = v205[0];
    if (v205[0])
    {
      uint64_t v201 = v205[1];
      BOOL v169 = v205[0];
      if (v205[1] == v205[0]) {
        goto LABEL_246;
      }
      do
        uint64_t v201 = (void *)sub_4D4B58((uint64_t)v201 - 160);
      while (v201 != v167);
      goto LABEL_245;
    }
  }
LABEL_247:
  uint64_t v170 = (_DWORD *)*a4;
  uint64_t v171 = (_DWORD *)a4[1];
  while (v170 != v171)
  {
    if (!sub_638AF0(v170))
    {
      int v172 = *(_DWORD *)(a1 + 7916);
      *(_DWORD *)(a1 + 7916) = v172 + 1;
      sub_BB6C(v170, v172);
    }
    v170 += 102;
  }
  sub_852A60(a1, (int **)a4);
  if (*(unsigned char *)(a1 + 7802))
  {
    sub_851EF0((void *)a1, (uint64_t *)&v204);
    uint64_t v173 = v204;
    char v174 = v205[0];
    while (v173 != v174)
    {
      if (!sub_638AF0(v173))
      {
        int v175 = *(_DWORD *)(a1 + 7916);
        *(_DWORD *)(a1 + 7916) = v175 + 1;
        sub_BB6C(v173, v175);
      }
      v173 += 102;
    }
    sub_852A60(a1, (int **)&v204);
    sub_878048(a4, (void *)a4[1], (uint64_t)v204, (uint64_t)v205[0], 0xFAFAFAFAFAFAFAFBLL * (((char *)v205[0] - (char *)v204) >> 3));
    sub_852A60(a1, (int **)a4);
    uint64_t v176 = v204;
    if (v204)
    {
      uint64_t v177 = v205[0];
      uint64_t v178 = v204;
      if (v205[0] != v204)
      {
        do
        {
          uint64_t v179 = (void *)*(v177 - 6);
          if (v179)
          {
            *(v177 - 5) = v179;
            operator delete(v179);
          }
          v177 -= 51;
          sub_4F32CC(v177);
        }
        while (v177 != v176);
        uint64_t v178 = v204;
      }
      v205[0] = v176;
      operator delete(v178);
    }
  }
  sub_852BEC(a1, (uint64_t *)&v204);
  unint64_t v180 = (char *)v204;
  BOOL v181 = (char *)v205[0];
  if (v204 == v205[0])
  {
    uint64_t v182 = v204;
  }
  else
  {
    do
    {
      if (!sub_638AF0(v180))
      {
        int v183 = *(_DWORD *)(a1 + 7916);
        *(_DWORD *)(a1 + 7916) = v183 + 1;
        sub_BB6C(v180, v183);
      }
      v180 += 408;
    }
    while (v180 != v181);
    uint64_t v182 = v204;
    unint64_t v180 = (char *)v205[0];
  }
  sub_878048(a4, (void *)a4[1], (uint64_t)v182, (uint64_t)v180, 0xFAFAFAFAFAFAFAFBLL * ((v180 - v182) >> 3));
  if (v204 != v205[0]) {
    sub_852A60(a1, (int **)a4);
  }
  if (**(void **)(a1 + 7976) != *(void *)(*(void *)(a1 + 7976) + 8))
  {
    sub_854330((void *)a1, (uint64_t *)&v202);
    char v184 = (char *)v202;
    uint64_t v185 = v203;
    if (v202 == v203)
    {
      uint64_t v186 = v202;
    }
    else
    {
      do
      {
        if (!sub_638AF0(v184))
        {
          int v187 = *(_DWORD *)(a1 + 7916);
          *(_DWORD *)(a1 + 7916) = v187 + 1;
          sub_BB6C(v184, v187);
        }
        v184 += 408;
      }
      while (v184 != v185);
      uint64_t v186 = v202;
      char v184 = v203;
    }
    sub_878048(a4, (void *)a4[1], (uint64_t)v186, (uint64_t)v184, 0xFAFAFAFAFAFAFAFBLL * ((v184 - v186) >> 3));
    uint64_t v188 = (char *)v202;
    if (v202)
    {
      int v189 = v203;
      uint64_t v190 = v202;
      if (v203 != v202)
      {
        do
        {
          unint64_t v191 = (void *)*((void *)v189 - 6);
          if (v191)
          {
            *((void *)v189 - 5) = v191;
            operator delete(v191);
          }
          v189 -= 408;
          sub_4F32CC(v189);
        }
        while (v189 != v188);
        uint64_t v190 = v202;
      }
      unint64_t v203 = v188;
      operator delete(v190);
    }
  }
  int v192 = v204;
  if (v204)
  {
    char v193 = v205[0];
    uint64_t v194 = v204;
    if (v205[0] != v204)
    {
      do
      {
        uint64_t v195 = (void *)*(v193 - 6);
        if (v195)
        {
          *(v193 - 5) = v195;
          operator delete(v195);
        }
        v193 -= 51;
        sub_4F32CC(v193);
      }
      while (v193 != v192);
      uint64_t v194 = v204;
    }
    v205[0] = v192;
    operator delete(v194);
  }
}

void sub_84DC60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_639B78((uint64_t *)va);
  sub_591DFC(v5);
  _Unwind_Resume(a1);
}

void sub_84DCE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_591DFC((uint64_t *)va);
  sub_591DFC((uint64_t *)va1);
  sub_591DFC(v2);
  _Unwind_Resume(a1);
}

void sub_84DE38(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

void sub_84DE4C(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v8 = a1 + 7904;
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  if (a1[7904])
  {
    sub_850ADC((uint64_t)a1, (uint64_t)&v53);
    unint64_t v9 = a4[1];
    if (v9 >= a4[2])
    {
      uint64_t v19 = sub_757E08(a4, (uint64_t)&v53);
      uint64_t v20 = __p;
      a4[1] = v19;
      if (v20)
      {
        uint64_t v82 = v20;
        operator delete(v20);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v9 = v53;
      *(void *)(v9 + 16) = 0;
      *(void *)(v9 + 24) = 0;
      *(void *)(v9 + 8) = 0;
      *(_OWORD *)(v9 + 8) = *(_OWORD *)v54;
      *(void *)(v9 + 24) = v55;
      v54[0] = 0;
      v54[1] = 0;
      long long v10 = v58;
      long long v11 = v56;
      *(_OWORD *)(v9 + 48) = v57;
      *(_OWORD *)(v9 + 64) = v10;
      *(_OWORD *)(v9 + 32) = v11;
      uint64_t v12 = v61;
      long long v13 = v60;
      *(_OWORD *)(v9 + 80) = v59;
      *(_OWORD *)(v9 + 96) = v13;
      *(void *)(v9 + 112) = v12;
      *(void *)(v9 + 120) = 0;
      *(void *)(v9 + 128) = 0;
      *(void *)(v9 + 136) = 0;
      *(_OWORD *)(v9 + 120) = *(_OWORD *)v62;
      *(void *)(v9 + 136) = v63;
      *(void *)(v9 + 144) = 0;
      uint64_t v55 = 0;
      v62[0] = 0;
      v62[1] = 0;
      *(void *)(v9 + 152) = 0;
      *(void *)(v9 + 160) = 0;
      *(_OWORD *)(v9 + 144) = *(_OWORD *)v64;
      *(void *)(v9 + 160) = v65;
      v64[1] = 0;
      uint64_t v65 = 0;
      uint64_t v63 = 0;
      v64[0] = 0;
      *(_OWORD *)(v9 + 168) = v66;
      *(_DWORD *)(v9 + 192) = v68;
      if (v68 <= 1) {
        *(void *)(v9 + 184) = v67;
      }
      *(_OWORD *)(v9 + 200) = v69;
      long long v14 = v70;
      uint64_t v15 = v72;
      *(_OWORD *)(v9 + 232) = v71;
      *(_OWORD *)(v9 + 216) = v14;
      *(void *)(v9 + 248) = v15;
      *(void *)(v9 + 256) = 0;
      *(void *)(v9 + 264) = 0;
      *(void *)(v9 + 272) = 0;
      *(_OWORD *)(v9 + 256) = *(_OWORD *)v73;
      *(void *)(v9 + 272) = v74;
      v73[0] = 0;
      v73[1] = 0;
      *(unsigned char *)(v9 + 280) = v75;
      *(void *)(v9 + 288) = 0;
      *(void *)(v9 + 296) = 0;
      *(void *)(v9 + 304) = 0;
      *(_OWORD *)(v9 + 288) = *(_OWORD *)v76;
      *(void *)(v9 + 304) = v77;
      uint64_t v74 = 0;
      v76[0] = 0;
      v76[1] = 0;
      uint64_t v77 = 0;
      long long v16 = *(_OWORD *)v78;
      *(_OWORD *)(v9 + 321) = *(_OWORD *)&v78[9];
      *(_OWORD *)(v9 + 312) = v16;
      long long v17 = v79;
      *(_DWORD *)(v9 + 356) = v80;
      *(_OWORD *)(v9 + 340) = v17;
      *(void *)(v9 + 360) = 0;
      *(void *)(v9 + 368) = 0;
      *(void *)(v9 + 376) = 0;
      *(void *)(v9 + 360) = __p;
      *(void *)(v9 + 368) = v82;
      *(void *)(v9 + 376) = v83;
      long long __p = 0;
      uint64_t v82 = 0;
      uint64_t v83 = 0;
      long long v18 = v84;
      *(_DWORD *)(v9 + 400) = v85;
      *(_OWORD *)(v9 + 384) = v18;
      a4[1] = v9 + 408;
    }
    if (v76[0])
    {
      v76[1] = v76[0];
      operator delete(v76[0]);
    }
    char v21 = (void **)v73[0];
    if (v73[0])
    {
      uint64_t v22 = (void **)v73[1];
      unint64_t v23 = v73[0];
      if (v73[1] != v73[0])
      {
        do
          uint64_t v22 = sub_4F31D0(v22 - 13);
        while (v22 != v21);
        unint64_t v23 = v73[0];
      }
      v73[1] = v21;
      operator delete(v23);
    }
    if (v64[0])
    {
      v64[1] = v64[0];
      operator delete(v64[0]);
    }
    if (v62[0])
    {
      v62[1] = v62[0];
      operator delete(v62[0]);
    }
    char v24 = v54[0];
    if (v54[0])
    {
      uint64_t v25 = v54[1];
      uint64_t v26 = v54[0];
      if (v54[1] != v54[0])
      {
        do
          uint64_t v25 = (void *)sub_4D4B58((uint64_t)v25 - 160);
        while (v25 != v24);
        uint64_t v26 = v54[0];
      }
      v54[1] = v24;
      operator delete(v26);
    }
  }
  if (v8[6])
  {
    sub_851220((uint64_t)a1, (uint64_t)&v53);
    unint64_t v27 = a4[1];
    if (v27 >= a4[2])
    {
      uint64_t v28 = sub_75796C(a4, (uint64_t)&v53);
    }
    else
    {
      sub_757B28((uint64_t)(a4 + 2), a4[1], (uint64_t)&v53);
      uint64_t v28 = v27 + 408;
      a4[1] = v27 + 408;
    }
    a4[1] = v28;
    if (__p)
    {
      uint64_t v82 = __p;
      operator delete(__p);
    }
    if (v76[0])
    {
      v76[1] = v76[0];
      operator delete(v76[0]);
    }
    long long v29 = (void **)v73[0];
    if (v73[0])
    {
      unint64_t v30 = (void **)v73[1];
      long long v31 = v73[0];
      if (v73[1] != v73[0])
      {
        do
          unint64_t v30 = sub_4F31D0(v30 - 13);
        while (v30 != v29);
        long long v31 = v73[0];
      }
      v73[1] = v29;
      operator delete(v31);
    }
    if (v64[0])
    {
      v64[1] = v64[0];
      operator delete(v64[0]);
    }
    if (v62[0])
    {
      v62[1] = v62[0];
      operator delete(v62[0]);
    }
    long long v32 = v54[0];
    if (v54[0])
    {
      uint64_t v33 = v54[1];
      long long v34 = v54[0];
      if (v54[1] != v54[0])
      {
        do
          uint64_t v33 = (void *)sub_4D4B58((uint64_t)v33 - 160);
        while (v33 != v32);
        long long v34 = v54[0];
      }
      v54[1] = v32;
      operator delete(v34);
    }
  }
  if (*(unsigned char *)(a3 + 8)) {
    (*(void (**)(uint64_t *__return_ptr, unsigned char *, uint64_t, void))(*(void *)a1 + 80))(&v53, a1, a2, *(void *)a3);
  }
  else {
    (*(void (**)(uint64_t *__return_ptr, unsigned char *))(*(void *)a1 + 72))(&v53, a1);
  }
  unint64_t v35 = a4[1];
  if (v35 >= a4[2])
  {
    uint64_t v45 = sub_757E08(a4, (uint64_t)&v53);
    unsigned __int16 v46 = __p;
    a4[1] = v45;
    if (v46)
    {
      uint64_t v82 = v46;
      operator delete(v46);
    }
  }
  else
  {
    *(_DWORD *)unint64_t v35 = v53;
    *(void *)(v35 + 16) = 0;
    *(void *)(v35 + 24) = 0;
    *(void *)(v35 + 8) = 0;
    *(_OWORD *)(v35 + 8) = *(_OWORD *)v54;
    *(void *)(v35 + 24) = v55;
    v54[0] = 0;
    v54[1] = 0;
    long long v36 = v58;
    long long v37 = v56;
    *(_OWORD *)(v35 + 48) = v57;
    *(_OWORD *)(v35 + 64) = v36;
    *(_OWORD *)(v35 + 32) = v37;
    uint64_t v38 = v61;
    long long v39 = v60;
    *(_OWORD *)(v35 + 80) = v59;
    *(_OWORD *)(v35 + 96) = v39;
    *(void *)(v35 + 112) = v38;
    *(void *)(v35 + 120) = 0;
    *(void *)(v35 + 128) = 0;
    *(void *)(v35 + 136) = 0;
    *(_OWORD *)(v35 + 120) = *(_OWORD *)v62;
    *(void *)(v35 + 136) = v63;
    *(void *)(v35 + 144) = 0;
    uint64_t v55 = 0;
    v62[0] = 0;
    v62[1] = 0;
    *(void *)(v35 + 152) = 0;
    *(void *)(v35 + 160) = 0;
    *(_OWORD *)(v35 + 144) = *(_OWORD *)v64;
    *(void *)(v35 + 160) = v65;
    v64[1] = 0;
    uint64_t v65 = 0;
    uint64_t v63 = 0;
    v64[0] = 0;
    *(_OWORD *)(v35 + 168) = v66;
    *(_DWORD *)(v35 + 192) = v68;
    if (v68 <= 1) {
      *(void *)(v35 + 184) = v67;
    }
    *(_OWORD *)(v35 + 200) = v69;
    long long v40 = v70;
    uint64_t v41 = v72;
    *(_OWORD *)(v35 + 232) = v71;
    *(_OWORD *)(v35 + 216) = v40;
    *(void *)(v35 + 248) = v41;
    *(void *)(v35 + 256) = 0;
    *(void *)(v35 + 264) = 0;
    *(void *)(v35 + 272) = 0;
    *(_OWORD *)(v35 + 256) = *(_OWORD *)v73;
    *(void *)(v35 + 272) = v74;
    v73[0] = 0;
    v73[1] = 0;
    *(unsigned char *)(v35 + 280) = v75;
    *(void *)(v35 + 288) = 0;
    *(void *)(v35 + 296) = 0;
    *(void *)(v35 + 304) = 0;
    *(_OWORD *)(v35 + 288) = *(_OWORD *)v76;
    *(void *)(v35 + 304) = v77;
    uint64_t v74 = 0;
    v76[0] = 0;
    v76[1] = 0;
    uint64_t v77 = 0;
    long long v42 = *(_OWORD *)v78;
    *(_OWORD *)(v35 + 321) = *(_OWORD *)&v78[9];
    *(_OWORD *)(v35 + 312) = v42;
    long long v43 = v79;
    *(_DWORD *)(v35 + 356) = v80;
    *(_OWORD *)(v35 + 340) = v43;
    *(void *)(v35 + 360) = 0;
    *(void *)(v35 + 368) = 0;
    *(void *)(v35 + 376) = 0;
    *(void *)(v35 + 360) = __p;
    *(void *)(v35 + 368) = v82;
    *(void *)(v35 + 376) = v83;
    long long __p = 0;
    uint64_t v82 = 0;
    uint64_t v83 = 0;
    long long v44 = v84;
    *(_DWORD *)(v35 + 400) = v85;
    *(_OWORD *)(v35 + 384) = v44;
    a4[1] = v35 + 408;
  }
  if (v76[0])
  {
    v76[1] = v76[0];
    operator delete(v76[0]);
  }
  uint64_t v47 = (void **)v73[0];
  if (v73[0])
  {
    unint64_t v48 = (void **)v73[1];
    long long v49 = v73[0];
    if (v73[1] != v73[0])
    {
      do
        unint64_t v48 = sub_4F31D0(v48 - 13);
      while (v48 != v47);
      long long v49 = v73[0];
    }
    v73[1] = v47;
    operator delete(v49);
  }
  if (v64[0])
  {
    v64[1] = v64[0];
    operator delete(v64[0]);
  }
  if (v62[0])
  {
    v62[1] = v62[0];
    operator delete(v62[0]);
  }
  long long v50 = v54[0];
  if (v54[0])
  {
    uint64_t v51 = v54[1];
    long long v52 = v54[0];
    if (v54[1] != v54[0])
    {
      do
        uint64_t v51 = (void *)sub_4D4B58((uint64_t)v51 - 160);
      while (v51 != v50);
      long long v52 = v54[0];
    }
    v54[1] = v50;
    operator delete(v52);
  }
}

void sub_84E4F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_639B78(&a9);
  sub_591DFC(v9);
  _Unwind_Resume(a1);
}

void sub_84E528(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

void sub_84E53C(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

void sub_84E550(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_84E564@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (sub_7E54E8(a1))
  {
    sub_88F9D4((unsigned __int8 *)(a1 + 2200), (uint64_t)&v19);
    sub_638DFC(a2, &v19);
    uint64_t v4 = v23;
    if (v23 && !atomic_fetch_add(&v23->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    uint64_t v5 = v22;
    if (v22)
    {
      do
      {
        uint64_t v6 = (void *)*v5;
        sub_4F4B48((uint64_t)(v5 + 2));
        operator delete(v5);
        uint64_t v5 = v6;
      }
      while (v6);
    }
    uint64_t v7 = __p;
    long long __p = 0;
    if (v7) {
      operator delete(v7);
    }
    unint64_t v8 = (void **)v19;
    if (v19)
    {
      unint64_t v9 = v20;
      long long v10 = v19;
      if (v20 != v19)
      {
        do
        {
          if (*((char *)v9 - 1) < 0) {
            operator delete(*(v9 - 3));
          }
          v9 -= 3;
        }
        while (v9 != v8);
        long long v10 = v19;
      }
      uint64_t v20 = v8;
      operator delete(v10);
    }
    sub_88F788(a1 + 2200, (uint64_t)&v19);
    sub_638E00((uint64_t)a2, (uint64_t)&v19);
    uint64_t v12 = v22;
    if (v22)
    {
      do
      {
        long long v13 = (void *)*v12;
        sub_4F4B48((uint64_t)(v12 + 2));
        operator delete(v12);
        uint64_t v12 = v13;
      }
      while (v13);
    }
    long long v14 = __p;
    long long __p = 0;
    if (v14) {
      operator delete(v14);
    }
    uint64_t v15 = (void **)v19;
    if (v19)
    {
      long long v16 = v20;
      long long v17 = v19;
      if (v20 != v19)
      {
        do
        {
          if (*((char *)v16 - 1) < 0) {
            operator delete(*(v16 - 3));
          }
          v16 -= 3;
        }
        while (v16 != v15);
        long long v17 = v19;
      }
      uint64_t v20 = v15;
      operator delete(v17);
    }
    sub_638448((uint64_t)a2, *(void *)(a1 + 2152));
    sub_63841C((uint64_t)a2, 25);
    sub_5F3D48((uint64_t)&v19, (uint64_t)&qword_25CA580);
    char v18 = 1;
    sub_5F6090((uint64_t *)&v19, (uint64_t)&qword_25CA580, (uint64_t *)(a1 + 2152), &v18);
    sub_638E74((uint64_t)a2, (uint64_t)&v19);
    return sub_4D4B58((uint64_t)&v19);
  }
  else
  {
    bzero(a2, 0x330uLL);
    return sub_5A9D64((uint64_t)a2);
  }
}

void sub_84E7B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4D4B58((uint64_t)va);
  sub_52F090(v3);
  _Unwind_Resume(a1);
}

void sub_84E7D0(_Unwind_Exception *a1)
{
  sub_52F090(v1);
  _Unwind_Resume(a1);
}

void sub_84E7E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4D4880((void **)va);
  sub_52F090(v3);
  _Unwind_Resume(a1);
}

void sub_84E800(_Unwind_Exception *a1)
{
  sub_52F090(v1);
  _Unwind_Resume(a1);
}

void sub_84E814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_84E828(_Unwind_Exception *a1)
{
  sub_52F090(v1);
  _Unwind_Resume(a1);
}

BOOL sub_84E83C(uint64_t a1)
{
  BOOL result = sub_7E714C(a1);
  if (result)
  {
    uint64_t v3 = 128;
    if (!*(unsigned char *)(a1 + 2176)) {
      uint64_t v3 = 136;
    }
    return *(void *)(a1 + 5192) > *(void *)(*(void *)(a1 + 2160) + v3);
  }
  return result;
}

void sub_84E88C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_84E95C(a1, a2);
  sub_84EF94(a1, &__p);
  sub_873144(a2, a2[1], (uint64_t)__p, (uint64_t)v8, 0xA3784A062B2E43DBLL * ((v8 - (unsigned char *)__p) >> 3));
  uint64_t v4 = __p;
  if (__p)
  {
    uint64_t v5 = v8;
    uint64_t v6 = __p;
    if (v8 != __p)
    {
      do
        uint64_t v5 = sub_576A58((uint64_t)(v5 - 83));
      while (v5 != v4);
      uint64_t v6 = __p;
    }
    unint64_t v8 = v4;
    operator delete(v6);
  }
}

void sub_84E92C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_5923C0((void **)va);
  sub_5923C0(v2);
  _Unwind_Resume(a1);
}

void sub_84E948(_Unwind_Exception *a1)
{
  sub_5923C0(v1);
  _Unwind_Resume(a1);
}

void sub_84E95C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 2192);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  if (v3)
  {
    uint64_t v41 = a2;
    if (v3 == 1 && *(uint64_t *)(a1 + 2152) >= 200)
    {
      sub_890754(a1 + 2200, (uint64_t)&v45);
      sub_872D0C((uint64_t)v50, (uint64_t)&v45);
      uint64_t v44 = *(void *)(a1 + 2152);
      uint64_t v43 = v44 - 100;
      sub_638408((uint64_t)v50, &v44, &v43);
      int v51 = 1;
      sub_63841C((uint64_t)v50, 81);
      uint64_t v5 = sub_855880(*(void **)(a1 + 7944), 0);
      if (*(char *)(v5 + 23) < 0) {
        sub_4200(&__str, *(void **)v5, *(void *)(v5 + 8));
      }
      else {
        std::string __str = *(std::string *)v5;
      }
      std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type size = __str.__r_.__value_.__l.__size_;
      }
      if (size) {
        std::string::operator=(v52, &__str);
      }
      unint64_t v7 = a2[1];
      if (v7 >= a2[2])
      {
        uint64_t v8 = sub_8784B4(a2, (uint64_t)v50);
      }
      else
      {
        sub_594D4C(a2[1], (uint64_t)v50);
        uint64_t v8 = v7 + 664;
        a2[1] = v7 + 664;
      }
      a2[1] = v8;
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      sub_576A58((uint64_t)v50);
      unint64_t v9 = v49;
      if (v49 && !atomic_fetch_add(&v49->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
      long long v10 = v48;
      if (v48)
      {
        do
        {
          long long v11 = (void *)*v10;
          sub_4F4B48((uint64_t)(v10 + 2));
          operator delete(v10);
          long long v10 = v11;
        }
        while (v11);
      }
      uint64_t v12 = __p;
      long long __p = 0;
      if (v12) {
        operator delete(v12);
      }
      long long v13 = (void **)v45;
      if (v45)
      {
        long long v14 = v46;
        uint64_t v15 = v45;
        if (v46 != v45)
        {
          do
          {
            if (*((char *)v14 - 1) < 0) {
              operator delete(*(v14 - 3));
            }
            v14 -= 3;
          }
          while (v14 != v13);
          uint64_t v15 = v45;
        }
        unsigned __int16 v46 = v13;
        operator delete(v15);
      }
    }
    sub_890108(a1 + 2200, (uint64_t)&v45);
    uint64_t v44 = *(void *)(a1 + 2152);
    long long v16 = v46;
    if (v46 != v45)
    {
      unint64_t v17 = 0;
      uint64_t v40 = 0x4EC4EC4EC4EC4EC5 * (((char *)v46 - (unsigned char *)v45) >> 3);
      do
      {
        char v18 = v45;
        uint64_t v19 = sub_855880(*(void **)(a1 + 7944), v17);
        sub_872D0C((uint64_t)v50, (uint64_t)v18 + 104 * v17);
        uint64_t v43 = v44 - *(void *)(v19 + 232);
        sub_638408((uint64_t)v50, &v44, &v43);
        int v51 = 1;
        if (*(char *)(v19 + 23) < 0) {
          sub_4200(&__str, *(void **)v19, *(void *)(v19 + 8));
        }
        else {
          std::string __str = *(std::string *)v19;
        }
        std::string::size_type v20 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v20 = __str.__r_.__value_.__l.__size_;
        }
        if (v20) {
          std::string::operator=(v52, &__str);
        }
        char v21 = *(void **)(v19 + 248);
        uint64_t v22 = *(void **)(v19 + 256);
        if (v21 != v22)
        {
          unint64_t v23 = (char *)v54;
          do
          {
            uint64_t v24 = *(void *)(a1 + 2152);
            uint64_t v25 = v24 - *v21;
            uint64_t v26 = v24 - v21[1];
            if ((unint64_t)v23 < v55)
            {
              sub_2F99CC(v23, v25, v26);
              v23 += 16;
            }
            else
            {
              uint64_t v27 = (v23 - v53) >> 4;
              if ((unint64_t)(v27 + 1) >> 60) {
                sub_2E00();
              }
              unint64_t v28 = (uint64_t)(v55 - (void)v53) >> 3;
              if (v28 <= v27 + 1) {
                unint64_t v28 = v27 + 1;
              }
              if (v55 - (unint64_t)v53 >= 0x7FFFFFFFFFFFFFF0) {
                unint64_t v29 = 0xFFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v29 = v28;
              }
              if (v29)
              {
                if (v29 >> 60) {
                  sub_188D718();
                }
                unint64_t v30 = operator new(16 * v29);
              }
              else
              {
                unint64_t v30 = 0;
              }
              long long v31 = sub_2F99CC(&v30[2 * v27], v25, v26);
              long long v32 = (char *)v54;
              uint64_t v33 = v53;
              a2 = v41;
              long long v34 = v31;
              if (v54 != v53)
              {
                do
                {
                  *((_OWORD *)v34 - 1) = *((_OWORD *)v32 - 1);
                  v34 -= 2;
                  v32 -= 16;
                }
                while (v32 != v33);
                long long v32 = v53;
              }
              unint64_t v35 = (char *)&v30[2 * v29];
              uint64_t v53 = (char *)v34;
              unint64_t v23 = (char *)(v31 + 2);
              uint64_t v54 = v31 + 2;
              unint64_t v55 = (unint64_t)v35;
              if (v32) {
                operator delete(v32);
              }
            }
            uint64_t v54 = v23;
            v21 += 2;
          }
          while (v21 != v22);
        }
        unint64_t v36 = a2[1];
        if (v36 >= a2[2])
        {
          uint64_t v37 = sub_8784B4(a2, (uint64_t)v50);
        }
        else
        {
          sub_594D4C(a2[1], (uint64_t)v50);
          uint64_t v37 = v36 + 664;
          a2[1] = v36 + 664;
        }
        a2[1] = v37;
        uint64_t v44 = v43;
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        sub_576A58((uint64_t)v50);
        ++v17;
      }
      while (v17 != v40);
      long long v16 = (void **)v45;
    }
    if (v16)
    {
      uint64_t v38 = v46;
      long long v39 = v16;
      if (v46 != v16)
      {
        do
          uint64_t v38 = sub_4F31D0(v38 - 13);
        while (v38 != v16);
        long long v39 = v45;
      }
      unsigned __int16 v46 = v16;
      operator delete(v39);
    }
  }
}

void sub_84EE6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  *(void *)(v36 + 8) = v35;
  if (a18 < 0) {
    operator delete(__p);
  }
  sub_576A58((uint64_t)&a35);
  sub_4F31D0(&a22);
  sub_5923C0(a12);
  _Unwind_Resume(a1);
}

void sub_84EED8(_Unwind_Exception *a1)
{
  sub_5923C0(v1);
  _Unwind_Resume(a1);
}

void sub_84EEEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_576A58((uint64_t)&a32);
  sub_5920E0(&a19);
  sub_5923C0(v32);
  _Unwind_Resume(a1);
}

void sub_84EF94(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_890584((int *)(a1 + 2200), (uint64_t)&v30);
  sub_595AE0((uint64_t)__p, (uint64_t)&v35);
  sub_872EEC((uint64_t)v38, (uint64_t)&v30, (uint64_t *)__p);
  uint64_t v4 = (char *)v29;
  if (v29)
  {
    do
    {
      uint64_t v19 = *(char **)v4;
      std::string::size_type v20 = (void *)*((void *)v4 + 6);
      if (v20)
      {
        *((void *)v4 + 7) = v20;
        operator delete(v20);
      }
      if (v4[39] < 0) {
        operator delete(*((void **)v4 + 2));
      }
      operator delete(v4);
      uint64_t v4 = v19;
    }
    while (v19);
  }
  uint64_t v5 = __p[0];
  __p[0] = 0;
  if (v5) {
    operator delete(v5);
  }
  __str.__r_.__value_.__r.__words[0] = 0;
  sub_638408((uint64_t)v38, (void *)(a1 + 2152), &__str);
  int v39 = 2;
  if (*(unsigned char *)(a1 + 5184)) {
    sub_63841C((uint64_t)v38, 81);
  }
  if (!*(unsigned char *)(a1 + 5186))
  {
    if (*(unsigned char *)(a1 + 5184))
    {
      uint64_t v6 = **(long long ***)(a1 + 7944);
    }
    else
    {
      unint64_t v23 = *(long long ***)(a1 + 7952);
      uint64_t v6 = *v23;
      if (*v23 != v23[1])
      {
        if (*((char *)v6 + 23) < 0)
        {
          unint64_t v24 = *((void *)v6 + 1);
          if (v24) {
            goto LABEL_48;
          }
        }
        else if (*((unsigned char *)v6 + 23))
        {
LABEL_10:
          long long v7 = *v6;
          __str.__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
          *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v7;
          std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
          char v9 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
          if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::string::size_type size = __str.__r_.__value_.__l.__size_;
          }
          if (!size) {
            goto LABEL_13;
          }
          goto LABEL_51;
        }
      }
      uint64_t v26 = *(long long ***)(a1 + 7960);
      uint64_t v6 = *v26;
      uint64_t v27 = v26[1];
      if (v6 != v27)
      {
        while (*((_DWORD *)v6 + 30) != 1)
        {
          uint64_t v6 = (long long *)((char *)v6 + 152);
          if (v6 == v27) {
            goto LABEL_59;
          }
        }
      }
      if (v6 == v27)
      {
LABEL_59:
        memset(&__str, 0, sizeof(__str));
        char v9 = 0;
        goto LABEL_13;
      }
    }
    if ((*((char *)v6 + 23) & 0x80000000) == 0) {
      goto LABEL_10;
    }
    unint64_t v24 = *((void *)v6 + 1);
LABEL_48:
    sub_4200(&__str, *(void **)v6, v24);
    std::string::size_type v25 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    char v9 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v25 = __str.__r_.__value_.__l.__size_;
    }
    if (!v25)
    {
LABEL_13:
      if ((v9 & 0x80) == 0) {
        goto LABEL_14;
      }
LABEL_52:
      operator delete(__str.__r_.__value_.__l.__data_);
      goto LABEL_14;
    }
LABEL_51:
    std::string::operator=(v40, &__str);
    if ((*((unsigned char *)&__str.__r_.__value_.__s + 23) & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_52;
  }
LABEL_14:
  sub_594D4C((uint64_t)&__str, (uint64_t)v38);
  sub_878648(a2, (uint64_t)&__str, 1uLL);
  sub_576A58((uint64_t)&__str);
  sub_576A58((uint64_t)v38);
  long long v10 = v36;
  if (v36)
  {
    do
    {
      char v21 = *(char **)v10;
      uint64_t v22 = (void *)*((void *)v10 + 6);
      if (v22)
      {
        *((void *)v10 + 7) = v22;
        operator delete(v22);
      }
      if (v10[39] < 0) {
        operator delete(*((void **)v10 + 2));
      }
      operator delete(v10);
      long long v10 = v21;
    }
    while (v21);
  }
  long long v11 = v35;
  uint64_t v35 = 0;
  if (v11) {
    operator delete(v11);
  }
  uint64_t v12 = v34;
  if (v34 && !atomic_fetch_add(&v34->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  long long v13 = v33;
  if (v33)
  {
    do
    {
      long long v14 = (void *)*v13;
      sub_4F4B48((uint64_t)(v13 + 2));
      operator delete(v13);
      long long v13 = v14;
    }
    while (v14);
  }
  uint64_t v15 = v32;
  long long v32 = 0;
  if (v15) {
    operator delete(v15);
  }
  long long v16 = (void **)v30;
  if (v30)
  {
    unint64_t v17 = v31;
    char v18 = v30;
    if (v31 != v30)
    {
      do
      {
        if (*((char *)v17 - 1) < 0) {
          operator delete(*(v17 - 3));
        }
        v17 -= 3;
      }
      while (v17 != v16);
      char v18 = v30;
    }
    long long v31 = v16;
    operator delete(v18);
  }
}

void sub_84F310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_576A58((uint64_t)&STACK[0x360]);
  sub_855AB0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_84F388(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  sub_592590((uint64_t)va);
  sub_855AB0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_84F3A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_855AB0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_84F3BC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 2180))
  {
    sub_891658(a1 + 2200, (uint64_t)&v13);
    uint64_t v12 = *(void *)(a1 + 2152) - *(void *)(a1 + 5144);
    sub_7C4620(a2, (uint64_t)&v13, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 417), 3, (void *)(a1 + 5176));
    sub_63841C(a2, 5);
    sub_2F99CC(v11, *(void *)(a1 + 2152), *(void *)(a1 + 5144));
    sub_638424(a2, v11);
    sub_5F3D48((uint64_t)v11, (uint64_t)&unk_25CA598);
    char v10 = 1;
    sub_5F6090((uint64_t *)v11, (uint64_t)&unk_25CA598, &v12, &v10);
    sub_638E74(a2, (uint64_t)v11);
    sub_4D4B58((uint64_t)v11);
    uint64_t v4 = v16;
    if (v16)
    {
      do
      {
        uint64_t v5 = (void *)*v4;
        sub_4F4B48((uint64_t)(v4 + 2));
        operator delete(v4);
        uint64_t v4 = v5;
      }
      while (v5);
    }
    uint64_t v6 = v15;
    uint64_t v15 = 0;
    if (v6) {
      operator delete(v6);
    }
    uint64_t v7 = v13;
    if (v13)
    {
      uint64_t v8 = v14;
      char v9 = v13;
      if (v14 != v13)
      {
        do
        {
          if (*((char *)v8 - 1) < 0) {
            operator delete(*(v8 - 3));
          }
          v8 -= 3;
        }
        while (v8 != v7);
        char v9 = v13;
      }
      long long v14 = v7;
      operator delete(v9);
    }
  }
  else
  {
    bzero((void *)a2, 0x438uLL);
    sub_5A9D64(a2);
    *(void *)(a2 + 816) = -1;
    *(_DWORD *)(a2 + 824) = 0;
    *(void *)(a2 + 832) = 0;
    *(void *)(a2 + 848) = 0;
    *(void *)(a2 + 840) = 0;
    *(_DWORD *)(a2 + 856) = 0;
    *(unsigned char *)(a2 + 864) = 2;
    *(_DWORD *)(a2 + 872) = -1;
    *(_OWORD *)(a2 + 880) = 0u;
    *(_OWORD *)(a2 + 896) = 0u;
    *(_OWORD *)(a2 + 912) = 0u;
    *(_OWORD *)(a2 + 928) = 0u;
    *(_OWORD *)(a2 + 944) = 0u;
    *(_OWORD *)(a2 + 960) = 0u;
    *(void *)(a2 + 976) = 0;
    *(_DWORD *)(a2 + 984) = 1065353216;
    *(unsigned char *)(a2 + 992) = 1;
    *(_DWORD *)(a2 + 1000) = 0;
    *(_OWORD *)(a2 + 1008) = 0u;
    *(_OWORD *)(a2 + 1024) = 0u;
    *(_OWORD *)(a2 + 1040) = 0u;
    *(void *)(a2 + 1056) = 0;
    *(_DWORD *)(a2 + 1064) = 1065353216;
    *(unsigned char *)(a2 + 1072) = 1;
  }
}

void sub_84F5B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4D4B58((uint64_t)va);
  sub_52F1E8(v3);
  sub_4D4880((void **)(v4 - 104));
  _Unwind_Resume(a1);
}

void sub_84F5D8(_Unwind_Exception *a1)
{
  sub_52F1E8(v1);
  sub_4D4880((void **)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_84F610(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = 5144;
  if (!*(unsigned char *)(a1 + 2180)) {
    uint64_t v4 = 2152;
  }
  uint64_t v18 = *(void *)(a1 + v4);
  sub_891EB4((uint64_t)&v14);
  sub_7C4620(a2, (uint64_t)&v14, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 418), 3, (void *)(a1 + 5176));
  sub_63841C(a2, 4);
  uint64_t v5 = 128;
  if (!*(unsigned char *)(a1 + 2176)) {
    uint64_t v5 = 136;
  }
  v13[0] = *(void *)(*(void *)(a1 + 2160) + v5);
  sub_638408(a2, &v18, v13);
  sub_5F3D48((uint64_t)v13, (uint64_t)&qword_25CA580);
  char v12 = 1;
  sub_5F6090(v13, (uint64_t)&qword_25CA580, &v18, &v12);
  sub_638E74(a2, (uint64_t)v13);
  sub_4D4B58((uint64_t)v13);
  uint64_t v6 = v17;
  if (v17)
  {
    do
    {
      uint64_t v7 = (void *)*v6;
      sub_4F4B48((uint64_t)(v6 + 2));
      operator delete(v6);
      uint64_t v6 = v7;
    }
    while (v7);
  }
  uint64_t v8 = v16;
  long long v16 = 0;
  if (v8) {
    operator delete(v8);
  }
  char v9 = v14;
  if (v14)
  {
    char v10 = v15;
    long long v11 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v10 - 1) < 0) {
          operator delete(*(v10 - 3));
        }
        v10 -= 3;
      }
      while (v10 != v9);
      long long v11 = v14;
    }
    uint64_t v15 = v9;
    operator delete(v11);
  }
}

void sub_84F78C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4D4B58((uint64_t)va);
  sub_52F1E8(v3);
  sub_4D4880((void **)(v4 - 112));
  _Unwind_Resume(a1);
}

void sub_84F7B4(_Unwind_Exception *a1)
{
  sub_52F1E8(v1);
  sub_4D4880((void **)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_84F7D8(_Unwind_Exception *a1)
{
  sub_4D4880((void **)(v1 - 112));
  _Unwind_Resume(a1);
}

void ***sub_84F7EC(void ***a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    uint64_t v3 = a1[1];
    uint64_t v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        v3 -= 9;
        sub_8728F4((uint64_t)(a1 + 2), v3);
      }
      while (v3 != v2);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_84F858(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 2181))
  {
    uint64_t v4 = *(void *)(a1 + 2160);
    uint64_t v5 = (uint64_t *)(v4 + 128);
    uint64_t v6 = (uint64_t *)(v4 + 136);
    if (*(unsigned char *)(a1 + 2176)) {
      uint64_t v7 = v5;
    }
    else {
      uint64_t v7 = v6;
    }
  }
  else
  {
    uint64_t v7 = (uint64_t *)(a1 + 2152);
  }
  uint64_t v37 = *v7;
  sub_891510(a1 + 2200, (uint64_t)&v32);
  sub_7C47A4(a2, (uint64_t)&v32);
  uint64_t v8 = nullsub_1(&v32);
  sub_638D90(a2, v8);
  sub_7C43E4(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 418));
  char v9 = (unsigned char *)(a1 + 5184);
  if (*(unsigned char *)(a1 + 7908)) {
    uint64_t v10 = *(void *)(a1 + 5344);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v31 = v10;
  sub_638408(a2, &v37, &v31);
  sub_638A00(a2, (void *)(a1 + 5176));
  sub_89402C(a1 + 2200, (uint64_t)&v27);
  if (sub_65FC8(&v27)) {
    sub_7C47B0(a2, (uint64_t)&v27);
  }
  if (*v9) {
    int v11 = 14;
  }
  else {
    int v11 = 6;
  }
  sub_63841C(a2, v11);
  if (!*v9 && !*(unsigned char *)(a1 + 5185))
  {
    sub_5F3D48((uint64_t)v26, (uint64_t)&qword_25CA580);
    char v25 = 1;
    sub_5F6090(v26, (uint64_t)&qword_25CA580, &v37, &v25);
    sub_638E74(a2, (uint64_t)v26);
    sub_4D4B58((uint64_t)v26);
  }
  char v12 = v30;
  if (v30)
  {
    do
    {
      long long v13 = (void *)*v12;
      sub_4F4B48((uint64_t)(v12 + 2));
      operator delete(v12);
      char v12 = v13;
    }
    while (v13);
  }
  long long v14 = v29;
  unint64_t v29 = 0;
  if (v14) {
    operator delete(v14);
  }
  uint64_t v15 = v27;
  if (v27)
  {
    long long v16 = v28;
    unint64_t v17 = v27;
    if (v28 != v27)
    {
      do
      {
        if (*((char *)v16 - 1) < 0) {
          operator delete(*(v16 - 3));
        }
        v16 -= 3;
      }
      while (v16 != v15);
      unint64_t v17 = v27;
    }
    unint64_t v28 = v15;
    operator delete(v17);
  }
  uint64_t v18 = v36;
  if (v36 && !atomic_fetch_add(&v36->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
  }
  uint64_t v19 = v35;
  if (v35)
  {
    do
    {
      std::string::size_type v20 = (void *)*v19;
      sub_4F4B48((uint64_t)(v19 + 2));
      operator delete(v19);
      uint64_t v19 = v20;
    }
    while (v20);
  }
  char v21 = v34;
  long long v34 = 0;
  if (v21) {
    operator delete(v21);
  }
  uint64_t v22 = v32;
  if (v32)
  {
    unint64_t v23 = v33;
    unint64_t v24 = v32;
    if (v33 != v32)
    {
      do
      {
        if (*((char *)v23 - 1) < 0) {
          operator delete(*(v23 - 3));
        }
        v23 -= 3;
      }
      while (v23 != v22);
      unint64_t v24 = v32;
    }
    uint64_t v33 = v22;
    operator delete(v24);
  }
}

void sub_84FB1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31)
{
  sub_4D4B58((uint64_t)&a11);
  sub_4D4880(&a31);
  sub_52F1E8(v31);
  sub_4F31D0((void **)(v32 - 160));
  _Unwind_Resume(a1);
}

void sub_84FB90(uint64_t *a1, void *a2)
{
  uint64_t v33 = a1[2];
  uint64_t v39 = v33;
  unint64_t v2 = 0x1A8C536FE1A8C537 * ((uint64_t)(a2[1] - *a2) >> 3);
  if (v2 <= 1) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 0x1A8C536FE1A8C537 * ((uint64_t)(a2[1] - *a2) >> 3);
  }
  if (v2 >= 2)
  {
    uint64_t v6 = (void *)(v33 + 7440);
    unint64_t v7 = 1;
    while (1)
    {
      uint64_t v8 = sub_8729D4(a2, v7 - 1);
      uint64_t v9 = sub_8729D4(a2, v7);
      if (sub_7C49E4(v8) || sub_7C49E4(v9))
      {
        uint64_t v38 = sub_638A34(v8);
        uint64_t v37 = sub_638A2C(v9);
        uint64_t v10 = sub_638A2C(v8);
        if (!sub_7C49E4(v8) || !sub_7C49E4(v9)) {
          goto LABEL_15;
        }
        unint64_t v11 = sub_46E118(v8);
        uint64_t v12 = sub_6672BC(v6, v11);
        unint64_t v13 = sub_46E118(v9);
        uint64_t v14 = sub_6672BC(v6, v13);
        uint64_t v15 = sub_686074(v14);
        sub_685CD8(v12);
        if (v15 == v16) {
          break;
        }
      }
LABEL_7:
      if (v3 == ++v7) {
        return;
      }
    }
    if (v38 - v37 <= *a1)
    {
      sub_638430(v9, &v38);
      sub_872C14(&v39, v9);
    }
LABEL_15:
    if (sub_7C49E4(v8) || !sub_7C49E4(v9)) {
      goto LABEL_46;
    }
    unint64_t v17 = sub_46E118(v9);
    uint64_t v18 = sub_6672BC(v6, v17);
    uint64_t v19 = v38;
    if (v38 < v37) {
      uint64_t v19 = v10;
    }
    uint64_t v36 = v19;
    BOOL v20 = v19 < v37;
    uint64_t v21 = v19 - v37;
    if (v20) {
      goto LABEL_46;
    }
    uint64_t v22 = v18;
    double v23 = (double)*a1 * 1.5;
    if (v23 >= 0.0)
    {
      if (v23 >= 4.50359963e15) {
        goto LABEL_28;
      }
      uint64_t v24 = (uint64_t)(v23 + v23) + 1;
    }
    else
    {
      if (v23 <= -4.50359963e15) {
        goto LABEL_28;
      }
      uint64_t v24 = (uint64_t)(v23 + v23);
      if (v24 >= 1) {
        --v24;
      }
    }
    double v23 = (double)(v24 >> 1);
LABEL_28:
    if (v21 <= (uint64_t)v23)
    {
      uint64_t v35 = sub_686074(v18);
      if (sub_683488(v22)) {
        uint64_t v25 = *(void *)(v33 + 5176);
      }
      else {
        uint64_t v25 = 0;
      }
      v34[0] = sub_638A20(v9);
      v34[1] = v26;
      uint64_t v27 = sub_6383A0(v34);
      double v28 = (double)*a1 * 1.5;
      if (v28 >= 0.0)
      {
        double v29 = (double)*a1 * 1.5;
        if (v28 < 4.50359963e15)
        {
          uint64_t v30 = (uint64_t)(v28 + v28) + 1;
LABEL_39:
          double v29 = (double)(v30 >> 1);
        }
      }
      else
      {
        double v29 = (double)*a1 * 1.5;
        if (v28 > -4.50359963e15)
        {
          uint64_t v30 = (uint64_t)(v28 + v28);
          if (v30 >= 1) {
            --v30;
          }
          goto LABEL_39;
        }
      }
      if (v35 == 0x7FFFFFFFFFFFFFFFLL || v35 >= v36)
      {
        uint64_t v31 = &v36;
        goto LABEL_45;
      }
      if (v27 < a1[1] + v25 + (uint64_t)v29)
      {
        uint64_t v31 = &v35;
LABEL_45:
        sub_638430(v9, v31);
        sub_872C14(&v39, v9);
        goto LABEL_46;
      }
      if (v28 >= 0.0)
      {
        if (v28 < 4.50359963e15)
        {
          uint64_t v32 = (uint64_t)(v28 + v28) + 1;
LABEL_58:
          double v28 = (double)(v32 >> 1);
        }
      }
      else if (v28 > -4.50359963e15)
      {
        uint64_t v32 = (uint64_t)(v28 + v28);
        if (v32 >= 1) {
          --v32;
        }
        goto LABEL_58;
      }
      v34[0] = v36 - (uint64_t)v28;
      uint64_t v31 = v34;
      goto LABEL_45;
    }
LABEL_46:
    if (sub_7C49E4(v8) && !sub_7C49E4(v9) && v38 >= v37 && v38 - v37 <= *a1)
    {
      sub_63843C(v8, &v37);
      sub_872C14(&v39, v8);
    }
    goto LABEL_7;
  }
}

void sub_84FF7C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 2180))
  {
    sub_894984(a1 + 2200, (uint64_t)&v18);
    sub_639530(a2, (uint64_t)&v18, (void *)(a1 + 5176), 0, 0, 1);
    sub_63841C(a2, 41);
    uint64_t v17 = *(void *)(a1 + 2152) - *(void *)(a1 + 5176);
    sub_638408(a2, &v17, (void *)(a1 + 5192));
    sub_639538(a2, 4);
    uint64_t v4 = v22;
    if (v22 && !atomic_fetch_add(&v22->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    uint64_t v5 = v21;
    if (v21)
    {
      do
      {
        uint64_t v6 = (void *)*v5;
        sub_4F4B48((uint64_t)(v5 + 2));
        operator delete(v5);
        uint64_t v5 = v6;
      }
      while (v6);
    }
    unint64_t v7 = __p;
    long long __p = 0;
    if (v7) {
      operator delete(v7);
    }
    uint64_t v8 = (void **)v18;
    if (v18)
    {
      uint64_t v9 = v19;
      uint64_t v10 = v18;
      if (v19 != v18)
      {
        do
        {
          if (*((char *)v9 - 1) < 0) {
            operator delete(*(v9 - 3));
          }
          v9 -= 3;
        }
        while (v9 != v8);
        uint64_t v10 = v18;
      }
      uint64_t v19 = v8;
      operator delete(v10);
    }
  }
  else
  {
    *(void *)(a2 + 400) = 0;
    *(_OWORD *)(a2 + 368) = 0u;
    *(_OWORD *)(a2 + 384) = 0u;
    *(_OWORD *)(a2 + 336) = 0u;
    *(_OWORD *)(a2 + 352) = 0u;
    *(_OWORD *)(a2 + 304) = 0u;
    *(_OWORD *)(a2 + 320) = 0u;
    *(_OWORD *)(a2 + 272) = 0u;
    *(_OWORD *)(a2 + 288) = 0u;
    *(_OWORD *)(a2 + 224) = 0u;
    *(_OWORD *)(a2 + 240) = 0u;
    *(_OWORD *)(a2 + 192) = 0u;
    *(_OWORD *)(a2 + 208) = 0u;
    *(_OWORD *)(a2 + 160) = 0u;
    *(_OWORD *)(a2 + 176) = 0u;
    *(_OWORD *)(a2 + 128) = 0u;
    *(_OWORD *)(a2 + 144) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 112) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_DWORD *)a2 = -1;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 8) = 0;
    *(_DWORD *)(a2 + 32) = 0;
    int64x2_t v11 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
    *(int64x2_t *)(a2 + 40) = v11;
    *(_DWORD *)(a2 + 56) = 0x7FFFFFFF;
    *(int64x2_t *)(a2 + 64) = v11;
    *(_DWORD *)(a2 + 80) = 0x7FFFFFFF;
    *(_DWORD *)(a2 + 88) = 0x7FFFFFFF;
    *(void *)(a2 + 92) = 0x7FFFFFFF7FFFFFFFLL;
    *(void *)(a2 + 112) = 0x8000000080000000;
    *(_OWORD *)(a2 + 120) = 0u;
    *(_OWORD *)(a2 + 136) = 0u;
    *(_OWORD *)(a2 + 152) = 0u;
    *(unsigned char *)(a2 + 168) = 0;
    *(void *)(a2 + 172) = 0x8000000080000000;
    *(_DWORD *)(a2 + 180) = 0x7FFFFFFF;
    *(_DWORD *)(a2 + 192) = -1;
    *(void *)(a2 + 208) = 0x7FFFFFFFFFFFFFFFLL;
    *(_DWORD *)(a2 + 216) = 0x7FFFFFFF;
    *(void *)(a2 + 220) = 0x7FFFFFFF7FFFFFFFLL;
    __asm { FMOV            V1.2D, #-1.0 }
    *(_OWORD *)(a2 + 240) = _Q1;
    *(_OWORD *)(a2 + 256) = 0u;
    *(void *)(a2 + 256) = 0;
    *(void *)(a2 + 264) = 0;
    *(void *)(a2 + 272) = 0;
    *(unsigned char *)(a2 + 280) = 1;
    *(void *)(a2 + 296) = 0;
    *(void *)(a2 + 304) = 0;
    *(void *)(a2 + 288) = 0;
    *(_WORD *)(a2 + 312) = 0;
    *(_DWORD *)(a2 + 316) = -1;
    *(void *)(a2 + 328) = 0x7FFFFFFFFFFFFFFFLL;
    *(_DWORD *)(a2 + 340) = -1;
    *(void *)(a2 + 344) = -1;
    *(_DWORD *)(a2 + 356) = 1;
    *(_DWORD *)(a2 + 384) = 0;
    *(void *)(a2 + 360) = 0;
    *(void *)(a2 + 368) = 0;
    *(void *)(a2 + 376) = 0;
    *(void *)(a2 + 388) = 0x7FFFFFFF7FFFFFFFLL;
    *(_DWORD *)(a2 + 400) = -1;
  }
}

void sub_8501E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_639B78(v2);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_850218(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v3 = *(unsigned __int8 *)(a1 + 2181);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  if (!v3) {
    return;
  }
  sub_7FC268((uint64_t)&v41);
  sub_639530((uint64_t)v46, (uint64_t)&v41, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C((uint64_t)v46, 42);
  uint64_t v5 = *(void *)(a1 + 2160);
  if (*(unsigned char *)(v5 + 1992))
  {
    uint64_t v6 = sub_62CCC0(v5);
    uint64_t v7 = sub_62BD94(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    if (v6 + v7 <= *(void *)(a1 + 5192))
    {
      uint64_t v9 = v6;
      do
      {
        sub_8506D4(a1, v9, *(void *)(*(void *)(a1 + 2160) + 2000) + v9, (uint64_t)v31);
        if (sub_564868(v31) && v31[0] + v7 <= *(void *)(a1 + 5192)) {
          uint64_t v9 = v31[0];
        }
        uint64_t v29 = v9 + v7;
        uint64_t v30 = v9;
        sub_638408((uint64_t)v46, &v29, &v30);
        sub_69200((uint64_t)v46, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 422));
        sub_639538((uint64_t)v46, 3);
        unint64_t v10 = a2[1];
        if (v10 >= a2[2])
        {
          uint64_t v11 = sub_75796C(a2, (uint64_t)v46);
        }
        else
        {
          __n128 v8 = sub_757B28((uint64_t)(a2 + 2), a2[1], (uint64_t)v46);
          uint64_t v11 = v10 + 408;
          a2[1] = v10 + 408;
        }
        a2[1] = v11;
        uint64_t v12 = v30;
        if (v40 < 0)
        {
          operator delete(__p);
          if ((v38 & 0x80000000) == 0)
          {
LABEL_14:
            if ((v36 & 0x80000000) == 0) {
              goto LABEL_15;
            }
            goto LABEL_20;
          }
        }
        else if ((v38 & 0x80000000) == 0)
        {
          goto LABEL_14;
        }
        operator delete(v37);
        if ((v36 & 0x80000000) == 0)
        {
LABEL_15:
          if ((v34 & 0x80000000) == 0) {
            goto LABEL_16;
          }
          goto LABEL_21;
        }
LABEL_20:
        operator delete(v35);
        if ((v34 & 0x80000000) == 0)
        {
LABEL_16:
          if (v32 < 0) {
            goto LABEL_22;
          }
          goto LABEL_5;
        }
LABEL_21:
        operator delete(v33);
        if (v32 < 0) {
LABEL_22:
        }
          operator delete((void *)v31[1]);
LABEL_5:
        uint64_t v9 = v12 + v6;
      }
      while (v9 + v7 <= *(void *)(a1 + 5192));
    }
  }
  else
  {
    uint64_t v13 = 128;
    if (!*(unsigned char *)(a1 + 2176)) {
      uint64_t v13 = 136;
    }
    v31[0] = *(void *)(v5 + v13);
    sub_638408((uint64_t)v46, (void *)(a1 + 5192), v31);
    unint64_t v14 = a2[1];
    if (v14 >= a2[2])
    {
      a2[1] = sub_75796C(a2, (uint64_t)v46);
      uint64_t v15 = v57;
      if (!v57) {
        goto LABEL_29;
      }
      goto LABEL_28;
    }
    __n128 v8 = sub_757B28((uint64_t)(a2 + 2), a2[1], (uint64_t)v46);
    a2[1] = v14 + 408;
    a2[1] = v14 + 408;
  }
  uint64_t v15 = v57;
  if (v57)
  {
LABEL_28:
    long long v58 = v15;
    operator delete(v15);
  }
LABEL_29:
  if (v55)
  {
    long long v56 = v55;
    operator delete(v55);
  }
  uint64_t v16 = (void **)v53;
  if (v53)
  {
    uint64_t v17 = v54;
    uint64_t v18 = v53;
    if (v54 != v53)
    {
      do
        uint64_t v17 = sub_4F31D0(v17 - 13);
      while (v17 != v16);
      uint64_t v18 = v53;
    }
    uint64_t v54 = v16;
    operator delete(v18);
  }
  if (v51)
  {
    long long v52 = v51;
    operator delete(v51);
  }
  if (v49)
  {
    long long v50 = v49;
    operator delete(v49);
  }
  uint64_t v19 = v47;
  if (v47)
  {
    uint64_t v20 = (uint64_t)v48;
    uint64_t v21 = v47;
    if (v48 != v47)
    {
      do
        uint64_t v20 = sub_4D4B58(v20 - 160);
      while ((void *)v20 != v19);
      uint64_t v21 = v47;
    }
    unint64_t v48 = v19;
    operator delete(v21);
  }
  uint64_t v22 = v45;
  if (v45 && !atomic_fetch_add(&v45->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *, __n128))v22->__on_zero_shared)(v22, v8);
    std::__shared_weak_count::__release_weak(v22);
  }
  double v23 = v44;
  if (v44)
  {
    do
    {
      uint64_t v24 = (void *)*v23;
      sub_4F4B48((uint64_t)(v23 + 2));
      operator delete(v23);
      double v23 = v24;
    }
    while (v24);
  }
  uint64_t v25 = v43;
  uint64_t v43 = 0;
  if (v25) {
    operator delete(v25);
  }
  uint64_t v26 = (void **)v41;
  if (v41)
  {
    uint64_t v27 = v42;
    double v28 = v41;
    if (v42 != v41)
    {
      do
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      while (v27 != v26);
      double v28 = v41;
    }
    long long v42 = v26;
    operator delete(v28);
  }
}

void sub_850634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  v47[1] = v48;
  sub_639B78(&a47);
  sub_4F31D0(&a34);
  sub_591DFC(v47);
  _Unwind_Resume(a1);
}

uint64_t sub_8506D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 5200);
  uint64_t v6 = *(void *)(a1 + 5208);
  if (v5 == v6)
  {
LABEL_10:
    *(_OWORD *)(a4 + 168) = 0u;
    *(_OWORD *)(a4 + 152) = 0u;
    *(_OWORD *)(a4 + 136) = 0u;
    *(_OWORD *)(a4 + 120) = 0u;
    *(_OWORD *)(a4 + 104) = 0u;
    *(_OWORD *)(a4 + 88) = 0u;
    *(_OWORD *)(a4 + 72) = 0u;
    *(_OWORD *)(a4 + 56) = 0u;
    *(_OWORD *)(a4 + 40) = 0u;
    *(_OWORD *)(a4 + 24) = 0u;
    *(_OWORD *)(a4 + 8) = 0u;
    *(void *)a4 = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t result = sub_6F30A4(a4 + 8);
    *(void *)(a4 + 160) = -1;
    *(void *)(a4 + 168) = -1;
    *(void *)(a4 + 176) = 0;
  }
  else
  {
    while (1)
    {
      if (sub_63ACB4(v5))
      {
        if (*(void *)v5 > a3) {
          goto LABEL_10;
        }
        if (*(void *)v5 >= a2)
        {
          uint64_t v10 = sub_856CCC(*(void **)(a1 + 7968), *(void *)(v5 + 168));
          if (sub_63A908(v10) || sub_63A8F8(v10)) {
            break;
          }
        }
      }
      v5 += 184;
      if (v5 == v6) {
        goto LABEL_10;
      }
    }
    *(void *)a4 = *(void *)v5;
    uint64_t result = (uint64_t)sub_4AA8E0((char *)(a4 + 8), (long long *)(v5 + 8));
    long long v12 = *(_OWORD *)(v5 + 160);
    *(void *)(a4 + 176) = *(void *)(v5 + 176);
    *(_OWORD *)(a4 + 160) = v12;
  }
  return result;
}

void sub_850804(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_894B88((unsigned char *)(a1 + 2200), (uint64_t *)&v13);
  sub_639530(a2, (uint64_t)&v13, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a2, 29);
  v12.n128_u64[0] = sub_8509B0(a1);
  v12.n128_u64[1] = v4;
  sub_638424(a2, &v12);
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 420));
  sub_638448(a2, *(void *)(a1 + 2152));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  uint64_t v5 = v17;
  if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  uint64_t v6 = v16;
  if (v16)
  {
    do
    {
      uint64_t v7 = (void *)*v6;
      sub_4F4B48((uint64_t)(v6 + 2));
      operator delete(v6);
      uint64_t v6 = v7;
    }
    while (v7);
  }
  __n128 v8 = __p;
  long long __p = 0;
  if (v8) {
    operator delete(v8);
  }
  uint64_t v9 = (void **)v13;
  if (v13)
  {
    uint64_t v10 = v14;
    uint64_t v11 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v10 - 1) < 0) {
          operator delete(*(v10 - 3));
        }
        v10 -= 3;
      }
      while (v10 != v9);
      uint64_t v11 = v13;
    }
    unint64_t v14 = v9;
    operator delete(v11);
  }
}

void sub_85097C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_850990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_8509B0(uint64_t a1)
{
  unint64_t v2 = (unsigned char *)(a1 + 7905);
  if (!*(unsigned char *)(a1 + 2181))
  {
    uint64_t v7 = *(void *)(a1 + 5192);
    if (*v2) {
      goto LABEL_6;
    }
LABEL_10:
    if (*(unsigned char *)(a1 + 7910))
    {
      uint64_t v10 = (uint64_t *)(a1 + 7880);
    }
    else if (*(unsigned char *)(a1 + 7911))
    {
      uint64_t v10 = (uint64_t *)(a1 + 7888);
    }
    else if (*(unsigned char *)(a1 + 7912))
    {
      uint64_t v10 = (uint64_t *)(a1 + 7896);
    }
    else if (*(unsigned char *)(a1 + 7906))
    {
      uint64_t v10 = (uint64_t *)(a1 + 7864);
    }
    else
    {
      uint64_t v10 = (uint64_t *)(a1 + 7872);
    }
    uint64_t v8 = *v10;
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)(a1 + 2160);
  unint64_t v4 = (uint64_t *)(v3 + 128);
  uint64_t v5 = (uint64_t *)(v3 + 136);
  if (*(unsigned char *)(a1 + 2176)) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v5;
  }
  uint64_t v7 = *v6;
  if (!*v2) {
    goto LABEL_10;
  }
LABEL_6:
  uint64_t v8 = sub_62B9C8(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v9 = sub_62BA34(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (!*(unsigned char *)(a1 + 2176)) {
    uint64_t v8 = v9;
  }
LABEL_20:
  if (sub_62BD94(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188)) + v8 <= *(void *)(a1 + 5192)) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = 0;
  }
  sub_2F99CC(&v13, v7, v11);
  return v13;
}

void sub_850ADC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 2160);
  int v5 = *(_DWORD *)(v4 + 164);
  int v6 = v5 / 10;
  int v7 = v5 % 10;
  if (v5 < 0) {
    char v8 = -5;
  }
  else {
    char v8 = 5;
  }
  double v9 = *(double *)(v4 + 2008)
     / 3.6
     * (double)(int)(v6 + (((103 * (char)(v8 + v7)) >> 15) & 1) + ((103 * (char)(v8 + v7)) >> 10))
     * 100.0;
  if (v9 >= 0.0)
  {
    double v10 = *(double *)(v4 + 2008)
        / 3.6
        * (double)(int)(v6 + (((103 * (char)(v8 + v7)) >> 15) & 1) + ((103 * (char)(v8 + v7)) >> 10))
        * 100.0;
    if (v9 >= 4.50359963e15) {
      goto LABEL_12;
    }
    uint64_t v11 = (uint64_t)(v9 + v9) + 1;
  }
  else
  {
    double v10 = *(double *)(v4 + 2008)
        / 3.6
        * (double)(int)(v6 + (((103 * (char)(v8 + v7)) >> 15) & 1) + ((103 * (char)(v8 + v7)) >> 10))
        * 100.0;
    if (v9 <= -4.50359963e15) {
      goto LABEL_12;
    }
    uint64_t v11 = (uint64_t)(v9 + v9);
    if (v11 >= 1) {
      --v11;
    }
  }
  double v10 = (double)(v11 >> 1);
LABEL_12:
  if (v10 >= 9.22337204e18)
  {
    uint64_t v13 = 0x7FFFFFFFFFFFFFFELL;
    goto LABEL_23;
  }
  if (v9 >= 0.0)
  {
    if (v9 < 4.50359963e15)
    {
      uint64_t v12 = (uint64_t)(v9 + v9) + 1;
LABEL_21:
      double v9 = (double)(v12 >> 1);
    }
  }
  else if (v9 > -4.50359963e15)
  {
    uint64_t v12 = (uint64_t)(v9 + v9);
    if (v12 >= 1) {
      --v12;
    }
    goto LABEL_21;
  }
  uint64_t v13 = (uint64_t)v9;
LABEL_23:
  if (v13 >= *(void *)(a1 + 5192)) {
    uint64_t v14 = *(void *)(a1 + 5192);
  }
  else {
    uint64_t v14 = v13;
  }
  sub_894B88((unsigned char *)(a1 + 2200), (uint64_t *)&v24);
  sub_639530(a2, (uint64_t)&v24, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a2, 29);
  sub_638430(a2, (void *)(a1 + 5192));
  if (*(void *)(a1 + 5192) <= v14) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = v14;
  }
  uint64_t v23 = v15;
  sub_63843C(a2, &v23);
  sub_638448(a2, *(void *)(a1 + 2152));
  uint64_t v16 = v28;
  if (v28 && !atomic_fetch_add(&v28->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  uint64_t v17 = v27;
  if (v27)
  {
    do
    {
      uint64_t v18 = (void *)*v17;
      sub_4F4B48((uint64_t)(v17 + 2));
      operator delete(v17);
      uint64_t v17 = v18;
    }
    while (v18);
  }
  uint64_t v19 = __p;
  long long __p = 0;
  if (v19) {
    operator delete(v19);
  }
  uint64_t v20 = (void **)v24;
  if (v24)
  {
    uint64_t v21 = v25;
    uint64_t v22 = v24;
    if (v25 != v24)
    {
      do
      {
        if (*((char *)v21 - 1) < 0) {
          operator delete(*(v21 - 3));
        }
        v21 -= 3;
      }
      while (v21 != v20);
      uint64_t v22 = v24;
    }
    uint64_t v25 = v20;
    operator delete(v22);
  }
}

void sub_850D90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_639B78(v2);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_850DC4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_895380(a1 + 2200);
  sub_639530(a2, (uint64_t)&v16, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a2, 31);
  uint64_t v4 = sub_62B9C8(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v5 = sub_62BA34(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (*(unsigned char *)(a1 + 7911))
  {
    int v6 = (uint64_t *)(a1 + 7888);
  }
  else if (*(unsigned char *)(a1 + 7912))
  {
    int v6 = (uint64_t *)(a1 + 7896);
  }
  else if (*(unsigned char *)(a1 + 7906))
  {
    int v6 = (uint64_t *)(a1 + 7864);
  }
  else
  {
    int v6 = (uint64_t *)(a1 + 7872);
  }
  if (*(unsigned char *)(a1 + 2176)) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = v5;
  }
  sub_2F99CC(&v21, v7, *v6);
  __n128 v15 = v21;
  sub_638424(a2, &v15);
  sub_638448(a2, *(void *)(a1 + 2152));
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 421));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  char v8 = v20;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  double v9 = v19;
  if (v19)
  {
    do
    {
      double v10 = (void *)*v9;
      sub_4F4B48((uint64_t)(v9 + 2));
      operator delete(v9);
      double v9 = v10;
    }
    while (v10);
  }
  uint64_t v11 = __p;
  long long __p = 0;
  if (v11) {
    operator delete(v11);
  }
  uint64_t v12 = (void **)v16;
  if (v16)
  {
    uint64_t v13 = v17;
    uint64_t v14 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v13 - 1) < 0) {
          operator delete(*(v13 - 3));
        }
        v13 -= 3;
      }
      while (v13 != v12);
      uint64_t v14 = v16;
    }
    uint64_t v17 = v12;
    operator delete(v14);
  }
}

void sub_850FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_850FD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_850FF4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (unsigned char *)(a1 + 6488);
  if (*(unsigned char *)(a1 + 7915))
  {
    uint64_t v5 = (unsigned char *)(a1 + 2200);
    if (v4[1418]) {
      sub_8969A8(v5, (uint64_t)&v18);
    }
    else {
      sub_895D0C((std::string::size_type)v5, (uint64_t)&v18);
    }
  }
  else
  {
    sub_8958B8(a1 + 2200, (uint64_t)&v18);
  }
  sub_639530(a2, (uint64_t)&v18, (void *)(a1 + 5176), 0, 0, 1);
  if (v4[1418]) {
    int v6 = 36;
  }
  else {
    int v6 = 35;
  }
  sub_63841C(a2, v6);
  uint64_t v7 = sub_62C410(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v8 = *(void *)(a1 + 6112);
  if (v8 + v7 >= *(void *)(a1 + 5192)) {
    uint64_t v9 = *(void *)(a1 + 5192);
  }
  else {
    uint64_t v9 = v8 + v7;
  }
  if (*v4 && *(void *)(a1 + 6304) < v9) {
    uint64_t v9 = *(void *)(a1 + 6304);
  }
  sub_2F99CC(&v23, v9, v8);
  __n128 v17 = v23;
  sub_638424(a2, &v17);
  sub_638448(a2, *(void *)(a1 + 2152));
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 428));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  double v10 = v22;
  if (v22 && !atomic_fetch_add(&v22->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  uint64_t v11 = v21;
  if (v21)
  {
    do
    {
      uint64_t v12 = (void *)*v11;
      sub_4F4B48((uint64_t)(v11 + 2));
      operator delete(v11);
      uint64_t v11 = v12;
    }
    while (v12);
  }
  uint64_t v13 = __p;
  long long __p = 0;
  if (v13) {
    operator delete(v13);
  }
  uint64_t v14 = (void **)v18;
  if (v18)
  {
    __n128 v15 = v19;
    uint64_t v16 = v18;
    if (v19 != v18)
    {
      do
      {
        if (*((char *)v15 - 1) < 0) {
          operator delete(*(v15 - 3));
        }
        v15 -= 3;
      }
      while (v15 != v14);
      uint64_t v16 = v18;
    }
    uint64_t v19 = v14;
    operator delete(v16);
  }
}

void sub_8511EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_851200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_851220(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_895550(a1 + 2200, (uint64_t)&v16);
  sub_639530(a2, (uint64_t)&v16, (void *)(a1 + 5176), 0, 0, 1);
  if (*(unsigned char *)(a1 + 7906)) {
    int v4 = 34;
  }
  else {
    int v4 = 33;
  }
  sub_63841C(a2, v4);
  uint64_t v5 = sub_62C62C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (*(void *)(a1 + 5192) >= v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = *(void *)(a1 + 5192);
  }
  if (*(unsigned char *)(a1 + 6296)) {
    uint64_t v6 = *(void *)(a1 + 6112);
  }
  uint64_t v7 = 7864;
  if (!*(unsigned char *)(a1 + 7906)) {
    uint64_t v7 = 7872;
  }
  sub_2F99CC(&v21, v6, *(void *)(a1 + v7));
  __n128 v15 = v21;
  sub_638424(a2, &v15);
  sub_638448(a2, *(void *)(a1 + 2152));
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 427));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  uint64_t v8 = v20;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  uint64_t v9 = v19;
  if (v19)
  {
    do
    {
      double v10 = (void *)*v9;
      sub_4F4B48((uint64_t)(v9 + 2));
      operator delete(v9);
      uint64_t v9 = v10;
    }
    while (v10);
  }
  uint64_t v11 = __p;
  long long __p = 0;
  if (v11) {
    operator delete(v11);
  }
  uint64_t v12 = (void **)v16;
  if (v16)
  {
    uint64_t v13 = v17;
    uint64_t v14 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v13 - 1) < 0) {
          operator delete(*(v13 - 3));
        }
        v13 -= 3;
      }
      while (v13 != v12);
      uint64_t v14 = v16;
    }
    __n128 v17 = v12;
    operator delete(v14);
  }
}

void sub_8513F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_851408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_851428(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = (unsigned __int8 *)(a1 + 5524);
  int v5 = *(unsigned __int8 *)(a1 + 7906);
  std::string::size_type v6 = a1 + 2200;
  uint64_t v7 = a1 + 5344;
  if (v5) {
    sub_898DDC(v6, v7, (uint64_t)&v20);
  }
  else {
    sub_899218(v6, v7, (uint64_t)&v20);
  }
  sub_639530(a2, (uint64_t)&v20, (void *)(a1 + 5176), 0, 0, 1);
  if (v4[2382]) {
    int v8 = 40;
  }
  else {
    int v8 = 39;
  }
  sub_63841C(a2, v8);
  uint64_t v9 = sub_62C554(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188), *v4);
  uint64_t v10 = *(void *)(a1 + 5344);
  if (v10 + v9 >= *(void *)(a1 + 5192)) {
    uint64_t v11 = *(void *)(a1 + 5192);
  }
  else {
    uint64_t v11 = v10 + v9;
  }
  if (v4[196] && *(void *)(a1 + 5536) < v11) {
    uint64_t v11 = *(void *)(a1 + 5536);
  }
  sub_2F99CC(&v25, v11, v10);
  __n128 v19 = v25;
  sub_638424(a2, &v19);
  sub_638448(a2, *(void *)(a1 + 2152));
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 429));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  sub_638A0C(a2);
  uint64_t v12 = v24;
  if (v24 && !atomic_fetch_add(&v24->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  uint64_t v13 = v23;
  if (v23)
  {
    do
    {
      uint64_t v14 = (void *)*v13;
      sub_4F4B48((uint64_t)(v13 + 2));
      operator delete(v13);
      uint64_t v13 = v14;
    }
    while (v14);
  }
  __n128 v15 = __p;
  long long __p = 0;
  if (v15) {
    operator delete(v15);
  }
  uint64_t v16 = (void **)v20;
  if (v20)
  {
    __n128 v17 = v21;
    uint64_t v18 = v20;
    if (v21 != v20)
    {
      do
      {
        if (*((char *)v17 - 1) < 0) {
          operator delete(*(v17 - 3));
        }
        v17 -= 3;
      }
      while (v17 != v16);
      uint64_t v18 = v20;
    }
    __n128 v21 = v16;
    operator delete(v18);
  }
}

void sub_85161C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_851630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_851650(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = (unsigned char *)(a1 + 5184);
  sub_89616C(a1 + 2200, 1, *(unsigned __int8 *)(a1 + 7909), 0, (uint64_t)&v15);
  sub_639530(a2, (uint64_t)&v15, (void *)(a1 + 5176), 0, 0, 1);
  sub_2F99CC(&v20, *(void *)(a1 + 7872), 0);
  __n128 v14 = v20;
  sub_638424(a2, &v14);
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 424));
  sub_6396C0(a2, 1);
  if (*v4)
  {
    int v5 = 80;
  }
  else if (v4[2725])
  {
    int v5 = 45;
  }
  else
  {
    int v5 = 44;
  }
  sub_63841C(a2, v5);
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  if (v4[2]) {
    sub_639538(a2, 3);
  }
  if (sub_638A2C(a2) == *(void *)(a1 + 5176)) {
    sub_6396D0(a2, 1);
  }
  if (!v4[2725])
  {
    unsigned int v6 = sub_62BFB0(*(unsigned int **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    sub_6393D0(a2, v6, 0);
  }
  uint64_t v7 = v19;
  if (v19 && !atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  int v8 = v18;
  if (v18)
  {
    do
    {
      uint64_t v9 = (void *)*v8;
      sub_4F4B48((uint64_t)(v8 + 2));
      operator delete(v8);
      int v8 = v9;
    }
    while (v9);
  }
  uint64_t v10 = __p;
  long long __p = 0;
  if (v10) {
    operator delete(v10);
  }
  uint64_t v11 = (void **)v15;
  if (v15)
  {
    uint64_t v12 = v16;
    uint64_t v13 = v15;
    if (v16 != v15)
    {
      do
      {
        if (*((char *)v12 - 1) < 0) {
          operator delete(*(v12 - 3));
        }
        v12 -= 3;
      }
      while (v12 != v11);
      uint64_t v13 = v15;
    }
    uint64_t v16 = v11;
    operator delete(v13);
  }
}

void sub_851868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_8518A8(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v8 = (unsigned char *)(a1 + 5184);
  sub_899CEC(a1 + 2200, a2, a3, *(unsigned __int8 *)(a1 + 7909), (uint64_t *)&__p);
  sub_6393C8(a4, (uint64_t *)&__p, 0, 0, 1);
  sub_638A00(a4, (void *)(a1 + 5176));
  sub_2F99CC(&v17, *(void *)(a1 + 7872), 0);
  __n128 v14 = v17;
  sub_638424(a4, &v14);
  sub_69200(a4, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 424));
  sub_6396C0(a4, 1);
  sub_639724(a4);
  if (*v8)
  {
    int v9 = 80;
  }
  else if (v8[2725])
  {
    int v9 = 45;
  }
  else
  {
    int v9 = 44;
  }
  sub_63841C(a4, v9);
  if (sub_855B3C(a1, a4)) {
    sub_6396C8(a4, 1);
  }
  if (!v8[2725])
  {
    if (*(unsigned char *)(a1 + 2179) && v8[2617]) {
      unsigned int v10 = sub_62C088(*(unsigned int **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    }
    else {
      unsigned int v10 = sub_62BFB0(*(unsigned int **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    }
    sub_6393D0(a4, v10, 0);
  }
  if (sub_638A2C(a4) == *(void *)(a1 + 5176)) {
    sub_6396D0(a4, 1);
  }
  sub_638448(a4, *(void *)(a1 + 2152));
  sub_638458(a4, *(void *)(*(void *)(a2 + 1064) + 2400 * a3 + 872));
  uint64_t v11 = (void **)__p;
  if (__p)
  {
    uint64_t v12 = v16;
    uint64_t v13 = __p;
    if (v16 != __p)
    {
      do
        uint64_t v12 = sub_4F31D0(v12 - 13);
      while (v12 != v11);
      uint64_t v13 = __p;
    }
    uint64_t v16 = v11;
    operator delete(v13);
  }
}

void sub_851A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_5920E0((void **)va);
  _Unwind_Resume(a1);
}

void sub_851ABC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = (unsigned char *)(a1 + 5186);
  uint64_t v5 = sub_856CCC(*(void **)(a1 + 7968), *(void *)(a1 + 6856));
  std::string::size_type v6 = a1 + 2200;
  if (v4[2720]) {
    sub_8974B0(v6, v5, (uint64_t)&v16);
  }
  else {
    sub_896FF4(v6, v5, (uint64_t)&v16);
  }
  sub_639530(a2, (uint64_t)&v16, (void *)(a1 + 5176), 0, 0, 1);
  sub_2F99CC(&v21, *(void *)(a1 + 7896), *(void *)(a1 + 6688));
  __n128 v15 = v21;
  sub_638424(a2, &v15);
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 424));
  sub_6396C0(a2, 1);
  if (v4[2720]) {
    int v7 = 38;
  }
  else {
    int v7 = 37;
  }
  sub_63841C(a2, v7);
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  if (*v4) {
    sub_639538(a2, 3);
  }
  if (sub_638A2C(a2) == *(void *)(a1 + 5176)) {
    sub_6396D0(a2, 1);
  }
  int v8 = v20;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  int v9 = v19;
  if (v19)
  {
    do
    {
      unsigned int v10 = (void *)*v9;
      sub_4F4B48((uint64_t)(v9 + 2));
      operator delete(v9);
      int v9 = v10;
    }
    while (v10);
  }
  uint64_t v11 = __p;
  long long __p = 0;
  if (v11) {
    operator delete(v11);
  }
  uint64_t v12 = (void **)v16;
  if (v16)
  {
    uint64_t v13 = v17;
    __n128 v14 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v13 - 1) < 0) {
          operator delete(*(v13 - 3));
        }
        v13 -= 3;
      }
      while (v13 != v12);
      __n128 v14 = v16;
    }
    __n128 v17 = v12;
    operator delete(v14);
  }
}

void sub_851CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_851CF0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_897840(a1 + 2200, (uint64_t)&v15);
  sub_639530(a2, (uint64_t)&v15, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a2, 70);
  uint64_t v4 = sub_62CA64(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (*(void *)(a1 + 7072) + v4 >= *(void *)(a1 + 5192)) {
    uint64_t v5 = *(void *)(a1 + 5192);
  }
  else {
    uint64_t v5 = *(void *)(a1 + 7072) + v4;
  }
  std::string::size_type v6 = (uint64_t *)(a1 + 7256);
  if (sub_564868((void *)(a1 + 7256)) && *v6 < v5) {
    uint64_t v5 = *v6;
  }
  sub_2F99CC(&v20, v5, *(void *)(a1 + 7072));
  __n128 v14 = v20;
  sub_638424(a2, &v14);
  sub_638448(a2, *(void *)(a1 + 2152));
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 429));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  int v7 = v19;
  if (v19 && !atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  int v8 = v18;
  if (v18)
  {
    do
    {
      int v9 = (void *)*v8;
      sub_4F4B48((uint64_t)(v8 + 2));
      operator delete(v8);
      int v8 = v9;
    }
    while (v9);
  }
  unsigned int v10 = __p;
  long long __p = 0;
  if (v10) {
    operator delete(v10);
  }
  uint64_t v11 = (void **)v15;
  if (v15)
  {
    uint64_t v12 = v16;
    uint64_t v13 = v15;
    if (v16 != v15)
    {
      do
      {
        if (*((char *)v12 - 1) < 0) {
          operator delete(*(v12 - 3));
        }
        v12 -= 3;
      }
      while (v12 != v11);
      uint64_t v13 = v15;
    }
    uint64_t v16 = v11;
    operator delete(v13);
  }
}

void sub_851EBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_851ED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_851EF0(void *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v3 = a1[930];
  uint64_t v4 = a1[931];
  if (v3 != v4)
  {
    uint64_t v6 = (uint64_t)(a1 + 542);
    int v7 = a1 + 647;
    do
    {
      if ((sub_68346C(v3) & 1) != 0 && (sub_684694(v3) & 1) == 0 && (sub_684668(v3) & 1) == 0)
      {
        sub_6760BC(v6, v3, &v25);
        int v8 = v25;
        if (v25 != v26)
        {
          if (sub_637DD8(v25))
          {
            sub_6393C8((uint64_t)v27, (uint64_t *)&v25, 0, 0, 1);
            sub_638A00((uint64_t)v27, v7);
            if (sub_683424(v3) && sub_685CD8(v3) > *v7 && (uint64_t v9 = sub_685CD8(v3), v9 < sub_685CEC(v3))) {
              uint64_t v10 = sub_685CD8(v3) - *v7;
            }
            else {
              uint64_t v10 = sub_685CEC(v3);
            }
            uint64_t v24 = v10;
            sub_638430((uint64_t)v27, &v24);
            sub_685CEC(v3);
            uint64_t v23 = v11;
            sub_63843C((uint64_t)v27, &v23);
            sub_69200((uint64_t)v27, *(unsigned __int8 *)(a1[270] + 423));
            if (sub_855B3C((uint64_t)a1, (uint64_t)v27)) {
              sub_6396C8((uint64_t)v27, 1);
            }
            int v12 = sub_6835F8(v3);
            sub_63841C((uint64_t)v27, v12);
            unint64_t v13 = a2[1];
            if (v13 >= a2[2])
            {
              uint64_t v14 = sub_75796C(a2, (uint64_t)v27);
            }
            else
            {
              sub_757B28((uint64_t)(a2 + 2), a2[1], (uint64_t)v27);
              uint64_t v14 = v13 + 408;
              a2[1] = v13 + 408;
            }
            a2[1] = v14;
            if (__p)
            {
              uint64_t v39 = __p;
              operator delete(__p);
            }
            if (v36)
            {
              uint64_t v37 = v36;
              operator delete(v36);
            }
            __n128 v15 = (void **)v34;
            if (v34)
            {
              uint64_t v16 = v35;
              __n128 v17 = v34;
              if (v35 != v34)
              {
                do
                  uint64_t v16 = sub_4F31D0(v16 - 13);
                while (v16 != v15);
                __n128 v17 = v34;
              }
              uint64_t v35 = v15;
              operator delete(v17);
            }
            if (v32)
            {
              uint64_t v33 = v32;
              operator delete(v32);
            }
            if (v30)
            {
              uint64_t v31 = v30;
              operator delete(v30);
            }
            uint64_t v18 = v28;
            if (v28)
            {
              uint64_t v19 = (uint64_t)v29;
              __n128 v20 = v28;
              if (v29 != v28)
              {
                do
                  uint64_t v19 = sub_4D4B58(v19 - 160);
                while ((void *)v19 != v18);
                __n128 v20 = v28;
              }
              uint64_t v29 = v18;
              operator delete(v20);
            }
          }
          int v8 = v25;
        }
        if (v8)
        {
          __n128 v21 = (void **)v26;
          uint64_t v22 = v8;
          if (v26 != v8)
          {
            do
              __n128 v21 = sub_4F31D0(v21 - 13);
            while (v21 != (void **)v8);
            uint64_t v22 = v25;
          }
          uint64_t v26 = v8;
          operator delete(v22);
        }
      }
      v3 += 336;
    }
    while (v3 != v4);
  }
}

void sub_852200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va1, a4);
  va_start(va, a4);
  uint64_t v6 = va_arg(va1, void *);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  sub_639B78((uint64_t *)va1);
  sub_5920E0((void **)va);
  sub_591DFC(v4);
  _Unwind_Resume(a1);
}

void sub_852270(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

void sub_852284(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (unsigned char *)(a1 + 7909);
  sub_89CDA4(a1 + 2200, 1, *(unsigned __int8 *)(a1 + 7909), (uint64_t)&v16);
  sub_639530(a2, (uint64_t)&v16, (void *)(a1 + 5176), 0, 0, 1);
  v15.n128_u64[0] = sub_852478(a1);
  v15.n128_u64[1] = v5;
  sub_638424(a2, &v15);
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 425));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  sub_6396C0(a2, 1);
  if (*v4) {
    int v6 = 48;
  }
  else {
    int v6 = 47;
  }
  sub_63841C(a2, v6);
  if (!*v4)
  {
    unsigned int v7 = sub_62C088(*(unsigned int **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    sub_6393D0(a2, v7, 0);
  }
  uint64_t v8 = v20;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  uint64_t v9 = v19;
  if (v19)
  {
    do
    {
      uint64_t v10 = (void *)*v9;
      sub_4F4B48((uint64_t)(v9 + 2));
      operator delete(v9);
      uint64_t v9 = v10;
    }
    while (v10);
  }
  uint64_t v11 = __p;
  long long __p = 0;
  if (v11) {
    operator delete(v11);
  }
  int v12 = (void **)v16;
  if (v16)
  {
    unint64_t v13 = v17;
    uint64_t v14 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v13 - 1) < 0) {
          operator delete(*(v13 - 3));
        }
        v13 -= 3;
      }
      while (v13 != v12);
      uint64_t v14 = v16;
    }
    __n128 v17 = v12;
    operator delete(v14);
  }
}

void sub_852444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_852458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_852478(uint64_t a1)
{
  unint64_t v2 = (unsigned char *)(a1 + 5912);
  uint64_t v3 = *(void *)(a1 + 7864);
  uint64_t v4 = sub_62BD28(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v5 = v4;
  if (v2[2000] && *(void *)(a1 + 6688) < v4) {
    uint64_t v5 = *(void *)(a1 + 6688);
  }
  if (v2[1999] && *(void *)(a1 + 6112) < v5) {
    uint64_t v5 = *(void *)(a1 + 6112);
  }
  if (v2[2001] && *(void *)(a1 + 7072) < v5) {
    uint64_t v5 = *(void *)(a1 + 7072);
  }
  if (*v2 && *(void *)(a1 + 5728) < v5) {
    uint64_t v5 = *(void *)(a1 + 5728);
  }
  sub_2F99CC(&v9, v5, 0);
  if (v2[1995]) {
    uint64_t v6 = v9;
  }
  else {
    uint64_t v6 = 0;
  }
  sub_2F99CC(&v8, v3, v6);
  return v8;
}

void sub_852540(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = (unsigned char *)(a1 + 7909);
  sub_89DEF0(a1 + 2200, a2, a3, *(unsigned __int8 *)(a1 + 7909), &__p);
  sub_6393C8(a4, (uint64_t *)&__p, 0, 0, 1);
  sub_638A00(a4, (void *)(a1 + 5176));
  v13.n128_u64[0] = sub_852478(a1);
  v13.n128_u64[1] = v7;
  sub_638424(a4, &v13);
  sub_69200(a4, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 425));
  if (sub_855B3C(a1, a4)) {
    sub_6396C8(a4, 1);
  }
  sub_6396C0(a4, 1);
  if (*v6) {
    int v8 = 48;
  }
  else {
    int v8 = 47;
  }
  sub_63841C(a4, v8);
  if (!*v6)
  {
    unsigned int v9 = sub_62C088(*(unsigned int **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    sub_6393D0(a4, v9, 0);
  }
  uint64_t v10 = (void **)__p;
  if (__p)
  {
    uint64_t v11 = v15;
    int v12 = __p;
    if (v15 != __p)
    {
      do
        uint64_t v11 = sub_4F31D0(v11 - 13);
      while (v11 != v10);
      int v12 = __p;
    }
    __n128 v15 = v10;
    operator delete(v12);
  }
}

void sub_852678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_5920E0((void **)va);
  _Unwind_Resume(a1);
}

void sub_85268C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_5920E0((void **)va);
  _Unwind_Resume(a1);
}

void sub_8526AC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_895718(a1 + 2200, (uint64_t *)&v14);
  sub_639530(a2, (uint64_t)&v14, (void *)(a1 + 5176), 0, 0, 1);
  uint64_t v4 = sub_62BD28(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v5 = v4;
  if (*(unsigned char *)(a1 + 7912) && *(void *)(a1 + 6688) < v4) {
    uint64_t v5 = *(void *)(a1 + 6688);
  }
  if (*(unsigned char *)(a1 + 7911) && *(void *)(a1 + 6112) < v5) {
    uint64_t v5 = *(void *)(a1 + 6112);
  }
  if (*(unsigned char *)(a1 + 7913) && *(void *)(a1 + 7072) < v5) {
    uint64_t v5 = *(void *)(a1 + 7072);
  }
  if (*(unsigned char *)(a1 + 5912) && *(void *)(a1 + 5728) < v5) {
    uint64_t v5 = *(void *)(a1 + 5728);
  }
  sub_2F99CC(&v19, v5, 0);
  __n128 v13 = v19;
  sub_638424(a2, &v13);
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 426));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  sub_6396C0(a2, 1);
  sub_63841C(a2, 46);
  uint64_t v6 = v18;
  if (v18 && !atomic_fetch_add(&v18->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  unint64_t v7 = v17;
  if (v17)
  {
    do
    {
      int v8 = (void *)*v7;
      sub_4F4B48((uint64_t)(v7 + 2));
      operator delete(v7);
      unint64_t v7 = v8;
    }
    while (v8);
  }
  unsigned int v9 = __p;
  long long __p = 0;
  if (v9) {
    operator delete(v9);
  }
  uint64_t v10 = (void **)v14;
  if (v14)
  {
    uint64_t v11 = v15;
    int v12 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      int v12 = v14;
    }
    __n128 v15 = v10;
    operator delete(v12);
  }
}

void sub_852894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_8528A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_8528C8(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_89B584(a1 + 2200, a2, a3, (uint64_t)&__p);
  sub_6393C8(a4, (uint64_t *)&__p, 0, 0, 1);
  sub_638A00(a4, (void *)(a1 + 5176));
  uint64_t v6 = sub_62BD28(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = v6;
  if (*(unsigned char *)(a1 + 7912) && *(void *)(a1 + 6688) < v6) {
    uint64_t v7 = *(void *)(a1 + 6688);
  }
  if (*(unsigned char *)(a1 + 7911) && *(void *)(a1 + 6112) < v7) {
    uint64_t v7 = *(void *)(a1 + 6112);
  }
  if (*(unsigned char *)(a1 + 7913) && *(void *)(a1 + 7072) < v7) {
    uint64_t v7 = *(void *)(a1 + 7072);
  }
  if (*(unsigned char *)(a1 + 5912) && *(void *)(a1 + 5728) < v7) {
    uint64_t v7 = *(void *)(a1 + 5728);
  }
  sub_2F99CC(&v14, v7, 0);
  __n128 v11 = v14;
  sub_638424(a4, &v11);
  sub_69200(a4, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 426));
  if (sub_855B3C(a1, a4)) {
    sub_6396C8(a4, 1);
  }
  sub_6396C0(a4, 1);
  sub_63841C(a4, 46);
  int v8 = (void **)__p;
  if (__p)
  {
    unsigned int v9 = v13;
    uint64_t v10 = __p;
    if (v13 != __p)
    {
      do
        unsigned int v9 = sub_4F31D0(v9 - 13);
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    __n128 v13 = v8;
    operator delete(v10);
  }
}

void sub_852A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_5920E0((void **)va);
  _Unwind_Resume(a1);
}

void sub_852A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_5920E0((void **)va);
  _Unwind_Resume(a1);
}

void sub_852A60(uint64_t a1, int **a2)
{
  uint64_t v3 = *a2;
  unint64_t v2 = a2[1];
  uint64_t v4 = (char *)v2 - (char *)*a2;
  unint64_t v5 = 0xFAFAFAFAFAFAFAFBLL * (v4 >> 3);
  if (v5 >= 2)
  {
    if (v4 < 1)
    {
LABEL_6:
      __n128 v11 = 0;
      unint64_t v8 = 0;
    }
    else
    {
      unint64_t v8 = 0xFAFAFAFAFAFAFAFBLL * (v4 >> 3);
      while (1)
      {
        unsigned int v9 = operator new(408 * v8, &std::nothrow);
        if (v9) {
          break;
        }
        BOOL v10 = v8 > 1;
        v8 >>= 1;
        if (!v10) {
          goto LABEL_6;
        }
      }
      __n128 v11 = v9;
    }
    sub_878764(v3, v2, (uint64_t)&v16, v5, (uint64_t)v11, v8);
    if (v11) {
      operator delete(v11);
    }
    unint64_t v12 = 0xFAFAFAFAFAFAFAFBLL * (((char *)a2[1] - (char *)*a2) >> 3);
    if (v12 != 1)
    {
      for (unint64_t i = 1; i != v12; ++i)
      {
        uint64_t v14 = sub_856768(a2, i - 1);
        __n128 v15 = (unsigned int *)sub_856768(a2, i);
        if (sub_6396F4(v14) != 4 && !sub_6397A8(v14, (uint64_t)v15)) {
          sub_8565C8(a1, v14, v15);
        }
      }
    }
  }
}

void sub_852BD4(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_852BEC@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v3 = *(void *)(result + 5200);
  uint64_t v4 = *(void *)(result + 5208);
  if (v3 != v4)
  {
    uint64_t v5 = result;
    uint64_t v146 = (uint64_t)(a2 + 2);
    int v6 = *(_DWORD *)(result + 7916);
    while (1)
    {
      uint64_t result = sub_63ACB4(v3);
      if ((result & 1) == 0) {
        goto LABEL_6;
      }
      unint64_t v8 = (void *)sub_856CCC(*(void **)(v5 + 7968), *(void *)(v3 + 168));
      uint64_t result = sub_63AA60((uint64_t)v8);
      if ((result & 1) == 0) {
        goto LABEL_6;
      }
      if (sub_63AA80((uint64_t)v8))
      {
        if (sub_63A908((uint64_t)v8))
        {
          sub_85484C(v5, (uint64_t *)v3, (uint64_t)&v160);
          unint64_t v9 = a2[1];
          if (v9 >= a2[2])
          {
            uint64_t v43 = sub_757E08(a2, (uint64_t)&v160);
            uint64_t v44 = (void *)v188;
            a2[1] = v43;
            if (v44)
            {
              *((void *)&v188 + 1) = v44;
              operator delete(v44);
            }
          }
          else
          {
            *(_DWORD *)unint64_t v9 = v160;
            *(void *)(v9 + 16) = 0;
            *(void *)(v9 + 24) = 0;
            *(void *)(v9 + 8) = 0;
            *(_OWORD *)(v9 + 8) = __p;
            *(void *)(v9 + 24) = v162;
            long long __p = 0uLL;
            uint64_t v162 = 0;
            long long v10 = v165;
            long long v11 = v163;
            *(_OWORD *)(v9 + 48) = v164;
            *(_OWORD *)(v9 + 64) = v10;
            *(_OWORD *)(v9 + 32) = v11;
            uint64_t v12 = v168;
            long long v13 = v167;
            *(_OWORD *)(v9 + 80) = v166;
            *(_OWORD *)(v9 + 96) = v13;
            *(void *)(v9 + 112) = v12;
            *(void *)(v9 + 120) = 0;
            *(void *)(v9 + 128) = 0;
            *(void *)(v9 + 136) = 0;
            *(_OWORD *)(v9 + 120) = v169;
            long long v169 = 0uLL;
            *(void *)(v9 + 136) = v170;
            *(void *)(v9 + 144) = 0;
            uint64_t v170 = 0;
            *(void *)(v9 + 152) = 0;
            *(void *)(v9 + 160) = 0;
            *(_OWORD *)(v9 + 144) = v171;
            *(void *)(v9 + 160) = v172;
            long long v171 = 0uLL;
            uint64_t v172 = 0;
            *(_OWORD *)(v9 + 168) = v173;
            *(_DWORD *)(v9 + 192) = v175;
            if (v175 <= 1) {
              *(void *)(v9 + 184) = v174;
            }
            *(_OWORD *)(v9 + 200) = v176;
            long long v14 = v177;
            uint64_t v15 = v179;
            *(_OWORD *)(v9 + 232) = v178;
            *(_OWORD *)(v9 + 216) = v14;
            *(void *)(v9 + 248) = v15;
            *(void *)(v9 + 256) = 0;
            *(void *)(v9 + 264) = 0;
            *(void *)(v9 + 272) = 0;
            *(_OWORD *)(v9 + 256) = v180;
            *(void *)(v9 + 272) = v181;
            long long v180 = 0uLL;
            uint64_t v181 = 0;
            *(unsigned char *)(v9 + 280) = v182;
            *(void *)(v9 + 288) = 0;
            *(void *)(v9 + 296) = 0;
            *(void *)(v9 + 304) = 0;
            *(_OWORD *)(v9 + 288) = v183;
            *(void *)(v9 + 304) = v184;
            long long v183 = 0uLL;
            uint64_t v184 = 0;
            long long v16 = *(_OWORD *)v185;
            *(_OWORD *)(v9 + 321) = *(_OWORD *)&v185[9];
            *(_OWORD *)(v9 + 312) = v16;
            long long v17 = v186;
            *(_DWORD *)(v9 + 356) = v187;
            *(_OWORD *)(v9 + 340) = v17;
            *(void *)(v9 + 360) = 0;
            *(void *)(v9 + 368) = 0;
            *(void *)(v9 + 376) = 0;
            *(_OWORD *)(v9 + 360) = v188;
            *(void *)(v9 + 376) = v189;
            long long v188 = 0uLL;
            uint64_t v189 = 0;
            long long v18 = v190;
            *(_DWORD *)(v9 + 400) = v191;
            *(_OWORD *)(v9 + 384) = v18;
            a2[1] = v9 + 408;
          }
          if ((void)v183)
          {
            *((void *)&v183 + 1) = v183;
            operator delete((void *)v183);
          }
          uint64_t v45 = (void **)v180;
          if ((void)v180)
          {
            unsigned __int16 v46 = (void **)*((void *)&v180 + 1);
            uint64_t v47 = (void *)v180;
            if (*((void *)&v180 + 1) != (void)v180)
            {
              do
                unsigned __int16 v46 = sub_4F31D0(v46 - 13);
              while (v46 != v45);
              uint64_t v47 = (void *)v180;
            }
            *((void *)&v180 + 1) = v45;
            operator delete(v47);
          }
          if ((void)v171)
          {
            *((void *)&v171 + 1) = v171;
            operator delete((void *)v171);
          }
          if ((void)v169)
          {
            *((void *)&v169 + 1) = v169;
            operator delete((void *)v169);
          }
          uint64_t v48 = __p;
          if (!(void)__p) {
            goto LABEL_5;
          }
          uint64_t v49 = *((void *)&__p + 1);
          uint64_t v7 = (void *)__p;
          if (*((void *)&__p + 1) != (void)__p)
          {
            do
              uint64_t v49 = sub_4D4B58(v49 - 160);
            while (v49 != v48);
            goto LABEL_3;
          }
        }
        else
        {
          sub_854A14(v5, (uint64_t *)v3, (uint64_t)&v160);
          unint64_t v23 = a2[1];
          if (v23 >= a2[2])
          {
            uint64_t v50 = sub_757E08(a2, (uint64_t)&v160);
            int v51 = (void *)v188;
            a2[1] = v50;
            if (v51)
            {
              *((void *)&v188 + 1) = v51;
              operator delete(v51);
            }
          }
          else
          {
            *(_DWORD *)unint64_t v23 = v160;
            *(void *)(v23 + 16) = 0;
            *(void *)(v23 + 24) = 0;
            *(void *)(v23 + 8) = 0;
            *(_OWORD *)(v23 + 8) = __p;
            *(void *)(v23 + 24) = v162;
            long long __p = 0uLL;
            uint64_t v162 = 0;
            long long v24 = v165;
            long long v25 = v163;
            *(_OWORD *)(v23 + 48) = v164;
            *(_OWORD *)(v23 + 64) = v24;
            *(_OWORD *)(v23 + 32) = v25;
            uint64_t v26 = v168;
            long long v27 = v167;
            *(_OWORD *)(v23 + 80) = v166;
            *(_OWORD *)(v23 + 96) = v27;
            *(void *)(v23 + 112) = v26;
            *(void *)(v23 + 120) = 0;
            *(void *)(v23 + 128) = 0;
            *(void *)(v23 + 136) = 0;
            *(_OWORD *)(v23 + 120) = v169;
            long long v169 = 0uLL;
            *(void *)(v23 + 136) = v170;
            *(void *)(v23 + 144) = 0;
            uint64_t v170 = 0;
            *(void *)(v23 + 152) = 0;
            *(void *)(v23 + 160) = 0;
            *(_OWORD *)(v23 + 144) = v171;
            *(void *)(v23 + 160) = v172;
            long long v171 = 0uLL;
            uint64_t v172 = 0;
            *(_OWORD *)(v23 + 168) = v173;
            *(_DWORD *)(v23 + 192) = v175;
            if (v175 <= 1) {
              *(void *)(v23 + 184) = v174;
            }
            *(_OWORD *)(v23 + 200) = v176;
            long long v28 = v177;
            uint64_t v29 = v179;
            *(_OWORD *)(v23 + 232) = v178;
            *(_OWORD *)(v23 + 216) = v28;
            *(void *)(v23 + 248) = v29;
            *(void *)(v23 + 256) = 0;
            *(void *)(v23 + 264) = 0;
            *(void *)(v23 + 272) = 0;
            *(_OWORD *)(v23 + 256) = v180;
            *(void *)(v23 + 272) = v181;
            long long v180 = 0uLL;
            uint64_t v181 = 0;
            *(unsigned char *)(v23 + 280) = v182;
            *(void *)(v23 + 288) = 0;
            *(void *)(v23 + 296) = 0;
            *(void *)(v23 + 304) = 0;
            *(_OWORD *)(v23 + 288) = v183;
            *(void *)(v23 + 304) = v184;
            long long v183 = 0uLL;
            uint64_t v184 = 0;
            long long v30 = *(_OWORD *)v185;
            *(_OWORD *)(v23 + 321) = *(_OWORD *)&v185[9];
            *(_OWORD *)(v23 + 312) = v30;
            long long v31 = v186;
            *(_DWORD *)(v23 + 356) = v187;
            *(_OWORD *)(v23 + 340) = v31;
            *(void *)(v23 + 360) = 0;
            *(void *)(v23 + 368) = 0;
            *(void *)(v23 + 376) = 0;
            *(_OWORD *)(v23 + 360) = v188;
            *(void *)(v23 + 376) = v189;
            long long v188 = 0uLL;
            uint64_t v189 = 0;
            long long v32 = v190;
            *(_DWORD *)(v23 + 400) = v191;
            *(_OWORD *)(v23 + 384) = v32;
            a2[1] = v23 + 408;
          }
          if ((void)v183)
          {
            *((void *)&v183 + 1) = v183;
            operator delete((void *)v183);
          }
          long long v52 = (void **)v180;
          if ((void)v180)
          {
            uint64_t v53 = (void **)*((void *)&v180 + 1);
            uint64_t v54 = (void *)v180;
            if (*((void *)&v180 + 1) != (void)v180)
            {
              do
                uint64_t v53 = sub_4F31D0(v53 - 13);
              while (v53 != v52);
              uint64_t v54 = (void *)v180;
            }
            *((void *)&v180 + 1) = v52;
            operator delete(v54);
          }
          if ((void)v171)
          {
            *((void *)&v171 + 1) = v171;
            operator delete((void *)v171);
          }
          if ((void)v169)
          {
            *((void *)&v169 + 1) = v169;
            operator delete((void *)v169);
          }
          uint64_t v48 = __p;
          if (!(void)__p) {
            goto LABEL_5;
          }
          uint64_t v55 = *((void *)&__p + 1);
          uint64_t v7 = (void *)__p;
          if (*((void *)&__p + 1) != (void)__p)
          {
            do
              uint64_t v55 = sub_4D4B58(v55 - 160);
            while (v55 != v48);
            goto LABEL_3;
          }
        }
        goto LABEL_4;
      }
      if (sub_63A9DC((uint64_t)v8))
      {
        sub_854BDC(v5, (uint64_t *)v3, (uint64_t)v8, 0, (uint64_t)&v160);
        int v19 = v6;
        int v20 = v6;
        sub_486A54((uint64_t)&v160, v6);
        unint64_t v21 = a2[1];
        if (v21 >= a2[2])
        {
          uint64_t v22 = sub_75796C(a2, (uint64_t)&v160);
        }
        else
        {
          sub_757B28(v146, a2[1], (uint64_t)&v160);
          uint64_t v22 = v21 + 408;
          a2[1] = v21 + 408;
        }
        a2[1] = v22;
        sub_854BDC(v5, (uint64_t *)v3, (uint64_t)v8, 1, (uint64_t)v147);
        sub_486A54((uint64_t)v147, v20);
        unint64_t v66 = a2[1];
        if (v66 >= a2[2])
        {
          uint64_t v67 = sub_75796C(a2, (uint64_t)v147);
        }
        else
        {
          sub_757B28(v146, a2[1], (uint64_t)v147);
          uint64_t v67 = v66 + 408;
          a2[1] = v66 + 408;
        }
        a2[1] = v67;
        if (v158)
        {
          char v159 = v158;
          operator delete(v158);
        }
        if (v156)
        {
          uint64_t v157 = v156;
          operator delete(v156);
        }
        unsigned int v68 = (void **)v154;
        if (v154)
        {
          long long v69 = v155;
          long long v70 = v154;
          if (v155 != v154)
          {
            do
              long long v69 = sub_4F31D0(v69 - 13);
            while (v69 != v68);
            long long v70 = v154;
          }
          uint64_t v155 = v68;
          operator delete(v70);
        }
        if (v152)
        {
          long long v153 = v152;
          operator delete(v152);
        }
        if (v150)
        {
          uint64_t v151 = v150;
          operator delete(v150);
        }
        long long v71 = v148;
        if (v148)
        {
          uint64_t v72 = (uint64_t)v149;
          long long v73 = v148;
          if (v149 != v148)
          {
            do
              uint64_t v72 = sub_4D4B58(v72 - 160);
            while ((void *)v72 != v71);
            long long v73 = v148;
          }
          int v149 = v71;
          operator delete(v73);
        }
        if ((void)v188)
        {
          *((void *)&v188 + 1) = v188;
          operator delete((void *)v188);
        }
        if ((void)v183)
        {
          *((void *)&v183 + 1) = v183;
          operator delete((void *)v183);
        }
        uint64_t v74 = (void **)v180;
        if ((void)v180)
        {
          char v75 = (void **)*((void *)&v180 + 1);
          uint64_t v76 = (void *)v180;
          if (*((void *)&v180 + 1) != (void)v180)
          {
            do
              char v75 = sub_4F31D0(v75 - 13);
            while (v75 != v74);
            uint64_t v76 = (void *)v180;
          }
          *((void *)&v180 + 1) = v74;
          operator delete(v76);
        }
        if ((void)v171)
        {
          *((void *)&v171 + 1) = v171;
          operator delete((void *)v171);
        }
        if ((void)v169)
        {
          *((void *)&v169 + 1) = v169;
          operator delete((void *)v169);
        }
        uint64_t v77 = __p;
        if ((void)__p)
        {
          uint64_t v78 = *((void *)&__p + 1);
          long long v79 = (void *)__p;
          if (*((void *)&__p + 1) != (void)__p)
          {
            do
              uint64_t v78 = sub_4D4B58(v78 - 160);
            while (v78 != v77);
            long long v79 = (void *)__p;
          }
          *((void *)&__p + 1) = v77;
          operator delete(v79);
        }
        int v6 = v19 + 1;
        goto LABEL_5;
      }
      if (sub_63A918((uint64_t)v8))
      {
        sub_854DD0(v5, (uint64_t *)v3, (uint64_t)&v160);
        unint64_t v33 = a2[1];
        if (v33 >= a2[2])
        {
          uint64_t v80 = sub_757E08(a2, (uint64_t)&v160);
          long long v81 = (void *)v188;
          a2[1] = v80;
          if (v81)
          {
            *((void *)&v188 + 1) = v81;
            operator delete(v81);
          }
        }
        else
        {
          *(_DWORD *)unint64_t v33 = v160;
          *(void *)(v33 + 16) = 0;
          *(void *)(v33 + 24) = 0;
          *(void *)(v33 + 8) = 0;
          *(_OWORD *)(v33 + 8) = __p;
          *(void *)(v33 + 24) = v162;
          long long __p = 0uLL;
          uint64_t v162 = 0;
          long long v34 = v165;
          long long v35 = v163;
          *(_OWORD *)(v33 + 48) = v164;
          *(_OWORD *)(v33 + 64) = v34;
          *(_OWORD *)(v33 + 32) = v35;
          uint64_t v36 = v168;
          long long v37 = v167;
          *(_OWORD *)(v33 + 80) = v166;
          *(_OWORD *)(v33 + 96) = v37;
          *(void *)(v33 + 112) = v36;
          *(void *)(v33 + 120) = 0;
          *(void *)(v33 + 128) = 0;
          *(void *)(v33 + 136) = 0;
          *(_OWORD *)(v33 + 120) = v169;
          long long v169 = 0uLL;
          *(void *)(v33 + 136) = v170;
          *(void *)(v33 + 144) = 0;
          uint64_t v170 = 0;
          *(void *)(v33 + 152) = 0;
          *(void *)(v33 + 160) = 0;
          *(_OWORD *)(v33 + 144) = v171;
          *(void *)(v33 + 160) = v172;
          long long v171 = 0uLL;
          uint64_t v172 = 0;
          *(_OWORD *)(v33 + 168) = v173;
          *(_DWORD *)(v33 + 192) = v175;
          if (v175 <= 1) {
            *(void *)(v33 + 184) = v174;
          }
          *(_OWORD *)(v33 + 200) = v176;
          long long v38 = v177;
          uint64_t v39 = v179;
          *(_OWORD *)(v33 + 232) = v178;
          *(_OWORD *)(v33 + 216) = v38;
          *(void *)(v33 + 248) = v39;
          *(void *)(v33 + 256) = 0;
          *(void *)(v33 + 264) = 0;
          *(void *)(v33 + 272) = 0;
          *(_OWORD *)(v33 + 256) = v180;
          *(void *)(v33 + 272) = v181;
          long long v180 = 0uLL;
          uint64_t v181 = 0;
          *(unsigned char *)(v33 + 280) = v182;
          *(void *)(v33 + 288) = 0;
          *(void *)(v33 + 296) = 0;
          *(void *)(v33 + 304) = 0;
          *(_OWORD *)(v33 + 288) = v183;
          *(void *)(v33 + 304) = v184;
          long long v183 = 0uLL;
          uint64_t v184 = 0;
          long long v40 = *(_OWORD *)v185;
          *(_OWORD *)(v33 + 321) = *(_OWORD *)&v185[9];
          *(_OWORD *)(v33 + 312) = v40;
          long long v41 = v186;
          *(_DWORD *)(v33 + 356) = v187;
          *(_OWORD *)(v33 + 340) = v41;
          *(void *)(v33 + 360) = 0;
          *(void *)(v33 + 368) = 0;
          *(void *)(v33 + 376) = 0;
          *(_OWORD *)(v33 + 360) = v188;
          *(void *)(v33 + 376) = v189;
          long long v188 = 0uLL;
          uint64_t v189 = 0;
          long long v42 = v190;
          *(_DWORD *)(v33 + 400) = v191;
          *(_OWORD *)(v33 + 384) = v42;
          a2[1] = v33 + 408;
        }
        if ((void)v183)
        {
          *((void *)&v183 + 1) = v183;
          operator delete((void *)v183);
        }
        uint64_t v82 = (void **)v180;
        if ((void)v180)
        {
          uint64_t v83 = (void **)*((void *)&v180 + 1);
          long long v84 = (void *)v180;
          if (*((void *)&v180 + 1) != (void)v180)
          {
            do
              uint64_t v83 = sub_4F31D0(v83 - 13);
            while (v83 != v82);
            long long v84 = (void *)v180;
          }
          *((void *)&v180 + 1) = v82;
          operator delete(v84);
        }
        if ((void)v171)
        {
          *((void *)&v171 + 1) = v171;
          operator delete((void *)v171);
        }
        if ((void)v169)
        {
          *((void *)&v169 + 1) = v169;
          operator delete((void *)v169);
        }
        uint64_t v48 = __p;
        if (!(void)__p) {
          goto LABEL_5;
        }
        uint64_t v85 = *((void *)&__p + 1);
        uint64_t v7 = (void *)__p;
        if (*((void *)&__p + 1) != (void)__p)
        {
          do
            uint64_t v85 = sub_4D4B58(v85 - 160);
          while (v85 != v48);
          goto LABEL_3;
        }
LABEL_4:
        *((void *)&__p + 1) = v48;
        operator delete(v7);
        goto LABEL_5;
      }
      if (sub_63AABC(v8)) {
        break;
      }
      if (sub_63AAF0(v8))
      {
        sub_855160(v5, (uint64_t *)v3, (uint64_t)&v160);
        unint64_t v86 = a2[1];
        if (v86 >= a2[2])
        {
          uint64_t v112 = sub_757E08(a2, (uint64_t)&v160);
          uint64_t v113 = (void *)v188;
          a2[1] = v112;
          if (v113)
          {
            *((void *)&v188 + 1) = v113;
            operator delete(v113);
          }
        }
        else
        {
          *(_DWORD *)unint64_t v86 = v160;
          *(void *)(v86 + 16) = 0;
          *(void *)(v86 + 24) = 0;
          *(void *)(v86 + 8) = 0;
          *(_OWORD *)(v86 + 8) = __p;
          *(void *)(v86 + 24) = v162;
          long long __p = 0uLL;
          uint64_t v162 = 0;
          long long v87 = v165;
          long long v88 = v163;
          *(_OWORD *)(v86 + 48) = v164;
          *(_OWORD *)(v86 + 64) = v87;
          *(_OWORD *)(v86 + 32) = v88;
          uint64_t v89 = v168;
          long long v90 = v167;
          *(_OWORD *)(v86 + 80) = v166;
          *(_OWORD *)(v86 + 96) = v90;
          *(void *)(v86 + 112) = v89;
          *(void *)(v86 + 120) = 0;
          *(void *)(v86 + 128) = 0;
          *(void *)(v86 + 136) = 0;
          *(_OWORD *)(v86 + 120) = v169;
          long long v169 = 0uLL;
          *(void *)(v86 + 136) = v170;
          *(void *)(v86 + 144) = 0;
          uint64_t v170 = 0;
          *(void *)(v86 + 152) = 0;
          *(void *)(v86 + 160) = 0;
          *(_OWORD *)(v86 + 144) = v171;
          *(void *)(v86 + 160) = v172;
          long long v171 = 0uLL;
          uint64_t v172 = 0;
          *(_OWORD *)(v86 + 168) = v173;
          *(_DWORD *)(v86 + 192) = v175;
          if (v175 <= 1) {
            *(void *)(v86 + 184) = v174;
          }
          *(_OWORD *)(v86 + 200) = v176;
          long long v91 = v177;
          uint64_t v92 = v179;
          *(_OWORD *)(v86 + 232) = v178;
          *(_OWORD *)(v86 + 216) = v91;
          *(void *)(v86 + 248) = v92;
          *(void *)(v86 + 256) = 0;
          *(void *)(v86 + 264) = 0;
          *(void *)(v86 + 272) = 0;
          *(_OWORD *)(v86 + 256) = v180;
          *(void *)(v86 + 272) = v181;
          long long v180 = 0uLL;
          uint64_t v181 = 0;
          *(unsigned char *)(v86 + 280) = v182;
          *(void *)(v86 + 288) = 0;
          *(void *)(v86 + 296) = 0;
          *(void *)(v86 + 304) = 0;
          *(_OWORD *)(v86 + 288) = v183;
          *(void *)(v86 + 304) = v184;
          long long v183 = 0uLL;
          uint64_t v184 = 0;
          long long v93 = *(_OWORD *)v185;
          *(_OWORD *)(v86 + 321) = *(_OWORD *)&v185[9];
          *(_OWORD *)(v86 + 312) = v93;
          long long v94 = v186;
          *(_DWORD *)(v86 + 356) = v187;
          *(_OWORD *)(v86 + 340) = v94;
          *(void *)(v86 + 360) = 0;
          *(void *)(v86 + 368) = 0;
          *(void *)(v86 + 376) = 0;
          *(_OWORD *)(v86 + 360) = v188;
          *(void *)(v86 + 376) = v189;
          long long v188 = 0uLL;
          uint64_t v189 = 0;
          long long v95 = v190;
          *(_DWORD *)(v86 + 400) = v191;
          *(_OWORD *)(v86 + 384) = v95;
          a2[1] = v86 + 408;
        }
        if ((void)v183)
        {
          *((void *)&v183 + 1) = v183;
          operator delete((void *)v183);
        }
        uint64_t v114 = (void **)v180;
        if ((void)v180)
        {
          long long v115 = (void **)*((void *)&v180 + 1);
          int v116 = (void *)v180;
          if (*((void *)&v180 + 1) != (void)v180)
          {
            do
              long long v115 = sub_4F31D0(v115 - 13);
            while (v115 != v114);
            int v116 = (void *)v180;
          }
          *((void *)&v180 + 1) = v114;
          operator delete(v116);
        }
        if ((void)v171)
        {
          *((void *)&v171 + 1) = v171;
          operator delete((void *)v171);
        }
        if ((void)v169)
        {
          *((void *)&v169 + 1) = v169;
          operator delete((void *)v169);
        }
        uint64_t v48 = __p;
        if (!(void)__p) {
          goto LABEL_5;
        }
        uint64_t v117 = *((void *)&__p + 1);
        uint64_t v7 = (void *)__p;
        if (*((void *)&__p + 1) == (void)__p) {
          goto LABEL_4;
        }
        do
          uint64_t v117 = sub_4D4B58(v117 - 160);
        while (v117 != v48);
        goto LABEL_3;
      }
      if (sub_63AA44((uint64_t)v8))
      {
        sub_855328(v5, (uint64_t *)v3, (uint64_t)&v160);
        unint64_t v102 = a2[1];
        if (v102 >= a2[2])
        {
          uint64_t v128 = sub_757E08(a2, (uint64_t)&v160);
          long long v129 = (void *)v188;
          a2[1] = v128;
          if (v129)
          {
            *((void *)&v188 + 1) = v129;
            operator delete(v129);
          }
        }
        else
        {
          *(_DWORD *)unint64_t v102 = v160;
          *(void *)(v102 + 16) = 0;
          *(void *)(v102 + 24) = 0;
          *(void *)(v102 + 8) = 0;
          *(_OWORD *)(v102 + 8) = __p;
          *(void *)(v102 + 24) = v162;
          long long __p = 0uLL;
          uint64_t v162 = 0;
          long long v103 = v165;
          long long v104 = v163;
          *(_OWORD *)(v102 + 48) = v164;
          *(_OWORD *)(v102 + 64) = v103;
          *(_OWORD *)(v102 + 32) = v104;
          uint64_t v105 = v168;
          long long v106 = v167;
          *(_OWORD *)(v102 + 80) = v166;
          *(_OWORD *)(v102 + 96) = v106;
          *(void *)(v102 + 112) = v105;
          *(void *)(v102 + 120) = 0;
          *(void *)(v102 + 128) = 0;
          *(void *)(v102 + 136) = 0;
          *(_OWORD *)(v102 + 120) = v169;
          long long v169 = 0uLL;
          *(void *)(v102 + 136) = v170;
          *(void *)(v102 + 144) = 0;
          uint64_t v170 = 0;
          *(void *)(v102 + 152) = 0;
          *(void *)(v102 + 160) = 0;
          *(_OWORD *)(v102 + 144) = v171;
          *(void *)(v102 + 160) = v172;
          long long v171 = 0uLL;
          uint64_t v172 = 0;
          *(_OWORD *)(v102 + 168) = v173;
          *(_DWORD *)(v102 + 192) = v175;
          if (v175 <= 1) {
            *(void *)(v102 + 184) = v174;
          }
          *(_OWORD *)(v102 + 200) = v176;
          long long v107 = v177;
          uint64_t v108 = v179;
          *(_OWORD *)(v102 + 232) = v178;
          *(_OWORD *)(v102 + 216) = v107;
          *(void *)(v102 + 248) = v108;
          *(void *)(v102 + 256) = 0;
          *(void *)(v102 + 264) = 0;
          *(void *)(v102 + 272) = 0;
          *(_OWORD *)(v102 + 256) = v180;
          *(void *)(v102 + 272) = v181;
          long long v180 = 0uLL;
          uint64_t v181 = 0;
          *(unsigned char *)(v102 + 280) = v182;
          *(void *)(v102 + 288) = 0;
          *(void *)(v102 + 296) = 0;
          *(void *)(v102 + 304) = 0;
          *(_OWORD *)(v102 + 288) = v183;
          *(void *)(v102 + 304) = v184;
          long long v183 = 0uLL;
          uint64_t v184 = 0;
          long long v109 = *(_OWORD *)v185;
          *(_OWORD *)(v102 + 321) = *(_OWORD *)&v185[9];
          *(_OWORD *)(v102 + 312) = v109;
          long long v110 = v186;
          *(_DWORD *)(v102 + 356) = v187;
          *(_OWORD *)(v102 + 340) = v110;
          *(void *)(v102 + 360) = 0;
          *(void *)(v102 + 368) = 0;
          *(void *)(v102 + 376) = 0;
          *(_OWORD *)(v102 + 360) = v188;
          *(void *)(v102 + 376) = v189;
          long long v188 = 0uLL;
          uint64_t v189 = 0;
          long long v111 = v190;
          *(_DWORD *)(v102 + 400) = v191;
          *(_OWORD *)(v102 + 384) = v111;
          a2[1] = v102 + 408;
        }
        if ((void)v183)
        {
          *((void *)&v183 + 1) = v183;
          operator delete((void *)v183);
        }
        uint64_t v130 = (void **)v180;
        if ((void)v180)
        {
          uint64_t v131 = (void **)*((void *)&v180 + 1);
          uint64_t v132 = (void *)v180;
          if (*((void *)&v180 + 1) != (void)v180)
          {
            do
              uint64_t v131 = sub_4F31D0(v131 - 13);
            while (v131 != v130);
            uint64_t v132 = (void *)v180;
          }
          *((void *)&v180 + 1) = v130;
          operator delete(v132);
        }
        if ((void)v171)
        {
          *((void *)&v171 + 1) = v171;
          operator delete((void *)v171);
        }
        if ((void)v169)
        {
          *((void *)&v169 + 1) = v169;
          operator delete((void *)v169);
        }
        uint64_t v48 = __p;
        if (!(void)__p) {
          goto LABEL_5;
        }
        uint64_t v133 = *((void *)&__p + 1);
        uint64_t v7 = (void *)__p;
        if (*((void *)&__p + 1) == (void)__p) {
          goto LABEL_4;
        }
        do
          uint64_t v133 = sub_4D4B58(v133 - 160);
        while (v133 != v48);
        goto LABEL_3;
      }
      if (sub_63AAA0((uint64_t)v8))
      {
        sub_8554F0(v5, (uint64_t *)v3, (uint64_t)&v160);
        unint64_t v118 = a2[1];
        if (v118 >= a2[2])
        {
          uint64_t v136 = sub_757E08(a2, (uint64_t)&v160);
          unsigned long long v137 = (void *)v188;
          a2[1] = v136;
          if (v137)
          {
            *((void *)&v188 + 1) = v137;
            operator delete(v137);
          }
        }
        else
        {
          *(_DWORD *)unint64_t v118 = v160;
          *(void *)(v118 + 16) = 0;
          *(void *)(v118 + 24) = 0;
          *(void *)(v118 + 8) = 0;
          *(_OWORD *)(v118 + 8) = __p;
          *(void *)(v118 + 24) = v162;
          long long __p = 0uLL;
          uint64_t v162 = 0;
          long long v119 = v165;
          long long v120 = v163;
          *(_OWORD *)(v118 + 48) = v164;
          *(_OWORD *)(v118 + 64) = v119;
          *(_OWORD *)(v118 + 32) = v120;
          uint64_t v121 = v168;
          long long v122 = v167;
          *(_OWORD *)(v118 + 80) = v166;
          *(_OWORD *)(v118 + 96) = v122;
          *(void *)(v118 + 112) = v121;
          *(void *)(v118 + 120) = 0;
          *(void *)(v118 + 128) = 0;
          *(void *)(v118 + 136) = 0;
          *(_OWORD *)(v118 + 120) = v169;
          long long v169 = 0uLL;
          *(void *)(v118 + 136) = v170;
          *(void *)(v118 + 144) = 0;
          uint64_t v170 = 0;
          *(void *)(v118 + 152) = 0;
          *(void *)(v118 + 160) = 0;
          *(_OWORD *)(v118 + 144) = v171;
          *(void *)(v118 + 160) = v172;
          long long v171 = 0uLL;
          uint64_t v172 = 0;
          *(_OWORD *)(v118 + 168) = v173;
          *(_DWORD *)(v118 + 192) = v175;
          if (v175 <= 1) {
            *(void *)(v118 + 184) = v174;
          }
          *(_OWORD *)(v118 + 200) = v176;
          long long v123 = v177;
          uint64_t v124 = v179;
          *(_OWORD *)(v118 + 232) = v178;
          *(_OWORD *)(v118 + 216) = v123;
          *(void *)(v118 + 248) = v124;
          *(void *)(v118 + 256) = 0;
          *(void *)(v118 + 264) = 0;
          *(void *)(v118 + 272) = 0;
          *(_OWORD *)(v118 + 256) = v180;
          *(void *)(v118 + 272) = v181;
          long long v180 = 0uLL;
          uint64_t v181 = 0;
          *(unsigned char *)(v118 + 280) = v182;
          *(void *)(v118 + 288) = 0;
          *(void *)(v118 + 296) = 0;
          *(void *)(v118 + 304) = 0;
          *(_OWORD *)(v118 + 288) = v183;
          *(void *)(v118 + 304) = v184;
          long long v183 = 0uLL;
          uint64_t v184 = 0;
          long long v125 = *(_OWORD *)v185;
          *(_OWORD *)(v118 + 321) = *(_OWORD *)&v185[9];
          *(_OWORD *)(v118 + 312) = v125;
          long long v126 = v186;
          *(_DWORD *)(v118 + 356) = v187;
          *(_OWORD *)(v118 + 340) = v126;
          *(void *)(v118 + 360) = 0;
          *(void *)(v118 + 368) = 0;
          *(void *)(v118 + 376) = 0;
          *(_OWORD *)(v118 + 360) = v188;
          *(void *)(v118 + 376) = v189;
          long long v188 = 0uLL;
          uint64_t v189 = 0;
          long long v127 = v190;
          *(_DWORD *)(v118 + 400) = v191;
          *(_OWORD *)(v118 + 384) = v127;
          a2[1] = v118 + 408;
        }
        if ((void)v183)
        {
          *((void *)&v183 + 1) = v183;
          operator delete((void *)v183);
        }
        unint64_t v138 = (void **)v180;
        if ((void)v180)
        {
          long long v139 = (void **)*((void *)&v180 + 1);
          long long v140 = (void *)v180;
          if (*((void *)&v180 + 1) != (void)v180)
          {
            do
              long long v139 = sub_4F31D0(v139 - 13);
            while (v139 != v138);
            long long v140 = (void *)v180;
          }
          *((void *)&v180 + 1) = v138;
          operator delete(v140);
        }
        if ((void)v171)
        {
          *((void *)&v171 + 1) = v171;
          operator delete((void *)v171);
        }
        if ((void)v169)
        {
          *((void *)&v169 + 1) = v169;
          operator delete((void *)v169);
        }
        uint64_t v48 = __p;
        if (!(void)__p) {
          goto LABEL_5;
        }
        uint64_t v141 = *((void *)&__p + 1);
        uint64_t v7 = (void *)__p;
        if (*((void *)&__p + 1) == (void)__p) {
          goto LABEL_4;
        }
        do
          uint64_t v141 = sub_4D4B58(v141 - 160);
        while (v141 != v48);
        goto LABEL_3;
      }
      uint64_t result = sub_63AB24((uint64_t)v8);
      if (!result) {
        goto LABEL_6;
      }
      sub_8556B8(v5, (uint64_t *)v3, (uint64_t)&v160);
      unint64_t v134 = a2[1];
      if (v134 >= a2[2])
      {
        uint64_t v135 = sub_757E08(a2, (uint64_t)&v160);
      }
      else
      {
        sub_757C94(v146, a2[1], (uint64_t)&v160);
        uint64_t v135 = v134 + 408;
      }
      a2[1] = v135;
      if ((void)v188)
      {
        *((void *)&v188 + 1) = v188;
        operator delete((void *)v188);
      }
      if ((void)v183)
      {
        *((void *)&v183 + 1) = v183;
        operator delete((void *)v183);
      }
      long long v142 = (void **)v180;
      if ((void)v180)
      {
        long long v143 = (void **)*((void *)&v180 + 1);
        uint64_t v144 = (void *)v180;
        if (*((void *)&v180 + 1) != (void)v180)
        {
          do
            long long v143 = sub_4F31D0(v143 - 13);
          while (v143 != v142);
          uint64_t v144 = (void *)v180;
        }
        *((void *)&v180 + 1) = v142;
        operator delete(v144);
      }
      if ((void)v171)
      {
        *((void *)&v171 + 1) = v171;
        operator delete((void *)v171);
      }
      if ((void)v169)
      {
        *((void *)&v169 + 1) = v169;
        operator delete((void *)v169);
      }
      uint64_t v48 = __p;
      if ((void)__p)
      {
        uint64_t v145 = *((void *)&__p + 1);
        uint64_t v7 = (void *)__p;
        if (*((void *)&__p + 1) == (void)__p) {
          goto LABEL_4;
        }
        do
          uint64_t v145 = sub_4D4B58(v145 - 160);
        while (v145 != v48);
        goto LABEL_3;
      }
LABEL_5:
      uint64_t result = sub_6396E0(a2[1] - 408, v8 + 1);
LABEL_6:
      v3 += 184;
      if (v3 == v4) {
        return result;
      }
    }
    sub_854F98(v5, (uint64_t *)v3, (uint64_t)&v160);
    unint64_t v56 = a2[1];
    if (v56 >= a2[2])
    {
      uint64_t v96 = sub_757E08(a2, (uint64_t)&v160);
      uint64_t v97 = (void *)v188;
      a2[1] = v96;
      if (v97)
      {
        *((void *)&v188 + 1) = v97;
        operator delete(v97);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v56 = v160;
      *(void *)(v56 + 16) = 0;
      *(void *)(v56 + 24) = 0;
      *(void *)(v56 + 8) = 0;
      *(_OWORD *)(v56 + 8) = __p;
      *(void *)(v56 + 24) = v162;
      long long __p = 0uLL;
      uint64_t v162 = 0;
      long long v57 = v165;
      long long v58 = v163;
      *(_OWORD *)(v56 + 48) = v164;
      *(_OWORD *)(v56 + 64) = v57;
      *(_OWORD *)(v56 + 32) = v58;
      uint64_t v59 = v168;
      long long v60 = v167;
      *(_OWORD *)(v56 + 80) = v166;
      *(_OWORD *)(v56 + 96) = v60;
      *(void *)(v56 + 112) = v59;
      *(void *)(v56 + 120) = 0;
      *(void *)(v56 + 128) = 0;
      *(void *)(v56 + 136) = 0;
      *(_OWORD *)(v56 + 120) = v169;
      long long v169 = 0uLL;
      *(void *)(v56 + 136) = v170;
      *(void *)(v56 + 144) = 0;
      uint64_t v170 = 0;
      *(void *)(v56 + 152) = 0;
      *(void *)(v56 + 160) = 0;
      *(_OWORD *)(v56 + 144) = v171;
      *(void *)(v56 + 160) = v172;
      long long v171 = 0uLL;
      uint64_t v172 = 0;
      *(_OWORD *)(v56 + 168) = v173;
      *(_DWORD *)(v56 + 192) = v175;
      if (v175 <= 1) {
        *(void *)(v56 + 184) = v174;
      }
      *(_OWORD *)(v56 + 200) = v176;
      long long v61 = v177;
      uint64_t v62 = v179;
      *(_OWORD *)(v56 + 232) = v178;
      *(_OWORD *)(v56 + 216) = v61;
      *(void *)(v56 + 248) = v62;
      *(void *)(v56 + 256) = 0;
      *(void *)(v56 + 264) = 0;
      *(void *)(v56 + 272) = 0;
      *(_OWORD *)(v56 + 256) = v180;
      *(void *)(v56 + 272) = v181;
      long long v180 = 0uLL;
      uint64_t v181 = 0;
      *(unsigned char *)(v56 + 280) = v182;
      *(void *)(v56 + 288) = 0;
      *(void *)(v56 + 296) = 0;
      *(void *)(v56 + 304) = 0;
      *(_OWORD *)(v56 + 288) = v183;
      *(void *)(v56 + 304) = v184;
      long long v183 = 0uLL;
      uint64_t v184 = 0;
      long long v63 = *(_OWORD *)v185;
      *(_OWORD *)(v56 + 321) = *(_OWORD *)&v185[9];
      *(_OWORD *)(v56 + 312) = v63;
      long long v64 = v186;
      *(_DWORD *)(v56 + 356) = v187;
      *(_OWORD *)(v56 + 340) = v64;
      *(void *)(v56 + 360) = 0;
      *(void *)(v56 + 368) = 0;
      *(void *)(v56 + 376) = 0;
      *(_OWORD *)(v56 + 360) = v188;
      *(void *)(v56 + 376) = v189;
      long long v188 = 0uLL;
      uint64_t v189 = 0;
      long long v65 = v190;
      *(_DWORD *)(v56 + 400) = v191;
      *(_OWORD *)(v56 + 384) = v65;
      a2[1] = v56 + 408;
    }
    if ((void)v183)
    {
      *((void *)&v183 + 1) = v183;
      operator delete((void *)v183);
    }
    char v98 = (void **)v180;
    if ((void)v180)
    {
      char v99 = (void **)*((void *)&v180 + 1);
      long long v100 = (void *)v180;
      if (*((void *)&v180 + 1) != (void)v180)
      {
        do
          char v99 = sub_4F31D0(v99 - 13);
        while (v99 != v98);
        long long v100 = (void *)v180;
      }
      *((void *)&v180 + 1) = v98;
      operator delete(v100);
    }
    if ((void)v171)
    {
      *((void *)&v171 + 1) = v171;
      operator delete((void *)v171);
    }
    if ((void)v169)
    {
      *((void *)&v169 + 1) = v169;
      operator delete((void *)v169);
    }
    uint64_t v48 = __p;
    if (!(void)__p) {
      goto LABEL_5;
    }
    uint64_t v101 = *((void *)&__p + 1);
    uint64_t v7 = (void *)__p;
    if (*((void *)&__p + 1) == (void)__p) {
      goto LABEL_4;
    }
    do
      uint64_t v101 = sub_4D4B58(v101 - 160);
    while (v101 != v48);
LABEL_3:
    uint64_t v7 = (void *)__p;
    goto LABEL_4;
  }
  return result;
}

void sub_8541C4(_Unwind_Exception *a1)
{
  sub_639B78(&STACK[0x208]);
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

void sub_854308(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

void sub_85431C(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

void sub_854330(void *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v3 = (const std::string **)a1[997];
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (*v3 == v5) {
    return;
  }
  long long v32 = a1 + 647;
  do
  {
    sub_8946F8(v4, (uint64_t)&__p);
    sub_639530((uint64_t)v39, (uint64_t)&__p, v32, 0, 0, 1);
    if ((int64_t)v4[1].__r_.__value_.__l.__size_ >= a1[649]) {
      uint64_t size = a1[649];
    }
    else {
      uint64_t size = v4[1].__r_.__value_.__l.__size_;
    }
    sub_2F99CC(&v33, size, v4[1].__r_.__value_.__r.__words[2]);
    sub_638424((uint64_t)v39, &v33);
    sub_69200((uint64_t)v39, *(unsigned __int8 *)(a1[270] + 431));
    sub_63841C((uint64_t)v39, 82);
    unint64_t v9 = a2[1];
    if (v9 >= a2[2])
    {
      uint64_t v11 = sub_75796C(a2, (uint64_t)v39);
    }
    else
    {
      __n128 v10 = sub_757B28((uint64_t)(a2 + 2), a2[1], (uint64_t)v39);
      uint64_t v11 = v9 + 408;
      a2[1] = v9 + 408;
    }
    a2[1] = v11;
    if (v50)
    {
      int v51 = v50;
      operator delete(v50);
    }
    if (v48)
    {
      uint64_t v49 = v48;
      operator delete(v48);
    }
    uint64_t v12 = (void **)v46;
    if (v46)
    {
      long long v13 = v47;
      long long v14 = v46;
      if (v47 == v46) {
        goto LABEL_50;
      }
      while (1)
      {
        long long v16 = (std::__shared_weak_count *)*(v13 - 2);
        if (!v16 || atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          long long v17 = (void **)*(v13 - 8);
          if (v17) {
            goto LABEL_36;
          }
          goto LABEL_25;
        }
        ((void (*)(std::__shared_weak_count *, __n128))v16->__on_zero_shared)(v16, v10);
        std::__shared_weak_count::__release_weak(v16);
        long long v17 = (void **)*(v13 - 8);
        if (v17) {
          break;
        }
LABEL_25:
        long long v18 = *(v13 - 10);
        *(v13 - 10) = 0;
        if (v18) {
          operator delete(v18);
        }
        int v19 = v13 - 13;
        int v20 = (void **)*(v13 - 13);
        if (v20)
        {
          unint64_t v21 = (void **)*(v13 - 12);
          uint64_t v15 = *(v13 - 13);
          if (v21 != v20)
          {
            do
            {
              if (*((char *)v21 - 1) < 0) {
                operator delete(*(v21 - 3));
              }
              v21 -= 3;
            }
            while (v21 != v20);
            uint64_t v15 = *v19;
          }
          *(v13 - 12) = v20;
          operator delete(v15);
        }
        v13 -= 13;
        if (v19 == v12)
        {
          long long v14 = v46;
LABEL_50:
          uint64_t v47 = v12;
          operator delete(v14);
          goto LABEL_51;
        }
      }
      while (1)
      {
LABEL_36:
        uint64_t v22 = (void **)*v17;
        if (*((char *)v17 + 191) < 0)
        {
          operator delete(v17[21]);
          if ((*((char *)v17 + 159) & 0x80000000) == 0)
          {
LABEL_38:
            if ((*((char *)v17 + 135) & 0x80000000) == 0) {
              goto LABEL_39;
            }
            goto LABEL_45;
          }
        }
        else if ((*((char *)v17 + 159) & 0x80000000) == 0)
        {
          goto LABEL_38;
        }
        operator delete(v17[17]);
        if ((*((char *)v17 + 135) & 0x80000000) == 0)
        {
LABEL_39:
          if ((*((char *)v17 + 95) & 0x80000000) == 0) {
            goto LABEL_40;
          }
          goto LABEL_46;
        }
LABEL_45:
        operator delete(v17[14]);
        if ((*((char *)v17 + 95) & 0x80000000) == 0)
        {
LABEL_40:
          if ((*((char *)v17 + 63) & 0x80000000) == 0) {
            goto LABEL_41;
          }
          goto LABEL_47;
        }
LABEL_46:
        operator delete(v17[9]);
        if ((*((char *)v17 + 63) & 0x80000000) == 0)
        {
LABEL_41:
          if (*((char *)v17 + 39) < 0) {
            goto LABEL_48;
          }
          goto LABEL_35;
        }
LABEL_47:
        operator delete(v17[5]);
        if (*((char *)v17 + 39) < 0) {
LABEL_48:
        }
          operator delete(v17[2]);
LABEL_35:
        operator delete(v17);
        long long v17 = v22;
        if (!v22) {
          goto LABEL_25;
        }
      }
    }
LABEL_51:
    if (v44)
    {
      uint64_t v45 = v44;
      operator delete(v44);
    }
    if (v42)
    {
      uint64_t v43 = v42;
      operator delete(v42);
    }
    unint64_t v23 = v40;
    if (v40)
    {
      uint64_t v24 = (uint64_t)v41;
      long long v25 = v40;
      if (v41 != v40)
      {
        do
          uint64_t v24 = sub_4D4B58(v24 - 160);
        while ((void *)v24 != v23);
        long long v25 = v40;
      }
      long long v41 = v23;
      operator delete(v25);
    }
    uint64_t v26 = v38;
    if (v38 && !atomic_fetch_add(&v38->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *, __n128))v26->__on_zero_shared)(v26, v10);
      std::__shared_weak_count::__release_weak(v26);
      long long v27 = (void **)v37;
      if (!v37) {
        goto LABEL_63;
      }
      while (1)
      {
LABEL_74:
        long long v31 = (void **)*v27;
        if (*((char *)v27 + 191) < 0)
        {
          operator delete(v27[21]);
          if ((*((char *)v27 + 159) & 0x80000000) == 0)
          {
LABEL_76:
            if ((*((char *)v27 + 135) & 0x80000000) == 0) {
              goto LABEL_77;
            }
            goto LABEL_83;
          }
        }
        else if ((*((char *)v27 + 159) & 0x80000000) == 0)
        {
          goto LABEL_76;
        }
        operator delete(v27[17]);
        if ((*((char *)v27 + 135) & 0x80000000) == 0)
        {
LABEL_77:
          if ((*((char *)v27 + 95) & 0x80000000) == 0) {
            goto LABEL_78;
          }
          goto LABEL_84;
        }
LABEL_83:
        operator delete(v27[14]);
        if ((*((char *)v27 + 95) & 0x80000000) == 0)
        {
LABEL_78:
          if ((*((char *)v27 + 63) & 0x80000000) == 0) {
            goto LABEL_79;
          }
          goto LABEL_85;
        }
LABEL_84:
        operator delete(v27[9]);
        if ((*((char *)v27 + 63) & 0x80000000) == 0)
        {
LABEL_79:
          if (*((char *)v27 + 39) < 0) {
            goto LABEL_86;
          }
          goto LABEL_73;
        }
LABEL_85:
        operator delete(v27[5]);
        if (*((char *)v27 + 39) < 0) {
LABEL_86:
        }
          operator delete(v27[2]);
LABEL_73:
        operator delete(v27);
        long long v27 = v31;
        if (!v31) {
          goto LABEL_63;
        }
      }
    }
    long long v27 = (void **)v37;
    if (v37) {
      goto LABEL_74;
    }
LABEL_63:
    long long v28 = v36;
    uint64_t v36 = 0;
    if (v28) {
      operator delete(v28);
    }
    uint64_t v29 = (void **)__p;
    if (__p)
    {
      long long v30 = v35;
      uint64_t v7 = __p;
      if (v35 != __p)
      {
        do
        {
          if (*((char *)v30 - 1) < 0) {
            operator delete(*(v30 - 3));
          }
          v30 -= 3;
        }
        while (v30 != v29);
        uint64_t v7 = __p;
      }
      long long v35 = v29;
      operator delete(v7);
    }
    v4 += 2;
  }
  while (v4 != v5);
}

void sub_8547E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  v28[1] = v29;
  sub_639B78(&a28);
  sub_4F31D0(&a15);
  sub_591DFC(v28);
  _Unwind_Resume(a1);
}

void sub_85484C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_897BDC((uint64_t)&v17);
  sub_639530(a3, (uint64_t)&v17, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a3, 73);
  uint64_t v6 = sub_62C7DC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = *a2;
  uint64_t v8 = sub_62C848(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_2F99CC(&v22, v7 + v6, *a2 + v8);
  __n128 v16 = v22;
  sub_638424(a3, &v16);
  sub_69200(a3, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 430));
  unint64_t v9 = v21;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  __n128 v10 = v20;
  if (v20)
  {
    do
    {
      uint64_t v11 = (void *)*v10;
      sub_4F4B48((uint64_t)(v10 + 2));
      operator delete(v10);
      __n128 v10 = v11;
    }
    while (v11);
  }
  uint64_t v12 = __p;
  long long __p = 0;
  if (v12) {
    operator delete(v12);
  }
  long long v13 = (void **)v17;
  if (v17)
  {
    long long v14 = v18;
    uint64_t v15 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v14 - 1) < 0) {
          operator delete(*(v14 - 3));
        }
        v14 -= 3;
      }
      while (v14 != v13);
      uint64_t v15 = v17;
    }
    long long v18 = v13;
    operator delete(v15);
  }
}

void sub_8549E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_8549F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_854A14(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_897AAC((uint64_t)&v17);
  sub_639530(a3, (uint64_t)&v17, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a3, 72);
  uint64_t v6 = sub_62C7DC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = *a2;
  uint64_t v8 = sub_62C848(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_2F99CC(&v22, v7 + v6, *a2 + v8);
  __n128 v16 = v22;
  sub_638424(a3, &v16);
  sub_69200(a3, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 430));
  unint64_t v9 = v21;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  __n128 v10 = v20;
  if (v20)
  {
    do
    {
      uint64_t v11 = (void *)*v10;
      sub_4F4B48((uint64_t)(v10 + 2));
      operator delete(v10);
      __n128 v10 = v11;
    }
    while (v11);
  }
  uint64_t v12 = __p;
  long long __p = 0;
  if (v12) {
    operator delete(v12);
  }
  long long v13 = (void **)v17;
  if (v17)
  {
    long long v14 = v18;
    uint64_t v15 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v14 - 1) < 0) {
          operator delete(*(v14 - 3));
        }
        v14 -= 3;
      }
      while (v14 != v13);
      uint64_t v15 = v17;
    }
    long long v18 = v13;
    operator delete(v15);
  }
}

void sub_854BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_854BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_854BDC(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  sub_897F68(a1 + 2200, a3, a4, (uint64_t)&v22);
  sub_639530(a5, (uint64_t)&v22, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a5, 71);
  __n128 v10 = (void *)(a3 + 88);
  if (a4) {
    sub_638760(a5, v10);
  }
  else {
    sub_63876C(a5, v10);
  }
  uint64_t v11 = sub_62C7DC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v12 = *a2;
  uint64_t v13 = sub_62C848(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_2F99CC(&v27, v12 + v11, *a2 + v13);
  __n128 v21 = v27;
  sub_638424(a5, &v21);
  sub_69200(a5, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 430));
  long long v14 = v26;
  if (v26 && !atomic_fetch_add(&v26->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  uint64_t v15 = v25;
  if (v25)
  {
    do
    {
      __n128 v16 = (void *)*v15;
      sub_4F4B48((uint64_t)(v15 + 2));
      operator delete(v15);
      uint64_t v15 = v16;
    }
    while (v16);
  }
  long long v17 = __p;
  long long __p = 0;
  if (v17) {
    operator delete(v17);
  }
  long long v18 = (void **)v22;
  if (v22)
  {
    int v19 = v23;
    int v20 = v22;
    if (v23 != v22)
    {
      do
      {
        if (*((char *)v19 - 1) < 0) {
          operator delete(*(v19 - 3));
        }
        v19 -= 3;
      }
      while (v19 != v18);
      int v20 = v22;
    }
    unint64_t v23 = v18;
    operator delete(v20);
  }
}

void sub_854D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_854DB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_854DD0(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_897D0C((uint64_t)&v17);
  sub_639530(a3, (uint64_t)&v17, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a3, 71);
  uint64_t v6 = sub_62C7DC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = *a2;
  uint64_t v8 = sub_62C848(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_2F99CC(&v22, v7 + v6, *a2 + v8);
  __n128 v16 = v22;
  sub_638424(a3, &v16);
  sub_69200(a3, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 430));
  unint64_t v9 = v21;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  __n128 v10 = v20;
  if (v20)
  {
    do
    {
      uint64_t v11 = (void *)*v10;
      sub_4F4B48((uint64_t)(v10 + 2));
      operator delete(v10);
      __n128 v10 = v11;
    }
    while (v11);
  }
  uint64_t v12 = __p;
  long long __p = 0;
  if (v12) {
    operator delete(v12);
  }
  uint64_t v13 = (void **)v17;
  if (v17)
  {
    long long v14 = v18;
    uint64_t v15 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v14 - 1) < 0) {
          operator delete(*(v14 - 3));
        }
        v14 -= 3;
      }
      while (v14 != v13);
      uint64_t v15 = v17;
    }
    long long v18 = v13;
    operator delete(v15);
  }
}

void sub_854F64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_854F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_854F98(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_8987EC((uint64_t)&v17);
  sub_639530(a3, (uint64_t)&v17, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a3, 74);
  uint64_t v6 = sub_62C7DC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = *a2;
  uint64_t v8 = sub_62C848(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_2F99CC(&v22, v7 + v6, *a2 + v8);
  __n128 v16 = v22;
  sub_638424(a3, &v16);
  sub_69200(a3, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 430));
  unint64_t v9 = v21;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  __n128 v10 = v20;
  if (v20)
  {
    do
    {
      uint64_t v11 = (void *)*v10;
      sub_4F4B48((uint64_t)(v10 + 2));
      operator delete(v10);
      __n128 v10 = v11;
    }
    while (v11);
  }
  uint64_t v12 = __p;
  long long __p = 0;
  if (v12) {
    operator delete(v12);
  }
  uint64_t v13 = (void **)v17;
  if (v17)
  {
    long long v14 = v18;
    uint64_t v15 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v14 - 1) < 0) {
          operator delete(*(v14 - 3));
        }
        v14 -= 3;
      }
      while (v14 != v13);
      uint64_t v15 = v17;
    }
    long long v18 = v13;
    operator delete(v15);
  }
}

void sub_85512C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_855140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_855160(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_89891C((uint64_t)&v17);
  sub_639530(a3, (uint64_t)&v17, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a3, 75);
  uint64_t v6 = sub_62C7DC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = *a2;
  uint64_t v8 = sub_62C848(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_2F99CC(&v22, v7 + v6, *a2 + v8);
  __n128 v16 = v22;
  sub_638424(a3, &v16);
  sub_69200(a3, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 430));
  unint64_t v9 = v21;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  __n128 v10 = v20;
  if (v20)
  {
    do
    {
      uint64_t v11 = (void *)*v10;
      sub_4F4B48((uint64_t)(v10 + 2));
      operator delete(v10);
      __n128 v10 = v11;
    }
    while (v11);
  }
  uint64_t v12 = __p;
  long long __p = 0;
  if (v12) {
    operator delete(v12);
  }
  uint64_t v13 = (void **)v17;
  if (v17)
  {
    long long v14 = v18;
    uint64_t v15 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v14 - 1) < 0) {
          operator delete(*(v14 - 3));
        }
        v14 -= 3;
      }
      while (v14 != v13);
      uint64_t v15 = v17;
    }
    long long v18 = v13;
    operator delete(v15);
  }
}

void sub_8552F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_855308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_855328(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_898A4C((uint64_t)&v17);
  sub_639530(a3, (uint64_t)&v17, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a3, 78);
  uint64_t v6 = sub_62C7DC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = *a2;
  uint64_t v8 = sub_62C848(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_2F99CC(&v22, v7 + v6, *a2 + v8);
  __n128 v16 = v22;
  sub_638424(a3, &v16);
  sub_69200(a3, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 430));
  unint64_t v9 = v21;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  __n128 v10 = v20;
  if (v20)
  {
    do
    {
      uint64_t v11 = (void *)*v10;
      sub_4F4B48((uint64_t)(v10 + 2));
      operator delete(v10);
      __n128 v10 = v11;
    }
    while (v11);
  }
  uint64_t v12 = __p;
  long long __p = 0;
  if (v12) {
    operator delete(v12);
  }
  uint64_t v13 = (void **)v17;
  if (v17)
  {
    long long v14 = v18;
    uint64_t v15 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v14 - 1) < 0) {
          operator delete(*(v14 - 3));
        }
        v14 -= 3;
      }
      while (v14 != v13);
      uint64_t v15 = v17;
    }
    long long v18 = v13;
    operator delete(v15);
  }
}

void sub_8554BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_8554D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_8554F0(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_898B7C((uint64_t)&v17);
  sub_639530(a3, (uint64_t)&v17, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a3, 76);
  uint64_t v6 = sub_62C7DC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = *a2;
  uint64_t v8 = sub_62C848(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_2F99CC(&v22, v7 + v6, *a2 + v8);
  __n128 v16 = v22;
  sub_638424(a3, &v16);
  sub_69200(a3, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 430));
  unint64_t v9 = v21;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  __n128 v10 = v20;
  if (v20)
  {
    do
    {
      uint64_t v11 = (void *)*v10;
      sub_4F4B48((uint64_t)(v10 + 2));
      operator delete(v10);
      __n128 v10 = v11;
    }
    while (v11);
  }
  uint64_t v12 = __p;
  long long __p = 0;
  if (v12) {
    operator delete(v12);
  }
  uint64_t v13 = (void **)v17;
  if (v17)
  {
    long long v14 = v18;
    uint64_t v15 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v14 - 1) < 0) {
          operator delete(*(v14 - 3));
        }
        v14 -= 3;
      }
      while (v14 != v13);
      uint64_t v15 = v17;
    }
    long long v18 = v13;
    operator delete(v15);
  }
}

void sub_855684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_855698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_8556B8(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_898CAC((uint64_t)&v17);
  sub_639530(a3, (uint64_t)&v17, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a3, 79);
  uint64_t v6 = sub_62C7DC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = *a2;
  uint64_t v8 = sub_62C848(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_2F99CC(&v22, v7 + v6, *a2 + v8);
  __n128 v16 = v22;
  sub_638424(a3, &v16);
  sub_69200(a3, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 430));
  unint64_t v9 = v21;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  __n128 v10 = v20;
  if (v20)
  {
    do
    {
      uint64_t v11 = (void *)*v10;
      sub_4F4B48((uint64_t)(v10 + 2));
      operator delete(v10);
      __n128 v10 = v11;
    }
    while (v11);
  }
  uint64_t v12 = __p;
  long long __p = 0;
  if (v12) {
    operator delete(v12);
  }
  uint64_t v13 = (void **)v17;
  if (v17)
  {
    long long v14 = v18;
    uint64_t v15 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v14 - 1) < 0) {
          operator delete(*(v14 - 3));
        }
        v14 -= 3;
      }
      while (v14 != v13);
      uint64_t v15 = v17;
    }
    long long v18 = v13;
    operator delete(v15);
  }
}

void sub_85584C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_855860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_855880(void *a1, unint64_t a2)
{
  if (0xF0F0F0F0F0F0F0F1 * ((uint64_t)(a1[1] - *a1) >> 4) <= a2)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v16, a2);
    uint64_t v6 = std::string::insert(&v16, 0, "Out-of-bounds access in Vector::at with index=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v17.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    uint64_t v8 = std::string::append(&v17, ",size=");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v15, 0xF0F0F0F0F0F0F0F1 * ((uint64_t)(a1[1] - *a1) >> 4));
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      __n128 v10 = &v15;
    }
    else {
      __n128 v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    uint64_t v12 = std::string::append(&v18, (const std::string::value_type *)v10, size);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v12->__r_.__value_.__r.__words[2];
    long long v19 = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    long long v14 = (void *)sub_2F404((uint64_t)exception, &v19);
  }
  return *a1 + 272 * a2;
}

void sub_8559D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(__p);
  goto LABEL_11;
}

void **sub_855AB0(uint64_t a1)
{
  unint64_t v2 = *(char **)(a1 + 120);
  if (v2)
  {
    do
    {
      uint64_t v5 = *(char **)v2;
      uint64_t v6 = (void *)*((void *)v2 + 6);
      if (v6)
      {
        *((void *)v2 + 7) = v6;
        operator delete(v6);
      }
      if (v2[39] < 0) {
        operator delete(*((void **)v2 + 2));
      }
      operator delete(v2);
      unint64_t v2 = v5;
    }
    while (v5);
  }
  uint64_t v3 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = 0;
  if (v3) {
    operator delete(v3);
  }

  return sub_4F31D0((void **)a1);
}

BOOL sub_855B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_638A2C(a2);
  uint64_t v4 = *(void *)(a1 + 2160);
  if (*(unsigned char *)(a1 + 2179))
  {
    uint64_t v5 = sub_62B9C8((void *)v4, *(_DWORD *)(a1 + 5188));
    uint64_t v6 = sub_62BA34(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    if (*(unsigned char *)(a1 + 2176)) {
      uint64_t v7 = v5;
    }
    else {
      uint64_t v7 = v6;
    }
    return v3 <= v7;
  }
  int v9 = *(_DWORD *)(v4 + 164);
  int v10 = v9 / 10;
  int v11 = v9 % 10;
  if (v9 < 0) {
    char v12 = -5;
  }
  else {
    char v12 = 5;
  }
  double v13 = *(double *)(v4 + 2008)
      / 3.6
      * (double)(int)(v10 + (((103 * (char)(v12 + v11)) >> 15) & 1) + ((103 * (char)(v12 + v11)) >> 10))
      * 100.0;
  if (v13 >= 0.0)
  {
    double v14 = *(double *)(v4 + 2008)
        / 3.6
        * (double)(int)(v10 + (((103 * (char)(v12 + v11)) >> 15) & 1) + ((103 * (char)(v12 + v11)) >> 10))
        * 100.0;
    if (v13 >= 4.50359963e15) {
      goto LABEL_17;
    }
    uint64_t v15 = (uint64_t)(v13 + v13) + 1;
  }
  else
  {
    double v14 = *(double *)(v4 + 2008)
        / 3.6
        * (double)(int)(v10 + (((103 * (char)(v12 + v11)) >> 15) & 1) + ((103 * (char)(v12 + v11)) >> 10))
        * 100.0;
    if (v13 <= -4.50359963e15) {
      goto LABEL_17;
    }
    uint64_t v15 = (uint64_t)(v13 + v13);
    if (v15 >= 1) {
      --v15;
    }
  }
  double v14 = (double)(v15 >> 1);
LABEL_17:
  if (v14 < 9.22337204e18)
  {
    if (v13 >= 0.0)
    {
      if (v13 < 4.50359963e15)
      {
        uint64_t v16 = (uint64_t)(v13 + v13) + 1;
LABEL_26:
        double v13 = (double)(v16 >> 1);
      }
    }
    else if (v13 > -4.50359963e15)
    {
      uint64_t v16 = (uint64_t)(v13 + v13);
      if (v16 >= 1) {
        --v16;
      }
      goto LABEL_26;
    }
    uint64_t v17 = (uint64_t)v13;
    goto LABEL_28;
  }
  uint64_t v17 = 0x7FFFFFFFFFFFFFFELL;
LABEL_28:
  if (v17 >= *(void *)(a1 + 5192)) {
    uint64_t v17 = *(void *)(a1 + 5192);
  }
  return v3 <= v17;
}

uint64_t sub_855D04(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 2160);
  double v3 = *(double *)(v2 + 2008) / 3.6;
  int v4 = sub_62BFB0((unsigned int *)v2, *(_DWORD *)(a1 + 5188));
  if (v4 < 0) {
    char v5 = -5;
  }
  else {
    char v5 = 5;
  }
  signed int v6 = v4 / 10 + (((103 * (char)(v5 + v4 % 10)) >> 15) & 1) + ((103 * (char)(v5 + v4 % 10)) >> 10);
  int v7 = sub_62C01C(*(unsigned int **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (v7 < 0) {
    char v8 = -5;
  }
  else {
    char v8 = 5;
  }
  unsigned int v9 = (((103 * (char)(v8 + v7 % 10)) >> 15) & 1) + ((103 * (char)(v8 + v7 % 10)) >> 10);
  double v10 = v3 * (double)v6 * 100.0;
  if (v10 >= 0.0)
  {
    double v11 = v3 * (double)v6 * 100.0;
    if (v10 >= 4.50359963e15) {
      goto LABEL_15;
    }
    uint64_t v12 = (uint64_t)(v10 + v10) + 1;
  }
  else
  {
    double v11 = v3 * (double)v6 * 100.0;
    if (v10 <= -4.50359963e15) {
      goto LABEL_15;
    }
    uint64_t v12 = (uint64_t)(v10 + v10);
    if (v12 >= 1) {
      --v12;
    }
  }
  double v11 = (double)(v12 >> 1);
LABEL_15:
  int v13 = v7 / 10 + v9;
  if (v11 >= 9.22337204e18)
  {
    uint64_t v15 = 0x7FFFFFFFFFFFFFFELL;
    goto LABEL_26;
  }
  if (v10 >= 0.0)
  {
    if (v10 < 4.50359963e15)
    {
      uint64_t v14 = (uint64_t)(v10 + v10) + 1;
LABEL_24:
      double v10 = (double)(v14 >> 1);
    }
  }
  else if (v10 > -4.50359963e15)
  {
    uint64_t v14 = (uint64_t)(v10 + v10);
    if (v14 >= 1) {
      --v14;
    }
    goto LABEL_24;
  }
  uint64_t v15 = (uint64_t)v10;
LABEL_26:
  uint64_t v16 = *(void *)(a1 + 5192);
  if (v15 >= v16) {
    uint64_t v15 = *(void *)(a1 + 5192);
  }
  uint64_t v53 = v15;
  double v17 = v3 * (double)v13 * 100.0;
  if (v17 >= 0.0)
  {
    double v18 = v3 * (double)v13 * 100.0;
    if (v17 >= 4.50359963e15) {
      goto LABEL_36;
    }
    uint64_t v19 = (uint64_t)(v17 + v17) + 1;
  }
  else
  {
    double v18 = v3 * (double)v13 * 100.0;
    if (v17 <= -4.50359963e15) {
      goto LABEL_36;
    }
    uint64_t v19 = (uint64_t)(v17 + v17);
    if (v19 >= 1) {
      --v19;
    }
  }
  double v18 = (double)(v19 >> 1);
LABEL_36:
  if (v18 >= 9.22337204e18)
  {
    uint64_t v21 = 0x7FFFFFFFFFFFFFFELL;
    goto LABEL_47;
  }
  if (v17 >= 0.0)
  {
    if (v17 < 4.50359963e15)
    {
      uint64_t v20 = (uint64_t)(v17 + v17) + 1;
LABEL_45:
      double v17 = (double)(v20 >> 1);
    }
  }
  else if (v17 > -4.50359963e15)
  {
    uint64_t v20 = (uint64_t)(v17 + v17);
    if (v20 >= 1) {
      --v20;
    }
    goto LABEL_45;
  }
  uint64_t v21 = (uint64_t)v17;
LABEL_47:
  if (v21 < v16) {
    uint64_t v16 = v21;
  }
  uint64_t v52 = v16;
  __n128 v22 = (uint64_t **)(a1 + 5200);
  sub_63AD48(v22, &v53, &v52, 1, (uint64_t)v42);
  sub_63AF84(v22, &v53, &v52, (uint64_t)v32);
  BOOL v23 = sub_564868(v42);
  uint64_t v24 = v42[0];
  uint64_t v25 = v53;
  BOOL v26 = sub_564868(v32);
  uint64_t v27 = v32[0];
  uint64_t v28 = v53;
  if (v41 < 0)
  {
    operator delete(__p);
    if ((v39 & 0x80000000) == 0)
    {
LABEL_51:
      if ((v37 & 0x80000000) == 0) {
        goto LABEL_52;
      }
      goto LABEL_72;
    }
  }
  else if ((v39 & 0x80000000) == 0)
  {
    goto LABEL_51;
  }
  operator delete(v38);
  if ((v37 & 0x80000000) == 0)
  {
LABEL_52:
    if ((v35 & 0x80000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_73;
  }
LABEL_72:
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_53:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_74;
  }
LABEL_73:
  operator delete(v34);
  if ((v33 & 0x80000000) == 0)
  {
LABEL_54:
    if ((v51 & 0x80000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_75;
  }
LABEL_74:
  operator delete((void *)v32[1]);
  if ((v51 & 0x80000000) == 0)
  {
LABEL_55:
    if ((v49 & 0x80000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_76;
  }
LABEL_75:
  operator delete(v50);
  if ((v49 & 0x80000000) == 0)
  {
LABEL_56:
    if ((v47 & 0x80000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_77;
  }
LABEL_76:
  operator delete(v48);
  if ((v47 & 0x80000000) == 0)
  {
LABEL_57:
    if ((v45 & 0x80000000) == 0) {
      goto LABEL_58;
    }
LABEL_78:
    operator delete(v44);
    if ((v43 & 0x80000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_79;
  }
LABEL_77:
  operator delete(v46);
  if (v45 < 0) {
    goto LABEL_78;
  }
LABEL_58:
  if ((v43 & 0x80000000) == 0) {
    goto LABEL_59;
  }
LABEL_79:
  operator delete((void *)v42[1]);
LABEL_59:
  if (v26) {
    uint64_t v29 = v27;
  }
  else {
    uint64_t v29 = v28;
  }
  if (v23) {
    uint64_t v30 = v24;
  }
  else {
    uint64_t v30 = v25;
  }
  if (v30 >= v28) {
    uint64_t v30 = v28;
  }
  if (v29 >= v30) {
    return v30;
  }
  else {
    return v29;
  }
}

void sub_856128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
}

void sub_856148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
}

uint64_t sub_85615C(uint64_t a1)
{
  uint64_t v2 = (unsigned char *)(a1 + 5912);
  uint64_t v3 = sub_62BB78(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v4 = *(void *)(a1 + 5192);
  if (v4 >= v3) {
    uint64_t v4 = v3;
  }
  uint64_t v33 = v4;
  if (v2[1889])
  {
    uint64_t v5 = sub_62BBE4(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v6 = *(void *)(a1 + 5192);
    if (v6 >= v5) {
      uint64_t v6 = v5;
    }
    int v7 = v2[1889];
    uint64_t v32 = v6;
    if (v7)
    {
      uint64_t v8 = sub_62BAA0(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
      if (*(void *)(a1 + 5192) >= v8) {
        uint64_t v9 = v8;
      }
      else {
        uint64_t v9 = *(void *)(a1 + 5192);
      }
      if (!v2[1996]) {
        goto LABEL_11;
      }
LABEL_18:
      uint64_t v10 = *(void *)(a1 + 5344);
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v32 = v4;
  }
  uint64_t v11 = sub_62BB0C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (*(void *)(a1 + 5192) >= v11) {
    uint64_t v9 = v11;
  }
  else {
    uint64_t v9 = *(void *)(a1 + 5192);
  }
  if (v2[1996]) {
    goto LABEL_18;
  }
LABEL_11:
  if (v2[2001])
  {
    uint64_t v10 = *(void *)(a1 + 7072);
    goto LABEL_19;
  }
  if (!v2[1999])
  {
    if (v2[1997] && v2[768]) {
      return *(void *)(a1 + 6496);
    }
    if (!v2[1889])
    {
LABEL_43:
      uint64_t v15 = v9;
      if (v2[192]) {
        uint64_t v15 = *(void *)(a1 + 5920);
      }
      if (*v2) {
        uint64_t v16 = v32;
      }
      else {
        uint64_t v16 = v15;
      }
      uint64_t v17 = v9;
      if (v2[1889]) {
        uint64_t v17 = sub_683498(a1 + 7464);
      }
      if (v2[1890]) {
        uint64_t v18 = sub_85642C(a1, v9);
      }
      else {
        uint64_t v18 = v9;
      }
      uint64_t v19 = v32;
      if (v32 <= v17) {
        uint64_t v19 = v17;
      }
      if (v18 >= v9) {
        uint64_t v20 = v9;
      }
      else {
        uint64_t v20 = v18;
      }
      if (v16 < v20) {
        uint64_t v20 = v16;
      }
      if (v19 >= v20) {
        return v20;
      }
      else {
        return v19;
      }
    }
    sub_63AD1C((uint64_t **)(a1 + 5200), &v33, 1, (uint64_t)v22);
    if (sub_564868(v22))
    {
      BOOL v14 = 1;
      uint64_t v13 = v33;
    }
    else
    {
      sub_63AD1C((uint64_t **)(a1 + 5200), &v32, 1, (uint64_t)v21);
      BOOL v14 = sub_564868(v21);
      uint64_t v13 = v21[0];
      sub_7D0A58((uint64_t)v21);
    }
    if (v31 < 0)
    {
      operator delete(__p);
      if ((v29 & 0x80000000) == 0)
      {
LABEL_33:
        if ((v27 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        goto LABEL_40;
      }
    }
    else if ((v29 & 0x80000000) == 0)
    {
      goto LABEL_33;
    }
    operator delete(v28);
    if ((v27 & 0x80000000) == 0)
    {
LABEL_34:
      if ((v25 & 0x80000000) == 0) {
        goto LABEL_35;
      }
      goto LABEL_41;
    }
LABEL_40:
    operator delete(v26);
    if ((v25 & 0x80000000) == 0)
    {
LABEL_35:
      if ((v23 & 0x80000000) == 0) {
        goto LABEL_36;
      }
      goto LABEL_42;
    }
LABEL_41:
    operator delete(v24);
    if ((v23 & 0x80000000) == 0)
    {
LABEL_36:
      if (v14) {
        return v13;
      }
      goto LABEL_43;
    }
LABEL_42:
    operator delete(v22[1]);
    if (v14) {
      return v13;
    }
    goto LABEL_43;
  }
  uint64_t v10 = *(void *)(a1 + 6112);
LABEL_19:
  if (v10 >= v9) {
    return v9;
  }
  else {
    return v10;
  }
}

void sub_8563E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
}

void sub_856404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
}

void sub_856418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
}

uint64_t sub_85642C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 7448);
  do
  {
    if (v4 == *(void *)(a1 + 7440)) {
      return a2;
    }
    v4 -= 336;
  }
  while (!sub_68346C(v4));

  return sub_6834A0(v4);
}

uint64_t sub_8564A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 5200);
  uint64_t v7 = *(void *)(a1 + 5208);
  if (v6 == v7)
  {
LABEL_8:
    *(_OWORD *)(a5 + 168) = 0u;
    *(_OWORD *)(a5 + 152) = 0u;
    *(_OWORD *)(a5 + 136) = 0u;
    *(_OWORD *)(a5 + 120) = 0u;
    *(_OWORD *)(a5 + 104) = 0u;
    *(_OWORD *)(a5 + 88) = 0u;
    *(_OWORD *)(a5 + 72) = 0u;
    *(_OWORD *)(a5 + 56) = 0u;
    *(_OWORD *)(a5 + 40) = 0u;
    *(_OWORD *)(a5 + 24) = 0u;
    *(_OWORD *)(a5 + 8) = 0u;
    *(void *)a5 = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t result = sub_6F30A4(a5 + 8);
    *(void *)(a5 + 160) = -1;
    *(void *)(a5 + 168) = -1;
    *(void *)(a5 + 176) = 0;
  }
  else
  {
    while (1)
    {
      if (sub_63ACB4(v6))
      {
        uint64_t v12 = sub_856CCC(*(void **)(a1 + 7968), *(void *)(v6 + 168));
        if (sub_63AB44(v12, a2) && sub_63ACC4((void *)v6, a3, a4)) {
          break;
        }
      }
      v6 += 184;
      if (v6 == v7) {
        goto LABEL_8;
      }
    }
    *(void *)a5 = *(void *)v6;
    uint64_t result = (uint64_t)sub_4AA8E0((char *)(a5 + 8), (long long *)(v6 + 8));
    long long v14 = *(_OWORD *)(v6 + 160);
    *(void *)(a5 + 176) = *(void *)(v6 + 176);
    *(_OWORD *)(a5 + 160) = v14;
  }
  return result;
}

char *sub_8565C8(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  int v6 = sub_639BBC(a2);
  int v7 = sub_639BBC((uint64_t)a3);
  unsigned int v8 = sub_638A18(a2);
  uint64_t result = (char *)sub_638A18((uint64_t)a3);
  if (v8 <= 0x28 && ((1 << v8) & 0x19800000000) != 0) {
    return result;
  }
  if ((v6 | v7) == 1)
  {
    uint64_t v10 = 256;
    if ((v6 & v7) != 0) {
      uint64_t v10 = 260;
    }
    int v11 = *(_DWORD *)(*(void *)(a1 + 2160) + v10);
    goto LABEL_14;
  }
  unsigned int v12 = result - 39;
  unsigned int v13 = result - 35;
  unsigned int v14 = result - 33;
  if (v8 == 31)
  {
    if (v12 <= 1)
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 2160) + 276);
      goto LABEL_14;
    }
    if (v13 <= 1)
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 2160) + 280);
      goto LABEL_14;
    }
    if (v14 <= 1)
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 2160) + 284);
      goto LABEL_14;
    }
LABEL_27:
    int v11 = 0;
    goto LABEL_14;
  }
  if (v8 != 29)
  {
    int v11 = *(_DWORD *)(*(void *)(a1 + 2160) + 252);
    goto LABEL_14;
  }
  if (result != 31)
  {
    if (v12 <= 1)
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 2160) + 264);
      goto LABEL_14;
    }
    if (v13 <= 1)
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 2160) + 268);
      goto LABEL_14;
    }
    if (v14 <= 1)
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 2160) + 272);
      goto LABEL_14;
    }
    goto LABEL_27;
  }
  int v11 = *(_DWORD *)(*(void *)(a1 + 2160) + 248);
LABEL_14:
  int v15 = sub_4F44(a3);

  return sub_639540(a2, v15, v11, 0);
}

uint64_t sub_856768(void *a1, unint64_t a2)
{
  if (0xFAFAFAFAFAFAFAFBLL * ((uint64_t)(a1[1] - *a1) >> 3) <= a2)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v16, a2);
    int v6 = std::string::insert(&v16, 0, "Out-of-bounds access in Vector::at with index=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v17.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    unsigned int v8 = std::string::append(&v17, ",size=");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v15, 0xFAFAFAFAFAFAFAFBLL * ((uint64_t)(a1[1] - *a1) >> 3));
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v10 = &v15;
    }
    else {
      uint64_t v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    unsigned int v12 = std::string::append(&v18, (const std::string::value_type *)v10, size);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v12->__r_.__value_.__r.__words[2];
    long long v19 = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    unsigned int v14 = (void *)sub_2F404((uint64_t)exception, &v19);
  }
  return *a1 + 408 * a2;
}

void sub_8568C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(__p);
  goto LABEL_11;
}

BOOL sub_8569A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 2160);
  if (*(unsigned char *)(v2 + 1968) && *(_DWORD *)(a1 + 2144) == 3) {
    return 0;
  }
  uint64_t v3 = sub_62CC54((void *)v2, *(_DWORD *)(a1 + 5188));
  uint64_t v4 = *(void *)(a1 + 2160);
  if (*(unsigned char *)(v4 + 2018))
  {
    if (*(void *)(a1 + 2152) <= v3) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 5186))
  {
    uint64_t v5 = 0;
    if (!*(unsigned char *)(a1 + 7910)) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = sub_62CB3C((void *)v4, *(_DWORD *)(a1 + 5188));
    if (!*(unsigned char *)(a1 + 7910)) {
      goto LABEL_10;
    }
  }
  if (*(void *)(a1 + 7880) + v5 > *(void *)(a1 + 5192)) {
    return 0;
  }
LABEL_10:
  if (*(unsigned char *)(a1 + 7911) && *(void *)(a1 + 7888) + v5 > *(void *)(a1 + 5192)
    || *(unsigned char *)(a1 + 7906) && *(void *)(a1 + 7864) + v5 > *(void *)(a1 + 5192))
  {
    return 0;
  }
  if (*(unsigned char *)(a1 + 7912))
  {
    uint64_t v6 = *(void *)(a1 + 5192);
    if (*(void *)(a1 + 7896) + v5 > v6) {
      return 0;
    }
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 5192);
  }
  return *(void *)(a1 + 7872) + v5 < v6;
}

BOOL sub_856AC0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 2183)) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 5192);
  if (v2 < 0) {
    __int16 v3 = -50;
  }
  else {
    __int16 v3 = 50;
  }
  signed int v4 = ((5243 * (__int16)(v3 + v2 % 100)) >> 19) + ((5243 * (__int16)(v3 + v2 % 100)) >> 31);
  uint64_t v5 = *(void *)(a1 + 2160);
  int v6 = *(_DWORD *)(v5 + 164);
  int v7 = v6 / 10;
  int v8 = v6 % 10;
  if (v6 < 0) {
    char v9 = -5;
  }
  else {
    char v9 = 5;
  }
  double v10 = *(double *)(v5 + 2008)
      / 3.6
      * (double)(int)(v7 + (((103 * (char)(v9 + v8)) >> 15) & 1) + ((103 * (char)(v9 + v8)) >> 10))
      * 100.0;
  if (v10 >= 0.0)
  {
    double v11 = *(double *)(v5 + 2008)
        / 3.6
        * (double)(int)(v7 + (((103 * (char)(v9 + v8)) >> 15) & 1) + ((103 * (char)(v9 + v8)) >> 10))
        * 100.0;
    if (v10 >= 4.50359963e15) {
      goto LABEL_17;
    }
    uint64_t v12 = (uint64_t)(v10 + v10) + 1;
  }
  else
  {
    double v11 = *(double *)(v5 + 2008)
        / 3.6
        * (double)(int)(v7 + (((103 * (char)(v9 + v8)) >> 15) & 1) + ((103 * (char)(v9 + v8)) >> 10))
        * 100.0;
    if (v10 <= -4.50359963e15) {
      goto LABEL_17;
    }
    uint64_t v12 = (uint64_t)(v10 + v10);
    if (v12 >= 1) {
      --v12;
    }
  }
  double v11 = (double)(v12 >> 1);
LABEL_17:
  uint64_t v13 = v2 / 100 + v4;
  if (v11 < 9.22337204e18)
  {
    if (v10 >= 0.0)
    {
      if (v10 < 4.50359963e15)
      {
        uint64_t v14 = (uint64_t)(v10 + v10) + 1;
LABEL_26:
        double v10 = (double)(v14 >> 1);
      }
    }
    else if (v10 > -4.50359963e15)
    {
      uint64_t v14 = (uint64_t)(v10 + v10);
      if (v14 >= 1) {
        --v14;
      }
      goto LABEL_26;
    }
    uint64_t v15 = (uint64_t)v10;
    goto LABEL_28;
  }
  uint64_t v15 = 0x7FFFFFFFFFFFFFFELL;
LABEL_28:
  if (v15 < v2) {
    uint64_t v2 = v15;
  }
  uint64_t v16 = v2 / 100;
  __int16 v17 = v2 % 100;
  if (v2 < 0) {
    __int16 v18 = -50;
  }
  else {
    __int16 v18 = 50;
  }
  return v13 > v16 + (int)(((5243 * (__int16)(v18 + v17)) >> 19) + ((5243 * (__int16)(v18 + v17)) >> 31));
}

uint64_t sub_856CCC(void *a1, unint64_t a2)
{
  if (0x4EC4EC4EC4EC4EC5 * ((uint64_t)(a1[1] - *a1) >> 3) <= a2)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v16, a2);
    int v6 = std::string::insert(&v16, 0, "Out-of-bounds access in Vector::at with index=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v17.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    int v8 = std::string::append(&v17, ",size=");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v15, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(a1[1] - *a1) >> 3));
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      double v10 = &v15;
    }
    else {
      double v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    uint64_t v12 = std::string::append(&v18, (const std::string::value_type *)v10, size);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v12->__r_.__value_.__r.__words[2];
    long long v19 = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    uint64_t v14 = (void *)sub_2F404((uint64_t)exception, &v19);
  }
  return *a1 + 104 * a2;
}

void sub_856E2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(__p);
  goto LABEL_11;
}

uint64_t sub_856F0C(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6)
{
  long long v13 = (void *)sub_7E71A0(a1, (uint64_t)a2, a3, a4, a5, a6);
  void *v13 = off_243A948;
  uint64_t v185 = (uint64_t)(v13 + 275);
  uint64_t v200 = a4;
  uint64_t v202 = a5;
  sub_89FCDC((std::string::size_type)(v13 + 275), (uint64_t)a2, a3, a4, a5, a6);
  *(void *)(a1 + 5144) = 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v14 = (char *)(a1 + 5184);
  *(void *)(a1 + 5152) = 0;
  unint64_t v203 = (char **)(a1 + 5152);
  *(void *)(a1 + 5168) = 0;
  *(void *)(a1 + 5160) = 0;
  *(void *)(a1 + 5176) = 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(a1 + 5184) = 0;
  *(unsigned char *)(a1 + 5186) = 0;
  *(void *)(a1 + 5192) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 5200) = 0;
  *(void *)(a1 + 5216) = 0;
  *(void *)(a1 + 5208) = 0;
  *(unsigned char *)(a1 + 5224) = 1;
  uint64_t v198 = (_OWORD *)(a1 + 5224);
  *(_DWORD *)(a1 + 5228) = 0;
  *(void *)(a1 + 5232) = -1;
  *(void *)(a1 + 5240) = -1;
  *(_OWORD *)(a1 + 5256) = 0u;
  *(void *)(a1 + 5248) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 5304) = 0;
  *(_OWORD *)(a1 + 5288) = 0u;
  uint64_t v201 = (uint64_t **)(a1 + 5200);
  *(_OWORD *)(a1 + 5272) = 0u;
  *(void *)(a1 + 5312) = 0xBFF0000000000000;
  *(unsigned char *)(a1 + 5320) = 0;
  *(void *)(a1 + 5328) = 0;
  *(void *)(a1 + 5336) = 0;
  *(void *)(a1 + 5344) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 5352);
  *(void *)(a1 + 5512) = -1;
  uint64_t v194 = (uint64_t *)(a1 + 5344);
  *(void *)(a1 + 5504) = -1;
  *(void *)(a1 + 5520) = 0;
  *(unsigned char *)(a1 + 5528) = 0;
  *(void *)(a1 + 5536) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 5544);
  *(void *)(a1 + 5704) = -1;
  *(void *)(a1 + 5696) = -1;
  *(void *)(a1 + 5712) = 0;
  *(unsigned char *)(a1 + 5720) = 0;
  *(void *)(a1 + 5728) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 5736);
  *(void *)(a1 + 5896) = -1;
  *(void *)(a1 + 5888) = -1;
  *(void *)(a1 + 5904) = 0;
  *(unsigned char *)(a1 + 5912) = 0;
  *(void *)(a1 + 5920) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 5928);
  *(void *)(a1 + 6088) = -1;
  *(void *)(a1 + 6080) = -1;
  *(void *)(a1 + 6096) = 0;
  *(unsigned char *)(a1 + 6104) = 0;
  *(void *)(a1 + 6112) = 0x7FFFFFFFFFFFFFFFLL;
  long long v188 = (void **)(a1 + 6120);
  sub_6F30A4(a1 + 6120);
  *(void *)(a1 + 6280) = -1;
  unint64_t v199 = (uint64_t *)(a1 + 6112);
  *(void *)(a1 + 6272) = -1;
  *(void *)(a1 + 6288) = 0;
  *(unsigned char *)(a1 + 6296) = 0;
  *(void *)(a1 + 6304) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 6312);
  *(void *)(a1 + 6472) = -1;
  int v191 = (uint64_t *)(a1 + 6304);
  *(void *)(a1 + 6464) = -1;
  *(void *)(a1 + 6480) = 0;
  *(unsigned char *)(a1 + 6488) = 0;
  *(void *)(a1 + 6496) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 6504);
  *(void *)(a1 + 6664) = -1;
  *(void *)(a1 + 6656) = -1;
  *(void *)(a1 + 6672) = 0;
  *(unsigned char *)(a1 + 6680) = 0;
  *(void *)(a1 + 6688) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 6696);
  *(void *)(a1 + 6856) = -1;
  *(void *)(a1 + 6848) = -1;
  *(void *)(a1 + 6864) = 0;
  *(unsigned char *)(a1 + 6872) = 0;
  *(void *)(a1 + 6880) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 6888);
  *(void *)(a1 + 7048) = -1;
  char v193 = (uint64_t *)(a1 + 6880);
  *(void *)(a1 + 7040) = -1;
  *(void *)(a1 + 7056) = 0;
  *(unsigned char *)(a1 + 7064) = 0;
  *(void *)(a1 + 7072) = 0x7FFFFFFFFFFFFFFFLL;
  int v192 = (void **)(a1 + 7080);
  sub_6F30A4(a1 + 7080);
  unint64_t v196 = (void *)(a1 + 7072);
  *(void *)(a1 + 7240) = -1;
  *(void *)(a1 + 7232) = -1;
  *(_OWORD *)(a1 + 7248) = xmmword_20E8160;
  long long v186 = (void **)(a1 + 7264);
  sub_6F30A4(a1 + 7264);
  unint64_t v15 = a5;
  *(void *)(a1 + 7424) = -1;
  *(void *)(a1 + 7416) = -1;
  uint64_t v195 = (uint64_t *)(a1 + 7440);
  *(_OWORD *)(a1 + 7432) = 0u;
  *(_OWORD *)(a1 + 7448) = 0u;
  uint64_t v190 = a1 + 7464;
  sub_68206C(a1 + 7464);
  *(void *)(a1 + 7824) = 0;
  *(void *)(a1 + 7816) = 0;
  *(void *)(a1 + 7840) = 0;
  *(void *)(a1 + 7832) = 0;
  *(_DWORD *)(a1 + 7800) = 0;
  *(_DWORD *)(a1 + 7803) = 0;
  *(void *)(a1 + 7808) = off_243A000;
  *(_DWORD *)(a1 + 7848) = 0;
  *(unsigned char *)(a1 + 7852) = 1;
  *(unsigned char *)(a1 + 7856) = 0;
  int64x2_t v16 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  *(int64x2_t *)(a1 + 7864) = v16;
  *(int64x2_t *)(a1 + 7880) = v16;
  *(void *)(a1 + 7896) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 7904) = 0;
  *(_DWORD *)(a1 + 7912) = 0;
  *(_OWORD *)(a1 + 7916) = xmmword_20E2060;
  *(_DWORD *)(a1 + 7932) = -1;
  *(void *)(a1 + 7936) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 7944) = sub_4A5E10((void *)(a4 + 1064), a5) + 1832;
  *(void *)(a1 + 7952) = sub_4A5E10((void *)(a4 + 1064), a5) + 336;
  *(void *)(a1 + 7960) = sub_4A5E10((void *)(a4 + 1064), a5) + 360;
  *(void *)(a1 + 7968) = a4 + 10176;
  *(void *)(a1 + 7976) = sub_4A5E10((void *)(a4 + 1064), a5) + 1784;
  *(unsigned char *)(a1 + 7984) = 0;
  *(_DWORD *)(a1 + 7988) = a6 + 1;
  uint64_t v17 = *(void *)(a4 + 1064);
  uint64_t v18 = v17 + 2400 * v15;
  *(_DWORD *)(a1 + 7916) = 1000 * *(_DWORD *)v18;
  *(void *)(a1 + 5144) = *(void *)(v18 + 864);
  unsigned int v21 = *(_DWORD *)(v18 + 160);
  std::string::size_type v20 = (_DWORD *)(v18 + 160);
  unsigned int v19 = v21;
  char v22 = 1;
  char v23 = v21 - 25;
  if (v21 - 25 <= 0x3F && ((1 << v23) & 0x9000000000000001) != 0)
  {
    uint64_t v24 = (uint64_t *)(a1 + 5200);
  }
  else
  {
    uint64_t v24 = (uint64_t *)(a1 + 5200);
    if (v19 != 17) {
      char v22 = 0;
    }
  }
  *uint64_t v14 = v22;
  BOOL v26 = v19 == 85 || v19 == 88;
  *(unsigned char *)(a1 + 5185) = v26;
  if (v19 - 82 >= 3)
  {
    if (v19 > 0x27) {
      LOBYTE(v27) = 0;
    }
    else {
      unint64_t v27 = (0x8600050000uLL >> v19) & 1;
    }
  }
  else
  {
    LOBYTE(v27) = 1;
  }
  uint64_t v184 = (void *)(a1 + 7864);
  *(unsigned char *)(a1 + 5186) = v27;
  uint64_t v28 = v17 + 2400 * v202;
  *(_DWORD *)(a1 + 5188) = *(_DWORD *)(v28 + 1860);
  char v29 = (uint64_t *)(v28 + 1872);
  if (v24 == v29)
  {
    long long v32 = *(_OWORD *)(v17 + 2400 * v202 + 1912);
    _OWORD *v198 = *(_OWORD *)(v17 + 2400 * v202 + 1896);
    *(_OWORD *)(a1 + 5240) = v32;
  }
  else
  {
    sub_5A09C0(v24, *v29, v29[1], 0xD37A6F4DE9BD37A7 * ((v29[1] - *v29) >> 3));
    uint64_t v30 = v17 + 2400 * v202;
    long long v31 = *(_OWORD *)(v30 + 1912);
    _OWORD *v198 = *(_OWORD *)(v30 + 1896);
    *(_OWORD *)(a1 + 5240) = v31;
    sub_5A0D34((uint64_t *)(a1 + 5256), *(void *)(v30 + 1928), *(void *)(v30 + 1936), 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*(void *)(v30 + 1936) - *(void *)(v30 + 1928)) >> 4));
  }
  uint64_t v33 = v17 + 2400 * v202;
  long long v34 = *(_OWORD *)(v33 + 1952);
  long long v35 = *(_OWORD *)(v33 + 1968);
  *(_OWORD *)(a1 + 5305) = *(_OWORD *)(v33 + 1977);
  *(_OWORD *)(a1 + 5296) = v35;
  *(_OWORD *)(a1 + 5280) = v34;
  *(_OWORD *)(a1 + 5328) = *(_OWORD *)(v33 + 2000);
  uint64_t v36 = (uint64_t *)(v33 + 1808);
  if (v195 != (uint64_t *)(v33 + 1808)) {
    sub_59F08C(v195, *v36, *(void *)(v33 + 1816), 0xCF3CF3CF3CF3CF3DLL * ((*(void *)(v33 + 1816) - *v36) >> 4));
  }
  uint64_t v187 = v17 + 2400 * v202;
  *(unsigned char *)(a1 + 7803) = *(unsigned char *)(v187 + 1856);
  *(unsigned char *)(a1 + 7804) = sub_63A4A4((uint64_t)v198);
  *(unsigned char *)(a1 + 7806) = sub_62CDBC(a2, *(_DWORD *)(a1 + 5188));
  std::string::operator=((std::string *)(a1 + 7816), (const std::string *)(v187 + 2048));
  uint64_t v189 = v36;
  uint64_t v37 = *(void *)(v187 + 2072);
  *(void *)(a1 + 7845) = *(void *)(v187 + 2077);
  *(void *)(a1 + 7840) = v37;
  uint64_t v197 = v17;
  *(unsigned char *)(a1 + 7984) = *(unsigned char *)(v187 + 325);
  BOOL v40 = (*v20 & 0xFFFFFFFE) == 6 || (*v20 - 41) < 0x13 || *(unsigned char *)(v187 + 2226) != 0;
  *(unsigned char *)(a1 + 7805) = v40;
  uint64_t v41 = *(void *)(v187 + 688);
  uint64_t v42 = *(void *)(v187 + 696);
  if (v41 != v42)
  {
    char v43 = *(char **)(a1 + 5160);
    do
    {
      unint64_t v45 = *(void *)(a1 + 5168);
      if ((unint64_t)v43 < v45)
      {
        *(void *)char v43 = *(void *)(v41 + 152);
        uint64_t v44 = (uint64_t)(v43 + 8);
      }
      else
      {
        unsigned __int16 v46 = *v203;
        uint64_t v47 = v43 - *v203;
        uint64_t v48 = v47 >> 3;
        unint64_t v49 = (v47 >> 3) + 1;
        if (v49 >> 61) {
          sub_2E00();
        }
        uint64_t v50 = v45 - (void)v46;
        if (v50 >> 2 > v49) {
          unint64_t v49 = v50 >> 2;
        }
        if ((unint64_t)v50 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v51 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v51 = v49;
        }
        if (v51)
        {
          if (v51 >> 61) {
            sub_188D718();
          }
          uint64_t v52 = operator new(8 * v51);
          uint64_t v53 = &v52[8 * v48];
          void *v53 = *(void *)(v41 + 152);
          uint64_t v44 = (uint64_t)(v53 + 1);
          if (v43 != v46)
          {
LABEL_45:
            unint64_t v54 = v43 - 8 - v46;
            if (v54 < 0x168)
            {
              uint64_t v55 = v43;
              goto LABEL_47;
            }
            if (&v52[v47 - 8 - (v54 & 0xFFFFFFFFFFFFFFF8)] > &v52[v47 - 8])
            {
              uint64_t v55 = v43;
              goto LABEL_47;
            }
            if (&v43[-(v54 & 0xFFFFFFFFFFFFFFF8) - 8] > v43 - 8)
            {
              uint64_t v55 = v43;
              goto LABEL_47;
            }
            if ((unint64_t)(v43 - v52 - v47) < 0x20)
            {
              uint64_t v55 = v43;
              goto LABEL_47;
            }
            uint64_t v57 = (v54 >> 3) + 1;
            uint64_t v58 = 8 * (v57 & 0x3FFFFFFFFFFFFFFCLL);
            uint64_t v55 = &v43[-v58];
            uint64_t v53 = (void *)((char *)v53 - v58);
            uint64_t v59 = &v52[8 * v48 - 16];
            long long v60 = v43 - 16;
            uint64_t v61 = v57 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v62 = *(_OWORD *)v60;
              *(v59 - 1) = *((_OWORD *)v60 - 1);
              *uint64_t v59 = v62;
              v59 -= 2;
              v60 -= 32;
              v61 -= 4;
            }
            while (v61);
            if (v57 != (v57 & 0x3FFFFFFFFFFFFFFCLL))
            {
              do
              {
LABEL_47:
                uint64_t v56 = *((void *)v55 - 1);
                v55 -= 8;
                *--uint64_t v53 = v56;
              }
              while (v55 != v46);
            }
            char v43 = *v203;
            *(void *)(a1 + 5152) = v53;
            *(void *)(a1 + 5160) = v44;
            *(void *)(a1 + 5168) = &v52[8 * v51];
            if (!v43) {
              goto LABEL_34;
            }
LABEL_52:
            operator delete(v43);
            goto LABEL_34;
          }
        }
        else
        {
          uint64_t v52 = 0;
          uint64_t v53 = (void *)(8 * v48);
          *(void *)(8 * v48) = *(void *)(v41 + 152);
          uint64_t v44 = 8 * v48 + 8;
          if (v43 != v46) {
            goto LABEL_45;
          }
        }
        *(void *)(a1 + 5152) = v53;
        *(void *)(a1 + 5160) = v44;
        *(void *)(a1 + 5168) = &v52[8 * v51];
        if (v43) {
          goto LABEL_52;
        }
      }
LABEL_34:
      *(void *)(a1 + 5160) = v44;
      v41 += 160;
      char v43 = (char *)v44;
    }
    while (v41 != v42);
  }
  uint64_t v63 = *(void *)(v197 + 2400 * v202 + 128);
  *(void *)(a1 + 5176) = v63;
  uint64_t v64 = *(void *)(a1 + 2152);
  if (v64 < 0) {
    __int16 v65 = -50;
  }
  else {
    __int16 v65 = 50;
  }
  if (v64 / 100 != ((-5243 * (__int16)(v65 + v64 % 100)) >> 19)
                  + ((-5243 * (__int16)(v65 + v64 % 100)) >> 31))
  {
    uint64_t v66 = 5144;
    if (!*(unsigned char *)(a1 + 2180)) {
      uint64_t v66 = 2152;
    }
    uint64_t v67 = *(void *)(a1 + v66);
    if (v67 < 0) {
      __int16 v68 = -50;
    }
    else {
      __int16 v68 = 50;
    }
    if (v63 < 0) {
      __int16 v69 = -50;
    }
    else {
      __int16 v69 = 50;
    }
    uint64_t v70 = v63 / 100
        + (int)(((5243 * (__int16)(v69 + v63 % 100)) >> 19) + ((5243 * (__int16)(v69 + v63 % 100)) >> 31));
    uint64_t v71 = v67 - v63;
    if (v67 / 100
       + (int)(((5243 * (__int16)(v68 + v67 % 100)) >> 19) + ((5243 * (__int16)(v68 + v67 % 100)) >> 31)) > v70)
      uint64_t v64 = v71;
  }
  *(void *)(a1 + 5192) = v64;
  uint64_t v72 = *v189;
  uint64_t v73 = *(void *)(v197 + 2400 * v202 + 1816);
  if (*v189 == v73)
  {
LABEL_80:
    sub_68206C((uint64_t)&v204);
  }
  else
  {
    while (!sub_683488(v72))
    {
      v72 += 336;
      if (v72 == v73) {
        goto LABEL_80;
      }
    }
    sub_5964A0((uint64_t)&v204, v72);
  }
  sub_674798(v190, (uint64_t)&v204);
  sub_576848((uint64_t)&v204);
  int v74 = sub_682F60(v190);
  *(unsigned char *)(a1 + 7800) = v74;
  if (*(unsigned char *)(v187 + 1856)) {
    char v75 = v74;
  }
  else {
    char v75 = 0;
  }
  *(unsigned char *)(a1 + 7801) = v75;
  if (*(void *)(a1 + 7440) == *(void *)(a1 + 7448))
  {
    uint64_t v77 = (char *)(a1 + 7800);
    *(unsigned char *)(a1 + 7802) = 0;
    uint64_t v79 = a1 + 5928;
    if (!v74) {
      goto LABEL_106;
    }
  }
  else
  {
    BOOL v76 = !sub_683488(*(void *)(a1 + 7440));
    uint64_t v77 = (char *)(a1 + 7800);
    int v78 = *(unsigned __int8 *)(a1 + 7800);
    *(unsigned char *)(a1 + 7802) = v76;
    uint64_t v79 = a1 + 5928;
    if (!v78) {
      goto LABEL_106;
    }
  }
  sub_8ACA30(v185, 1, 0, (uint64_t)&v204);
  if (!sub_637DD8((long long **)&v204)) {
    *(unsigned char *)(a1 + 7801) = 1;
  }
  uint64_t v80 = (std::__shared_weak_count *)v209[2];
  if (v209[2] && !atomic_fetch_add((atomic_ullong *volatile)(v209[2] + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
    std::__shared_weak_count::__release_weak(v80);
  }
  long long v81 = (void *)v207;
  if ((void)v207)
  {
    do
    {
      uint64_t v82 = (void *)*v81;
      sub_4F4B48((uint64_t)(v81 + 2));
      operator delete(v81);
      long long v81 = v82;
    }
    while (v82);
  }
  uint64_t v83 = (void *)__p;
  *(void *)&long long __p = 0;
  if (v83) {
    operator delete(v83);
  }
  long long v84 = (void **)v204;
  if (v204)
  {
    uint64_t v85 = (void **)v205;
    unint64_t v86 = v204;
    if ((void *)v205 != v204)
    {
      do
      {
        if (*((char *)v85 - 1) < 0) {
          operator delete(*(v85 - 3));
        }
        v85 -= 3;
      }
      while (v85 != v84);
      unint64_t v86 = v204;
    }
    *(void *)&long long v205 = v84;
    operator delete(v86);
  }
LABEL_106:
  char v87 = *(unsigned char *)(a1 + 2179);
  if (v87)
  {
    char v87 = *v77;
    if (*v77) {
      char v87 = *(unsigned char *)(a1 + 7801) == 0;
    }
  }
  *(unsigned char *)(a1 + 7906) = v87;
  sub_849ADC(a1, (uint64_t)&v204);
  *(void *)(a1 + 5920) = v204;
  if (*(char *)(a1 + 5951) < 0) {
    operator delete(*(void **)v79);
  }
  *(_OWORD *)uint64_t v79 = v205;
  *(void *)(v79 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 5952) = *((void *)&__p + 1);
  long long v88 = (void **)(a1 + 5960);
  if (*(char *)(a1 + 5983) < 0) {
    operator delete(*v88);
  }
  *(_OWORD *)long long v88 = v207;
  *(void *)(a1 + 5976) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 5984) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 5992) = v209[0];
  uint64_t v89 = (void **)(a1 + 6000);
  if (*(char *)(a1 + 6023) < 0) {
    operator delete(*v89);
  }
  *(_OWORD *)uint64_t v89 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 6016) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  long long v90 = (void **)(a1 + 6024);
  if (*(char *)(a1 + 6047) < 0) {
    operator delete(*v90);
  }
  char v91 = 0;
  *(_OWORD *)long long v90 = v210;
  *(void *)(a1 + 6040) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 6048) = DWORD2(v211);
  uint64_t v92 = (void **)(a1 + 6056);
  if (*(char *)(a1 + 6079) < 0)
  {
    operator delete(*v92);
    char v91 = BYTE7(v211);
  }
  *(_OWORD *)uint64_t v92 = v212;
  *(void *)(a1 + 6072) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 6080) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 6096) = v213[3];
  if (v91 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_121:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_122;
      }
LABEL_176:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_123;
      }
LABEL_177:
      operator delete((void *)v205);
      goto LABEL_123;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_121;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_176;
  }
LABEL_122:
  if (SBYTE7(__p) < 0) {
    goto LABEL_177;
  }
LABEL_123:
  *(unsigned char *)(a1 + 6104) = sub_564868((void *)(a1 + 5920));
  if (*(unsigned char *)(a1 + 7906) || *(unsigned char *)(a1 + 7801))
  {
    uint64_t v93 = sub_62BBE4(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v94 = a1 + 5736;
  }
  else
  {
    uint64_t v93 = sub_62BB78(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v94 = a1 + 5736;
  }
  uint64_t v95 = *(void *)(a1 + 5192);
  if (v95 >= v93) {
    uint64_t v95 = v93;
  }
  v215[0] = v95;
  sub_63AD1C(v201, v215, 1, (uint64_t)&v204);
  *(void *)(a1 + 5728) = v204;
  if (*(char *)(a1 + 5759) < 0) {
    operator delete(*(void **)v94);
  }
  *(_OWORD *)uint64_t v94 = v205;
  *(void *)(v94 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 5760) = *((void *)&__p + 1);
  uint64_t v96 = (void **)(a1 + 5768);
  if (*(char *)(a1 + 5791) < 0) {
    operator delete(*v96);
  }
  *(_OWORD *)uint64_t v96 = v207;
  *(void *)(a1 + 5784) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 5792) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 5800) = v209[0];
  uint64_t v97 = (void **)(a1 + 5808);
  if (*(char *)(a1 + 5831) < 0) {
    operator delete(*v97);
  }
  *(_OWORD *)uint64_t v97 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 5824) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  char v98 = (void **)(a1 + 5832);
  if (*(char *)(a1 + 5855) < 0) {
    operator delete(*v98);
  }
  char v99 = 0;
  *(_OWORD *)char v98 = v210;
  *(void *)(a1 + 5848) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 5856) = DWORD2(v211);
  long long v100 = (void **)(a1 + 5864);
  if (*(char *)(a1 + 5887) < 0)
  {
    operator delete(*v100);
    char v99 = BYTE7(v211);
  }
  *(_OWORD *)long long v100 = v212;
  *(void *)(a1 + 5880) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 5888) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 5904) = v213[3];
  if (v99 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_140:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_141;
      }
LABEL_180:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_142;
      }
      goto LABEL_181;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_140;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_180;
  }
LABEL_141:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_142;
  }
LABEL_181:
  operator delete((void *)v205);
LABEL_142:
  *(unsigned char *)(a1 + 5912) = sub_564868((void *)(a1 + 5728));
  v215[0] = sub_62C62C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_63AF5C(v201, v215, (uint64_t)&v204);
  *(void *)(a1 + 6112) = v204;
  if (*(char *)(a1 + 6143) < 0) {
    operator delete(*v188);
  }
  *(_OWORD *)long long v188 = v205;
  *(void *)(a1 + 6136) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 6144) = *((void *)&__p + 1);
  uint64_t v101 = (void **)(a1 + 6152);
  if (*(char *)(a1 + 6175) < 0) {
    operator delete(*v101);
  }
  *(_OWORD *)uint64_t v101 = v207;
  *(void *)(a1 + 6168) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 6176) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 6184) = v209[0];
  unint64_t v102 = (void **)(a1 + 6192);
  if (*(char *)(a1 + 6215) < 0) {
    operator delete(*v102);
  }
  *(_OWORD *)unint64_t v102 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 6208) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  long long v103 = (void **)(a1 + 6216);
  if (*(char *)(a1 + 6239) < 0) {
    operator delete(*v103);
  }
  char v104 = 0;
  *(_OWORD *)long long v103 = v210;
  *(void *)(a1 + 6232) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 6240) = DWORD2(v211);
  uint64_t v105 = (void **)(a1 + 6248);
  if (*(char *)(a1 + 6271) < 0)
  {
    operator delete(*v105);
    char v104 = BYTE7(v211);
  }
  *(_OWORD *)uint64_t v105 = v212;
  *(void *)(a1 + 6264) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 6272) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 6288) = v213[3];
  if (v104 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_154:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_155;
      }
LABEL_184:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_156;
      }
      goto LABEL_185;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_154;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_184;
  }
LABEL_155:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_156;
  }
LABEL_185:
  operator delete((void *)v205);
LABEL_156:
  BOOL v106 = sub_564868(v199);
  *(unsigned char *)(a1 + 6296) = v106;
  if (v106)
  {
    uint64_t v107 = a1 + 6312;
    v215[0] = sub_62C62C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    sub_63AE58(v201, v215, v199, (uint64_t)&v204);
    *(void *)(a1 + 6304) = v204;
    if ((*(char *)(a1 + 6335) & 0x80000000) == 0) {
      goto LABEL_158;
    }
  }
  else
  {
    memset(v213, 0, sizeof(v213));
    long long v212 = 0u;
    long long v211 = 0u;
    long long v210 = 0u;
    memset(v209, 0, sizeof(v209));
    long long v208 = 0u;
    long long v207 = 0u;
    long long __p = 0u;
    long long v205 = 0u;
    long long v204 = (void *)0x7FFFFFFFFFFFFFFFLL;
    sub_6F30A4((uint64_t)&v205);
    uint64_t v107 = a1 + 6312;
    v213[1] = -1;
    v213[2] = -1;
    v213[3] = 0;
    *(void *)(a1 + 6304) = v204;
    if ((*(char *)(a1 + 6335) & 0x80000000) == 0) {
      goto LABEL_158;
    }
  }
  operator delete(*(void **)v107);
LABEL_158:
  *(_OWORD *)uint64_t v107 = v205;
  *(void *)(v107 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 6336) = *((void *)&__p + 1);
  uint64_t v108 = (void **)(a1 + 6344);
  if (*(char *)(a1 + 6367) < 0) {
    operator delete(*v108);
  }
  *(_OWORD *)uint64_t v108 = v207;
  *(void *)(a1 + 6360) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 6368) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 6376) = v209[0];
  long long v109 = (void **)(a1 + 6384);
  if (*(char *)(a1 + 6407) < 0) {
    operator delete(*v109);
  }
  *(_OWORD *)long long v109 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 6400) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  long long v110 = (void **)(a1 + 6408);
  if (*(char *)(a1 + 6431) < 0) {
    operator delete(*v110);
  }
  char v111 = 0;
  *(_OWORD *)long long v110 = v210;
  *(void *)(a1 + 6424) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 6432) = DWORD2(v211);
  uint64_t v112 = (void **)(a1 + 6440);
  if (*(char *)(a1 + 6463) < 0)
  {
    operator delete(*v112);
    char v111 = BYTE7(v211);
  }
  *(_OWORD *)uint64_t v112 = v212;
  *(void *)(a1 + 6456) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 6464) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 6480) = v213[3];
  if (v111 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_168:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_169;
      }
LABEL_188:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_170;
      }
      goto LABEL_189;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_168;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_188;
  }
LABEL_169:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_170;
  }
LABEL_189:
  operator delete((void *)v205);
LABEL_170:
  *(unsigned char *)(a1 + 6488) = sub_564868(v191);
  if (*(unsigned char *)(a1 + 7906))
  {
    uint64_t v113 = sub_62BC50(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v114 = a1 + 6504;
  }
  else
  {
    long long v115 = *(void **)(a1 + 2160);
    int v116 = *(_DWORD *)(a1 + 5188);
    uint64_t v114 = a1 + 6504;
    if (*(unsigned char *)(a1 + 7801)) {
      uint64_t v113 = sub_62BAA0(v115, v116);
    }
    else {
      uint64_t v113 = sub_62BB0C(v115, v116);
    }
  }
  uint64_t v117 = *(void *)(a1 + 5192);
  if (v117 >= v113) {
    uint64_t v117 = v113;
  }
  v215[0] = v117;
  sub_63AF5C(v201, v215, (uint64_t)&v204);
  *(void *)(a1 + 6496) = v204;
  if (*(char *)(a1 + 6527) < 0) {
    operator delete(*(void **)v114);
  }
  *(_OWORD *)uint64_t v114 = v205;
  *(void *)(v114 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 6528) = *((void *)&__p + 1);
  unint64_t v118 = (void **)(a1 + 6536);
  if (*(char *)(a1 + 6559) < 0) {
    operator delete(*v118);
  }
  *(_OWORD *)unint64_t v118 = v207;
  *(void *)(a1 + 6552) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 6560) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 6568) = v209[0];
  long long v119 = (void **)(a1 + 6576);
  if (*(char *)(a1 + 6599) < 0) {
    operator delete(*v119);
  }
  *(_OWORD *)long long v119 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 6592) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  long long v120 = (void **)(a1 + 6600);
  if (*(char *)(a1 + 6623) < 0) {
    operator delete(*v120);
  }
  char v121 = 0;
  *(_OWORD *)long long v120 = v210;
  *(void *)(a1 + 6616) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 6624) = DWORD2(v211);
  long long v122 = (void **)(a1 + 6632);
  if (*(char *)(a1 + 6655) < 0)
  {
    operator delete(*v122);
    char v121 = BYTE7(v211);
  }
  *(_OWORD *)long long v122 = v212;
  *(void *)(a1 + 6648) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 6656) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 6672) = v213[3];
  if (v121 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_208:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_209;
      }
LABEL_214:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_210;
      }
      goto LABEL_215;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_208;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_214;
  }
LABEL_209:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_210;
  }
LABEL_215:
  operator delete((void *)v205);
LABEL_210:
  *(unsigned char *)(a1 + 6680) = sub_564868((void *)(a1 + 6496));
  if (*(unsigned char *)(a1 + 7804))
  {
    memset(v213, 0, sizeof(v213));
    long long v212 = 0u;
    long long v211 = 0u;
    long long v210 = 0u;
    memset(v209, 0, sizeof(v209));
    long long v208 = 0u;
    long long v207 = 0u;
    long long __p = 0u;
    long long v205 = 0u;
    long long v204 = (void *)0x7FFFFFFFFFFFFFFFLL;
    sub_6F30A4((uint64_t)&v205);
    uint64_t v123 = a1 + 6696;
    v213[1] = -1;
    v213[2] = -1;
    v213[3] = 0;
  }
  else
  {
    uint64_t v124 = sub_62C8B4(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v123 = a1 + 6696;
    uint64_t v214 = 0;
    v215[0] = v124;
    sub_63AF84(v201, v215, &v214, (uint64_t)&v204);
  }
  *(void *)(a1 + 6688) = v204;
  if (*(char *)(a1 + 6719) < 0) {
    operator delete(*(void **)v123);
  }
  *(_OWORD *)uint64_t v123 = v205;
  *(void *)(v123 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 6720) = *((void *)&__p + 1);
  long long v125 = (void **)(a1 + 6728);
  if (*(char *)(a1 + 6751) < 0) {
    operator delete(*v125);
  }
  *(_OWORD *)long long v125 = v207;
  *(void *)(a1 + 6744) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 6752) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 6760) = v209[0];
  long long v126 = (void **)(a1 + 6768);
  if (*(char *)(a1 + 6791) < 0) {
    operator delete(*v126);
  }
  *(_OWORD *)long long v126 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 6784) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  long long v127 = (void **)(a1 + 6792);
  if (*(char *)(a1 + 6815) < 0) {
    operator delete(*v127);
  }
  char v128 = 0;
  *(_OWORD *)long long v127 = v210;
  *(void *)(a1 + 6808) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 6816) = DWORD2(v211);
  long long v129 = (void **)(a1 + 6824);
  if (*(char *)(a1 + 6847) < 0)
  {
    operator delete(*v129);
    char v128 = BYTE7(v211);
  }
  *(_OWORD *)long long v129 = v212;
  *(void *)(a1 + 6840) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 6848) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 6864) = v213[3];
  if (v128 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_229:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_230;
      }
LABEL_281:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_231;
      }
      goto LABEL_282;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_229;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_281;
  }
LABEL_230:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_231;
  }
LABEL_282:
  operator delete((void *)v205);
LABEL_231:
  BOOL v130 = sub_564868((void *)(a1 + 6688));
  *(unsigned char *)(a1 + 6872) = v130;
  if (v130)
  {
    v215[0] = *(void *)(a1 + 6688);
    uint64_t v131 = a1 + 6888;
    uint64_t v214 = sub_62C62C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v132 = sub_856CCC(*(void **)(a1 + 7968), *(void *)(a1 + 6856));
    sub_8564A0(a1, v132, &v214, v215, (uint64_t)&v204);
    *(void *)(a1 + 6880) = v204;
    if ((*(char *)(a1 + 6911) & 0x80000000) == 0) {
      goto LABEL_233;
    }
  }
  else
  {
    memset(v213, 0, sizeof(v213));
    long long v212 = 0u;
    long long v211 = 0u;
    long long v210 = 0u;
    memset(v209, 0, sizeof(v209));
    long long v208 = 0u;
    long long v207 = 0u;
    long long __p = 0u;
    long long v205 = 0u;
    long long v204 = (void *)0x7FFFFFFFFFFFFFFFLL;
    sub_6F30A4((uint64_t)&v205);
    uint64_t v131 = a1 + 6888;
    v213[1] = -1;
    v213[2] = -1;
    v213[3] = 0;
    *(void *)(a1 + 6880) = v204;
    if ((*(char *)(a1 + 6911) & 0x80000000) == 0) {
      goto LABEL_233;
    }
  }
  operator delete(*(void **)v131);
LABEL_233:
  *(_OWORD *)uint64_t v131 = v205;
  *(void *)(v131 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 6912) = *((void *)&__p + 1);
  uint64_t v133 = (void **)(a1 + 6920);
  if (*(char *)(a1 + 6943) < 0) {
    operator delete(*v133);
  }
  *(_OWORD *)uint64_t v133 = v207;
  *(void *)(a1 + 6936) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 6944) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 6952) = v209[0];
  unint64_t v134 = (void **)(a1 + 6960);
  if (*(char *)(a1 + 6983) < 0) {
    operator delete(*v134);
  }
  *(_OWORD *)unint64_t v134 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 6976) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  uint64_t v135 = (void **)(a1 + 6984);
  if (*(char *)(a1 + 7007) < 0) {
    operator delete(*v135);
  }
  char v136 = 0;
  *(_OWORD *)uint64_t v135 = v210;
  *(void *)(a1 + 7000) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 7008) = DWORD2(v211);
  unsigned long long v137 = (void **)(a1 + 7016);
  if (*(char *)(a1 + 7039) < 0)
  {
    operator delete(*v137);
    char v136 = BYTE7(v211);
  }
  *(_OWORD *)unsigned long long v137 = v212;
  *(void *)(a1 + 7032) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 7040) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 7056) = v213[3];
  if (v136 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_243:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_244;
      }
LABEL_285:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_245;
      }
      goto LABEL_286;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_243;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_285;
  }
LABEL_244:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_245;
  }
LABEL_286:
  operator delete((void *)v205);
LABEL_245:
  *(unsigned char *)(a1 + 7064) = sub_564868(v193);
  v215[0] = sub_62C9F8(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_63B130(v201, v215, (uint64_t)&v204);
  *(void *)(a1 + 7072) = v204;
  if (*(char *)(a1 + 7103) < 0) {
    operator delete(*v192);
  }
  *(_OWORD *)int v192 = v205;
  *(void *)(a1 + 7096) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 7104) = *((void *)&__p + 1);
  unint64_t v138 = (void **)(a1 + 7112);
  if (*(char *)(a1 + 7135) < 0) {
    operator delete(*v138);
  }
  *(_OWORD *)unint64_t v138 = v207;
  *(void *)(a1 + 7128) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 7136) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 7144) = v209[0];
  long long v139 = (void **)(a1 + 7152);
  if (*(char *)(a1 + 7175) < 0) {
    operator delete(*v139);
  }
  *(_OWORD *)long long v139 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 7168) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  long long v140 = (void **)(a1 + 7176);
  if (*(char *)(a1 + 7199) < 0) {
    operator delete(*v140);
  }
  char v141 = 0;
  *(_OWORD *)long long v140 = v210;
  *(void *)(a1 + 7192) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 7200) = DWORD2(v211);
  long long v142 = (void **)(a1 + 7208);
  if (*(char *)(a1 + 7231) < 0)
  {
    operator delete(*v142);
    char v141 = BYTE7(v211);
  }
  *(_OWORD *)long long v142 = v212;
  *(void *)(a1 + 7224) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 7232) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 7248) = v213[3];
  if (v141 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_257:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_258;
      }
LABEL_289:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_259;
      }
      goto LABEL_290;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_257;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_289;
  }
LABEL_258:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_259;
  }
LABEL_290:
  operator delete((void *)v205);
LABEL_259:
  if (sub_564868(v196))
  {
    v215[0] = sub_62C98C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    sub_63B05C(v201, v215, v196, (uint64_t)&v204);
    *(void *)(a1 + 7256) = v204;
    if ((*(char *)(a1 + 7287) & 0x80000000) == 0) {
      goto LABEL_261;
    }
  }
  else
  {
    memset(v213, 0, sizeof(v213));
    long long v212 = 0u;
    long long v211 = 0u;
    long long v210 = 0u;
    memset(v209, 0, sizeof(v209));
    long long v208 = 0u;
    long long v207 = 0u;
    long long __p = 0u;
    long long v205 = 0u;
    long long v204 = (void *)0x7FFFFFFFFFFFFFFFLL;
    sub_6F30A4((uint64_t)&v205);
    v213[1] = -1;
    v213[2] = -1;
    v213[3] = 0;
    *(void *)(a1 + 7256) = v204;
    if ((*(char *)(a1 + 7287) & 0x80000000) == 0) {
      goto LABEL_261;
    }
  }
  operator delete(*v186);
LABEL_261:
  *(_OWORD *)long long v186 = v205;
  *(void *)(a1 + 7280) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 7288) = *((void *)&__p + 1);
  long long v143 = (void **)(a1 + 7296);
  if (*(char *)(a1 + 7319) < 0) {
    operator delete(*v143);
  }
  *(_OWORD *)long long v143 = v207;
  *(void *)(a1 + 7312) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 7320) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 7328) = v209[0];
  uint64_t v144 = (void **)(a1 + 7336);
  if (*(char *)(a1 + 7359) < 0) {
    operator delete(*v144);
  }
  *(_OWORD *)uint64_t v144 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 7352) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  uint64_t v145 = (void **)(a1 + 7360);
  if (*(char *)(a1 + 7383) < 0) {
    operator delete(*v145);
  }
  char v146 = 0;
  *(_OWORD *)uint64_t v145 = v210;
  *(void *)(a1 + 7376) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 7384) = DWORD2(v211);
  long long v147 = (void **)(a1 + 7392);
  if (*(char *)(a1 + 7415) < 0)
  {
    operator delete(*v147);
    char v146 = BYTE7(v211);
  }
  *(_OWORD *)long long v147 = v212;
  *(void *)(a1 + 7408) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 7416) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 7432) = v213[3];
  if (v146 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_271:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_272;
      }
      goto LABEL_293;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_271;
  }
  operator delete((void *)v209[1]);
  if ((SBYTE7(v208) & 0x80000000) == 0)
  {
LABEL_272:
    if ((SBYTE7(__p) & 0x80000000) == 0) {
      goto LABEL_273;
    }
    goto LABEL_294;
  }
LABEL_293:
  operator delete((void *)v207);
  if ((SBYTE7(__p) & 0x80000000) == 0)
  {
LABEL_273:
    uint64_t v148 = *(void *)(a1 + 2160);
    if (!*(unsigned char *)(v148 + 1968)) {
      goto LABEL_296;
    }
    goto LABEL_295;
  }
LABEL_294:
  operator delete((void *)v205);
  uint64_t v148 = *(void *)(a1 + 2160);
  if (!*(unsigned char *)(v148 + 1968)) {
    goto LABEL_296;
  }
LABEL_295:
  if (*(_DWORD *)(a1 + 2144) == 3) {
    goto LABEL_299;
  }
LABEL_296:
  int v149 = *(unsigned __int8 *)(v148 + 1970);
  if (!v149) {
    goto LABEL_300;
  }
  if (*(unsigned char *)(a1 + 5186) || *v14) {
    goto LABEL_299;
  }
  LOBYTE(v149) = *(unsigned char *)(a1 + 7804);
  if ((_BYTE)v149)
  {
    if (sub_63A8F8((uint64_t)v198))
    {
      int v149 = *(unsigned __int8 *)(a1 + 7841);
LABEL_390:
      LOBYTE(v149) = v149 != 0;
      goto LABEL_300;
    }
    if (sub_63A908((uint64_t)v198))
    {
      int v149 = *(unsigned __int8 *)(a1 + 7842);
      goto LABEL_390;
    }
LABEL_299:
    LOBYTE(v149) = 0;
  }
LABEL_300:
  *(unsigned char *)(a1 + 7909) = v149;
  *(unsigned char *)(a1 + 7912) = sub_8597EC(a1);
  BOOL v150 = sub_849DD0(a1);
  *(unsigned char *)(a1 + 7911) = v150;
  if (v150)
  {
    uint64_t v151 = *(void *)(a1 + 6112) + sub_62C410(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    if (v151 >= *(void *)(a1 + 5192)) {
      uint64_t v151 = *(void *)(a1 + 5192);
    }
    if (*(unsigned char *)(a1 + 6488) && *v191 < v151) {
      uint64_t v151 = *v191;
    }
    *(void *)(a1 + 7888) = v151;
  }
  uint64_t v152 = sub_62C47C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  long long v153 = (uint64_t *)(a1 + 6112);
  if (*(unsigned char *)(a1 + 7911) || (long long v153 = (uint64_t *)(a1 + 6688), *(unsigned char *)(a1 + 7912)))
  {
    *(unsigned char *)(a1 + 7915) = *v153 < v152;
    char v154 = *(unsigned char *)(a1 + 7805);
    uint64_t v155 = a1 + 5352;
    if (!v154) {
      goto LABEL_313;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 7915) = 0;
    char v154 = *(unsigned char *)(a1 + 7805);
    uint64_t v155 = a1 + 5352;
    if (!v154) {
      goto LABEL_313;
    }
  }
  if (*(unsigned char *)(a1 + 7804) || *(unsigned char *)(a1 + 7912))
  {
    char v154 = 0;
  }
  else
  {
    if (sub_564868(v196))
    {
      BOOL v181 = sub_564868((void *)(a1 + 7256));
      uint64_t v182 = 5192;
      if (v181) {
        uint64_t v182 = 7256;
      }
      uint64_t v183 = *(void *)(a1 + v182);
      char v154 = v183 >= *v196 + sub_62C4E8(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    }
    else
    {
      char v154 = 0;
    }
    uint64_t v155 = a1 + 5352;
  }
LABEL_313:
  *(unsigned char *)(a1 + 7913) = v154;
  sub_8599D4(a1, (uint64_t)&v204);
  *(void *)(a1 + 5344) = v204;
  if (*(char *)(a1 + 5375) < 0) {
    operator delete(*(void **)v155);
  }
  *(_OWORD *)uint64_t v155 = v205;
  *(void *)(v155 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 5376) = *((void *)&__p + 1);
  unint64_t v156 = (void **)(a1 + 5384);
  if (*(char *)(a1 + 5407) < 0) {
    operator delete(*v156);
  }
  *(_OWORD *)unint64_t v156 = v207;
  *(void *)(a1 + 5400) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 5408) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 5416) = v209[0];
  uint64_t v157 = (void **)(a1 + 5424);
  if (*(char *)(a1 + 5447) < 0) {
    operator delete(*v157);
  }
  *(_OWORD *)uint64_t v157 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 5440) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  uint64_t v158 = (void **)(a1 + 5448);
  if (*(char *)(a1 + 5471) < 0) {
    operator delete(*v158);
  }
  char v159 = 0;
  *(_OWORD *)uint64_t v158 = v210;
  *(void *)(a1 + 5464) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 5472) = DWORD2(v211);
  int v160 = (void **)(a1 + 5480);
  if (*(char *)(a1 + 5503) < 0)
  {
    operator delete(*v160);
    char v159 = BYTE7(v211);
  }
  *(_OWORD *)int v160 = v212;
  *(void *)(a1 + 5496) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 5504) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 5520) = v213[3];
  if (v159 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_325:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_326;
      }
LABEL_362:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_327;
      }
      goto LABEL_363;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_325;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_362;
  }
LABEL_326:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_327;
  }
LABEL_363:
  operator delete((void *)v205);
LABEL_327:
  BOOL v161 = sub_564868(v194);
  *(unsigned char *)(a1 + 5528) = v161;
  if (v161)
  {
    uint64_t v162 = a1 + 5544;
    v215[0] = sub_62C920(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    sub_63AD48(v201, v215, v194, 1, (uint64_t)&v204);
    *(void *)(a1 + 5536) = v204;
    if ((*(char *)(a1 + 5567) & 0x80000000) == 0) {
      goto LABEL_329;
    }
  }
  else
  {
    memset(v213, 0, sizeof(v213));
    long long v212 = 0u;
    long long v211 = 0u;
    long long v210 = 0u;
    memset(v209, 0, sizeof(v209));
    long long v208 = 0u;
    long long v207 = 0u;
    long long __p = 0u;
    long long v205 = 0u;
    long long v204 = (void *)0x7FFFFFFFFFFFFFFFLL;
    sub_6F30A4((uint64_t)&v205);
    uint64_t v162 = a1 + 5544;
    v213[1] = -1;
    v213[2] = -1;
    v213[3] = 0;
    *(void *)(a1 + 5536) = v204;
    if ((*(char *)(a1 + 5567) & 0x80000000) == 0) {
      goto LABEL_329;
    }
  }
  operator delete(*(void **)v162);
LABEL_329:
  *(_OWORD *)uint64_t v162 = v205;
  *(void *)(v162 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 5568) = *((void *)&__p + 1);
  long long v163 = (void **)(a1 + 5576);
  if (*(char *)(a1 + 5599) < 0) {
    operator delete(*v163);
  }
  *(_OWORD *)long long v163 = v207;
  *(void *)(a1 + 5592) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 5600) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 5608) = v209[0];
  long long v164 = (void **)(a1 + 5616);
  if (*(char *)(a1 + 5639) < 0) {
    operator delete(*v164);
  }
  *(_OWORD *)long long v164 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 5632) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  long long v165 = (void **)(a1 + 5640);
  if (*(char *)(a1 + 5663) < 0) {
    operator delete(*v165);
  }
  char v166 = 0;
  *(_OWORD *)long long v165 = v210;
  *(void *)(a1 + 5656) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 5664) = DWORD2(v211);
  long long v167 = (void **)(a1 + 5672);
  if (*(char *)(a1 + 5695) < 0)
  {
    operator delete(*v167);
    char v166 = BYTE7(v211);
  }
  *(_OWORD *)long long v167 = v212;
  *(void *)(a1 + 5688) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 5696) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 5712) = v213[3];
  if (v166 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_339:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_340;
      }
LABEL_366:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_341;
      }
      goto LABEL_367;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_339;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_366;
  }
LABEL_340:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_341;
  }
LABEL_367:
  operator delete((void *)v205);
LABEL_341:
  *(unsigned char *)(a1 + 5720) = sub_564868((void *)(a1 + 5536));
  *(unsigned char *)(a1 + 7908) = sub_859B2C(a1);
  *(void *)(a1 + 7864) = sub_84A1A4(a1);
  *(void *)(a1 + 7872) = sub_859C94(a1);
  if (*(unsigned char *)(a1 + 7912))
  {
    uint64_t v168 = *(void *)(a1 + 6688) + sub_62C410(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    if (*(void *)(a1 + 5192) < v168) {
      uint64_t v168 = *(void *)(a1 + 5192);
    }
    if (*(unsigned char *)(a1 + 7064) && *v193 < v168) {
      uint64_t v168 = *v193;
    }
    *(void *)(a1 + 7896) = v168;
  }
  BOOL v169 = sub_84A5C8(a1);
  *(unsigned char *)(a1 + 7910) = v169;
  if (v169)
  {
    uint64_t v170 = sub_62C62C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v171 = *(void *)(a1 + 5192);
    if (v171 >= v170) {
      uint64_t v171 = v170;
    }
    if (*(unsigned char *)(a1 + 6296)) {
      uint64_t v171 = *v199;
    }
    *(void *)(a1 + 7880) = v171;
  }
  uint64_t v172 = sub_62BD28(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v173 = sub_62BCBC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (*(unsigned char *)(a1 + 7906) && *v184 != 0x7FFFFFFFFFFFFFFFLL)
  {
    char v174 = *v184 > v173 + v172;
  }
  else if (*(unsigned char *)(a1 + 7912))
  {
    char v174 = 1;
  }
  else
  {
    char v174 = *(unsigned char *)(a1 + 7915);
    if (v174) {
      char v174 = *(unsigned char *)(a1 + 7911) != 0;
    }
  }
  *(unsigned char *)(a1 + 7907) = v174;
  if (*(unsigned char *)(a1 + 7984))
  {
    BOOL v175 = 0;
  }
  else if (*(unsigned char *)(a1 + 2179))
  {
    BOOL v175 = sub_8569A8(a1);
  }
  else
  {
    BOOL v175 = sub_856AC0(a1);
  }
  *(unsigned char *)(a1 + 7904) = v175;
  *(unsigned char *)(a1 + 7905) = sub_84A704(a1);
  *(unsigned char *)(a1 + 2181) = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
  *(unsigned char *)(a1 + 7914) = sub_84A8A4(a1, v200, v202);
  *(unsigned char *)(a1 + 2182) = (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))a1)(a1, v200, v202);
  sub_84AA34(a1);
  uint64_t v176 = sub_64EFB8(v200);
  uint64_t v177 = *(void *)v176;
  *(_DWORD *)(a1 + 7928) = *(_DWORD *)(v176 + 8);
  *(void *)(a1 + 7920) = v177;
  uint64_t v178 = sub_64EFC4(v200);
  uint64_t v179 = *(void *)v178;
  *(_DWORD *)(a1 + 7940) = *(_DWORD *)(v178 + 8);
  *(void *)(a1 + 7932) = v179;
  return a1;
}

void sub_859604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void **a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void **a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t *a45,uint64_t a46,void **a47)
{
  v47[976] = off_2438EC8;
  if (*(char *)(v48 + 2655) < 0) {
    operator delete(*a28);
  }
  sub_576848(a30);
  sub_592364(a39);
  sub_7D0A58(a11);
  sub_7D0A58(a40);
  sub_7D0A58(a37);
  sub_7D0A58(a36);
  sub_7D0A58(a29);
  sub_7D0A58(a34);
  sub_7D0A58(a43);
  sub_7D0A58(a32);
  sub_7D0A58(a31);
  sub_7D0A58(a27);
  sub_7D0A58(a38);
  sub_59230C(a45);
  uint64_t v50 = *a47;
  if (*a47)
  {
    v47[645] = v50;
    operator delete(v50);
  }
  sub_7C67EC(a14);
  void *v47 = &off_2439CA8;
  sub_531E24((uint64_t)(v47 + 1));
  _Unwind_Resume(a1);
}

BOOL sub_8597EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 2160);
  if (*(unsigned char *)(v2 + 1968) && *(_DWORD *)(a1 + 2144) == 3) {
    return 0;
  }
  if (!*(unsigned char *)(v2 + 1970) || *(unsigned char *)(a1 + 5186) || *(unsigned char *)(a1 + 5184) || !sub_63ACB4(a1 + 6688)) {
    return 0;
  }
  uint64_t v5 = sub_856CCC(*(void **)(a1 + 7968), *(void *)(a1 + 6856));
  if (sub_63A8F8(v5))
  {
    if (!*(unsigned char *)(a1 + 7847)) {
      return 0;
    }
  }
  else if (!sub_63A908(v5) || !*(unsigned char *)(a1 + 7848))
  {
    return 0;
  }
  if (*(unsigned char *)(a1 + 7804) || !*(unsigned char *)(a1 + 6872)) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 6688);
  uint64_t v20 = v6;
  uint64_t v7 = 6880;
  if (!*(unsigned char *)(a1 + 7064)) {
    uint64_t v7 = 5192;
  }
  uint64_t v8 = *(void *)(a1 + v7);
  if (v8 < v6 + sub_62C47C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188))) {
    return 0;
  }
  sub_63AD1C((uint64_t **)(a1 + 5200), &v20, 1, (uint64_t)v10);
  BOOL v9 = sub_564868(v10);
  if (v19 < 0)
  {
    operator delete(__p);
    if ((v17 & 0x80000000) == 0)
    {
LABEL_22:
      if ((v15 & 0x80000000) == 0) {
        goto LABEL_23;
      }
      goto LABEL_28;
    }
  }
  else if ((v17 & 0x80000000) == 0)
  {
    goto LABEL_22;
  }
  operator delete(v16);
  if ((v15 & 0x80000000) == 0)
  {
LABEL_23:
    if ((v13 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_29;
  }
LABEL_28:
  operator delete(v14);
  if ((v13 & 0x80000000) == 0)
  {
LABEL_24:
    BOOL v3 = !v9;
    if ((v11 & 0x80000000) == 0) {
      return v3;
    }
    goto LABEL_30;
  }
LABEL_29:
  operator delete(v12);
  BOOL v3 = !v9;
  if ((v11 & 0x80000000) == 0) {
    return v3;
  }
LABEL_30:
  operator delete(v10[1]);
  return v3;
}

void sub_8599C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_8599D4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = sub_62C704(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188), 1);
  sub_63AD1C((uint64_t **)(a1 + 5200), &v18, 1, (uint64_t)&v5);
  uint64_t v4 = sub_62C704(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188), 0);
  if (BYTE4(v17))
  {
    *(void *)a2 = v5;
    sub_4AA8E0((char *)(a2 + 8), &v6);
    *(_OWORD *)(a2 + 160) = v16;
    *(void *)(a2 + 176) = v17;
  }
  else
  {
    sub_63AD1C((uint64_t **)(a1 + 5200), &v4, 1, a2);
  }
  if (v15 < 0)
  {
    operator delete(__p);
    if ((v13 & 0x80000000) == 0)
    {
LABEL_6:
      if ((v11 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
  }
  else if ((v13 & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  operator delete(v12);
  if ((v11 & 0x80000000) == 0)
  {
LABEL_7:
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(v10);
  if ((v9 & 0x80000000) == 0)
  {
LABEL_8:
    if ((v7 & 0x80000000) == 0) {
      return;
    }
LABEL_14:
    operator delete((void *)v6);
    return;
  }
LABEL_13:
  operator delete(v8);
  if (v7 < 0) {
    goto LABEL_14;
  }
}

void sub_859B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_7D0A58((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_859B2C(uint64_t a1)
{
  uint64_t v1 = (unsigned char *)(a1 + 5184);
  if (!*(unsigned char *)(a1 + 7806) || !*(unsigned char *)(a1 + 2179) || *v1) {
    return 0;
  }
  BOOL v3 = *(unsigned char *)(a1 + 5186) || *(_DWORD *)(a1 + 2144) == 3;
  if (v3
    || *(unsigned char *)(a1 + 7804)
    || *(unsigned char *)(a1 + 7913)
    || *(unsigned char *)(a1 + 7912)
    || !*(unsigned char *)(a1 + 5528)
    || !*(unsigned char *)(a1 + 5521) && !*(unsigned char *)(a1 + 5524))
  {
    return 0;
  }
  uint64_t v5 = (void *)(a1 + 5344);
  if (!sub_63ACAC(a1 + 5344) && !v1[340] && !v1[341]) {
    return 0;
  }
  sub_63AD1C((uint64_t **)(a1 + 5200), (uint64_t *)(a1 + 5344), 0, (uint64_t)v9);
  if (sub_564868(v9))
  {
    BOOL v6 = 0;
  }
  else
  {
    uint64_t v7 = 5536;
    if (!v1[536]) {
      uint64_t v7 = 5192;
    }
    uint64_t v8 = *(void *)(a1 + v7);
    BOOL v6 = v8 >= *v5 + sub_62C4E8(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  }
  sub_7D0A58((uint64_t)v9);
  return v6;
}

void sub_859C6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_7D0A58((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_859C80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_7D0A58((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_859C94(uint64_t a1)
{
  switch(*(unsigned char *)(a1 + 2178))
  {
    case 0:
      return sub_864870(a1);
    case 1:
    case 2:
    case 4:
      uint64_t v1 = *(void *)(a1 + 2160);
      int v2 = *(_DWORD *)(v1 + 164);
      int v3 = v2 / 10;
      int v4 = v2 % 10;
      if (v2 < 0) {
        char v5 = -5;
      }
      else {
        char v5 = 5;
      }
      double v6 = *(double *)(v1 + 2008)
         / 3.6
         * (double)(int)(v3 + (((103 * (char)(v5 + v4)) >> 15) & 1) + ((103 * (char)(v5 + v4)) >> 10))
         * 100.0;
      if (v6 >= 0.0)
      {
        double v7 = *(double *)(v1 + 2008)
           / 3.6
           * (double)(int)(v3 + (((103 * (char)(v5 + v4)) >> 15) & 1) + ((103 * (char)(v5 + v4)) >> 10))
           * 100.0;
        if (v6 >= 4.50359963e15) {
          goto LABEL_13;
        }
        uint64_t v8 = (uint64_t)(v6 + v6) + 1;
      }
      else
      {
        double v7 = *(double *)(v1 + 2008)
           / 3.6
           * (double)(int)(v3 + (((103 * (char)(v5 + v4)) >> 15) & 1) + ((103 * (char)(v5 + v4)) >> 10))
           * 100.0;
        if (v6 <= -4.50359963e15) {
          goto LABEL_13;
        }
        uint64_t v8 = (uint64_t)(v6 + v6);
        if (v8 >= 1) {
          --v8;
        }
      }
      double v7 = (double)(v8 >> 1);
LABEL_13:
      if (v7 >= 9.22337204e18) {
        goto LABEL_39;
      }
      goto LABEL_14;
    case 3:
      return sub_864418(a1);
    default:
      uint64_t v11 = *(void *)(a1 + 2160);
      int v12 = *(_DWORD *)(v11 + 164);
      int v13 = v12 / 10;
      int v14 = v12 % 10;
      if (v12 < 0) {
        char v15 = -5;
      }
      else {
        char v15 = 5;
      }
      double v6 = *(double *)(v11 + 2008)
         / 3.6
         * (double)(int)(v13 + (((103 * (char)(v15 + v14)) >> 15) & 1) + ((103 * (char)(v15 + v14)) >> 10))
         * 100.0;
      if (v6 >= 0.0)
      {
        double v16 = *(double *)(v11 + 2008)
            / 3.6
            * (double)(int)(v13
                          + (((103 * (char)(v15 + v14)) >> 15) & 1)
                          + ((103 * (char)(v15 + v14)) >> 10))
            * 100.0;
        if (v6 >= 4.50359963e15) {
          goto LABEL_38;
        }
        uint64_t v17 = (uint64_t)(v6 + v6) + 1;
      }
      else
      {
        double v16 = *(double *)(v11 + 2008)
            / 3.6
            * (double)(int)(v13
                          + (((103 * (char)(v15 + v14)) >> 15) & 1)
                          + ((103 * (char)(v15 + v14)) >> 10))
            * 100.0;
        if (v6 <= -4.50359963e15) {
          goto LABEL_38;
        }
        uint64_t v17 = (uint64_t)(v6 + v6);
        if (v17 >= 1) {
          --v17;
        }
      }
      double v16 = (double)(v17 >> 1);
LABEL_38:
      if (v16 < 9.22337204e18)
      {
LABEL_14:
        if (v6 >= 0.0)
        {
          if (v6 >= 4.50359963e15) {
            goto LABEL_24;
          }
          uint64_t v9 = (uint64_t)(v6 + v6) + 1;
        }
        else
        {
          if (v6 <= -4.50359963e15) {
            goto LABEL_24;
          }
          uint64_t v9 = (uint64_t)(v6 + v6);
          if (v9 >= 1) {
            --v9;
          }
        }
        double v6 = (double)(v9 >> 1);
LABEL_24:
        if ((uint64_t)v6 >= *(void *)(a1 + 5192)) {
          return *(void *)(a1 + 5192);
        }
        else {
          return (uint64_t)v6;
        }
      }
LABEL_39:
      if (*(void *)(a1 + 5192) == 0x7FFFFFFFFFFFFFFFLL) {
        return 0x7FFFFFFFFFFFFFFELL;
      }
      else {
        return *(void *)(a1 + 5192);
      }
  }
}

uint64_t sub_859F14(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6)
{
  return sub_856F0C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_859F1C()
{
  uint64_t v0 = __chkstk_darwin();
  if (!*(unsigned char *)(v0 + 7914) || !*(unsigned char *)(v0 + 2182)) {
    return 0;
  }
  uint64_t v3 = v1;
  int v4 = *(unsigned char **)(v0 + 2160);
  if (!v4[1877]) {
    return 1;
  }
  sub_856F0C((uint64_t)v7, v4, *(void *)(v0 + 2168), v3, v2 + 1, *(_DWORD *)(v0 + 7988) - 1);
  BOOL v5 = !v7[7912] && !v7[7911] && !v7[7908] && v7[7913] == 0;
  sub_7C6154((uint64_t)v7);
  return v5;
}

void sub_85A048(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  if (a1[2180])
  {
    (*(void (**)(void **__return_ptr, unsigned char *))(*(void *)a1 + 32))(&v31, a1);
    unint64_t v4 = *(void *)(a2 + 8);
    if (v4 >= *(void *)(a2 + 16))
    {
      double v6 = sub_7576B4((void **)a2, (uint64_t)&v31);
    }
    else
    {
      sub_7574DC(v4, (uint64_t)&v31);
      double v6 = (void *)(v5 + 1080);
    }
    *(void *)(a2 + 8) = v6;
    sub_52F1E8((uint64_t)&v31);
  }
  if (a1[2181])
  {
    sub_85A42C((uint64_t)a1, (uint64_t *)&v31);
    uint64_t v7 = (uint64_t)v31;
    uint64_t v8 = v32;
    if (v31 != v32)
    {
      uint64_t v9 = *(void **)(a2 + 8);
      do
      {
        if ((unint64_t)v9 < *(void *)(a2 + 16))
        {
          sub_7574DC((uint64_t)v9, v7);
          uint64_t v9 = (void *)(v10 + 1080);
        }
        else
        {
          uint64_t v9 = sub_7576B4((void **)a2, v7);
        }
        *(void *)(a2 + 8) = v9;
        v7 += 1080;
      }
      while ((void *)v7 != v8);
      uint64_t v7 = (uint64_t)v31;
    }
    if (v7)
    {
      uint64_t v11 = v32;
      int v12 = (void *)v7;
      if (v32 != (void *)v7)
      {
        do
          uint64_t v11 = sub_52F1E8((uint64_t)(v11 - 135));
        while (v11 != (void *)v7);
        int v12 = v31;
      }
      long long v32 = (void *)v7;
      operator delete(v12);
    }
  }
  (*(void (**)(void **__return_ptr, unsigned char *))(*(void *)a1 + 40))(&v31, a1);
  unint64_t v13 = *(void *)(a2 + 8);
  if (v13 >= *(void *)(a2 + 16))
  {
    char v15 = sub_7576B4((void **)a2, (uint64_t)&v31);
  }
  else
  {
    sub_7574DC(v13, (uint64_t)&v31);
    char v15 = (void *)(v14 + 1080);
  }
  *(void *)(a2 + 8) = v15;
  sub_52F1E8((uint64_t)&v31);
  if (a1[7908])
  {
    sub_85A784((uint64_t)a1, (uint64_t)&v31);
    unint64_t v16 = *(void *)(a2 + 8);
    if (v16 >= *(void *)(a2 + 16))
    {
      uint64_t v18 = sub_7576B4((void **)a2, (uint64_t)&v31);
    }
    else
    {
      sub_7574DC(v16, (uint64_t)&v31);
      uint64_t v18 = (void *)(v17 + 1080);
    }
    *(void *)(a2 + 8) = v18;
    sub_52F1E8((uint64_t)&v31);
  }
  sub_85AB00((uint64_t)a1, (uint64_t *)&__p);
  char v19 = (char *)__p;
  uint64_t v20 = v30;
  if (__p != v30)
  {
    unsigned int v21 = *(void **)(a2 + 8);
    do
    {
      if ((unint64_t)v21 < *(void *)(a2 + 16))
      {
        sub_7574DC((uint64_t)v21, (uint64_t)v19);
        unsigned int v21 = (void *)(v22 + 1080);
      }
      else
      {
        unsigned int v21 = sub_7576B4((void **)a2, (uint64_t)v19);
      }
      *(void *)(a2 + 8) = v21;
      v19 += 1080;
    }
    while (v19 != v20);
  }
  sub_85AF04((uint64_t)a1, (unint64_t *)a2);
  sub_7E8B48((uint64_t)a1, (uint64_t)&v31);
  unint64_t v23 = *(void *)(a2 + 8);
  if (v23 >= *(void *)(a2 + 16))
  {
    char v25 = sub_7576B4((void **)a2, (uint64_t)&v31);
  }
  else
  {
    sub_7574DC(v23, (uint64_t)&v31);
    char v25 = (void *)(v24 + 1080);
  }
  *(void *)(a2 + 8) = v25;
  sub_52F1E8((uint64_t)&v31);
  BOOL v26 = (char *)__p;
  if (__p)
  {
    unint64_t v27 = v30;
    uint64_t v28 = __p;
    if (v30 != __p)
    {
      do
        unint64_t v27 = (char *)sub_52F1E8((uint64_t)(v27 - 1080));
      while (v27 != v26);
      uint64_t v28 = __p;
    }
    uint64_t v30 = v26;
    operator delete(v28);
  }
}

void sub_85A340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_52F1E8((uint64_t)va);
  sub_591E78(v5);
  _Unwind_Resume(a1);
}

void sub_85A388(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_85A39C(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_85A3B0(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_85A3C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_591E78((void **)va);
  sub_591E78(v2);
  _Unwind_Resume(a1);
}

void sub_85A42C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v3 = *(unsigned __int8 *)(a1 + 2181);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  if (v3)
  {
    uint64_t v5 = *(uint64_t **)(a1 + 5152);
    double v6 = *(uint64_t **)(a1 + 5160);
    if (v5 != v6)
    {
      while (1)
      {
        uint64_t v7 = *v5;
        if (*v5 == 0x7FFFFFFFFFFFFFFFLL || v7 > *(void *)(a1 + 2152)) {
          break;
        }
        uint64_t v8 = *(unsigned char *)(a1 + 2176) ? 128 : 136;
        if (v7 < *(void *)(*(void *)(a1 + 2160) + v8)) {
          break;
        }
        if (++v5 == v6)
        {
          uint64_t v9 = 5144;
          if (!*(unsigned char *)(a1 + 2180)) {
            uint64_t v9 = 2152;
          }
          uint64_t v26 = *(void *)(a1 + v9);
          sub_8A1FC0(a1 + 2200, (uint64_t)&v23);
          uint64_t v10 = v24;
          if (v24 != v23)
          {
            uint64_t v11 = 0;
            uint64_t v12 = 0;
            uint64_t v13 = ((char *)v24 - (char *)v23) / 72;
            do
            {
              sub_7C4620((uint64_t)v27, (uint64_t)&v23[v12], *(unsigned __int8 *)(*(void *)(a1 + 2160) + 418), 3, (void *)(a1 + 5176));
              sub_63841C((uint64_t)v27, 4);
              sub_638408((uint64_t)v27, &v26, (void *)(*(void *)(a1 + 5152) + v11));
              sub_5F3D48((uint64_t)v22, (uint64_t)&qword_25CA580);
              char v21 = 1;
              sub_5F6090(v22, (uint64_t)&qword_25CA580, &v26, &v21);
              sub_638E74((uint64_t)v27, (uint64_t)v22);
              unint64_t v15 = a2[1];
              if (v15 >= a2[2])
              {
                uint64_t v14 = sub_7572F4(a2, (uint64_t)v27);
              }
              else
              {
                sub_599644(a2[1], (uint64_t)v27);
                uint64_t v14 = v15 + 1080;
                a2[1] = v15 + 1080;
              }
              a2[1] = v14;
              uint64_t v26 = *(void *)(*(void *)(a1 + 5152) + v11);
              sub_4D4B58((uint64_t)v22);
              sub_52F1E8((uint64_t)v27);
              v12 += 9;
              v11 += 8;
              --v13;
            }
            while (v13);
            uint64_t v10 = v23;
          }
          if (v10)
          {
            char v19 = v24;
            uint64_t v20 = v10;
            if (v24 != v10)
            {
              do
              {
                v19 -= 9;
                sub_8728F4((uint64_t)&v25, v19);
              }
              while (v19 != v10);
              uint64_t v20 = v23;
            }
            uint64_t v24 = v10;
            operator delete(v20);
          }
          return;
        }
      }
    }
    sub_85E924(a1, (uint64_t)v27);
    unint64_t v16 = a2[1];
    if (v16 >= a2[2])
    {
      uint64_t v18 = sub_7576B4((void **)a2, (uint64_t)v27);
    }
    else
    {
      sub_7574DC(v16, (uint64_t)v27);
      uint64_t v18 = (void *)(v17 + 1080);
    }
    a2[1] = (uint64_t)v18;
    sub_52F1E8((uint64_t)v27);
  }
}

void sub_85A6DC(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_85A6F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  sub_52F1E8((uint64_t)&a34);
  sub_591E78(v34);
  _Unwind_Resume(a1);
}

void sub_85A70C(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_85A720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void **a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  *(void *)(v34 + 8) = v35;
  sub_4D4B58((uint64_t)&a10);
  sub_52F1E8((uint64_t)&a34);
  sub_84F7EC(&a30);
  sub_591E78((void **)v34);
  _Unwind_Resume(a1);
}

void sub_85A784(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_8A2D14((_DWORD *)(a1 + 2200), a1 + 5344, (uint64_t)&v17);
  sub_7C47A4(a2, (uint64_t)&v17);
  uint64_t v4 = nullsub_1(&v17);
  sub_638D90(a2, v4);
  sub_7C43E4(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 418));
  v16[0] = 0;
  sub_638408(a2, (void *)(a1 + 5344), v16);
  uint64_t v5 = (unsigned char *)(a1 + 5524);
  int v6 = 8;
  switch(*(_DWORD *)(a1 + 2144))
  {
    case 2:
    case 0x15:
    case 0x1C:
    case 0x1E:
    case 0x22:
    case 0x3D:
    case 0x3F:
    case 0x42:
      if (!*v5) {
        goto LABEL_5;
      }
      goto LABEL_3;
    default:
      int v6 = 9;
      if (*v5)
      {
LABEL_3:
        int v7 = 7;
      }
      else
      {
LABEL_5:
        if (*(unsigned char *)(a1 + 5525)) {
          int v7 = 10;
        }
        else {
          int v7 = v6;
        }
      }
      sub_63841C(a2, v7);
      sub_5F3D48((uint64_t)v16, (uint64_t)&qword_25CA580);
      char v15 = 1;
      sub_5F6090(v16, (uint64_t)&qword_25CA580, (uint64_t *)(a1 + 5344), &v15);
      sub_638E74(a2, (uint64_t)v16);
      sub_638A0C(a2);
      sub_4D4B58((uint64_t)v16);
      uint64_t v8 = v21;
      if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      uint64_t v9 = v20;
      if (v20)
      {
        do
        {
          uint64_t v10 = (void *)*v9;
          sub_4F4B48((uint64_t)(v9 + 2));
          operator delete(v9);
          uint64_t v9 = v10;
        }
        while (v10);
      }
      uint64_t v11 = v19;
      char v19 = 0;
      if (v11) {
        operator delete(v11);
      }
      uint64_t v12 = v17;
      if (v17)
      {
        uint64_t v13 = v18;
        uint64_t v14 = v17;
        if (v18 != v17)
        {
          do
          {
            if (*((char *)v13 - 1) < 0) {
              operator delete(*(v13 - 3));
            }
            v13 -= 3;
          }
          while (v13 != v12);
          uint64_t v14 = v17;
        }
        uint64_t v18 = v12;
        operator delete(v14);
      }
      return;
  }
}

void sub_85A998(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_4D4B58((uint64_t)va);
  sub_52F1E8(v2);
  sub_4F31D0((void **)(v3 - 136));
  _Unwind_Resume(a1);
}

void sub_85AB00(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v3 = *(void *)(a1 + 7448) - *(void *)(a1 + 7440);
  if (v3)
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xCF3CF3CF3CF3CF3DLL * (v3 >> 4);
    int v7 = (unsigned char *)(a1 + 7803);
    while (1)
    {
      uint64_t v8 = (void *)(*(void *)(a1 + 7440) + 336 * v5);
      if ((!sub_683488((uint64_t)v8) || !*v7) && sub_6834B8(v8))
      {
        uint64_t v9 = sub_685CD8((uint64_t)v8);
        v32.n128_u64[0] = v9;
        v32.n128_u64[1] = v10;
        if (!*(unsigned char *)(a1 + 2180)) {
          goto LABEL_12;
        }
        int64_t v11 = *(void *)(a1 + 5144);
        if (v11 >= v10) {
          break;
        }
      }
LABEL_4:
      if (++v5 == v6) {
        return;
      }
    }
    if (v9 > v11 && v11 - v10 >= *(void *)(*(void *)(a1 + 2160) + 1504)) {
      v32.n128_u64[0] = *(void *)(a1 + 5144);
    }
LABEL_12:
    sub_676048((uint64_t)v8, (uint64_t)&v28);
    sub_7C43EC(v33, &v28, 0);
    sub_7C47A8((uint64_t)v33, v5);
    sub_638424((uint64_t)v33, &v32);
    if (sub_683488((uint64_t)v8)) {
      int v12 = 17;
    }
    else {
      int v12 = 16;
    }
    sub_63841C((uint64_t)v33, v12);
    BOOL v13 = sub_683488((uint64_t)v8);
    uint64_t v14 = 416;
    if (v13) {
      uint64_t v14 = 418;
    }
    sub_7C43E4((uint64_t)v33, *(unsigned __int8 *)(*(void *)(a1 + 2160) + v14));
    if (sub_68346C((uint64_t)v8))
    {
      sub_5F3D48((uint64_t)v27, (uint64_t)&unk_25CA598);
      v25[0] = sub_638A20((uint64_t)v33);
      v25[1] = v15;
      uint64_t v26 = sub_6383A0(v25);
      char v24 = 1;
      sub_5F6090(v27, (uint64_t)&unk_25CA598, &v26, &v24);
      sub_638E74((uint64_t)v33, (uint64_t)v27);
      sub_4D4B58((uint64_t)v27);
    }
    unint64_t v16 = a2[1];
    if (v16 >= a2[2])
    {
      uint64_t v17 = sub_7572F4(a2, (uint64_t)v33);
    }
    else
    {
      sub_599644(a2[1], (uint64_t)v33);
      uint64_t v17 = v16 + 1080;
      a2[1] = v16 + 1080;
    }
    a2[1] = v17;
    sub_52F1E8((uint64_t)v33);
    uint64_t v18 = v31;
    if (!v31)
    {
LABEL_23:
      char v19 = v30;
      uint64_t v30 = 0;
      if (v19) {
        operator delete(v19);
      }
      uint64_t v20 = v28;
      if (v28)
      {
        char v21 = v29;
        uint64_t v22 = v28;
        if (v29 != v28)
        {
          do
          {
            if (*((char *)v21 - 1) < 0) {
              operator delete(*(v21 - 3));
            }
            v21 -= 3;
          }
          while (v21 != v20);
          uint64_t v22 = v28;
        }
        char v29 = v20;
        operator delete(v22);
      }
      goto LABEL_4;
    }
    while (1)
    {
      unint64_t v23 = (void **)*v18;
      if (*((char *)v18 + 191) < 0)
      {
        operator delete(v18[21]);
        if ((*((char *)v18 + 159) & 0x80000000) == 0)
        {
LABEL_31:
          if ((*((char *)v18 + 135) & 0x80000000) == 0) {
            goto LABEL_32;
          }
          goto LABEL_38;
        }
      }
      else if ((*((char *)v18 + 159) & 0x80000000) == 0)
      {
        goto LABEL_31;
      }
      operator delete(v18[17]);
      if ((*((char *)v18 + 135) & 0x80000000) == 0)
      {
LABEL_32:
        if ((*((char *)v18 + 95) & 0x80000000) == 0) {
          goto LABEL_33;
        }
        goto LABEL_39;
      }
LABEL_38:
      operator delete(v18[14]);
      if ((*((char *)v18 + 95) & 0x80000000) == 0)
      {
LABEL_33:
        if ((*((char *)v18 + 63) & 0x80000000) == 0) {
          goto LABEL_34;
        }
        goto LABEL_40;
      }
LABEL_39:
      operator delete(v18[9]);
      if ((*((char *)v18 + 63) & 0x80000000) == 0)
      {
LABEL_34:
        if (*((char *)v18 + 39) < 0) {
          goto LABEL_41;
        }
        goto LABEL_28;
      }
LABEL_40:
      operator delete(v18[5]);
      if (*((char *)v18 + 39) < 0) {
LABEL_41:
      }
        operator delete(v18[2]);
LABEL_28:
      operator delete(v18);
      uint64_t v18 = v23;
      if (!v23) {
        goto LABEL_23;
      }
    }
  }
}

void sub_85AE60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  *(void *)(v44 + 8) = v45;
  sub_52F1E8((uint64_t)&a44);
  sub_4D4880(&a33);
  sub_591E78((void **)v44);
  _Unwind_Resume(a1);
}

void sub_85AF04(uint64_t a1, unint64_t *a2)
{
  if (*a2 != a2[1])
  {
    uint64_t v4 = sub_62BE00(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v5 = *(void *)(*(void *)(a1 + 2160) + 1504);
    int v7 = (void *)*a2;
    unint64_t v6 = a2[1];
    unint64_t v8 = 126 - 2 * __clz(0x1A8C536FE1A8C537 * ((uint64_t)(v6 - *a2) >> 3));
    BOOL v9 = v6 == *a2;
    v14[0] = v4;
    v14[1] = v5;
    _DWORD v14[2] = a1;
    if (v9) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v8;
    }
    sub_87BC54(v7, v6, (uint64_t)&v15, v10, 1);
    sub_84FB90(v14, a2);
    unint64_t v11 = a2[1];
    unint64_t v12 = 126 - 2 * __clz(0x1A8C536FE1A8C537 * ((uint64_t)(v11 - *a2) >> 3));
    if (v11 == *a2) {
      uint64_t v13 = 0;
    }
    else {
      uint64_t v13 = v12;
    }
    sub_87D510((void *)*a2, v11, (uint64_t)&v15, v13, 1);
    sub_84FB90(v14, a2);
  }
}

void *sub_85AFE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void **a3@<X8>)
{
  uint64_t result = (*(void *(**)(void **__return_ptr))(*(void *)a1 + 16))(a3);
  if (*(unsigned char *)(a1 + 7914))
  {
    int v7 = sub_89E85C(a1 + 2200);
    sub_85B170(a1, a2, *(void *)(a1 + 2192) + (v7 ^ 1u), (uint64_t)v14);
    unint64_t v8 = (unint64_t)a3[1];
    if (v8 >= (unint64_t)a3[2])
    {
      uint64_t v10 = sub_7576B4(a3, (uint64_t)v14);
    }
    else
    {
      sub_7574DC(v8, (uint64_t)v14);
      uint64_t v10 = (void *)(v9 + 1080);
    }
    a3[1] = v10;
    uint64_t result = sub_52F1E8((uint64_t)v14);
  }
  unint64_t v11 = *a3;
  unint64_t v12 = a3[1];
  while (v11 != v12)
  {
    uint64_t result = (void *)sub_638AF0(v11);
    if ((result & 1) == 0)
    {
      int v13 = *(_DWORD *)(a1 + 7916);
      *(_DWORD *)(a1 + 7916) = v13 + 1;
      uint64_t result = sub_BB6C(v11, v13);
    }
    v11 += 270;
  }
  return result;
}

void sub_85B118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_52F1E8((uint64_t)&a9);
  sub_591E78(v9);
  _Unwind_Resume(a1);
}

void sub_85B134(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_85B148(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_85B15C(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_85B170(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 + 1064);
  uint64_t v9 = a1 + 2200;
  sub_8A34B0(a1 + 2200, a2, a3, (uint64_t)&v29);
  sub_7C47A4(a4, (uint64_t)&v29);
  uint64_t v10 = nullsub_1(&v29);
  sub_638D90(a4, v10);
  sub_7C43E4(a4, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 419));
  unint64_t v11 = *(void **)(a1 + 2160);
  if (*(unsigned char *)(a1 + 2179))
  {
    uint64_t v12 = sub_62B9C8(v11, *(_DWORD *)(a1 + 5188));
    uint64_t v13 = sub_62BA34(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    if (*(unsigned char *)(a1 + 2176)) {
      uint64_t v14 = v12;
    }
    else {
      uint64_t v14 = v13;
    }
  }
  else
  {
    uint64_t v14 = v11[3];
  }
  if (*(void *)(a1 + 2152) < v14) {
    uint64_t v14 = *(void *)(a1 + 2152);
  }
  uint64_t v27 = 0;
  uint64_t v28 = v14;
  sub_638408(a4, &v28, &v27);
  if (sub_89E85C(v9))
  {
    int v15 = 13;
  }
  else if (*(unsigned char *)(a1 + 5184))
  {
    int v15 = 12;
  }
  else
  {
    int v15 = 11;
  }
  sub_63841C(a4, v15);
  int v16 = *(_DWORD *)(v8 + 2400 * a3 + 160);
  if ((v16 & 0xFFFFFFFE) != 6 && (v16 - 41) > 0x12)
  {
    sub_7C43DC(a4, v16);
  }
  else
  {
    uint64_t v18 = v8 + 2400 * a3;
    char v19 = (char *)(v18 + 329);
    if (!*(unsigned char *)(v18 + 330)) {
      char v19 = (char *)(a2 + 1057);
    }
    sub_7C4888(a4, v18 + 176, *v19);
  }
  uint64_t v20 = v33;
  if (v33 && !atomic_fetch_add(&v33->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
  }
  char v21 = v32;
  if (v32)
  {
    do
    {
      uint64_t v22 = (void *)*v21;
      sub_4F4B48((uint64_t)(v21 + 2));
      operator delete(v21);
      char v21 = v22;
    }
    while (v22);
  }
  unint64_t v23 = __p;
  long long __p = 0;
  if (v23) {
    operator delete(v23);
  }
  char v24 = (void **)v29;
  if (v29)
  {
    uint64_t v25 = v30;
    uint64_t v26 = v29;
    if (v30 != v29)
    {
      do
      {
        if (*((char *)v25 - 1) < 0) {
          operator delete(*(v25 - 3));
        }
        v25 -= 3;
      }
      while (v25 != v24);
      uint64_t v26 = v29;
    }
    uint64_t v30 = v24;
    operator delete(v26);
  }
}

void sub_85B3A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_52F1E8(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_85B3E4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 2182);
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 2192) + 1;
    char v3 = 1;
    if (*(unsigned char *)(a1 + 2179))
    {
LABEL_3:
      uint64_t v8 = v4;
      char v9 = v3;
      *(_DWORD *)uint64_t v10 = v11[0];
      *(_DWORD *)&v10[3] = *(_DWORD *)((char *)v11 + 3);
      sub_85B47C(a1, a2, (unint64_t *)&v8, a3);
      return;
    }
  }
  else
  {
    uint64_t v4 = 0;
    *(_DWORD *)((char *)v11 + 3) = 0;
    v11[0] = 0;
    if (*(unsigned char *)(a1 + 2179)) {
      goto LABEL_3;
    }
  }
  uint64_t v5 = v4;
  char v6 = v3;
  *(_DWORD *)int v7 = v11[0];
  *(_DWORD *)&v7[3] = *(_DWORD *)((char *)v11 + 3);
  sub_85D160((unsigned char *)a1, a2, (uint64_t)&v5, a3);
}

void sub_85B47C(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  if (*(unsigned char *)(a1 + 2180))
  {
    sub_85EE38(a1, (uint64_t)&v204);
    unint64_t v8 = a4[1];
    if (v8 >= a4[2])
    {
      uint64_t v18 = sub_757E08(a4, (uint64_t)&v204);
      char v19 = __p;
      a4[1] = v18;
      if (v19)
      {
        size_t v233 = v19;
        operator delete(v19);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v8 = v204;
      *(void *)(v8 + 16) = 0;
      *(void *)(v8 + 24) = 0;
      *(void *)(v8 + 8) = 0;
      *(_OWORD *)(v8 + 8) = *(_OWORD *)v205;
      *(void *)(v8 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v9 = v209;
      long long v10 = v207;
      *(_OWORD *)(v8 + 48) = v208;
      *(_OWORD *)(v8 + 64) = v9;
      *(_OWORD *)(v8 + 32) = v10;
      uint64_t v11 = v212;
      long long v12 = v211;
      *(_OWORD *)(v8 + 80) = v210;
      *(_OWORD *)(v8 + 96) = v12;
      *(void *)(v8 + 112) = v11;
      *(void *)(v8 + 120) = 0;
      *(void *)(v8 + 128) = 0;
      *(void *)(v8 + 136) = 0;
      *(_OWORD *)(v8 + 120) = v213;
      *(void *)(v8 + 136) = v214;
      *(void *)(v8 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v8 + 152) = 0;
      *(void *)(v8 + 160) = 0;
      *(_OWORD *)(v8 + 144) = v215;
      *(void *)(v8 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v8 + 168) = v217;
      *(_DWORD *)(v8 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v8 + 184) = v218;
      }
      *(_OWORD *)(v8 + 200) = v220;
      long long v13 = v221;
      uint64_t v14 = v223;
      *(_OWORD *)(v8 + 232) = v222;
      *(_OWORD *)(v8 + 216) = v13;
      *(void *)(v8 + 248) = v14;
      *(void *)(v8 + 256) = 0;
      *(void *)(v8 + 264) = 0;
      *(void *)(v8 + 272) = 0;
      *(_OWORD *)(v8 + 256) = v224;
      *(void *)(v8 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v8 + 280) = v226;
      *(void *)(v8 + 288) = 0;
      *(void *)(v8 + 296) = 0;
      *(void *)(v8 + 304) = 0;
      *(_OWORD *)(v8 + 288) = v227;
      *(void *)(v8 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v15 = *(_OWORD *)v229;
      *(_OWORD *)(v8 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v8 + 312) = v15;
      long long v16 = v230;
      *(_DWORD *)(v8 + 356) = v231;
      *(_OWORD *)(v8 + 340) = v16;
      *(void *)(v8 + 360) = 0;
      *(void *)(v8 + 368) = 0;
      *(void *)(v8 + 376) = 0;
      *(void *)(v8 + 360) = __p;
      *(void *)(v8 + 368) = v233;
      *(void *)(v8 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v17 = v235;
      *(_DWORD *)(v8 + 400) = v236;
      *(_OWORD *)(v8 + 384) = v17;
      a4[1] = v8 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v20 = (void **)v224;
    if ((void)v224)
    {
      char v21 = (void **)*((void *)&v224 + 1);
      uint64_t v22 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          char v21 = sub_4F31D0(v21 - 13);
        while (v21 != v20);
        uint64_t v22 = (void *)v224;
      }
      *((void *)&v224 + 1) = v20;
      operator delete(v22);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    unint64_t v23 = v205[0];
    if (v205[0])
    {
      char v24 = v205[1];
      uint64_t v25 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          char v24 = (void *)sub_4D4B58((uint64_t)v24 - 160);
        while (v24 != v23);
        uint64_t v25 = v205[0];
      }
      v205[1] = v23;
      operator delete(v25);
    }
  }
  if (*(unsigned char *)(a1 + 2181))
  {
    sub_85F0D4(a1, (uint64_t *)&v204);
    sub_878048(a4, (void *)a4[1], (uint64_t)v204, (uint64_t)v205[0], 0xFAFAFAFAFAFAFAFBLL * (((char *)v205[0] - (char *)v204) >> 3));
    uint64_t v26 = v204;
    if (v204)
    {
      uint64_t v27 = v205[0];
      uint64_t v28 = v204;
      if (v205[0] != v204)
      {
        do
        {
          char v29 = (void *)*(v27 - 6);
          if (v29)
          {
            *(v27 - 5) = v29;
            operator delete(v29);
          }
          v27 -= 51;
          sub_4F32CC(v27);
        }
        while (v27 != v26);
        uint64_t v28 = v204;
      }
      v205[0] = v26;
      operator delete(v28);
    }
  }
  if (*(unsigned char *)(a1 + 7904))
  {
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 56))(&v204, a1);
    unint64_t v30 = a4[1];
    if (v30 >= a4[2])
    {
      uint64_t v40 = sub_757E08(a4, (uint64_t)&v204);
      uint64_t v41 = __p;
      a4[1] = v40;
      if (v41)
      {
        size_t v233 = v41;
        operator delete(v41);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v30 = v204;
      *(void *)(v30 + 16) = 0;
      *(void *)(v30 + 24) = 0;
      *(void *)(v30 + 8) = 0;
      *(_OWORD *)(v30 + 8) = *(_OWORD *)v205;
      *(void *)(v30 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v31 = v209;
      long long v32 = v207;
      *(_OWORD *)(v30 + 48) = v208;
      *(_OWORD *)(v30 + 64) = v31;
      *(_OWORD *)(v30 + 32) = v32;
      uint64_t v33 = v212;
      long long v34 = v211;
      *(_OWORD *)(v30 + 80) = v210;
      *(_OWORD *)(v30 + 96) = v34;
      *(void *)(v30 + 112) = v33;
      *(void *)(v30 + 120) = 0;
      *(void *)(v30 + 128) = 0;
      *(void *)(v30 + 136) = 0;
      *(_OWORD *)(v30 + 120) = v213;
      *(void *)(v30 + 136) = v214;
      *(void *)(v30 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v30 + 152) = 0;
      *(void *)(v30 + 160) = 0;
      *(_OWORD *)(v30 + 144) = v215;
      *(void *)(v30 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v30 + 168) = v217;
      *(_DWORD *)(v30 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v30 + 184) = v218;
      }
      *(_OWORD *)(v30 + 200) = v220;
      long long v35 = v221;
      uint64_t v36 = v223;
      *(_OWORD *)(v30 + 232) = v222;
      *(_OWORD *)(v30 + 216) = v35;
      *(void *)(v30 + 248) = v36;
      *(void *)(v30 + 256) = 0;
      *(void *)(v30 + 264) = 0;
      *(void *)(v30 + 272) = 0;
      *(_OWORD *)(v30 + 256) = v224;
      *(void *)(v30 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v30 + 280) = v226;
      *(void *)(v30 + 288) = 0;
      *(void *)(v30 + 296) = 0;
      *(void *)(v30 + 304) = 0;
      *(_OWORD *)(v30 + 288) = v227;
      *(void *)(v30 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v37 = *(_OWORD *)v229;
      *(_OWORD *)(v30 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v30 + 312) = v37;
      long long v38 = v230;
      *(_DWORD *)(v30 + 356) = v231;
      *(_OWORD *)(v30 + 340) = v38;
      *(void *)(v30 + 360) = 0;
      *(void *)(v30 + 368) = 0;
      *(void *)(v30 + 376) = 0;
      *(void *)(v30 + 360) = __p;
      *(void *)(v30 + 368) = v233;
      *(void *)(v30 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v39 = v235;
      *(_DWORD *)(v30 + 400) = v236;
      *(_OWORD *)(v30 + 384) = v39;
      a4[1] = v30 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v42 = (void **)v224;
    if ((void)v224)
    {
      char v43 = (void **)*((void *)&v224 + 1);
      uint64_t v44 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          char v43 = sub_4F31D0(v43 - 13);
        while (v43 != v42);
        uint64_t v44 = (void *)v224;
      }
      *((void *)&v224 + 1) = v42;
      operator delete(v44);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    uint64_t v45 = v205[0];
    if (v205[0])
    {
      unsigned __int16 v46 = v205[1];
      uint64_t v47 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          unsigned __int16 v46 = (void *)sub_4D4B58((uint64_t)v46 - 160);
        while (v46 != v45);
        uint64_t v47 = v205[0];
      }
      v205[1] = v45;
      operator delete(v47);
    }
  }
  if (*(unsigned char *)(a1 + 7905))
  {
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 64))(&v204, a1);
    unint64_t v48 = a4[1];
    if (v48 >= a4[2])
    {
      uint64_t v58 = sub_757E08(a4, (uint64_t)&v204);
      uint64_t v59 = __p;
      a4[1] = v58;
      if (v59)
      {
        size_t v233 = v59;
        operator delete(v59);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v48 = v204;
      *(void *)(v48 + 16) = 0;
      *(void *)(v48 + 24) = 0;
      *(void *)(v48 + 8) = 0;
      *(_OWORD *)(v48 + 8) = *(_OWORD *)v205;
      *(void *)(v48 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v49 = v209;
      long long v50 = v207;
      *(_OWORD *)(v48 + 48) = v208;
      *(_OWORD *)(v48 + 64) = v49;
      *(_OWORD *)(v48 + 32) = v50;
      uint64_t v51 = v212;
      long long v52 = v211;
      *(_OWORD *)(v48 + 80) = v210;
      *(_OWORD *)(v48 + 96) = v52;
      *(void *)(v48 + 112) = v51;
      *(void *)(v48 + 120) = 0;
      *(void *)(v48 + 128) = 0;
      *(void *)(v48 + 136) = 0;
      *(_OWORD *)(v48 + 120) = v213;
      *(void *)(v48 + 136) = v214;
      *(void *)(v48 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v48 + 152) = 0;
      *(void *)(v48 + 160) = 0;
      *(_OWORD *)(v48 + 144) = v215;
      *(void *)(v48 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v48 + 168) = v217;
      *(_DWORD *)(v48 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v48 + 184) = v218;
      }
      *(_OWORD *)(v48 + 200) = v220;
      long long v53 = v221;
      uint64_t v54 = v223;
      *(_OWORD *)(v48 + 232) = v222;
      *(_OWORD *)(v48 + 216) = v53;
      *(void *)(v48 + 248) = v54;
      *(void *)(v48 + 256) = 0;
      *(void *)(v48 + 264) = 0;
      *(void *)(v48 + 272) = 0;
      *(_OWORD *)(v48 + 256) = v224;
      *(void *)(v48 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v48 + 280) = v226;
      *(void *)(v48 + 288) = 0;
      *(void *)(v48 + 296) = 0;
      *(void *)(v48 + 304) = 0;
      *(_OWORD *)(v48 + 288) = v227;
      *(void *)(v48 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v55 = *(_OWORD *)v229;
      *(_OWORD *)(v48 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v48 + 312) = v55;
      long long v56 = v230;
      *(_DWORD *)(v48 + 356) = v231;
      *(_OWORD *)(v48 + 340) = v56;
      *(void *)(v48 + 360) = 0;
      *(void *)(v48 + 368) = 0;
      *(void *)(v48 + 376) = 0;
      *(void *)(v48 + 360) = __p;
      *(void *)(v48 + 368) = v233;
      *(void *)(v48 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v57 = v235;
      *(_DWORD *)(v48 + 400) = v236;
      *(_OWORD *)(v48 + 384) = v57;
      a4[1] = v48 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    long long v60 = (void **)v224;
    if ((void)v224)
    {
      uint64_t v61 = (void **)*((void *)&v224 + 1);
      long long v62 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          uint64_t v61 = sub_4F31D0(v61 - 13);
        while (v61 != v60);
        long long v62 = (void *)v224;
      }
      *((void *)&v224 + 1) = v60;
      operator delete(v62);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    uint64_t v63 = v205[0];
    if (v205[0])
    {
      uint64_t v64 = v205[1];
      __int16 v65 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          uint64_t v64 = (void *)sub_4D4B58((uint64_t)v64 - 160);
        while (v64 != v63);
        __int16 v65 = v205[0];
      }
      v205[1] = v63;
      operator delete(v65);
    }
  }
  if (*(unsigned char *)(a1 + 7908))
  {
    sub_860088(a1, (uint64_t)&v204);
    unint64_t v66 = a4[1];
    if (v66 >= a4[2])
    {
      uint64_t v76 = sub_757E08(a4, (uint64_t)&v204);
      uint64_t v77 = __p;
      a4[1] = v76;
      if (v77)
      {
        size_t v233 = v77;
        operator delete(v77);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v66 = v204;
      *(void *)(v66 + 16) = 0;
      *(void *)(v66 + 24) = 0;
      *(void *)(v66 + 8) = 0;
      *(_OWORD *)(v66 + 8) = *(_OWORD *)v205;
      *(void *)(v66 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v67 = v209;
      long long v68 = v207;
      *(_OWORD *)(v66 + 48) = v208;
      *(_OWORD *)(v66 + 64) = v67;
      *(_OWORD *)(v66 + 32) = v68;
      uint64_t v69 = v212;
      long long v70 = v211;
      *(_OWORD *)(v66 + 80) = v210;
      *(_OWORD *)(v66 + 96) = v70;
      *(void *)(v66 + 112) = v69;
      *(void *)(v66 + 120) = 0;
      *(void *)(v66 + 128) = 0;
      *(void *)(v66 + 136) = 0;
      *(_OWORD *)(v66 + 120) = v213;
      *(void *)(v66 + 136) = v214;
      *(void *)(v66 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v66 + 152) = 0;
      *(void *)(v66 + 160) = 0;
      *(_OWORD *)(v66 + 144) = v215;
      *(void *)(v66 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v66 + 168) = v217;
      *(_DWORD *)(v66 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v66 + 184) = v218;
      }
      *(_OWORD *)(v66 + 200) = v220;
      long long v71 = v221;
      uint64_t v72 = v223;
      *(_OWORD *)(v66 + 232) = v222;
      *(_OWORD *)(v66 + 216) = v71;
      *(void *)(v66 + 248) = v72;
      *(void *)(v66 + 256) = 0;
      *(void *)(v66 + 264) = 0;
      *(void *)(v66 + 272) = 0;
      *(_OWORD *)(v66 + 256) = v224;
      *(void *)(v66 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v66 + 280) = v226;
      *(void *)(v66 + 288) = 0;
      *(void *)(v66 + 296) = 0;
      *(void *)(v66 + 304) = 0;
      *(_OWORD *)(v66 + 288) = v227;
      *(void *)(v66 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v73 = *(_OWORD *)v229;
      *(_OWORD *)(v66 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v66 + 312) = v73;
      long long v74 = v230;
      *(_DWORD *)(v66 + 356) = v231;
      *(_OWORD *)(v66 + 340) = v74;
      *(void *)(v66 + 360) = 0;
      *(void *)(v66 + 368) = 0;
      *(void *)(v66 + 376) = 0;
      *(void *)(v66 + 360) = __p;
      *(void *)(v66 + 368) = v233;
      *(void *)(v66 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v75 = v235;
      *(_DWORD *)(v66 + 400) = v236;
      *(_OWORD *)(v66 + 384) = v75;
      a4[1] = v66 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    int v78 = (void **)v224;
    if ((void)v224)
    {
      uint64_t v79 = (void **)*((void *)&v224 + 1);
      uint64_t v80 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          uint64_t v79 = sub_4F31D0(v79 - 13);
        while (v79 != v78);
        uint64_t v80 = (void *)v224;
      }
      *((void *)&v224 + 1) = v78;
      operator delete(v80);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    long long v81 = v205[0];
    if (v205[0])
    {
      uint64_t v82 = v205[1];
      uint64_t v83 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          uint64_t v82 = (void *)sub_4D4B58((uint64_t)v82 - 160);
        while (v82 != v81);
        uint64_t v83 = v205[0];
      }
      v205[1] = v81;
      operator delete(v83);
    }
  }
  if (*(unsigned char *)(a1 + 7910))
  {
    sub_85FE80(a1, (uint64_t)&v204);
    unint64_t v84 = a4[1];
    if (v84 >= a4[2])
    {
      uint64_t v94 = sub_757E08(a4, (uint64_t)&v204);
      uint64_t v95 = __p;
      a4[1] = v94;
      if (v95)
      {
        size_t v233 = v95;
        operator delete(v95);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v84 = v204;
      *(void *)(v84 + 16) = 0;
      *(void *)(v84 + 24) = 0;
      *(void *)(v84 + 8) = 0;
      *(_OWORD *)(v84 + 8) = *(_OWORD *)v205;
      *(void *)(v84 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v85 = v209;
      long long v86 = v207;
      *(_OWORD *)(v84 + 48) = v208;
      *(_OWORD *)(v84 + 64) = v85;
      *(_OWORD *)(v84 + 32) = v86;
      uint64_t v87 = v212;
      long long v88 = v211;
      *(_OWORD *)(v84 + 80) = v210;
      *(_OWORD *)(v84 + 96) = v88;
      *(void *)(v84 + 112) = v87;
      *(void *)(v84 + 120) = 0;
      *(void *)(v84 + 128) = 0;
      *(void *)(v84 + 136) = 0;
      *(_OWORD *)(v84 + 120) = v213;
      *(void *)(v84 + 136) = v214;
      *(void *)(v84 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v84 + 152) = 0;
      *(void *)(v84 + 160) = 0;
      *(_OWORD *)(v84 + 144) = v215;
      *(void *)(v84 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v84 + 168) = v217;
      *(_DWORD *)(v84 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v84 + 184) = v218;
      }
      *(_OWORD *)(v84 + 200) = v220;
      long long v89 = v221;
      uint64_t v90 = v223;
      *(_OWORD *)(v84 + 232) = v222;
      *(_OWORD *)(v84 + 216) = v89;
      *(void *)(v84 + 248) = v90;
      *(void *)(v84 + 256) = 0;
      *(void *)(v84 + 264) = 0;
      *(void *)(v84 + 272) = 0;
      *(_OWORD *)(v84 + 256) = v224;
      *(void *)(v84 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v84 + 280) = v226;
      *(void *)(v84 + 288) = 0;
      *(void *)(v84 + 296) = 0;
      *(void *)(v84 + 304) = 0;
      *(_OWORD *)(v84 + 288) = v227;
      *(void *)(v84 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v91 = *(_OWORD *)v229;
      *(_OWORD *)(v84 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v84 + 312) = v91;
      long long v92 = v230;
      *(_DWORD *)(v84 + 356) = v231;
      *(_OWORD *)(v84 + 340) = v92;
      *(void *)(v84 + 360) = 0;
      *(void *)(v84 + 368) = 0;
      *(void *)(v84 + 376) = 0;
      *(void *)(v84 + 360) = __p;
      *(void *)(v84 + 368) = v233;
      *(void *)(v84 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v93 = v235;
      *(_DWORD *)(v84 + 400) = v236;
      *(_OWORD *)(v84 + 384) = v93;
      a4[1] = v84 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v96 = (void **)v224;
    if ((void)v224)
    {
      uint64_t v97 = (void **)*((void *)&v224 + 1);
      char v98 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          uint64_t v97 = sub_4F31D0(v97 - 13);
        while (v97 != v96);
        char v98 = (void *)v224;
      }
      *((void *)&v224 + 1) = v96;
      operator delete(v98);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    char v99 = v205[0];
    if (v205[0])
    {
      long long v100 = v205[1];
      uint64_t v101 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          long long v100 = (void *)sub_4D4B58((uint64_t)v100 - 160);
        while (v100 != v99);
        uint64_t v101 = v205[0];
      }
      v205[1] = v99;
      operator delete(v101);
    }
  }
  if (*(unsigned char *)(a1 + 7911))
  {
    sub_85FC54(a1, (uint64_t)&v204);
    unint64_t v102 = a4[1];
    if (v102 >= a4[2])
    {
      uint64_t v112 = sub_757E08(a4, (uint64_t)&v204);
      uint64_t v113 = __p;
      a4[1] = v112;
      if (v113)
      {
        size_t v233 = v113;
        operator delete(v113);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v102 = v204;
      *(void *)(v102 + 16) = 0;
      *(void *)(v102 + 24) = 0;
      *(void *)(v102 + 8) = 0;
      *(_OWORD *)(v102 + 8) = *(_OWORD *)v205;
      *(void *)(v102 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v103 = v209;
      long long v104 = v207;
      *(_OWORD *)(v102 + 48) = v208;
      *(_OWORD *)(v102 + 64) = v103;
      *(_OWORD *)(v102 + 32) = v104;
      uint64_t v105 = v212;
      long long v106 = v211;
      *(_OWORD *)(v102 + 80) = v210;
      *(_OWORD *)(v102 + 96) = v106;
      *(void *)(v102 + 112) = v105;
      *(void *)(v102 + 120) = 0;
      *(void *)(v102 + 128) = 0;
      *(void *)(v102 + 136) = 0;
      *(_OWORD *)(v102 + 120) = v213;
      *(void *)(v102 + 136) = v214;
      *(void *)(v102 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v102 + 152) = 0;
      *(void *)(v102 + 160) = 0;
      *(_OWORD *)(v102 + 144) = v215;
      *(void *)(v102 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v102 + 168) = v217;
      *(_DWORD *)(v102 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v102 + 184) = v218;
      }
      *(_OWORD *)(v102 + 200) = v220;
      long long v107 = v221;
      uint64_t v108 = v223;
      *(_OWORD *)(v102 + 232) = v222;
      *(_OWORD *)(v102 + 216) = v107;
      *(void *)(v102 + 248) = v108;
      *(void *)(v102 + 256) = 0;
      *(void *)(v102 + 264) = 0;
      *(void *)(v102 + 272) = 0;
      *(_OWORD *)(v102 + 256) = v224;
      *(void *)(v102 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v102 + 280) = v226;
      *(void *)(v102 + 288) = 0;
      *(void *)(v102 + 296) = 0;
      *(void *)(v102 + 304) = 0;
      *(_OWORD *)(v102 + 288) = v227;
      *(void *)(v102 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v109 = *(_OWORD *)v229;
      *(_OWORD *)(v102 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v102 + 312) = v109;
      long long v110 = v230;
      *(_DWORD *)(v102 + 356) = v231;
      *(_OWORD *)(v102 + 340) = v110;
      *(void *)(v102 + 360) = 0;
      *(void *)(v102 + 368) = 0;
      *(void *)(v102 + 376) = 0;
      *(void *)(v102 + 360) = __p;
      *(void *)(v102 + 368) = v233;
      *(void *)(v102 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v111 = v235;
      *(_DWORD *)(v102 + 400) = v236;
      *(_OWORD *)(v102 + 384) = v111;
      a4[1] = v102 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v114 = (void **)v224;
    if ((void)v224)
    {
      long long v115 = (void **)*((void *)&v224 + 1);
      int v116 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          long long v115 = sub_4F31D0(v115 - 13);
        while (v115 != v114);
        int v116 = (void *)v224;
      }
      *((void *)&v224 + 1) = v114;
      operator delete(v116);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    uint64_t v117 = v205[0];
    if (v205[0])
    {
      unint64_t v118 = v205[1];
      long long v119 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          unint64_t v118 = (void *)sub_4D4B58((uint64_t)v118 - 160);
        while (v118 != v117);
        long long v119 = v205[0];
      }
      v205[1] = v117;
      operator delete(v119);
    }
  }
  if (*(unsigned char *)(a1 + 7913))
  {
    sub_860950(a1, (uint64_t)&v204);
    unint64_t v120 = a4[1];
    if (v120 >= a4[2])
    {
      uint64_t v130 = sub_757E08(a4, (uint64_t)&v204);
      uint64_t v131 = __p;
      a4[1] = v130;
      if (v131)
      {
        size_t v233 = v131;
        operator delete(v131);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v120 = v204;
      *(void *)(v120 + 16) = 0;
      *(void *)(v120 + 24) = 0;
      *(void *)(v120 + 8) = 0;
      *(_OWORD *)(v120 + 8) = *(_OWORD *)v205;
      *(void *)(v120 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v121 = v209;
      long long v122 = v207;
      *(_OWORD *)(v120 + 48) = v208;
      *(_OWORD *)(v120 + 64) = v121;
      *(_OWORD *)(v120 + 32) = v122;
      uint64_t v123 = v212;
      long long v124 = v211;
      *(_OWORD *)(v120 + 80) = v210;
      *(_OWORD *)(v120 + 96) = v124;
      *(void *)(v120 + 112) = v123;
      *(void *)(v120 + 120) = 0;
      *(void *)(v120 + 128) = 0;
      *(void *)(v120 + 136) = 0;
      *(_OWORD *)(v120 + 120) = v213;
      *(void *)(v120 + 136) = v214;
      *(void *)(v120 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v120 + 152) = 0;
      *(void *)(v120 + 160) = 0;
      *(_OWORD *)(v120 + 144) = v215;
      *(void *)(v120 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v120 + 168) = v217;
      *(_DWORD *)(v120 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v120 + 184) = v218;
      }
      *(_OWORD *)(v120 + 200) = v220;
      long long v125 = v221;
      uint64_t v126 = v223;
      *(_OWORD *)(v120 + 232) = v222;
      *(_OWORD *)(v120 + 216) = v125;
      *(void *)(v120 + 248) = v126;
      *(void *)(v120 + 256) = 0;
      *(void *)(v120 + 264) = 0;
      *(void *)(v120 + 272) = 0;
      *(_OWORD *)(v120 + 256) = v224;
      *(void *)(v120 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v120 + 280) = v226;
      *(void *)(v120 + 288) = 0;
      *(void *)(v120 + 296) = 0;
      *(void *)(v120 + 304) = 0;
      *(_OWORD *)(v120 + 288) = v227;
      *(void *)(v120 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v127 = *(_OWORD *)v229;
      *(_OWORD *)(v120 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v120 + 312) = v127;
      long long v128 = v230;
      *(_DWORD *)(v120 + 356) = v231;
      *(_OWORD *)(v120 + 340) = v128;
      *(void *)(v120 + 360) = 0;
      *(void *)(v120 + 368) = 0;
      *(void *)(v120 + 376) = 0;
      *(void *)(v120 + 360) = __p;
      *(void *)(v120 + 368) = v233;
      *(void *)(v120 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v129 = v235;
      *(_DWORD *)(v120 + 400) = v236;
      *(_OWORD *)(v120 + 384) = v129;
      a4[1] = v120 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v132 = (void **)v224;
    if ((void)v224)
    {
      uint64_t v133 = (void **)*((void *)&v224 + 1);
      unint64_t v134 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          uint64_t v133 = sub_4F31D0(v133 - 13);
        while (v133 != v132);
        unint64_t v134 = (void *)v224;
      }
      *((void *)&v224 + 1) = v132;
      operator delete(v134);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    uint64_t v135 = v205[0];
    if (v205[0])
    {
      char v136 = v205[1];
      unsigned long long v137 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          char v136 = (void *)sub_4D4B58((uint64_t)v136 - 160);
        while (v136 != v135);
        unsigned long long v137 = v205[0];
      }
      v205[1] = v135;
      operator delete(v137);
    }
  }
  if (*(unsigned char *)(a1 + 7912))
  {
    sub_86071C(a1, (uint64_t)&v204);
    unint64_t v138 = a4[1];
    if (v138 >= a4[2])
    {
      uint64_t v148 = sub_757E08(a4, (uint64_t)&v204);
      int v149 = __p;
      a4[1] = v148;
      if (v149)
      {
        size_t v233 = v149;
        operator delete(v149);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v138 = v204;
      *(void *)(v138 + 16) = 0;
      *(void *)(v138 + 24) = 0;
      *(void *)(v138 + 8) = 0;
      *(_OWORD *)(v138 + 8) = *(_OWORD *)v205;
      *(void *)(v138 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v139 = v209;
      long long v140 = v207;
      *(_OWORD *)(v138 + 48) = v208;
      *(_OWORD *)(v138 + 64) = v139;
      *(_OWORD *)(v138 + 32) = v140;
      uint64_t v141 = v212;
      long long v142 = v211;
      *(_OWORD *)(v138 + 80) = v210;
      *(_OWORD *)(v138 + 96) = v142;
      *(void *)(v138 + 112) = v141;
      *(void *)(v138 + 120) = 0;
      *(void *)(v138 + 128) = 0;
      *(void *)(v138 + 136) = 0;
      *(_OWORD *)(v138 + 120) = v213;
      *(void *)(v138 + 136) = v214;
      *(void *)(v138 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v138 + 152) = 0;
      *(void *)(v138 + 160) = 0;
      *(_OWORD *)(v138 + 144) = v215;
      *(void *)(v138 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v138 + 168) = v217;
      *(_DWORD *)(v138 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v138 + 184) = v218;
      }
      *(_OWORD *)(v138 + 200) = v220;
      long long v143 = v221;
      uint64_t v144 = v223;
      *(_OWORD *)(v138 + 232) = v222;
      *(_OWORD *)(v138 + 216) = v143;
      *(void *)(v138 + 248) = v144;
      *(void *)(v138 + 256) = 0;
      *(void *)(v138 + 264) = 0;
      *(void *)(v138 + 272) = 0;
      *(_OWORD *)(v138 + 256) = v224;
      *(void *)(v138 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v138 + 280) = v226;
      *(void *)(v138 + 288) = 0;
      *(void *)(v138 + 296) = 0;
      *(void *)(v138 + 304) = 0;
      *(_OWORD *)(v138 + 288) = v227;
      *(void *)(v138 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v145 = *(_OWORD *)v229;
      *(_OWORD *)(v138 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v138 + 312) = v145;
      long long v146 = v230;
      *(_DWORD *)(v138 + 356) = v231;
      *(_OWORD *)(v138 + 340) = v146;
      *(void *)(v138 + 360) = 0;
      *(void *)(v138 + 368) = 0;
      *(void *)(v138 + 376) = 0;
      *(void *)(v138 + 360) = __p;
      *(void *)(v138 + 368) = v233;
      *(void *)(v138 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v147 = v235;
      *(_DWORD *)(v138 + 400) = v236;
      *(_OWORD *)(v138 + 384) = v147;
      a4[1] = v138 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    BOOL v150 = (void **)v224;
    if ((void)v224)
    {
      uint64_t v151 = (void **)*((void *)&v224 + 1);
      uint64_t v152 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          uint64_t v151 = sub_4F31D0(v151 - 13);
        while (v151 != v150);
        uint64_t v152 = (void *)v224;
      }
      *((void *)&v224 + 1) = v150;
      operator delete(v152);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    long long v153 = v205[0];
    if (v205[0])
    {
      char v154 = v205[1];
      uint64_t v155 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          char v154 = (void *)sub_4D4B58((uint64_t)v154 - 160);
        while (v154 != v153);
LABEL_217:
        uint64_t v155 = v205[0];
        goto LABEL_218;
      }
      goto LABEL_218;
    }
  }
  else if (*(unsigned char *)(a1 + 7906))
  {
    if (*((unsigned char *)a3 + 8) && !*(unsigned char *)(a1 + 7907)) {
      sub_8610D8(a1, a2, *a3, (uint64_t)&v204);
    }
    else {
      sub_860EE4(a1, (uint64_t)&v204);
    }
    unint64_t v156 = a4[1];
    if (v156 >= a4[2])
    {
      uint64_t v157 = sub_75796C(a4, (uint64_t)&v204);
    }
    else
    {
      sub_757B28((uint64_t)(a4 + 2), a4[1], (uint64_t)&v204);
      uint64_t v157 = v156 + 408;
      a4[1] = v156 + 408;
    }
    a4[1] = v157;
    if (__p)
    {
      size_t v233 = __p;
      operator delete(__p);
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v158 = (void **)v224;
    if ((void)v224)
    {
      char v159 = (void **)*((void *)&v224 + 1);
      int v160 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          char v159 = sub_4F31D0(v159 - 13);
        while (v159 != v158);
        int v160 = (void *)v224;
      }
      *((void *)&v224 + 1) = v158;
      operator delete(v160);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    long long v153 = v205[0];
    if (v205[0])
    {
      BOOL v161 = v205[1];
      uint64_t v155 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          BOOL v161 = (void *)sub_4D4B58((uint64_t)v161 - 160);
        while (v161 != v153);
        goto LABEL_217;
      }
LABEL_218:
      v205[1] = v153;
      operator delete(v155);
    }
  }
  if (*(unsigned char *)(a1 + 7907))
  {
    if (*((unsigned char *)a3 + 8)) {
      sub_861460(a1, a2, *a3, (uint64_t)&v204);
    }
    else {
      sub_861244(a1, (uint64_t)&v204);
    }
    unint64_t v162 = a4[1];
    if (v162 >= a4[2])
    {
      uint64_t v163 = sub_75796C(a4, (uint64_t)&v204);
    }
    else
    {
      sub_757B28((uint64_t)(a4 + 2), a4[1], (uint64_t)&v204);
      uint64_t v163 = v162 + 408;
      a4[1] = v162 + 408;
    }
    a4[1] = v163;
    if (__p)
    {
      size_t v233 = __p;
      operator delete(__p);
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    long long v164 = (void **)v224;
    if ((void)v224)
    {
      long long v165 = (void **)*((void *)&v224 + 1);
      char v166 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          long long v165 = sub_4F31D0(v165 - 13);
        while (v165 != v164);
        char v166 = (void *)v224;
      }
      *((void *)&v224 + 1) = v164;
      operator delete(v166);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    long long v167 = v205[0];
    if (v205[0])
    {
      uint64_t v168 = v205[1];
      BOOL v169 = v205[0];
      if (v205[1] == v205[0])
      {
LABEL_246:
        v205[1] = v167;
        operator delete(v169);
        goto LABEL_247;
      }
      do
        uint64_t v168 = (void *)sub_4D4B58((uint64_t)v168 - 160);
      while (v168 != v167);
LABEL_245:
      BOOL v169 = v205[0];
      goto LABEL_246;
    }
  }
  else if (!*(unsigned char *)(a1 + 7906))
  {
    if (*((unsigned char *)a3 + 8)) {
      (*(void (**)(void **__return_ptr, uint64_t, uint64_t, unint64_t))(*(void *)a1 + 80))(&v204, a1, a2, *a3);
    }
    else {
      (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 72))(&v204, a1);
    }
    unint64_t v196 = a4[1];
    if (v196 >= a4[2])
    {
      uint64_t v197 = sub_75796C(a4, (uint64_t)&v204);
    }
    else
    {
      sub_757B28((uint64_t)(a4 + 2), a4[1], (uint64_t)&v204);
      uint64_t v197 = v196 + 408;
      a4[1] = v196 + 408;
    }
    a4[1] = v197;
    if (__p)
    {
      size_t v233 = __p;
      operator delete(__p);
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v198 = (void **)v224;
    if ((void)v224)
    {
      unint64_t v199 = (void **)*((void *)&v224 + 1);
      uint64_t v200 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          unint64_t v199 = sub_4F31D0(v199 - 13);
        while (v199 != v198);
        uint64_t v200 = (void *)v224;
      }
      *((void *)&v224 + 1) = v198;
      operator delete(v200);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    long long v167 = v205[0];
    if (v205[0])
    {
      uint64_t v201 = v205[1];
      BOOL v169 = v205[0];
      if (v205[1] == v205[0]) {
        goto LABEL_246;
      }
      do
        uint64_t v201 = (void *)sub_4D4B58((uint64_t)v201 - 160);
      while (v201 != v167);
      goto LABEL_245;
    }
  }
LABEL_247:
  uint64_t v170 = (_DWORD *)*a4;
  uint64_t v171 = (_DWORD *)a4[1];
  while (v170 != v171)
  {
    if (!sub_638AF0(v170))
    {
      int v172 = *(_DWORD *)(a1 + 7916);
      *(_DWORD *)(a1 + 7916) = v172 + 1;
      sub_BB6C(v170, v172);
    }
    v170 += 102;
  }
  sub_8615F8(a1, (int **)a4);
  if (*(unsigned char *)(a1 + 7802))
  {
    sub_860B50((void *)a1, (uint64_t *)&v204);
    uint64_t v173 = v204;
    char v174 = v205[0];
    while (v173 != v174)
    {
      if (!sub_638AF0(v173))
      {
        int v175 = *(_DWORD *)(a1 + 7916);
        *(_DWORD *)(a1 + 7916) = v175 + 1;
        sub_BB6C(v173, v175);
      }
      v173 += 102;
    }
    sub_8615F8(a1, (int **)&v204);
    sub_878048(a4, (void *)a4[1], (uint64_t)v204, (uint64_t)v205[0], 0xFAFAFAFAFAFAFAFBLL * (((char *)v205[0] - (char *)v204) >> 3));
    sub_8615F8(a1, (int **)a4);
    uint64_t v176 = v204;
    if (v204)
    {
      uint64_t v177 = v205[0];
      uint64_t v178 = v204;
      if (v205[0] != v204)
      {
        do
        {
          uint64_t v179 = (void *)*(v177 - 6);
          if (v179)
          {
            *(v177 - 5) = v179;
            operator delete(v179);
          }
          v177 -= 51;
          sub_4F32CC(v177);
        }
        while (v177 != v176);
        uint64_t v178 = v204;
      }
      v205[0] = v176;
      operator delete(v178);
    }
  }
  sub_861784(a1, (uint64_t *)&v204);
  long long v180 = (char *)v204;
  BOOL v181 = (char *)v205[0];
  if (v204 == v205[0])
  {
    uint64_t v182 = v204;
  }
  else
  {
    do
    {
      if (!sub_638AF0(v180))
      {
        int v183 = *(_DWORD *)(a1 + 7916);
        *(_DWORD *)(a1 + 7916) = v183 + 1;
        sub_BB6C(v180, v183);
      }
      v180 += 408;
    }
    while (v180 != v181);
    uint64_t v182 = v204;
    long long v180 = (char *)v205[0];
  }
  sub_878048(a4, (void *)a4[1], (uint64_t)v182, (uint64_t)v180, 0xFAFAFAFAFAFAFAFBLL * ((v180 - v182) >> 3));
  if (v204 != v205[0]) {
    sub_8615F8(a1, (int **)a4);
  }
  if (**(void **)(a1 + 7976) != *(void *)(*(void *)(a1 + 7976) + 8))
  {
    sub_862EC8((void *)a1, (uint64_t *)&v202);
    uint64_t v184 = (char *)v202;
    uint64_t v185 = v203;
    if (v202 == v203)
    {
      long long v186 = v202;
    }
    else
    {
      do
      {
        if (!sub_638AF0(v184))
        {
          int v187 = *(_DWORD *)(a1 + 7916);
          *(_DWORD *)(a1 + 7916) = v187 + 1;
          sub_BB6C(v184, v187);
        }
        v184 += 408;
      }
      while (v184 != v185);
      long long v186 = v202;
      uint64_t v184 = v203;
    }
    sub_878048(a4, (void *)a4[1], (uint64_t)v186, (uint64_t)v184, 0xFAFAFAFAFAFAFAFBLL * ((v184 - v186) >> 3));
    long long v188 = (char *)v202;
    if (v202)
    {
      uint64_t v189 = v203;
      uint64_t v190 = v202;
      if (v203 != v202)
      {
        do
        {
          int v191 = (void *)*((void *)v189 - 6);
          if (v191)
          {
            *((void *)v189 - 5) = v191;
            operator delete(v191);
          }
          v189 -= 408;
          sub_4F32CC(v189);
        }
        while (v189 != v188);
        uint64_t v190 = v202;
      }
      unint64_t v203 = v188;
      operator delete(v190);
    }
  }
  int v192 = v204;
  if (v204)
  {
    char v193 = v205[0];
    uint64_t v194 = v204;
    if (v205[0] != v204)
    {
      do
      {
        uint64_t v195 = (void *)*(v193 - 6);
        if (v195)
        {
          *(v193 - 5) = v195;
          operator delete(v195);
        }
        v193 -= 51;
        sub_4F32CC(v193);
      }
      while (v193 != v192);
      uint64_t v194 = v204;
    }
    v205[0] = v192;
    operator delete(v194);
  }
}

void sub_85CF74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_639B78((uint64_t *)va);
  sub_591DFC(v5);
  _Unwind_Resume(a1);
}

void sub_85CFFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_591DFC((uint64_t *)va);
  sub_591DFC((uint64_t *)va1);
  sub_591DFC(v2);
  _Unwind_Resume(a1);
}

void sub_85D14C(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

void sub_85D160(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v8 = a1 + 7904;
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  if (a1[7904])
  {
    sub_85F73C((uint64_t)a1, (uint64_t)&v53);
    unint64_t v9 = a4[1];
    if (v9 >= a4[2])
    {
      uint64_t v19 = sub_757E08(a4, (uint64_t)&v53);
      uint64_t v20 = __p;
      a4[1] = v19;
      if (v20)
      {
        uint64_t v82 = v20;
        operator delete(v20);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v9 = v53;
      *(void *)(v9 + 16) = 0;
      *(void *)(v9 + 24) = 0;
      *(void *)(v9 + 8) = 0;
      *(_OWORD *)(v9 + 8) = *(_OWORD *)v54;
      *(void *)(v9 + 24) = v55;
      v54[0] = 0;
      v54[1] = 0;
      long long v10 = v58;
      long long v11 = v56;
      *(_OWORD *)(v9 + 48) = v57;
      *(_OWORD *)(v9 + 64) = v10;
      *(_OWORD *)(v9 + 32) = v11;
      uint64_t v12 = v61;
      long long v13 = v60;
      *(_OWORD *)(v9 + 80) = v59;
      *(_OWORD *)(v9 + 96) = v13;
      *(void *)(v9 + 112) = v12;
      *(void *)(v9 + 120) = 0;
      *(void *)(v9 + 128) = 0;
      *(void *)(v9 + 136) = 0;
      *(_OWORD *)(v9 + 120) = *(_OWORD *)v62;
      *(void *)(v9 + 136) = v63;
      *(void *)(v9 + 144) = 0;
      uint64_t v55 = 0;
      v62[0] = 0;
      v62[1] = 0;
      *(void *)(v9 + 152) = 0;
      *(void *)(v9 + 160) = 0;
      *(_OWORD *)(v9 + 144) = *(_OWORD *)v64;
      *(void *)(v9 + 160) = v65;
      v64[1] = 0;
      uint64_t v65 = 0;
      uint64_t v63 = 0;
      v64[0] = 0;
      *(_OWORD *)(v9 + 168) = v66;
      *(_DWORD *)(v9 + 192) = v68;
      if (v68 <= 1) {
        *(void *)(v9 + 184) = v67;
      }
      *(_OWORD *)(v9 + 200) = v69;
      long long v14 = v70;
      uint64_t v15 = v72;
      *(_OWORD *)(v9 + 232) = v71;
      *(_OWORD *)(v9 + 216) = v14;
      *(void *)(v9 + 248) = v15;
      *(void *)(v9 + 256) = 0;
      *(void *)(v9 + 264) = 0;
      *(void *)(v9 + 272) = 0;
      *(_OWORD *)(v9 + 256) = *(_OWORD *)v73;
      *(void *)(v9 + 272) = v74;
      v73[0] = 0;
      v73[1] = 0;
      *(unsigned char *)(v9 + 280) = v75;
      *(void *)(v9 + 288) = 0;
      *(void *)(v9 + 296) = 0;
      *(void *)(v9 + 304) = 0;
      *(_OWORD *)(v9 + 288) = *(_OWORD *)v76;
      *(void *)(v9 + 304) = v77;
      uint64_t v74 = 0;
      v76[0] = 0;
      v76[1] = 0;
      uint64_t v77 = 0;
      long long v16 = *(_OWORD *)v78;
      *(_OWORD *)(v9 + 321) = *(_OWORD *)&v78[9];
      *(_OWORD *)(v9 + 312) = v16;
      long long v17 = v79;
      *(_DWORD *)(v9 + 356) = v80;
      *(_OWORD *)(v9 + 340) = v17;
      *(void *)(v9 + 360) = 0;
      *(void *)(v9 + 368) = 0;
      *(void *)(v9 + 376) = 0;
      *(void *)(v9 + 360) = __p;
      *(void *)(v9 + 368) = v82;
      *(void *)(v9 + 376) = v83;
      long long __p = 0;
      uint64_t v82 = 0;
      uint64_t v83 = 0;
      long long v18 = v84;
      *(_DWORD *)(v9 + 400) = v85;
      *(_OWORD *)(v9 + 384) = v18;
      a4[1] = v9 + 408;
    }
    if (v76[0])
    {
      v76[1] = v76[0];
      operator delete(v76[0]);
    }
    char v21 = (void **)v73[0];
    if (v73[0])
    {
      uint64_t v22 = (void **)v73[1];
      unint64_t v23 = v73[0];
      if (v73[1] != v73[0])
      {
        do
          uint64_t v22 = sub_4F31D0(v22 - 13);
        while (v22 != v21);
        unint64_t v23 = v73[0];
      }
      v73[1] = v21;
      operator delete(v23);
    }
    if (v64[0])
    {
      v64[1] = v64[0];
      operator delete(v64[0]);
    }
    if (v62[0])
    {
      v62[1] = v62[0];
      operator delete(v62[0]);
    }
    char v24 = v54[0];
    if (v54[0])
    {
      uint64_t v25 = v54[1];
      uint64_t v26 = v54[0];
      if (v54[1] != v54[0])
      {
        do
          uint64_t v25 = (void *)sub_4D4B58((uint64_t)v25 - 160);
        while (v25 != v24);
        uint64_t v26 = v54[0];
      }
      v54[1] = v24;
      operator delete(v26);
    }
  }
  if (v8[6])
  {
    sub_85FE80((uint64_t)a1, (uint64_t)&v53);
    unint64_t v27 = a4[1];
    if (v27 >= a4[2])
    {
      uint64_t v28 = sub_75796C(a4, (uint64_t)&v53);
    }
    else
    {
      sub_757B28((uint64_t)(a4 + 2), a4[1], (uint64_t)&v53);
      uint64_t v28 = v27 + 408;
      a4[1] = v27 + 408;
    }
    a4[1] = v28;
    if (__p)
    {
      uint64_t v82 = __p;
      operator delete(__p);
    }
    if (v76[0])
    {
      v76[1] = v76[0];
      operator delete(v76[0]);
    }
    char v29 = (void **)v73[0];
    if (v73[0])
    {
      unint64_t v30 = (void **)v73[1];
      long long v31 = v73[0];
      if (v73[1] != v73[0])
      {
        do
          unint64_t v30 = sub_4F31D0(v30 - 13);
        while (v30 != v29);
        long long v31 = v73[0];
      }
      v73[1] = v29;
      operator delete(v31);
    }
    if (v64[0])
    {
      v64[1] = v64[0];
      operator delete(v64[0]);
    }
    if (v62[0])
    {
      v62[1] = v62[0];
      operator delete(v62[0]);
    }
    long long v32 = v54[0];
    if (v54[0])
    {
      uint64_t v33 = v54[1];
      long long v34 = v54[0];
      if (v54[1] != v54[0])
      {
        do
          uint64_t v33 = (void *)sub_4D4B58((uint64_t)v33 - 160);
        while (v33 != v32);
        long long v34 = v54[0];
      }
      v54[1] = v32;
      operator delete(v34);
    }
  }
  if (*(unsigned char *)(a3 + 8)) {
    (*(void (**)(uint64_t *__return_ptr, unsigned char *, uint64_t, void))(*(void *)a1 + 80))(&v53, a1, a2, *(void *)a3);
  }
  else {
    (*(void (**)(uint64_t *__return_ptr, unsigned char *))(*(void *)a1 + 72))(&v53, a1);
  }
  unint64_t v35 = a4[1];
  if (v35 >= a4[2])
  {
    uint64_t v45 = sub_757E08(a4, (uint64_t)&v53);
    unsigned __int16 v46 = __p;
    a4[1] = v45;
    if (v46)
    {
      uint64_t v82 = v46;
      operator delete(v46);
    }
  }
  else
  {
    *(_DWORD *)unint64_t v35 = v53;
    *(void *)(v35 + 16) = 0;
    *(void *)(v35 + 24) = 0;
    *(void *)(v35 + 8) = 0;
    *(_OWORD *)(v35 + 8) = *(_OWORD *)v54;
    *(void *)(v35 + 24) = v55;
    v54[0] = 0;
    v54[1] = 0;
    long long v36 = v58;
    long long v37 = v56;
    *(_OWORD *)(v35 + 48) = v57;
    *(_OWORD *)(v35 + 64) = v36;
    *(_OWORD *)(v35 + 32) = v37;
    uint64_t v38 = v61;
    long long v39 = v60;
    *(_OWORD *)(v35 + 80) = v59;
    *(_OWORD *)(v35 + 96) = v39;
    *(void *)(v35 + 112) = v38;
    *(void *)(v35 + 120) = 0;
    *(void *)(v35 + 128) = 0;
    *(void *)(v35 + 136) = 0;
    *(_OWORD *)(v35 + 120) = *(_OWORD *)v62;
    *(void *)(v35 + 136) = v63;
    *(void *)(v35 + 144) = 0;
    uint64_t v55 = 0;
    v62[0] = 0;
    v62[1] = 0;
    *(void *)(v35 + 152) = 0;
    *(void *)(v35 + 160) = 0;
    *(_OWORD *)(v35 + 144) = *(_OWORD *)v64;
    *(void *)(v35 + 160) = v65;
    v64[1] = 0;
    uint64_t v65 = 0;
    uint64_t v63 = 0;
    v64[0] = 0;
    *(_OWORD *)(v35 + 168) = v66;
    *(_DWORD *)(v35 + 192) = v68;
    if (v68 <= 1) {
      *(void *)(v35 + 184) = v67;
    }
    *(_OWORD *)(v35 + 200) = v69;
    long long v40 = v70;
    uint64_t v41 = v72;
    *(_OWORD *)(v35 + 232) = v71;
    *(_OWORD *)(v35 + 216) = v40;
    *(void *)(v35 + 248) = v41;
    *(void *)(v35 + 256) = 0;
    *(void *)(v35 + 264) = 0;
    *(void *)(v35 + 272) = 0;
    *(_OWORD *)(v35 + 256) = *(_OWORD *)v73;
    *(void *)(v35 + 272) = v74;
    v73[0] = 0;
    v73[1] = 0;
    *(unsigned char *)(v35 + 280) = v75;
    *(void *)(v35 + 288) = 0;
    *(void *)(v35 + 296) = 0;
    *(void *)(v35 + 304) = 0;
    *(_OWORD *)(v35 + 288) = *(_OWORD *)v76;
    *(void *)(v35 + 304) = v77;
    uint64_t v74 = 0;
    v76[0] = 0;
    v76[1] = 0;
    uint64_t v77 = 0;
    long long v42 = *(_OWORD *)v78;
    *(_OWORD *)(v35 + 321) = *(_OWORD *)&v78[9];
    *(_OWORD *)(v35 + 312) = v42;
    long long v43 = v79;
    *(_DWORD *)(v35 + 356) = v80;
    *(_OWORD *)(v35 + 340) = v43;
    *(void *)(v35 + 360) = 0;
    *(void *)(v35 + 368) = 0;
    *(void *)(v35 + 376) = 0;
    *(void *)(v35 + 360) = __p;
    *(void *)(v35 + 368) = v82;
    *(void *)(v35 + 376) = v83;
    long long __p = 0;
    uint64_t v82 = 0;
    uint64_t v83 = 0;
    long long v44 = v84;
    *(_DWORD *)(v35 + 400) = v85;
    *(_OWORD *)(v35 + 384) = v44;
    a4[1] = v35 + 408;
  }
  if (v76[0])
  {
    v76[1] = v76[0];
    operator delete(v76[0]);
  }
  uint64_t v47 = (void **)v73[0];
  if (v73[0])
  {
    unint64_t v48 = (void **)v73[1];
    long long v49 = v73[0];
    if (v73[1] != v73[0])
    {
      do
        unint64_t v48 = sub_4F31D0(v48 - 13);
      while (v48 != v47);
      long long v49 = v73[0];
    }
    v73[1] = v47;
    operator delete(v49);
  }
  if (v64[0])
  {
    v64[1] = v64[0];
    operator delete(v64[0]);
  }
  if (v62[0])
  {
    v62[1] = v62[0];
    operator delete(v62[0]);
  }
  long long v50 = v54[0];
  if (v54[0])
  {
    uint64_t v51 = v54[1];
    long long v52 = v54[0];
    if (v54[1] != v54[0])
    {
      do
        uint64_t v51 = (void *)sub_4D4B58((uint64_t)v51 - 160);
      while (v51 != v50);
      long long v52 = v54[0];
    }
    v54[1] = v50;
    operator delete(v52);
  }
}

void sub_85D80C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_639B78(&a9);
  sub_591DFC(v9);
  _Unwind_Resume(a1);
}

void sub_85D83C(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

void sub_85D850(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

void sub_85D864(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_85D878@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (sub_7E54E8(a1))
  {
    sub_89FF30((unsigned __int8 *)(a1 + 2200), (uint64_t)&v19);
    sub_638DFC(a2, &v19);
    uint64_t v4 = v23;
    if (v23 && !atomic_fetch_add(&v23->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    uint64_t v5 = v22;
    if (v22)
    {
      do
      {
        uint64_t v6 = (void *)*v5;
        sub_4F4B48((uint64_t)(v5 + 2));
        operator delete(v5);
        uint64_t v5 = v6;
      }
      while (v6);
    }
    uint64_t v7 = __p;
    long long __p = 0;
    if (v7) {
      operator delete(v7);
    }
    unint64_t v8 = (void **)v19;
    if (v19)
    {
      unint64_t v9 = v20;
      long long v10 = v19;
      if (v20 != v19)
      {
        do
        {
          if (*((char *)v9 - 1) < 0) {
            operator delete(*(v9 - 3));
          }
          v9 -= 3;
        }
        while (v9 != v8);
        long long v10 = v19;
      }
      uint64_t v20 = v8;
      operator delete(v10);
    }
    sub_89FCE4(a1 + 2200, (uint64_t)&v19);
    sub_638E00((uint64_t)a2, (uint64_t)&v19);
    uint64_t v12 = v22;
    if (v22)
    {
      do
      {
        long long v13 = (void *)*v12;
        sub_4F4B48((uint64_t)(v12 + 2));
        operator delete(v12);
        uint64_t v12 = v13;
      }
      while (v13);
    }
    long long v14 = __p;
    long long __p = 0;
    if (v14) {
      operator delete(v14);
    }
    uint64_t v15 = (void **)v19;
    if (v19)
    {
      long long v16 = v20;
      long long v17 = v19;
      if (v20 != v19)
      {
        do
        {
          if (*((char *)v16 - 1) < 0) {
            operator delete(*(v16 - 3));
          }
          v16 -= 3;
        }
        while (v16 != v15);
        long long v17 = v19;
      }
      uint64_t v20 = v15;
      operator delete(v17);
    }
    sub_638448((uint64_t)a2, *(void *)(a1 + 2152));
    sub_63841C((uint64_t)a2, 25);
    sub_5F3D48((uint64_t)&v19, (uint64_t)&qword_25CA580);
    char v18 = 1;
    sub_5F6090((uint64_t *)&v19, (uint64_t)&qword_25CA580, (uint64_t *)(a1 + 2152), &v18);
    sub_638E74((uint64_t)a2, (uint64_t)&v19);
    return sub_4D4B58((uint64_t)&v19);
  }
  else
  {
    bzero(a2, 0x330uLL);
    return sub_5A9D64((uint64_t)a2);
  }
}

void sub_85DAC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4D4B58((uint64_t)va);
  sub_52F090(v3);
  _Unwind_Resume(a1);
}

void sub_85DAE4(_Unwind_Exception *a1)
{
  sub_52F090(v1);
  _Unwind_Resume(a1);
}

void sub_85DAF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4D4880((void **)va);
  sub_52F090(v3);
  _Unwind_Resume(a1);
}

void sub_85DB14(_Unwind_Exception *a1)
{
  sub_52F090(v1);
  _Unwind_Resume(a1);
}

void sub_85DB28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_85DB3C(_Unwind_Exception *a1)
{
  sub_52F090(v1);
  _Unwind_Resume(a1);
}

BOOL sub_85DB50(uint64_t a1)
{
  BOOL result = sub_7E9480(a1);
  if (result)
  {
    uint64_t v3 = 128;
    if (!*(unsigned char *)(a1 + 2176)) {
      uint64_t v3 = 136;
    }
    return *(void *)(a1 + 5192) > *(void *)(*(void *)(a1 + 2160) + v3);
  }
  return result;
}

void sub_85DBA0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_85DC70(a1, a2);
  sub_85E2A8(a1, &__p);
  sub_873144(a2, a2[1], (uint64_t)__p, (uint64_t)v8, 0xA3784A062B2E43DBLL * ((v8 - (unsigned char *)__p) >> 3));
  uint64_t v4 = __p;
  if (__p)
  {
    uint64_t v5 = v8;
    uint64_t v6 = __p;
    if (v8 != __p)
    {
      do
        uint64_t v5 = sub_576A58((uint64_t)(v5 - 83));
      while (v5 != v4);
      uint64_t v6 = __p;
    }
    unint64_t v8 = v4;
    operator delete(v6);
  }
}

void sub_85DC40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_5923C0((void **)va);
  sub_5923C0(v2);
  _Unwind_Resume(a1);
}

void sub_85DC5C(_Unwind_Exception *a1)
{
  sub_5923C0(v1);
  _Unwind_Resume(a1);
}

void sub_85DC70(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 2192);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  if (v3)
  {
    uint64_t v41 = a2;
    if (v3 == 1 && *(uint64_t *)(a1 + 2152) >= 200)
    {
      sub_8A0CB0(a1 + 2200, (uint64_t)&v45);
      sub_872D0C((uint64_t)v50, (uint64_t)&v45);
      uint64_t v44 = *(void *)(a1 + 2152);
      uint64_t v43 = v44 - 100;
      sub_638408((uint64_t)v50, &v44, &v43);
      int v51 = 1;
      sub_63841C((uint64_t)v50, 81);
      uint64_t v5 = sub_855880(*(void **)(a1 + 7944), 0);
      if (*(char *)(v5 + 23) < 0) {
        sub_4200(&__str, *(void **)v5, *(void *)(v5 + 8));
      }
      else {
        std::string __str = *(std::string *)v5;
      }
      std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type size = __str.__r_.__value_.__l.__size_;
      }
      if (size) {
        std::string::operator=(v52, &__str);
      }
      unint64_t v7 = a2[1];
      if (v7 >= a2[2])
      {
        uint64_t v8 = sub_8784B4(a2, (uint64_t)v50);
      }
      else
      {
        sub_594D4C(a2[1], (uint64_t)v50);
        uint64_t v8 = v7 + 664;
        a2[1] = v7 + 664;
      }
      a2[1] = v8;
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      sub_576A58((uint64_t)v50);
      unint64_t v9 = v49;
      if (v49 && !atomic_fetch_add(&v49->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
      long long v10 = v48;
      if (v48)
      {
        do
        {
          long long v11 = (void *)*v10;
          sub_4F4B48((uint64_t)(v10 + 2));
          operator delete(v10);
          long long v10 = v11;
        }
        while (v11);
      }
      uint64_t v12 = __p;
      long long __p = 0;
      if (v12) {
        operator delete(v12);
      }
      long long v13 = (void **)v45;
      if (v45)
      {
        long long v14 = v46;
        uint64_t v15 = v45;
        if (v46 != v45)
        {
          do
          {
            if (*((char *)v14 - 1) < 0) {
              operator delete(*(v14 - 3));
            }
            v14 -= 3;
          }
          while (v14 != v13);
          uint64_t v15 = v45;
        }
        unsigned __int16 v46 = v13;
        operator delete(v15);
      }
    }
    sub_8A0664(a1 + 2200, (uint64_t)&v45);
    uint64_t v44 = *(void *)(a1 + 2152);
    long long v16 = v46;
    if (v46 != v45)
    {
      unint64_t v17 = 0;
      uint64_t v40 = 0x4EC4EC4EC4EC4EC5 * (((char *)v46 - (unsigned char *)v45) >> 3);
      do
      {
        char v18 = v45;
        uint64_t v19 = sub_855880(*(void **)(a1 + 7944), v17);
        sub_872D0C((uint64_t)v50, (uint64_t)v18 + 104 * v17);
        uint64_t v43 = v44 - *(void *)(v19 + 232);
        sub_638408((uint64_t)v50, &v44, &v43);
        int v51 = 1;
        if (*(char *)(v19 + 23) < 0) {
          sub_4200(&__str, *(void **)v19, *(void *)(v19 + 8));
        }
        else {
          std::string __str = *(std::string *)v19;
        }
        std::string::size_type v20 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v20 = __str.__r_.__value_.__l.__size_;
        }
        if (v20) {
          std::string::operator=(v52, &__str);
        }
        char v21 = *(void **)(v19 + 248);
        uint64_t v22 = *(void **)(v19 + 256);
        if (v21 != v22)
        {
          unint64_t v23 = (char *)v54;
          do
          {
            uint64_t v24 = *(void *)(a1 + 2152);
            uint64_t v25 = v24 - *v21;
            uint64_t v26 = v24 - v21[1];
            if ((unint64_t)v23 < v55)
            {
              sub_2F99CC(v23, v25, v26);
              v23 += 16;
            }
            else
            {
              uint64_t v27 = (v23 - v53) >> 4;
              if ((unint64_t)(v27 + 1) >> 60) {
                sub_2E00();
              }
              unint64_t v28 = (uint64_t)(v55 - (void)v53) >> 3;
              if (v28 <= v27 + 1) {
                unint64_t v28 = v27 + 1;
              }
              if (v55 - (unint64_t)v53 >= 0x7FFFFFFFFFFFFFF0) {
                unint64_t v29 = 0xFFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v29 = v28;
              }
              if (v29)
              {
                if (v29 >> 60) {
                  sub_188D718();
                }
                unint64_t v30 = operator new(16 * v29);
              }
              else
              {
                unint64_t v30 = 0;
              }
              long long v31 = sub_2F99CC(&v30[2 * v27], v25, v26);
              long long v32 = (char *)v54;
              uint64_t v33 = v53;
              a2 = v41;
              long long v34 = v31;
              if (v54 != v53)
              {
                do
                {
                  *((_OWORD *)v34 - 1) = *((_OWORD *)v32 - 1);
                  v34 -= 2;
                  v32 -= 16;
                }
                while (v32 != v33);
                long long v32 = v53;
              }
              unint64_t v35 = (char *)&v30[2 * v29];
              uint64_t v53 = (char *)v34;
              unint64_t v23 = (char *)(v31 + 2);
              uint64_t v54 = v31 + 2;
              unint64_t v55 = (unint64_t)v35;
              if (v32) {
                operator delete(v32);
              }
            }
            uint64_t v54 = v23;
            v21 += 2;
          }
          while (v21 != v22);
        }
        unint64_t v36 = a2[1];
        if (v36 >= a2[2])
        {
          uint64_t v37 = sub_8784B4(a2, (uint64_t)v50);
        }
        else
        {
          sub_594D4C(a2[1], (uint64_t)v50);
          uint64_t v37 = v36 + 664;
          a2[1] = v36 + 664;
        }
        a2[1] = v37;
        uint64_t v44 = v43;
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        sub_576A58((uint64_t)v50);
        ++v17;
      }
      while (v17 != v40);
      long long v16 = (void **)v45;
    }
    if (v16)
    {
      uint64_t v38 = v46;
      long long v39 = v16;
      if (v46 != v16)
      {
        do
          uint64_t v38 = sub_4F31D0(v38 - 13);
        while (v38 != v16);
        long long v39 = v45;
      }
      unsigned __int16 v46 = v16;
      operator delete(v39);
    }
  }
}

void sub_85E180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  *(void *)(v36 + 8) = v35;
  if (a18 < 0) {
    operator delete(__p);
  }
  sub_576A58((uint64_t)&a35);
  sub_4F31D0(&a22);
  sub_5923C0(a12);
  _Unwind_Resume(a1);
}

void sub_85E1EC(_Unwind_Exception *a1)
{
  sub_5923C0(v1);
  _Unwind_Resume(a1);
}

void sub_85E200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_576A58((uint64_t)&a32);
  sub_5920E0(&a19);
  sub_5923C0(v32);
  _Unwind_Resume(a1);
}

void sub_85E2A8(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_8A0AE0((int *)(a1 + 2200), (uint64_t)&v30);
  sub_595AE0((uint64_t)__p, (uint64_t)&v35);
  sub_872EEC((uint64_t)v38, (uint64_t)&v30, (uint64_t *)__p);
  uint64_t v4 = (char *)v29;
  if (v29)
  {
    do
    {
      uint64_t v19 = *(char **)v4;
      std::string::size_type v20 = (void *)*((void *)v4 + 6);
      if (v20)
      {
        *((void *)v4 + 7) = v20;
        operator delete(v20);
      }
      if (v4[39] < 0) {
        operator delete(*((void **)v4 + 2));
      }
      operator delete(v4);
      uint64_t v4 = v19;
    }
    while (v19);
  }
  uint64_t v5 = __p[0];
  __p[0] = 0;
  if (v5) {
    operator delete(v5);
  }
  __str.__r_.__value_.__r.__words[0] = 0;
  sub_638408((uint64_t)v38, (void *)(a1 + 2152), &__str);
  int v39 = 2;
  if (*(unsigned char *)(a1 + 5184)) {
    sub_63841C((uint64_t)v38, 81);
  }
  if (!*(unsigned char *)(a1 + 5186))
  {
    if (*(unsigned char *)(a1 + 5184))
    {
      uint64_t v6 = **(long long ***)(a1 + 7944);
    }
    else
    {
      unint64_t v23 = *(long long ***)(a1 + 7952);
      uint64_t v6 = *v23;
      if (*v23 != v23[1])
      {
        if (*((char *)v6 + 23) < 0)
        {
          unint64_t v24 = *((void *)v6 + 1);
          if (v24) {
            goto LABEL_48;
          }
        }
        else if (*((unsigned char *)v6 + 23))
        {
LABEL_10:
          long long v7 = *v6;
          __str.__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
          *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v7;
          std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
          char v9 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
          if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::string::size_type size = __str.__r_.__value_.__l.__size_;
          }
          if (!size) {
            goto LABEL_13;
          }
          goto LABEL_51;
        }
      }
      uint64_t v26 = *(long long ***)(a1 + 7960);
      uint64_t v6 = *v26;
      uint64_t v27 = v26[1];
      if (v6 != v27)
      {
        while (*((_DWORD *)v6 + 30) != 1)
        {
          uint64_t v6 = (long long *)((char *)v6 + 152);
          if (v6 == v27) {
            goto LABEL_59;
          }
        }
      }
      if (v6 == v27)
      {
LABEL_59:
        memset(&__str, 0, sizeof(__str));
        char v9 = 0;
        goto LABEL_13;
      }
    }
    if ((*((char *)v6 + 23) & 0x80000000) == 0) {
      goto LABEL_10;
    }
    unint64_t v24 = *((void *)v6 + 1);
LABEL_48:
    sub_4200(&__str, *(void **)v6, v24);
    std::string::size_type v25 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    char v9 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v25 = __str.__r_.__value_.__l.__size_;
    }
    if (!v25)
    {
LABEL_13:
      if ((v9 & 0x80) == 0) {
        goto LABEL_14;
      }
LABEL_52:
      operator delete(__str.__r_.__value_.__l.__data_);
      goto LABEL_14;
    }
LABEL_51:
    std::string::operator=(v40, &__str);
    if ((*((unsigned char *)&__str.__r_.__value_.__s + 23) & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_52;
  }
LABEL_14:
  sub_594D4C((uint64_t)&__str, (uint64_t)v38);
  sub_878648(a2, (uint64_t)&__str, 1uLL);
  sub_576A58((uint64_t)&__str);
  sub_576A58((uint64_t)v38);
  long long v10 = v36;
  if (v36)
  {
    do
    {
      char v21 = *(char **)v10;
      uint64_t v22 = (void *)*((void *)v10 + 6);
      if (v22)
      {
        *((void *)v10 + 7) = v22;
        operator delete(v22);
      }
      if (v10[39] < 0) {
        operator delete(*((void **)v10 + 2));
      }
      operator delete(v10);
      long long v10 = v21;
    }
    while (v21);
  }
  long long v11 = v35;
  uint64_t v35 = 0;
  if (v11) {
    operator delete(v11);
  }
  uint64_t v12 = v34;
  if (v34 && !atomic_fetch_add(&v34->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  long long v13 = v33;
  if (v33)
  {
    do
    {
      long long v14 = (void *)*v13;
      sub_4F4B48((uint64_t)(v13 + 2));
      operator delete(v13);
      long long v13 = v14;
    }
    while (v14);
  }
  uint64_t v15 = v32;
  long long v32 = 0;
  if (v15) {
    operator delete(v15);
  }
  long long v16 = (void **)v30;
  if (v30)
  {
    unint64_t v17 = v31;
    char v18 = v30;
    if (v31 != v30)
    {
      do
      {
        if (*((char *)v17 - 1) < 0) {
          operator delete(*(v17 - 3));
        }
        v17 -= 3;
      }
      while (v17 != v16);
      char v18 = v30;
    }
    long long v31 = v16;
    operator delete(v18);
  }
}

void sub_85E624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_576A58((uint64_t)&STACK[0x360]);
  sub_855AB0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_85E69C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  sub_592590((uint64_t)va);
  sub_855AB0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_85E6B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_855AB0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_85E6D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 2180))
  {
    sub_8A1BB4(a1 + 2200, (uint64_t)&v13);
    uint64_t v12 = *(void *)(a1 + 2152) - *(void *)(a1 + 5144);
    sub_7C4620(a2, (uint64_t)&v13, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 417), 3, (void *)(a1 + 5176));
    sub_63841C(a2, 5);
    sub_2F99CC(v11, *(void *)(a1 + 2152), *(void *)(a1 + 5144));
    sub_638424(a2, v11);
    sub_5F3D48((uint64_t)v11, (uint64_t)&unk_25CA598);
    char v10 = 1;
    sub_5F6090((uint64_t *)v11, (uint64_t)&unk_25CA598, &v12, &v10);
    sub_638E74(a2, (uint64_t)v11);
    sub_4D4B58((uint64_t)v11);
    uint64_t v4 = v16;
    if (v16)
    {
      do
      {
        uint64_t v5 = (void *)*v4;
        sub_4F4B48((uint64_t)(v4 + 2));
        operator delete(v4);
        uint64_t v4 = v5;
      }
      while (v5);
    }
    uint64_t v6 = v15;
    uint64_t v15 = 0;
    if (v6) {
      operator delete(v6);
    }
    uint64_t v7 = v13;
    if (v13)
    {
      uint64_t v8 = v14;
      char v9 = v13;
      if (v14 != v13)
      {
        do
        {
          if (*((char *)v8 - 1) < 0) {
            operator delete(*(v8 - 3));
          }
          v8 -= 3;
        }
        while (v8 != v7);
        char v9 = v13;
      }
      long long v14 = v7;
      operator delete(v9);
    }
  }
  else
  {
    bzero((void *)a2, 0x438uLL);
    sub_5A9D64(a2);
    *(void *)(a2 + 816) = -1;
    *(_DWORD *)(a2 + 824) = 0;
    *(void *)(a2 + 832) = 0;
    *(void *)(a2 + 848) = 0;
    *(void *)(a2 + 840) = 0;
    *(_DWORD *)(a2 + 856) = 0;
    *(unsigned char *)(a2 + 864) = 2;
    *(_DWORD *)(a2 + 872) = -1;
    *(_OWORD *)(a2 + 880) = 0u;
    *(_OWORD *)(a2 + 896) = 0u;
    *(_OWORD *)(a2 + 912) = 0u;
    *(_OWORD *)(a2 + 928) = 0u;
    *(_OWORD *)(a2 + 944) = 0u;
    *(_OWORD *)(a2 + 960) = 0u;
    *(void *)(a2 + 976) = 0;
    *(_DWORD *)(a2 + 984) = 1065353216;
    *(unsigned char *)(a2 + 992) = 1;
    *(_DWORD *)(a2 + 1000) = 0;
    *(_OWORD *)(a2 + 1008) = 0u;
    *(_OWORD *)(a2 + 1024) = 0u;
    *(_OWORD *)(a2 + 1040) = 0u;
    *(void *)(a2 + 1056) = 0;
    *(_DWORD *)(a2 + 1064) = 1065353216;
    *(unsigned char *)(a2 + 1072) = 1;
  }
}

void sub_85E8C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4D4B58((uint64_t)va);
  sub_52F1E8(v3);
  sub_4D4880((void **)(v4 - 104));
  _Unwind_Resume(a1);
}

void sub_85E8EC(_Unwind_Exception *a1)
{
  sub_52F1E8(v1);
  sub_4D4880((void **)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_85E924(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = 5144;
  if (!*(unsigned char *)(a1 + 2180)) {
    uint64_t v4 = 2152;
  }
  uint64_t v18 = *(void *)(a1 + v4);
  sub_8A2410((uint64_t)&v14);
  sub_7C4620(a2, (uint64_t)&v14, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 418), 3, (void *)(a1 + 5176));
  sub_63841C(a2, 4);
  uint64_t v5 = 128;
  if (!*(unsigned char *)(a1 + 2176)) {
    uint64_t v5 = 136;
  }
  v13[0] = *(void *)(*(void *)(a1 + 2160) + v5);
  sub_638408(a2, &v18, v13);
  sub_5F3D48((uint64_t)v13, (uint64_t)&qword_25CA580);
  char v12 = 1;
  sub_5F6090(v13, (uint64_t)&qword_25CA580, &v18, &v12);
  sub_638E74(a2, (uint64_t)v13);
  sub_4D4B58((uint64_t)v13);
  uint64_t v6 = v17;
  if (v17)
  {
    do
    {
      uint64_t v7 = (void *)*v6;
      sub_4F4B48((uint64_t)(v6 + 2));
      operator delete(v6);
      uint64_t v6 = v7;
    }
    while (v7);
  }
  uint64_t v8 = v16;
  long long v16 = 0;
  if (v8) {
    operator delete(v8);
  }
  char v9 = v14;
  if (v14)
  {
    char v10 = v15;
    long long v11 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v10 - 1) < 0) {
          operator delete(*(v10 - 3));
        }
        v10 -= 3;
      }
      while (v10 != v9);
      long long v11 = v14;
    }
    uint64_t v15 = v9;
    operator delete(v11);
  }
}

void sub_85EAA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4D4B58((uint64_t)va);
  sub_52F1E8(v3);
  sub_4D4880((void **)(v4 - 112));
  _Unwind_Resume(a1);
}

void sub_85EAC8(_Unwind_Exception *a1)
{
  sub_52F1E8(v1);
  sub_4D4880((void **)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_85EAEC(_Unwind_Exception *a1)
{
  sub_4D4880((void **)(v1 - 112));
  _Unwind_Resume(a1);
}

void sub_85EB00(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 2181))
  {
    uint64_t v4 = *(void *)(a1 + 2160);
    uint64_t v5 = (uint64_t *)(v4 + 128);
    uint64_t v6 = (uint64_t *)(v4 + 136);
    if (*(unsigned char *)(a1 + 2176)) {
      uint64_t v7 = v5;
    }
    else {
      uint64_t v7 = v6;
    }
  }
  else
  {
    uint64_t v7 = (uint64_t *)(a1 + 2152);
  }
  uint64_t v37 = *v7;
  sub_8A1A6C(a1 + 2200, (uint64_t)&v32);
  sub_7C47A4(a2, (uint64_t)&v32);
  uint64_t v8 = nullsub_1(&v32);
  sub_638D90(a2, v8);
  sub_7C43E4(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 418));
  char v9 = (unsigned char *)(a1 + 5184);
  if (*(unsigned char *)(a1 + 7908)) {
    uint64_t v10 = *(void *)(a1 + 5344);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v31 = v10;
  sub_638408(a2, &v37, &v31);
  sub_638A00(a2, (void *)(a1 + 5176));
  sub_8A3EBC(a1 + 2200, (uint64_t)&v27);
  if (sub_65FC8(&v27)) {
    sub_7C47B0(a2, (uint64_t)&v27);
  }
  if (*v9) {
    int v11 = 14;
  }
  else {
    int v11 = 6;
  }
  sub_63841C(a2, v11);
  if (!*v9 && !*(unsigned char *)(a1 + 5185))
  {
    sub_5F3D48((uint64_t)v26, (uint64_t)&qword_25CA580);
    char v25 = 1;
    sub_5F6090(v26, (uint64_t)&qword_25CA580, &v37, &v25);
    sub_638E74(a2, (uint64_t)v26);
    sub_4D4B58((uint64_t)v26);
  }
  char v12 = v30;
  if (v30)
  {
    do
    {
      long long v13 = (void *)*v12;
      sub_4F4B48((uint64_t)(v12 + 2));
      operator delete(v12);
      char v12 = v13;
    }
    while (v13);
  }
  long long v14 = v29;
  unint64_t v29 = 0;
  if (v14) {
    operator delete(v14);
  }
  uint64_t v15 = v27;
  if (v27)
  {
    long long v16 = v28;
    unint64_t v17 = v27;
    if (v28 != v27)
    {
      do
      {
        if (*((char *)v16 - 1) < 0) {
          operator delete(*(v16 - 3));
        }
        v16 -= 3;
      }
      while (v16 != v15);
      unint64_t v17 = v27;
    }
    unint64_t v28 = v15;
    operator delete(v17);
  }
  uint64_t v18 = v36;
  if (v36 && !atomic_fetch_add(&v36->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
  }
  uint64_t v19 = v35;
  if (v35)
  {
    do
    {
      std::string::size_type v20 = (void *)*v19;
      sub_4F4B48((uint64_t)(v19 + 2));
      operator delete(v19);
      uint64_t v19 = v20;
    }
    while (v20);
  }
  char v21 = v34;
  long long v34 = 0;
  if (v21) {
    operator delete(v21);
  }
  uint64_t v22 = v32;
  if (v32)
  {
    unint64_t v23 = v33;
    unint64_t v24 = v32;
    if (v33 != v32)
    {
      do
      {
        if (*((char *)v23 - 1) < 0) {
          operator delete(*(v23 - 3));
        }
        v23 -= 3;
      }
      while (v23 != v22);
      unint64_t v24 = v32;
    }
    uint64_t v33 = v22;
    operator delete(v24);
  }
}

void sub_85EDC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31)
{
  sub_4D4B58((uint64_t)&a11);
  sub_4D4880(&a31);
  sub_52F1E8(v31);
  sub_4F31D0((void **)(v32 - 160));
  _Unwind_Resume(a1);
}

void sub_85EE38(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 2180))
  {
    sub_8A4758(a1 + 2200, (uint64_t)&v18);
    sub_639530(a2, (uint64_t)&v18, (void *)(a1 + 5176), 0, 0, 1);
    sub_63841C(a2, 41);
    uint64_t v17 = *(void *)(a1 + 2152) - *(void *)(a1 + 5176);
    sub_638408(a2, &v17, (void *)(a1 + 5192));
    sub_639538(a2, 4);
    uint64_t v4 = v22;
    if (v22 && !atomic_fetch_add(&v22->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    uint64_t v5 = v21;
    if (v21)
    {
      do
      {
        uint64_t v6 = (void *)*v5;
        sub_4F4B48((uint64_t)(v5 + 2));
        operator delete(v5);
        uint64_t v5 = v6;
      }
      while (v6);
    }
    uint64_t v7 = __p;
    long long __p = 0;
    if (v7) {
      operator delete(v7);
    }
    uint64_t v8 = (void **)v18;
    if (v18)
    {
      char v9 = v19;
      uint64_t v10 = v18;
      if (v19 != v18)
      {
        do
        {
          if (*((char *)v9 - 1) < 0) {
            operator delete(*(v9 - 3));
          }
          v9 -= 3;
        }
        while (v9 != v8);
        uint64_t v10 = v18;
      }
      uint64_t v19 = v8;
      operator delete(v10);
    }
  }
  else
  {
    *(void *)(a2 + 400) = 0;
    *(_OWORD *)(a2 + 368) = 0u;
    *(_OWORD *)(a2 + 384) = 0u;
    *(_OWORD *)(a2 + 336) = 0u;
    *(_OWORD *)(a2 + 352) = 0u;
    *(_OWORD *)(a2 + 304) = 0u;
    *(_OWORD *)(a2 + 320) = 0u;
    *(_OWORD *)(a2 + 272) = 0u;
    *(_OWORD *)(a2 + 288) = 0u;
    *(_OWORD *)(a2 + 224) = 0u;
    *(_OWORD *)(a2 + 240) = 0u;
    *(_OWORD *)(a2 + 192) = 0u;
    *(_OWORD *)(a2 + 208) = 0u;
    *(_OWORD *)(a2 + 160) = 0u;
    *(_OWORD *)(a2 + 176) = 0u;
    *(_OWORD *)(a2 + 128) = 0u;
    *(_OWORD *)(a2 + 144) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 112) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_DWORD *)a2 = -1;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 8) = 0;
    *(_DWORD *)(a2 + 32) = 0;
    int64x2_t v11 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
    *(int64x2_t *)(a2 + 40) = v11;
    *(_DWORD *)(a2 + 56) = 0x7FFFFFFF;
    *(int64x2_t *)(a2 + 64) = v11;
    *(_DWORD *)(a2 + 80) = 0x7FFFFFFF;
    *(_DWORD *)(a2 + 88) = 0x7FFFFFFF;
    *(void *)(a2 + 92) = 0x7FFFFFFF7FFFFFFFLL;
    *(void *)(a2 + 112) = 0x8000000080000000;
    *(_OWORD *)(a2 + 120) = 0u;
    *(_OWORD *)(a2 + 136) = 0u;
    *(_OWORD *)(a2 + 152) = 0u;
    *(unsigned char *)(a2 + 168) = 0;
    *(void *)(a2 + 172) = 0x8000000080000000;
    *(_DWORD *)(a2 + 180) = 0x7FFFFFFF;
    *(_DWORD *)(a2 + 192) = -1;
    *(void *)(a2 + 208) = 0x7FFFFFFFFFFFFFFFLL;
    *(_DWORD *)(a2 + 216) = 0x7FFFFFFF;
    *(void *)(a2 + 220) = 0x7FFFFFFF7FFFFFFFLL;
    __asm { FMOV            V1.2D, #-1.0 }
    *(_OWORD *)(a2 + 240) = _Q1;
    *(_OWORD *)(a2 + 256) = 0u;
    *(void *)(a2 + 256) = 0;
    *(void *)(a2 + 264) = 0;
    *(void *)(a2 + 272) = 0;
    *(unsigned char *)(a2 + 280) = 1;
    *(void *)(a2 + 296) = 0;
    *(void *)(a2 + 304) = 0;
    *(void *)(a2 + 288) = 0;
    *(_WORD *)(a2 + 312) = 0;
    *(_DWORD *)(a2 + 316) = -1;
    *(void *)(a2 + 328) = 0x7FFFFFFFFFFFFFFFLL;
    *(_DWORD *)(a2 + 340) = -1;
    *(void *)(a2 + 344) = -1;
    *(_DWORD *)(a2 + 356) = 1;
    *(_DWORD *)(a2 + 384) = 0;
    *(void *)(a2 + 360) = 0;
    *(void *)(a2 + 368) = 0;
    *(void *)(a2 + 376) = 0;
    *(void *)(a2 + 388) = 0x7FFFFFFF7FFFFFFFLL;
    *(_DWORD *)(a2 + 400) = -1;
  }
}

void sub_85F0A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_639B78(v2);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_85F0D4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v3 = *(unsigned __int8 *)(a1 + 2181);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  if (!v3) {
    return;
  }
  sub_809D84((uint64_t)&v41);
  sub_639530((uint64_t)v46, (uint64_t)&v41, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C((uint64_t)v46, 42);
  uint64_t v5 = *(void *)(a1 + 2160);
  if (*(unsigned char *)(v5 + 1992))
  {
    uint64_t v6 = sub_62CCC0(v5);
    uint64_t v7 = sub_62BD94(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    if (v6 + v7 <= *(void *)(a1 + 5192))
    {
      uint64_t v9 = v6;
      do
      {
        sub_8506D4(a1, v9, *(void *)(*(void *)(a1 + 2160) + 2000) + v9, (uint64_t)v31);
        if (sub_564868(v31) && v31[0] + v7 <= *(void *)(a1 + 5192)) {
          uint64_t v9 = v31[0];
        }
        uint64_t v29 = v9 + v7;
        uint64_t v30 = v9;
        sub_638408((uint64_t)v46, &v29, &v30);
        sub_69200((uint64_t)v46, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 422));
        sub_639538((uint64_t)v46, 3);
        unint64_t v10 = a2[1];
        if (v10 >= a2[2])
        {
          uint64_t v11 = sub_75796C(a2, (uint64_t)v46);
        }
        else
        {
          __n128 v8 = sub_757B28((uint64_t)(a2 + 2), a2[1], (uint64_t)v46);
          uint64_t v11 = v10 + 408;
          a2[1] = v10 + 408;
        }
        a2[1] = v11;
        uint64_t v12 = v30;
        if (v40 < 0)
        {
          operator delete(__p);
          if ((v38 & 0x80000000) == 0)
          {
LABEL_14:
            if ((v36 & 0x80000000) == 0) {
              goto LABEL_15;
            }
            goto LABEL_20;
          }
        }
        else if ((v38 & 0x80000000) == 0)
        {
          goto LABEL_14;
        }
        operator delete(v37);
        if ((v36 & 0x80000000) == 0)
        {
LABEL_15:
          if ((v34 & 0x80000000) == 0) {
            goto LABEL_16;
          }
          goto LABEL_21;
        }
LABEL_20:
        operator delete(v35);
        if ((v34 & 0x80000000) == 0)
        {
LABEL_16:
          if (v32 < 0) {
            goto LABEL_22;
          }
          goto LABEL_5;
        }
LABEL_21:
        operator delete(v33);
        if (v32 < 0) {
LABEL_22:
        }
          operator delete((void *)v31[1]);
LABEL_5:
        uint64_t v9 = v12 + v6;
      }
      while (v9 + v7 <= *(void *)(a1 + 5192));
    }
  }
  else
  {
    uint64_t v13 = 128;
    if (!*(unsigned char *)(a1 + 2176)) {
      uint64_t v13 = 136;
    }
    v31[0] = *(void *)(v5 + v13);
    sub_638408((uint64_t)v46, (void *)(a1 + 5192), v31);
    unint64_t v14 = a2[1];
    if (v14 >= a2[2])
    {
      a2[1] = sub_75796C(a2, (uint64_t)v46);
      uint64_t v15 = v57;
      if (!v57) {
        goto LABEL_29;
      }
      goto LABEL_28;
    }
    __n128 v8 = sub_757B28((uint64_t)(a2 + 2), a2[1], (uint64_t)v46);
    a2[1] = v14 + 408;
    a2[1] = v14 + 408;
  }
  uint64_t v15 = v57;
  if (v57)
  {
LABEL_28:
    long long v58 = v15;
    operator delete(v15);
  }
LABEL_29:
  if (v55)
  {
    long long v56 = v55;
    operator delete(v55);
  }
  long long v16 = (void **)v53;
  if (v53)
  {
    uint64_t v17 = v54;
    uint64_t v18 = v53;
    if (v54 != v53)
    {
      do
        uint64_t v17 = sub_4F31D0(v17 - 13);
      while (v17 != v16);
      uint64_t v18 = v53;
    }
    uint64_t v54 = v16;
    operator delete(v18);
  }
  if (v51)
  {
    long long v52 = v51;
    operator delete(v51);
  }
  if (v49)
  {
    long long v50 = v49;
    operator delete(v49);
  }
  uint64_t v19 = v47;
  if (v47)
  {
    uint64_t v20 = (uint64_t)v48;
    char v21 = v47;
    if (v48 != v47)
    {
      do
        uint64_t v20 = sub_4D4B58(v20 - 160);
      while ((void *)v20 != v19);
      char v21 = v47;
    }
    unint64_t v48 = v19;
    operator delete(v21);
  }
  uint64_t v22 = v45;
  if (v45 && !atomic_fetch_add(&v45->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *, __n128))v22->__on_zero_shared)(v22, v8);
    std::__shared_weak_count::__release_weak(v22);
  }
  unint64_t v23 = v44;
  if (v44)
  {
    do
    {
      unint64_t v24 = (void *)*v23;
      sub_4F4B48((uint64_t)(v23 + 2));
      operator delete(v23);
      unint64_t v23 = v24;
    }
    while (v24);
  }
  char v25 = v43;
  uint64_t v43 = 0;
  if (v25) {
    operator delete(v25);
  }
  uint64_t v26 = (void **)v41;
  if (v41)
  {
    uint64_t v27 = v42;
    unint64_t v28 = v41;
    if (v42 != v41)
    {
      do
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      while (v27 != v26);
      unint64_t v28 = v41;
    }
    long long v42 = v26;
    operator delete(v28);
  }
}

void sub_85F4F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  v47[1] = v48;
  sub_639B78(&a47);
  sub_4F31D0(&a34);
  sub_591DFC(v47);
  _Unwind_Resume(a1);
}

void sub_85F590(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_8A495C((unsigned char *)(a1 + 2200), (uint64_t *)&v13);
  sub_639530(a2, (uint64_t)&v13, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a2, 29);
  v12.n128_u64[0] = sub_8509B0(a1);
  v12.n128_u64[1] = v4;
  sub_638424(a2, &v12);
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 420));
  sub_638448(a2, *(void *)(a1 + 2152));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  uint64_t v5 = v17;
  if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  uint64_t v6 = v16;
  if (v16)
  {
    do
    {
      uint64_t v7 = (void *)*v6;
      sub_4F4B48((uint64_t)(v6 + 2));
      operator delete(v6);
      uint64_t v6 = v7;
    }
    while (v7);
  }
  __n128 v8 = __p;
  long long __p = 0;
  if (v8) {
    operator delete(v8);
  }
  uint64_t v9 = (void **)v13;
  if (v13)
  {
    unint64_t v10 = v14;
    uint64_t v11 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v10 - 1) < 0) {
          operator delete(*(v10 - 3));
        }
        v10 -= 3;
      }
      while (v10 != v9);
      uint64_t v11 = v13;
    }
    unint64_t v14 = v9;
    operator delete(v11);
  }
}

void sub_85F708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_85F71C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_85F73C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 2160);
  int v5 = *(_DWORD *)(v4 + 164);
  int v6 = v5 / 10;
  int v7 = v5 % 10;
  if (v5 < 0) {
    char v8 = -5;
  }
  else {
    char v8 = 5;
  }
  double v9 = *(double *)(v4 + 2008)
     / 3.6
     * (double)(int)(v6 + (((103 * (char)(v8 + v7)) >> 15) & 1) + ((103 * (char)(v8 + v7)) >> 10))
     * 100.0;
  if (v9 >= 0.0)
  {
    double v10 = *(double *)(v4 + 2008)
        / 3.6
        * (double)(int)(v6 + (((103 * (char)(v8 + v7)) >> 15) & 1) + ((103 * (char)(v8 + v7)) >> 10))
        * 100.0;
    if (v9 >= 4.50359963e15) {
      goto LABEL_12;
    }
    uint64_t v11 = (uint64_t)(v9 + v9) + 1;
  }
  else
  {
    double v10 = *(double *)(v4 + 2008)
        / 3.6
        * (double)(int)(v6 + (((103 * (char)(v8 + v7)) >> 15) & 1) + ((103 * (char)(v8 + v7)) >> 10))
        * 100.0;
    if (v9 <= -4.50359963e15) {
      goto LABEL_12;
    }
    uint64_t v11 = (uint64_t)(v9 + v9);
    if (v11 >= 1) {
      --v11;
    }
  }
  double v10 = (double)(v11 >> 1);
LABEL_12:
  if (v10 >= 9.22337204e18)
  {
    uint64_t v13 = 0x7FFFFFFFFFFFFFFELL;
    goto LABEL_23;
  }
  if (v9 >= 0.0)
  {
    if (v9 < 4.50359963e15)
    {
      uint64_t v12 = (uint64_t)(v9 + v9) + 1;
LABEL_21:
      double v9 = (double)(v12 >> 1);
    }
  }
  else if (v9 > -4.50359963e15)
  {
    uint64_t v12 = (uint64_t)(v9 + v9);
    if (v12 >= 1) {
      --v12;
    }
    goto LABEL_21;
  }
  uint64_t v13 = (uint64_t)v9;
LABEL_23:
  if (v13 >= *(void *)(a1 + 5192)) {
    uint64_t v14 = *(void *)(a1 + 5192);
  }
  else {
    uint64_t v14 = v13;
  }
  sub_8A495C((unsigned char *)(a1 + 2200), (uint64_t *)&v24);
  sub_639530(a2, (uint64_t)&v24, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a2, 29);
  sub_638430(a2, (void *)(a1 + 5192));
  if (*(void *)(a1 + 5192) <= v14) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = v14;
  }
  uint64_t v23 = v15;
  sub_63843C(a2, &v23);
  sub_638448(a2, *(void *)(a1 + 2152));
  long long v16 = v28;
  if (v28 && !atomic_fetch_add(&v28->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  uint64_t v17 = v27;
  if (v27)
  {
    do
    {
      uint64_t v18 = (void *)*v17;
      sub_4F4B48((uint64_t)(v17 + 2));
      operator delete(v17);
      uint64_t v17 = v18;
    }
    while (v18);
  }
  uint64_t v19 = __p;
  long long __p = 0;
  if (v19) {
    operator delete(v19);
  }
  uint64_t v20 = (void **)v24;
  if (v24)
  {
    char v21 = v25;
    uint64_t v22 = v24;
    if (v25 != v24)
    {
      do
      {
        if (*((char *)v21 - 1) < 0) {
          operator delete(*(v21 - 3));
        }
        v21 -= 3;
      }
      while (v21 != v20);
      uint64_t v22 = v24;
    }
    char v25 = v20;
    operator delete(v22);
  }
}

void sub_85F9F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_639B78(v2);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_85FA24(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_8A5154(a1 + 2200);
  sub_639530(a2, (uint64_t)&v16, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a2, 31);
  uint64_t v4 = sub_62B9C8(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v5 = sub_62BA34(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (*(unsigned char *)(a1 + 7911))
  {
    int v6 = (uint64_t *)(a1 + 7888);
  }
  else if (*(unsigned char *)(a1 + 7912))
  {
    int v6 = (uint64_t *)(a1 + 7896);
  }
  else if (*(unsigned char *)(a1 + 7906))
  {
    int v6 = (uint64_t *)(a1 + 7864);
  }
  else
  {
    int v6 = (uint64_t *)(a1 + 7872);
  }
  if (*(unsigned char *)(a1 + 2176)) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = v5;
  }
  sub_2F99CC(&v21, v7, *v6);
  __n128 v15 = v21;
  sub_638424(a2, &v15);
  sub_638448(a2, *(void *)(a1 + 2152));
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 421));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  char v8 = v20;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  double v9 = v19;
  if (v19)
  {
    do
    {
      double v10 = (void *)*v9;
      sub_4F4B48((uint64_t)(v9 + 2));
      operator delete(v9);
      double v9 = v10;
    }
    while (v10);
  }
  uint64_t v11 = __p;
  long long __p = 0;
  if (v11) {
    operator delete(v11);
  }
  uint64_t v12 = (void **)v16;
  if (v16)
  {
    uint64_t v13 = v17;
    uint64_t v14 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v13 - 1) < 0) {
          operator delete(*(v13 - 3));
        }
        v13 -= 3;
      }
      while (v13 != v12);
      uint64_t v14 = v16;
    }
    uint64_t v17 = v12;
    operator delete(v14);
  }
}

void sub_85FC20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_85FC34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_85FC54(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (unsigned char *)(a1 + 6488);
  if (*(unsigned char *)(a1 + 7915))
  {
    uint64_t v5 = (unsigned char *)(a1 + 2200);
    if (v4[1418]) {
      sub_8A677C(v5, (uint64_t)&v18);
    }
    else {
      sub_8A5AE0((std::string::size_type)v5, (uint64_t)&v18);
    }
  }
  else
  {
    sub_8A568C(a1 + 2200, (uint64_t)&v18);
  }
  sub_639530(a2, (uint64_t)&v18, (void *)(a1 + 5176), 0, 0, 1);
  if (v4[1418]) {
    int v6 = 36;
  }
  else {
    int v6 = 35;
  }
  sub_63841C(a2, v6);
  uint64_t v7 = sub_62C410(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v8 = *(void *)(a1 + 6112);
  if (v8 + v7 >= *(void *)(a1 + 5192)) {
    uint64_t v9 = *(void *)(a1 + 5192);
  }
  else {
    uint64_t v9 = v8 + v7;
  }
  if (*v4 && *(void *)(a1 + 6304) < v9) {
    uint64_t v9 = *(void *)(a1 + 6304);
  }
  sub_2F99CC(&v23, v9, v8);
  __n128 v17 = v23;
  sub_638424(a2, &v17);
  sub_638448(a2, *(void *)(a1 + 2152));
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 428));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  double v10 = v22;
  if (v22 && !atomic_fetch_add(&v22->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  uint64_t v11 = v21;
  if (v21)
  {
    do
    {
      uint64_t v12 = (void *)*v11;
      sub_4F4B48((uint64_t)(v11 + 2));
      operator delete(v11);
      uint64_t v11 = v12;
    }
    while (v12);
  }
  uint64_t v13 = __p;
  long long __p = 0;
  if (v13) {
    operator delete(v13);
  }
  uint64_t v14 = (void **)v18;
  if (v18)
  {
    __n128 v15 = v19;
    long long v16 = v18;
    if (v19 != v18)
    {
      do
      {
        if (*((char *)v15 - 1) < 0) {
          operator delete(*(v15 - 3));
        }
        v15 -= 3;
      }
      while (v15 != v14);
      long long v16 = v18;
    }
    uint64_t v19 = v14;
    operator delete(v16);
  }
}

void sub_85FE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_85FE60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_85FE80(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_8A5324(a1 + 2200, (uint64_t)&v16);
  sub_639530(a2, (uint64_t)&v16, (void *)(a1 + 5176), 0, 0, 1);
  if (*(unsigned char *)(a1 + 7906)) {
    int v4 = 34;
  }
  else {
    int v4 = 33;
  }
  sub_63841C(a2, v4);
  uint64_t v5 = sub_62C62C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (*(void *)(a1 + 5192) >= v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = *(void *)(a1 + 5192);
  }
  if (*(unsigned char *)(a1 + 6296)) {
    uint64_t v6 = *(void *)(a1 + 6112);
  }
  uint64_t v7 = 7864;
  if (!*(unsigned char *)(a1 + 7906)) {
    uint64_t v7 = 7872;
  }
  sub_2F99CC(&v21, v6, *(void *)(a1 + v7));
  __n128 v15 = v21;
  sub_638424(a2, &v15);
  sub_638448(a2, *(void *)(a1 + 2152));
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 427));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  uint64_t v8 = v20;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  uint64_t v9 = v19;
  if (v19)
  {
    do
    {
      double v10 = (void *)*v9;
      sub_4F4B48((uint64_t)(v9 + 2));
      operator delete(v9);
      uint64_t v9 = v10;
    }
    while (v10);
  }
  uint64_t v11 = __p;
  long long __p = 0;
  if (v11) {
    operator delete(v11);
  }
  uint64_t v12 = (void **)v16;
  if (v16)
  {
    uint64_t v13 = v17;
    uint64_t v14 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v13 - 1) < 0) {
          operator delete(*(v13 - 3));
        }
        v13 -= 3;
      }
      while (v13 != v12);
      uint64_t v14 = v16;
    }
    __n128 v17 = v12;
    operator delete(v14);
  }
}

void sub_860054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_860068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_860088(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = (unsigned __int8 *)(a1 + 5524);
  int v5 = *(unsigned __int8 *)(a1 + 7906);
  std::string::size_type v6 = a1 + 2200;
  uint64_t v7 = a1 + 5344;
  if (v5) {
    sub_8A8A68(v6, v7, (uint64_t)&v20);
  }
  else {
    sub_8A8EA4(v6, v7, (uint64_t)&v20);
  }
  sub_639530(a2, (uint64_t)&v20, (void *)(a1 + 5176), 0, 0, 1);
  if (v4[2382]) {
    int v8 = 40;
  }
  else {
    int v8 = 39;
  }
  sub_63841C(a2, v8);
  uint64_t v9 = sub_62C554(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188), *v4);
  uint64_t v10 = *(void *)(a1 + 5344);
  if (v10 + v9 >= *(void *)(a1 + 5192)) {
    uint64_t v11 = *(void *)(a1 + 5192);
  }
  else {
    uint64_t v11 = v10 + v9;
  }
  if (v4[196] && *(void *)(a1 + 5536) < v11) {
    uint64_t v11 = *(void *)(a1 + 5536);
  }
  sub_2F99CC(&v25, v11, v10);
  __n128 v19 = v25;
  sub_638424(a2, &v19);
  sub_638448(a2, *(void *)(a1 + 2152));
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 429));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  sub_638A0C(a2);
  uint64_t v12 = v24;
  if (v24 && !atomic_fetch_add(&v24->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  uint64_t v13 = v23;
  if (v23)
  {
    do
    {
      uint64_t v14 = (void *)*v13;
      sub_4F4B48((uint64_t)(v13 + 2));
      operator delete(v13);
      uint64_t v13 = v14;
    }
    while (v14);
  }
  __n128 v15 = __p;
  long long __p = 0;
  if (v15) {
    operator delete(v15);
  }
  long long v16 = (void **)v20;
  if (v20)
  {
    __n128 v17 = v21;
    uint64_t v18 = v20;
    if (v21 != v20)
    {
      do
      {
        if (*((char *)v17 - 1) < 0) {
          operator delete(*(v17 - 3));
        }
        v17 -= 3;
      }
      while (v17 != v16);
      uint64_t v18 = v20;
    }
    __n128 v21 = v16;
    operator delete(v18);
  }
}

void sub_86027C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_860290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_8602B0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = (unsigned char *)(a1 + 5184);
  sub_8A5F40(a1 + 2200, 1, *(unsigned __int8 *)(a1 + 7909), 0, (uint64_t)&v15);
  sub_639530(a2, (uint64_t)&v15, (void *)(a1 + 5176), 0, 0, 1);
  sub_2F99CC(&v20, *(void *)(a1 + 7872), 0);
  __n128 v14 = v20;
  sub_638424(a2, &v14);
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 424));
  sub_6396C0(a2, 1);
  if (*v4)
  {
    int v5 = 80;
  }
  else if (v4[2725])
  {
    int v5 = 45;
  }
  else
  {
    int v5 = 44;
  }
  sub_63841C(a2, v5);
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  if (v4[2]) {
    sub_639538(a2, 3);
  }
  if (sub_638A2C(a2) == *(void *)(a1 + 5176)) {
    sub_6396D0(a2, 1);
  }
  if (!v4[2725])
  {
    unsigned int v6 = sub_62BFB0(*(unsigned int **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    sub_6393D0(a2, v6, 0);
  }
  uint64_t v7 = v19;
  if (v19 && !atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  int v8 = v18;
  if (v18)
  {
    do
    {
      uint64_t v9 = (void *)*v8;
      sub_4F4B48((uint64_t)(v8 + 2));
      operator delete(v8);
      int v8 = v9;
    }
    while (v9);
  }
  uint64_t v10 = __p;
  long long __p = 0;
  if (v10) {
    operator delete(v10);
  }
  uint64_t v11 = (void **)v15;
  if (v15)
  {
    uint64_t v12 = v16;
    uint64_t v13 = v15;
    if (v16 != v15)
    {
      do
      {
        if (*((char *)v12 - 1) < 0) {
          operator delete(*(v12 - 3));
        }
        v12 -= 3;
      }
      while (v12 != v11);
      uint64_t v13 = v15;
    }
    long long v16 = v11;
    operator delete(v13);
  }
}

void sub_8604C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_860508(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v8 = (unsigned char *)(a1 + 5184);
  sub_8A9978(a1 + 2200, a2, a3, *(unsigned __int8 *)(a1 + 7909), (uint64_t *)&__p);
  sub_6393C8(a4, (uint64_t *)&__p, 0, 0, 1);
  sub_638A00(a4, (void *)(a1 + 5176));
  sub_2F99CC(&v17, *(void *)(a1 + 7872), 0);
  __n128 v14 = v17;
  sub_638424(a4, &v14);
  sub_69200(a4, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 424));
  sub_6396C0(a4, 1);
  sub_639724(a4);
  if (*v8)
  {
    int v9 = 80;
  }
  else if (v8[2725])
  {
    int v9 = 45;
  }
  else
  {
    int v9 = 44;
  }
  sub_63841C(a4, v9);
  if (sub_855B3C(a1, a4)) {
    sub_6396C8(a4, 1);
  }
  if (!v8[2725])
  {
    if (*(unsigned char *)(a1 + 2179) && v8[2617]) {
      unsigned int v10 = sub_62C088(*(unsigned int **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    }
    else {
      unsigned int v10 = sub_62BFB0(*(unsigned int **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    }
    sub_6393D0(a4, v10, 0);
  }
  if (sub_638A2C(a4) == *(void *)(a1 + 5176)) {
    sub_6396D0(a4, 1);
  }
  sub_638448(a4, *(void *)(a1 + 2152));
  sub_638458(a4, *(void *)(*(void *)(a2 + 1064) + 2400 * a3 + 872));
  uint64_t v11 = (void **)__p;
  if (__p)
  {
    uint64_t v12 = v16;
    uint64_t v13 = __p;
    if (v16 != __p)
    {
      do
        uint64_t v12 = sub_4F31D0(v12 - 13);
      while (v12 != v11);
      uint64_t v13 = __p;
    }
    long long v16 = v11;
    operator delete(v13);
  }
}

void sub_8606DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_5920E0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86071C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = (unsigned char *)(a1 + 5186);
  uint64_t v5 = sub_856CCC(*(void **)(a1 + 7968), *(void *)(a1 + 6856));
  std::string::size_type v6 = a1 + 2200;
  if (v4[2720]) {
    sub_8A713C(v6, v5, (uint64_t)&v16);
  }
  else {
    sub_8A6DC8(v6, v5, (uint64_t)&v16);
  }
  sub_639530(a2, (uint64_t)&v16, (void *)(a1 + 5176), 0, 0, 1);
  sub_2F99CC(&v21, *(void *)(a1 + 7896), *(void *)(a1 + 6688));
  __n128 v15 = v21;
  sub_638424(a2, &v15);
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 424));
  sub_6396C0(a2, 1);
  if (v4[2720]) {
    int v7 = 38;
  }
  else {
    int v7 = 37;
  }
  sub_63841C(a2, v7);
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  if (*v4) {
    sub_639538(a2, 3);
  }
  if (sub_638A2C(a2) == *(void *)(a1 + 5176)) {
    sub_6396D0(a2, 1);
  }
  int v8 = v20;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  int v9 = v19;
  if (v19)
  {
    do
    {
      unsigned int v10 = (void *)*v9;
      sub_4F4B48((uint64_t)(v9 + 2));
      operator delete(v9);
      int v9 = v10;
    }
    while (v10);
  }
  uint64_t v11 = __p;
  long long __p = 0;
  if (v11) {
    operator delete(v11);
  }
  uint64_t v12 = (void **)v16;
  if (v16)
  {
    uint64_t v13 = v17;
    __n128 v14 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v13 - 1) < 0) {
          operator delete(*(v13 - 3));
        }
        v13 -= 3;
      }
      while (v13 != v12);
      __n128 v14 = v16;
    }
    __n128 v17 = v12;
    operator delete(v14);
  }
}

void sub_860918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_860950(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_8A74CC(a1 + 2200, (uint64_t)&v15);
  sub_639530(a2, (uint64_t)&v15, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a2, 70);
  uint64_t v4 = sub_62CA64(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (*(void *)(a1 + 7072) + v4 >= *(void *)(a1 + 5192)) {
    uint64_t v5 = *(void *)(a1 + 5192);
  }
  else {
    uint64_t v5 = *(void *)(a1 + 7072) + v4;
  }
  std::string::size_type v6 = (uint64_t *)(a1 + 7256);
  if (sub_564868((void *)(a1 + 7256)) && *v6 < v5) {
    uint64_t v5 = *v6;
  }
  sub_2F99CC(&v20, v5, *(void *)(a1 + 7072));
  __n128 v14 = v20;
  sub_638424(a2, &v14);
  sub_638448(a2, *(void *)(a1 + 2152));
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 429));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  int v7 = v19;
  if (v19 && !atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  int v8 = v18;
  if (v18)
  {
    do
    {
      int v9 = (void *)*v8;
      sub_4F4B48((uint64_t)(v8 + 2));
      operator delete(v8);
      int v8 = v9;
    }
    while (v9);
  }
  unsigned int v10 = __p;
  long long __p = 0;
  if (v10) {
    operator delete(v10);
  }
  uint64_t v11 = (void **)v15;
  if (v15)
  {
    uint64_t v12 = v16;
    uint64_t v13 = v15;
    if (v16 != v15)
    {
      do
      {
        if (*((char *)v12 - 1) < 0) {
          operator delete(*(v12 - 3));
        }
        v12 -= 3;
      }
      while (v12 != v11);
      uint64_t v13 = v15;
    }
    long long v16 = v11;
    operator delete(v13);
  }
}

void sub_860B1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_860B30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_860B50(void *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v3 = a1[930];
  uint64_t v4 = a1[931];
  if (v3 != v4)
  {
    uint64_t v6 = (uint64_t)(a1 + 542);
    int v7 = a1 + 647;
    do
    {
      if ((sub_68346C(v3) & 1) != 0 && (sub_684694(v3) & 1) == 0 && (sub_684668(v3) & 1) == 0)
      {
        sub_676EA8(v6, v3, &v25);
        int v8 = v25;
        if (v25 != v26)
        {
          if (sub_637DD8(v25))
          {
            sub_6393C8((uint64_t)v27, (uint64_t *)&v25, 0, 0, 1);
            sub_638A00((uint64_t)v27, v7);
            if (sub_683424(v3) && sub_685CD8(v3) > *v7 && (uint64_t v9 = sub_685CD8(v3), v9 < sub_685CEC(v3))) {
              uint64_t v10 = sub_685CD8(v3) - *v7;
            }
            else {
              uint64_t v10 = sub_685CEC(v3);
            }
            uint64_t v24 = v10;
            sub_638430((uint64_t)v27, &v24);
            sub_685CEC(v3);
            uint64_t v23 = v11;
            sub_63843C((uint64_t)v27, &v23);
            sub_69200((uint64_t)v27, *(unsigned __int8 *)(a1[270] + 423));
            if (sub_855B3C((uint64_t)a1, (uint64_t)v27)) {
              sub_6396C8((uint64_t)v27, 1);
            }
            int v12 = sub_6835F8(v3);
            sub_63841C((uint64_t)v27, v12);
            unint64_t v13 = a2[1];
            if (v13 >= a2[2])
            {
              uint64_t v14 = sub_75796C(a2, (uint64_t)v27);
            }
            else
            {
              sub_757B28((uint64_t)(a2 + 2), a2[1], (uint64_t)v27);
              uint64_t v14 = v13 + 408;
              a2[1] = v13 + 408;
            }
            a2[1] = v14;
            if (__p)
            {
              int v39 = __p;
              operator delete(__p);
            }
            if (v36)
            {
              uint64_t v37 = v36;
              operator delete(v36);
            }
            __n128 v15 = (void **)v34;
            if (v34)
            {
              long long v16 = v35;
              __n128 v17 = v34;
              if (v35 != v34)
              {
                do
                  long long v16 = sub_4F31D0(v16 - 13);
                while (v16 != v15);
                __n128 v17 = v34;
              }
              uint64_t v35 = v15;
              operator delete(v17);
            }
            if (v32)
            {
              uint64_t v33 = v32;
              operator delete(v32);
            }
            if (v30)
            {
              uint64_t v31 = v30;
              operator delete(v30);
            }
            uint64_t v18 = v28;
            if (v28)
            {
              uint64_t v19 = (uint64_t)v29;
              __n128 v20 = v28;
              if (v29 != v28)
              {
                do
                  uint64_t v19 = sub_4D4B58(v19 - 160);
                while ((void *)v19 != v18);
                __n128 v20 = v28;
              }
              uint64_t v29 = v18;
              operator delete(v20);
            }
          }
          int v8 = v25;
        }
        if (v8)
        {
          __n128 v21 = (void **)v26;
          uint64_t v22 = v8;
          if (v26 != v8)
          {
            do
              __n128 v21 = sub_4F31D0(v21 - 13);
            while (v21 != (void **)v8);
            uint64_t v22 = v25;
          }
          uint64_t v26 = v8;
          operator delete(v22);
        }
      }
      v3 += 336;
    }
    while (v3 != v4);
  }
}

void sub_860E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va1, a4);
  va_start(va, a4);
  uint64_t v6 = va_arg(va1, void *);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  sub_639B78((uint64_t *)va1);
  sub_5920E0((void **)va);
  sub_591DFC(v4);
  _Unwind_Resume(a1);
}

void sub_860ED0(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

void sub_860EE4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (unsigned char *)(a1 + 7909);
  sub_8ACA30(a1 + 2200, 1, *(unsigned __int8 *)(a1 + 7909), (uint64_t)&v16);
  sub_639530(a2, (uint64_t)&v16, (void *)(a1 + 5176), 0, 0, 1);
  v15.n128_u64[0] = sub_852478(a1);
  v15.n128_u64[1] = v5;
  sub_638424(a2, &v15);
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 425));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  sub_6396C0(a2, 1);
  if (*v4) {
    int v6 = 48;
  }
  else {
    int v6 = 47;
  }
  sub_63841C(a2, v6);
  if (!*v4)
  {
    unsigned int v7 = sub_62C088(*(unsigned int **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    sub_6393D0(a2, v7, 0);
  }
  uint64_t v8 = v20;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  uint64_t v9 = v19;
  if (v19)
  {
    do
    {
      uint64_t v10 = (void *)*v9;
      sub_4F4B48((uint64_t)(v9 + 2));
      operator delete(v9);
      uint64_t v9 = v10;
    }
    while (v10);
  }
  uint64_t v11 = __p;
  long long __p = 0;
  if (v11) {
    operator delete(v11);
  }
  int v12 = (void **)v16;
  if (v16)
  {
    unint64_t v13 = v17;
    uint64_t v14 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v13 - 1) < 0) {
          operator delete(*(v13 - 3));
        }
        v13 -= 3;
      }
      while (v13 != v12);
      uint64_t v14 = v16;
    }
    __n128 v17 = v12;
    operator delete(v14);
  }
}

void sub_8610A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_8610B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_8610D8(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v6 = (unsigned char *)(a1 + 7909);
  sub_8ADB7C(a1 + 2200, a2, a3, *(unsigned __int8 *)(a1 + 7909), &__p);
  sub_6393C8(a4, (uint64_t *)&__p, 0, 0, 1);
  sub_638A00(a4, (void *)(a1 + 5176));
  v13.n128_u64[0] = sub_852478(a1);
  v13.n128_u64[1] = v7;
  sub_638424(a4, &v13);
  sub_69200(a4, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 425));
  if (sub_855B3C(a1, a4)) {
    sub_6396C8(a4, 1);
  }
  sub_6396C0(a4, 1);
  if (*v6) {
    int v8 = 48;
  }
  else {
    int v8 = 47;
  }
  sub_63841C(a4, v8);
  if (!*v6)
  {
    unsigned int v9 = sub_62C088(*(unsigned int **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    sub_6393D0(a4, v9, 0);
  }
  uint64_t v10 = (void **)__p;
  if (__p)
  {
    uint64_t v11 = v15;
    int v12 = __p;
    if (v15 != __p)
    {
      do
        uint64_t v11 = sub_4F31D0(v11 - 13);
      while (v11 != v10);
      int v12 = __p;
    }
    __n128 v15 = v10;
    operator delete(v12);
  }
}

void sub_861210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_5920E0((void **)va);
  _Unwind_Resume(a1);
}

void sub_861224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_5920E0((void **)va);
  _Unwind_Resume(a1);
}

void sub_861244(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_8A54EC(a1 + 2200, (uint64_t *)&v14);
  sub_639530(a2, (uint64_t)&v14, (void *)(a1 + 5176), 0, 0, 1);
  uint64_t v4 = sub_62BD28(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v5 = v4;
  if (*(unsigned char *)(a1 + 7912) && *(void *)(a1 + 6688) < v4) {
    uint64_t v5 = *(void *)(a1 + 6688);
  }
  if (*(unsigned char *)(a1 + 7911) && *(void *)(a1 + 6112) < v5) {
    uint64_t v5 = *(void *)(a1 + 6112);
  }
  if (*(unsigned char *)(a1 + 7913) && *(void *)(a1 + 7072) < v5) {
    uint64_t v5 = *(void *)(a1 + 7072);
  }
  if (*(unsigned char *)(a1 + 5912) && *(void *)(a1 + 5728) < v5) {
    uint64_t v5 = *(void *)(a1 + 5728);
  }
  sub_2F99CC(&v19, v5, 0);
  __n128 v13 = v19;
  sub_638424(a2, &v13);
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 426));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  sub_6396C0(a2, 1);
  sub_63841C(a2, 46);
  int v6 = v18;
  if (v18 && !atomic_fetch_add(&v18->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  unint64_t v7 = v17;
  if (v17)
  {
    do
    {
      int v8 = (void *)*v7;
      sub_4F4B48((uint64_t)(v7 + 2));
      operator delete(v7);
      unint64_t v7 = v8;
    }
    while (v8);
  }
  unsigned int v9 = __p;
  long long __p = 0;
  if (v9) {
    operator delete(v9);
  }
  uint64_t v10 = (void **)v14;
  if (v14)
  {
    uint64_t v11 = v15;
    int v12 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      int v12 = v14;
    }
    __n128 v15 = v10;
    operator delete(v12);
  }
}

void sub_86142C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_861440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_861460(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_8AB210(a1 + 2200, a2, a3, (uint64_t)&__p);
  sub_6393C8(a4, (uint64_t *)&__p, 0, 0, 1);
  sub_638A00(a4, (void *)(a1 + 5176));
  uint64_t v6 = sub_62BD28(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = v6;
  if (*(unsigned char *)(a1 + 7912) && *(void *)(a1 + 6688) < v6) {
    uint64_t v7 = *(void *)(a1 + 6688);
  }
  if (*(unsigned char *)(a1 + 7911) && *(void *)(a1 + 6112) < v7) {
    uint64_t v7 = *(void *)(a1 + 6112);
  }
  if (*(unsigned char *)(a1 + 7913) && *(void *)(a1 + 7072) < v7) {
    uint64_t v7 = *(void *)(a1 + 7072);
  }
  if (*(unsigned char *)(a1 + 5912) && *(void *)(a1 + 5728) < v7) {
    uint64_t v7 = *(void *)(a1 + 5728);
  }
  sub_2F99CC(&v14, v7, 0);
  __n128 v11 = v14;
  sub_638424(a4, &v11);
  sub_69200(a4, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 426));
  if (sub_855B3C(a1, a4)) {
    sub_6396C8(a4, 1);
  }
  sub_6396C0(a4, 1);
  sub_63841C(a4, 46);
  int v8 = (void **)__p;
  if (__p)
  {
    unsigned int v9 = v13;
    uint64_t v10 = __p;
    if (v13 != __p)
    {
      do
        unsigned int v9 = sub_4F31D0(v9 - 13);
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    __n128 v13 = v8;
    operator delete(v10);
  }
}

void sub_8615C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_5920E0((void **)va);
  _Unwind_Resume(a1);
}

void sub_8615D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_5920E0((void **)va);
  _Unwind_Resume(a1);
}

void sub_8615F8(uint64_t a1, int **a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  uint64_t v4 = (char *)v2 - (char *)*a2;
  unint64_t v5 = 0xFAFAFAFAFAFAFAFBLL * (v4 >> 3);
  if (v5 >= 2)
  {
    if (v4 < 1)
    {
LABEL_6:
      __n128 v11 = 0;
      unint64_t v8 = 0;
    }
    else
    {
      unint64_t v8 = 0xFAFAFAFAFAFAFAFBLL * (v4 >> 3);
      while (1)
      {
        unsigned int v9 = operator new(408 * v8, &std::nothrow);
        if (v9) {
          break;
        }
        BOOL v10 = v8 > 1;
        v8 >>= 1;
        if (!v10) {
          goto LABEL_6;
        }
      }
      __n128 v11 = v9;
    }
    sub_87EDCC(v3, v2, (uint64_t)&v16, v5, (uint64_t)v11, v8);
    if (v11) {
      operator delete(v11);
    }
    unint64_t v12 = 0xFAFAFAFAFAFAFAFBLL * (((char *)a2[1] - (char *)*a2) >> 3);
    if (v12 != 1)
    {
      for (unint64_t i = 1; i != v12; ++i)
      {
        uint64_t v14 = sub_856768(a2, i - 1);
        __n128 v15 = (unsigned int *)sub_856768(a2, i);
        if (sub_6396F4(v14) != 4 && !sub_6397A8(v14, (uint64_t)v15)) {
          sub_8565C8(a1, v14, v15);
        }
      }
    }
  }
}

void sub_86176C(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_861784@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v3 = *(void *)(result + 5200);
  uint64_t v4 = *(void *)(result + 5208);
  if (v3 != v4)
  {
    uint64_t v5 = result;
    uint64_t v146 = (uint64_t)(a2 + 2);
    int v6 = *(_DWORD *)(result + 7916);
    while (1)
    {
      BOOL result = sub_63ACB4(v3);
      if ((result & 1) == 0) {
        goto LABEL_6;
      }
      unint64_t v8 = (void *)sub_856CCC(*(void **)(v5 + 7968), *(void *)(v3 + 168));
      BOOL result = sub_63AA60((uint64_t)v8);
      if ((result & 1) == 0) {
        goto LABEL_6;
      }
      if (sub_63AA80((uint64_t)v8))
      {
        if (sub_63A908((uint64_t)v8))
        {
          sub_8633E4(v5, (uint64_t *)v3, (uint64_t)&v160);
          unint64_t v9 = a2[1];
          if (v9 >= a2[2])
          {
            uint64_t v43 = sub_757E08(a2, (uint64_t)&v160);
            uint64_t v44 = (void *)v188;
            a2[1] = v43;
            if (v44)
            {
              *((void *)&v188 + 1) = v44;
              operator delete(v44);
            }
          }
          else
          {
            *(_DWORD *)unint64_t v9 = v160;
            *(void *)(v9 + 16) = 0;
            *(void *)(v9 + 24) = 0;
            *(void *)(v9 + 8) = 0;
            *(_OWORD *)(v9 + 8) = __p;
            *(void *)(v9 + 24) = v162;
            long long __p = 0uLL;
            uint64_t v162 = 0;
            long long v10 = v165;
            long long v11 = v163;
            *(_OWORD *)(v9 + 48) = v164;
            *(_OWORD *)(v9 + 64) = v10;
            *(_OWORD *)(v9 + 32) = v11;
            uint64_t v12 = v168;
            long long v13 = v167;
            *(_OWORD *)(v9 + 80) = v166;
            *(_OWORD *)(v9 + 96) = v13;
            *(void *)(v9 + 112) = v12;
            *(void *)(v9 + 120) = 0;
            *(void *)(v9 + 128) = 0;
            *(void *)(v9 + 136) = 0;
            *(_OWORD *)(v9 + 120) = v169;
            long long v169 = 0uLL;
            *(void *)(v9 + 136) = v170;
            *(void *)(v9 + 144) = 0;
            uint64_t v170 = 0;
            *(void *)(v9 + 152) = 0;
            *(void *)(v9 + 160) = 0;
            *(_OWORD *)(v9 + 144) = v171;
            *(void *)(v9 + 160) = v172;
            long long v171 = 0uLL;
            uint64_t v172 = 0;
            *(_OWORD *)(v9 + 168) = v173;
            *(_DWORD *)(v9 + 192) = v175;
            if (v175 <= 1) {
              *(void *)(v9 + 184) = v174;
            }
            *(_OWORD *)(v9 + 200) = v176;
            long long v14 = v177;
            uint64_t v15 = v179;
            *(_OWORD *)(v9 + 232) = v178;
            *(_OWORD *)(v9 + 216) = v14;
            *(void *)(v9 + 248) = v15;
            *(void *)(v9 + 256) = 0;
            *(void *)(v9 + 264) = 0;
            *(void *)(v9 + 272) = 0;
            *(_OWORD *)(v9 + 256) = v180;
            *(void *)(v9 + 272) = v181;
            long long v180 = 0uLL;
            uint64_t v181 = 0;
            *(unsigned char *)(v9 + 280) = v182;
            *(void *)(v9 + 288) = 0;
            *(void *)(v9 + 296) = 0;
            *(void *)(v9 + 304) = 0;
            *(_OWORD *)(v9 + 288) = v183;
            *(void *)(v9 + 304) = v184;
            long long v183 = 0uLL;
            uint64_t v184 = 0;
            long long v16 = *(_OWORD *)v185;
            *(_OWORD *)(v9 + 321) = *(_OWORD *)&v185[9];
            *(_OWORD *)(v9 + 312) = v16;
            long long v17 = v186;
            *(_DWORD *)(v9 + 356) = v187;
            *(_OWORD *)(v9 + 340) = v17;
            *(void *)(v9 + 360) = 0;
            *(void *)(v9 + 368) = 0;
            *(void *)(v9 + 376) = 0;
            *(_OWORD *)(v9 + 360) = v188;
            *(void *)(v9 + 376) = v189;
            long long v188 = 0uLL;
            uint64_t v189 = 0;
            long long v18 = v190;
            *(_DWORD *)(v9 + 400) = v191;
            *(_OWORD *)(v9 + 384) = v18;
            a2[1] = v9 + 408;
          }
          if ((void)v183)
          {
            *((void *)&v183 + 1) = v183;
            operator delete((void *)v183);
          }
          uint64_t v45 = (void **)v180;
          if ((void)v180)
          {
            unsigned __int16 v46 = (void **)*((void *)&v180 + 1);
            uint64_t v47 = (void *)v180;
            if (*((void *)&v180 + 1) != (void)v180)
            {
              do
                unsigned __int16 v46 = sub_4F31D0(v46 - 13);
              while (v46 != v45);
              uint64_t v47 = (void *)v180;
            }
            *((void *)&v180 + 1) = v45;
            operator delete(v47);
          }
          if ((void)v171)
          {
            *((void *)&v171 + 1) = v171;
            operator delete((void *)v171);
          }
          if ((void)v169)
          {
            *((void *)&v169 + 1) = v169;
            operator delete((void *)v169);
          }
          uint64_t v48 = __p;
          if (!(void)__p) {
            goto LABEL_5;
          }
          uint64_t v49 = *((void *)&__p + 1);
          uint64_t v7 = (void *)__p;
          if (*((void *)&__p + 1) != (void)__p)
          {
            do
              uint64_t v49 = sub_4D4B58(v49 - 160);
            while (v49 != v48);
            goto LABEL_3;
          }
        }
        else
        {
          sub_8635AC(v5, (uint64_t *)v3, (uint64_t)&v160);
          unint64_t v23 = a2[1];
          if (v23 >= a2[2])
          {
            uint64_t v50 = sub_757E08(a2, (uint64_t)&v160);
            int v51 = (void *)v188;
            a2[1] = v50;
            if (v51)
            {
              *((void *)&v188 + 1) = v51;
              operator delete(v51);
            }
          }
          else
          {
            *(_DWORD *)unint64_t v23 = v160;
            *(void *)(v23 + 16) = 0;
            *(void *)(v23 + 24) = 0;
            *(void *)(v23 + 8) = 0;
            *(_OWORD *)(v23 + 8) = __p;
            *(void *)(v23 + 24) = v162;
            long long __p = 0uLL;
            uint64_t v162 = 0;
            long long v24 = v165;
            long long v25 = v163;
            *(_OWORD *)(v23 + 48) = v164;
            *(_OWORD *)(v23 + 64) = v24;
            *(_OWORD *)(v23 + 32) = v25;
            uint64_t v26 = v168;
            long long v27 = v167;
            *(_OWORD *)(v23 + 80) = v166;
            *(_OWORD *)(v23 + 96) = v27;
            *(void *)(v23 + 112) = v26;
            *(void *)(v23 + 120) = 0;
            *(void *)(v23 + 128) = 0;
            *(void *)(v23 + 136) = 0;
            *(_OWORD *)(v23 + 120) = v169;
            long long v169 = 0uLL;
            *(void *)(v23 + 136) = v170;
            *(void *)(v23 + 144) = 0;
            uint64_t v170 = 0;
            *(void *)(v23 + 152) = 0;
            *(void *)(v23 + 160) = 0;
            *(_OWORD *)(v23 + 144) = v171;
            *(void *)(v23 + 160) = v172;
            long long v171 = 0uLL;
            uint64_t v172 = 0;
            *(_OWORD *)(v23 + 168) = v173;
            *(_DWORD *)(v23 + 192) = v175;
            if (v175 <= 1) {
              *(void *)(v23 + 184) = v174;
            }
            *(_OWORD *)(v23 + 200) = v176;
            long long v28 = v177;
            uint64_t v29 = v179;
            *(_OWORD *)(v23 + 232) = v178;
            *(_OWORD *)(v23 + 216) = v28;
            *(void *)(v23 + 248) = v29;
            *(void *)(v23 + 256) = 0;
            *(void *)(v23 + 264) = 0;
            *(void *)(v23 + 272) = 0;
            *(_OWORD *)(v23 + 256) = v180;
            *(void *)(v23 + 272) = v181;
            long long v180 = 0uLL;
            uint64_t v181 = 0;
            *(unsigned char *)(v23 + 280) = v182;
            *(void *)(v23 + 288) = 0;
            *(void *)(v23 + 296) = 0;
            *(void *)(v23 + 304) = 0;
            *(_OWORD *)(v23 + 288) = v183;
            *(void *)(v23 + 304) = v184;
            long long v183 = 0uLL;
            uint64_t v184 = 0;
            long long v30 = *(_OWORD *)v185;
            *(_OWORD *)(v23 + 321) = *(_OWORD *)&v185[9];
            *(_OWORD *)(v23 + 312) = v30;
            long long v31 = v186;
            *(_DWORD *)(v23 + 356) = v187;
            *(_OWORD *)(v23 + 340) = v31;
            *(void *)(v23 + 360) = 0;
            *(void *)(v23 + 368) = 0;
            *(void *)(v23 + 376) = 0;
            *(_OWORD *)(v23 + 360) = v188;
            *(void *)(v23 + 376) = v189;
            long long v188 = 0uLL;
            uint64_t v189 = 0;
            long long v32 = v190;
            *(_DWORD *)(v23 + 400) = v191;
            *(_OWORD *)(v23 + 384) = v32;
            a2[1] = v23 + 408;
          }
          if ((void)v183)
          {
            *((void *)&v183 + 1) = v183;
            operator delete((void *)v183);
          }
          long long v52 = (void **)v180;
          if ((void)v180)
          {
            uint64_t v53 = (void **)*((void *)&v180 + 1);
            uint64_t v54 = (void *)v180;
            if (*((void *)&v180 + 1) != (void)v180)
            {
              do
                uint64_t v53 = sub_4F31D0(v53 - 13);
              while (v53 != v52);
              uint64_t v54 = (void *)v180;
            }
            *((void *)&v180 + 1) = v52;
            operator delete(v54);
          }
          if ((void)v171)
          {
            *((void *)&v171 + 1) = v171;
            operator delete((void *)v171);
          }
          if ((void)v169)
          {
            *((void *)&v169 + 1) = v169;
            operator delete((void *)v169);
          }
          uint64_t v48 = __p;
          if (!(void)__p) {
            goto LABEL_5;
          }
          uint64_t v55 = *((void *)&__p + 1);
          uint64_t v7 = (void *)__p;
          if (*((void *)&__p + 1) != (void)__p)
          {
            do
              uint64_t v55 = sub_4D4B58(v55 - 160);
            while (v55 != v48);
            goto LABEL_3;
          }
        }
        goto LABEL_4;
      }
      if (sub_63A9DC((uint64_t)v8))
      {
        sub_863774(v5, (uint64_t *)v3, (uint64_t)v8, 0, (uint64_t)&v160);
        int v19 = v6;
        int v20 = v6;
        sub_486A54((uint64_t)&v160, v6);
        unint64_t v21 = a2[1];
        if (v21 >= a2[2])
        {
          uint64_t v22 = sub_75796C(a2, (uint64_t)&v160);
        }
        else
        {
          sub_757B28(v146, a2[1], (uint64_t)&v160);
          uint64_t v22 = v21 + 408;
          a2[1] = v21 + 408;
        }
        a2[1] = v22;
        sub_863774(v5, (uint64_t *)v3, (uint64_t)v8, 1, (uint64_t)v147);
        sub_486A54((uint64_t)v147, v20);
        unint64_t v66 = a2[1];
        if (v66 >= a2[2])
        {
          uint64_t v67 = sub_75796C(a2, (uint64_t)v147);
        }
        else
        {
          sub_757B28(v146, a2[1], (uint64_t)v147);
          uint64_t v67 = v66 + 408;
          a2[1] = v66 + 408;
        }
        a2[1] = v67;
        if (v158)
        {
          char v159 = v158;
          operator delete(v158);
        }
        if (v156)
        {
          uint64_t v157 = v156;
          operator delete(v156);
        }
        unsigned int v68 = (void **)v154;
        if (v154)
        {
          long long v69 = v155;
          long long v70 = v154;
          if (v155 != v154)
          {
            do
              long long v69 = sub_4F31D0(v69 - 13);
            while (v69 != v68);
            long long v70 = v154;
          }
          uint64_t v155 = v68;
          operator delete(v70);
        }
        if (v152)
        {
          long long v153 = v152;
          operator delete(v152);
        }
        if (v150)
        {
          uint64_t v151 = v150;
          operator delete(v150);
        }
        long long v71 = v148;
        if (v148)
        {
          uint64_t v72 = (uint64_t)v149;
          long long v73 = v148;
          if (v149 != v148)
          {
            do
              uint64_t v72 = sub_4D4B58(v72 - 160);
            while ((void *)v72 != v71);
            long long v73 = v148;
          }
          int v149 = v71;
          operator delete(v73);
        }
        if ((void)v188)
        {
          *((void *)&v188 + 1) = v188;
          operator delete((void *)v188);
        }
        if ((void)v183)
        {
          *((void *)&v183 + 1) = v183;
          operator delete((void *)v183);
        }
        uint64_t v74 = (void **)v180;
        if ((void)v180)
        {
          char v75 = (void **)*((void *)&v180 + 1);
          uint64_t v76 = (void *)v180;
          if (*((void *)&v180 + 1) != (void)v180)
          {
            do
              char v75 = sub_4F31D0(v75 - 13);
            while (v75 != v74);
            uint64_t v76 = (void *)v180;
          }
          *((void *)&v180 + 1) = v74;
          operator delete(v76);
        }
        if ((void)v171)
        {
          *((void *)&v171 + 1) = v171;
          operator delete((void *)v171);
        }
        if ((void)v169)
        {
          *((void *)&v169 + 1) = v169;
          operator delete((void *)v169);
        }
        uint64_t v77 = __p;
        if ((void)__p)
        {
          uint64_t v78 = *((void *)&__p + 1);
          long long v79 = (void *)__p;
          if (*((void *)&__p + 1) != (void)__p)
          {
            do
              uint64_t v78 = sub_4D4B58(v78 - 160);
            while (v78 != v77);
            long long v79 = (void *)__p;
          }
          *((void *)&__p + 1) = v77;
          operator delete(v79);
        }
        int v6 = v19 + 1;
        goto LABEL_5;
      }
      if (sub_63A918((uint64_t)v8))
      {
        sub_863968(v5, (uint64_t *)v3, (uint64_t)&v160);
        unint64_t v33 = a2[1];
        if (v33 >= a2[2])
        {
          uint64_t v80 = sub_757E08(a2, (uint64_t)&v160);
          long long v81 = (void *)v188;
          a2[1] = v80;
          if (v81)
          {
            *((void *)&v188 + 1) = v81;
            operator delete(v81);
          }
        }
        else
        {
          *(_DWORD *)unint64_t v33 = v160;
          *(void *)(v33 + 16) = 0;
          *(void *)(v33 + 24) = 0;
          *(void *)(v33 + 8) = 0;
          *(_OWORD *)(v33 + 8) = __p;
          *(void *)(v33 + 24) = v162;
          long long __p = 0uLL;
          uint64_t v162 = 0;
          long long v34 = v165;
          long long v35 = v163;
          *(_OWORD *)(v33 + 48) = v164;
          *(_OWORD *)(v33 + 64) = v34;
          *(_OWORD *)(v33 + 32) = v35;
          uint64_t v36 = v168;
          long long v37 = v167;
          *(_OWORD *)(v33 + 80) = v166;
          *(_OWORD *)(v33 + 96) = v37;
          *(void *)(v33 + 112) = v36;
          *(void *)(v33 + 120) = 0;
          *(void *)(v33 + 128) = 0;
          *(void *)(v33 + 136) = 0;
          *(_OWORD *)(v33 + 120) = v169;
          long long v169 = 0uLL;
          *(void *)(v33 + 136) = v170;
          *(void *)(v33 + 144) = 0;
          uint64_t v170 = 0;
          *(void *)(v33 + 152) = 0;
          *(void *)(v33 + 160) = 0;
          *(_OWORD *)(v33 + 144) = v171;
          *(void *)(v33 + 160) = v172;
          long long v171 = 0uLL;
          uint64_t v172 = 0;
          *(_OWORD *)(v33 + 168) = v173;
          *(_DWORD *)(v33 + 192) = v175;
          if (v175 <= 1) {
            *(void *)(v33 + 184) = v174;
          }
          *(_OWORD *)(v33 + 200) = v176;
          long long v38 = v177;
          uint64_t v39 = v179;
          *(_OWORD *)(v33 + 232) = v178;
          *(_OWORD *)(v33 + 216) = v38;
          *(void *)(v33 + 248) = v39;
          *(void *)(v33 + 256) = 0;
          *(void *)(v33 + 264) = 0;
          *(void *)(v33 + 272) = 0;
          *(_OWORD *)(v33 + 256) = v180;
          *(void *)(v33 + 272) = v181;
          long long v180 = 0uLL;
          uint64_t v181 = 0;
          *(unsigned char *)(v33 + 280) = v182;
          *(void *)(v33 + 288) = 0;
          *(void *)(v33 + 296) = 0;
          *(void *)(v33 + 304) = 0;
          *(_OWORD *)(v33 + 288) = v183;
          *(void *)(v33 + 304) = v184;
          long long v183 = 0uLL;
          uint64_t v184 = 0;
          long long v40 = *(_OWORD *)v185;
          *(_OWORD *)(v33 + 321) = *(_OWORD *)&v185[9];
          *(_OWORD *)(v33 + 312) = v40;
          long long v41 = v186;
          *(_DWORD *)(v33 + 356) = v187;
          *(_OWORD *)(v33 + 340) = v41;
          *(void *)(v33 + 360) = 0;
          *(void *)(v33 + 368) = 0;
          *(void *)(v33 + 376) = 0;
          *(_OWORD *)(v33 + 360) = v188;
          *(void *)(v33 + 376) = v189;
          long long v188 = 0uLL;
          uint64_t v189 = 0;
          long long v42 = v190;
          *(_DWORD *)(v33 + 400) = v191;
          *(_OWORD *)(v33 + 384) = v42;
          a2[1] = v33 + 408;
        }
        if ((void)v183)
        {
          *((void *)&v183 + 1) = v183;
          operator delete((void *)v183);
        }
        uint64_t v82 = (void **)v180;
        if ((void)v180)
        {
          uint64_t v83 = (void **)*((void *)&v180 + 1);
          long long v84 = (void *)v180;
          if (*((void *)&v180 + 1) != (void)v180)
          {
            do
              uint64_t v83 = sub_4F31D0(v83 - 13);
            while (v83 != v82);
            long long v84 = (void *)v180;
          }
          *((void *)&v180 + 1) = v82;
          operator delete(v84);
        }
        if ((void)v171)
        {
          *((void *)&v171 + 1) = v171;
          operator delete((void *)v171);
        }
        if ((void)v169)
        {
          *((void *)&v169 + 1) = v169;
          operator delete((void *)v169);
        }
        uint64_t v48 = __p;
        if (!(void)__p) {
          goto LABEL_5;
        }
        uint64_t v85 = *((void *)&__p + 1);
        uint64_t v7 = (void *)__p;
        if (*((void *)&__p + 1) != (void)__p)
        {
          do
            uint64_t v85 = sub_4D4B58(v85 - 160);
          while (v85 != v48);
          goto LABEL_3;
        }
LABEL_4:
        *((void *)&__p + 1) = v48;
        operator delete(v7);
        goto LABEL_5;
      }
      if (sub_63AABC(v8)) {
        break;
      }
      if (sub_63AAF0(v8))
      {
        sub_863CF8(v5, (uint64_t *)v3, (uint64_t)&v160);
        unint64_t v86 = a2[1];
        if (v86 >= a2[2])
        {
          uint64_t v112 = sub_757E08(a2, (uint64_t)&v160);
          uint64_t v113 = (void *)v188;
          a2[1] = v112;
          if (v113)
          {
            *((void *)&v188 + 1) = v113;
            operator delete(v113);
          }
        }
        else
        {
          *(_DWORD *)unint64_t v86 = v160;
          *(void *)(v86 + 16) = 0;
          *(void *)(v86 + 24) = 0;
          *(void *)(v86 + 8) = 0;
          *(_OWORD *)(v86 + 8) = __p;
          *(void *)(v86 + 24) = v162;
          long long __p = 0uLL;
          uint64_t v162 = 0;
          long long v87 = v165;
          long long v88 = v163;
          *(_OWORD *)(v86 + 48) = v164;
          *(_OWORD *)(v86 + 64) = v87;
          *(_OWORD *)(v86 + 32) = v88;
          uint64_t v89 = v168;
          long long v90 = v167;
          *(_OWORD *)(v86 + 80) = v166;
          *(_OWORD *)(v86 + 96) = v90;
          *(void *)(v86 + 112) = v89;
          *(void *)(v86 + 120) = 0;
          *(void *)(v86 + 128) = 0;
          *(void *)(v86 + 136) = 0;
          *(_OWORD *)(v86 + 120) = v169;
          long long v169 = 0uLL;
          *(void *)(v86 + 136) = v170;
          *(void *)(v86 + 144) = 0;
          uint64_t v170 = 0;
          *(void *)(v86 + 152) = 0;
          *(void *)(v86 + 160) = 0;
          *(_OWORD *)(v86 + 144) = v171;
          *(void *)(v86 + 160) = v172;
          long long v171 = 0uLL;
          uint64_t v172 = 0;
          *(_OWORD *)(v86 + 168) = v173;
          *(_DWORD *)(v86 + 192) = v175;
          if (v175 <= 1) {
            *(void *)(v86 + 184) = v174;
          }
          *(_OWORD *)(v86 + 200) = v176;
          long long v91 = v177;
          uint64_t v92 = v179;
          *(_OWORD *)(v86 + 232) = v178;
          *(_OWORD *)(v86 + 216) = v91;
          *(void *)(v86 + 248) = v92;
          *(void *)(v86 + 256) = 0;
          *(void *)(v86 + 264) = 0;
          *(void *)(v86 + 272) = 0;
          *(_OWORD *)(v86 + 256) = v180;
          *(void *)(v86 + 272) = v181;
          long long v180 = 0uLL;
          uint64_t v181 = 0;
          *(unsigned char *)(v86 + 280) = v182;
          *(void *)(v86 + 288) = 0;
          *(void *)(v86 + 296) = 0;
          *(void *)(v86 + 304) = 0;
          *(_OWORD *)(v86 + 288) = v183;
          *(void *)(v86 + 304) = v184;
          long long v183 = 0uLL;
          uint64_t v184 = 0;
          long long v93 = *(_OWORD *)v185;
          *(_OWORD *)(v86 + 321) = *(_OWORD *)&v185[9];
          *(_OWORD *)(v86 + 312) = v93;
          long long v94 = v186;
          *(_DWORD *)(v86 + 356) = v187;
          *(_OWORD *)(v86 + 340) = v94;
          *(void *)(v86 + 360) = 0;
          *(void *)(v86 + 368) = 0;
          *(void *)(v86 + 376) = 0;
          *(_OWORD *)(v86 + 360) = v188;
          *(void *)(v86 + 376) = v189;
          long long v188 = 0uLL;
          uint64_t v189 = 0;
          long long v95 = v190;
          *(_DWORD *)(v86 + 400) = v191;
          *(_OWORD *)(v86 + 384) = v95;
          a2[1] = v86 + 408;
        }
        if ((void)v183)
        {
          *((void *)&v183 + 1) = v183;
          operator delete((void *)v183);
        }
        uint64_t v114 = (void **)v180;
        if ((void)v180)
        {
          long long v115 = (void **)*((void *)&v180 + 1);
          int v116 = (void *)v180;
          if (*((void *)&v180 + 1) != (void)v180)
          {
            do
              long long v115 = sub_4F31D0(v115 - 13);
            while (v115 != v114);
            int v116 = (void *)v180;
          }
          *((void *)&v180 + 1) = v114;
          operator delete(v116);
        }
        if ((void)v171)
        {
          *((void *)&v171 + 1) = v171;
          operator delete((void *)v171);
        }
        if ((void)v169)
        {
          *((void *)&v169 + 1) = v169;
          operator delete((void *)v169);
        }
        uint64_t v48 = __p;
        if (!(void)__p) {
          goto LABEL_5;
        }
        uint64_t v117 = *((void *)&__p + 1);
        uint64_t v7 = (void *)__p;
        if (*((void *)&__p + 1) == (void)__p) {
          goto LABEL_4;
        }
        do
          uint64_t v117 = sub_4D4B58(v117 - 160);
        while (v117 != v48);
        goto LABEL_3;
      }
      if (sub_63AA44((uint64_t)v8))
      {
        sub_863EC0(v5, (uint64_t *)v3, (uint64_t)&v160);
        unint64_t v102 = a2[1];
        if (v102 >= a2[2])
        {
          uint64_t v128 = sub_757E08(a2, (uint64_t)&v160);
          long long v129 = (void *)v188;
          a2[1] = v128;
          if (v129)
          {
            *((void *)&v188 + 1) = v129;
            operator delete(v129);
          }
        }
        else
        {
          *(_DWORD *)unint64_t v102 = v160;
          *(void *)(v102 + 16) = 0;
          *(void *)(v102 + 24) = 0;
          *(void *)(v102 + 8) = 0;
          *(_OWORD *)(v102 + 8) = __p;
          *(void *)(v102 + 24) = v162;
          long long __p = 0uLL;
          uint64_t v162 = 0;
          long long v103 = v165;
          long long v104 = v163;
          *(_OWORD *)(v102 + 48) = v164;
          *(_OWORD *)(v102 + 64) = v103;
          *(_OWORD *)(v102 + 32) = v104;
          uint64_t v105 = v168;
          long long v106 = v167;
          *(_OWORD *)(v102 + 80) = v166;
          *(_OWORD *)(v102 + 96) = v106;
          *(void *)(v102 + 112) = v105;
          *(void *)(v102 + 120) = 0;
          *(void *)(v102 + 128) = 0;
          *(void *)(v102 + 136) = 0;
          *(_OWORD *)(v102 + 120) = v169;
          long long v169 = 0uLL;
          *(void *)(v102 + 136) = v170;
          *(void *)(v102 + 144) = 0;
          uint64_t v170 = 0;
          *(void *)(v102 + 152) = 0;
          *(void *)(v102 + 160) = 0;
          *(_OWORD *)(v102 + 144) = v171;
          *(void *)(v102 + 160) = v172;
          long long v171 = 0uLL;
          uint64_t v172 = 0;
          *(_OWORD *)(v102 + 168) = v173;
          *(_DWORD *)(v102 + 192) = v175;
          if (v175 <= 1) {
            *(void *)(v102 + 184) = v174;
          }
          *(_OWORD *)(v102 + 200) = v176;
          long long v107 = v177;
          uint64_t v108 = v179;
          *(_OWORD *)(v102 + 232) = v178;
          *(_OWORD *)(v102 + 216) = v107;
          *(void *)(v102 + 248) = v108;
          *(void *)(v102 + 256) = 0;
          *(void *)(v102 + 264) = 0;
          *(void *)(v102 + 272) = 0;
          *(_OWORD *)(v102 + 256) = v180;
          *(void *)(v102 + 272) = v181;
          long long v180 = 0uLL;
          uint64_t v181 = 0;
          *(unsigned char *)(v102 + 280) = v182;
          *(void *)(v102 + 288) = 0;
          *(void *)(v102 + 296) = 0;
          *(void *)(v102 + 304) = 0;
          *(_OWORD *)(v102 + 288) = v183;
          *(void *)(v102 + 304) = v184;
          long long v183 = 0uLL;
          uint64_t v184 = 0;
          long long v109 = *(_OWORD *)v185;
          *(_OWORD *)(v102 + 321) = *(_OWORD *)&v185[9];
          *(_OWORD *)(v102 + 312) = v109;
          long long v110 = v186;
          *(_DWORD *)(v102 + 356) = v187;
          *(_OWORD *)(v102 + 340) = v110;
          *(void *)(v102 + 360) = 0;
          *(void *)(v102 + 368) = 0;
          *(void *)(v102 + 376) = 0;
          *(_OWORD *)(v102 + 360) = v188;
          *(void *)(v102 + 376) = v189;
          long long v188 = 0uLL;
          uint64_t v189 = 0;
          long long v111 = v190;
          *(_DWORD *)(v102 + 400) = v191;
          *(_OWORD *)(v102 + 384) = v111;
          a2[1] = v102 + 408;
        }
        if ((void)v183)
        {
          *((void *)&v183 + 1) = v183;
          operator delete((void *)v183);
        }
        uint64_t v130 = (void **)v180;
        if ((void)v180)
        {
          uint64_t v131 = (void **)*((void *)&v180 + 1);
          uint64_t v132 = (void *)v180;
          if (*((void *)&v180 + 1) != (void)v180)
          {
            do
              uint64_t v131 = sub_4F31D0(v131 - 13);
            while (v131 != v130);
            uint64_t v132 = (void *)v180;
          }
          *((void *)&v180 + 1) = v130;
          operator delete(v132);
        }
        if ((void)v171)
        {
          *((void *)&v171 + 1) = v171;
          operator delete((void *)v171);
        }
        if ((void)v169)
        {
          *((void *)&v169 + 1) = v169;
          operator delete((void *)v169);
        }
        uint64_t v48 = __p;
        if (!(void)__p) {
          goto LABEL_5;
        }
        uint64_t v133 = *((void *)&__p + 1);
        uint64_t v7 = (void *)__p;
        if (*((void *)&__p + 1) == (void)__p) {
          goto LABEL_4;
        }
        do
          uint64_t v133 = sub_4D4B58(v133 - 160);
        while (v133 != v48);
        goto LABEL_3;
      }
      if (sub_63AAA0((uint64_t)v8))
      {
        sub_864088(v5, (uint64_t *)v3, (uint64_t)&v160);
        unint64_t v118 = a2[1];
        if (v118 >= a2[2])
        {
          uint64_t v136 = sub_757E08(a2, (uint64_t)&v160);
          unsigned long long v137 = (void *)v188;
          a2[1] = v136;
          if (v137)
          {
            *((void *)&v188 + 1) = v137;
            operator delete(v137);
          }
        }
        else
        {
          *(_DWORD *)unint64_t v118 = v160;
          *(void *)(v118 + 16) = 0;
          *(void *)(v118 + 24) = 0;
          *(void *)(v118 + 8) = 0;
          *(_OWORD *)(v118 + 8) = __p;
          *(void *)(v118 + 24) = v162;
          long long __p = 0uLL;
          uint64_t v162 = 0;
          long long v119 = v165;
          long long v120 = v163;
          *(_OWORD *)(v118 + 48) = v164;
          *(_OWORD *)(v118 + 64) = v119;
          *(_OWORD *)(v118 + 32) = v120;
          uint64_t v121 = v168;
          long long v122 = v167;
          *(_OWORD *)(v118 + 80) = v166;
          *(_OWORD *)(v118 + 96) = v122;
          *(void *)(v118 + 112) = v121;
          *(void *)(v118 + 120) = 0;
          *(void *)(v118 + 128) = 0;
          *(void *)(v118 + 136) = 0;
          *(_OWORD *)(v118 + 120) = v169;
          long long v169 = 0uLL;
          *(void *)(v118 + 136) = v170;
          *(void *)(v118 + 144) = 0;
          uint64_t v170 = 0;
          *(void *)(v118 + 152) = 0;
          *(void *)(v118 + 160) = 0;
          *(_OWORD *)(v118 + 144) = v171;
          *(void *)(v118 + 160) = v172;
          long long v171 = 0uLL;
          uint64_t v172 = 0;
          *(_OWORD *)(v118 + 168) = v173;
          *(_DWORD *)(v118 + 192) = v175;
          if (v175 <= 1) {
            *(void *)(v118 + 184) = v174;
          }
          *(_OWORD *)(v118 + 200) = v176;
          long long v123 = v177;
          uint64_t v124 = v179;
          *(_OWORD *)(v118 + 232) = v178;
          *(_OWORD *)(v118 + 216) = v123;
          *(void *)(v118 + 248) = v124;
          *(void *)(v118 + 256) = 0;
          *(void *)(v118 + 264) = 0;
          *(void *)(v118 + 272) = 0;
          *(_OWORD *)(v118 + 256) = v180;
          *(void *)(v118 + 272) = v181;
          long long v180 = 0uLL;
          uint64_t v181 = 0;
          *(unsigned char *)(v118 + 280) = v182;
          *(void *)(v118 + 288) = 0;
          *(void *)(v118 + 296) = 0;
          *(void *)(v118 + 304) = 0;
          *(_OWORD *)(v118 + 288) = v183;
          *(void *)(v118 + 304) = v184;
          long long v183 = 0uLL;
          uint64_t v184 = 0;
          long long v125 = *(_OWORD *)v185;
          *(_OWORD *)(v118 + 321) = *(_OWORD *)&v185[9];
          *(_OWORD *)(v118 + 312) = v125;
          long long v126 = v186;
          *(_DWORD *)(v118 + 356) = v187;
          *(_OWORD *)(v118 + 340) = v126;
          *(void *)(v118 + 360) = 0;
          *(void *)(v118 + 368) = 0;
          *(void *)(v118 + 376) = 0;
          *(_OWORD *)(v118 + 360) = v188;
          *(void *)(v118 + 376) = v189;
          long long v188 = 0uLL;
          uint64_t v189 = 0;
          long long v127 = v190;
          *(_DWORD *)(v118 + 400) = v191;
          *(_OWORD *)(v118 + 384) = v127;
          a2[1] = v118 + 408;
        }
        if ((void)v183)
        {
          *((void *)&v183 + 1) = v183;
          operator delete((void *)v183);
        }
        unint64_t v138 = (void **)v180;
        if ((void)v180)
        {
          long long v139 = (void **)*((void *)&v180 + 1);
          long long v140 = (void *)v180;
          if (*((void *)&v180 + 1) != (void)v180)
          {
            do
              long long v139 = sub_4F31D0(v139 - 13);
            while (v139 != v138);
            long long v140 = (void *)v180;
          }
          *((void *)&v180 + 1) = v138;
          operator delete(v140);
        }
        if ((void)v171)
        {
          *((void *)&v171 + 1) = v171;
          operator delete((void *)v171);
        }
        if ((void)v169)
        {
          *((void *)&v169 + 1) = v169;
          operator delete((void *)v169);
        }
        uint64_t v48 = __p;
        if (!(void)__p) {
          goto LABEL_5;
        }
        uint64_t v141 = *((void *)&__p + 1);
        uint64_t v7 = (void *)__p;
        if (*((void *)&__p + 1) == (void)__p) {
          goto LABEL_4;
        }
        do
          uint64_t v141 = sub_4D4B58(v141 - 160);
        while (v141 != v48);
        goto LABEL_3;
      }
      BOOL result = sub_63AB24((uint64_t)v8);
      if (!result) {
        goto LABEL_6;
      }
      sub_864250(v5, (uint64_t *)v3, (uint64_t)&v160);
      unint64_t v134 = a2[1];
      if (v134 >= a2[2])
      {
        uint64_t v135 = sub_757E08(a2, (uint64_t)&v160);
      }
      else
      {
        sub_757C94(v146, a2[1], (uint64_t)&v160);
        uint64_t v135 = v134 + 408;
      }
      a2[1] = v135;
      if ((void)v188)
      {
        *((void *)&v188 + 1) = v188;
        operator delete((void *)v188);
      }
      if ((void)v183)
      {
        *((void *)&v183 + 1) = v183;
        operator delete((void *)v183);
      }
      long long v142 = (void **)v180;
      if ((void)v180)
      {
        long long v143 = (void **)*((void *)&v180 + 1);
        uint64_t v144 = (void *)v180;
        if (*((void *)&v180 + 1) != (void)v180)
        {
          do
            long long v143 = sub_4F31D0(v143 - 13);
          while (v143 != v142);
          uint64_t v144 = (void *)v180;
        }
        *((void *)&v180 + 1) = v142;
        operator delete(v144);
      }
      if ((void)v171)
      {
        *((void *)&v171 + 1) = v171;
        operator delete((void *)v171);
      }
      if ((void)v169)
      {
        *((void *)&v169 + 1) = v169;
        operator delete((void *)v169);
      }
      uint64_t v48 = __p;
      if ((void)__p)
      {
        uint64_t v145 = *((void *)&__p + 1);
        uint64_t v7 = (void *)__p;
        if (*((void *)&__p + 1) == (void)__p) {
          goto LABEL_4;
        }
        do
          uint64_t v145 = sub_4D4B58(v145 - 160);
        while (v145 != v48);
        goto LABEL_3;
      }
LABEL_5:
      BOOL result = sub_6396E0(a2[1] - 408, v8 + 1);
LABEL_6:
      v3 += 184;
      if (v3 == v4) {
        return result;
      }
    }
    sub_863B30(v5, (uint64_t *)v3, (uint64_t)&v160);
    unint64_t v56 = a2[1];
    if (v56 >= a2[2])
    {
      uint64_t v96 = sub_757E08(a2, (uint64_t)&v160);
      uint64_t v97 = (void *)v188;
      a2[1] = v96;
      if (v97)
      {
        *((void *)&v188 + 1) = v97;
        operator delete(v97);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v56 = v160;
      *(void *)(v56 + 16) = 0;
      *(void *)(v56 + 24) = 0;
      *(void *)(v56 + 8) = 0;
      *(_OWORD *)(v56 + 8) = __p;
      *(void *)(v56 + 24) = v162;
      long long __p = 0uLL;
      uint64_t v162 = 0;
      long long v57 = v165;
      long long v58 = v163;
      *(_OWORD *)(v56 + 48) = v164;
      *(_OWORD *)(v56 + 64) = v57;
      *(_OWORD *)(v56 + 32) = v58;
      uint64_t v59 = v168;
      long long v60 = v167;
      *(_OWORD *)(v56 + 80) = v166;
      *(_OWORD *)(v56 + 96) = v60;
      *(void *)(v56 + 112) = v59;
      *(void *)(v56 + 120) = 0;
      *(void *)(v56 + 128) = 0;
      *(void *)(v56 + 136) = 0;
      *(_OWORD *)(v56 + 120) = v169;
      long long v169 = 0uLL;
      *(void *)(v56 + 136) = v170;
      *(void *)(v56 + 144) = 0;
      uint64_t v170 = 0;
      *(void *)(v56 + 152) = 0;
      *(void *)(v56 + 160) = 0;
      *(_OWORD *)(v56 + 144) = v171;
      *(void *)(v56 + 160) = v172;
      long long v171 = 0uLL;
      uint64_t v172 = 0;
      *(_OWORD *)(v56 + 168) = v173;
      *(_DWORD *)(v56 + 192) = v175;
      if (v175 <= 1) {
        *(void *)(v56 + 184) = v174;
      }
      *(_OWORD *)(v56 + 200) = v176;
      long long v61 = v177;
      uint64_t v62 = v179;
      *(_OWORD *)(v56 + 232) = v178;
      *(_OWORD *)(v56 + 216) = v61;
      *(void *)(v56 + 248) = v62;
      *(void *)(v56 + 256) = 0;
      *(void *)(v56 + 264) = 0;
      *(void *)(v56 + 272) = 0;
      *(_OWORD *)(v56 + 256) = v180;
      *(void *)(v56 + 272) = v181;
      long long v180 = 0uLL;
      uint64_t v181 = 0;
      *(unsigned char *)(v56 + 280) = v182;
      *(void *)(v56 + 288) = 0;
      *(void *)(v56 + 296) = 0;
      *(void *)(v56 + 304) = 0;
      *(_OWORD *)(v56 + 288) = v183;
      *(void *)(v56 + 304) = v184;
      long long v183 = 0uLL;
      uint64_t v184 = 0;
      long long v63 = *(_OWORD *)v185;
      *(_OWORD *)(v56 + 321) = *(_OWORD *)&v185[9];
      *(_OWORD *)(v56 + 312) = v63;
      long long v64 = v186;
      *(_DWORD *)(v56 + 356) = v187;
      *(_OWORD *)(v56 + 340) = v64;
      *(void *)(v56 + 360) = 0;
      *(void *)(v56 + 368) = 0;
      *(void *)(v56 + 376) = 0;
      *(_OWORD *)(v56 + 360) = v188;
      *(void *)(v56 + 376) = v189;
      long long v188 = 0uLL;
      uint64_t v189 = 0;
      long long v65 = v190;
      *(_DWORD *)(v56 + 400) = v191;
      *(_OWORD *)(v56 + 384) = v65;
      a2[1] = v56 + 408;
    }
    if ((void)v183)
    {
      *((void *)&v183 + 1) = v183;
      operator delete((void *)v183);
    }
    char v98 = (void **)v180;
    if ((void)v180)
    {
      char v99 = (void **)*((void *)&v180 + 1);
      long long v100 = (void *)v180;
      if (*((void *)&v180 + 1) != (void)v180)
      {
        do
          char v99 = sub_4F31D0(v99 - 13);
        while (v99 != v98);
        long long v100 = (void *)v180;
      }
      *((void *)&v180 + 1) = v98;
      operator delete(v100);
    }
    if ((void)v171)
    {
      *((void *)&v171 + 1) = v171;
      operator delete((void *)v171);
    }
    if ((void)v169)
    {
      *((void *)&v169 + 1) = v169;
      operator delete((void *)v169);
    }
    uint64_t v48 = __p;
    if (!(void)__p) {
      goto LABEL_5;
    }
    uint64_t v101 = *((void *)&__p + 1);
    uint64_t v7 = (void *)__p;
    if (*((void *)&__p + 1) == (void)__p) {
      goto LABEL_4;
    }
    do
      uint64_t v101 = sub_4D4B58(v101 - 160);
    while (v101 != v48);
LABEL_3:
    uint64_t v7 = (void *)__p;
    goto LABEL_4;
  }
  return result;
}

void sub_862D5C(_Unwind_Exception *a1)
{
  sub_639B78(&STACK[0x208]);
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

void sub_862EA0(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

void sub_862EB4(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

void sub_862EC8(void *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v3 = (const std::string **)a1[997];
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (*v3 == v5) {
    return;
  }
  long long v32 = a1 + 647;
  do
  {
    sub_8A44CC(v4, (uint64_t)&__p);
    sub_639530((uint64_t)v39, (uint64_t)&__p, v32, 0, 0, 1);
    if ((int64_t)v4[1].__r_.__value_.__l.__size_ >= a1[649]) {
      uint64_t size = a1[649];
    }
    else {
      uint64_t size = v4[1].__r_.__value_.__l.__size_;
    }
    sub_2F99CC(&v33, size, v4[1].__r_.__value_.__r.__words[2]);
    sub_638424((uint64_t)v39, &v33);
    sub_69200((uint64_t)v39, *(unsigned __int8 *)(a1[270] + 431));
    sub_63841C((uint64_t)v39, 82);
    unint64_t v9 = a2[1];
    if (v9 >= a2[2])
    {
      uint64_t v11 = sub_75796C(a2, (uint64_t)v39);
    }
    else
    {
      __n128 v10 = sub_757B28((uint64_t)(a2 + 2), a2[1], (uint64_t)v39);
      uint64_t v11 = v9 + 408;
      a2[1] = v9 + 408;
    }
    a2[1] = v11;
    if (v50)
    {
      int v51 = v50;
      operator delete(v50);
    }
    if (v48)
    {
      uint64_t v49 = v48;
      operator delete(v48);
    }
    uint64_t v12 = (void **)v46;
    if (v46)
    {
      long long v13 = v47;
      long long v14 = v46;
      if (v47 == v46) {
        goto LABEL_50;
      }
      while (1)
      {
        long long v16 = (std::__shared_weak_count *)*(v13 - 2);
        if (!v16 || atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          long long v17 = (void **)*(v13 - 8);
          if (v17) {
            goto LABEL_36;
          }
          goto LABEL_25;
        }
        ((void (*)(std::__shared_weak_count *, __n128))v16->__on_zero_shared)(v16, v10);
        std::__shared_weak_count::__release_weak(v16);
        long long v17 = (void **)*(v13 - 8);
        if (v17) {
          break;
        }
LABEL_25:
        long long v18 = *(v13 - 10);
        *(v13 - 10) = 0;
        if (v18) {
          operator delete(v18);
        }
        int v19 = v13 - 13;
        int v20 = (void **)*(v13 - 13);
        if (v20)
        {
          unint64_t v21 = (void **)*(v13 - 12);
          uint64_t v15 = *(v13 - 13);
          if (v21 != v20)
          {
            do
            {
              if (*((char *)v21 - 1) < 0) {
                operator delete(*(v21 - 3));
              }
              v21 -= 3;
            }
            while (v21 != v20);
            uint64_t v15 = *v19;
          }
          *(v13 - 12) = v20;
          operator delete(v15);
        }
        v13 -= 13;
        if (v19 == v12)
        {
          long long v14 = v46;
LABEL_50:
          uint64_t v47 = v12;
          operator delete(v14);
          goto LABEL_51;
        }
      }
      while (1)
      {
LABEL_36:
        uint64_t v22 = (void **)*v17;
        if (*((char *)v17 + 191) < 0)
        {
          operator delete(v17[21]);
          if ((*((char *)v17 + 159) & 0x80000000) == 0)
          {
LABEL_38:
            if ((*((char *)v17 + 135) & 0x80000000) == 0) {
              goto LABEL_39;
            }
            goto LABEL_45;
          }
        }
        else if ((*((char *)v17 + 159) & 0x80000000) == 0)
        {
          goto LABEL_38;
        }
        operator delete(v17[17]);
        if ((*((char *)v17 + 135) & 0x80000000) == 0)
        {
LABEL_39:
          if ((*((char *)v17 + 95) & 0x80000000) == 0) {
            goto LABEL_40;
          }
          goto LABEL_46;
        }
LABEL_45:
        operator delete(v17[14]);
        if ((*((char *)v17 + 95) & 0x80000000) == 0)
        {
LABEL_40:
          if ((*((char *)v17 + 63) & 0x80000000) == 0) {
            goto LABEL_41;
          }
          goto LABEL_47;
        }
LABEL_46:
        operator delete(v17[9]);
        if ((*((char *)v17 + 63) & 0x80000000) == 0)
        {
LABEL_41:
          if (*((char *)v17 + 39) < 0) {
            goto LABEL_48;
          }
          goto LABEL_35;
        }
LABEL_47:
        operator delete(v17[5]);
        if (*((char *)v17 + 39) < 0) {
LABEL_48:
        }
          operator delete(v17[2]);
LABEL_35:
        operator delete(v17);
        long long v17 = v22;
        if (!v22) {
          goto LABEL_25;
        }
      }
    }
LABEL_51:
    if (v44)
    {
      uint64_t v45 = v44;
      operator delete(v44);
    }
    if (v42)
    {
      uint64_t v43 = v42;
      operator delete(v42);
    }
    unint64_t v23 = v40;
    if (v40)
    {
      uint64_t v24 = (uint64_t)v41;
      long long v25 = v40;
      if (v41 != v40)
      {
        do
          uint64_t v24 = sub_4D4B58(v24 - 160);
        while ((void *)v24 != v23);
        long long v25 = v40;
      }
      long long v41 = v23;
      operator delete(v25);
    }
    uint64_t v26 = v38;
    if (v38 && !atomic_fetch_add(&v38->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *, __n128))v26->__on_zero_shared)(v26, v10);
      std::__shared_weak_count::__release_weak(v26);
      long long v27 = (void **)v37;
      if (!v37) {
        goto LABEL_63;
      }
      while (1)
      {
LABEL_74:
        long long v31 = (void **)*v27;
        if (*((char *)v27 + 191) < 0)
        {
          operator delete(v27[21]);
          if ((*((char *)v27 + 159) & 0x80000000) == 0)
          {
LABEL_76:
            if ((*((char *)v27 + 135) & 0x80000000) == 0) {
              goto LABEL_77;
            }
            goto LABEL_83;
          }
        }
        else if ((*((char *)v27 + 159) & 0x80000000) == 0)
        {
          goto LABEL_76;
        }
        operator delete(v27[17]);
        if ((*((char *)v27 + 135) & 0x80000000) == 0)
        {
LABEL_77:
          if ((*((char *)v27 + 95) & 0x80000000) == 0) {
            goto LABEL_78;
          }
          goto LABEL_84;
        }
LABEL_83:
        operator delete(v27[14]);
        if ((*((char *)v27 + 95) & 0x80000000) == 0)
        {
LABEL_78:
          if ((*((char *)v27 + 63) & 0x80000000) == 0) {
            goto LABEL_79;
          }
          goto LABEL_85;
        }
LABEL_84:
        operator delete(v27[9]);
        if ((*((char *)v27 + 63) & 0x80000000) == 0)
        {
LABEL_79:
          if (*((char *)v27 + 39) < 0) {
            goto LABEL_86;
          }
          goto LABEL_73;
        }
LABEL_85:
        operator delete(v27[5]);
        if (*((char *)v27 + 39) < 0) {
LABEL_86:
        }
          operator delete(v27[2]);
LABEL_73:
        operator delete(v27);
        long long v27 = v31;
        if (!v31) {
          goto LABEL_63;
        }
      }
    }
    long long v27 = (void **)v37;
    if (v37) {
      goto LABEL_74;
    }
LABEL_63:
    long long v28 = v36;
    uint64_t v36 = 0;
    if (v28) {
      operator delete(v28);
    }
    uint64_t v29 = (void **)__p;
    if (__p)
    {
      long long v30 = v35;
      uint64_t v7 = __p;
      if (v35 != __p)
      {
        do
        {
          if (*((char *)v30 - 1) < 0) {
            operator delete(*(v30 - 3));
          }
          v30 -= 3;
        }
        while (v30 != v29);
        uint64_t v7 = __p;
      }
      long long v35 = v29;
      operator delete(v7);
    }
    v4 += 2;
  }
  while (v4 != v5);
}

void sub_863380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  v28[1] = v29;
  sub_639B78(&a28);
  sub_4F31D0(&a15);
  sub_591DFC(v28);
  _Unwind_Resume(a1);
}

void sub_8633E4(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_8A7868((uint64_t)&v17);
  sub_639530(a3, (uint64_t)&v17, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a3, 73);
  uint64_t v6 = sub_62C7DC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = *a2;
  uint64_t v8 = sub_62C848(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_2F99CC(&v22, v7 + v6, *a2 + v8);
  __n128 v16 = v22;
  sub_638424(a3, &v16);
  sub_69200(a3, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 430));
  unint64_t v9 = v21;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  __n128 v10 = v20;
  if (v20)
  {
    do
    {
      uint64_t v11 = (void *)*v10;
      sub_4F4B48((uint64_t)(v10 + 2));
      operator delete(v10);
      __n128 v10 = v11;
    }
    while (v11);
  }
  uint64_t v12 = __p;
  long long __p = 0;
  if (v12) {
    operator delete(v12);
  }
  long long v13 = (void **)v17;
  if (v17)
  {
    long long v14 = v18;
    uint64_t v15 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v14 - 1) < 0) {
          operator delete(*(v14 - 3));
        }
        v14 -= 3;
      }
      while (v14 != v13);
      uint64_t v15 = v17;
    }
    long long v18 = v13;
    operator delete(v15);
  }
}

void sub_863578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86358C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_8635AC(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_8A7738((uint64_t)&v17);
  sub_639530(a3, (uint64_t)&v17, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a3, 72);
  uint64_t v6 = sub_62C7DC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = *a2;
  uint64_t v8 = sub_62C848(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_2F99CC(&v22, v7 + v6, *a2 + v8);
  __n128 v16 = v22;
  sub_638424(a3, &v16);
  sub_69200(a3, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 430));
  unint64_t v9 = v21;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  __n128 v10 = v20;
  if (v20)
  {
    do
    {
      uint64_t v11 = (void *)*v10;
      sub_4F4B48((uint64_t)(v10 + 2));
      operator delete(v10);
      __n128 v10 = v11;
    }
    while (v11);
  }
  uint64_t v12 = __p;
  long long __p = 0;
  if (v12) {
    operator delete(v12);
  }
  long long v13 = (void **)v17;
  if (v17)
  {
    long long v14 = v18;
    uint64_t v15 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v14 - 1) < 0) {
          operator delete(*(v14 - 3));
        }
        v14 -= 3;
      }
      while (v14 != v13);
      uint64_t v15 = v17;
    }
    long long v18 = v13;
    operator delete(v15);
  }
}

void sub_863740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_863754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_863774(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  sub_8A7BF4(a1 + 2200, a3, a4, (uint64_t)&v22);
  sub_639530(a5, (uint64_t)&v22, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a5, 71);
  __n128 v10 = (void *)(a3 + 88);
  if (a4) {
    sub_638760(a5, v10);
  }
  else {
    sub_63876C(a5, v10);
  }
  uint64_t v11 = sub_62C7DC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v12 = *a2;
  uint64_t v13 = sub_62C848(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_2F99CC(&v27, v12 + v11, *a2 + v13);
  __n128 v21 = v27;
  sub_638424(a5, &v21);
  sub_69200(a5, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 430));
  long long v14 = v26;
  if (v26 && !atomic_fetch_add(&v26->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  uint64_t v15 = v25;
  if (v25)
  {
    do
    {
      __n128 v16 = (void *)*v15;
      sub_4F4B48((uint64_t)(v15 + 2));
      operator delete(v15);
      uint64_t v15 = v16;
    }
    while (v16);
  }
  long long v17 = __p;
  long long __p = 0;
  if (v17) {
    operator delete(v17);
  }
  long long v18 = (void **)v22;
  if (v22)
  {
    int v19 = v23;
    int v20 = v22;
    if (v23 != v22)
    {
      do
      {
        if (*((char *)v19 - 1) < 0) {
          operator delete(*(v19 - 3));
        }
        v19 -= 3;
      }
      while (v19 != v18);
      int v20 = v22;
    }
    unint64_t v23 = v18;
    operator delete(v20);
  }
}

void sub_863934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_863948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_863968(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_8A7998((uint64_t)&v17);
  sub_639530(a3, (uint64_t)&v17, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a3, 71);
  uint64_t v6 = sub_62C7DC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = *a2;
  uint64_t v8 = sub_62C848(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_2F99CC(&v22, v7 + v6, *a2 + v8);
  __n128 v16 = v22;
  sub_638424(a3, &v16);
  sub_69200(a3, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 430));
  unint64_t v9 = v21;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  __n128 v10 = v20;
  if (v20)
  {
    do
    {
      uint64_t v11 = (void *)*v10;
      sub_4F4B48((uint64_t)(v10 + 2));
      operator delete(v10);
      __n128 v10 = v11;
    }
    while (v11);
  }
  uint64_t v12 = __p;
  long long __p = 0;
  if (v12) {
    operator delete(v12);
  }
  uint64_t v13 = (void **)v17;
  if (v17)
  {
    long long v14 = v18;
    uint64_t v15 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v14 - 1) < 0) {
          operator delete(*(v14 - 3));
        }
        v14 -= 3;
      }
      while (v14 != v13);
      uint64_t v15 = v17;
    }
    long long v18 = v13;
    operator delete(v15);
  }
}

void sub_863AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_863B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_863B30(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_8A8478((uint64_t)&v17);
  sub_639530(a3, (uint64_t)&v17, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a3, 74);
  uint64_t v6 = sub_62C7DC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = *a2;
  uint64_t v8 = sub_62C848(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_2F99CC(&v22, v7 + v6, *a2 + v8);
  __n128 v16 = v22;
  sub_638424(a3, &v16);
  sub_69200(a3, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 430));
  unint64_t v9 = v21;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  __n128 v10 = v20;
  if (v20)
  {
    do
    {
      uint64_t v11 = (void *)*v10;
      sub_4F4B48((uint64_t)(v10 + 2));
      operator delete(v10);
      __n128 v10 = v11;
    }
    while (v11);
  }
  uint64_t v12 = __p;
  long long __p = 0;
  if (v12) {
    operator delete(v12);
  }
  uint64_t v13 = (void **)v17;
  if (v17)
  {
    long long v14 = v18;
    uint64_t v15 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v14 - 1) < 0) {
          operator delete(*(v14 - 3));
        }
        v14 -= 3;
      }
      while (v14 != v13);
      uint64_t v15 = v17;
    }
    long long v18 = v13;
    operator delete(v15);
  }
}

void sub_863CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_863CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_863CF8(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_8A85A8((uint64_t)&v17);
  sub_639530(a3, (uint64_t)&v17, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a3, 75);
  uint64_t v6 = sub_62C7DC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = *a2;
  uint64_t v8 = sub_62C848(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_2F99CC(&v22, v7 + v6, *a2 + v8);
  __n128 v16 = v22;
  sub_638424(a3, &v16);
  sub_69200(a3, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 430));
  unint64_t v9 = v21;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  __n128 v10 = v20;
  if (v20)
  {
    do
    {
      uint64_t v11 = (void *)*v10;
      sub_4F4B48((uint64_t)(v10 + 2));
      operator delete(v10);
      __n128 v10 = v11;
    }
    while (v11);
  }
  uint64_t v12 = __p;
  long long __p = 0;
  if (v12) {
    operator delete(v12);
  }
  uint64_t v13 = (void **)v17;
  if (v17)
  {
    long long v14 = v18;
    uint64_t v15 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v14 - 1) < 0) {
          operator delete(*(v14 - 3));
        }
        v14 -= 3;
      }
      while (v14 != v13);
      uint64_t v15 = v17;
    }
    long long v18 = v13;
    operator delete(v15);
  }
}

void sub_863E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_863EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_863EC0(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_8A86D8((uint64_t)&v17);
  sub_639530(a3, (uint64_t)&v17, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a3, 78);
  uint64_t v6 = sub_62C7DC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = *a2;
  uint64_t v8 = sub_62C848(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_2F99CC(&v22, v7 + v6, *a2 + v8);
  __n128 v16 = v22;
  sub_638424(a3, &v16);
  sub_69200(a3, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 430));
  unint64_t v9 = v21;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  __n128 v10 = v20;
  if (v20)
  {
    do
    {
      uint64_t v11 = (void *)*v10;
      sub_4F4B48((uint64_t)(v10 + 2));
      operator delete(v10);
      __n128 v10 = v11;
    }
    while (v11);
  }
  uint64_t v12 = __p;
  long long __p = 0;
  if (v12) {
    operator delete(v12);
  }
  uint64_t v13 = (void **)v17;
  if (v17)
  {
    long long v14 = v18;
    uint64_t v15 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v14 - 1) < 0) {
          operator delete(*(v14 - 3));
        }
        v14 -= 3;
      }
      while (v14 != v13);
      uint64_t v15 = v17;
    }
    long long v18 = v13;
    operator delete(v15);
  }
}

void sub_864054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_864068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_864088(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_8A8808((uint64_t)&v17);
  sub_639530(a3, (uint64_t)&v17, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a3, 76);
  uint64_t v6 = sub_62C7DC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = *a2;
  uint64_t v8 = sub_62C848(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_2F99CC(&v22, v7 + v6, *a2 + v8);
  __n128 v16 = v22;
  sub_638424(a3, &v16);
  sub_69200(a3, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 430));
  unint64_t v9 = v21;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  __n128 v10 = v20;
  if (v20)
  {
    do
    {
      uint64_t v11 = (void *)*v10;
      sub_4F4B48((uint64_t)(v10 + 2));
      operator delete(v10);
      __n128 v10 = v11;
    }
    while (v11);
  }
  uint64_t v12 = __p;
  long long __p = 0;
  if (v12) {
    operator delete(v12);
  }
  uint64_t v13 = (void **)v17;
  if (v17)
  {
    long long v14 = v18;
    uint64_t v15 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v14 - 1) < 0) {
          operator delete(*(v14 - 3));
        }
        v14 -= 3;
      }
      while (v14 != v13);
      uint64_t v15 = v17;
    }
    long long v18 = v13;
    operator delete(v15);
  }
}

void sub_86421C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_864230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_864250(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_8A8938((uint64_t)&v17);
  sub_639530(a3, (uint64_t)&v17, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a3, 79);
  uint64_t v6 = sub_62C7DC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = *a2;
  uint64_t v8 = sub_62C848(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_2F99CC(&v22, v7 + v6, *a2 + v8);
  __n128 v16 = v22;
  sub_638424(a3, &v16);
  sub_69200(a3, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 430));
  unint64_t v9 = v21;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  __n128 v10 = v20;
  if (v20)
  {
    do
    {
      uint64_t v11 = (void *)*v10;
      sub_4F4B48((uint64_t)(v10 + 2));
      operator delete(v10);
      __n128 v10 = v11;
    }
    while (v11);
  }
  uint64_t v12 = __p;
  long long __p = 0;
  if (v12) {
    operator delete(v12);
  }
  uint64_t v13 = (void **)v17;
  if (v17)
  {
    long long v14 = v18;
    uint64_t v15 = v17;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v14 - 1) < 0) {
          operator delete(*(v14 - 3));
        }
        v14 -= 3;
      }
      while (v14 != v13);
      uint64_t v15 = v17;
    }
    long long v18 = v13;
    operator delete(v15);
  }
}

void sub_8643E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_8643F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_864418(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 2160);
  double v3 = *(double *)(v2 + 2008) / 3.6;
  int v4 = sub_62BFB0((unsigned int *)v2, *(_DWORD *)(a1 + 5188));
  if (v4 < 0) {
    char v5 = -5;
  }
  else {
    char v5 = 5;
  }
  signed int v6 = v4 / 10 + (((103 * (char)(v5 + v4 % 10)) >> 15) & 1) + ((103 * (char)(v5 + v4 % 10)) >> 10);
  int v7 = sub_62C01C(*(unsigned int **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (v7 < 0) {
    char v8 = -5;
  }
  else {
    char v8 = 5;
  }
  unsigned int v9 = (((103 * (char)(v8 + v7 % 10)) >> 15) & 1) + ((103 * (char)(v8 + v7 % 10)) >> 10);
  double v10 = v3 * (double)v6 * 100.0;
  if (v10 >= 0.0)
  {
    double v11 = v3 * (double)v6 * 100.0;
    if (v10 >= 4.50359963e15) {
      goto LABEL_15;
    }
    uint64_t v12 = (uint64_t)(v10 + v10) + 1;
  }
  else
  {
    double v11 = v3 * (double)v6 * 100.0;
    if (v10 <= -4.50359963e15) {
      goto LABEL_15;
    }
    uint64_t v12 = (uint64_t)(v10 + v10);
    if (v12 >= 1) {
      --v12;
    }
  }
  double v11 = (double)(v12 >> 1);
LABEL_15:
  int v13 = v7 / 10 + v9;
  if (v11 >= 9.22337204e18)
  {
    uint64_t v15 = 0x7FFFFFFFFFFFFFFELL;
    goto LABEL_26;
  }
  if (v10 >= 0.0)
  {
    if (v10 < 4.50359963e15)
    {
      uint64_t v14 = (uint64_t)(v10 + v10) + 1;
LABEL_24:
      double v10 = (double)(v14 >> 1);
    }
  }
  else if (v10 > -4.50359963e15)
  {
    uint64_t v14 = (uint64_t)(v10 + v10);
    if (v14 >= 1) {
      --v14;
    }
    goto LABEL_24;
  }
  uint64_t v15 = (uint64_t)v10;
LABEL_26:
  uint64_t v16 = *(void *)(a1 + 5192);
  if (v15 >= v16) {
    uint64_t v15 = *(void *)(a1 + 5192);
  }
  uint64_t v53 = v15;
  double v17 = v3 * (double)v13 * 100.0;
  if (v17 >= 0.0)
  {
    double v18 = v3 * (double)v13 * 100.0;
    if (v17 >= 4.50359963e15) {
      goto LABEL_36;
    }
    uint64_t v19 = (uint64_t)(v17 + v17) + 1;
  }
  else
  {
    double v18 = v3 * (double)v13 * 100.0;
    if (v17 <= -4.50359963e15) {
      goto LABEL_36;
    }
    uint64_t v19 = (uint64_t)(v17 + v17);
    if (v19 >= 1) {
      --v19;
    }
  }
  double v18 = (double)(v19 >> 1);
LABEL_36:
  if (v18 >= 9.22337204e18)
  {
    uint64_t v21 = 0x7FFFFFFFFFFFFFFELL;
    goto LABEL_47;
  }
  if (v17 >= 0.0)
  {
    if (v17 < 4.50359963e15)
    {
      uint64_t v20 = (uint64_t)(v17 + v17) + 1;
LABEL_45:
      double v17 = (double)(v20 >> 1);
    }
  }
  else if (v17 > -4.50359963e15)
  {
    uint64_t v20 = (uint64_t)(v17 + v17);
    if (v20 >= 1) {
      --v20;
    }
    goto LABEL_45;
  }
  uint64_t v21 = (uint64_t)v17;
LABEL_47:
  if (v21 < v16) {
    uint64_t v16 = v21;
  }
  uint64_t v52 = v16;
  __n128 v22 = (uint64_t **)(a1 + 5200);
  sub_63AD48(v22, &v53, &v52, 1, (uint64_t)v42);
  sub_63AF84(v22, &v53, &v52, (uint64_t)v32);
  BOOL v23 = sub_564868(v42);
  uint64_t v24 = v42[0];
  uint64_t v25 = v53;
  BOOL v26 = sub_564868(v32);
  uint64_t v27 = v32[0];
  uint64_t v28 = v53;
  if (v41 < 0)
  {
    operator delete(__p);
    if ((v39 & 0x80000000) == 0)
    {
LABEL_51:
      if ((v37 & 0x80000000) == 0) {
        goto LABEL_52;
      }
      goto LABEL_72;
    }
  }
  else if ((v39 & 0x80000000) == 0)
  {
    goto LABEL_51;
  }
  operator delete(v38);
  if ((v37 & 0x80000000) == 0)
  {
LABEL_52:
    if ((v35 & 0x80000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_73;
  }
LABEL_72:
  operator delete(v36);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_53:
    if ((v33 & 0x80000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_74;
  }
LABEL_73:
  operator delete(v34);
  if ((v33 & 0x80000000) == 0)
  {
LABEL_54:
    if ((v51 & 0x80000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_75;
  }
LABEL_74:
  operator delete((void *)v32[1]);
  if ((v51 & 0x80000000) == 0)
  {
LABEL_55:
    if ((v49 & 0x80000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_76;
  }
LABEL_75:
  operator delete(v50);
  if ((v49 & 0x80000000) == 0)
  {
LABEL_56:
    if ((v47 & 0x80000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_77;
  }
LABEL_76:
  operator delete(v48);
  if ((v47 & 0x80000000) == 0)
  {
LABEL_57:
    if ((v45 & 0x80000000) == 0) {
      goto LABEL_58;
    }
LABEL_78:
    operator delete(v44);
    if ((v43 & 0x80000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_79;
  }
LABEL_77:
  operator delete(v46);
  if (v45 < 0) {
    goto LABEL_78;
  }
LABEL_58:
  if ((v43 & 0x80000000) == 0) {
    goto LABEL_59;
  }
LABEL_79:
  operator delete((void *)v42[1]);
LABEL_59:
  if (v26) {
    uint64_t v29 = v27;
  }
  else {
    uint64_t v29 = v28;
  }
  if (v23) {
    uint64_t v30 = v24;
  }
  else {
    uint64_t v30 = v25;
  }
  if (v30 >= v28) {
    uint64_t v30 = v28;
  }
  if (v29 >= v30) {
    return v30;
  }
  else {
    return v29;
  }
}

void sub_86483C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
}

void sub_86485C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
}

uint64_t sub_864870(uint64_t a1)
{
  uint64_t v2 = (unsigned char *)(a1 + 5912);
  uint64_t v3 = sub_62BB78(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v4 = *(void *)(a1 + 5192);
  if (v4 >= v3) {
    uint64_t v4 = v3;
  }
  uint64_t v33 = v4;
  if (v2[1889])
  {
    uint64_t v5 = sub_62BBE4(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v6 = *(void *)(a1 + 5192);
    if (v6 >= v5) {
      uint64_t v6 = v5;
    }
    int v7 = v2[1889];
    uint64_t v32 = v6;
    if (v7)
    {
      uint64_t v8 = sub_62BAA0(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
      if (*(void *)(a1 + 5192) >= v8) {
        uint64_t v9 = v8;
      }
      else {
        uint64_t v9 = *(void *)(a1 + 5192);
      }
      if (!v2[1996]) {
        goto LABEL_11;
      }
LABEL_18:
      uint64_t v10 = *(void *)(a1 + 5344);
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v32 = v4;
  }
  uint64_t v11 = sub_62BB0C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (*(void *)(a1 + 5192) >= v11) {
    uint64_t v9 = v11;
  }
  else {
    uint64_t v9 = *(void *)(a1 + 5192);
  }
  if (v2[1996]) {
    goto LABEL_18;
  }
LABEL_11:
  if (v2[2001])
  {
    uint64_t v10 = *(void *)(a1 + 7072);
    goto LABEL_19;
  }
  if (!v2[1999])
  {
    if (v2[1997] && v2[768]) {
      return *(void *)(a1 + 6496);
    }
    if (!v2[1889])
    {
LABEL_43:
      uint64_t v15 = v9;
      if (v2[192]) {
        uint64_t v15 = *(void *)(a1 + 5920);
      }
      if (*v2) {
        uint64_t v16 = v32;
      }
      else {
        uint64_t v16 = v15;
      }
      uint64_t v17 = v9;
      if (v2[1889]) {
        uint64_t v17 = sub_683498(a1 + 7464);
      }
      if (v2[1890]) {
        uint64_t v18 = sub_85642C(a1, v9);
      }
      else {
        uint64_t v18 = v9;
      }
      uint64_t v19 = v32;
      if (v32 <= v17) {
        uint64_t v19 = v17;
      }
      if (v18 >= v9) {
        uint64_t v20 = v9;
      }
      else {
        uint64_t v20 = v18;
      }
      if (v16 < v20) {
        uint64_t v20 = v16;
      }
      if (v19 >= v20) {
        return v20;
      }
      else {
        return v19;
      }
    }
    sub_63AD1C((uint64_t **)(a1 + 5200), &v33, 1, (uint64_t)v22);
    if (sub_564868(v22))
    {
      BOOL v14 = 1;
      uint64_t v13 = v33;
    }
    else
    {
      sub_63AD1C((uint64_t **)(a1 + 5200), &v32, 1, (uint64_t)v21);
      BOOL v14 = sub_564868(v21);
      uint64_t v13 = v21[0];
      sub_7D0A58((uint64_t)v21);
    }
    if (v31 < 0)
    {
      operator delete(__p);
      if ((v29 & 0x80000000) == 0)
      {
LABEL_33:
        if ((v27 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        goto LABEL_40;
      }
    }
    else if ((v29 & 0x80000000) == 0)
    {
      goto LABEL_33;
    }
    operator delete(v28);
    if ((v27 & 0x80000000) == 0)
    {
LABEL_34:
      if ((v25 & 0x80000000) == 0) {
        goto LABEL_35;
      }
      goto LABEL_41;
    }
LABEL_40:
    operator delete(v26);
    if ((v25 & 0x80000000) == 0)
    {
LABEL_35:
      if ((v23 & 0x80000000) == 0) {
        goto LABEL_36;
      }
      goto LABEL_42;
    }
LABEL_41:
    operator delete(v24);
    if ((v23 & 0x80000000) == 0)
    {
LABEL_36:
      if (v14) {
        return v13;
      }
      goto LABEL_43;
    }
LABEL_42:
    operator delete(v22[1]);
    if (v14) {
      return v13;
    }
    goto LABEL_43;
  }
  uint64_t v10 = *(void *)(a1 + 6112);
LABEL_19:
  if (v10 >= v9) {
    return v9;
  }
  else {
    return v10;
  }
}

void sub_864AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
}

void sub_864B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
}

void sub_864B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
}

uint64_t sub_864B40(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6)
{
  uint64_t v13 = (void *)sub_7E94D4(a1, (uint64_t)a2, a3, a4, a5, a6);
  void *v13 = off_243AB18;
  uint64_t v185 = (uint64_t)(v13 + 275);
  uint64_t v200 = a4;
  uint64_t v202 = a5;
  sub_8AF26C((std::string::size_type)(v13 + 275), (uint64_t)a2, a3, a4, a5, a6);
  *(void *)(a1 + 5144) = 0x7FFFFFFFFFFFFFFFLL;
  BOOL v14 = (char *)(a1 + 5184);
  *(void *)(a1 + 5152) = 0;
  unint64_t v203 = (char **)(a1 + 5152);
  *(void *)(a1 + 5168) = 0;
  *(void *)(a1 + 5160) = 0;
  *(void *)(a1 + 5176) = 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(a1 + 5184) = 0;
  *(unsigned char *)(a1 + 5186) = 0;
  *(void *)(a1 + 5192) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 5200) = 0;
  *(void *)(a1 + 5216) = 0;
  *(void *)(a1 + 5208) = 0;
  *(unsigned char *)(a1 + 5224) = 1;
  uint64_t v198 = (_OWORD *)(a1 + 5224);
  *(_DWORD *)(a1 + 5228) = 0;
  *(void *)(a1 + 5232) = -1;
  *(void *)(a1 + 5240) = -1;
  *(_OWORD *)(a1 + 5256) = 0u;
  *(void *)(a1 + 5248) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 5304) = 0;
  *(_OWORD *)(a1 + 5288) = 0u;
  uint64_t v201 = (uint64_t **)(a1 + 5200);
  *(_OWORD *)(a1 + 5272) = 0u;
  *(void *)(a1 + 5312) = 0xBFF0000000000000;
  *(unsigned char *)(a1 + 5320) = 0;
  *(void *)(a1 + 5328) = 0;
  *(void *)(a1 + 5336) = 0;
  *(void *)(a1 + 5344) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 5352);
  *(void *)(a1 + 5512) = -1;
  uint64_t v194 = (uint64_t *)(a1 + 5344);
  *(void *)(a1 + 5504) = -1;
  *(void *)(a1 + 5520) = 0;
  *(unsigned char *)(a1 + 5528) = 0;
  *(void *)(a1 + 5536) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 5544);
  *(void *)(a1 + 5704) = -1;
  *(void *)(a1 + 5696) = -1;
  *(void *)(a1 + 5712) = 0;
  *(unsigned char *)(a1 + 5720) = 0;
  *(void *)(a1 + 5728) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 5736);
  *(void *)(a1 + 5896) = -1;
  *(void *)(a1 + 5888) = -1;
  *(void *)(a1 + 5904) = 0;
  *(unsigned char *)(a1 + 5912) = 0;
  *(void *)(a1 + 5920) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 5928);
  *(void *)(a1 + 6088) = -1;
  *(void *)(a1 + 6080) = -1;
  *(void *)(a1 + 6096) = 0;
  *(unsigned char *)(a1 + 6104) = 0;
  *(void *)(a1 + 6112) = 0x7FFFFFFFFFFFFFFFLL;
  long long v188 = (void **)(a1 + 6120);
  sub_6F30A4(a1 + 6120);
  *(void *)(a1 + 6280) = -1;
  unint64_t v199 = (uint64_t *)(a1 + 6112);
  *(void *)(a1 + 6272) = -1;
  *(void *)(a1 + 6288) = 0;
  *(unsigned char *)(a1 + 6296) = 0;
  *(void *)(a1 + 6304) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 6312);
  *(void *)(a1 + 6472) = -1;
  int v191 = (uint64_t *)(a1 + 6304);
  *(void *)(a1 + 6464) = -1;
  *(void *)(a1 + 6480) = 0;
  *(unsigned char *)(a1 + 6488) = 0;
  *(void *)(a1 + 6496) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 6504);
  *(void *)(a1 + 6664) = -1;
  *(void *)(a1 + 6656) = -1;
  *(void *)(a1 + 6672) = 0;
  *(unsigned char *)(a1 + 6680) = 0;
  *(void *)(a1 + 6688) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 6696);
  *(void *)(a1 + 6856) = -1;
  *(void *)(a1 + 6848) = -1;
  *(void *)(a1 + 6864) = 0;
  *(unsigned char *)(a1 + 6872) = 0;
  *(void *)(a1 + 6880) = 0x7FFFFFFFFFFFFFFFLL;
  sub_6F30A4(a1 + 6888);
  *(void *)(a1 + 7048) = -1;
  char v193 = (uint64_t *)(a1 + 6880);
  *(void *)(a1 + 7040) = -1;
  *(void *)(a1 + 7056) = 0;
  *(unsigned char *)(a1 + 7064) = 0;
  *(void *)(a1 + 7072) = 0x7FFFFFFFFFFFFFFFLL;
  int v192 = (void **)(a1 + 7080);
  sub_6F30A4(a1 + 7080);
  unint64_t v196 = (void *)(a1 + 7072);
  *(void *)(a1 + 7240) = -1;
  *(void *)(a1 + 7232) = -1;
  *(_OWORD *)(a1 + 7248) = xmmword_20E8160;
  long long v186 = (void **)(a1 + 7264);
  sub_6F30A4(a1 + 7264);
  unint64_t v15 = a5;
  *(void *)(a1 + 7424) = -1;
  *(void *)(a1 + 7416) = -1;
  uint64_t v195 = (uint64_t *)(a1 + 7440);
  *(_OWORD *)(a1 + 7432) = 0u;
  *(_OWORD *)(a1 + 7448) = 0u;
  uint64_t v190 = a1 + 7464;
  sub_68206C(a1 + 7464);
  *(void *)(a1 + 7824) = 0;
  *(void *)(a1 + 7816) = 0;
  *(void *)(a1 + 7840) = 0;
  *(void *)(a1 + 7832) = 0;
  *(_DWORD *)(a1 + 7800) = 0;
  *(_DWORD *)(a1 + 7803) = 0;
  *(void *)(a1 + 7808) = off_243A000;
  *(_DWORD *)(a1 + 7848) = 0;
  *(unsigned char *)(a1 + 7852) = 1;
  *(unsigned char *)(a1 + 7856) = 0;
  int64x2_t v16 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  *(int64x2_t *)(a1 + 7864) = v16;
  *(int64x2_t *)(a1 + 7880) = v16;
  *(void *)(a1 + 7896) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 7904) = 0;
  *(_DWORD *)(a1 + 7912) = 0;
  *(_OWORD *)(a1 + 7916) = xmmword_20E2060;
  *(_DWORD *)(a1 + 7932) = -1;
  *(void *)(a1 + 7936) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 7944) = sub_4A5E10((void *)(a4 + 1064), a5) + 1832;
  *(void *)(a1 + 7952) = sub_4A5E10((void *)(a4 + 1064), a5) + 336;
  *(void *)(a1 + 7960) = sub_4A5E10((void *)(a4 + 1064), a5) + 360;
  *(void *)(a1 + 7968) = a4 + 10176;
  *(void *)(a1 + 7976) = sub_4A5E10((void *)(a4 + 1064), a5) + 1784;
  *(unsigned char *)(a1 + 7984) = 0;
  *(_DWORD *)(a1 + 7988) = a6 + 1;
  uint64_t v17 = *(void *)(a4 + 1064);
  uint64_t v18 = v17 + 2400 * v15;
  *(_DWORD *)(a1 + 7916) = 1000 * *(_DWORD *)v18;
  *(void *)(a1 + 5144) = *(void *)(v18 + 864);
  unsigned int v21 = *(_DWORD *)(v18 + 160);
  uint64_t v20 = (_DWORD *)(v18 + 160);
  unsigned int v19 = v21;
  char v22 = 1;
  char v23 = v21 - 25;
  if (v21 - 25 <= 0x3F && ((1 << v23) & 0x9000000000000001) != 0)
  {
    uint64_t v24 = (uint64_t *)(a1 + 5200);
  }
  else
  {
    uint64_t v24 = (uint64_t *)(a1 + 5200);
    if (v19 != 17) {
      char v22 = 0;
    }
  }
  *BOOL v14 = v22;
  BOOL v26 = v19 == 85 || v19 == 88;
  *(unsigned char *)(a1 + 5185) = v26;
  if (v19 - 82 >= 3)
  {
    if (v19 > 0x27) {
      LOBYTE(v27) = 0;
    }
    else {
      unint64_t v27 = (0x8600050000uLL >> v19) & 1;
    }
  }
  else
  {
    LOBYTE(v27) = 1;
  }
  uint64_t v184 = (void *)(a1 + 7864);
  *(unsigned char *)(a1 + 5186) = v27;
  uint64_t v28 = v17 + 2400 * v202;
  *(_DWORD *)(a1 + 5188) = *(_DWORD *)(v28 + 1860);
  char v29 = (uint64_t *)(v28 + 1872);
  if (v24 == v29)
  {
    long long v32 = *(_OWORD *)(v17 + 2400 * v202 + 1912);
    _OWORD *v198 = *(_OWORD *)(v17 + 2400 * v202 + 1896);
    *(_OWORD *)(a1 + 5240) = v32;
  }
  else
  {
    sub_5A09C0(v24, *v29, v29[1], 0xD37A6F4DE9BD37A7 * ((v29[1] - *v29) >> 3));
    uint64_t v30 = v17 + 2400 * v202;
    long long v31 = *(_OWORD *)(v30 + 1912);
    _OWORD *v198 = *(_OWORD *)(v30 + 1896);
    *(_OWORD *)(a1 + 5240) = v31;
    sub_5A0D34((uint64_t *)(a1 + 5256), *(void *)(v30 + 1928), *(void *)(v30 + 1936), 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*(void *)(v30 + 1936) - *(void *)(v30 + 1928)) >> 4));
  }
  uint64_t v33 = v17 + 2400 * v202;
  long long v34 = *(_OWORD *)(v33 + 1952);
  long long v35 = *(_OWORD *)(v33 + 1968);
  *(_OWORD *)(a1 + 5305) = *(_OWORD *)(v33 + 1977);
  *(_OWORD *)(a1 + 5296) = v35;
  *(_OWORD *)(a1 + 5280) = v34;
  *(_OWORD *)(a1 + 5328) = *(_OWORD *)(v33 + 2000);
  uint64_t v36 = (uint64_t *)(v33 + 1808);
  if (v195 != (uint64_t *)(v33 + 1808)) {
    sub_59F08C(v195, *v36, *(void *)(v33 + 1816), 0xCF3CF3CF3CF3CF3DLL * ((*(void *)(v33 + 1816) - *v36) >> 4));
  }
  uint64_t v187 = v17 + 2400 * v202;
  *(unsigned char *)(a1 + 7803) = *(unsigned char *)(v187 + 1856);
  *(unsigned char *)(a1 + 7804) = sub_63A4A4((uint64_t)v198);
  *(unsigned char *)(a1 + 7806) = sub_62CDBC(a2, *(_DWORD *)(a1 + 5188));
  std::string::operator=((std::string *)(a1 + 7816), (const std::string *)(v187 + 2048));
  uint64_t v189 = v36;
  uint64_t v37 = *(void *)(v187 + 2072);
  *(void *)(a1 + 7845) = *(void *)(v187 + 2077);
  *(void *)(a1 + 7840) = v37;
  uint64_t v197 = v17;
  *(unsigned char *)(a1 + 7984) = *(unsigned char *)(v187 + 325);
  BOOL v40 = (*v20 & 0xFFFFFFFE) == 6 || (*v20 - 41) < 0x13 || *(unsigned char *)(v187 + 2226) != 0;
  *(unsigned char *)(a1 + 7805) = v40;
  uint64_t v41 = *(void *)(v187 + 688);
  uint64_t v42 = *(void *)(v187 + 696);
  if (v41 != v42)
  {
    char v43 = *(char **)(a1 + 5160);
    do
    {
      unint64_t v45 = *(void *)(a1 + 5168);
      if ((unint64_t)v43 < v45)
      {
        *(void *)char v43 = *(void *)(v41 + 152);
        uint64_t v44 = (uint64_t)(v43 + 8);
      }
      else
      {
        unsigned __int16 v46 = *v203;
        uint64_t v47 = v43 - *v203;
        uint64_t v48 = v47 >> 3;
        unint64_t v49 = (v47 >> 3) + 1;
        if (v49 >> 61) {
          sub_2E00();
        }
        uint64_t v50 = v45 - (void)v46;
        if (v50 >> 2 > v49) {
          unint64_t v49 = v50 >> 2;
        }
        if ((unint64_t)v50 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v51 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v51 = v49;
        }
        if (v51)
        {
          if (v51 >> 61) {
            sub_188D718();
          }
          uint64_t v52 = operator new(8 * v51);
          uint64_t v53 = &v52[8 * v48];
          void *v53 = *(void *)(v41 + 152);
          uint64_t v44 = (uint64_t)(v53 + 1);
          if (v43 != v46)
          {
LABEL_45:
            unint64_t v54 = v43 - 8 - v46;
            if (v54 < 0x168)
            {
              uint64_t v55 = v43;
              goto LABEL_47;
            }
            if (&v52[v47 - 8 - (v54 & 0xFFFFFFFFFFFFFFF8)] > &v52[v47 - 8])
            {
              uint64_t v55 = v43;
              goto LABEL_47;
            }
            if (&v43[-(v54 & 0xFFFFFFFFFFFFFFF8) - 8] > v43 - 8)
            {
              uint64_t v55 = v43;
              goto LABEL_47;
            }
            if ((unint64_t)(v43 - v52 - v47) < 0x20)
            {
              uint64_t v55 = v43;
              goto LABEL_47;
            }
            uint64_t v57 = (v54 >> 3) + 1;
            uint64_t v58 = 8 * (v57 & 0x3FFFFFFFFFFFFFFCLL);
            uint64_t v55 = &v43[-v58];
            uint64_t v53 = (void *)((char *)v53 - v58);
            uint64_t v59 = &v52[8 * v48 - 16];
            long long v60 = v43 - 16;
            uint64_t v61 = v57 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v62 = *(_OWORD *)v60;
              *(v59 - 1) = *((_OWORD *)v60 - 1);
              *uint64_t v59 = v62;
              v59 -= 2;
              v60 -= 32;
              v61 -= 4;
            }
            while (v61);
            if (v57 != (v57 & 0x3FFFFFFFFFFFFFFCLL))
            {
              do
              {
LABEL_47:
                uint64_t v56 = *((void *)v55 - 1);
                v55 -= 8;
                *--uint64_t v53 = v56;
              }
              while (v55 != v46);
            }
            char v43 = *v203;
            *(void *)(a1 + 5152) = v53;
            *(void *)(a1 + 5160) = v44;
            *(void *)(a1 + 5168) = &v52[8 * v51];
            if (!v43) {
              goto LABEL_34;
            }
LABEL_52:
            operator delete(v43);
            goto LABEL_34;
          }
        }
        else
        {
          uint64_t v52 = 0;
          uint64_t v53 = (void *)(8 * v48);
          *(void *)(8 * v48) = *(void *)(v41 + 152);
          uint64_t v44 = 8 * v48 + 8;
          if (v43 != v46) {
            goto LABEL_45;
          }
        }
        *(void *)(a1 + 5152) = v53;
        *(void *)(a1 + 5160) = v44;
        *(void *)(a1 + 5168) = &v52[8 * v51];
        if (v43) {
          goto LABEL_52;
        }
      }
LABEL_34:
      *(void *)(a1 + 5160) = v44;
      v41 += 160;
      char v43 = (char *)v44;
    }
    while (v41 != v42);
  }
  uint64_t v63 = *(void *)(v197 + 2400 * v202 + 128);
  *(void *)(a1 + 5176) = v63;
  uint64_t v64 = *(void *)(a1 + 2152);
  if (v64 < 0) {
    __int16 v65 = -50;
  }
  else {
    __int16 v65 = 50;
  }
  if (v64 / 100 != ((-5243 * (__int16)(v65 + v64 % 100)) >> 19)
                  + ((-5243 * (__int16)(v65 + v64 % 100)) >> 31))
  {
    uint64_t v66 = 5144;
    if (!*(unsigned char *)(a1 + 2180)) {
      uint64_t v66 = 2152;
    }
    uint64_t v67 = *(void *)(a1 + v66);
    if (v67 < 0) {
      __int16 v68 = -50;
    }
    else {
      __int16 v68 = 50;
    }
    if (v63 < 0) {
      __int16 v69 = -50;
    }
    else {
      __int16 v69 = 50;
    }
    uint64_t v70 = v63 / 100
        + (int)(((5243 * (__int16)(v69 + v63 % 100)) >> 19) + ((5243 * (__int16)(v69 + v63 % 100)) >> 31));
    uint64_t v71 = v67 - v63;
    if (v67 / 100
       + (int)(((5243 * (__int16)(v68 + v67 % 100)) >> 19) + ((5243 * (__int16)(v68 + v67 % 100)) >> 31)) > v70)
      uint64_t v64 = v71;
  }
  *(void *)(a1 + 5192) = v64;
  uint64_t v72 = *v189;
  uint64_t v73 = *(void *)(v197 + 2400 * v202 + 1816);
  if (*v189 == v73)
  {
LABEL_80:
    sub_68206C((uint64_t)&v204);
  }
  else
  {
    while (!sub_683488(v72))
    {
      v72 += 336;
      if (v72 == v73) {
        goto LABEL_80;
      }
    }
    sub_5964A0((uint64_t)&v204, v72);
  }
  sub_674798(v190, (uint64_t)&v204);
  sub_576848((uint64_t)&v204);
  int v74 = sub_682F60(v190);
  *(unsigned char *)(a1 + 7800) = v74;
  if (*(unsigned char *)(v187 + 1856)) {
    char v75 = v74;
  }
  else {
    char v75 = 0;
  }
  *(unsigned char *)(a1 + 7801) = v75;
  if (*(void *)(a1 + 7440) == *(void *)(a1 + 7448))
  {
    uint64_t v77 = (char *)(a1 + 7800);
    *(unsigned char *)(a1 + 7802) = 0;
    uint64_t v79 = a1 + 5928;
    if (!v74) {
      goto LABEL_106;
    }
  }
  else
  {
    BOOL v76 = !sub_683488(*(void *)(a1 + 7440));
    uint64_t v77 = (char *)(a1 + 7800);
    int v78 = *(unsigned __int8 *)(a1 + 7800);
    *(unsigned char *)(a1 + 7802) = v76;
    uint64_t v79 = a1 + 5928;
    if (!v78) {
      goto LABEL_106;
    }
  }
  sub_8BBFC0(v185, 1, 0, (uint64_t)&v204);
  if (!sub_637DD8((long long **)&v204)) {
    *(unsigned char *)(a1 + 7801) = 1;
  }
  uint64_t v80 = (std::__shared_weak_count *)v209[2];
  if (v209[2] && !atomic_fetch_add((atomic_ullong *volatile)(v209[2] + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
    std::__shared_weak_count::__release_weak(v80);
  }
  long long v81 = (void *)v207;
  if ((void)v207)
  {
    do
    {
      uint64_t v82 = (void *)*v81;
      sub_4F4B48((uint64_t)(v81 + 2));
      operator delete(v81);
      long long v81 = v82;
    }
    while (v82);
  }
  uint64_t v83 = (void *)__p;
  *(void *)&long long __p = 0;
  if (v83) {
    operator delete(v83);
  }
  long long v84 = (void **)v204;
  if (v204)
  {
    uint64_t v85 = (void **)v205;
    unint64_t v86 = v204;
    if ((void *)v205 != v204)
    {
      do
      {
        if (*((char *)v85 - 1) < 0) {
          operator delete(*(v85 - 3));
        }
        v85 -= 3;
      }
      while (v85 != v84);
      unint64_t v86 = v204;
    }
    *(void *)&long long v205 = v84;
    operator delete(v86);
  }
LABEL_106:
  char v87 = *(unsigned char *)(a1 + 2179);
  if (v87)
  {
    char v87 = *v77;
    if (*v77) {
      char v87 = *(unsigned char *)(a1 + 7801) == 0;
    }
  }
  *(unsigned char *)(a1 + 7906) = v87;
  sub_849ADC(a1, (uint64_t)&v204);
  *(void *)(a1 + 5920) = v204;
  if (*(char *)(a1 + 5951) < 0) {
    operator delete(*(void **)v79);
  }
  *(_OWORD *)uint64_t v79 = v205;
  *(void *)(v79 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 5952) = *((void *)&__p + 1);
  long long v88 = (void **)(a1 + 5960);
  if (*(char *)(a1 + 5983) < 0) {
    operator delete(*v88);
  }
  *(_OWORD *)long long v88 = v207;
  *(void *)(a1 + 5976) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 5984) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 5992) = v209[0];
  uint64_t v89 = (void **)(a1 + 6000);
  if (*(char *)(a1 + 6023) < 0) {
    operator delete(*v89);
  }
  *(_OWORD *)uint64_t v89 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 6016) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  long long v90 = (void **)(a1 + 6024);
  if (*(char *)(a1 + 6047) < 0) {
    operator delete(*v90);
  }
  char v91 = 0;
  *(_OWORD *)long long v90 = v210;
  *(void *)(a1 + 6040) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 6048) = DWORD2(v211);
  uint64_t v92 = (void **)(a1 + 6056);
  if (*(char *)(a1 + 6079) < 0)
  {
    operator delete(*v92);
    char v91 = BYTE7(v211);
  }
  *(_OWORD *)uint64_t v92 = v212;
  *(void *)(a1 + 6072) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 6080) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 6096) = v213[3];
  if (v91 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_121:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_122;
      }
LABEL_176:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_123;
      }
LABEL_177:
      operator delete((void *)v205);
      goto LABEL_123;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_121;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_176;
  }
LABEL_122:
  if (SBYTE7(__p) < 0) {
    goto LABEL_177;
  }
LABEL_123:
  *(unsigned char *)(a1 + 6104) = sub_564868((void *)(a1 + 5920));
  if (*(unsigned char *)(a1 + 7906) || *(unsigned char *)(a1 + 7801))
  {
    uint64_t v93 = sub_62BBE4(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v94 = a1 + 5736;
  }
  else
  {
    uint64_t v93 = sub_62BB78(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v94 = a1 + 5736;
  }
  uint64_t v95 = *(void *)(a1 + 5192);
  if (v95 >= v93) {
    uint64_t v95 = v93;
  }
  v215[0] = v95;
  sub_63AD1C(v201, v215, 1, (uint64_t)&v204);
  *(void *)(a1 + 5728) = v204;
  if (*(char *)(a1 + 5759) < 0) {
    operator delete(*(void **)v94);
  }
  *(_OWORD *)uint64_t v94 = v205;
  *(void *)(v94 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 5760) = *((void *)&__p + 1);
  uint64_t v96 = (void **)(a1 + 5768);
  if (*(char *)(a1 + 5791) < 0) {
    operator delete(*v96);
  }
  *(_OWORD *)uint64_t v96 = v207;
  *(void *)(a1 + 5784) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 5792) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 5800) = v209[0];
  uint64_t v97 = (void **)(a1 + 5808);
  if (*(char *)(a1 + 5831) < 0) {
    operator delete(*v97);
  }
  *(_OWORD *)uint64_t v97 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 5824) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  char v98 = (void **)(a1 + 5832);
  if (*(char *)(a1 + 5855) < 0) {
    operator delete(*v98);
  }
  char v99 = 0;
  *(_OWORD *)char v98 = v210;
  *(void *)(a1 + 5848) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 5856) = DWORD2(v211);
  long long v100 = (void **)(a1 + 5864);
  if (*(char *)(a1 + 5887) < 0)
  {
    operator delete(*v100);
    char v99 = BYTE7(v211);
  }
  *(_OWORD *)long long v100 = v212;
  *(void *)(a1 + 5880) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 5888) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 5904) = v213[3];
  if (v99 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_140:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_141;
      }
LABEL_180:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_142;
      }
      goto LABEL_181;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_140;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_180;
  }
LABEL_141:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_142;
  }
LABEL_181:
  operator delete((void *)v205);
LABEL_142:
  *(unsigned char *)(a1 + 5912) = sub_564868((void *)(a1 + 5728));
  v215[0] = sub_62C62C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_63AF5C(v201, v215, (uint64_t)&v204);
  *(void *)(a1 + 6112) = v204;
  if (*(char *)(a1 + 6143) < 0) {
    operator delete(*v188);
  }
  *(_OWORD *)long long v188 = v205;
  *(void *)(a1 + 6136) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 6144) = *((void *)&__p + 1);
  uint64_t v101 = (void **)(a1 + 6152);
  if (*(char *)(a1 + 6175) < 0) {
    operator delete(*v101);
  }
  *(_OWORD *)uint64_t v101 = v207;
  *(void *)(a1 + 6168) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 6176) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 6184) = v209[0];
  unint64_t v102 = (void **)(a1 + 6192);
  if (*(char *)(a1 + 6215) < 0) {
    operator delete(*v102);
  }
  *(_OWORD *)unint64_t v102 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 6208) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  long long v103 = (void **)(a1 + 6216);
  if (*(char *)(a1 + 6239) < 0) {
    operator delete(*v103);
  }
  char v104 = 0;
  *(_OWORD *)long long v103 = v210;
  *(void *)(a1 + 6232) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 6240) = DWORD2(v211);
  uint64_t v105 = (void **)(a1 + 6248);
  if (*(char *)(a1 + 6271) < 0)
  {
    operator delete(*v105);
    char v104 = BYTE7(v211);
  }
  *(_OWORD *)uint64_t v105 = v212;
  *(void *)(a1 + 6264) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 6272) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 6288) = v213[3];
  if (v104 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_154:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_155;
      }
LABEL_184:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_156;
      }
      goto LABEL_185;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_154;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_184;
  }
LABEL_155:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_156;
  }
LABEL_185:
  operator delete((void *)v205);
LABEL_156:
  BOOL v106 = sub_564868(v199);
  *(unsigned char *)(a1 + 6296) = v106;
  if (v106)
  {
    uint64_t v107 = a1 + 6312;
    v215[0] = sub_62C62C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    sub_63AE58(v201, v215, v199, (uint64_t)&v204);
    *(void *)(a1 + 6304) = v204;
    if ((*(char *)(a1 + 6335) & 0x80000000) == 0) {
      goto LABEL_158;
    }
  }
  else
  {
    memset(v213, 0, sizeof(v213));
    long long v212 = 0u;
    long long v211 = 0u;
    long long v210 = 0u;
    memset(v209, 0, sizeof(v209));
    long long v208 = 0u;
    long long v207 = 0u;
    long long __p = 0u;
    long long v205 = 0u;
    long long v204 = (void *)0x7FFFFFFFFFFFFFFFLL;
    sub_6F30A4((uint64_t)&v205);
    uint64_t v107 = a1 + 6312;
    v213[1] = -1;
    v213[2] = -1;
    v213[3] = 0;
    *(void *)(a1 + 6304) = v204;
    if ((*(char *)(a1 + 6335) & 0x80000000) == 0) {
      goto LABEL_158;
    }
  }
  operator delete(*(void **)v107);
LABEL_158:
  *(_OWORD *)uint64_t v107 = v205;
  *(void *)(v107 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 6336) = *((void *)&__p + 1);
  uint64_t v108 = (void **)(a1 + 6344);
  if (*(char *)(a1 + 6367) < 0) {
    operator delete(*v108);
  }
  *(_OWORD *)uint64_t v108 = v207;
  *(void *)(a1 + 6360) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 6368) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 6376) = v209[0];
  long long v109 = (void **)(a1 + 6384);
  if (*(char *)(a1 + 6407) < 0) {
    operator delete(*v109);
  }
  *(_OWORD *)long long v109 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 6400) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  long long v110 = (void **)(a1 + 6408);
  if (*(char *)(a1 + 6431) < 0) {
    operator delete(*v110);
  }
  char v111 = 0;
  *(_OWORD *)long long v110 = v210;
  *(void *)(a1 + 6424) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 6432) = DWORD2(v211);
  uint64_t v112 = (void **)(a1 + 6440);
  if (*(char *)(a1 + 6463) < 0)
  {
    operator delete(*v112);
    char v111 = BYTE7(v211);
  }
  *(_OWORD *)uint64_t v112 = v212;
  *(void *)(a1 + 6456) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 6464) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 6480) = v213[3];
  if (v111 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_168:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_169;
      }
LABEL_188:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_170;
      }
      goto LABEL_189;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_168;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_188;
  }
LABEL_169:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_170;
  }
LABEL_189:
  operator delete((void *)v205);
LABEL_170:
  *(unsigned char *)(a1 + 6488) = sub_564868(v191);
  if (*(unsigned char *)(a1 + 7906))
  {
    uint64_t v113 = sub_62BC50(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v114 = a1 + 6504;
  }
  else
  {
    long long v115 = *(void **)(a1 + 2160);
    int v116 = *(_DWORD *)(a1 + 5188);
    uint64_t v114 = a1 + 6504;
    if (*(unsigned char *)(a1 + 7801)) {
      uint64_t v113 = sub_62BAA0(v115, v116);
    }
    else {
      uint64_t v113 = sub_62BB0C(v115, v116);
    }
  }
  uint64_t v117 = *(void *)(a1 + 5192);
  if (v117 >= v113) {
    uint64_t v117 = v113;
  }
  v215[0] = v117;
  sub_63AF5C(v201, v215, (uint64_t)&v204);
  *(void *)(a1 + 6496) = v204;
  if (*(char *)(a1 + 6527) < 0) {
    operator delete(*(void **)v114);
  }
  *(_OWORD *)uint64_t v114 = v205;
  *(void *)(v114 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 6528) = *((void *)&__p + 1);
  unint64_t v118 = (void **)(a1 + 6536);
  if (*(char *)(a1 + 6559) < 0) {
    operator delete(*v118);
  }
  *(_OWORD *)unint64_t v118 = v207;
  *(void *)(a1 + 6552) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 6560) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 6568) = v209[0];
  long long v119 = (void **)(a1 + 6576);
  if (*(char *)(a1 + 6599) < 0) {
    operator delete(*v119);
  }
  *(_OWORD *)long long v119 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 6592) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  long long v120 = (void **)(a1 + 6600);
  if (*(char *)(a1 + 6623) < 0) {
    operator delete(*v120);
  }
  char v121 = 0;
  *(_OWORD *)long long v120 = v210;
  *(void *)(a1 + 6616) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 6624) = DWORD2(v211);
  long long v122 = (void **)(a1 + 6632);
  if (*(char *)(a1 + 6655) < 0)
  {
    operator delete(*v122);
    char v121 = BYTE7(v211);
  }
  *(_OWORD *)long long v122 = v212;
  *(void *)(a1 + 6648) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 6656) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 6672) = v213[3];
  if (v121 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_208:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_209;
      }
LABEL_214:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_210;
      }
      goto LABEL_215;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_208;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_214;
  }
LABEL_209:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_210;
  }
LABEL_215:
  operator delete((void *)v205);
LABEL_210:
  *(unsigned char *)(a1 + 6680) = sub_564868((void *)(a1 + 6496));
  if (*(unsigned char *)(a1 + 7804))
  {
    memset(v213, 0, sizeof(v213));
    long long v212 = 0u;
    long long v211 = 0u;
    long long v210 = 0u;
    memset(v209, 0, sizeof(v209));
    long long v208 = 0u;
    long long v207 = 0u;
    long long __p = 0u;
    long long v205 = 0u;
    long long v204 = (void *)0x7FFFFFFFFFFFFFFFLL;
    sub_6F30A4((uint64_t)&v205);
    uint64_t v123 = a1 + 6696;
    v213[1] = -1;
    v213[2] = -1;
    v213[3] = 0;
  }
  else
  {
    uint64_t v124 = sub_62C8B4(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v123 = a1 + 6696;
    uint64_t v214 = 0;
    v215[0] = v124;
    sub_63AF84(v201, v215, &v214, (uint64_t)&v204);
  }
  *(void *)(a1 + 6688) = v204;
  if (*(char *)(a1 + 6719) < 0) {
    operator delete(*(void **)v123);
  }
  *(_OWORD *)uint64_t v123 = v205;
  *(void *)(v123 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 6720) = *((void *)&__p + 1);
  long long v125 = (void **)(a1 + 6728);
  if (*(char *)(a1 + 6751) < 0) {
    operator delete(*v125);
  }
  *(_OWORD *)long long v125 = v207;
  *(void *)(a1 + 6744) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 6752) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 6760) = v209[0];
  long long v126 = (void **)(a1 + 6768);
  if (*(char *)(a1 + 6791) < 0) {
    operator delete(*v126);
  }
  *(_OWORD *)long long v126 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 6784) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  long long v127 = (void **)(a1 + 6792);
  if (*(char *)(a1 + 6815) < 0) {
    operator delete(*v127);
  }
  char v128 = 0;
  *(_OWORD *)long long v127 = v210;
  *(void *)(a1 + 6808) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 6816) = DWORD2(v211);
  long long v129 = (void **)(a1 + 6824);
  if (*(char *)(a1 + 6847) < 0)
  {
    operator delete(*v129);
    char v128 = BYTE7(v211);
  }
  *(_OWORD *)long long v129 = v212;
  *(void *)(a1 + 6840) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 6848) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 6864) = v213[3];
  if (v128 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_229:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_230;
      }
LABEL_281:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_231;
      }
      goto LABEL_282;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_229;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_281;
  }
LABEL_230:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_231;
  }
LABEL_282:
  operator delete((void *)v205);
LABEL_231:
  BOOL v130 = sub_564868((void *)(a1 + 6688));
  *(unsigned char *)(a1 + 6872) = v130;
  if (v130)
  {
    v215[0] = *(void *)(a1 + 6688);
    uint64_t v131 = a1 + 6888;
    uint64_t v214 = sub_62C62C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v132 = sub_856CCC(*(void **)(a1 + 7968), *(void *)(a1 + 6856));
    sub_8564A0(a1, v132, &v214, v215, (uint64_t)&v204);
    *(void *)(a1 + 6880) = v204;
    if ((*(char *)(a1 + 6911) & 0x80000000) == 0) {
      goto LABEL_233;
    }
  }
  else
  {
    memset(v213, 0, sizeof(v213));
    long long v212 = 0u;
    long long v211 = 0u;
    long long v210 = 0u;
    memset(v209, 0, sizeof(v209));
    long long v208 = 0u;
    long long v207 = 0u;
    long long __p = 0u;
    long long v205 = 0u;
    long long v204 = (void *)0x7FFFFFFFFFFFFFFFLL;
    sub_6F30A4((uint64_t)&v205);
    uint64_t v131 = a1 + 6888;
    v213[1] = -1;
    v213[2] = -1;
    v213[3] = 0;
    *(void *)(a1 + 6880) = v204;
    if ((*(char *)(a1 + 6911) & 0x80000000) == 0) {
      goto LABEL_233;
    }
  }
  operator delete(*(void **)v131);
LABEL_233:
  *(_OWORD *)uint64_t v131 = v205;
  *(void *)(v131 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 6912) = *((void *)&__p + 1);
  uint64_t v133 = (void **)(a1 + 6920);
  if (*(char *)(a1 + 6943) < 0) {
    operator delete(*v133);
  }
  *(_OWORD *)uint64_t v133 = v207;
  *(void *)(a1 + 6936) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 6944) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 6952) = v209[0];
  unint64_t v134 = (void **)(a1 + 6960);
  if (*(char *)(a1 + 6983) < 0) {
    operator delete(*v134);
  }
  *(_OWORD *)unint64_t v134 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 6976) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  uint64_t v135 = (void **)(a1 + 6984);
  if (*(char *)(a1 + 7007) < 0) {
    operator delete(*v135);
  }
  char v136 = 0;
  *(_OWORD *)uint64_t v135 = v210;
  *(void *)(a1 + 7000) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 7008) = DWORD2(v211);
  unsigned long long v137 = (void **)(a1 + 7016);
  if (*(char *)(a1 + 7039) < 0)
  {
    operator delete(*v137);
    char v136 = BYTE7(v211);
  }
  *(_OWORD *)unsigned long long v137 = v212;
  *(void *)(a1 + 7032) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 7040) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 7056) = v213[3];
  if (v136 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_243:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_244;
      }
LABEL_285:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_245;
      }
      goto LABEL_286;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_243;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_285;
  }
LABEL_244:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_245;
  }
LABEL_286:
  operator delete((void *)v205);
LABEL_245:
  *(unsigned char *)(a1 + 7064) = sub_564868(v193);
  v215[0] = sub_62C9F8(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  sub_63B130(v201, v215, (uint64_t)&v204);
  *(void *)(a1 + 7072) = v204;
  if (*(char *)(a1 + 7103) < 0) {
    operator delete(*v192);
  }
  *(_OWORD *)int v192 = v205;
  *(void *)(a1 + 7096) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 7104) = *((void *)&__p + 1);
  unint64_t v138 = (void **)(a1 + 7112);
  if (*(char *)(a1 + 7135) < 0) {
    operator delete(*v138);
  }
  *(_OWORD *)unint64_t v138 = v207;
  *(void *)(a1 + 7128) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 7136) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 7144) = v209[0];
  long long v139 = (void **)(a1 + 7152);
  if (*(char *)(a1 + 7175) < 0) {
    operator delete(*v139);
  }
  *(_OWORD *)long long v139 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 7168) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  long long v140 = (void **)(a1 + 7176);
  if (*(char *)(a1 + 7199) < 0) {
    operator delete(*v140);
  }
  char v141 = 0;
  *(_OWORD *)long long v140 = v210;
  *(void *)(a1 + 7192) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 7200) = DWORD2(v211);
  long long v142 = (void **)(a1 + 7208);
  if (*(char *)(a1 + 7231) < 0)
  {
    operator delete(*v142);
    char v141 = BYTE7(v211);
  }
  *(_OWORD *)long long v142 = v212;
  *(void *)(a1 + 7224) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 7232) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 7248) = v213[3];
  if (v141 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_257:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_258;
      }
LABEL_289:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_259;
      }
      goto LABEL_290;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_257;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_289;
  }
LABEL_258:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_259;
  }
LABEL_290:
  operator delete((void *)v205);
LABEL_259:
  if (sub_564868(v196))
  {
    v215[0] = sub_62C98C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    sub_63B05C(v201, v215, v196, (uint64_t)&v204);
    *(void *)(a1 + 7256) = v204;
    if ((*(char *)(a1 + 7287) & 0x80000000) == 0) {
      goto LABEL_261;
    }
  }
  else
  {
    memset(v213, 0, sizeof(v213));
    long long v212 = 0u;
    long long v211 = 0u;
    long long v210 = 0u;
    memset(v209, 0, sizeof(v209));
    long long v208 = 0u;
    long long v207 = 0u;
    long long __p = 0u;
    long long v205 = 0u;
    long long v204 = (void *)0x7FFFFFFFFFFFFFFFLL;
    sub_6F30A4((uint64_t)&v205);
    v213[1] = -1;
    v213[2] = -1;
    v213[3] = 0;
    *(void *)(a1 + 7256) = v204;
    if ((*(char *)(a1 + 7287) & 0x80000000) == 0) {
      goto LABEL_261;
    }
  }
  operator delete(*v186);
LABEL_261:
  *(_OWORD *)long long v186 = v205;
  *(void *)(a1 + 7280) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 7288) = *((void *)&__p + 1);
  long long v143 = (void **)(a1 + 7296);
  if (*(char *)(a1 + 7319) < 0) {
    operator delete(*v143);
  }
  *(_OWORD *)long long v143 = v207;
  *(void *)(a1 + 7312) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 7320) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 7328) = v209[0];
  uint64_t v144 = (void **)(a1 + 7336);
  if (*(char *)(a1 + 7359) < 0) {
    operator delete(*v144);
  }
  *(_OWORD *)uint64_t v144 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 7352) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  uint64_t v145 = (void **)(a1 + 7360);
  if (*(char *)(a1 + 7383) < 0) {
    operator delete(*v145);
  }
  char v146 = 0;
  *(_OWORD *)uint64_t v145 = v210;
  *(void *)(a1 + 7376) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 7384) = DWORD2(v211);
  long long v147 = (void **)(a1 + 7392);
  if (*(char *)(a1 + 7415) < 0)
  {
    operator delete(*v147);
    char v146 = BYTE7(v211);
  }
  *(_OWORD *)long long v147 = v212;
  *(void *)(a1 + 7408) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 7416) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 7432) = v213[3];
  if (v146 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_271:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_272;
      }
      goto LABEL_293;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_271;
  }
  operator delete((void *)v209[1]);
  if ((SBYTE7(v208) & 0x80000000) == 0)
  {
LABEL_272:
    if ((SBYTE7(__p) & 0x80000000) == 0) {
      goto LABEL_273;
    }
    goto LABEL_294;
  }
LABEL_293:
  operator delete((void *)v207);
  if ((SBYTE7(__p) & 0x80000000) == 0)
  {
LABEL_273:
    uint64_t v148 = *(void *)(a1 + 2160);
    if (!*(unsigned char *)(v148 + 1968)) {
      goto LABEL_296;
    }
    goto LABEL_295;
  }
LABEL_294:
  operator delete((void *)v205);
  uint64_t v148 = *(void *)(a1 + 2160);
  if (!*(unsigned char *)(v148 + 1968)) {
    goto LABEL_296;
  }
LABEL_295:
  if (*(_DWORD *)(a1 + 2144) == 3) {
    goto LABEL_299;
  }
LABEL_296:
  int v149 = *(unsigned __int8 *)(v148 + 1970);
  if (!v149) {
    goto LABEL_300;
  }
  if (*(unsigned char *)(a1 + 5186) || *v14) {
    goto LABEL_299;
  }
  LOBYTE(v149) = *(unsigned char *)(a1 + 7804);
  if ((_BYTE)v149)
  {
    if (sub_63A8F8((uint64_t)v198))
    {
      int v149 = *(unsigned __int8 *)(a1 + 7841);
LABEL_390:
      LOBYTE(v149) = v149 != 0;
      goto LABEL_300;
    }
    if (sub_63A908((uint64_t)v198))
    {
      int v149 = *(unsigned __int8 *)(a1 + 7842);
      goto LABEL_390;
    }
LABEL_299:
    LOBYTE(v149) = 0;
  }
LABEL_300:
  *(unsigned char *)(a1 + 7909) = v149;
  *(unsigned char *)(a1 + 7912) = sub_867420(a1);
  BOOL v150 = sub_849DD0(a1);
  *(unsigned char *)(a1 + 7911) = v150;
  if (v150)
  {
    uint64_t v151 = *(void *)(a1 + 6112) + sub_62C410(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    if (v151 >= *(void *)(a1 + 5192)) {
      uint64_t v151 = *(void *)(a1 + 5192);
    }
    if (*(unsigned char *)(a1 + 6488) && *v191 < v151) {
      uint64_t v151 = *v191;
    }
    *(void *)(a1 + 7888) = v151;
  }
  uint64_t v152 = sub_62C47C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  long long v153 = (uint64_t *)(a1 + 6112);
  if (*(unsigned char *)(a1 + 7911) || (long long v153 = (uint64_t *)(a1 + 6688), *(unsigned char *)(a1 + 7912)))
  {
    *(unsigned char *)(a1 + 7915) = *v153 < v152;
    char v154 = *(unsigned char *)(a1 + 7805);
    uint64_t v155 = a1 + 5352;
    if (!v154) {
      goto LABEL_313;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 7915) = 0;
    char v154 = *(unsigned char *)(a1 + 7805);
    uint64_t v155 = a1 + 5352;
    if (!v154) {
      goto LABEL_313;
    }
  }
  if (*(unsigned char *)(a1 + 7804) || *(unsigned char *)(a1 + 7912))
  {
    char v154 = 0;
  }
  else
  {
    if (sub_564868(v196))
    {
      BOOL v181 = sub_564868((void *)(a1 + 7256));
      uint64_t v182 = 5192;
      if (v181) {
        uint64_t v182 = 7256;
      }
      uint64_t v183 = *(void *)(a1 + v182);
      char v154 = v183 >= *v196 + sub_62C4E8(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    }
    else
    {
      char v154 = 0;
    }
    uint64_t v155 = a1 + 5352;
  }
LABEL_313:
  *(unsigned char *)(a1 + 7913) = v154;
  sub_867608(a1, (uint64_t)&v204);
  *(void *)(a1 + 5344) = v204;
  if (*(char *)(a1 + 5375) < 0) {
    operator delete(*(void **)v155);
  }
  *(_OWORD *)uint64_t v155 = v205;
  *(void *)(v155 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 5376) = *((void *)&__p + 1);
  unint64_t v156 = (void **)(a1 + 5384);
  if (*(char *)(a1 + 5407) < 0) {
    operator delete(*v156);
  }
  *(_OWORD *)unint64_t v156 = v207;
  *(void *)(a1 + 5400) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 5408) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 5416) = v209[0];
  uint64_t v157 = (void **)(a1 + 5424);
  if (*(char *)(a1 + 5447) < 0) {
    operator delete(*v157);
  }
  *(_OWORD *)uint64_t v157 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 5440) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  uint64_t v158 = (void **)(a1 + 5448);
  if (*(char *)(a1 + 5471) < 0) {
    operator delete(*v158);
  }
  char v159 = 0;
  *(_OWORD *)uint64_t v158 = v210;
  *(void *)(a1 + 5464) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 5472) = DWORD2(v211);
  int v160 = (void **)(a1 + 5480);
  if (*(char *)(a1 + 5503) < 0)
  {
    operator delete(*v160);
    char v159 = BYTE7(v211);
  }
  *(_OWORD *)int v160 = v212;
  *(void *)(a1 + 5496) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 5504) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 5520) = v213[3];
  if (v159 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_325:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_326;
      }
LABEL_362:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_327;
      }
      goto LABEL_363;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_325;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_362;
  }
LABEL_326:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_327;
  }
LABEL_363:
  operator delete((void *)v205);
LABEL_327:
  BOOL v161 = sub_564868(v194);
  *(unsigned char *)(a1 + 5528) = v161;
  if (v161)
  {
    uint64_t v162 = a1 + 5544;
    v215[0] = sub_62C920(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    sub_63AD48(v201, v215, v194, 1, (uint64_t)&v204);
    *(void *)(a1 + 5536) = v204;
    if ((*(char *)(a1 + 5567) & 0x80000000) == 0) {
      goto LABEL_329;
    }
  }
  else
  {
    memset(v213, 0, sizeof(v213));
    long long v212 = 0u;
    long long v211 = 0u;
    long long v210 = 0u;
    memset(v209, 0, sizeof(v209));
    long long v208 = 0u;
    long long v207 = 0u;
    long long __p = 0u;
    long long v205 = 0u;
    long long v204 = (void *)0x7FFFFFFFFFFFFFFFLL;
    sub_6F30A4((uint64_t)&v205);
    uint64_t v162 = a1 + 5544;
    v213[1] = -1;
    v213[2] = -1;
    v213[3] = 0;
    *(void *)(a1 + 5536) = v204;
    if ((*(char *)(a1 + 5567) & 0x80000000) == 0) {
      goto LABEL_329;
    }
  }
  operator delete(*(void **)v162);
LABEL_329:
  *(_OWORD *)uint64_t v162 = v205;
  *(void *)(v162 + 16) = __p;
  BYTE7(__p) = 0;
  LOBYTE(v205) = 0;
  *(void *)(a1 + 5568) = *((void *)&__p + 1);
  long long v163 = (void **)(a1 + 5576);
  if (*(char *)(a1 + 5599) < 0) {
    operator delete(*v163);
  }
  *(_OWORD *)long long v163 = v207;
  *(void *)(a1 + 5592) = v208;
  BYTE7(v208) = 0;
  LOBYTE(v207) = 0;
  *(void *)(a1 + 5600) = *((void *)&v208 + 1);
  *(_DWORD *)(a1 + 5608) = v209[0];
  long long v164 = (void **)(a1 + 5616);
  if (*(char *)(a1 + 5639) < 0) {
    operator delete(*v164);
  }
  *(_OWORD *)long long v164 = *(_OWORD *)&v209[1];
  *(void *)(a1 + 5632) = v209[3];
  HIBYTE(v209[3]) = 0;
  LOBYTE(v209[1]) = 0;
  long long v165 = (void **)(a1 + 5640);
  if (*(char *)(a1 + 5663) < 0) {
    operator delete(*v165);
  }
  char v166 = 0;
  *(_OWORD *)long long v165 = v210;
  *(void *)(a1 + 5656) = v211;
  BYTE7(v211) = 0;
  LOBYTE(v210) = 0;
  *(_DWORD *)(a1 + 5664) = DWORD2(v211);
  long long v167 = (void **)(a1 + 5672);
  if (*(char *)(a1 + 5695) < 0)
  {
    operator delete(*v167);
    char v166 = BYTE7(v211);
  }
  *(_OWORD *)long long v167 = v212;
  *(void *)(a1 + 5688) = v213[0];
  HIBYTE(v213[0]) = 0;
  LOBYTE(v212) = 0;
  *(_OWORD *)(a1 + 5696) = *(_OWORD *)&v213[1];
  *(void *)(a1 + 5712) = v213[3];
  if (v166 < 0)
  {
    operator delete((void *)v210);
    if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
    {
LABEL_339:
      if ((SBYTE7(v208) & 0x80000000) == 0) {
        goto LABEL_340;
      }
LABEL_366:
      operator delete((void *)v207);
      if ((SBYTE7(__p) & 0x80000000) == 0) {
        goto LABEL_341;
      }
      goto LABEL_367;
    }
  }
  else if ((SHIBYTE(v209[3]) & 0x80000000) == 0)
  {
    goto LABEL_339;
  }
  operator delete((void *)v209[1]);
  if (SBYTE7(v208) < 0) {
    goto LABEL_366;
  }
LABEL_340:
  if ((SBYTE7(__p) & 0x80000000) == 0) {
    goto LABEL_341;
  }
LABEL_367:
  operator delete((void *)v205);
LABEL_341:
  *(unsigned char *)(a1 + 5720) = sub_564868((void *)(a1 + 5536));
  *(unsigned char *)(a1 + 7908) = sub_867760(a1);
  *(void *)(a1 + 7864) = sub_84A1A4(a1);
  *(void *)(a1 + 7872) = sub_8678C8(a1);
  if (*(unsigned char *)(a1 + 7912))
  {
    uint64_t v168 = *(void *)(a1 + 6688) + sub_62C410(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    if (*(void *)(a1 + 5192) < v168) {
      uint64_t v168 = *(void *)(a1 + 5192);
    }
    if (*(unsigned char *)(a1 + 7064) && *v193 < v168) {
      uint64_t v168 = *v193;
    }
    *(void *)(a1 + 7896) = v168;
  }
  BOOL v169 = sub_84A5C8(a1);
  *(unsigned char *)(a1 + 7910) = v169;
  if (v169)
  {
    uint64_t v170 = sub_62C62C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v171 = *(void *)(a1 + 5192);
    if (v171 >= v170) {
      uint64_t v171 = v170;
    }
    if (*(unsigned char *)(a1 + 6296)) {
      uint64_t v171 = *v199;
    }
    *(void *)(a1 + 7880) = v171;
  }
  uint64_t v172 = sub_62BD28(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v173 = sub_62BCBC(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (*(unsigned char *)(a1 + 7906) && *v184 != 0x7FFFFFFFFFFFFFFFLL)
  {
    char v174 = *v184 > v173 + v172;
  }
  else if (*(unsigned char *)(a1 + 7912))
  {
    char v174 = 1;
  }
  else
  {
    char v174 = *(unsigned char *)(a1 + 7915);
    if (v174) {
      char v174 = *(unsigned char *)(a1 + 7911) != 0;
    }
  }
  *(unsigned char *)(a1 + 7907) = v174;
  if (*(unsigned char *)(a1 + 7984))
  {
    BOOL v175 = 0;
  }
  else if (*(unsigned char *)(a1 + 2179))
  {
    BOOL v175 = sub_8569A8(a1);
  }
  else
  {
    BOOL v175 = sub_856AC0(a1);
  }
  *(unsigned char *)(a1 + 7904) = v175;
  *(unsigned char *)(a1 + 7905) = sub_84A704(a1);
  *(unsigned char *)(a1 + 2181) = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
  *(unsigned char *)(a1 + 7914) = sub_867B48(a1, v200, v202);
  *(unsigned char *)(a1 + 2182) = (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))a1)(a1, v200, v202);
  sub_84AA34(a1);
  uint64_t v176 = sub_64EFB8(v200);
  uint64_t v177 = *(void *)v176;
  *(_DWORD *)(a1 + 7928) = *(_DWORD *)(v176 + 8);
  *(void *)(a1 + 7920) = v177;
  uint64_t v178 = sub_64EFC4(v200);
  uint64_t v179 = *(void *)v178;
  *(_DWORD *)(a1 + 7940) = *(_DWORD *)(v178 + 8);
  *(void *)(a1 + 7932) = v179;
  return a1;
}

void sub_867238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void **a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void **a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t *a45,uint64_t a46,void **a47)
{
  v47[976] = off_2438EC8;
  if (*(char *)(v48 + 2655) < 0) {
    operator delete(*a28);
  }
  sub_576848(a30);
  sub_592364(a39);
  sub_7D0A58(a11);
  sub_7D0A58(a40);
  sub_7D0A58(a37);
  sub_7D0A58(a36);
  sub_7D0A58(a29);
  sub_7D0A58(a34);
  sub_7D0A58(a43);
  sub_7D0A58(a32);
  sub_7D0A58(a31);
  sub_7D0A58(a27);
  sub_7D0A58(a38);
  sub_59230C(a45);
  uint64_t v50 = *a47;
  if (*a47)
  {
    v47[645] = v50;
    operator delete(v50);
  }
  sub_7C7044(a14);
  void *v47 = &off_2439DD8;
  sub_5322CC((uint64_t)(v47 + 1));
  _Unwind_Resume(a1);
}

BOOL sub_867420(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 2160);
  if (*(unsigned char *)(v2 + 1968) && *(_DWORD *)(a1 + 2144) == 3) {
    return 0;
  }
  if (!*(unsigned char *)(v2 + 1970) || *(unsigned char *)(a1 + 5186) || *(unsigned char *)(a1 + 5184) || !sub_63ACB4(a1 + 6688)) {
    return 0;
  }
  uint64_t v5 = sub_856CCC(*(void **)(a1 + 7968), *(void *)(a1 + 6856));
  if (sub_63A8F8(v5))
  {
    if (!*(unsigned char *)(a1 + 7847)) {
      return 0;
    }
  }
  else if (!sub_63A908(v5) || !*(unsigned char *)(a1 + 7848))
  {
    return 0;
  }
  if (*(unsigned char *)(a1 + 7804) || !*(unsigned char *)(a1 + 6872)) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 6688);
  uint64_t v20 = v6;
  uint64_t v7 = 6880;
  if (!*(unsigned char *)(a1 + 7064)) {
    uint64_t v7 = 5192;
  }
  uint64_t v8 = *(void *)(a1 + v7);
  if (v8 < v6 + sub_62C47C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188))) {
    return 0;
  }
  sub_63AD1C((uint64_t **)(a1 + 5200), &v20, 1, (uint64_t)v10);
  BOOL v9 = sub_564868(v10);
  if (v19 < 0)
  {
    operator delete(__p);
    if ((v17 & 0x80000000) == 0)
    {
LABEL_22:
      if ((v15 & 0x80000000) == 0) {
        goto LABEL_23;
      }
      goto LABEL_28;
    }
  }
  else if ((v17 & 0x80000000) == 0)
  {
    goto LABEL_22;
  }
  operator delete(v16);
  if ((v15 & 0x80000000) == 0)
  {
LABEL_23:
    if ((v13 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_29;
  }
LABEL_28:
  operator delete(v14);
  if ((v13 & 0x80000000) == 0)
  {
LABEL_24:
    BOOL v3 = !v9;
    if ((v11 & 0x80000000) == 0) {
      return v3;
    }
    goto LABEL_30;
  }
LABEL_29:
  operator delete(v12);
  BOOL v3 = !v9;
  if ((v11 & 0x80000000) == 0) {
    return v3;
  }
LABEL_30:
  operator delete(v10[1]);
  return v3;
}

void sub_8675F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_867608(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = sub_62C704(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188), 1);
  sub_63AD1C((uint64_t **)(a1 + 5200), &v18, 1, (uint64_t)&v5);
  uint64_t v4 = sub_62C704(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188), 0);
  if (BYTE4(v17))
  {
    *(void *)a2 = v5;
    sub_4AA8E0((char *)(a2 + 8), &v6);
    *(_OWORD *)(a2 + 160) = v16;
    *(void *)(a2 + 176) = v17;
  }
  else
  {
    sub_63AD1C((uint64_t **)(a1 + 5200), &v4, 1, a2);
  }
  if (v15 < 0)
  {
    operator delete(__p);
    if ((v13 & 0x80000000) == 0)
    {
LABEL_6:
      if ((v11 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
  }
  else if ((v13 & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  operator delete(v12);
  if ((v11 & 0x80000000) == 0)
  {
LABEL_7:
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(v10);
  if ((v9 & 0x80000000) == 0)
  {
LABEL_8:
    if ((v7 & 0x80000000) == 0) {
      return;
    }
LABEL_14:
    operator delete((void *)v6);
    return;
  }
LABEL_13:
  operator delete(v8);
  if (v7 < 0) {
    goto LABEL_14;
  }
}

void sub_86774C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_7D0A58((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_867760(uint64_t a1)
{
  uint64_t v1 = (unsigned char *)(a1 + 5184);
  if (!*(unsigned char *)(a1 + 7806) || !*(unsigned char *)(a1 + 2179) || *v1) {
    return 0;
  }
  BOOL v3 = *(unsigned char *)(a1 + 5186) || *(_DWORD *)(a1 + 2144) == 3;
  if (v3
    || *(unsigned char *)(a1 + 7804)
    || *(unsigned char *)(a1 + 7913)
    || *(unsigned char *)(a1 + 7912)
    || !*(unsigned char *)(a1 + 5528)
    || !*(unsigned char *)(a1 + 5521) && !*(unsigned char *)(a1 + 5524))
  {
    return 0;
  }
  uint64_t v5 = (void *)(a1 + 5344);
  if (!sub_63ACAC(a1 + 5344) && !v1[340] && !v1[341]) {
    return 0;
  }
  sub_63AD1C((uint64_t **)(a1 + 5200), (uint64_t *)(a1 + 5344), 0, (uint64_t)v9);
  if (sub_564868(v9))
  {
    BOOL v6 = 0;
  }
  else
  {
    uint64_t v7 = 5536;
    if (!v1[536]) {
      uint64_t v7 = 5192;
    }
    uint64_t v8 = *(void *)(a1 + v7);
    BOOL v6 = v8 >= *v5 + sub_62C4E8(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  }
  sub_7D0A58((uint64_t)v9);
  return v6;
}

void sub_8678A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_7D0A58((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_8678B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_7D0A58((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_8678C8(uint64_t a1)
{
  switch(*(unsigned char *)(a1 + 2178))
  {
    case 0:
      return sub_872624(a1);
    case 1:
    case 2:
    case 4:
      uint64_t v1 = *(void *)(a1 + 2160);
      int v2 = *(_DWORD *)(v1 + 164);
      int v3 = v2 / 10;
      int v4 = v2 % 10;
      if (v2 < 0) {
        char v5 = -5;
      }
      else {
        char v5 = 5;
      }
      double v6 = *(double *)(v1 + 2008)
         / 3.6
         * (double)(int)(v3 + (((103 * (char)(v5 + v4)) >> 15) & 1) + ((103 * (char)(v5 + v4)) >> 10))
         * 100.0;
      if (v6 >= 0.0)
      {
        double v7 = *(double *)(v1 + 2008)
           / 3.6
           * (double)(int)(v3 + (((103 * (char)(v5 + v4)) >> 15) & 1) + ((103 * (char)(v5 + v4)) >> 10))
           * 100.0;
        if (v6 >= 4.50359963e15) {
          goto LABEL_13;
        }
        uint64_t v8 = (uint64_t)(v6 + v6) + 1;
      }
      else
      {
        double v7 = *(double *)(v1 + 2008)
           / 3.6
           * (double)(int)(v3 + (((103 * (char)(v5 + v4)) >> 15) & 1) + ((103 * (char)(v5 + v4)) >> 10))
           * 100.0;
        if (v6 <= -4.50359963e15) {
          goto LABEL_13;
        }
        uint64_t v8 = (uint64_t)(v6 + v6);
        if (v8 >= 1) {
          --v8;
        }
      }
      double v7 = (double)(v8 >> 1);
LABEL_13:
      if (v7 >= 9.22337204e18) {
        goto LABEL_39;
      }
      goto LABEL_14;
    case 3:
      return sub_8721CC(a1);
    default:
      uint64_t v11 = *(void *)(a1 + 2160);
      int v12 = *(_DWORD *)(v11 + 164);
      int v13 = v12 / 10;
      int v14 = v12 % 10;
      if (v12 < 0) {
        char v15 = -5;
      }
      else {
        char v15 = 5;
      }
      double v6 = *(double *)(v11 + 2008)
         / 3.6
         * (double)(int)(v13 + (((103 * (char)(v15 + v14)) >> 15) & 1) + ((103 * (char)(v15 + v14)) >> 10))
         * 100.0;
      if (v6 >= 0.0)
      {
        double v16 = *(double *)(v11 + 2008)
            / 3.6
            * (double)(int)(v13
                          + (((103 * (char)(v15 + v14)) >> 15) & 1)
                          + ((103 * (char)(v15 + v14)) >> 10))
            * 100.0;
        if (v6 >= 4.50359963e15) {
          goto LABEL_38;
        }
        uint64_t v17 = (uint64_t)(v6 + v6) + 1;
      }
      else
      {
        double v16 = *(double *)(v11 + 2008)
            / 3.6
            * (double)(int)(v13
                          + (((103 * (char)(v15 + v14)) >> 15) & 1)
                          + ((103 * (char)(v15 + v14)) >> 10))
            * 100.0;
        if (v6 <= -4.50359963e15) {
          goto LABEL_38;
        }
        uint64_t v17 = (uint64_t)(v6 + v6);
        if (v17 >= 1) {
          --v17;
        }
      }
      double v16 = (double)(v17 >> 1);
LABEL_38:
      if (v16 < 9.22337204e18)
      {
LABEL_14:
        if (v6 >= 0.0)
        {
          if (v6 >= 4.50359963e15) {
            goto LABEL_24;
          }
          uint64_t v9 = (uint64_t)(v6 + v6) + 1;
        }
        else
        {
          if (v6 <= -4.50359963e15) {
            goto LABEL_24;
          }
          uint64_t v9 = (uint64_t)(v6 + v6);
          if (v9 >= 1) {
            --v9;
          }
        }
        double v6 = (double)(v9 >> 1);
LABEL_24:
        if ((uint64_t)v6 >= *(void *)(a1 + 5192)) {
          return *(void *)(a1 + 5192);
        }
        else {
          return (uint64_t)v6;
        }
      }
LABEL_39:
      if (*(void *)(a1 + 5192) == 0x7FFFFFFFFFFFFFFFLL) {
        return 0x7FFFFFFFFFFFFFFELL;
      }
      else {
        return *(void *)(a1 + 5192);
      }
  }
}

BOOL sub_867B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_89E85C(a1 + 2200)) {
    return 1;
  }
  uint64_t v7 = *(void *)(a2 + 1072);
  uint64_t v8 = *(void *)(a2 + 1064);
  if (0x2FC962FC962FC963 * ((v7 - v8) >> 5) - 1 == a3) {
    return 0;
  }
  BOOL result = 0;
  int v9 = *(_DWORD *)(v8 + 2400 * a3 + 160);
  if (v9 != 16 && v9 != 89)
  {
    unsigned int v10 = *(unsigned __int8 *)(v8 + 2400 * a3 + 328);
    BOOL result = 1;
    if (v10 > 5 || ((1 << v10) & 0x34) == 0)
    {
      uint64_t v12 = a3 + 1;
      unsigned int v13 = *(unsigned __int8 *)(v8 + 2400 * (a3 + 1) + 328);
      if (v13 > 5 || ((1 << v13) & 0x34) == 0)
      {
        if ((v9 - 41) > 0x12 || (*(_DWORD *)(v8 + 2400 * v12 + 160) - 41) >= 0x13)
        {
          char v15 = *(void **)(a1 + 2160);
          if (*(unsigned char *)(v8 + 2400 * a3 + 893)) {
            uint64_t v16 = v15[6];
          }
          else {
            uint64_t v16 = sub_62CC54(v15, *(_DWORD *)(v8 + 2400 * a3 + 1860));
          }
          uint64_t v17 = v8 + 2400 * v12;
          uint64_t v18 = *(void *)(v17 + 872);
          int v19 = *(unsigned __int8 *)(v17 + 2225);
          return v18 <= v16 && v19 == 0;
        }
        else
        {
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_867CC8(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6)
{
  return sub_864B40(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_867CD0()
{
  uint64_t v0 = __chkstk_darwin();
  if (!*(unsigned char *)(v0 + 7914) || !*(unsigned char *)(v0 + 2182)) {
    return 0;
  }
  uint64_t v3 = v1;
  int v4 = *(unsigned char **)(v0 + 2160);
  if (!v4[1877]) {
    return 1;
  }
  sub_864B40((uint64_t)v7, v4, *(void *)(v0 + 2168), v3, v2 + 1, *(_DWORD *)(v0 + 7988) - 1);
  BOOL v5 = !v7[7912] && !v7[7911] && !v7[7908] && v7[7913] == 0;
  sub_7C69AC((uint64_t)v7);
  return v5;
}

void sub_867DFC(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  if (a1[2180])
  {
    (*(void (**)(void **__return_ptr, unsigned char *))(*(void *)a1 + 32))(&v31, a1);
    unint64_t v4 = *(void *)(a2 + 8);
    if (v4 >= *(void *)(a2 + 16))
    {
      double v6 = sub_7576B4((void **)a2, (uint64_t)&v31);
    }
    else
    {
      sub_7574DC(v4, (uint64_t)&v31);
      double v6 = (void *)(v5 + 1080);
    }
    *(void *)(a2 + 8) = v6;
    sub_52F1E8((uint64_t)&v31);
  }
  if (a1[2181])
  {
    sub_8681E0((uint64_t)a1, (uint64_t *)&v31);
    uint64_t v7 = (uint64_t)v31;
    uint64_t v8 = v32;
    if (v31 != v32)
    {
      int v9 = *(void **)(a2 + 8);
      do
      {
        if ((unint64_t)v9 < *(void *)(a2 + 16))
        {
          sub_7574DC((uint64_t)v9, v7);
          int v9 = (void *)(v10 + 1080);
        }
        else
        {
          int v9 = sub_7576B4((void **)a2, v7);
        }
        *(void *)(a2 + 8) = v9;
        v7 += 1080;
      }
      while ((void *)v7 != v8);
      uint64_t v7 = (uint64_t)v31;
    }
    if (v7)
    {
      uint64_t v11 = v32;
      uint64_t v12 = (void *)v7;
      if (v32 != (void *)v7)
      {
        do
          uint64_t v11 = sub_52F1E8((uint64_t)(v11 - 135));
        while (v11 != (void *)v7);
        uint64_t v12 = v31;
      }
      long long v32 = (void *)v7;
      operator delete(v12);
    }
  }
  (*(void (**)(void **__return_ptr, unsigned char *))(*(void *)a1 + 40))(&v31, a1);
  unint64_t v13 = *(void *)(a2 + 8);
  if (v13 >= *(void *)(a2 + 16))
  {
    char v15 = sub_7576B4((void **)a2, (uint64_t)&v31);
  }
  else
  {
    sub_7574DC(v13, (uint64_t)&v31);
    char v15 = (void *)(v14 + 1080);
  }
  *(void *)(a2 + 8) = v15;
  sub_52F1E8((uint64_t)&v31);
  if (a1[7908])
  {
    sub_868538((uint64_t)a1, (uint64_t)&v31);
    unint64_t v16 = *(void *)(a2 + 8);
    if (v16 >= *(void *)(a2 + 16))
    {
      uint64_t v18 = sub_7576B4((void **)a2, (uint64_t)&v31);
    }
    else
    {
      sub_7574DC(v16, (uint64_t)&v31);
      uint64_t v18 = (void *)(v17 + 1080);
    }
    *(void *)(a2 + 8) = v18;
    sub_52F1E8((uint64_t)&v31);
  }
  sub_8688B4((uint64_t)a1, (uint64_t *)&__p);
  int v19 = (char *)__p;
  uint64_t v20 = v30;
  if (__p != v30)
  {
    unsigned int v21 = *(void **)(a2 + 8);
    do
    {
      if ((unint64_t)v21 < *(void *)(a2 + 16))
      {
        sub_7574DC((uint64_t)v21, (uint64_t)v19);
        unsigned int v21 = (void *)(v22 + 1080);
      }
      else
      {
        unsigned int v21 = sub_7576B4((void **)a2, (uint64_t)v19);
      }
      *(void *)(a2 + 8) = v21;
      v19 += 1080;
    }
    while (v19 != v20);
  }
  sub_868CB8((uint64_t)a1, (unint64_t *)a2);
  sub_7EAE94((uint64_t)a1, (uint64_t)&v31);
  unint64_t v23 = *(void *)(a2 + 8);
  if (v23 >= *(void *)(a2 + 16))
  {
    char v25 = sub_7576B4((void **)a2, (uint64_t)&v31);
  }
  else
  {
    sub_7574DC(v23, (uint64_t)&v31);
    char v25 = (void *)(v24 + 1080);
  }
  *(void *)(a2 + 8) = v25;
  sub_52F1E8((uint64_t)&v31);
  BOOL v26 = (char *)__p;
  if (__p)
  {
    unint64_t v27 = v30;
    uint64_t v28 = __p;
    if (v30 != __p)
    {
      do
        unint64_t v27 = (char *)sub_52F1E8((uint64_t)(v27 - 1080));
      while (v27 != v26);
      uint64_t v28 = __p;
    }
    uint64_t v30 = v26;
    operator delete(v28);
  }
}

void sub_8680F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_52F1E8((uint64_t)va);
  sub_591E78(v5);
  _Unwind_Resume(a1);
}

void sub_86813C(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_868150(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_868164(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_868178(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_591E78((void **)va);
  sub_591E78(v2);
  _Unwind_Resume(a1);
}

void sub_8681E0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v3 = *(unsigned __int8 *)(a1 + 2181);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  if (v3)
  {
    uint64_t v5 = *(uint64_t **)(a1 + 5152);
    double v6 = *(uint64_t **)(a1 + 5160);
    if (v5 != v6)
    {
      while (1)
      {
        uint64_t v7 = *v5;
        if (*v5 == 0x7FFFFFFFFFFFFFFFLL || v7 > *(void *)(a1 + 2152)) {
          break;
        }
        uint64_t v8 = *(unsigned char *)(a1 + 2176) ? 128 : 136;
        if (v7 < *(void *)(*(void *)(a1 + 2160) + v8)) {
          break;
        }
        if (++v5 == v6)
        {
          uint64_t v9 = 5144;
          if (!*(unsigned char *)(a1 + 2180)) {
            uint64_t v9 = 2152;
          }
          uint64_t v26 = *(void *)(a1 + v9);
          sub_8B1550(a1 + 2200, (uint64_t)&v23);
          uint64_t v10 = v24;
          if (v24 != v23)
          {
            uint64_t v11 = 0;
            uint64_t v12 = 0;
            uint64_t v13 = ((char *)v24 - (char *)v23) / 72;
            do
            {
              sub_7C4620((uint64_t)v27, (uint64_t)&v23[v12], *(unsigned __int8 *)(*(void *)(a1 + 2160) + 418), 3, (void *)(a1 + 5176));
              sub_63841C((uint64_t)v27, 4);
              sub_638408((uint64_t)v27, &v26, (void *)(*(void *)(a1 + 5152) + v11));
              sub_5F3D48((uint64_t)v22, (uint64_t)&qword_25CA580);
              char v21 = 1;
              sub_5F6090(v22, (uint64_t)&qword_25CA580, &v26, &v21);
              sub_638E74((uint64_t)v27, (uint64_t)v22);
              unint64_t v15 = a2[1];
              if (v15 >= a2[2])
              {
                uint64_t v14 = sub_7572F4(a2, (uint64_t)v27);
              }
              else
              {
                sub_599644(a2[1], (uint64_t)v27);
                uint64_t v14 = v15 + 1080;
                a2[1] = v15 + 1080;
              }
              a2[1] = v14;
              uint64_t v26 = *(void *)(*(void *)(a1 + 5152) + v11);
              sub_4D4B58((uint64_t)v22);
              sub_52F1E8((uint64_t)v27);
              v12 += 9;
              v11 += 8;
              --v13;
            }
            while (v13);
            uint64_t v10 = v23;
          }
          if (v10)
          {
            int v19 = v24;
            uint64_t v20 = v10;
            if (v24 != v10)
            {
              do
              {
                v19 -= 9;
                sub_8728F4((uint64_t)&v25, v19);
              }
              while (v19 != v10);
              uint64_t v20 = v23;
            }
            uint64_t v24 = v10;
            operator delete(v20);
          }
          return;
        }
      }
    }
    sub_86C6D8(a1, (uint64_t)v27);
    unint64_t v16 = a2[1];
    if (v16 >= a2[2])
    {
      uint64_t v18 = sub_7576B4((void **)a2, (uint64_t)v27);
    }
    else
    {
      sub_7574DC(v16, (uint64_t)v27);
      uint64_t v18 = (void *)(v17 + 1080);
    }
    a2[1] = (uint64_t)v18;
    sub_52F1E8((uint64_t)v27);
  }
}

void sub_868490(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_8684A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  sub_52F1E8((uint64_t)&a34);
  sub_591E78(v34);
  _Unwind_Resume(a1);
}

void sub_8684C0(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_8684D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void **a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  *(void *)(v34 + 8) = v35;
  sub_4D4B58((uint64_t)&a10);
  sub_52F1E8((uint64_t)&a34);
  sub_84F7EC(&a30);
  sub_591E78((void **)v34);
  _Unwind_Resume(a1);
}

void sub_868538(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_8B22A4((_DWORD *)(a1 + 2200), a1 + 5344, (uint64_t)&v17);
  sub_7C47A4(a2, (uint64_t)&v17);
  uint64_t v4 = nullsub_1(&v17);
  sub_638D90(a2, v4);
  sub_7C43E4(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 418));
  v16[0] = 0;
  sub_638408(a2, (void *)(a1 + 5344), v16);
  uint64_t v5 = (unsigned char *)(a1 + 5524);
  int v6 = 8;
  switch(*(_DWORD *)(a1 + 2144))
  {
    case 2:
    case 0x15:
    case 0x1C:
    case 0x1E:
    case 0x22:
    case 0x3D:
    case 0x3F:
    case 0x42:
      if (!*v5) {
        goto LABEL_5;
      }
      goto LABEL_3;
    default:
      int v6 = 9;
      if (*v5)
      {
LABEL_3:
        int v7 = 7;
      }
      else
      {
LABEL_5:
        if (*(unsigned char *)(a1 + 5525)) {
          int v7 = 10;
        }
        else {
          int v7 = v6;
        }
      }
      sub_63841C(a2, v7);
      sub_5F3D48((uint64_t)v16, (uint64_t)&qword_25CA580);
      char v15 = 1;
      sub_5F6090(v16, (uint64_t)&qword_25CA580, (uint64_t *)(a1 + 5344), &v15);
      sub_638E74(a2, (uint64_t)v16);
      sub_638A0C(a2);
      sub_4D4B58((uint64_t)v16);
      uint64_t v8 = v21;
      if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      uint64_t v9 = v20;
      if (v20)
      {
        do
        {
          uint64_t v10 = (void *)*v9;
          sub_4F4B48((uint64_t)(v9 + 2));
          operator delete(v9);
          uint64_t v9 = v10;
        }
        while (v10);
      }
      uint64_t v11 = v19;
      int v19 = 0;
      if (v11) {
        operator delete(v11);
      }
      uint64_t v12 = v17;
      if (v17)
      {
        uint64_t v13 = v18;
        uint64_t v14 = v17;
        if (v18 != v17)
        {
          do
          {
            if (*((char *)v13 - 1) < 0) {
              operator delete(*(v13 - 3));
            }
            v13 -= 3;
          }
          while (v13 != v12);
          uint64_t v14 = v17;
        }
        uint64_t v18 = v12;
        operator delete(v14);
      }
      return;
  }
}

void sub_86874C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_4D4B58((uint64_t)va);
  sub_52F1E8(v2);
  sub_4F31D0((void **)(v3 - 136));
  _Unwind_Resume(a1);
}

void sub_8688B4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v3 = *(void *)(a1 + 7448) - *(void *)(a1 + 7440);
  if (v3)
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xCF3CF3CF3CF3CF3DLL * (v3 >> 4);
    int v7 = (unsigned char *)(a1 + 7803);
    while (1)
    {
      uint64_t v8 = (void *)(*(void *)(a1 + 7440) + 336 * v5);
      if ((!sub_683488((uint64_t)v8) || !*v7) && sub_6834B8(v8))
      {
        uint64_t v9 = sub_685CD8((uint64_t)v8);
        v32.n128_u64[0] = v9;
        v32.n128_u64[1] = v10;
        if (!*(unsigned char *)(a1 + 2180)) {
          goto LABEL_12;
        }
        int64_t v11 = *(void *)(a1 + 5144);
        if (v11 >= v10) {
          break;
        }
      }
LABEL_4:
      if (++v5 == v6) {
        return;
      }
    }
    if (v9 > v11 && v11 - v10 >= *(void *)(*(void *)(a1 + 2160) + 1504)) {
      v32.n128_u64[0] = *(void *)(a1 + 5144);
    }
LABEL_12:
    sub_676048((uint64_t)v8, (uint64_t)&v28);
    sub_7C43EC(v33, &v28, 0);
    sub_7C47A8((uint64_t)v33, v5);
    sub_638424((uint64_t)v33, &v32);
    if (sub_683488((uint64_t)v8)) {
      int v12 = 17;
    }
    else {
      int v12 = 16;
    }
    sub_63841C((uint64_t)v33, v12);
    BOOL v13 = sub_683488((uint64_t)v8);
    uint64_t v14 = 416;
    if (v13) {
      uint64_t v14 = 418;
    }
    sub_7C43E4((uint64_t)v33, *(unsigned __int8 *)(*(void *)(a1 + 2160) + v14));
    if (sub_68346C((uint64_t)v8))
    {
      sub_5F3D48((uint64_t)v27, (uint64_t)&unk_25CA598);
      v25[0] = sub_638A20((uint64_t)v33);
      v25[1] = v15;
      uint64_t v26 = sub_6383A0(v25);
      char v24 = 1;
      sub_5F6090(v27, (uint64_t)&unk_25CA598, &v26, &v24);
      sub_638E74((uint64_t)v33, (uint64_t)v27);
      sub_4D4B58((uint64_t)v27);
    }
    unint64_t v16 = a2[1];
    if (v16 >= a2[2])
    {
      uint64_t v17 = sub_7572F4(a2, (uint64_t)v33);
    }
    else
    {
      sub_599644(a2[1], (uint64_t)v33);
      uint64_t v17 = v16 + 1080;
      a2[1] = v16 + 1080;
    }
    a2[1] = v17;
    sub_52F1E8((uint64_t)v33);
    uint64_t v18 = v31;
    if (!v31)
    {
LABEL_23:
      int v19 = v30;
      uint64_t v30 = 0;
      if (v19) {
        operator delete(v19);
      }
      uint64_t v20 = v28;
      if (v28)
      {
        char v21 = v29;
        uint64_t v22 = v28;
        if (v29 != v28)
        {
          do
          {
            if (*((char *)v21 - 1) < 0) {
              operator delete(*(v21 - 3));
            }
            v21 -= 3;
          }
          while (v21 != v20);
          uint64_t v22 = v28;
        }
        char v29 = v20;
        operator delete(v22);
      }
      goto LABEL_4;
    }
    while (1)
    {
      unint64_t v23 = (void **)*v18;
      if (*((char *)v18 + 191) < 0)
      {
        operator delete(v18[21]);
        if ((*((char *)v18 + 159) & 0x80000000) == 0)
        {
LABEL_31:
          if ((*((char *)v18 + 135) & 0x80000000) == 0) {
            goto LABEL_32;
          }
          goto LABEL_38;
        }
      }
      else if ((*((char *)v18 + 159) & 0x80000000) == 0)
      {
        goto LABEL_31;
      }
      operator delete(v18[17]);
      if ((*((char *)v18 + 135) & 0x80000000) == 0)
      {
LABEL_32:
        if ((*((char *)v18 + 95) & 0x80000000) == 0) {
          goto LABEL_33;
        }
        goto LABEL_39;
      }
LABEL_38:
      operator delete(v18[14]);
      if ((*((char *)v18 + 95) & 0x80000000) == 0)
      {
LABEL_33:
        if ((*((char *)v18 + 63) & 0x80000000) == 0) {
          goto LABEL_34;
        }
        goto LABEL_40;
      }
LABEL_39:
      operator delete(v18[9]);
      if ((*((char *)v18 + 63) & 0x80000000) == 0)
      {
LABEL_34:
        if (*((char *)v18 + 39) < 0) {
          goto LABEL_41;
        }
        goto LABEL_28;
      }
LABEL_40:
      operator delete(v18[5]);
      if (*((char *)v18 + 39) < 0) {
LABEL_41:
      }
        operator delete(v18[2]);
LABEL_28:
      operator delete(v18);
      uint64_t v18 = v23;
      if (!v23) {
        goto LABEL_23;
      }
    }
  }
}

void sub_868C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  *(void *)(v44 + 8) = v45;
  sub_52F1E8((uint64_t)&a44);
  sub_4D4880(&a33);
  sub_591E78((void **)v44);
  _Unwind_Resume(a1);
}

void sub_868CB8(uint64_t a1, unint64_t *a2)
{
  if (*a2 != a2[1])
  {
    uint64_t v4 = sub_62BE00(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    uint64_t v5 = *(void *)(*(void *)(a1 + 2160) + 1504);
    int v7 = (void *)*a2;
    unint64_t v6 = a2[1];
    unint64_t v8 = 126 - 2 * __clz(0x1A8C536FE1A8C537 * ((uint64_t)(v6 - *a2) >> 3));
    BOOL v9 = v6 == *a2;
    v14[0] = v4;
    v14[1] = v5;
    _DWORD v14[2] = a1;
    if (v9) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v8;
    }
    sub_8817F8(v7, v6, (uint64_t)&v15, v10, 1);
    sub_84FB90(v14, a2);
    unint64_t v11 = a2[1];
    unint64_t v12 = 126 - 2 * __clz(0x1A8C536FE1A8C537 * ((uint64_t)(v11 - *a2) >> 3));
    if (v11 == *a2) {
      uint64_t v13 = 0;
    }
    else {
      uint64_t v13 = v12;
    }
    sub_8830B4((void *)*a2, v11, (uint64_t)&v15, v13, 1);
    sub_84FB90(v14, a2);
  }
}

void *sub_868D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void **a3@<X8>)
{
  BOOL result = (*(void *(**)(void **__return_ptr))(*(void *)a1 + 16))(a3);
  if (*(unsigned char *)(a1 + 7914))
  {
    int v7 = sub_89E85C(a1 + 2200);
    sub_868F24(a1, a2, *(void *)(a1 + 2192) + (v7 ^ 1u), (uint64_t)v14);
    unint64_t v8 = (unint64_t)a3[1];
    if (v8 >= (unint64_t)a3[2])
    {
      uint64_t v10 = sub_7576B4(a3, (uint64_t)v14);
    }
    else
    {
      sub_7574DC(v8, (uint64_t)v14);
      uint64_t v10 = (void *)(v9 + 1080);
    }
    a3[1] = v10;
    BOOL result = sub_52F1E8((uint64_t)v14);
  }
  unint64_t v11 = *a3;
  unint64_t v12 = a3[1];
  while (v11 != v12)
  {
    BOOL result = (void *)sub_638AF0(v11);
    if ((result & 1) == 0)
    {
      int v13 = *(_DWORD *)(a1 + 7916);
      *(_DWORD *)(a1 + 7916) = v13 + 1;
      BOOL result = sub_BB6C(v11, v13);
    }
    v11 += 270;
  }
  return result;
}

void sub_868ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_52F1E8((uint64_t)&a9);
  sub_591E78(v9);
  _Unwind_Resume(a1);
}

void sub_868EE8(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_868EFC(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_868F10(_Unwind_Exception *a1)
{
  sub_591E78(v1);
  _Unwind_Resume(a1);
}

void sub_868F24(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 + 1064);
  uint64_t v9 = a1 + 2200;
  sub_8B2A40(a1 + 2200, a2, a3, (uint64_t)&v29);
  sub_7C47A4(a4, (uint64_t)&v29);
  uint64_t v10 = nullsub_1(&v29);
  sub_638D90(a4, v10);
  sub_7C43E4(a4, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 419));
  unint64_t v11 = *(void **)(a1 + 2160);
  if (*(unsigned char *)(a1 + 2179))
  {
    uint64_t v12 = sub_62B9C8(v11, *(_DWORD *)(a1 + 5188));
    uint64_t v13 = sub_62BA34(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    if (*(unsigned char *)(a1 + 2176)) {
      uint64_t v14 = v12;
    }
    else {
      uint64_t v14 = v13;
    }
  }
  else
  {
    uint64_t v14 = v11[3];
  }
  if (*(void *)(a1 + 2152) < v14) {
    uint64_t v14 = *(void *)(a1 + 2152);
  }
  uint64_t v27 = 0;
  uint64_t v28 = v14;
  sub_638408(a4, &v28, &v27);
  if (sub_89E85C(v9))
  {
    int v15 = 13;
  }
  else if (*(unsigned char *)(a1 + 5184))
  {
    int v15 = 12;
  }
  else
  {
    int v15 = 11;
  }
  sub_63841C(a4, v15);
  int v16 = *(_DWORD *)(v8 + 2400 * a3 + 160);
  if ((v16 & 0xFFFFFFFE) != 6 && (v16 - 41) > 0x12)
  {
    sub_7C43DC(a4, v16);
  }
  else
  {
    uint64_t v18 = v8 + 2400 * a3;
    int v19 = (char *)(v18 + 329);
    if (!*(unsigned char *)(v18 + 330)) {
      int v19 = (char *)(a2 + 1057);
    }
    sub_7C4888(a4, v18 + 176, *v19);
  }
  uint64_t v20 = v33;
  if (v33 && !atomic_fetch_add(&v33->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
  }
  char v21 = v32;
  if (v32)
  {
    do
    {
      uint64_t v22 = (void *)*v21;
      sub_4F4B48((uint64_t)(v21 + 2));
      operator delete(v21);
      char v21 = v22;
    }
    while (v22);
  }
  unint64_t v23 = __p;
  long long __p = 0;
  if (v23) {
    operator delete(v23);
  }
  char v24 = (void **)v29;
  if (v29)
  {
    uint64_t v25 = v30;
    uint64_t v26 = v29;
    if (v30 != v29)
    {
      do
      {
        if (*((char *)v25 - 1) < 0) {
          operator delete(*(v25 - 3));
        }
        v25 -= 3;
      }
      while (v25 != v24);
      uint64_t v26 = v29;
    }
    uint64_t v30 = v24;
    operator delete(v26);
  }
}

void sub_869158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_52F1E8(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_869198(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 2182);
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 2192) + 1;
    char v3 = 1;
    if (*(unsigned char *)(a1 + 2179))
    {
LABEL_3:
      uint64_t v8 = v4;
      char v9 = v3;
      *(_DWORD *)uint64_t v10 = v11[0];
      *(_DWORD *)&v10[3] = *(_DWORD *)((char *)v11 + 3);
      sub_869230(a1, a2, (unint64_t *)&v8, a3);
      return;
    }
  }
  else
  {
    uint64_t v4 = 0;
    *(_DWORD *)((char *)v11 + 3) = 0;
    v11[0] = 0;
    if (*(unsigned char *)(a1 + 2179)) {
      goto LABEL_3;
    }
  }
  uint64_t v5 = v4;
  char v6 = v3;
  *(_DWORD *)int v7 = v11[0];
  *(_DWORD *)&v7[3] = *(_DWORD *)((char *)v11 + 3);
  sub_86AF14((unsigned char *)a1, a2, (uint64_t)&v5, a3);
}

void sub_869230(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  if (*(unsigned char *)(a1 + 2180))
  {
    sub_86CBEC(a1, (uint64_t)&v204);
    unint64_t v8 = a4[1];
    if (v8 >= a4[2])
    {
      uint64_t v18 = sub_757E08(a4, (uint64_t)&v204);
      int v19 = __p;
      a4[1] = v18;
      if (v19)
      {
        size_t v233 = v19;
        operator delete(v19);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v8 = v204;
      *(void *)(v8 + 16) = 0;
      *(void *)(v8 + 24) = 0;
      *(void *)(v8 + 8) = 0;
      *(_OWORD *)(v8 + 8) = *(_OWORD *)v205;
      *(void *)(v8 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v9 = v209;
      long long v10 = v207;
      *(_OWORD *)(v8 + 48) = v208;
      *(_OWORD *)(v8 + 64) = v9;
      *(_OWORD *)(v8 + 32) = v10;
      uint64_t v11 = v212;
      long long v12 = v211;
      *(_OWORD *)(v8 + 80) = v210;
      *(_OWORD *)(v8 + 96) = v12;
      *(void *)(v8 + 112) = v11;
      *(void *)(v8 + 120) = 0;
      *(void *)(v8 + 128) = 0;
      *(void *)(v8 + 136) = 0;
      *(_OWORD *)(v8 + 120) = v213;
      *(void *)(v8 + 136) = v214;
      *(void *)(v8 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v8 + 152) = 0;
      *(void *)(v8 + 160) = 0;
      *(_OWORD *)(v8 + 144) = v215;
      *(void *)(v8 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v8 + 168) = v217;
      *(_DWORD *)(v8 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v8 + 184) = v218;
      }
      *(_OWORD *)(v8 + 200) = v220;
      long long v13 = v221;
      uint64_t v14 = v223;
      *(_OWORD *)(v8 + 232) = v222;
      *(_OWORD *)(v8 + 216) = v13;
      *(void *)(v8 + 248) = v14;
      *(void *)(v8 + 256) = 0;
      *(void *)(v8 + 264) = 0;
      *(void *)(v8 + 272) = 0;
      *(_OWORD *)(v8 + 256) = v224;
      *(void *)(v8 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v8 + 280) = v226;
      *(void *)(v8 + 288) = 0;
      *(void *)(v8 + 296) = 0;
      *(void *)(v8 + 304) = 0;
      *(_OWORD *)(v8 + 288) = v227;
      *(void *)(v8 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v15 = *(_OWORD *)v229;
      *(_OWORD *)(v8 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v8 + 312) = v15;
      long long v16 = v230;
      *(_DWORD *)(v8 + 356) = v231;
      *(_OWORD *)(v8 + 340) = v16;
      *(void *)(v8 + 360) = 0;
      *(void *)(v8 + 368) = 0;
      *(void *)(v8 + 376) = 0;
      *(void *)(v8 + 360) = __p;
      *(void *)(v8 + 368) = v233;
      *(void *)(v8 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v17 = v235;
      *(_DWORD *)(v8 + 400) = v236;
      *(_OWORD *)(v8 + 384) = v17;
      a4[1] = v8 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v20 = (void **)v224;
    if ((void)v224)
    {
      char v21 = (void **)*((void *)&v224 + 1);
      uint64_t v22 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          char v21 = sub_4F31D0(v21 - 13);
        while (v21 != v20);
        uint64_t v22 = (void *)v224;
      }
      *((void *)&v224 + 1) = v20;
      operator delete(v22);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    unint64_t v23 = v205[0];
    if (v205[0])
    {
      char v24 = v205[1];
      uint64_t v25 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          char v24 = (void *)sub_4D4B58((uint64_t)v24 - 160);
        while (v24 != v23);
        uint64_t v25 = v205[0];
      }
      v205[1] = v23;
      operator delete(v25);
    }
  }
  if (*(unsigned char *)(a1 + 2181))
  {
    sub_86CE88(a1, (uint64_t *)&v204);
    sub_878048(a4, (void *)a4[1], (uint64_t)v204, (uint64_t)v205[0], 0xFAFAFAFAFAFAFAFBLL * (((char *)v205[0] - (char *)v204) >> 3));
    uint64_t v26 = v204;
    if (v204)
    {
      uint64_t v27 = v205[0];
      uint64_t v28 = v204;
      if (v205[0] != v204)
      {
        do
        {
          char v29 = (void *)*(v27 - 6);
          if (v29)
          {
            *(v27 - 5) = v29;
            operator delete(v29);
          }
          v27 -= 51;
          sub_4F32CC(v27);
        }
        while (v27 != v26);
        uint64_t v28 = v204;
      }
      v205[0] = v26;
      operator delete(v28);
    }
  }
  if (*(unsigned char *)(a1 + 7904))
  {
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 56))(&v204, a1);
    unint64_t v30 = a4[1];
    if (v30 >= a4[2])
    {
      uint64_t v40 = sub_757E08(a4, (uint64_t)&v204);
      uint64_t v41 = __p;
      a4[1] = v40;
      if (v41)
      {
        size_t v233 = v41;
        operator delete(v41);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v30 = v204;
      *(void *)(v30 + 16) = 0;
      *(void *)(v30 + 24) = 0;
      *(void *)(v30 + 8) = 0;
      *(_OWORD *)(v30 + 8) = *(_OWORD *)v205;
      *(void *)(v30 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v31 = v209;
      long long v32 = v207;
      *(_OWORD *)(v30 + 48) = v208;
      *(_OWORD *)(v30 + 64) = v31;
      *(_OWORD *)(v30 + 32) = v32;
      uint64_t v33 = v212;
      long long v34 = v211;
      *(_OWORD *)(v30 + 80) = v210;
      *(_OWORD *)(v30 + 96) = v34;
      *(void *)(v30 + 112) = v33;
      *(void *)(v30 + 120) = 0;
      *(void *)(v30 + 128) = 0;
      *(void *)(v30 + 136) = 0;
      *(_OWORD *)(v30 + 120) = v213;
      *(void *)(v30 + 136) = v214;
      *(void *)(v30 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v30 + 152) = 0;
      *(void *)(v30 + 160) = 0;
      *(_OWORD *)(v30 + 144) = v215;
      *(void *)(v30 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v30 + 168) = v217;
      *(_DWORD *)(v30 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v30 + 184) = v218;
      }
      *(_OWORD *)(v30 + 200) = v220;
      long long v35 = v221;
      uint64_t v36 = v223;
      *(_OWORD *)(v30 + 232) = v222;
      *(_OWORD *)(v30 + 216) = v35;
      *(void *)(v30 + 248) = v36;
      *(void *)(v30 + 256) = 0;
      *(void *)(v30 + 264) = 0;
      *(void *)(v30 + 272) = 0;
      *(_OWORD *)(v30 + 256) = v224;
      *(void *)(v30 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v30 + 280) = v226;
      *(void *)(v30 + 288) = 0;
      *(void *)(v30 + 296) = 0;
      *(void *)(v30 + 304) = 0;
      *(_OWORD *)(v30 + 288) = v227;
      *(void *)(v30 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v37 = *(_OWORD *)v229;
      *(_OWORD *)(v30 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v30 + 312) = v37;
      long long v38 = v230;
      *(_DWORD *)(v30 + 356) = v231;
      *(_OWORD *)(v30 + 340) = v38;
      *(void *)(v30 + 360) = 0;
      *(void *)(v30 + 368) = 0;
      *(void *)(v30 + 376) = 0;
      *(void *)(v30 + 360) = __p;
      *(void *)(v30 + 368) = v233;
      *(void *)(v30 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v39 = v235;
      *(_DWORD *)(v30 + 400) = v236;
      *(_OWORD *)(v30 + 384) = v39;
      a4[1] = v30 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v42 = (void **)v224;
    if ((void)v224)
    {
      char v43 = (void **)*((void *)&v224 + 1);
      uint64_t v44 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          char v43 = sub_4F31D0(v43 - 13);
        while (v43 != v42);
        uint64_t v44 = (void *)v224;
      }
      *((void *)&v224 + 1) = v42;
      operator delete(v44);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    uint64_t v45 = v205[0];
    if (v205[0])
    {
      unsigned __int16 v46 = v205[1];
      uint64_t v47 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          unsigned __int16 v46 = (void *)sub_4D4B58((uint64_t)v46 - 160);
        while (v46 != v45);
        uint64_t v47 = v205[0];
      }
      v205[1] = v45;
      operator delete(v47);
    }
  }
  if (*(unsigned char *)(a1 + 7905))
  {
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 64))(&v204, a1);
    unint64_t v48 = a4[1];
    if (v48 >= a4[2])
    {
      uint64_t v58 = sub_757E08(a4, (uint64_t)&v204);
      uint64_t v59 = __p;
      a4[1] = v58;
      if (v59)
      {
        size_t v233 = v59;
        operator delete(v59);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v48 = v204;
      *(void *)(v48 + 16) = 0;
      *(void *)(v48 + 24) = 0;
      *(void *)(v48 + 8) = 0;
      *(_OWORD *)(v48 + 8) = *(_OWORD *)v205;
      *(void *)(v48 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v49 = v209;
      long long v50 = v207;
      *(_OWORD *)(v48 + 48) = v208;
      *(_OWORD *)(v48 + 64) = v49;
      *(_OWORD *)(v48 + 32) = v50;
      uint64_t v51 = v212;
      long long v52 = v211;
      *(_OWORD *)(v48 + 80) = v210;
      *(_OWORD *)(v48 + 96) = v52;
      *(void *)(v48 + 112) = v51;
      *(void *)(v48 + 120) = 0;
      *(void *)(v48 + 128) = 0;
      *(void *)(v48 + 136) = 0;
      *(_OWORD *)(v48 + 120) = v213;
      *(void *)(v48 + 136) = v214;
      *(void *)(v48 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v48 + 152) = 0;
      *(void *)(v48 + 160) = 0;
      *(_OWORD *)(v48 + 144) = v215;
      *(void *)(v48 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v48 + 168) = v217;
      *(_DWORD *)(v48 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v48 + 184) = v218;
      }
      *(_OWORD *)(v48 + 200) = v220;
      long long v53 = v221;
      uint64_t v54 = v223;
      *(_OWORD *)(v48 + 232) = v222;
      *(_OWORD *)(v48 + 216) = v53;
      *(void *)(v48 + 248) = v54;
      *(void *)(v48 + 256) = 0;
      *(void *)(v48 + 264) = 0;
      *(void *)(v48 + 272) = 0;
      *(_OWORD *)(v48 + 256) = v224;
      *(void *)(v48 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v48 + 280) = v226;
      *(void *)(v48 + 288) = 0;
      *(void *)(v48 + 296) = 0;
      *(void *)(v48 + 304) = 0;
      *(_OWORD *)(v48 + 288) = v227;
      *(void *)(v48 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v55 = *(_OWORD *)v229;
      *(_OWORD *)(v48 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v48 + 312) = v55;
      long long v56 = v230;
      *(_DWORD *)(v48 + 356) = v231;
      *(_OWORD *)(v48 + 340) = v56;
      *(void *)(v48 + 360) = 0;
      *(void *)(v48 + 368) = 0;
      *(void *)(v48 + 376) = 0;
      *(void *)(v48 + 360) = __p;
      *(void *)(v48 + 368) = v233;
      *(void *)(v48 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v57 = v235;
      *(_DWORD *)(v48 + 400) = v236;
      *(_OWORD *)(v48 + 384) = v57;
      a4[1] = v48 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    long long v60 = (void **)v224;
    if ((void)v224)
    {
      uint64_t v61 = (void **)*((void *)&v224 + 1);
      long long v62 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          uint64_t v61 = sub_4F31D0(v61 - 13);
        while (v61 != v60);
        long long v62 = (void *)v224;
      }
      *((void *)&v224 + 1) = v60;
      operator delete(v62);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    uint64_t v63 = v205[0];
    if (v205[0])
    {
      uint64_t v64 = v205[1];
      __int16 v65 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          uint64_t v64 = (void *)sub_4D4B58((uint64_t)v64 - 160);
        while (v64 != v63);
        __int16 v65 = v205[0];
      }
      v205[1] = v63;
      operator delete(v65);
    }
  }
  if (*(unsigned char *)(a1 + 7908))
  {
    sub_86DE3C(a1, (uint64_t)&v204);
    unint64_t v66 = a4[1];
    if (v66 >= a4[2])
    {
      uint64_t v76 = sub_757E08(a4, (uint64_t)&v204);
      uint64_t v77 = __p;
      a4[1] = v76;
      if (v77)
      {
        size_t v233 = v77;
        operator delete(v77);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v66 = v204;
      *(void *)(v66 + 16) = 0;
      *(void *)(v66 + 24) = 0;
      *(void *)(v66 + 8) = 0;
      *(_OWORD *)(v66 + 8) = *(_OWORD *)v205;
      *(void *)(v66 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v67 = v209;
      long long v68 = v207;
      *(_OWORD *)(v66 + 48) = v208;
      *(_OWORD *)(v66 + 64) = v67;
      *(_OWORD *)(v66 + 32) = v68;
      uint64_t v69 = v212;
      long long v70 = v211;
      *(_OWORD *)(v66 + 80) = v210;
      *(_OWORD *)(v66 + 96) = v70;
      *(void *)(v66 + 112) = v69;
      *(void *)(v66 + 120) = 0;
      *(void *)(v66 + 128) = 0;
      *(void *)(v66 + 136) = 0;
      *(_OWORD *)(v66 + 120) = v213;
      *(void *)(v66 + 136) = v214;
      *(void *)(v66 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v66 + 152) = 0;
      *(void *)(v66 + 160) = 0;
      *(_OWORD *)(v66 + 144) = v215;
      *(void *)(v66 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v66 + 168) = v217;
      *(_DWORD *)(v66 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v66 + 184) = v218;
      }
      *(_OWORD *)(v66 + 200) = v220;
      long long v71 = v221;
      uint64_t v72 = v223;
      *(_OWORD *)(v66 + 232) = v222;
      *(_OWORD *)(v66 + 216) = v71;
      *(void *)(v66 + 248) = v72;
      *(void *)(v66 + 256) = 0;
      *(void *)(v66 + 264) = 0;
      *(void *)(v66 + 272) = 0;
      *(_OWORD *)(v66 + 256) = v224;
      *(void *)(v66 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v66 + 280) = v226;
      *(void *)(v66 + 288) = 0;
      *(void *)(v66 + 296) = 0;
      *(void *)(v66 + 304) = 0;
      *(_OWORD *)(v66 + 288) = v227;
      *(void *)(v66 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v73 = *(_OWORD *)v229;
      *(_OWORD *)(v66 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v66 + 312) = v73;
      long long v74 = v230;
      *(_DWORD *)(v66 + 356) = v231;
      *(_OWORD *)(v66 + 340) = v74;
      *(void *)(v66 + 360) = 0;
      *(void *)(v66 + 368) = 0;
      *(void *)(v66 + 376) = 0;
      *(void *)(v66 + 360) = __p;
      *(void *)(v66 + 368) = v233;
      *(void *)(v66 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v75 = v235;
      *(_DWORD *)(v66 + 400) = v236;
      *(_OWORD *)(v66 + 384) = v75;
      a4[1] = v66 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    int v78 = (void **)v224;
    if ((void)v224)
    {
      uint64_t v79 = (void **)*((void *)&v224 + 1);
      uint64_t v80 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          uint64_t v79 = sub_4F31D0(v79 - 13);
        while (v79 != v78);
        uint64_t v80 = (void *)v224;
      }
      *((void *)&v224 + 1) = v78;
      operator delete(v80);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    long long v81 = v205[0];
    if (v205[0])
    {
      uint64_t v82 = v205[1];
      uint64_t v83 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          uint64_t v82 = (void *)sub_4D4B58((uint64_t)v82 - 160);
        while (v82 != v81);
        uint64_t v83 = v205[0];
      }
      v205[1] = v81;
      operator delete(v83);
    }
  }
  if (*(unsigned char *)(a1 + 7910))
  {
    sub_86DC34(a1, (uint64_t)&v204);
    unint64_t v84 = a4[1];
    if (v84 >= a4[2])
    {
      uint64_t v94 = sub_757E08(a4, (uint64_t)&v204);
      uint64_t v95 = __p;
      a4[1] = v94;
      if (v95)
      {
        size_t v233 = v95;
        operator delete(v95);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v84 = v204;
      *(void *)(v84 + 16) = 0;
      *(void *)(v84 + 24) = 0;
      *(void *)(v84 + 8) = 0;
      *(_OWORD *)(v84 + 8) = *(_OWORD *)v205;
      *(void *)(v84 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v85 = v209;
      long long v86 = v207;
      *(_OWORD *)(v84 + 48) = v208;
      *(_OWORD *)(v84 + 64) = v85;
      *(_OWORD *)(v84 + 32) = v86;
      uint64_t v87 = v212;
      long long v88 = v211;
      *(_OWORD *)(v84 + 80) = v210;
      *(_OWORD *)(v84 + 96) = v88;
      *(void *)(v84 + 112) = v87;
      *(void *)(v84 + 120) = 0;
      *(void *)(v84 + 128) = 0;
      *(void *)(v84 + 136) = 0;
      *(_OWORD *)(v84 + 120) = v213;
      *(void *)(v84 + 136) = v214;
      *(void *)(v84 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v84 + 152) = 0;
      *(void *)(v84 + 160) = 0;
      *(_OWORD *)(v84 + 144) = v215;
      *(void *)(v84 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v84 + 168) = v217;
      *(_DWORD *)(v84 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v84 + 184) = v218;
      }
      *(_OWORD *)(v84 + 200) = v220;
      long long v89 = v221;
      uint64_t v90 = v223;
      *(_OWORD *)(v84 + 232) = v222;
      *(_OWORD *)(v84 + 216) = v89;
      *(void *)(v84 + 248) = v90;
      *(void *)(v84 + 256) = 0;
      *(void *)(v84 + 264) = 0;
      *(void *)(v84 + 272) = 0;
      *(_OWORD *)(v84 + 256) = v224;
      *(void *)(v84 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v84 + 280) = v226;
      *(void *)(v84 + 288) = 0;
      *(void *)(v84 + 296) = 0;
      *(void *)(v84 + 304) = 0;
      *(_OWORD *)(v84 + 288) = v227;
      *(void *)(v84 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v91 = *(_OWORD *)v229;
      *(_OWORD *)(v84 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v84 + 312) = v91;
      long long v92 = v230;
      *(_DWORD *)(v84 + 356) = v231;
      *(_OWORD *)(v84 + 340) = v92;
      *(void *)(v84 + 360) = 0;
      *(void *)(v84 + 368) = 0;
      *(void *)(v84 + 376) = 0;
      *(void *)(v84 + 360) = __p;
      *(void *)(v84 + 368) = v233;
      *(void *)(v84 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v93 = v235;
      *(_DWORD *)(v84 + 400) = v236;
      *(_OWORD *)(v84 + 384) = v93;
      a4[1] = v84 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v96 = (void **)v224;
    if ((void)v224)
    {
      uint64_t v97 = (void **)*((void *)&v224 + 1);
      char v98 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          uint64_t v97 = sub_4F31D0(v97 - 13);
        while (v97 != v96);
        char v98 = (void *)v224;
      }
      *((void *)&v224 + 1) = v96;
      operator delete(v98);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    char v99 = v205[0];
    if (v205[0])
    {
      long long v100 = v205[1];
      uint64_t v101 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          long long v100 = (void *)sub_4D4B58((uint64_t)v100 - 160);
        while (v100 != v99);
        uint64_t v101 = v205[0];
      }
      v205[1] = v99;
      operator delete(v101);
    }
  }
  if (*(unsigned char *)(a1 + 7911))
  {
    sub_86DA08(a1, (uint64_t)&v204);
    unint64_t v102 = a4[1];
    if (v102 >= a4[2])
    {
      uint64_t v112 = sub_757E08(a4, (uint64_t)&v204);
      uint64_t v113 = __p;
      a4[1] = v112;
      if (v113)
      {
        size_t v233 = v113;
        operator delete(v113);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v102 = v204;
      *(void *)(v102 + 16) = 0;
      *(void *)(v102 + 24) = 0;
      *(void *)(v102 + 8) = 0;
      *(_OWORD *)(v102 + 8) = *(_OWORD *)v205;
      *(void *)(v102 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v103 = v209;
      long long v104 = v207;
      *(_OWORD *)(v102 + 48) = v208;
      *(_OWORD *)(v102 + 64) = v103;
      *(_OWORD *)(v102 + 32) = v104;
      uint64_t v105 = v212;
      long long v106 = v211;
      *(_OWORD *)(v102 + 80) = v210;
      *(_OWORD *)(v102 + 96) = v106;
      *(void *)(v102 + 112) = v105;
      *(void *)(v102 + 120) = 0;
      *(void *)(v102 + 128) = 0;
      *(void *)(v102 + 136) = 0;
      *(_OWORD *)(v102 + 120) = v213;
      *(void *)(v102 + 136) = v214;
      *(void *)(v102 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v102 + 152) = 0;
      *(void *)(v102 + 160) = 0;
      *(_OWORD *)(v102 + 144) = v215;
      *(void *)(v102 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v102 + 168) = v217;
      *(_DWORD *)(v102 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v102 + 184) = v218;
      }
      *(_OWORD *)(v102 + 200) = v220;
      long long v107 = v221;
      uint64_t v108 = v223;
      *(_OWORD *)(v102 + 232) = v222;
      *(_OWORD *)(v102 + 216) = v107;
      *(void *)(v102 + 248) = v108;
      *(void *)(v102 + 256) = 0;
      *(void *)(v102 + 264) = 0;
      *(void *)(v102 + 272) = 0;
      *(_OWORD *)(v102 + 256) = v224;
      *(void *)(v102 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v102 + 280) = v226;
      *(void *)(v102 + 288) = 0;
      *(void *)(v102 + 296) = 0;
      *(void *)(v102 + 304) = 0;
      *(_OWORD *)(v102 + 288) = v227;
      *(void *)(v102 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v109 = *(_OWORD *)v229;
      *(_OWORD *)(v102 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v102 + 312) = v109;
      long long v110 = v230;
      *(_DWORD *)(v102 + 356) = v231;
      *(_OWORD *)(v102 + 340) = v110;
      *(void *)(v102 + 360) = 0;
      *(void *)(v102 + 368) = 0;
      *(void *)(v102 + 376) = 0;
      *(void *)(v102 + 360) = __p;
      *(void *)(v102 + 368) = v233;
      *(void *)(v102 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v111 = v235;
      *(_DWORD *)(v102 + 400) = v236;
      *(_OWORD *)(v102 + 384) = v111;
      a4[1] = v102 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v114 = (void **)v224;
    if ((void)v224)
    {
      long long v115 = (void **)*((void *)&v224 + 1);
      int v116 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          long long v115 = sub_4F31D0(v115 - 13);
        while (v115 != v114);
        int v116 = (void *)v224;
      }
      *((void *)&v224 + 1) = v114;
      operator delete(v116);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    uint64_t v117 = v205[0];
    if (v205[0])
    {
      unint64_t v118 = v205[1];
      long long v119 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          unint64_t v118 = (void *)sub_4D4B58((uint64_t)v118 - 160);
        while (v118 != v117);
        long long v119 = v205[0];
      }
      v205[1] = v117;
      operator delete(v119);
    }
  }
  if (*(unsigned char *)(a1 + 7913))
  {
    sub_86E704(a1, (uint64_t)&v204);
    unint64_t v120 = a4[1];
    if (v120 >= a4[2])
    {
      uint64_t v130 = sub_757E08(a4, (uint64_t)&v204);
      uint64_t v131 = __p;
      a4[1] = v130;
      if (v131)
      {
        size_t v233 = v131;
        operator delete(v131);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v120 = v204;
      *(void *)(v120 + 16) = 0;
      *(void *)(v120 + 24) = 0;
      *(void *)(v120 + 8) = 0;
      *(_OWORD *)(v120 + 8) = *(_OWORD *)v205;
      *(void *)(v120 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v121 = v209;
      long long v122 = v207;
      *(_OWORD *)(v120 + 48) = v208;
      *(_OWORD *)(v120 + 64) = v121;
      *(_OWORD *)(v120 + 32) = v122;
      uint64_t v123 = v212;
      long long v124 = v211;
      *(_OWORD *)(v120 + 80) = v210;
      *(_OWORD *)(v120 + 96) = v124;
      *(void *)(v120 + 112) = v123;
      *(void *)(v120 + 120) = 0;
      *(void *)(v120 + 128) = 0;
      *(void *)(v120 + 136) = 0;
      *(_OWORD *)(v120 + 120) = v213;
      *(void *)(v120 + 136) = v214;
      *(void *)(v120 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v120 + 152) = 0;
      *(void *)(v120 + 160) = 0;
      *(_OWORD *)(v120 + 144) = v215;
      *(void *)(v120 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v120 + 168) = v217;
      *(_DWORD *)(v120 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v120 + 184) = v218;
      }
      *(_OWORD *)(v120 + 200) = v220;
      long long v125 = v221;
      uint64_t v126 = v223;
      *(_OWORD *)(v120 + 232) = v222;
      *(_OWORD *)(v120 + 216) = v125;
      *(void *)(v120 + 248) = v126;
      *(void *)(v120 + 256) = 0;
      *(void *)(v120 + 264) = 0;
      *(void *)(v120 + 272) = 0;
      *(_OWORD *)(v120 + 256) = v224;
      *(void *)(v120 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v120 + 280) = v226;
      *(void *)(v120 + 288) = 0;
      *(void *)(v120 + 296) = 0;
      *(void *)(v120 + 304) = 0;
      *(_OWORD *)(v120 + 288) = v227;
      *(void *)(v120 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v127 = *(_OWORD *)v229;
      *(_OWORD *)(v120 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v120 + 312) = v127;
      long long v128 = v230;
      *(_DWORD *)(v120 + 356) = v231;
      *(_OWORD *)(v120 + 340) = v128;
      *(void *)(v120 + 360) = 0;
      *(void *)(v120 + 368) = 0;
      *(void *)(v120 + 376) = 0;
      *(void *)(v120 + 360) = __p;
      *(void *)(v120 + 368) = v233;
      *(void *)(v120 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v129 = v235;
      *(_DWORD *)(v120 + 400) = v236;
      *(_OWORD *)(v120 + 384) = v129;
      a4[1] = v120 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v132 = (void **)v224;
    if ((void)v224)
    {
      uint64_t v133 = (void **)*((void *)&v224 + 1);
      unint64_t v134 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          uint64_t v133 = sub_4F31D0(v133 - 13);
        while (v133 != v132);
        unint64_t v134 = (void *)v224;
      }
      *((void *)&v224 + 1) = v132;
      operator delete(v134);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    uint64_t v135 = v205[0];
    if (v205[0])
    {
      char v136 = v205[1];
      unsigned long long v137 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          char v136 = (void *)sub_4D4B58((uint64_t)v136 - 160);
        while (v136 != v135);
        unsigned long long v137 = v205[0];
      }
      v205[1] = v135;
      operator delete(v137);
    }
  }
  if (*(unsigned char *)(a1 + 7912))
  {
    sub_86E4D0(a1, (uint64_t)&v204);
    unint64_t v138 = a4[1];
    if (v138 >= a4[2])
    {
      uint64_t v148 = sub_757E08(a4, (uint64_t)&v204);
      int v149 = __p;
      a4[1] = v148;
      if (v149)
      {
        size_t v233 = v149;
        operator delete(v149);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v138 = v204;
      *(void *)(v138 + 16) = 0;
      *(void *)(v138 + 24) = 0;
      *(void *)(v138 + 8) = 0;
      *(_OWORD *)(v138 + 8) = *(_OWORD *)v205;
      *(void *)(v138 + 24) = v206;
      v205[0] = 0;
      v205[1] = 0;
      long long v139 = v209;
      long long v140 = v207;
      *(_OWORD *)(v138 + 48) = v208;
      *(_OWORD *)(v138 + 64) = v139;
      *(_OWORD *)(v138 + 32) = v140;
      uint64_t v141 = v212;
      long long v142 = v211;
      *(_OWORD *)(v138 + 80) = v210;
      *(_OWORD *)(v138 + 96) = v142;
      *(void *)(v138 + 112) = v141;
      *(void *)(v138 + 120) = 0;
      *(void *)(v138 + 128) = 0;
      *(void *)(v138 + 136) = 0;
      *(_OWORD *)(v138 + 120) = v213;
      *(void *)(v138 + 136) = v214;
      *(void *)(v138 + 144) = 0;
      uint64_t v206 = 0;
      long long v213 = 0uLL;
      *(void *)(v138 + 152) = 0;
      *(void *)(v138 + 160) = 0;
      *(_OWORD *)(v138 + 144) = v215;
      *(void *)(v138 + 160) = v216;
      uint64_t v216 = 0;
      uint64_t v214 = 0;
      long long v215 = 0uLL;
      *(_OWORD *)(v138 + 168) = v217;
      *(_DWORD *)(v138 + 192) = v219;
      if (v219 <= 1) {
        *(void *)(v138 + 184) = v218;
      }
      *(_OWORD *)(v138 + 200) = v220;
      long long v143 = v221;
      uint64_t v144 = v223;
      *(_OWORD *)(v138 + 232) = v222;
      *(_OWORD *)(v138 + 216) = v143;
      *(void *)(v138 + 248) = v144;
      *(void *)(v138 + 256) = 0;
      *(void *)(v138 + 264) = 0;
      *(void *)(v138 + 272) = 0;
      *(_OWORD *)(v138 + 256) = v224;
      *(void *)(v138 + 272) = v225;
      long long v224 = 0uLL;
      *(unsigned char *)(v138 + 280) = v226;
      *(void *)(v138 + 288) = 0;
      *(void *)(v138 + 296) = 0;
      *(void *)(v138 + 304) = 0;
      *(_OWORD *)(v138 + 288) = v227;
      *(void *)(v138 + 304) = v228;
      uint64_t v225 = 0;
      long long v227 = 0uLL;
      uint64_t v228 = 0;
      long long v145 = *(_OWORD *)v229;
      *(_OWORD *)(v138 + 321) = *(_OWORD *)&v229[9];
      *(_OWORD *)(v138 + 312) = v145;
      long long v146 = v230;
      *(_DWORD *)(v138 + 356) = v231;
      *(_OWORD *)(v138 + 340) = v146;
      *(void *)(v138 + 360) = 0;
      *(void *)(v138 + 368) = 0;
      *(void *)(v138 + 376) = 0;
      *(void *)(v138 + 360) = __p;
      *(void *)(v138 + 368) = v233;
      *(void *)(v138 + 376) = v234;
      long long __p = 0;
      size_t v233 = 0;
      uint64_t v234 = 0;
      long long v147 = v235;
      *(_DWORD *)(v138 + 400) = v236;
      *(_OWORD *)(v138 + 384) = v147;
      a4[1] = v138 + 408;
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    BOOL v150 = (void **)v224;
    if ((void)v224)
    {
      uint64_t v151 = (void **)*((void *)&v224 + 1);
      uint64_t v152 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          uint64_t v151 = sub_4F31D0(v151 - 13);
        while (v151 != v150);
        uint64_t v152 = (void *)v224;
      }
      *((void *)&v224 + 1) = v150;
      operator delete(v152);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    long long v153 = v205[0];
    if (v205[0])
    {
      char v154 = v205[1];
      uint64_t v155 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          char v154 = (void *)sub_4D4B58((uint64_t)v154 - 160);
        while (v154 != v153);
LABEL_217:
        uint64_t v155 = v205[0];
        goto LABEL_218;
      }
      goto LABEL_218;
    }
  }
  else if (*(unsigned char *)(a1 + 7906))
  {
    if (*((unsigned char *)a3 + 8) && !*(unsigned char *)(a1 + 7907)) {
      sub_86EE8C(a1, a2, *a3, (uint64_t)&v204);
    }
    else {
      sub_86EC98(a1, (uint64_t)&v204);
    }
    unint64_t v156 = a4[1];
    if (v156 >= a4[2])
    {
      uint64_t v157 = sub_75796C(a4, (uint64_t)&v204);
    }
    else
    {
      sub_757B28((uint64_t)(a4 + 2), a4[1], (uint64_t)&v204);
      uint64_t v157 = v156 + 408;
      a4[1] = v156 + 408;
    }
    a4[1] = v157;
    if (__p)
    {
      size_t v233 = __p;
      operator delete(__p);
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v158 = (void **)v224;
    if ((void)v224)
    {
      char v159 = (void **)*((void *)&v224 + 1);
      int v160 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          char v159 = sub_4F31D0(v159 - 13);
        while (v159 != v158);
        int v160 = (void *)v224;
      }
      *((void *)&v224 + 1) = v158;
      operator delete(v160);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    long long v153 = v205[0];
    if (v205[0])
    {
      BOOL v161 = v205[1];
      uint64_t v155 = v205[0];
      if (v205[1] != v205[0])
      {
        do
          BOOL v161 = (void *)sub_4D4B58((uint64_t)v161 - 160);
        while (v161 != v153);
        goto LABEL_217;
      }
LABEL_218:
      v205[1] = v153;
      operator delete(v155);
    }
  }
  if (*(unsigned char *)(a1 + 7907))
  {
    if (*((unsigned char *)a3 + 8)) {
      sub_86F214(a1, a2, *a3, (uint64_t)&v204);
    }
    else {
      sub_86EFF8(a1, (uint64_t)&v204);
    }
    unint64_t v162 = a4[1];
    if (v162 >= a4[2])
    {
      uint64_t v163 = sub_75796C(a4, (uint64_t)&v204);
    }
    else
    {
      sub_757B28((uint64_t)(a4 + 2), a4[1], (uint64_t)&v204);
      uint64_t v163 = v162 + 408;
      a4[1] = v162 + 408;
    }
    a4[1] = v163;
    if (__p)
    {
      size_t v233 = __p;
      operator delete(__p);
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    long long v164 = (void **)v224;
    if ((void)v224)
    {
      long long v165 = (void **)*((void *)&v224 + 1);
      char v166 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          long long v165 = sub_4F31D0(v165 - 13);
        while (v165 != v164);
        char v166 = (void *)v224;
      }
      *((void *)&v224 + 1) = v164;
      operator delete(v166);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    long long v167 = v205[0];
    if (v205[0])
    {
      uint64_t v168 = v205[1];
      BOOL v169 = v205[0];
      if (v205[1] == v205[0])
      {
LABEL_246:
        v205[1] = v167;
        operator delete(v169);
        goto LABEL_247;
      }
      do
        uint64_t v168 = (void *)sub_4D4B58((uint64_t)v168 - 160);
      while (v168 != v167);
LABEL_245:
      BOOL v169 = v205[0];
      goto LABEL_246;
    }
  }
  else if (!*(unsigned char *)(a1 + 7906))
  {
    if (*((unsigned char *)a3 + 8)) {
      (*(void (**)(void **__return_ptr, uint64_t, uint64_t, unint64_t))(*(void *)a1 + 80))(&v204, a1, a2, *a3);
    }
    else {
      (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 72))(&v204, a1);
    }
    unint64_t v196 = a4[1];
    if (v196 >= a4[2])
    {
      uint64_t v197 = sub_75796C(a4, (uint64_t)&v204);
    }
    else
    {
      sub_757B28((uint64_t)(a4 + 2), a4[1], (uint64_t)&v204);
      uint64_t v197 = v196 + 408;
      a4[1] = v196 + 408;
    }
    a4[1] = v197;
    if (__p)
    {
      size_t v233 = __p;
      operator delete(__p);
    }
    if ((void)v227)
    {
      *((void *)&v227 + 1) = v227;
      operator delete((void *)v227);
    }
    uint64_t v198 = (void **)v224;
    if ((void)v224)
    {
      unint64_t v199 = (void **)*((void *)&v224 + 1);
      uint64_t v200 = (void *)v224;
      if (*((void *)&v224 + 1) != (void)v224)
      {
        do
          unint64_t v199 = sub_4F31D0(v199 - 13);
        while (v199 != v198);
        uint64_t v200 = (void *)v224;
      }
      *((void *)&v224 + 1) = v198;
      operator delete(v200);
    }
    if ((void)v215)
    {
      *((void *)&v215 + 1) = v215;
      operator delete((void *)v215);
    }
    if ((void)v213)
    {
      *((void *)&v213 + 1) = v213;
      operator delete((void *)v213);
    }
    long long v167 = v205[0];
    if (v205[0])
    {
      uint64_t v201 = v205[1];
      BOOL v169 = v205[0];
      if (v205[1] == v205[0]) {
        goto LABEL_246;
      }
      do
        uint64_t v201 = (void *)sub_4D4B58((uint64_t)v201 - 160);
      while (v201 != v167);
      goto LABEL_245;
    }
  }
LABEL_247:
  uint64_t v170 = (_DWORD *)*a4;
  uint64_t v171 = (_DWORD *)a4[1];
  while (v170 != v171)
  {
    if (!sub_638AF0(v170))
    {
      int v172 = *(_DWORD *)(a1 + 7916);
      *(_DWORD *)(a1 + 7916) = v172 + 1;
      sub_BB6C(v170, v172);
    }
    v170 += 102;
  }
  sub_86F3AC(a1, (int **)a4);
  if (*(unsigned char *)(a1 + 7802))
  {
    sub_86E904((void *)a1, (uint64_t *)&v204);
    uint64_t v173 = v204;
    char v174 = v205[0];
    while (v173 != v174)
    {
      if (!sub_638AF0(v173))
      {
        int v175 = *(_DWORD *)(a1 + 7916);
        *(_DWORD *)(a1 + 7916) = v175 + 1;
        sub_BB6C(v173, v175);
      }
      v173 += 102;
    }
    sub_86F3AC(a1, (int **)&v204);
    sub_878048(a4, (void *)a4[1], (uint64_t)v204, (uint64_t)v205[0], 0xFAFAFAFAFAFAFAFBLL * (((char *)v205[0] - (char *)v204) >> 3));
    sub_86F3AC(a1, (int **)a4);
    uint64_t v176 = v204;
    if (v204)
    {
      uint64_t v177 = v205[0];
      uint64_t v178 = v204;
      if (v205[0] != v204)
      {
        do
        {
          uint64_t v179 = (void *)*(v177 - 6);
          if (v179)
          {
            *(v177 - 5) = v179;
            operator delete(v179);
          }
          v177 -= 51;
          sub_4F32CC(v177);
        }
        while (v177 != v176);
        uint64_t v178 = v204;
      }
      v205[0] = v176;
      operator delete(v178);
    }
  }
  sub_86F538(a1, (uint64_t *)&v204);
  long long v180 = (char *)v204;
  BOOL v181 = (char *)v205[0];
  if (v204 == v205[0])
  {
    uint64_t v182 = v204;
  }
  else
  {
    do
    {
      if (!sub_638AF0(v180))
      {
        int v183 = *(_DWORD *)(a1 + 7916);
        *(_DWORD *)(a1 + 7916) = v183 + 1;
        sub_BB6C(v180, v183);
      }
      v180 += 408;
    }
    while (v180 != v181);
    uint64_t v182 = v204;
    long long v180 = (char *)v205[0];
  }
  sub_878048(a4, (void *)a4[1], (uint64_t)v182, (uint64_t)v180, 0xFAFAFAFAFAFAFAFBLL * ((v180 - v182) >> 3));
  if (v204 != v205[0]) {
    sub_86F3AC(a1, (int **)a4);
  }
  if (**(void **)(a1 + 7976) != *(void *)(*(void *)(a1 + 7976) + 8))
  {
    sub_870C7C((void *)a1, (uint64_t *)&v202);
    uint64_t v184 = (char *)v202;
    uint64_t v185 = v203;
    if (v202 == v203)
    {
      long long v186 = v202;
    }
    else
    {
      do
      {
        if (!sub_638AF0(v184))
        {
          int v187 = *(_DWORD *)(a1 + 7916);
          *(_DWORD *)(a1 + 7916) = v187 + 1;
          sub_BB6C(v184, v187);
        }
        v184 += 408;
      }
      while (v184 != v185);
      long long v186 = v202;
      uint64_t v184 = v203;
    }
    sub_878048(a4, (void *)a4[1], (uint64_t)v186, (uint64_t)v184, 0xFAFAFAFAFAFAFAFBLL * ((v184 - v186) >> 3));
    long long v188 = (char *)v202;
    if (v202)
    {
      uint64_t v189 = v203;
      uint64_t v190 = v202;
      if (v203 != v202)
      {
        do
        {
          int v191 = (void *)*((void *)v189 - 6);
          if (v191)
          {
            *((void *)v189 - 5) = v191;
            operator delete(v191);
          }
          v189 -= 408;
          sub_4F32CC(v189);
        }
        while (v189 != v188);
        uint64_t v190 = v202;
      }
      unint64_t v203 = v188;
      operator delete(v190);
    }
  }
  int v192 = v204;
  if (v204)
  {
    char v193 = v205[0];
    uint64_t v194 = v204;
    if (v205[0] != v204)
    {
      do
      {
        uint64_t v195 = (void *)*(v193 - 6);
        if (v195)
        {
          *(v193 - 5) = v195;
          operator delete(v195);
        }
        v193 -= 51;
        sub_4F32CC(v193);
      }
      while (v193 != v192);
      uint64_t v194 = v204;
    }
    v205[0] = v192;
    operator delete(v194);
  }
}

void sub_86AD28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_639B78((uint64_t *)va);
  sub_591DFC(v5);
  _Unwind_Resume(a1);
}

void sub_86ADB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_591DFC((uint64_t *)va);
  sub_591DFC((uint64_t *)va1);
  sub_591DFC(v2);
  _Unwind_Resume(a1);
}

void sub_86AF00(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

void sub_86AF14(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v8 = a1 + 7904;
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  if (a1[7904])
  {
    sub_86D4F0((uint64_t)a1, (uint64_t)&v53);
    unint64_t v9 = a4[1];
    if (v9 >= a4[2])
    {
      uint64_t v19 = sub_757E08(a4, (uint64_t)&v53);
      uint64_t v20 = __p;
      a4[1] = v19;
      if (v20)
      {
        uint64_t v82 = v20;
        operator delete(v20);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v9 = v53;
      *(void *)(v9 + 16) = 0;
      *(void *)(v9 + 24) = 0;
      *(void *)(v9 + 8) = 0;
      *(_OWORD *)(v9 + 8) = *(_OWORD *)v54;
      *(void *)(v9 + 24) = v55;
      v54[0] = 0;
      v54[1] = 0;
      long long v10 = v58;
      long long v11 = v56;
      *(_OWORD *)(v9 + 48) = v57;
      *(_OWORD *)(v9 + 64) = v10;
      *(_OWORD *)(v9 + 32) = v11;
      uint64_t v12 = v61;
      long long v13 = v60;
      *(_OWORD *)(v9 + 80) = v59;
      *(_OWORD *)(v9 + 96) = v13;
      *(void *)(v9 + 112) = v12;
      *(void *)(v9 + 120) = 0;
      *(void *)(v9 + 128) = 0;
      *(void *)(v9 + 136) = 0;
      *(_OWORD *)(v9 + 120) = *(_OWORD *)v62;
      *(void *)(v9 + 136) = v63;
      *(void *)(v9 + 144) = 0;
      uint64_t v55 = 0;
      v62[0] = 0;
      v62[1] = 0;
      *(void *)(v9 + 152) = 0;
      *(void *)(v9 + 160) = 0;
      *(_OWORD *)(v9 + 144) = *(_OWORD *)v64;
      *(void *)(v9 + 160) = v65;
      v64[1] = 0;
      uint64_t v65 = 0;
      uint64_t v63 = 0;
      v64[0] = 0;
      *(_OWORD *)(v9 + 168) = v66;
      *(_DWORD *)(v9 + 192) = v68;
      if (v68 <= 1) {
        *(void *)(v9 + 184) = v67;
      }
      *(_OWORD *)(v9 + 200) = v69;
      long long v14 = v70;
      uint64_t v15 = v72;
      *(_OWORD *)(v9 + 232) = v71;
      *(_OWORD *)(v9 + 216) = v14;
      *(void *)(v9 + 248) = v15;
      *(void *)(v9 + 256) = 0;
      *(void *)(v9 + 264) = 0;
      *(void *)(v9 + 272) = 0;
      *(_OWORD *)(v9 + 256) = *(_OWORD *)v73;
      *(void *)(v9 + 272) = v74;
      v73[0] = 0;
      v73[1] = 0;
      *(unsigned char *)(v9 + 280) = v75;
      *(void *)(v9 + 288) = 0;
      *(void *)(v9 + 296) = 0;
      *(void *)(v9 + 304) = 0;
      *(_OWORD *)(v9 + 288) = *(_OWORD *)v76;
      *(void *)(v9 + 304) = v77;
      uint64_t v74 = 0;
      v76[0] = 0;
      v76[1] = 0;
      uint64_t v77 = 0;
      long long v16 = *(_OWORD *)v78;
      *(_OWORD *)(v9 + 321) = *(_OWORD *)&v78[9];
      *(_OWORD *)(v9 + 312) = v16;
      long long v17 = v79;
      *(_DWORD *)(v9 + 356) = v80;
      *(_OWORD *)(v9 + 340) = v17;
      *(void *)(v9 + 360) = 0;
      *(void *)(v9 + 368) = 0;
      *(void *)(v9 + 376) = 0;
      *(void *)(v9 + 360) = __p;
      *(void *)(v9 + 368) = v82;
      *(void *)(v9 + 376) = v83;
      long long __p = 0;
      uint64_t v82 = 0;
      uint64_t v83 = 0;
      long long v18 = v84;
      *(_DWORD *)(v9 + 400) = v85;
      *(_OWORD *)(v9 + 384) = v18;
      a4[1] = v9 + 408;
    }
    if (v76[0])
    {
      v76[1] = v76[0];
      operator delete(v76[0]);
    }
    char v21 = (void **)v73[0];
    if (v73[0])
    {
      uint64_t v22 = (void **)v73[1];
      unint64_t v23 = v73[0];
      if (v73[1] != v73[0])
      {
        do
          uint64_t v22 = sub_4F31D0(v22 - 13);
        while (v22 != v21);
        unint64_t v23 = v73[0];
      }
      v73[1] = v21;
      operator delete(v23);
    }
    if (v64[0])
    {
      v64[1] = v64[0];
      operator delete(v64[0]);
    }
    if (v62[0])
    {
      v62[1] = v62[0];
      operator delete(v62[0]);
    }
    char v24 = v54[0];
    if (v54[0])
    {
      uint64_t v25 = v54[1];
      uint64_t v26 = v54[0];
      if (v54[1] != v54[0])
      {
        do
          uint64_t v25 = (void *)sub_4D4B58((uint64_t)v25 - 160);
        while (v25 != v24);
        uint64_t v26 = v54[0];
      }
      v54[1] = v24;
      operator delete(v26);
    }
  }
  if (v8[6])
  {
    sub_86DC34((uint64_t)a1, (uint64_t)&v53);
    unint64_t v27 = a4[1];
    if (v27 >= a4[2])
    {
      uint64_t v28 = sub_75796C(a4, (uint64_t)&v53);
    }
    else
    {
      sub_757B28((uint64_t)(a4 + 2), a4[1], (uint64_t)&v53);
      uint64_t v28 = v27 + 408;
      a4[1] = v27 + 408;
    }
    a4[1] = v28;
    if (__p)
    {
      uint64_t v82 = __p;
      operator delete(__p);
    }
    if (v76[0])
    {
      v76[1] = v76[0];
      operator delete(v76[0]);
    }
    char v29 = (void **)v73[0];
    if (v73[0])
    {
      unint64_t v30 = (void **)v73[1];
      long long v31 = v73[0];
      if (v73[1] != v73[0])
      {
        do
          unint64_t v30 = sub_4F31D0(v30 - 13);
        while (v30 != v29);
        long long v31 = v73[0];
      }
      v73[1] = v29;
      operator delete(v31);
    }
    if (v64[0])
    {
      v64[1] = v64[0];
      operator delete(v64[0]);
    }
    if (v62[0])
    {
      v62[1] = v62[0];
      operator delete(v62[0]);
    }
    long long v32 = v54[0];
    if (v54[0])
    {
      uint64_t v33 = v54[1];
      long long v34 = v54[0];
      if (v54[1] != v54[0])
      {
        do
          uint64_t v33 = (void *)sub_4D4B58((uint64_t)v33 - 160);
        while (v33 != v32);
        long long v34 = v54[0];
      }
      v54[1] = v32;
      operator delete(v34);
    }
  }
  if (*(unsigned char *)(a3 + 8)) {
    (*(void (**)(uint64_t *__return_ptr, unsigned char *, uint64_t, void))(*(void *)a1 + 80))(&v53, a1, a2, *(void *)a3);
  }
  else {
    (*(void (**)(uint64_t *__return_ptr, unsigned char *))(*(void *)a1 + 72))(&v53, a1);
  }
  unint64_t v35 = a4[1];
  if (v35 >= a4[2])
  {
    uint64_t v45 = sub_757E08(a4, (uint64_t)&v53);
    unsigned __int16 v46 = __p;
    a4[1] = v45;
    if (v46)
    {
      uint64_t v82 = v46;
      operator delete(v46);
    }
  }
  else
  {
    *(_DWORD *)unint64_t v35 = v53;
    *(void *)(v35 + 16) = 0;
    *(void *)(v35 + 24) = 0;
    *(void *)(v35 + 8) = 0;
    *(_OWORD *)(v35 + 8) = *(_OWORD *)v54;
    *(void *)(v35 + 24) = v55;
    v54[0] = 0;
    v54[1] = 0;
    long long v36 = v58;
    long long v37 = v56;
    *(_OWORD *)(v35 + 48) = v57;
    *(_OWORD *)(v35 + 64) = v36;
    *(_OWORD *)(v35 + 32) = v37;
    uint64_t v38 = v61;
    long long v39 = v60;
    *(_OWORD *)(v35 + 80) = v59;
    *(_OWORD *)(v35 + 96) = v39;
    *(void *)(v35 + 112) = v38;
    *(void *)(v35 + 120) = 0;
    *(void *)(v35 + 128) = 0;
    *(void *)(v35 + 136) = 0;
    *(_OWORD *)(v35 + 120) = *(_OWORD *)v62;
    *(void *)(v35 + 136) = v63;
    *(void *)(v35 + 144) = 0;
    uint64_t v55 = 0;
    v62[0] = 0;
    v62[1] = 0;
    *(void *)(v35 + 152) = 0;
    *(void *)(v35 + 160) = 0;
    *(_OWORD *)(v35 + 144) = *(_OWORD *)v64;
    *(void *)(v35 + 160) = v65;
    v64[1] = 0;
    uint64_t v65 = 0;
    uint64_t v63 = 0;
    v64[0] = 0;
    *(_OWORD *)(v35 + 168) = v66;
    *(_DWORD *)(v35 + 192) = v68;
    if (v68 <= 1) {
      *(void *)(v35 + 184) = v67;
    }
    *(_OWORD *)(v35 + 200) = v69;
    long long v40 = v70;
    uint64_t v41 = v72;
    *(_OWORD *)(v35 + 232) = v71;
    *(_OWORD *)(v35 + 216) = v40;
    *(void *)(v35 + 248) = v41;
    *(void *)(v35 + 256) = 0;
    *(void *)(v35 + 264) = 0;
    *(void *)(v35 + 272) = 0;
    *(_OWORD *)(v35 + 256) = *(_OWORD *)v73;
    *(void *)(v35 + 272) = v74;
    v73[0] = 0;
    v73[1] = 0;
    *(unsigned char *)(v35 + 280) = v75;
    *(void *)(v35 + 288) = 0;
    *(void *)(v35 + 296) = 0;
    *(void *)(v35 + 304) = 0;
    *(_OWORD *)(v35 + 288) = *(_OWORD *)v76;
    *(void *)(v35 + 304) = v77;
    uint64_t v74 = 0;
    v76[0] = 0;
    v76[1] = 0;
    uint64_t v77 = 0;
    long long v42 = *(_OWORD *)v78;
    *(_OWORD *)(v35 + 321) = *(_OWORD *)&v78[9];
    *(_OWORD *)(v35 + 312) = v42;
    long long v43 = v79;
    *(_DWORD *)(v35 + 356) = v80;
    *(_OWORD *)(v35 + 340) = v43;
    *(void *)(v35 + 360) = 0;
    *(void *)(v35 + 368) = 0;
    *(void *)(v35 + 376) = 0;
    *(void *)(v35 + 360) = __p;
    *(void *)(v35 + 368) = v82;
    *(void *)(v35 + 376) = v83;
    long long __p = 0;
    uint64_t v82 = 0;
    uint64_t v83 = 0;
    long long v44 = v84;
    *(_DWORD *)(v35 + 400) = v85;
    *(_OWORD *)(v35 + 384) = v44;
    a4[1] = v35 + 408;
  }
  if (v76[0])
  {
    v76[1] = v76[0];
    operator delete(v76[0]);
  }
  uint64_t v47 = (void **)v73[0];
  if (v73[0])
  {
    unint64_t v48 = (void **)v73[1];
    long long v49 = v73[0];
    if (v73[1] != v73[0])
    {
      do
        unint64_t v48 = sub_4F31D0(v48 - 13);
      while (v48 != v47);
      long long v49 = v73[0];
    }
    v73[1] = v47;
    operator delete(v49);
  }
  if (v64[0])
  {
    v64[1] = v64[0];
    operator delete(v64[0]);
  }
  if (v62[0])
  {
    v62[1] = v62[0];
    operator delete(v62[0]);
  }
  long long v50 = v54[0];
  if (v54[0])
  {
    uint64_t v51 = v54[1];
    long long v52 = v54[0];
    if (v54[1] != v54[0])
    {
      do
        uint64_t v51 = (void *)sub_4D4B58((uint64_t)v51 - 160);
      while (v51 != v50);
      long long v52 = v54[0];
    }
    v54[1] = v50;
    operator delete(v52);
  }
}

void sub_86B5C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_639B78(&a9);
  sub_591DFC(v9);
  _Unwind_Resume(a1);
}

void sub_86B5F0(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

void sub_86B604(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

void sub_86B618(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_86B62C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (sub_7E54E8(a1))
  {
    sub_8AF4C0((unsigned __int8 *)(a1 + 2200), (uint64_t)&v19);
    sub_638DFC(a2, &v19);
    uint64_t v4 = v23;
    if (v23 && !atomic_fetch_add(&v23->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    uint64_t v5 = v22;
    if (v22)
    {
      do
      {
        uint64_t v6 = (void *)*v5;
        sub_4F4B48((uint64_t)(v5 + 2));
        operator delete(v5);
        uint64_t v5 = v6;
      }
      while (v6);
    }
    uint64_t v7 = __p;
    long long __p = 0;
    if (v7) {
      operator delete(v7);
    }
    unint64_t v8 = (void **)v19;
    if (v19)
    {
      unint64_t v9 = v20;
      long long v10 = v19;
      if (v20 != v19)
      {
        do
        {
          if (*((char *)v9 - 1) < 0) {
            operator delete(*(v9 - 3));
          }
          v9 -= 3;
        }
        while (v9 != v8);
        long long v10 = v19;
      }
      uint64_t v20 = v8;
      operator delete(v10);
    }
    sub_8AF274(a1 + 2200, (uint64_t)&v19);
    sub_638E00((uint64_t)a2, (uint64_t)&v19);
    uint64_t v12 = v22;
    if (v22)
    {
      do
      {
        long long v13 = (void *)*v12;
        sub_4F4B48((uint64_t)(v12 + 2));
        operator delete(v12);
        uint64_t v12 = v13;
      }
      while (v13);
    }
    long long v14 = __p;
    long long __p = 0;
    if (v14) {
      operator delete(v14);
    }
    uint64_t v15 = (void **)v19;
    if (v19)
    {
      long long v16 = v20;
      long long v17 = v19;
      if (v20 != v19)
      {
        do
        {
          if (*((char *)v16 - 1) < 0) {
            operator delete(*(v16 - 3));
          }
          v16 -= 3;
        }
        while (v16 != v15);
        long long v17 = v19;
      }
      uint64_t v20 = v15;
      operator delete(v17);
    }
    sub_638448((uint64_t)a2, *(void *)(a1 + 2152));
    sub_63841C((uint64_t)a2, 25);
    sub_5F3D48((uint64_t)&v19, (uint64_t)&qword_25CA580);
    char v18 = 1;
    sub_5F6090((uint64_t *)&v19, (uint64_t)&qword_25CA580, (uint64_t *)(a1 + 2152), &v18);
    sub_638E74((uint64_t)a2, (uint64_t)&v19);
    return sub_4D4B58((uint64_t)&v19);
  }
  else
  {
    bzero(a2, 0x330uLL);
    return sub_5A9D64((uint64_t)a2);
  }
}

void sub_86B878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4D4B58((uint64_t)va);
  sub_52F090(v3);
  _Unwind_Resume(a1);
}

void sub_86B898(_Unwind_Exception *a1)
{
  sub_52F090(v1);
  _Unwind_Resume(a1);
}

void sub_86B8AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4D4880((void **)va);
  sub_52F090(v3);
  _Unwind_Resume(a1);
}

void sub_86B8C8(_Unwind_Exception *a1)
{
  sub_52F090(v1);
  _Unwind_Resume(a1);
}

void sub_86B8DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86B8F0(_Unwind_Exception *a1)
{
  sub_52F090(v1);
  _Unwind_Resume(a1);
}

BOOL sub_86B904(uint64_t a1)
{
  BOOL result = sub_7EB7CC(a1);
  if (result)
  {
    uint64_t v3 = 128;
    if (!*(unsigned char *)(a1 + 2176)) {
      uint64_t v3 = 136;
    }
    return *(void *)(a1 + 5192) > *(void *)(*(void *)(a1 + 2160) + v3);
  }
  return result;
}

void sub_86B954(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_86BA24(a1, a2);
  sub_86C05C(a1, &__p);
  sub_873144(a2, a2[1], (uint64_t)__p, (uint64_t)v8, 0xA3784A062B2E43DBLL * ((v8 - (unsigned char *)__p) >> 3));
  uint64_t v4 = __p;
  if (__p)
  {
    uint64_t v5 = v8;
    uint64_t v6 = __p;
    if (v8 != __p)
    {
      do
        uint64_t v5 = sub_576A58((uint64_t)(v5 - 83));
      while (v5 != v4);
      uint64_t v6 = __p;
    }
    unint64_t v8 = v4;
    operator delete(v6);
  }
}

void sub_86B9F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_5923C0((void **)va);
  sub_5923C0(v2);
  _Unwind_Resume(a1);
}

void sub_86BA10(_Unwind_Exception *a1)
{
  sub_5923C0(v1);
  _Unwind_Resume(a1);
}

void sub_86BA24(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 2192);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  if (v3)
  {
    uint64_t v41 = a2;
    if (v3 == 1 && *(uint64_t *)(a1 + 2152) >= 200)
    {
      sub_8B0240(a1 + 2200, (uint64_t)&v45);
      sub_872D0C((uint64_t)v50, (uint64_t)&v45);
      uint64_t v44 = *(void *)(a1 + 2152);
      uint64_t v43 = v44 - 100;
      sub_638408((uint64_t)v50, &v44, &v43);
      int v51 = 1;
      sub_63841C((uint64_t)v50, 81);
      uint64_t v5 = sub_855880(*(void **)(a1 + 7944), 0);
      if (*(char *)(v5 + 23) < 0) {
        sub_4200(&__str, *(void **)v5, *(void *)(v5 + 8));
      }
      else {
        std::string __str = *(std::string *)v5;
      }
      std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type size = __str.__r_.__value_.__l.__size_;
      }
      if (size) {
        std::string::operator=(v52, &__str);
      }
      unint64_t v7 = a2[1];
      if (v7 >= a2[2])
      {
        uint64_t v8 = sub_8784B4(a2, (uint64_t)v50);
      }
      else
      {
        sub_594D4C(a2[1], (uint64_t)v50);
        uint64_t v8 = v7 + 664;
        a2[1] = v7 + 664;
      }
      a2[1] = v8;
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      sub_576A58((uint64_t)v50);
      unint64_t v9 = v49;
      if (v49 && !atomic_fetch_add(&v49->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
      long long v10 = v48;
      if (v48)
      {
        do
        {
          long long v11 = (void *)*v10;
          sub_4F4B48((uint64_t)(v10 + 2));
          operator delete(v10);
          long long v10 = v11;
        }
        while (v11);
      }
      uint64_t v12 = __p;
      long long __p = 0;
      if (v12) {
        operator delete(v12);
      }
      long long v13 = (void **)v45;
      if (v45)
      {
        long long v14 = v46;
        uint64_t v15 = v45;
        if (v46 != v45)
        {
          do
          {
            if (*((char *)v14 - 1) < 0) {
              operator delete(*(v14 - 3));
            }
            v14 -= 3;
          }
          while (v14 != v13);
          uint64_t v15 = v45;
        }
        unsigned __int16 v46 = v13;
        operator delete(v15);
      }
    }
    sub_8AFBF4(a1 + 2200, (uint64_t)&v45);
    uint64_t v44 = *(void *)(a1 + 2152);
    long long v16 = v46;
    if (v46 != v45)
    {
      unint64_t v17 = 0;
      uint64_t v40 = 0x4EC4EC4EC4EC4EC5 * (((char *)v46 - (unsigned char *)v45) >> 3);
      do
      {
        char v18 = v45;
        uint64_t v19 = sub_855880(*(void **)(a1 + 7944), v17);
        sub_872D0C((uint64_t)v50, (uint64_t)v18 + 104 * v17);
        uint64_t v43 = v44 - *(void *)(v19 + 232);
        sub_638408((uint64_t)v50, &v44, &v43);
        int v51 = 1;
        if (*(char *)(v19 + 23) < 0) {
          sub_4200(&__str, *(void **)v19, *(void *)(v19 + 8));
        }
        else {
          std::string __str = *(std::string *)v19;
        }
        std::string::size_type v20 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v20 = __str.__r_.__value_.__l.__size_;
        }
        if (v20) {
          std::string::operator=(v52, &__str);
        }
        char v21 = *(void **)(v19 + 248);
        uint64_t v22 = *(void **)(v19 + 256);
        if (v21 != v22)
        {
          unint64_t v23 = (char *)v54;
          do
          {
            uint64_t v24 = *(void *)(a1 + 2152);
            uint64_t v25 = v24 - *v21;
            uint64_t v26 = v24 - v21[1];
            if ((unint64_t)v23 < v55)
            {
              sub_2F99CC(v23, v25, v26);
              v23 += 16;
            }
            else
            {
              uint64_t v27 = (v23 - v53) >> 4;
              if ((unint64_t)(v27 + 1) >> 60) {
                sub_2E00();
              }
              unint64_t v28 = (uint64_t)(v55 - (void)v53) >> 3;
              if (v28 <= v27 + 1) {
                unint64_t v28 = v27 + 1;
              }
              if (v55 - (unint64_t)v53 >= 0x7FFFFFFFFFFFFFF0) {
                unint64_t v29 = 0xFFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v29 = v28;
              }
              if (v29)
              {
                if (v29 >> 60) {
                  sub_188D718();
                }
                unint64_t v30 = operator new(16 * v29);
              }
              else
              {
                unint64_t v30 = 0;
              }
              long long v31 = sub_2F99CC(&v30[2 * v27], v25, v26);
              long long v32 = (char *)v54;
              uint64_t v33 = v53;
              a2 = v41;
              long long v34 = v31;
              if (v54 != v53)
              {
                do
                {
                  *((_OWORD *)v34 - 1) = *((_OWORD *)v32 - 1);
                  v34 -= 2;
                  v32 -= 16;
                }
                while (v32 != v33);
                long long v32 = v53;
              }
              unint64_t v35 = (char *)&v30[2 * v29];
              uint64_t v53 = (char *)v34;
              unint64_t v23 = (char *)(v31 + 2);
              uint64_t v54 = v31 + 2;
              unint64_t v55 = (unint64_t)v35;
              if (v32) {
                operator delete(v32);
              }
            }
            uint64_t v54 = v23;
            v21 += 2;
          }
          while (v21 != v22);
        }
        unint64_t v36 = a2[1];
        if (v36 >= a2[2])
        {
          uint64_t v37 = sub_8784B4(a2, (uint64_t)v50);
        }
        else
        {
          sub_594D4C(a2[1], (uint64_t)v50);
          uint64_t v37 = v36 + 664;
          a2[1] = v36 + 664;
        }
        a2[1] = v37;
        uint64_t v44 = v43;
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        sub_576A58((uint64_t)v50);
        ++v17;
      }
      while (v17 != v40);
      long long v16 = (void **)v45;
    }
    if (v16)
    {
      uint64_t v38 = v46;
      long long v39 = v16;
      if (v46 != v16)
      {
        do
          uint64_t v38 = sub_4F31D0(v38 - 13);
        while (v38 != v16);
        long long v39 = v45;
      }
      unsigned __int16 v46 = v16;
      operator delete(v39);
    }
  }
}

void sub_86BF34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  *(void *)(v36 + 8) = v35;
  if (a18 < 0) {
    operator delete(__p);
  }
  sub_576A58((uint64_t)&a35);
  sub_4F31D0(&a22);
  sub_5923C0(a12);
  _Unwind_Resume(a1);
}

void sub_86BFA0(_Unwind_Exception *a1)
{
  sub_5923C0(v1);
  _Unwind_Resume(a1);
}

void sub_86BFB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_576A58((uint64_t)&a32);
  sub_5920E0(&a19);
  sub_5923C0(v32);
  _Unwind_Resume(a1);
}

void sub_86C05C(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_8B0070((int *)(a1 + 2200), (uint64_t)&v30);
  sub_595AE0((uint64_t)__p, (uint64_t)&v35);
  sub_872EEC((uint64_t)v38, (uint64_t)&v30, (uint64_t *)__p);
  uint64_t v4 = (char *)v29;
  if (v29)
  {
    do
    {
      uint64_t v19 = *(char **)v4;
      std::string::size_type v20 = (void *)*((void *)v4 + 6);
      if (v20)
      {
        *((void *)v4 + 7) = v20;
        operator delete(v20);
      }
      if (v4[39] < 0) {
        operator delete(*((void **)v4 + 2));
      }
      operator delete(v4);
      uint64_t v4 = v19;
    }
    while (v19);
  }
  uint64_t v5 = __p[0];
  __p[0] = 0;
  if (v5) {
    operator delete(v5);
  }
  __str.__r_.__value_.__r.__words[0] = 0;
  sub_638408((uint64_t)v38, (void *)(a1 + 2152), &__str);
  int v39 = 2;
  if (*(unsigned char *)(a1 + 5184)) {
    sub_63841C((uint64_t)v38, 81);
  }
  if (!*(unsigned char *)(a1 + 5186))
  {
    if (*(unsigned char *)(a1 + 5184))
    {
      uint64_t v6 = **(long long ***)(a1 + 7944);
    }
    else
    {
      unint64_t v23 = *(long long ***)(a1 + 7952);
      uint64_t v6 = *v23;
      if (*v23 != v23[1])
      {
        if (*((char *)v6 + 23) < 0)
        {
          unint64_t v24 = *((void *)v6 + 1);
          if (v24) {
            goto LABEL_48;
          }
        }
        else if (*((unsigned char *)v6 + 23))
        {
LABEL_10:
          long long v7 = *v6;
          __str.__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
          *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v7;
          std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
          char v9 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
          if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::string::size_type size = __str.__r_.__value_.__l.__size_;
          }
          if (!size) {
            goto LABEL_13;
          }
          goto LABEL_51;
        }
      }
      uint64_t v26 = *(long long ***)(a1 + 7960);
      uint64_t v6 = *v26;
      uint64_t v27 = v26[1];
      if (v6 != v27)
      {
        while (*((_DWORD *)v6 + 30) != 1)
        {
          uint64_t v6 = (long long *)((char *)v6 + 152);
          if (v6 == v27) {
            goto LABEL_59;
          }
        }
      }
      if (v6 == v27)
      {
LABEL_59:
        memset(&__str, 0, sizeof(__str));
        char v9 = 0;
        goto LABEL_13;
      }
    }
    if ((*((char *)v6 + 23) & 0x80000000) == 0) {
      goto LABEL_10;
    }
    unint64_t v24 = *((void *)v6 + 1);
LABEL_48:
    sub_4200(&__str, *(void **)v6, v24);
    std::string::size_type v25 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    char v9 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v25 = __str.__r_.__value_.__l.__size_;
    }
    if (!v25)
    {
LABEL_13:
      if ((v9 & 0x80) == 0) {
        goto LABEL_14;
      }
LABEL_52:
      operator delete(__str.__r_.__value_.__l.__data_);
      goto LABEL_14;
    }
LABEL_51:
    std::string::operator=(v40, &__str);
    if ((*((unsigned char *)&__str.__r_.__value_.__s + 23) & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_52;
  }
LABEL_14:
  sub_594D4C((uint64_t)&__str, (uint64_t)v38);
  sub_878648(a2, (uint64_t)&__str, 1uLL);
  sub_576A58((uint64_t)&__str);
  sub_576A58((uint64_t)v38);
  long long v10 = v36;
  if (v36)
  {
    do
    {
      char v21 = *(char **)v10;
      uint64_t v22 = (void *)*((void *)v10 + 6);
      if (v22)
      {
        *((void *)v10 + 7) = v22;
        operator delete(v22);
      }
      if (v10[39] < 0) {
        operator delete(*((void **)v10 + 2));
      }
      operator delete(v10);
      long long v10 = v21;
    }
    while (v21);
  }
  long long v11 = v35;
  uint64_t v35 = 0;
  if (v11) {
    operator delete(v11);
  }
  uint64_t v12 = v34;
  if (v34 && !atomic_fetch_add(&v34->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  long long v13 = v33;
  if (v33)
  {
    do
    {
      long long v14 = (void *)*v13;
      sub_4F4B48((uint64_t)(v13 + 2));
      operator delete(v13);
      long long v13 = v14;
    }
    while (v14);
  }
  uint64_t v15 = v32;
  long long v32 = 0;
  if (v15) {
    operator delete(v15);
  }
  long long v16 = (void **)v30;
  if (v30)
  {
    unint64_t v17 = v31;
    char v18 = v30;
    if (v31 != v30)
    {
      do
      {
        if (*((char *)v17 - 1) < 0) {
          operator delete(*(v17 - 3));
        }
        v17 -= 3;
      }
      while (v17 != v16);
      char v18 = v30;
    }
    long long v31 = v16;
    operator delete(v18);
  }
}

void sub_86C3D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_576A58((uint64_t)&STACK[0x360]);
  sub_855AB0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_86C450(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  sub_592590((uint64_t)va);
  sub_855AB0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_86C46C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_855AB0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_86C484(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 2180))
  {
    sub_8B1144(a1 + 2200, (uint64_t)&v13);
    uint64_t v12 = *(void *)(a1 + 2152) - *(void *)(a1 + 5144);
    sub_7C4620(a2, (uint64_t)&v13, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 417), 3, (void *)(a1 + 5176));
    sub_63841C(a2, 5);
    sub_2F99CC(v11, *(void *)(a1 + 2152), *(void *)(a1 + 5144));
    sub_638424(a2, v11);
    sub_5F3D48((uint64_t)v11, (uint64_t)&unk_25CA598);
    char v10 = 1;
    sub_5F6090((uint64_t *)v11, (uint64_t)&unk_25CA598, &v12, &v10);
    sub_638E74(a2, (uint64_t)v11);
    sub_4D4B58((uint64_t)v11);
    uint64_t v4 = v16;
    if (v16)
    {
      do
      {
        uint64_t v5 = (void *)*v4;
        sub_4F4B48((uint64_t)(v4 + 2));
        operator delete(v4);
        uint64_t v4 = v5;
      }
      while (v5);
    }
    uint64_t v6 = v15;
    uint64_t v15 = 0;
    if (v6) {
      operator delete(v6);
    }
    uint64_t v7 = v13;
    if (v13)
    {
      uint64_t v8 = v14;
      char v9 = v13;
      if (v14 != v13)
      {
        do
        {
          if (*((char *)v8 - 1) < 0) {
            operator delete(*(v8 - 3));
          }
          v8 -= 3;
        }
        while (v8 != v7);
        char v9 = v13;
      }
      long long v14 = v7;
      operator delete(v9);
    }
  }
  else
  {
    bzero((void *)a2, 0x438uLL);
    sub_5A9D64(a2);
    *(void *)(a2 + 816) = -1;
    *(_DWORD *)(a2 + 824) = 0;
    *(void *)(a2 + 832) = 0;
    *(void *)(a2 + 848) = 0;
    *(void *)(a2 + 840) = 0;
    *(_DWORD *)(a2 + 856) = 0;
    *(unsigned char *)(a2 + 864) = 2;
    *(_DWORD *)(a2 + 872) = -1;
    *(_OWORD *)(a2 + 880) = 0u;
    *(_OWORD *)(a2 + 896) = 0u;
    *(_OWORD *)(a2 + 912) = 0u;
    *(_OWORD *)(a2 + 928) = 0u;
    *(_OWORD *)(a2 + 944) = 0u;
    *(_OWORD *)(a2 + 960) = 0u;
    *(void *)(a2 + 976) = 0;
    *(_DWORD *)(a2 + 984) = 1065353216;
    *(unsigned char *)(a2 + 992) = 1;
    *(_DWORD *)(a2 + 1000) = 0;
    *(_OWORD *)(a2 + 1008) = 0u;
    *(_OWORD *)(a2 + 1024) = 0u;
    *(_OWORD *)(a2 + 1040) = 0u;
    *(void *)(a2 + 1056) = 0;
    *(_DWORD *)(a2 + 1064) = 1065353216;
    *(unsigned char *)(a2 + 1072) = 1;
  }
}

void sub_86C678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4D4B58((uint64_t)va);
  sub_52F1E8(v3);
  sub_4D4880((void **)(v4 - 104));
  _Unwind_Resume(a1);
}

void sub_86C6A0(_Unwind_Exception *a1)
{
  sub_52F1E8(v1);
  sub_4D4880((void **)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_86C6D8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = 5144;
  if (!*(unsigned char *)(a1 + 2180)) {
    uint64_t v4 = 2152;
  }
  uint64_t v18 = *(void *)(a1 + v4);
  sub_8B19A0((uint64_t)&v14);
  sub_7C4620(a2, (uint64_t)&v14, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 418), 3, (void *)(a1 + 5176));
  sub_63841C(a2, 4);
  uint64_t v5 = 128;
  if (!*(unsigned char *)(a1 + 2176)) {
    uint64_t v5 = 136;
  }
  v13[0] = *(void *)(*(void *)(a1 + 2160) + v5);
  sub_638408(a2, &v18, v13);
  sub_5F3D48((uint64_t)v13, (uint64_t)&qword_25CA580);
  char v12 = 1;
  sub_5F6090(v13, (uint64_t)&qword_25CA580, &v18, &v12);
  sub_638E74(a2, (uint64_t)v13);
  sub_4D4B58((uint64_t)v13);
  uint64_t v6 = v17;
  if (v17)
  {
    do
    {
      uint64_t v7 = (void *)*v6;
      sub_4F4B48((uint64_t)(v6 + 2));
      operator delete(v6);
      uint64_t v6 = v7;
    }
    while (v7);
  }
  uint64_t v8 = v16;
  long long v16 = 0;
  if (v8) {
    operator delete(v8);
  }
  char v9 = v14;
  if (v14)
  {
    char v10 = v15;
    long long v11 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v10 - 1) < 0) {
          operator delete(*(v10 - 3));
        }
        v10 -= 3;
      }
      while (v10 != v9);
      long long v11 = v14;
    }
    uint64_t v15 = v9;
    operator delete(v11);
  }
}

void sub_86C854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4D4B58((uint64_t)va);
  sub_52F1E8(v3);
  sub_4D4880((void **)(v4 - 112));
  _Unwind_Resume(a1);
}

void sub_86C87C(_Unwind_Exception *a1)
{
  sub_52F1E8(v1);
  sub_4D4880((void **)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_86C8A0(_Unwind_Exception *a1)
{
  sub_4D4880((void **)(v1 - 112));
  _Unwind_Resume(a1);
}

void sub_86C8B4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 2181))
  {
    uint64_t v4 = *(void *)(a1 + 2160);
    uint64_t v5 = (uint64_t *)(v4 + 128);
    uint64_t v6 = (uint64_t *)(v4 + 136);
    if (*(unsigned char *)(a1 + 2176)) {
      uint64_t v7 = v5;
    }
    else {
      uint64_t v7 = v6;
    }
  }
  else
  {
    uint64_t v7 = (uint64_t *)(a1 + 2152);
  }
  uint64_t v37 = *v7;
  sub_8B0FFC(a1 + 2200, (uint64_t)&v32);
  sub_7C47A4(a2, (uint64_t)&v32);
  uint64_t v8 = nullsub_1(&v32);
  sub_638D90(a2, v8);
  sub_7C43E4(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 418));
  char v9 = (unsigned char *)(a1 + 5184);
  if (*(unsigned char *)(a1 + 7908)) {
    uint64_t v10 = *(void *)(a1 + 5344);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v31 = v10;
  sub_638408(a2, &v37, &v31);
  sub_638A00(a2, (void *)(a1 + 5176));
  sub_8B344C(a1 + 2200, (uint64_t)&v27);
  if (sub_65FC8(&v27)) {
    sub_7C47B0(a2, (uint64_t)&v27);
  }
  if (*v9) {
    int v11 = 14;
  }
  else {
    int v11 = 6;
  }
  sub_63841C(a2, v11);
  if (!*v9 && !*(unsigned char *)(a1 + 5185))
  {
    sub_5F3D48((uint64_t)v26, (uint64_t)&qword_25CA580);
    char v25 = 1;
    sub_5F6090(v26, (uint64_t)&qword_25CA580, &v37, &v25);
    sub_638E74(a2, (uint64_t)v26);
    sub_4D4B58((uint64_t)v26);
  }
  char v12 = v30;
  if (v30)
  {
    do
    {
      long long v13 = (void *)*v12;
      sub_4F4B48((uint64_t)(v12 + 2));
      operator delete(v12);
      char v12 = v13;
    }
    while (v13);
  }
  long long v14 = v29;
  unint64_t v29 = 0;
  if (v14) {
    operator delete(v14);
  }
  uint64_t v15 = v27;
  if (v27)
  {
    long long v16 = v28;
    unint64_t v17 = v27;
    if (v28 != v27)
    {
      do
      {
        if (*((char *)v16 - 1) < 0) {
          operator delete(*(v16 - 3));
        }
        v16 -= 3;
      }
      while (v16 != v15);
      unint64_t v17 = v27;
    }
    unint64_t v28 = v15;
    operator delete(v17);
  }
  uint64_t v18 = v36;
  if (v36 && !atomic_fetch_add(&v36->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
  }
  uint64_t v19 = v35;
  if (v35)
  {
    do
    {
      std::string::size_type v20 = (void *)*v19;
      sub_4F4B48((uint64_t)(v19 + 2));
      operator delete(v19);
      uint64_t v19 = v20;
    }
    while (v20);
  }
  char v21 = v34;
  long long v34 = 0;
  if (v21) {
    operator delete(v21);
  }
  uint64_t v22 = v32;
  if (v32)
  {
    unint64_t v23 = v33;
    unint64_t v24 = v32;
    if (v33 != v32)
    {
      do
      {
        if (*((char *)v23 - 1) < 0) {
          operator delete(*(v23 - 3));
        }
        v23 -= 3;
      }
      while (v23 != v22);
      unint64_t v24 = v32;
    }
    uint64_t v33 = v22;
    operator delete(v24);
  }
}

void sub_86CB78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31)
{
  sub_4D4B58((uint64_t)&a11);
  sub_4D4880(&a31);
  sub_52F1E8(v31);
  sub_4F31D0((void **)(v32 - 160));
  _Unwind_Resume(a1);
}

void sub_86CBEC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 2180))
  {
    sub_8B3CE8(a1 + 2200, (uint64_t)&v18);
    sub_639530(a2, (uint64_t)&v18, (void *)(a1 + 5176), 0, 0, 1);
    sub_63841C(a2, 41);
    uint64_t v17 = *(void *)(a1 + 2152) - *(void *)(a1 + 5176);
    sub_638408(a2, &v17, (void *)(a1 + 5192));
    sub_639538(a2, 4);
    uint64_t v4 = v22;
    if (v22 && !atomic_fetch_add(&v22->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    uint64_t v5 = v21;
    if (v21)
    {
      do
      {
        uint64_t v6 = (void *)*v5;
        sub_4F4B48((uint64_t)(v5 + 2));
        operator delete(v5);
        uint64_t v5 = v6;
      }
      while (v6);
    }
    uint64_t v7 = __p;
    long long __p = 0;
    if (v7) {
      operator delete(v7);
    }
    uint64_t v8 = (void **)v18;
    if (v18)
    {
      char v9 = v19;
      uint64_t v10 = v18;
      if (v19 != v18)
      {
        do
        {
          if (*((char *)v9 - 1) < 0) {
            operator delete(*(v9 - 3));
          }
          v9 -= 3;
        }
        while (v9 != v8);
        uint64_t v10 = v18;
      }
      uint64_t v19 = v8;
      operator delete(v10);
    }
  }
  else
  {
    *(void *)(a2 + 400) = 0;
    *(_OWORD *)(a2 + 368) = 0u;
    *(_OWORD *)(a2 + 384) = 0u;
    *(_OWORD *)(a2 + 336) = 0u;
    *(_OWORD *)(a2 + 352) = 0u;
    *(_OWORD *)(a2 + 304) = 0u;
    *(_OWORD *)(a2 + 320) = 0u;
    *(_OWORD *)(a2 + 272) = 0u;
    *(_OWORD *)(a2 + 288) = 0u;
    *(_OWORD *)(a2 + 224) = 0u;
    *(_OWORD *)(a2 + 240) = 0u;
    *(_OWORD *)(a2 + 192) = 0u;
    *(_OWORD *)(a2 + 208) = 0u;
    *(_OWORD *)(a2 + 160) = 0u;
    *(_OWORD *)(a2 + 176) = 0u;
    *(_OWORD *)(a2 + 128) = 0u;
    *(_OWORD *)(a2 + 144) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 112) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_DWORD *)a2 = -1;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 8) = 0;
    *(_DWORD *)(a2 + 32) = 0;
    int64x2_t v11 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
    *(int64x2_t *)(a2 + 40) = v11;
    *(_DWORD *)(a2 + 56) = 0x7FFFFFFF;
    *(int64x2_t *)(a2 + 64) = v11;
    *(_DWORD *)(a2 + 80) = 0x7FFFFFFF;
    *(_DWORD *)(a2 + 88) = 0x7FFFFFFF;
    *(void *)(a2 + 92) = 0x7FFFFFFF7FFFFFFFLL;
    *(void *)(a2 + 112) = 0x8000000080000000;
    *(_OWORD *)(a2 + 120) = 0u;
    *(_OWORD *)(a2 + 136) = 0u;
    *(_OWORD *)(a2 + 152) = 0u;
    *(unsigned char *)(a2 + 168) = 0;
    *(void *)(a2 + 172) = 0x8000000080000000;
    *(_DWORD *)(a2 + 180) = 0x7FFFFFFF;
    *(_DWORD *)(a2 + 192) = -1;
    *(void *)(a2 + 208) = 0x7FFFFFFFFFFFFFFFLL;
    *(_DWORD *)(a2 + 216) = 0x7FFFFFFF;
    *(void *)(a2 + 220) = 0x7FFFFFFF7FFFFFFFLL;
    __asm { FMOV            V1.2D, #-1.0 }
    *(_OWORD *)(a2 + 240) = _Q1;
    *(_OWORD *)(a2 + 256) = 0u;
    *(void *)(a2 + 256) = 0;
    *(void *)(a2 + 264) = 0;
    *(void *)(a2 + 272) = 0;
    *(unsigned char *)(a2 + 280) = 1;
    *(void *)(a2 + 296) = 0;
    *(void *)(a2 + 304) = 0;
    *(void *)(a2 + 288) = 0;
    *(_WORD *)(a2 + 312) = 0;
    *(_DWORD *)(a2 + 316) = -1;
    *(void *)(a2 + 328) = 0x7FFFFFFFFFFFFFFFLL;
    *(_DWORD *)(a2 + 340) = -1;
    *(void *)(a2 + 344) = -1;
    *(_DWORD *)(a2 + 356) = 1;
    *(_DWORD *)(a2 + 384) = 0;
    *(void *)(a2 + 360) = 0;
    *(void *)(a2 + 368) = 0;
    *(void *)(a2 + 376) = 0;
    *(void *)(a2 + 388) = 0x7FFFFFFF7FFFFFFFLL;
    *(_DWORD *)(a2 + 400) = -1;
  }
}

void sub_86CE54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_639B78(v2);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86CE88(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v3 = *(unsigned __int8 *)(a1 + 2181);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  if (!v3) {
    return;
  }
  sub_815F60((uint64_t)&v41);
  sub_639530((uint64_t)v46, (uint64_t)&v41, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C((uint64_t)v46, 42);
  uint64_t v5 = *(void *)(a1 + 2160);
  if (*(unsigned char *)(v5 + 1992))
  {
    uint64_t v6 = sub_62CCC0(v5);
    uint64_t v7 = sub_62BD94(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    if (v6 + v7 <= *(void *)(a1 + 5192))
    {
      uint64_t v9 = v6;
      do
      {
        sub_8506D4(a1, v9, *(void *)(*(void *)(a1 + 2160) + 2000) + v9, (uint64_t)v31);
        if (sub_564868(v31) && v31[0] + v7 <= *(void *)(a1 + 5192)) {
          uint64_t v9 = v31[0];
        }
        uint64_t v29 = v9 + v7;
        uint64_t v30 = v9;
        sub_638408((uint64_t)v46, &v29, &v30);
        sub_69200((uint64_t)v46, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 422));
        sub_639538((uint64_t)v46, 3);
        unint64_t v10 = a2[1];
        if (v10 >= a2[2])
        {
          uint64_t v11 = sub_75796C(a2, (uint64_t)v46);
        }
        else
        {
          __n128 v8 = sub_757B28((uint64_t)(a2 + 2), a2[1], (uint64_t)v46);
          uint64_t v11 = v10 + 408;
          a2[1] = v10 + 408;
        }
        a2[1] = v11;
        uint64_t v12 = v30;
        if (v40 < 0)
        {
          operator delete(__p);
          if ((v38 & 0x80000000) == 0)
          {
LABEL_14:
            if ((v36 & 0x80000000) == 0) {
              goto LABEL_15;
            }
            goto LABEL_20;
          }
        }
        else if ((v38 & 0x80000000) == 0)
        {
          goto LABEL_14;
        }
        operator delete(v37);
        if ((v36 & 0x80000000) == 0)
        {
LABEL_15:
          if ((v34 & 0x80000000) == 0) {
            goto LABEL_16;
          }
          goto LABEL_21;
        }
LABEL_20:
        operator delete(v35);
        if ((v34 & 0x80000000) == 0)
        {
LABEL_16:
          if (v32 < 0) {
            goto LABEL_22;
          }
          goto LABEL_5;
        }
LABEL_21:
        operator delete(v33);
        if (v32 < 0) {
LABEL_22:
        }
          operator delete((void *)v31[1]);
LABEL_5:
        uint64_t v9 = v12 + v6;
      }
      while (v9 + v7 <= *(void *)(a1 + 5192));
    }
  }
  else
  {
    uint64_t v13 = 128;
    if (!*(unsigned char *)(a1 + 2176)) {
      uint64_t v13 = 136;
    }
    v31[0] = *(void *)(v5 + v13);
    sub_638408((uint64_t)v46, (void *)(a1 + 5192), v31);
    unint64_t v14 = a2[1];
    if (v14 >= a2[2])
    {
      a2[1] = sub_75796C(a2, (uint64_t)v46);
      uint64_t v15 = v57;
      if (!v57) {
        goto LABEL_29;
      }
      goto LABEL_28;
    }
    __n128 v8 = sub_757B28((uint64_t)(a2 + 2), a2[1], (uint64_t)v46);
    a2[1] = v14 + 408;
    a2[1] = v14 + 408;
  }
  uint64_t v15 = v57;
  if (v57)
  {
LABEL_28:
    long long v58 = v15;
    operator delete(v15);
  }
LABEL_29:
  if (v55)
  {
    long long v56 = v55;
    operator delete(v55);
  }
  long long v16 = (void **)v53;
  if (v53)
  {
    uint64_t v17 = v54;
    uint64_t v18 = v53;
    if (v54 != v53)
    {
      do
        uint64_t v17 = sub_4F31D0(v17 - 13);
      while (v17 != v16);
      uint64_t v18 = v53;
    }
    uint64_t v54 = v16;
    operator delete(v18);
  }
  if (v51)
  {
    long long v52 = v51;
    operator delete(v51);
  }
  if (v49)
  {
    long long v50 = v49;
    operator delete(v49);
  }
  uint64_t v19 = v47;
  if (v47)
  {
    uint64_t v20 = (uint64_t)v48;
    char v21 = v47;
    if (v48 != v47)
    {
      do
        uint64_t v20 = sub_4D4B58(v20 - 160);
      while ((void *)v20 != v19);
      char v21 = v47;
    }
    unint64_t v48 = v19;
    operator delete(v21);
  }
  uint64_t v22 = v45;
  if (v45 && !atomic_fetch_add(&v45->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *, __n128))v22->__on_zero_shared)(v22, v8);
    std::__shared_weak_count::__release_weak(v22);
  }
  unint64_t v23 = v44;
  if (v44)
  {
    do
    {
      unint64_t v24 = (void *)*v23;
      sub_4F4B48((uint64_t)(v23 + 2));
      operator delete(v23);
      unint64_t v23 = v24;
    }
    while (v24);
  }
  char v25 = v43;
  uint64_t v43 = 0;
  if (v25) {
    operator delete(v25);
  }
  uint64_t v26 = (void **)v41;
  if (v41)
  {
    uint64_t v27 = v42;
    unint64_t v28 = v41;
    if (v42 != v41)
    {
      do
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      while (v27 != v26);
      unint64_t v28 = v41;
    }
    long long v42 = v26;
    operator delete(v28);
  }
}

void sub_86D2A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  v47[1] = v48;
  sub_639B78(&a47);
  sub_4F31D0(&a34);
  sub_591DFC(v47);
  _Unwind_Resume(a1);
}

void sub_86D344(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_8B3EEC((unsigned char *)(a1 + 2200), (uint64_t *)&v13);
  sub_639530(a2, (uint64_t)&v13, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a2, 29);
  v12.n128_u64[0] = sub_8509B0(a1);
  v12.n128_u64[1] = v4;
  sub_638424(a2, &v12);
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 420));
  sub_638448(a2, *(void *)(a1 + 2152));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  uint64_t v5 = v17;
  if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  uint64_t v6 = v16;
  if (v16)
  {
    do
    {
      uint64_t v7 = (void *)*v6;
      sub_4F4B48((uint64_t)(v6 + 2));
      operator delete(v6);
      uint64_t v6 = v7;
    }
    while (v7);
  }
  __n128 v8 = __p;
  long long __p = 0;
  if (v8) {
    operator delete(v8);
  }
  uint64_t v9 = (void **)v13;
  if (v13)
  {
    unint64_t v10 = v14;
    uint64_t v11 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v10 - 1) < 0) {
          operator delete(*(v10 - 3));
        }
        v10 -= 3;
      }
      while (v10 != v9);
      uint64_t v11 = v13;
    }
    unint64_t v14 = v9;
    operator delete(v11);
  }
}

void sub_86D4BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86D4D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86D4F0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 2160);
  int v5 = *(_DWORD *)(v4 + 164);
  int v6 = v5 / 10;
  int v7 = v5 % 10;
  if (v5 < 0) {
    char v8 = -5;
  }
  else {
    char v8 = 5;
  }
  double v9 = *(double *)(v4 + 2008)
     / 3.6
     * (double)(int)(v6 + (((103 * (char)(v8 + v7)) >> 15) & 1) + ((103 * (char)(v8 + v7)) >> 10))
     * 100.0;
  if (v9 >= 0.0)
  {
    double v10 = *(double *)(v4 + 2008)
        / 3.6
        * (double)(int)(v6 + (((103 * (char)(v8 + v7)) >> 15) & 1) + ((103 * (char)(v8 + v7)) >> 10))
        * 100.0;
    if (v9 >= 4.50359963e15) {
      goto LABEL_12;
    }
    uint64_t v11 = (uint64_t)(v9 + v9) + 1;
  }
  else
  {
    double v10 = *(double *)(v4 + 2008)
        / 3.6
        * (double)(int)(v6 + (((103 * (char)(v8 + v7)) >> 15) & 1) + ((103 * (char)(v8 + v7)) >> 10))
        * 100.0;
    if (v9 <= -4.50359963e15) {
      goto LABEL_12;
    }
    uint64_t v11 = (uint64_t)(v9 + v9);
    if (v11 >= 1) {
      --v11;
    }
  }
  double v10 = (double)(v11 >> 1);
LABEL_12:
  if (v10 >= 9.22337204e18)
  {
    uint64_t v13 = 0x7FFFFFFFFFFFFFFELL;
    goto LABEL_23;
  }
  if (v9 >= 0.0)
  {
    if (v9 < 4.50359963e15)
    {
      uint64_t v12 = (uint64_t)(v9 + v9) + 1;
LABEL_21:
      double v9 = (double)(v12 >> 1);
    }
  }
  else if (v9 > -4.50359963e15)
  {
    uint64_t v12 = (uint64_t)(v9 + v9);
    if (v12 >= 1) {
      --v12;
    }
    goto LABEL_21;
  }
  uint64_t v13 = (uint64_t)v9;
LABEL_23:
  if (v13 >= *(void *)(a1 + 5192)) {
    uint64_t v14 = *(void *)(a1 + 5192);
  }
  else {
    uint64_t v14 = v13;
  }
  sub_8B3EEC((unsigned char *)(a1 + 2200), (uint64_t *)&v24);
  sub_639530(a2, (uint64_t)&v24, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a2, 29);
  sub_638430(a2, (void *)(a1 + 5192));
  if (*(void *)(a1 + 5192) <= v14) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = v14;
  }
  uint64_t v23 = v15;
  sub_63843C(a2, &v23);
  sub_638448(a2, *(void *)(a1 + 2152));
  long long v16 = v28;
  if (v28 && !atomic_fetch_add(&v28->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  uint64_t v17 = v27;
  if (v27)
  {
    do
    {
      uint64_t v18 = (void *)*v17;
      sub_4F4B48((uint64_t)(v17 + 2));
      operator delete(v17);
      uint64_t v17 = v18;
    }
    while (v18);
  }
  uint64_t v19 = __p;
  long long __p = 0;
  if (v19) {
    operator delete(v19);
  }
  uint64_t v20 = (void **)v24;
  if (v24)
  {
    char v21 = v25;
    uint64_t v22 = v24;
    if (v25 != v24)
    {
      do
      {
        if (*((char *)v21 - 1) < 0) {
          operator delete(*(v21 - 3));
        }
        v21 -= 3;
      }
      while (v21 != v20);
      uint64_t v22 = v24;
    }
    char v25 = v20;
    operator delete(v22);
  }
}

void sub_86D7A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_639B78(v2);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86D7D8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_8B46E4(a1 + 2200);
  sub_639530(a2, (uint64_t)&v16, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a2, 31);
  uint64_t v4 = sub_62B9C8(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v5 = sub_62BA34(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (*(unsigned char *)(a1 + 7911))
  {
    int v6 = (uint64_t *)(a1 + 7888);
  }
  else if (*(unsigned char *)(a1 + 7912))
  {
    int v6 = (uint64_t *)(a1 + 7896);
  }
  else if (*(unsigned char *)(a1 + 7906))
  {
    int v6 = (uint64_t *)(a1 + 7864);
  }
  else
  {
    int v6 = (uint64_t *)(a1 + 7872);
  }
  if (*(unsigned char *)(a1 + 2176)) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = v5;
  }
  sub_2F99CC(&v21, v7, *v6);
  __n128 v15 = v21;
  sub_638424(a2, &v15);
  sub_638448(a2, *(void *)(a1 + 2152));
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 421));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  char v8 = v20;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  double v9 = v19;
  if (v19)
  {
    do
    {
      double v10 = (void *)*v9;
      sub_4F4B48((uint64_t)(v9 + 2));
      operator delete(v9);
      double v9 = v10;
    }
    while (v10);
  }
  uint64_t v11 = __p;
  long long __p = 0;
  if (v11) {
    operator delete(v11);
  }
  uint64_t v12 = (void **)v16;
  if (v16)
  {
    uint64_t v13 = v17;
    uint64_t v14 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v13 - 1) < 0) {
          operator delete(*(v13 - 3));
        }
        v13 -= 3;
      }
      while (v13 != v12);
      uint64_t v14 = v16;
    }
    uint64_t v17 = v12;
    operator delete(v14);
  }
}

void sub_86D9D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86D9E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86DA08(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (unsigned char *)(a1 + 6488);
  if (*(unsigned char *)(a1 + 7915))
  {
    uint64_t v5 = (unsigned char *)(a1 + 2200);
    if (v4[1418]) {
      sub_8B5D0C(v5, (uint64_t)&v18);
    }
    else {
      sub_8B5070((std::string::size_type)v5, (uint64_t)&v18);
    }
  }
  else
  {
    sub_8B4C1C(a1 + 2200, (uint64_t)&v18);
  }
  sub_639530(a2, (uint64_t)&v18, (void *)(a1 + 5176), 0, 0, 1);
  if (v4[1418]) {
    int v6 = 36;
  }
  else {
    int v6 = 35;
  }
  sub_63841C(a2, v6);
  uint64_t v7 = sub_62C410(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v8 = *(void *)(a1 + 6112);
  if (v8 + v7 >= *(void *)(a1 + 5192)) {
    uint64_t v9 = *(void *)(a1 + 5192);
  }
  else {
    uint64_t v9 = v8 + v7;
  }
  if (*v4 && *(void *)(a1 + 6304) < v9) {
    uint64_t v9 = *(void *)(a1 + 6304);
  }
  sub_2F99CC(&v23, v9, v8);
  __n128 v17 = v23;
  sub_638424(a2, &v17);
  sub_638448(a2, *(void *)(a1 + 2152));
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 428));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  double v10 = v22;
  if (v22 && !atomic_fetch_add(&v22->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  uint64_t v11 = v21;
  if (v21)
  {
    do
    {
      uint64_t v12 = (void *)*v11;
      sub_4F4B48((uint64_t)(v11 + 2));
      operator delete(v11);
      uint64_t v11 = v12;
    }
    while (v12);
  }
  uint64_t v13 = __p;
  long long __p = 0;
  if (v13) {
    operator delete(v13);
  }
  uint64_t v14 = (void **)v18;
  if (v18)
  {
    __n128 v15 = v19;
    long long v16 = v18;
    if (v19 != v18)
    {
      do
      {
        if (*((char *)v15 - 1) < 0) {
          operator delete(*(v15 - 3));
        }
        v15 -= 3;
      }
      while (v15 != v14);
      long long v16 = v18;
    }
    uint64_t v19 = v14;
    operator delete(v16);
  }
}

void sub_86DC00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86DC14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86DC34(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_8B48B4(a1 + 2200, (uint64_t)&v16);
  sub_639530(a2, (uint64_t)&v16, (void *)(a1 + 5176), 0, 0, 1);
  if (*(unsigned char *)(a1 + 7906)) {
    int v4 = 34;
  }
  else {
    int v4 = 33;
  }
  sub_63841C(a2, v4);
  uint64_t v5 = sub_62C62C(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (*(void *)(a1 + 5192) >= v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = *(void *)(a1 + 5192);
  }
  if (*(unsigned char *)(a1 + 6296)) {
    uint64_t v6 = *(void *)(a1 + 6112);
  }
  uint64_t v7 = 7864;
  if (!*(unsigned char *)(a1 + 7906)) {
    uint64_t v7 = 7872;
  }
  sub_2F99CC(&v21, v6, *(void *)(a1 + v7));
  __n128 v15 = v21;
  sub_638424(a2, &v15);
  sub_638448(a2, *(void *)(a1 + 2152));
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 427));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  uint64_t v8 = v20;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  uint64_t v9 = v19;
  if (v19)
  {
    do
    {
      double v10 = (void *)*v9;
      sub_4F4B48((uint64_t)(v9 + 2));
      operator delete(v9);
      uint64_t v9 = v10;
    }
    while (v10);
  }
  uint64_t v11 = __p;
  long long __p = 0;
  if (v11) {
    operator delete(v11);
  }
  uint64_t v12 = (void **)v16;
  if (v16)
  {
    uint64_t v13 = v17;
    uint64_t v14 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v13 - 1) < 0) {
          operator delete(*(v13 - 3));
        }
        v13 -= 3;
      }
      while (v13 != v12);
      uint64_t v14 = v16;
    }
    __n128 v17 = v12;
    operator delete(v14);
  }
}

void sub_86DE08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86DE1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86DE3C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = (unsigned __int8 *)(a1 + 5524);
  int v5 = *(unsigned __int8 *)(a1 + 7906);
  std::string::size_type v6 = a1 + 2200;
  uint64_t v7 = a1 + 5344;
  if (v5) {
    sub_8B7FF8(v6, v7, (uint64_t)&v20);
  }
  else {
    sub_8B8434(v6, v7, (uint64_t)&v20);
  }
  sub_639530(a2, (uint64_t)&v20, (void *)(a1 + 5176), 0, 0, 1);
  if (v4[2382]) {
    int v8 = 40;
  }
  else {
    int v8 = 39;
  }
  sub_63841C(a2, v8);
  uint64_t v9 = sub_62C554(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188), *v4);
  uint64_t v10 = *(void *)(a1 + 5344);
  if (v10 + v9 >= *(void *)(a1 + 5192)) {
    uint64_t v11 = *(void *)(a1 + 5192);
  }
  else {
    uint64_t v11 = v10 + v9;
  }
  if (v4[196] && *(void *)(a1 + 5536) < v11) {
    uint64_t v11 = *(void *)(a1 + 5536);
  }
  sub_2F99CC(&v25, v11, v10);
  __n128 v19 = v25;
  sub_638424(a2, &v19);
  sub_638448(a2, *(void *)(a1 + 2152));
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 429));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  sub_638A0C(a2);
  uint64_t v12 = v24;
  if (v24 && !atomic_fetch_add(&v24->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  uint64_t v13 = v23;
  if (v23)
  {
    do
    {
      uint64_t v14 = (void *)*v13;
      sub_4F4B48((uint64_t)(v13 + 2));
      operator delete(v13);
      uint64_t v13 = v14;
    }
    while (v14);
  }
  __n128 v15 = __p;
  long long __p = 0;
  if (v15) {
    operator delete(v15);
  }
  long long v16 = (void **)v20;
  if (v20)
  {
    __n128 v17 = v21;
    uint64_t v18 = v20;
    if (v21 != v20)
    {
      do
      {
        if (*((char *)v17 - 1) < 0) {
          operator delete(*(v17 - 3));
        }
        v17 -= 3;
      }
      while (v17 != v16);
      uint64_t v18 = v20;
    }
    __n128 v21 = v16;
    operator delete(v18);
  }
}

void sub_86E030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86E044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86E064(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = (unsigned char *)(a1 + 5184);
  sub_8B54D0(a1 + 2200, 1, *(unsigned __int8 *)(a1 + 7909), 0, (uint64_t)&v15);
  sub_639530(a2, (uint64_t)&v15, (void *)(a1 + 5176), 0, 0, 1);
  sub_2F99CC(&v20, *(void *)(a1 + 7872), 0);
  __n128 v14 = v20;
  sub_638424(a2, &v14);
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 424));
  sub_6396C0(a2, 1);
  if (*v4)
  {
    int v5 = 80;
  }
  else if (v4[2725])
  {
    int v5 = 45;
  }
  else
  {
    int v5 = 44;
  }
  sub_63841C(a2, v5);
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  if (v4[2]) {
    sub_639538(a2, 3);
  }
  if (sub_638A2C(a2) == *(void *)(a1 + 5176)) {
    sub_6396D0(a2, 1);
  }
  if (!v4[2725])
  {
    unsigned int v6 = sub_62BFB0(*(unsigned int **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    sub_6393D0(a2, v6, 0);
  }
  uint64_t v7 = v19;
  if (v19 && !atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  int v8 = v18;
  if (v18)
  {
    do
    {
      uint64_t v9 = (void *)*v8;
      sub_4F4B48((uint64_t)(v8 + 2));
      operator delete(v8);
      int v8 = v9;
    }
    while (v9);
  }
  uint64_t v10 = __p;
  long long __p = 0;
  if (v10) {
    operator delete(v10);
  }
  uint64_t v11 = (void **)v15;
  if (v15)
  {
    uint64_t v12 = v16;
    uint64_t v13 = v15;
    if (v16 != v15)
    {
      do
      {
        if (*((char *)v12 - 1) < 0) {
          operator delete(*(v12 - 3));
        }
        v12 -= 3;
      }
      while (v12 != v11);
      uint64_t v13 = v15;
    }
    long long v16 = v11;
    operator delete(v13);
  }
}

void sub_86E27C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86E2BC(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v8 = (unsigned char *)(a1 + 5184);
  sub_8B8F08(a1 + 2200, a2, a3, *(unsigned __int8 *)(a1 + 7909), (uint64_t *)&__p);
  sub_6393C8(a4, (uint64_t *)&__p, 0, 0, 1);
  sub_638A00(a4, (void *)(a1 + 5176));
  sub_2F99CC(&v17, *(void *)(a1 + 7872), 0);
  __n128 v14 = v17;
  sub_638424(a4, &v14);
  sub_69200(a4, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 424));
  sub_6396C0(a4, 1);
  sub_639724(a4);
  if (*v8)
  {
    int v9 = 80;
  }
  else if (v8[2725])
  {
    int v9 = 45;
  }
  else
  {
    int v9 = 44;
  }
  sub_63841C(a4, v9);
  if (sub_855B3C(a1, a4)) {
    sub_6396C8(a4, 1);
  }
  if (!v8[2725])
  {
    if (*(unsigned char *)(a1 + 2179) && v8[2617]) {
      unsigned int v10 = sub_62C088(*(unsigned int **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    }
    else {
      unsigned int v10 = sub_62BFB0(*(unsigned int **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    }
    sub_6393D0(a4, v10, 0);
  }
  if (sub_638A2C(a4) == *(void *)(a1 + 5176)) {
    sub_6396D0(a4, 1);
  }
  sub_638448(a4, *(void *)(a1 + 2152));
  sub_638458(a4, *(void *)(*(void *)(a2 + 1064) + 2400 * a3 + 872));
  uint64_t v11 = (void **)__p;
  if (__p)
  {
    uint64_t v12 = v16;
    uint64_t v13 = __p;
    if (v16 != __p)
    {
      do
        uint64_t v12 = sub_4F31D0(v12 - 13);
      while (v12 != v11);
      uint64_t v13 = __p;
    }
    long long v16 = v11;
    operator delete(v13);
  }
}

void sub_86E490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_5920E0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86E4D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = (unsigned char *)(a1 + 5186);
  uint64_t v5 = sub_856CCC(*(void **)(a1 + 7968), *(void *)(a1 + 6856));
  std::string::size_type v6 = a1 + 2200;
  if (v4[2720]) {
    sub_8B66CC(v6, v5, (uint64_t)&v16);
  }
  else {
    sub_8B6358(v6, v5, (uint64_t)&v16);
  }
  sub_639530(a2, (uint64_t)&v16, (void *)(a1 + 5176), 0, 0, 1);
  sub_2F99CC(&v21, *(void *)(a1 + 7896), *(void *)(a1 + 6688));
  __n128 v15 = v21;
  sub_638424(a2, &v15);
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 424));
  sub_6396C0(a2, 1);
  if (v4[2720]) {
    int v7 = 38;
  }
  else {
    int v7 = 37;
  }
  sub_63841C(a2, v7);
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  if (*v4) {
    sub_639538(a2, 3);
  }
  if (sub_638A2C(a2) == *(void *)(a1 + 5176)) {
    sub_6396D0(a2, 1);
  }
  int v8 = v20;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  int v9 = v19;
  if (v19)
  {
    do
    {
      unsigned int v10 = (void *)*v9;
      sub_4F4B48((uint64_t)(v9 + 2));
      operator delete(v9);
      int v9 = v10;
    }
    while (v10);
  }
  uint64_t v11 = __p;
  long long __p = 0;
  if (v11) {
    operator delete(v11);
  }
  uint64_t v12 = (void **)v16;
  if (v16)
  {
    uint64_t v13 = v17;
    __n128 v14 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v13 - 1) < 0) {
          operator delete(*(v13 - 3));
        }
        v13 -= 3;
      }
      while (v13 != v12);
      __n128 v14 = v16;
    }
    __n128 v17 = v12;
    operator delete(v14);
  }
}

void sub_86E6CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86E704(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_8B6A5C(a1 + 2200, (uint64_t)&v15);
  sub_639530(a2, (uint64_t)&v15, (void *)(a1 + 5176), 0, 0, 1);
  sub_63841C(a2, 70);
  uint64_t v4 = sub_62CA64(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  if (*(void *)(a1 + 7072) + v4 >= *(void *)(a1 + 5192)) {
    uint64_t v5 = *(void *)(a1 + 5192);
  }
  else {
    uint64_t v5 = *(void *)(a1 + 7072) + v4;
  }
  std::string::size_type v6 = (uint64_t *)(a1 + 7256);
  if (sub_564868((void *)(a1 + 7256)) && *v6 < v5) {
    uint64_t v5 = *v6;
  }
  sub_2F99CC(&v20, v5, *(void *)(a1 + 7072));
  __n128 v14 = v20;
  sub_638424(a2, &v14);
  sub_638448(a2, *(void *)(a1 + 2152));
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 429));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  int v7 = v19;
  if (v19 && !atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  int v8 = v18;
  if (v18)
  {
    do
    {
      int v9 = (void *)*v8;
      sub_4F4B48((uint64_t)(v8 + 2));
      operator delete(v8);
      int v8 = v9;
    }
    while (v9);
  }
  unsigned int v10 = __p;
  long long __p = 0;
  if (v10) {
    operator delete(v10);
  }
  uint64_t v11 = (void **)v15;
  if (v15)
  {
    uint64_t v12 = v16;
    uint64_t v13 = v15;
    if (v16 != v15)
    {
      do
      {
        if (*((char *)v12 - 1) < 0) {
          operator delete(*(v12 - 3));
        }
        v12 -= 3;
      }
      while (v12 != v11);
      uint64_t v13 = v15;
    }
    long long v16 = v11;
    operator delete(v13);
  }
}

void sub_86E8D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86E8E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86E904(void *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v3 = a1[930];
  uint64_t v4 = a1[931];
  if (v3 != v4)
  {
    uint64_t v6 = (uint64_t)(a1 + 542);
    int v7 = a1 + 647;
    do
    {
      if ((sub_68346C(v3) & 1) != 0 && (sub_684694(v3) & 1) == 0 && (sub_684668(v3) & 1) == 0)
      {
        sub_677A8C(v6, v3, &v25);
        int v8 = v25;
        if (v25 != v26)
        {
          if (sub_637DD8(v25))
          {
            sub_6393C8((uint64_t)v27, (uint64_t *)&v25, 0, 0, 1);
            sub_638A00((uint64_t)v27, v7);
            if (sub_683424(v3) && sub_685CD8(v3) > *v7 && (uint64_t v9 = sub_685CD8(v3), v9 < sub_685CEC(v3))) {
              uint64_t v10 = sub_685CD8(v3) - *v7;
            }
            else {
              uint64_t v10 = sub_685CEC(v3);
            }
            uint64_t v24 = v10;
            sub_638430((uint64_t)v27, &v24);
            sub_685CEC(v3);
            uint64_t v23 = v11;
            sub_63843C((uint64_t)v27, &v23);
            sub_69200((uint64_t)v27, *(unsigned __int8 *)(a1[270] + 423));
            if (sub_855B3C((uint64_t)a1, (uint64_t)v27)) {
              sub_6396C8((uint64_t)v27, 1);
            }
            int v12 = sub_6835F8(v3);
            sub_63841C((uint64_t)v27, v12);
            unint64_t v13 = a2[1];
            if (v13 >= a2[2])
            {
              uint64_t v14 = sub_75796C(a2, (uint64_t)v27);
            }
            else
            {
              sub_757B28((uint64_t)(a2 + 2), a2[1], (uint64_t)v27);
              uint64_t v14 = v13 + 408;
              a2[1] = v13 + 408;
            }
            a2[1] = v14;
            if (__p)
            {
              int v39 = __p;
              operator delete(__p);
            }
            if (v36)
            {
              uint64_t v37 = v36;
              operator delete(v36);
            }
            __n128 v15 = (void **)v34;
            if (v34)
            {
              long long v16 = v35;
              __n128 v17 = v34;
              if (v35 != v34)
              {
                do
                  long long v16 = sub_4F31D0(v16 - 13);
                while (v16 != v15);
                __n128 v17 = v34;
              }
              uint64_t v35 = v15;
              operator delete(v17);
            }
            if (v32)
            {
              uint64_t v33 = v32;
              operator delete(v32);
            }
            if (v30)
            {
              uint64_t v31 = v30;
              operator delete(v30);
            }
            uint64_t v18 = v28;
            if (v28)
            {
              uint64_t v19 = (uint64_t)v29;
              __n128 v20 = v28;
              if (v29 != v28)
              {
                do
                  uint64_t v19 = sub_4D4B58(v19 - 160);
                while ((void *)v19 != v18);
                __n128 v20 = v28;
              }
              uint64_t v29 = v18;
              operator delete(v20);
            }
          }
          int v8 = v25;
        }
        if (v8)
        {
          __n128 v21 = (void **)v26;
          uint64_t v22 = v8;
          if (v26 != v8)
          {
            do
              __n128 v21 = sub_4F31D0(v21 - 13);
            while (v21 != (void **)v8);
            uint64_t v22 = v25;
          }
          uint64_t v26 = v8;
          operator delete(v22);
        }
      }
      v3 += 336;
    }
    while (v3 != v4);
  }
}

void sub_86EC14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va1, a4);
  va_start(va, a4);
  uint64_t v6 = va_arg(va1, void *);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  sub_639B78((uint64_t *)va1);
  sub_5920E0((void **)va);
  sub_591DFC(v4);
  _Unwind_Resume(a1);
}

void sub_86EC84(_Unwind_Exception *a1)
{
  sub_591DFC(v1);
  _Unwind_Resume(a1);
}

void sub_86EC98(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (unsigned char *)(a1 + 7909);
  sub_8BBFC0(a1 + 2200, 1, *(unsigned __int8 *)(a1 + 7909), (uint64_t)&v16);
  sub_639530(a2, (uint64_t)&v16, (void *)(a1 + 5176), 0, 0, 1);
  v15.n128_u64[0] = sub_852478(a1);
  v15.n128_u64[1] = v5;
  sub_638424(a2, &v15);
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 425));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  sub_6396C0(a2, 1);
  if (*v4) {
    int v6 = 48;
  }
  else {
    int v6 = 47;
  }
  sub_63841C(a2, v6);
  if (!*v4)
  {
    unsigned int v7 = sub_62C088(*(unsigned int **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    sub_6393D0(a2, v7, 0);
  }
  uint64_t v8 = v20;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  uint64_t v9 = v19;
  if (v19)
  {
    do
    {
      uint64_t v10 = (void *)*v9;
      sub_4F4B48((uint64_t)(v9 + 2));
      operator delete(v9);
      uint64_t v9 = v10;
    }
    while (v10);
  }
  uint64_t v11 = __p;
  long long __p = 0;
  if (v11) {
    operator delete(v11);
  }
  int v12 = (void **)v16;
  if (v16)
  {
    unint64_t v13 = v17;
    uint64_t v14 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v13 - 1) < 0) {
          operator delete(*(v13 - 3));
        }
        v13 -= 3;
      }
      while (v13 != v12);
      uint64_t v14 = v16;
    }
    __n128 v17 = v12;
    operator delete(v14);
  }
}

void sub_86EE58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86EE6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86EE8C(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v6 = (unsigned char *)(a1 + 7909);
  sub_8BD10C(a1 + 2200, a2, a3, *(unsigned __int8 *)(a1 + 7909), &__p);
  sub_6393C8(a4, (uint64_t *)&__p, 0, 0, 1);
  sub_638A00(a4, (void *)(a1 + 5176));
  v13.n128_u64[0] = sub_852478(a1);
  v13.n128_u64[1] = v7;
  sub_638424(a4, &v13);
  sub_69200(a4, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 425));
  if (sub_855B3C(a1, a4)) {
    sub_6396C8(a4, 1);
  }
  sub_6396C0(a4, 1);
  if (*v6) {
    int v8 = 48;
  }
  else {
    int v8 = 47;
  }
  sub_63841C(a4, v8);
  if (!*v6)
  {
    unsigned int v9 = sub_62C088(*(unsigned int **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
    sub_6393D0(a4, v9, 0);
  }
  uint64_t v10 = (void **)__p;
  if (__p)
  {
    uint64_t v11 = v15;
    int v12 = __p;
    if (v15 != __p)
    {
      do
        uint64_t v11 = sub_4F31D0(v11 - 13);
      while (v11 != v10);
      int v12 = __p;
    }
    __n128 v15 = v10;
    operator delete(v12);
  }
}

void sub_86EFC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_5920E0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86EFD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_5920E0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86EFF8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_8B4A7C(a1 + 2200, (uint64_t *)&v14);
  sub_639530(a2, (uint64_t)&v14, (void *)(a1 + 5176), 0, 0, 1);
  uint64_t v4 = sub_62BD28(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v5 = v4;
  if (*(unsigned char *)(a1 + 7912) && *(void *)(a1 + 6688) < v4) {
    uint64_t v5 = *(void *)(a1 + 6688);
  }
  if (*(unsigned char *)(a1 + 7911) && *(void *)(a1 + 6112) < v5) {
    uint64_t v5 = *(void *)(a1 + 6112);
  }
  if (*(unsigned char *)(a1 + 7913) && *(void *)(a1 + 7072) < v5) {
    uint64_t v5 = *(void *)(a1 + 7072);
  }
  if (*(unsigned char *)(a1 + 5912) && *(void *)(a1 + 5728) < v5) {
    uint64_t v5 = *(void *)(a1 + 5728);
  }
  sub_2F99CC(&v19, v5, 0);
  __n128 v13 = v19;
  sub_638424(a2, &v13);
  sub_69200(a2, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 426));
  if (sub_855B3C(a1, a2)) {
    sub_6396C8(a2, 1);
  }
  sub_6396C0(a2, 1);
  sub_63841C(a2, 46);
  int v6 = v18;
  if (v18 && !atomic_fetch_add(&v18->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  unint64_t v7 = v17;
  if (v17)
  {
    do
    {
      int v8 = (void *)*v7;
      sub_4F4B48((uint64_t)(v7 + 2));
      operator delete(v7);
      unint64_t v7 = v8;
    }
    while (v8);
  }
  unsigned int v9 = __p;
  long long __p = 0;
  if (v9) {
    operator delete(v9);
  }
  uint64_t v10 = (void **)v14;
  if (v14)
  {
    uint64_t v11 = v15;
    int v12 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      int v12 = v14;
    }
    __n128 v15 = v10;
    operator delete(v12);
  }
}

void sub_86F1E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86F1F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86F214(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_8BA7A0(a1 + 2200, a2, a3, (uint64_t)&__p);
  sub_6393C8(a4, (uint64_t *)&__p, 0, 0, 1);
  sub_638A00(a4, (void *)(a1 + 5176));
  uint64_t v6 = sub_62BD28(*(void **)(a1 + 2160), *(_DWORD *)(a1 + 5188));
  uint64_t v7 = v6;
  if (*(unsigned char *)(a1 + 7912) && *(void *)(a1 + 6688) < v6) {
    uint64_t v7 = *(void *)(a1 + 6688);
  }
  if (*(unsigned char *)(a1 + 7911) && *(void *)(a1 + 6112) < v7) {
    uint64_t v7 = *(void *)(a1 + 6112);
  }
  if (*(unsigned char *)(a1 + 7913) && *(void *)(a1 + 7072) < v7) {
    uint64_t v7 = *(void *)(a1 + 7072);
  }
  if (*(unsigned char *)(a1 + 5912) && *(void *)(a1 + 5728) < v7) {
    uint64_t v7 = *(void *)(a1 + 5728);
  }
  sub_2F99CC(&v14, v7, 0);
  __n128 v11 = v14;
  sub_638424(a4, &v11);
  sub_69200(a4, *(unsigned __int8 *)(*(void *)(a1 + 2160) + 426));
  if (sub_855B3C(a1, a4)) {
    sub_6396C8(a4, 1);
  }
  sub_6396C0(a4, 1);
  sub_63841C(a4, 46);
  int v8 = (void **)__p;
  if (__p)
  {
    unsigned int v9 = v13;
    uint64_t v10 = __p;
    if (v13 != __p)
    {
      do
        unsigned int v9 = sub_4F31D0(v9 - 13);
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    __n128 v13 = v8;
    operator delete(v10);
  }
}

void sub_86F378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_5920E0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86F38C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_639B78(v4);
  sub_5920E0((void **)va);
  _Unwind_Resume(a1);
}

void sub_86F3AC(uint64_t a1, int **a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  uint64_t v4 = (char *)v2 - (char *)*a2;
  unint64_t v5 = 0xFAFAFAFAFAFAFAFBLL * (v4 >> 3);
  if (v5 >= 2)
  {
    if (v4 < 1)
    {
LABEL_6:
      __n128 v11 = 0;
      unint64_t v8 = 0;
    }
    else
    {
      unint64_t v8 = 0xFAFAFAFAFAFAFAFBLL * (v4 >> 3);
      while (1)
      {
        unsigned int v9 = operator new(408 * v8, &std::nothrow);
        if (v9) {
          break;
        }
        BOOL v10 = v8 > 1;
        v8 >>= 1;
        if (!v10) {
          goto LABEL_6;
        }
      }
      __n128 v11 = v9;
    }
    sub_884970(v3, v2, (uint64_t)&v16, v5, (uint64_t)v11, v8);
    if (v11) {
      operator delete(v11);
    }
    unint64_t v12 = 0xFAFAFAFAFAFAFAFBLL * (((char *)a2[1] - (char *)*a2) >> 3);
    if (v12 != 1)
    {
      for (unint64_t i = 1; i != v12; ++i)
      {
        uint64_t v14 = sub_856768(a2, i - 1);
        __n128 v15 = (unsigned int *)sub_856768(a2, i);
        if (sub_6396F4(v14) != 4 && !sub_6397A8(v14, (uint64_t)v15)) {
          sub_8565C8(a1, v14, v15);
        }
      }
    }
  }
}

void sub_86F520(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_86F538@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v3 = *(void *)(result + 5200);
  uint64_t v4 = *(void *)(result + 5208);
  if (v3 != v4)
  {
    uint64_t v5 = result;
    uint64_t v146 = (uint64_t)(a2 + 2);
    int v6 = *(_DWORD *)(result + 7916);
    while (1)
    {
      BOOL result = sub_63ACB4(v3);
      if ((result & 1) == 0) {
        goto LABEL_6;
      }
      unint64_t v8 = (void *)sub_856CCC(*(void **)(v5 + 7968), *(void *)(v3 + 168));
      BOOL result = sub_63AA60((uint64_t)v8);
      if ((result & 1) == 0) {
        goto LABEL_6;
      }
      if (sub_63AA80((uint64_t)v8))
      {
        if (sub_63A908((uint64_t)v8))
        {
          sub_871198(v5, (uint64_t *)v3, (uint64_t)&v160);
          unint64_t v9 = a2[1];
          if (v9 >= a2[2])
          {
            uint64_t v43 = sub_757E08(a2, (uint64_t)&v160);
            uint64_t v44 = (void *)v188;
            a2[1] = v43;
            if (v44)
            {
              *((void *)&v188 + 1) = v44;
              operator delete(v44);
            }
          }
          else
          {
            *(_DWORD *)unint64_t v9 = v160;
            *(void *)(v9 + 16) = 0;
            *(void *)(v9 + 24) = 0;
            *(void *)(v9 + 8) = 0;
            *(_OWORD *)(v9 + 8) = __p;
            *(void *)(v9 + 24) = v162;
            long long __p = 0uLL;
            uint64_t v162 = 0;
            long long v10 = v165;
            long long v11 = v163;
            *(_OWORD *)(v9 + 48) = v164;
            *(_OWORD *)(v9 + 64) = v10;
            *(_OWORD *)(v9 + 32) = v11;
            uint64_t v12 = v168;
            long long v13 = v167;
            *(_OWORD *)(v9 + 80) = v166;
            *(_OWORD *)(v9 + 96) = v13;
            *(void *)(v9 + 112) = v12;
            *(void *)(v9 + 120) = 0;
            *(void *)(v9 + 128) = 0;
            *(void *)(v9 + 136) = 0;
            *(_OWORD *)(v9 + 120) = v169;
            long long v169 = 0uLL;
            *(void *)(v9 + 136) = v170;
            *(void *)(v9 + 144) = 0;
            uint64_t v170 = 0;
            *(void *)(v9 + 152) = 0;
            *(void *)(v9 + 160) = 0;
            *(_OWORD *)(v9 + 144) = v171;
            *(void *)(v9 + 160) = v172;
            long long v171 = 0uLL;
            uint64_t v172 = 0;
            *(_OWORD *)(v9 + 168) = v173;
            *(_DWORD *)(v9 + 192) = v175;
            if (v175 <= 1) {
              *(void *)(v9 + 184) = v174;
            }
            *(_OWORD *)(v9 + 200) = v176;
            long long v14 = v177;
            uint64_t v15 = v179;
            *(_OWORD *)(v9 + 232) = v178;
            *(_OWORD *)(v9 + 216) = v14;
            *(void *)(v9 + 248) = v15;
            *(void *)(v9 + 256) = 0;
            *(void *)(v9 + 264) = 0;
            *(void *)(v9 + 272) = 0;
            *(_OWORD *)(v9 + 256) = v180;
            *(void *)(v9 + 272) = v181;
            long long v180 = 0uLL;
            uint64_t v181 = 0;
            *(unsigned char *)(v9 + 280) = v182;
            *(void *)(v9 + 288) = 0;
            *(void *)(v9 + 296) = 0;
            *(void *)(v9 + 304) = 0;
            *(_OWORD *)(v9 + 288) = v183;
            *(void *)(v9 + 304) = v184;
            long long v183 = 0uLL;
            uint64_t v184 = 0;
            long long v16 = *(_OWORD *)v185;
            *(_OWORD *)(v9 + 321) = *(_OWORD *)&v185[9];
            *(_OWORD *)(v9 + 312) = v16;
            long long v17 = v186;
            *(_DWORD *)(v9 + 356) = v187;
            *(_OWORD *)(v9 + 340) = v17;
            *(void *)(v9 + 360) = 0;
            *(void *)(v9 + 368) = 0;
            *(void *)(v9 + 376) = 0;
            *(_OWORD *)(v9 + 360) = v188;
            *(void *)(v9 + 376) = v189;
            long long v188 = 0uLL;
            uint64_t v189 = 0;
            long long v18 = v190;
            *(_DWORD *)(v9 + 400) = v191;
            *(_OWORD *)(v9 + 384) = v18;
            a2[1] = v9 + 408;
          }
          if ((void)v183)
          {
            *((void *)&v183 + 1) = v183;
            operator delete((void *)v183);
          }
          uint64_t v45 = (void **)v180;
          if ((void)v180)
          {
            unsigned __int16 v46 = (void **)*((void *)&v180 + 1);
            uint64_t v47 = (void *)v180;
            if (*((void *)&v180 + 1) != (void)v180)
            {
              do
                unsigned __int16 v46 = sub_4F31D0(v46 - 13);
              while (v46 != v45);
              uint64_t v47 = (void *)v180;
            }
            *((void *)&v180 + 1) = v45;
            operator delete(v47);
          }
          if ((void)v171)
          {
            *((void *)&v171 + 1) = v171;
            operator delete((void *)v171);
          }
          if ((void)v169)
          {
            *((void *)&v169 + 1) = v169;
            operator delete((void *)v169);
          }
          uint64_t v48 = __p;
          if (!(void)__p) {
            goto LABEL_5;
          }
          uint64_t v49 = *((void *)&__p + 1);
          uint64_t v7 = (void *)__p;
          if (*((void *)&__p + 1) != (void)__p)
          {
            do
              uint64_t v49 = sub_4D4B58(v49 - 160);
            while (v49 != v48);
            goto LABEL_3;
          }
        }
        else
        {
          sub_871360(v5, (uint64_t *)v3, (uint64_t)&v160);
          unint64_t v23 = a2[1];
          if (v23 >= a2[2])
          {
            uint64_t v50 = sub_757E08(a2, (uint64_t)&v160);
            int v51 = (void *)v188;
            a2[1] = v50;
            if (v51)
            {
              *((void *)&v188 + 1) = v51;
              operator delete(v51);
            }
          }
          else
          {
            *(_DWORD *)unint64_t v23 = v160;
            *(void *)(v23 + 16) = 0;
            *(void *)(v23 + 24) = 0;
            *(void *)(v23 + 8) = 0;
            *(_OWORD *)(v23 + 8) = __p;
            *(void *)(v23 + 24) = v162;
            long long __p = 0uLL;
            uint64_t v162 = 0;
            long long v24 = v165;
            long long v25 = v163;
            *(_OWORD *)(v23 + 48) = v164;
            *(_OWORD *)(v23 + 64) = v24;
            *(_OWORD *)(v23 + 32) = v25;
            uint64_t v26 = v168;
            long long v27 = v167;
            *(_OWORD *)(v23 + 80) = v166;
            *(_OWORD *)(v23 + 96) = v27;
            *(void *)(v23 + 112) = v26;
            *(void *)(v23 + 120) = 0;
            *(void *)(v23 + 128) = 0;
            *(void *)(v23 + 136) = 0;
            *(_OWORD *)(v23 + 120) = v169;
            long long v169 = 0uLL;
            *(void *)(v23 + 136) = v170;
            *(void *)(v23 + 144) = 0;
            uint64_t v170 = 0;
            *(void *)(v23 + 152) = 0;
            *(void *)(v23 + 160) = 0;
            *(_OWORD *)(v23 + 144) = v171;
            *(void *)(v23 + 160) = v172;
            long long v171 = 0uLL;
            uint64_t v172 = 0;
            *(_OWORD *)(v23 + 168) = v173;
            *(_DWORD *)(v23 + 192) = v175;
            if (v175 <= 1) {
              *(void *)(v23 + 184) = v174;
            }
            *(_OWORD *)(v23 + 200) = v176;
            long long v28 = v177;
            uint64_t v29 = v179;
            *(_OWORD *)(v23 + 232) = v178;
            *(_OWORD *)(v23 + 216) = v28;
            *(void *)(v23 + 248) = v29;
            *(void *)(v23 + 256) = 0;
            *(void *)(v23 + 264) = 0;
            *(void *)(v23 + 272) = 0;
            *(_OWORD *)(v23 + 256) = v180;
            *(void *)(v23 + 272) = v181;
            long long v180 = 0uLL;
            uint64_t v181 = 0;
            *(unsigned char *)(v23 + 280) = v182;
            *(void *)(v23 + 288) = 0;
            *(void *)(v23 + 296) = 0;
            *(void *)(v23 + 304) = 0;
            *(_OWORD *)(v23 + 288) = v183;
            *(void *)(v23 + 304) = v184;
            long long v183 = 0uLL;
            uint64_t v184 = 0;
            long long v30 = *(_OWORD *)v185;
            *(_OWORD *)(v23 + 321) = *(_OWORD *)&v185[9];
            *(_OWORD *)(v23 + 312) = v30;
            long long v31 = v186;
            *(_DWORD *)(v23 + 356) = v187;
            *(_OWORD *)(v23 + 340) = v31;
            *(void *)(v23 + 360) = 0;
            *(void *)(v23 + 368) = 0;
            *(void *)(v23 + 376) = 0;
            *(_OWORD *)(v23 + 360) = v188;
            *(void *)(v23 + 376) = v189;
            long long v188 = 0uLL;
            uint64_t v189 = 0;
            long long v32 = v190;
            *(_DWORD *)(v23 + 400) = v191;
            *(_OWORD *)(v23 + 384) = v32;
            a2[1] = v23 + 408;
          }
          if ((void)v183)
          {
            *((void *)&v183 + 1) = v183;
            operator delete((void *)v183);
          }
          long long v52 = (void **)v180;
          if ((void)v180)
          {
            uint64_t v53 = (void **)*((void *)&v180 + 1);
            uint64_t v54 = (void *)v180;
            if (*((void *)&v180 + 1) != (void)v180)
            {
              do
                uint64_t v53 = sub_4F31D0(v53 - 13);
              while (v53 != v52);
              uint64_t v54 = (void *)v180;
            }
            *((void *)&v180 + 1) = v52;
            operator delete(v54);
          }
          if ((void)v171)
          {
            *((void *)&v171 + 1) = v171;
            operator delete((void *)v171);
          }
          if ((void)v169)
          {
            *((void *)&v169 + 1) = v169;
            operator delete((void *)v169);
          }
          uint64_t v48 = __p;
          if (!(void)__p) {
            goto LABEL_5;
          }
          uint64_t v55 = *((void *)&__p + 1);
          uint64_t v7 = (void *)__p;
          if (*((void *)&__p + 1) != (void)__p)
          {
            do
              uint64_t v55 = sub_4D4B58(v55 - 160);
            while (v55 != v48);
            goto LABEL_3;
          }
        }
        goto LABEL_4;
      }
      if (sub_63A9DC((uint64_t)v8))
      {
        sub_871528(v5, (uint64_t *)v3, (uint64_t)v8, 0, (uint64_t)&v160);
        int v19 = v6;
        int v20 = v6;
        sub_486A54((uint64_t)&v160, v6);
        unint64_t v21 = a2[1];
        if (v21 >= a2[2])
        {
          uint64_t v22 = sub_75796C(a2, (uint64_t)&v160);
        }
        else
        {
          sub_757B28(v146, a2[1], (uint64_t)&v160);
          uint64_t v22 = v21 + 408;
          a2[1] = v21 + 408;
        }
        a2[1] = v22;
        sub_871528(v5, (uint64_t *)v3, (uint64_t)v8, 1, (uint64_t)v147);
        sub_486A54((uint64_t)v147, v20);
        unint64_t v66 = a2[1];
        if (v66 >= a2[2])
        {
          uint64_t v67 = sub_75796C(a2, (uint64_t)v147);
        }
        else
        {
          sub_757B28(v146, a2[1], (uint64_t)v147);
          uint64_t v67 = v66 + 408;
          a2[1] = v66 + 408;
        }
        a2[1] = v67;
        if (v158)
        {
          char v159 = v158;
          operator delete(v158);
        }
        if (v156)
        {
          uint64_t v157 = v156;
          operator delete(v156);
        }
        unsigned int v68 = (void **)v154;
        if (v154)
        {
          long long v69 = v155;
          long long v70 = v154;
          if (v155 != v154)
          {
            do
              long long v69 = sub_4F31D0(v69 - 13);
            while (v69 != v68);
            long long v70 = v154;
          }
          uint64_t v155 = v68;
          operator delete(v70);
        }
        if (v152)
        {
          long long v153 = v152;
          operator delete(v152);
        }
        if (v150)
        {
          uint64_t v151 = v150;
          operator delete(v150);
        }
        long long v71 = v148;
        if (v148)
        {
          uint64_t v72 = (uint64_t)v149;
          long long v73 = v148;
          if (v149 != v148)
          {
            do
              uint64_t v72 = sub_4D4B58(v72 - 160);
            while ((void *)v72 != v71);
            long long v73 = v148;
          }
          int v149 = v71;
          operator delete(v73);
        }
        if ((void)v188)
        {
          *((void *)&v188 + 1) = v188;
          operator delete((void *)v188);
        }
        if ((void)v183)
        {
          *((void *)&v183 + 1) = v183;
          operator delete((void *)v183);
        }
        uint64_t v74 = (void **)v180;
        if ((void)v180)
        {
          char v75 = (void **)*((void *)&v180 + 1);
          uint64_t v76 = (void *)v180;
          if (*((void *)&v180 + 1) != (void)v180)
          {
            do
              char v75 = sub_4F31D0(v75 - 13);
            while (v75 != v74);
            uint64_t v76 = (void *)v180;
          }
          *((void *)&v180 + 1) = v74;
          operator delete(v76);
        }
        if ((void)v171)
        {
          *((void *)&v171 + 1) = v171;
          operator delete((void *)v171);
        }
        if ((void)v169)
        {
          *((void *)&v169 + 1) = v169;
          operator delete((void *)v169);
        }
        uint64_t v77 = __p;
        if ((void)__p)
        {
          uint64_t v78 = *((void *)&__p + 1);
          long long v79 = (void *)__p;
          if (*((void *)&__p + 1) != (void)__p)
          {
            do
              uint64_t v78 = sub_4D4B58(v78 - 160);
            while (v78 != v77);
            long long v79 = (void *)__p;
          }
          *((void *)&__p + 1) = v77;
          operator delete(v79);
        }
        int v6 = v19 + 1;
        goto LABEL_5;
      }
      if (sub_63A918((uint64_t)v8))
      {
        sub_87171C(v5, (uint64_t *)v3, (uint64_t)&v160);
        unint64_t v33 = a2[1];
        if (v33 >= a2[2])
        {
          uint64_t v80 = sub_757E08(a2, (uint64_t)&v160);
          long long v81 = (void *)v188;
          a2[1] = v80;
          if (v81)
          {
            *((void *)&v188 + 1) = v81;
            operator delete(v81);
          }
        }
        else
        {
          *(_DWORD *)unint64_t v33 = v160;
          *(void *)(v33 + 16) = 0;
          *(void *)(v33 + 24) = 0;
          *(void *)(v33 + 8) = 0;
          *(_OWORD *)(v33 + 8) = __p;
          *(void *)(v33 + 24) = v162;
          long long __p = 0uLL;
          uint64_t v162 = 0;
          long long v34 = v165;
          long long v35 = v163;
          *(_OWORD *)(v33 + 48) = v164;
          *(_OWORD *)(v33 + 64) = v34;
          *(_OWORD *)(v33 + 32) = v35;
          uint64_t v36 = v168;
          long long v37 = v167;
          *(_OWORD *)(v33 + 80) = v166;
          *(_OWORD *)(v33 + 96) = v37;
          *(void *)(v33 + 112) = v36;
          *(void *)(v33 + 120) = 0;
          *(void *)(v33 + 128) = 0;
          *(void *)(v33 + 136) = 0;
          *(_OWORD *)(v33 + 120) = v169;
          long long v169 = 0uLL;
          *(void *)(v33 + 136) = v170;
          *(void *)(v33 + 144) = 0;
          uint64_t v170 = 0;
          *(void *)(v33 + 152) = 0;
          *(void *)(v33 + 160) = 0;
          *(_OWORD *)(v33 + 144) = v171;
          *(void *)(v33 + 160) = v172;
          long long v171 = 0uLL;
          uint64_t v172 = 0;
          *(_OWORD *)(v33 + 168) = v173;
          *(_DWORD *)(v33 + 192) = v175;
          if (v175 <= 1) {
            *(void *)(v33 + 184) = v174;
          }
          *(_OWORD *)(v33 + 200) = v176;
          long long v38 = v177;
          uint64_t v39 = v179;
          *(_OWORD *)(v33 + 232) = v178;
          *(_OWORD *)(v33 + 216) = v38;
          *(void *)(v33 + 248) = v39;
          *(void *)(v33 + 256) = 0;
          *(void *)(v33 + 264) = 0;
          *(void *)(v33 + 272) = 0;
          *(_OWORD *)(v33 + 256) = v180;
          *(void *)(v33 + 272) = v181;
          long long v180 = 0uLL;
          uint64_t v181 = 0;
          *(unsigned char *)(v33 + 280) = v182;
          *(void *)(v33 + 288) = 0;
          *(void *)(v33 + 296) = 0;
          *(void *)(v33 + 304) = 0;
          *(_OWORD *)(v33 + 288) = v183;
          *(void *)(v33 + 304) = v184;
          long long v183 = 0uLL;
          uint64_t v184 = 0;
          long long v40 = *(_OWORD *)v185;
          *(_OWORD *)(v33 + 321) = *(_OWORD *)&v185[9];
          *(_OWORD *)(v33 + 312) = v40;
          long long v41 = v186;
          *(_DWORD *)(v33 + 356) = v187;
          *(_OWORD *)(v33 + 340) = v41;
          *(void *)(v33 + 360) = 0;
          *(void *)(v33 + 368) = 0;
          *(void *)(v33 + 376) = 0;
          *(_OWORD *)(v33 + 360) = v188;
          *(void *)(v33 + 376) = v189;
          long long v188 = 0uLL;
          uint64_t v189 = 0;
          long long v42 = v190;
          *(_DWORD *)(v33 + 400) = v191;
          *(_OWORD *)(v33 + 384) = v42;
          a2[1] = v33 + 408;
        }
        if ((void)v183)
        {
          *((void *)&v183 + 1) = v183;
          operator delete((void *)v183);
        }
        uint64_t v82 = (void **)v180;
        if ((void)v180)
        {
          uint64_t v83 = (void **)*((void *)&v180 + 1);
          long long v84 = (void *)v180;
          if (*((void *)&v180 + 1) != (void)v180)
          {
            do
              uint64_t v83 = sub_4F31D0(v83 - 13);
            while (v83 != v82);
            long long v84 = (void *)v180;
          }
          *((void *)&v180 + 1) = v82;
          operator delete(v84);
        }
        if ((void)v171)
        {
          *((void *)&v171 + 1) = v171;
          operator delete((void *)v171);
        }
        if ((void)v169)
        {
          *((void *)&v169 + 1) = v169;
          operator delete((void *)v169);
        }
        uint64_t v48 = __p;
        if (!(void)__p) {
          goto LABEL_5;
        }
        uint64_t v85 = *((void *)&__p + 1);
        uint64_t v7 = (void *)__p;
        if (*((void *)&__p + 1) != (void)__p)
        {
          do
            uint64_t v85 = sub_4D4B58(v85 - 160);
          while (v85 != v48);
          goto LABEL_3;
        }
LABEL_4:
        *((void *)&__p + 1) = v48;
        operator delete(v7);
        goto LABEL_5;
      }
      if (sub_63AABC(v8)) {
        break;
      }
      if (sub_63AAF0(v8))
      {
        sub_871AAC(v5, (uint64_t *)v3, (uint64_t)&v160);
        unint64_t v86 = a2[1];
        if (v86 >= a2[2])
        {
          uint64_t v112 = sub_757E08(a2, (uint64_t)&v160);
          uint64_t v113 = (void *)v188;
          a2[1] = v112;
          if (v113)
          {
            *((void *)&v188 + 1) = v113;
            operator delete(v113);
          }
        }
        else
        {
          *(_DWORD *)unint64_t v86 = v160;
          *(void *)(v86 + 16) = 0;
          *(void *)(v86 + 24) = 0;
          *(void *)(v86 + 8) = 0;
          *(_OWORD *)(v86 + 8) = __p;
          *(void *)(v86 + 24) = v162;
          long long __p = 0uLL;
          uint64_t v162 = 0;
          long long v87 = v165;
          long long v88 = v163;
          *(_OWORD *)(v86 + 48) = v164;
          *(_OWORD *)(v86 + 64) = v87;
          *(_OWORD *)(v86 + 32) = v88;
          uint64_t v89 = v168;
          long long v90 = v167;
          *(_OWORD *)(v86 + 80) = v166;
          *(_OWORD *)(v86 + 96) = v90;
          *(void *)(v86 + 112) = v89;
          *(void *)(v86 + 120) = 0;
          *(void *)(v86 + 128) = 0;
          *(void *)(v86 + 136) = 0;
          *(_OWORD *)(v86 + 120) = v169;
          long long v169 = 0uLL;
          *(void *)(v86 + 136) = v170;
          *(void *)(v86 + 144) = 0;
          uint64_t v170 = 0;
          *(void *)(v86 + 152) = 0;
          *(void *)(v86 + 160) = 0;
          *(_OWORD *)(v86 + 144) = v171;
          *(void *)(v86 + 160) = v172;
          long long v171 = 0uLL;
          uint64_t v172 = 0;
          *(_OWORD *)(v86 + 168) = v173;
          *(_DWORD *)(v86 + 192) = v175;
          if (v175 <= 1) {
            *(void *)(v86 + 184) = v174;
          }
          *(_OWORD *)(v86 + 200) = v176;
          long long v91 = v177;
          uint64_t v92 = v179;
          *(_OWORD *)(v86 + 232) = v178;
          *(_OWORD *)(v86 + 216) = v91;
          *(void *)(v86 + 248) = v92;
          *(void *)(v86 + 256) = 0;
          *(void *)(v86 + 264) = 0;
          *(void *)(v86 + 272) = 0;
          *(_OWORD *)(v86 + 256) = v180;
          *(void *)(v86 + 272) = v181;
          long long v180 = 0uLL;
          uint64_t v181 = 0;
          *(unsigned char *)(v86 + 280) = v182;
          *(void *)(v86 + 288) = 0;
          *(void *)(v86 + 296) = 0;
          *(void *)(v86 + 304) = 0;
          *(_OWORD *)(v86 + 288) = v183;
          *(void *)(v86 + 304) = v184;
          long long v183 = 0uLL;
          uint64_t v184 = 0;
          long long v93 = *(_OWORD *)v185;
          *(_OWORD *)(v86 + 321) = *(_OWORD *)&v185[9];
          *(_OWORD *)(v86 + 312) = v93;
          long long v94 = v186;
          *(_DWORD *)(v86 + 356) = v187;
          *(_OWORD *)(v86 + 340) = v94;
          *(void *)(v86 + 360) = 0;
          *(void *)(v86 + 368) = 0;
          *(void *)(v86 + 376) = 0;
          *(_OWORD *)(v86 + 360) = v188;
          *(void *)(v86 + 376) = v189;
          long long v188 = 0uLL;
          uint64_t v189 = 0;
          long long v95 = v190;
          *(_DWORD *)(v86 + 400) = v191;
          *(_OWORD *)(v86 + 384) = v95;
          a2[1] = v86 + 408;
        }
        if ((void)v183)
        {
          *((void *)&v183 + 1) = v183;
          operator delete((void *)v183);
        }
        uint64_t v114 = (void **)v180;
        if ((void)v180)
        {
          long long v115 = (void **)*((void *)&v180 + 1);
          int v116 = (void *)v180;
          if (*((void *)&v180 + 1) != (void)v180)
          {
            do
              long long v115 = sub_4F31D0(v115 - 13);
            while (v115 != v114);
            int v116 = (void *)v180;
          }
          *((void *)&v180 + 1) = v114;
          operator delete(v116);
        }
        if ((void)v171)
        {
          *((void *)&v171 + 1) = v171;
          operator delete((void *)v171);
        }
        if ((void)v169)
        {
          *((void *)&v169 + 1) = v169;
          operator delete((void *)v169);
        }
        uint64_t v48 = __p;
        if (!(void)__p) {
          goto LABEL_5;
        }
        uint64_t v117 = *((void *)&__p + 1);
        uint64_t v7 = (void *)__p;
        if (*((void *)&__p + 1) == (void)__p) {
          goto LABEL_4;
        }
        do
          uint64_t v117 = sub_4D4B58(v117 - 160);
        while (v117 != v48);
        goto LABEL_3;
      }
      if (sub_63AA44((uint64_t)v8))
      {
        sub_871C74(v5, (uint64_t *)v3, (uint64_t)&v160);
        unint64_t v102 = a2[1];
        if (v102 >= a2[2])
        {
          uint64_t v128 = sub_757E08(a2, (uint64_t)&v160);
          long long v129 = (void *)v188;
          a2[1] = v128;
          if (v129)
          {
            *((void *)&v188 + 1) = v129;
            operator delete(v129);
          }
        }
        else
        {
          *(_DWORD *)unint64_t v102 = v160;
          *(void *)(v102 + 16) = 0;
          *(void *)(v102 + 24) = 0;
          *(void *)(v102 + 8) = 0;
          *(_OWORD *)(v102 + 8) = __p;
          *(void *)(v102 + 24) = v162;
          long long __p = 0uLL;
          uint64_t v162 = 0;
          long long v103 = v165;
          long long v104 = v163;
          *(_OWORD *)(v102 + 48) = v164;
          *(_OWORD *)(v102 + 64) = v103;
          *(_OWORD *)(v102 + 32) = v104;
          uint64_t v105 = v168;
          long long v106 = v167;
          *(_OWORD *)(v102 + 80) = v166;
          *(_OWORD *)(v102 + 96) = v106;
          *(void *)(v102 + 112) = v105;
          *(void *)(v102 + 120) = 0;
          *(void *)(v102 + 128) = 0;
          *(void *)(v102 + 136) = 0;
          *(_OWORD *)(v102 + 120) = v169;
          long long v169 = 0uLL;
          *(void *)(v102 + 136) = v170;
          *(void *)(v102 + 144) = 0;
          uint64_t v170 = 0;
          *(void *)(v102 + 152) = 0;
          *(void *)(v102 + 160) = 0;
          *(_OWORD *)(v102 + 144) = v171;
          *(void *)(v102 + 160) = v172;
          long long v171 = 0uLL;
          uint64_t v172 = 0;
          *(_OWORD *)(v102 + 168) = v173;
          *(_DWORD *)(v102 + 192) = v175;
          if (v175 <= 1) {
            *(void *)(v102 + 184) = v174;
          }
          *(_OWORD *)(v102 + 200) = v176;
          long long v107 = v177;
          uint64_t v108 = v179;
          *(_OWORD *)(v102 + 232) = v178;
          *(_OWORD *)(v102 + 216) = v107;
          *(void *)(v102 + 248) = v108;
          *(void *)(v102 + 256) = 0;
          *(void *)(v102 + 264) = 0;
          *(void *)(v102 + 272) = 0;
          *(_OWORD *)(v102 + 256) = v180;
          *(void *)(v102 + 272) = v181;
          long long v180 = 0uLL;
          uint64_t v181 = 0;
          *(unsigned char *)(v102 + 280) = v182;
          *(void *)(v102 + 288) = 0;
          *(void *)(v102 + 296) = 0;
          *(void *)(v102 + 304) = 0;
          *(_OWORD *)(v102 + 288) = v183;
          *(void *)(v102 + 304) = v184;
          long long v183 = 0uLL;
          uint64_t v184 = 0;
          long long v109 = *(_OWORD *)v185;
          *(_OWORD *)(v102 + 321) = *(_OWORD *)&v185[9];
          *(_OWORD *)(v102 + 312) = v109;
          long long v110 = v186;
          *(_DWORD *)(v102 + 356) = v187;
          *(_OWORD *)(v102 + 340) = v110;
          *(void *)(v102 + 360) = 0;
          *(void *)(v102 + 368) = 0;
          *(void *)(v102 + 376) = 0;
          *(_OWORD *)(v102 + 360) = v188;
          *(void *)(v102 + 376) = v189;
          long long v188 = 0uLL;
          uint64_t v189 = 0;
          long long v111 = v190;
          *(_DWORD *)(v102 + 400) = v191;
          *(_OWORD *)(v102 + 384) = v111;
          a2[1] = v102 + 408;
        }
        if ((void)v183)
        {
          *((void *)&v183 + 1) = v183;
          operator delete((void *)v183);
        }
        uint64_t v130 = (void **)v180;
        if ((void)v180)
        {
          uint64_t v131 = (void **)*((void *)&v180 + 1);
          uint64_t v132 = (void *)v180;
          if (*((void *)&v180 + 1) != (void)v180)
          {
            do
              uint64_t v131 = sub_4F31D0(v131 - 13);
            while (v131 != v130);
            uint64_t v132 = (void *)v180;
          }
          *((void *)&v180 + 1) = v130;
          operator delete(v132);
        }
        if ((void)v171)
        {
          *((void *)&v171 + 1) = v171;
          operator delete((void *)v171);
        }
        if ((void)v169)
        {
          *((void *)&v169 + 1) = v169;
          operator delete((void *)v169);
        }
        uint64_t v48 = __p;
        if (!(void)__p) {
          goto LABEL_5;
        }
        uint64_t v133 = *((void *)&__p + 1);
        uint64_t v7 = (void *)__p;
        if (*((void *)&__p + 1) == (void)__p) {
          goto LABEL_4;
        }
        do
          uint64_t v133 = sub_4D4B58(v133 - 160);
        while (v133 != v48);
        goto LABEL_3;
      }
      if (sub_63AAA0((uint64_t)v8))
      {
        sub_871E3C(v5, (uint64_t *)v3, (uint64_t)&v160);
        unint64_t v118 = a2[1];
        if (v118 >= a2[2])
        {
          uint64_t v136 = sub_757E08(a2, (uint64_t)&v160);
          unsigned long long v137 = (void *)v188;
          a2[1] = v136;
          if (v137)
          {
            *((void *)&v188 + 1) = v137;
            operator delete(v137);
          }
        }
        else
        {
          *(_DWORD *)unint64_t v118 = v160;
          *(void *)(v118 + 16) = 0;
          *(void *)(v118 + 24) = 0;
          *(void *)(v118 + 8) = 0;
          *(_OWORD *)(v118 + 8) = __p;
          *(void *)(v118 + 24) = v162;
          long long __p = 0uLL;
          uint64_t v162 = 0;
          long long v119 = v165;
          long long v120 = v163;
          *(_OWORD *)(v118 + 48) = v164;
          *(_OWORD *)(v118 + 64) = v119;
          *(_OWORD *)(v118 + 32) = v120;
          uint64_t v121 = v168;
          long long v122 = v167;
          *(_OWORD *)(v118 + 80) = v166;
          *(_OWORD *)(v118 + 96) = v122;
          *(void *)(v118 + 112) = v121;
          *(void *)(v118 + 120) = 0;
          *(void *)(v118 + 128) = 0;
          *(void *)(v118 + 136) = 0;
          *(_OWORD *)(v118 + 120) = v169;
          long long v169 = 0uLL;
          *(void *)(v118 + 136) = v170;
          *(void *)(v118 + 144) = 0;
          uint64_t v170 = 0;
          *(void *)(v118 + 152) = 0;
          *(void *)(v118 + 160) = 0;
          *(_OWORD *)(v118 + 144) = v171;
          *(void *)(v118 + 160) = v172;
          long long v171 = 0uLL;
          uint64_t v172 = 0;
          *(_OWORD *)(v118 + 168) = v173;
          *(_DWORD *)(v118 + 192) = v175;
          if (v175 <= 1) {
            *(void *)(v118 + 184) = v174;
          }
          *(_OWORD *)(v118 + 200) = v176;
          long long v123 = v177;
          uint64_t v124 = v179;
          *(_OWORD *)(v118 + 232) = v178;
          *(_OWORD *)(v118 + 216) = v123;
          *(void *)(v118 + 248) = v124;
          *(void *)(v118 + 256) = 0;
          *(void *)(v118 + 264) = 0;
          *(void *)(v118 + 272) = 0;
          *(_OWORD *)(v118 + 256) = v180;
          *(void *)(v118 + 272) = v181;
          long long v180 = 0uLL;
          uint64_t v181 = 0;
          *(unsigned char *)(v118 + 280) = v182;
          *(void *)(v118 + 288) = 0;
          *(void *)(v118 + 296) = 0;
          *(void *)(v118 + 304) = 0;
          *(_OWORD *)(v118 + 288) = v183;
          *(void *)(v118 + 304) = v184;
          long long v183 = 0uLL;
          uint64_t v184 = 0;
          long long v125 = *(_OWORD *)v185;
          *(_OWORD *)(v118 + 321) = *(_OWORD *)&v185[9];
          *(_OWORD *)(v118 + 312) = v125;
          long long v126 = v186;
          *(_DWORD *)(v118 + 356) = v187;
          *(_OWORD *)(v118 + 340) = v126;
          *(void *)(v118 + 360) = 0;
          *(void *)(v118 + 368) = 0;
          *(void *)(v118 + 376) = 0;
          *(_OWORD *)(v118 + 360) = v188;
          *(void *)(v118 + 376) = v189;
          long long v188 = 0uLL;
          uint64_t v189 = 0;
          long long v127 = v190;
          *(_DWORD *)(v118 + 400) = v191;
          *(_OWORD *)(v118 + 384) = v127;
          a2[1] = v118 + 408;
        }
        if ((void)v183)
        {
          *((void *)&v183 + 1) = v183;
          operator delete((void *)v183);
        }
        unint64_t v138 = (void **)v180;
        if ((void)v180)
        {
          long long v139 = (void **)*((void *)&v180 + 1);
          long long v140 = (void *)v180;
          if (*((void *)&v180 + 1) != (void)v180)
          {
            do
              long long v139 = sub_4F31D0(v139 - 13);
            while (v139 != v138);
            long long v140 = (void *)v180;
          }
          *((void *)&v180 + 1) = v138;
          operator delete(v140);
        }
        if ((void)v171)
        {
          *((void *)&v171 + 1) = v171;
          operator delete((void *)v171);
        }
        if ((void)v169)
        {
          *((void *)&v169 + 1) = v169;
          operator delete((void *)v169);
        }
        uint64_t v48 = __p;
        if (!(void)__p) {
          goto LABEL_5;
        }
        uint64_t v141 = *((void *)&__p + 1);
        uint64_t v7 = (void *)__p;
        if (*((void *)&__p + 1) == (void)__p) {
          goto LABEL_4;
        }
        do
          uint64_t v141 = sub_4D4B58(v141 - 160);
        while (v141 != v48);
        goto LABEL_3;
      }
      BOOL result = sub_63AB24((uint64_t)v8);
      if (!result) {
        goto LABEL_6;
      }
      sub_872004(v5, (uint64_t *)v3, (uint64_t)&v160);
      unint64_t v134 = a2[1];
      if (v134 >= a2[2])
      {
        uint64_t v135 = sub_757E08(a2, (uint64_t)&v160);
      }
      else
      {
        sub_757C94(v146, a2[1], (uint64_t)&v160);
        uint64_t v135 = v134 + 408;
      }
      a2[1] = v135;
      if ((void)v188)
      {
        *((void *)&v188 + 1) = v188;
        operator delete((void *)v188);
      }
      if ((void)v183)
      {
        *((void *)&v183 + 1) = v183;
        operator delete((void *)v183);
      }
      long long v142 = (void **)v180;
      if ((void)v180)
      {
        long long v143 = (void **)*((void *)&v180 + 1);
        uint64_t v144 = (void *)v180;
        if (*((void *)&v180 + 1) != (void)v180)
        {
          do
            long long v143 = sub_4F31D0(v143 - 13);
          while (v143 != v142);
          uint64_t v144 = (void *)v180;
        }
        *((void *)&v180 + 1) = v142;
        operator delete(v144);
      }
      if ((void)v171)
      {
        *((void *)&v171 + 1) = v171;
        operator delete((void *)v171);
      }
      if ((void)v169)
      {
        *((void *)&v169 + 1) = v169;
        operator delete((void *)v169);
      }
      uint64_t v48 = __p;
      if ((void)__p)
      {
        uint64_t v145 = *((void *)&__p + 1);
        uint64_t v7 = (void *)__p;
        if (*((void *)&__p + 1) == (void)__p) {
          goto LABEL_4;
        }
        do
          uint64_t v145 = sub_4D4B58(v145 - 160);
        while (v145 != v48);
        goto LABEL_3;
      }
LABEL_5:
      BOOL result = sub_6396E0(a2[1] - 408, v8 + 1);
LABEL_6:
      v3 += 184;
      if (v3 == v4) {
        return result;
      }
    }
    sub_8718E4(v5, (uint64_t *)v3, (uint64_t)&v160);
    unint64_t v56 = a2[1];
    if (v56 >= a2[2])
    {
      uint64_t v96 = sub_757E08(a2, (uint64_t)&v160);
      uint64_t v97 = (void *)v188;
      a2[1] = v96;
      if (v97)
      {
        *((void *)&v188 + 1) = v97;
        operator delete(v97);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v56 = v160;
      *(void *)(v56 + 16) = 0;
      *(void *)(v56 + 24) = 0;
      *(void *)(v56 + 8) = 0;
      *(_OWORD *)(v56 + 8) = __p;
      *(void *)(v56 + 24) = v162;
      long long __p = 0uLL;
      uint64_t v162 = 0;
      long long v57 = v165;
      long long v58 = v163;
      *(_OWORD *)(v56 + 48) = v164;
      *(_OWORD *)(v56 + 64) = v57;
      *(_OWORD *)(v56 + 32) = v58;
      uint64_t v59 = v168;
      long long v60 = v167;
      *(_OWORD *)(v56 + 80) = v166;
      *(_OWORD *)(v56 + 96) = v60;
      *(void *)(v56 + 112) = v59;
      *(void *)(v56 + 120) = 0;
      *(void *)(v56 + 128) = 0;
      *(void *)(v56 + 136) = 0;
      *(_OWORD *)(v56 + 120) = v169;
      long long v169 = 0uLL;
      *(void *)(v56 + 136) = v170;
      *(void *)(v56 + 144) = 0;
      uint64_t v170 = 0;
      *(void *)(v56 + 152) = 0;
      *(void *)(v56 + 160) = 0;
      *(_OWORD *)(v56 + 144) = v171;
      *(void *)(v56 + 160) = v172;
      long long v171 = 0uLL;
      uint64_t v172 = 0;
      *(_OWORD *)(v56 + 168) = v173;
      *(_DWORD *)(v56 + 192) = v175;
      if (v175 <= 1) {
        *(void *)(v56 + 184) = v174;
      }
      *(_OWORD *)(v56 + 200) = v176;
      long long v61 = v177;
      uint64_t v62 = v179;
      *(_OWORD *)(v56 + 232) = v178;
      *(_OWORD *)(v56 + 216) = v61;
      *(void *)(v56 + 248) = v62;
      *(void *)(v56 + 256) = 0;
      *(void *)(v56 + 264) = 0;
      *(void *)(v56 + 272) = 0;
      *(_OWORD *)(v56 + 256) = v180;
      *(void *)(v56 + 272) = v181;
      long long v180 = 0uLL;
      uint64_t v181 = 0;
      *(unsigned char *)(v56 + 280) = v182;
      *(void *)(v56 + 288) = 0;
      *(void *)(v56 + 296) = 0;
      *(void *)(v56 + 304) = 0;
      *(_OWORD *)(v56 + 288) = v183;
      *(void *)(v56 + 304) = v184;
      long long v183 = 0uLL;
      uint64_t v184 = 0;
      long long v63 = *(_OWORD *)v185;
      *(_OWORD *)(v56 + 321) = *(_OWORD *)&v185[9];
      *(_OWORD *)(v56 + 312) = v63;
      long long v64 = v186;
      *(_DWORD *)(v56 + 356) = v187;
      *(_OWORD *)(v56 + 340) = v64;
      *(void *)(v56 + 360) = 0;
      *(void *)(v56 + 368) = 0;
      *(void *)(v56 + 376) = 0;
      *(_OWORD *)(v56 + 360) = v188;
      *(void *)(v56 + 376) = v189;
      long long v188 = 0uLL;
      uint64_t v189 = 0;
      long long v65 = v190;
      *(_DWORD *)(v56 + 400) = v191;
      *(_OWORD *)(v56 + 384) = v65;
      a2[1] = v56 + 408;
    }
    if ((void)v183)
    {
      *((void *)&v183 + 1) = v183;
      operator delete((void *)v183);
    }
    char v98 = (void **)v180;
    if ((void)v180)
    {
      char v99 = (void **)*((void *)&v180 + 1);
      long long v100 = (void *)v180;
      if (*((void *)&v180 + 1) != (void)v180)
      {
        do
          char v99 = sub_4F31D0(v99 - 13);
        while (v99 != v98);
        long long v100 = (void *)v180;
      }
      *((void *)&v180 + 1) = v98;
      operator delete(v100);
    }
    if ((void)v171)
    {
      *((void *)&v171 + 1) = v171;
      operator delete((void *)v171);
    }
    if ((void)v169)
    {
      *((void *)&v169 + 1) = v169;
      operator delete((void *)v169);
    }
    uint64_t v48 = __p;
    if (!(void)__p) {
      goto LABEL_5;
    }
    uint64_t v101 = *((void *)&__p + 1);
    uint64_t v7 = (void *)__p;
    if (*((void *)&__p + 1) == (void)__p) {
      goto LABEL_4;
    }
    do
      uint64_t v101 = sub_4D4B58(v101 - 160);
    while (v101 != v48);
LABEL_3:
    uint64_t v7 = (void *)__p;
    goto LABEL_4;
  }
  return result;
}