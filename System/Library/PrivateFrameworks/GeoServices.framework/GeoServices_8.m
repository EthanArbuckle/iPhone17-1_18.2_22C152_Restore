void sub_189465B7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894662B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersOfflineRegionSearchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompleteParametersOfflineRegionSearchReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    v9 = (int *)&GEOPDAutocompleteParametersOfflineRegionSearchReadAllFrom_recursiveTag;
  }
  else {
    v9 = (int *)&GEOPDAutocompleteParametersOfflineRegionSearchReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompleteParametersOfflineRegionSearchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18946645C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersOfflineRegionSearchReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteParametersOfflineRegionSearchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1894664C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894666B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersOfflineRegionSearchIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189466A60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189466DD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189467088(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersPoiAddressOnlyReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v68 = v17;
        char v69 = v9;
        char v70 = v18 | v17;
        if ((v18 | v9)) {
          v19 = 0;
        }
        else {
          v19 = a3;
        }
        v20 = (int *)MEMORY[0x1E4F940E8];
        v21 = (int *)MEMORY[0x1E4F940C8];
        char v71 = (v19 == 0) | v18;
        BOOL v72 = v18;
        v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_87;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_87:
      int v66 = 1;
      goto LABEL_88;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v72;
    if ((v71 & 1) == 0)
    {
      v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_107;
        }
        char v60 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_84;
      case 2:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_107;
          }
          char v60 = 8 * *(unsigned char *)(a1 + 60);
LABEL_84:
          v10 += v60 >> 7;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_107;
        }
        v44 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v44, (void *)v3))
        {
          PBReaderRecallMark();
          v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v44;
LABEL_53:

          --v10;
LABEL_85:
          v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_86:
          if (!(v70 & 1 | (v10 != 0))) {
            goto LABEL_87;
          }
          continue;
        }

LABEL_107:
        int v66 = 0;
        v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_88:
        v67 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
        if (v68) {
LABEL_89:
        }
          *(unsigned char *)(a1 + v67[63]) |= 4u;
        if (v72 || (v66 & 1) == 0)
        {
          *(unsigned char *)(a1 + v67[63]) |= 8u;
          *(unsigned char *)(a1 + v67[63]) |= 0x10u;
          goto LABEL_100;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              int v62 = *v19++;
              int v61 = v62;
              if (v62 == 1) {
                break;
              }
              if (v61 == 2)
              {
                char v63 = 16;
                goto LABEL_99;
              }
              if (!v61) {
                goto LABEL_100;
              }
            }
            char v63 = 8;
LABEL_99:
            *(unsigned char *)(a1 + v67[63]) |= v63;
            continue;
          }
        }
LABEL_100:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v72)
        {
          v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if ((v69 & 1) == 0) {
          goto LABEL_70;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v48 = *v20;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v30 = v46++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_75:
        *(_DWORD *)(a1 + 52) = v47;
        goto LABEL_86;
      case 4:
        if ((v69 & 1) == 0) {
          goto LABEL_70;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v55 = *v20;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v22) + v56);
            *(void *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              BOOL v30 = v53++ >= 9;
              if (v30)
              {
                uint64_t v54 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v54 = 0;
        }
LABEL_79:
        *(unsigned char *)(a1 + 56) = v54 != 0;
        goto LABEL_86;
      default:
        if ((v68 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          char v59 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v59 & 1) == 0)
          {
            int v66 = 0;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v66 = 0;
            v67 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
            goto LABEL_89;
          }
        }
        goto LABEL_86;
    }
  }
}

void sub_1894678F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189468028(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersPoiAddressOnlyReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompleteParametersPoiAddressOnlyReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDAutocompleteParametersPoiAddressOnlyReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDAutocompleteParametersPoiAddressOnlyReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompleteParametersPoiAddressOnlyReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1894681D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersPoiAddressOnlyReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteParametersPoiAddressOnlyReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189468234(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189468428(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersPoiAddressOnlyIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1894687D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189468B48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189468DFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersSiriSearchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFCFFFBFFFALL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v7;
        unsigned __int8 v18 = v16 | v11;
        char v77 = v17;
        char v78 = v8;
        char v79 = v18 | v17;
        if ((v18 | v8)) {
          v19 = 0;
        }
        else {
          v19 = a3;
        }
        char v80 = (v19 == 0) | v18;
        BOOL v81 = v18;
        v20 = (int *)MEMORY[0x1E4F940E8];
        v21 = (int *)MEMORY[0x1E4F940C8];
        v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_106;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_106:
      int v75 = 1;
      goto LABEL_107;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v81;
    if ((v80 & 1) == 0)
    {
      v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x20) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 32;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_123;
        }
        char v70 = 4 * *(unsigned char *)(a1 + 68);
        goto LABEL_103;
      case 2:
        if (!v34) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_123;
          }
          char v70 = 2 * *(unsigned char *)(a1 + 68);
LABEL_103:
          v9 += v70 >> 7;
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_123;
        }
        v44 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v44, (void *)v3))
        {
          PBReaderRecallMark();
          char v45 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v44;
LABEL_73:

          --v9;
LABEL_104:
          v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_105:
          if (!(v79 & 1 | (v9 != 0))) {
            goto LABEL_106;
          }
          continue;
        }

LABEL_123:
        int v75 = 0;
        v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_107:
        v76 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
        if (v77) {
LABEL_108:
        }
          *(unsigned char *)(a1 + v76[73]) |= 8u;
        if (v81 || (v75 & 1) == 0)
        {
          *(unsigned char *)(a1 + v76[73]) |= 0x20u;
          *(unsigned char *)(a1 + v76[73]) |= 0x40u;
          *(unsigned char *)(a1 + v76[73]) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            int v71 = *v19++;
            char v72 = 32;
            switch(v71)
            {
              case 0:
                goto LABEL_116;
              case 1:
                goto LABEL_115;
              case 2:
                char v72 = 64;
                goto LABEL_115;
              case 5:
                char v72 = 16;
LABEL_115:
                *(unsigned char *)(a1 + v76[73]) |= v72;
                break;
              default:
                continue;
            }
          }
        }
LABEL_116:
        if (v75) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v81)
        {
          v73 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if ((v78 & 1) == 0) {
          goto LABEL_82;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (2)
        {
          uint64_t v49 = *v20;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v22) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v30 = v47++ >= 9;
              if (v30)
              {
                LODWORD(v48) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v48) = 0;
        }
LABEL_87:
        *(_DWORD *)(a1 + 60) = v48;
        goto LABEL_105;
      case 4:
        if ((v78 & 1) == 0) {
          goto LABEL_82;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        *(unsigned char *)(a1 + 68) |= 4u;
        while (2)
        {
          uint64_t v56 = *v20;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v22) + v57);
            *(void *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v30 = v54++ >= 9;
              if (v30)
              {
                uint64_t v55 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v55 = 0;
        }
LABEL_91:
        BOOL v68 = v55 != 0;
        uint64_t v69 = 65;
        goto LABEL_96;
      case 5:
        if (!v34) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 24;
LABEL_72:
          char v45 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_123;
        }
        char v70 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_103;
      case 6:
        if ((v78 & 1) == 0) {
          goto LABEL_82;
        }
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v62 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (2)
        {
          uint64_t v63 = *v20;
          uint64_t v64 = *(void *)(v3 + v63);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(v3 + *v22) + v64);
            *(void *)(v3 + v63) = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              BOOL v30 = v61++ >= 9;
              if (v30)
              {
                uint64_t v62 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v62 = 0;
        }
LABEL_95:
        BOOL v68 = v62 != 0;
        uint64_t v69 = 64;
LABEL_96:
        *(unsigned char *)(a1 + v69) = v68;
        goto LABEL_105;
      default:
        if ((v77 & 1) == 0 || (*(unsigned char *)(a1 + 68) & 8) != 0)
        {
LABEL_82:
          char v67 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v67 & 1) == 0)
          {
            int v75 = 0;
            goto LABEL_107;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v75 = 0;
            v76 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
            goto LABEL_108;
          }
        }
        goto LABEL_105;
    }
  }
}

void sub_1894697D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189469AE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18946A3E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersSiriSearchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompleteParametersSiriSearchReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDAutocompleteParametersSiriSearchReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDAutocompleteParametersSiriSearchReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompleteParametersSiriSearchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18946A588(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersSiriSearchReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteParametersSiriSearchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18946A5EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18946A824(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersSiriSearchIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = *(unsigned __int8 *)(a1 + 68) > 0xFu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18946AC54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18946B0AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18946B36C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersVenueSearchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (const __int16 *)(a1 + 100);
  uint16x4_t v13 = (uint16x4_t)vld1_dup_s16(v12);
  int16x4_t v14 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v13, (uint16x4_t)0xFFFAFFF9FFF8FFF7), (int8x8_t)0x1000100010001);
  v14.i16[0] = vaddv_s16(v14);
  unsigned int v15 = v14.i32[0];
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 1;
        char v20 = v19 | v11;
        char v96 = v19 & ~(_BYTE)v11 | v7;
        char v97 = v8;
        char v99 = v19 | v11 | v96;
        if (((v19 | v11) | v8)) {
          v21 = 0;
        }
        else {
          v21 = a3;
        }
        v22 = (int *)MEMORY[0x1E4F940E8];
        char v100 = (v21 == 0) | v20;
        char v23 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v24 = (int *)MEMORY[0x1E4F940B8];
        char v98 = v19 | v11;
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v7;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v23)) {
      goto LABEL_141;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v22;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v32 = v26++ >= 9;
      if (v32)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_141:
      int v94 = 1;
      goto LABEL_142;
    }
    unint64_t v35 = v27 >> 3;
    BOOL v36 = v20;
    if ((v100 & 1) == 0)
    {
      int v37 = v21;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36) {
          goto LABEL_107;
        }
        if ((*(_WORD *)(a1 + 100) & 0x100) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          v42 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v41;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        __int16 v89 = *(_WORD *)(a1 + 100) << 7;
        goto LABEL_138;
      case 2:
        if (!v36) {
          goto LABEL_107;
        }
        if ((*(_WORD *)(a1 + 100) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_159;
          }
          __int16 v89 = *(_WORD *)(a1 + 100) << 6;
LABEL_138:
          v9 += v89 >> 15;
          goto LABEL_139;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_159;
        }
        char v46 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v46, (void *)v3))
        {
          PBReaderRecallMark();
          v42 = *(void **)(a1 + 72);
          *(void *)(a1 + 72) = v46;
LABEL_53:

          --v9;
LABEL_139:
          char v20 = v98;
          char v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_140:
          if (!(v99 & 1 | (v9 != 0))) {
            goto LABEL_141;
          }
          continue;
        }

LABEL_159:
        int v94 = 0;
        char v20 = v98;
        char v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_142:
        v95 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
        if (v96) {
LABEL_143:
        }
          *(_WORD *)(a1 + v95[85]) |= 0x40u;
        if (v20 & 1 | ((v94 & 1) == 0))
        {
          *(_WORD *)(a1 + v95[85]) |= 0x100u;
          *(_WORD *)(a1 + v95[85]) |= 0x200u;
          *(_WORD *)(a1 + v95[85]) |= 0x80u;
        }
        else if (v21)
        {
          while (1)
          {
            int v91 = *v21++;
            __int16 v90 = 256;
            switch(v91)
            {
              case 0:
                goto LABEL_152;
              case 1:
                goto LABEL_150;
              case 2:
                __int16 v90 = 512;
                goto LABEL_150;
              case 9:
                __int16 v90 = 128;
LABEL_150:
                *(_WORD *)(a1 + v95[85]) |= v90;
                break;
              default:
                continue;
            }
          }
        }
LABEL_152:
        if (v94)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v23) == 0;
          if ((v20 & 1) == 0) {
            return v3;
          }
LABEL_156:
          v92 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v20) {
            goto LABEL_156;
          }
        }
        return v3;
      case 3:
        if ((v97 & 1) == 0) {
          goto LABEL_107;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        *(_WORD *)(a1 + 100) |= 0x10u;
        while (2)
        {
          uint64_t v50 = *v22;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v24) + v51);
            *(void *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v32 = v48++ >= 9;
              if (v32)
              {
                LODWORD(v49) = 0;
                goto LABEL_112;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v49) = 0;
        }
LABEL_112:
        *(_DWORD *)(a1 + 92) = v49;
        goto LABEL_140;
      case 4:
        if ((v97 & 1) == 0) {
          goto LABEL_107;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0;
        *(_WORD *)(a1 + 100) |= 0x20u;
        while (2)
        {
          uint64_t v57 = *v22;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v24) + v58);
            *(void *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              BOOL v32 = v55++ >= 9;
              if (v32)
              {
                uint64_t v56 = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v56 = 0;
        }
LABEL_116:
        *(unsigned char *)(a1 + 96) = v56 != 0;
        goto LABEL_140;
      case 5:
        if ((v97 & 1) == 0) {
          goto LABEL_107;
        }
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v63 = 0;
        *(_WORD *)(a1 + 100) |= 8u;
        while (2)
        {
          uint64_t v64 = *v22;
          uint64_t v65 = *(void *)(v3 + v64);
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(v3 + *v24) + v65);
            *(void *)(v3 + v64) = v66;
            v63 |= (unint64_t)(v67 & 0x7F) << v61;
            if (v67 < 0)
            {
              v61 += 7;
              BOOL v32 = v62++ >= 9;
              if (v32)
              {
                uint64_t v63 = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v63 = 0;
        }
LABEL_120:
        uint64_t v88 = 64;
        goto LABEL_133;
      case 6:
        if ((v97 & 1) == 0) {
          goto LABEL_107;
        }
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v63 = 0;
        *(_WORD *)(a1 + 100) |= 2u;
        while (2)
        {
          uint64_t v70 = *v22;
          uint64_t v71 = *(void *)(v3 + v70);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(v3 + *v24) + v71);
            *(void *)(v3 + v70) = v72;
            v63 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              BOOL v32 = v69++ >= 9;
              if (v32)
              {
                uint64_t v63 = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v63 = 0;
        }
LABEL_124:
        uint64_t v88 = 40;
        goto LABEL_133;
      case 7:
        if ((v97 & 1) == 0) {
          goto LABEL_107;
        }
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v63 = 0;
        *(_WORD *)(a1 + 100) |= 4u;
        while (2)
        {
          uint64_t v76 = *v22;
          uint64_t v77 = *(void *)(v3 + v76);
          unint64_t v78 = v77 + 1;
          if (v77 == -1 || v78 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v79 = *(unsigned char *)(*(void *)(v3 + *v24) + v77);
            *(void *)(v3 + v76) = v78;
            v63 |= (unint64_t)(v79 & 0x7F) << v74;
            if (v79 < 0)
            {
              v74 += 7;
              BOOL v32 = v75++ >= 9;
              if (v32)
              {
                uint64_t v63 = 0;
                goto LABEL_128;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v63 = 0;
        }
LABEL_128:
        uint64_t v88 = 56;
        goto LABEL_133;
      case 8:
        if ((v97 & 1) == 0) {
          goto LABEL_107;
        }
        char v80 = 0;
        unsigned int v81 = 0;
        uint64_t v63 = 0;
        *(_WORD *)(a1 + 100) |= 1u;
        while (2)
        {
          uint64_t v82 = *v22;
          uint64_t v83 = *(void *)(v3 + v82);
          unint64_t v84 = v83 + 1;
          if (v83 == -1 || v84 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v85 = *(unsigned char *)(*(void *)(v3 + *v24) + v83);
            *(void *)(v3 + v82) = v84;
            v63 |= (unint64_t)(v85 & 0x7F) << v80;
            if (v85 < 0)
            {
              v80 += 7;
              BOOL v32 = v81++ >= 9;
              if (v32)
              {
                uint64_t v63 = 0;
                goto LABEL_132;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v63 = 0;
        }
LABEL_132:
        uint64_t v88 = 24;
LABEL_133:
        *(void *)(a1 + v88) = v63;
        goto LABEL_140;
      case 9:
        if (!v36 || (*(_WORD *)(a1 + 100) & 0x80) != 0) {
          goto LABEL_107;
        }
        v86 = PBReaderReadString();
        if (v86) {
          -[GEOPDAutocompleteParametersVenueSearch _addNoFlagsCategory:](a1, v86);
        }

        goto LABEL_139;
      default:
        if ((v96 & 1) == 0 || (*(_WORD *)(a1 + 100) & 0x40) != 0)
        {
LABEL_107:
          char v87 = PBReaderSkipValueWithTag();
          char v23 = (int *)MEMORY[0x1E4F940C8];
          char v20 = v98;
          if ((v87 & 1) == 0)
          {
            int v94 = 0;
            goto LABEL_142;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            v44 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v43;
          }
          int v45 = PBUnknownFieldAdd();
          char v20 = v98;
          char v23 = (int *)MEMORY[0x1E4F940C8];
          if (!v45)
          {
            int v94 = 0;
            v95 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
            goto LABEL_143;
          }
        }
        goto LABEL_140;
    }
  }
}

void sub_18946BF7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18946C468(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18946D278(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersVenueSearchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompleteParametersVenueSearchReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDAutocompleteParametersVenueSearchReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDAutocompleteParametersVenueSearchReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompleteParametersVenueSearchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 72) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_18946D420(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersVenueSearchReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteParametersVenueSearchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18946D484(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18946D7C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersVenueSearchIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  BOOL v2 = (*(_WORD *)(a1 + 100) & 0x780) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return v2;
}

void sub_18946DE14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18946E44C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18946E710(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32((uint32x4_t)vdupq_n_s32(*(_DWORD *)(a1 + 104)), (uint32x4_t)xmmword_18A62F540), v13))+ ((*(_DWORD *)(a1 + 104) >> 14) & 1)+ ((*(_DWORD *)(a1 + 104) >> 15) & 1)+ ((*(_DWORD *)(a1 + 104) >> 11) & 1);
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v16 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v18 = v14 > 3;
        char v19 = v18 | v11;
        char v132 = v18 & ~(_BYTE)v11 | v9;
        char v133 = v8;
        char v135 = v18 | v11 | v132;
        if (((v18 | v11) | v8)) {
          char v20 = 0;
        }
        else {
          char v20 = a3;
        }
        char v136 = (v20 == 0) | v19;
        v21 = (int *)MEMORY[0x1E4F940E8];
        v22 = (int *)MEMORY[0x1E4F940C8];
        char v23 = (int *)MEMORY[0x1E4F940B8];
        char v134 = v18 | v11;
        break;
      default:
        ++v14;
LABEL_7:
        uint64_t v15 = v9;
LABEL_8:
        uint64_t v16 = v10;
        uint64_t v17 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        uint64_t v11 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_223;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_223:
      int v131 = 1;
      goto LABEL_224;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v19;
    if ((v136 & 1) == 0)
    {
      BOOL v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35 || (*(unsigned char *)(a1 + v12[147] + 2) & 1) != 0) {
          goto LABEL_166;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_248;
        }
        BOOL v40 = objc_alloc_init(GEOPDAutocompleteResultSection);
        if (!GEOPDAutocompleteResultSectionReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_247;
        }
        PBReaderRecallMark();
        -[GEOPDAutocompleteResult _addNoFlagsSections:](a1, v40);
        goto LABEL_100;
      case 2:
        if ((v133 & 1) == 0) {
          goto LABEL_166;
        }
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(_DWORD *)(a1 + v12[147]) |= 8u;
        while (2)
        {
          uint64_t v44 = *v21;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(v3 + *v23) + v45);
            *(void *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v31 = v42++ >= 9;
              if (v31)
              {
                uint64_t v43 = 0;
                goto LABEL_171;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v43 = 0;
        }
LABEL_171:
        BOOL v122 = v43 != 0;
        uint64_t v123 = 96;
        goto LABEL_213;
      case 3:
        if ((v133 & 1) == 0) {
          goto LABEL_166;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        *(_DWORD *)(a1 + v12[147]) |= 0x100u;
        while (2)
        {
          uint64_t v51 = *v21;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v23) + v52);
            *(void *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v31 = v49++ >= 9;
              if (v31)
              {
                uint64_t v50 = 0;
                goto LABEL_175;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v50 = 0;
        }
LABEL_175:
        BOOL v122 = v50 != 0;
        uint64_t v123 = 101;
        goto LABEL_213;
      case 4:
        if ((v133 & 1) == 0) {
          goto LABEL_166;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v57 = 0;
        *(_DWORD *)(a1 + v12[147]) |= 4u;
        while (2)
        {
          uint64_t v58 = *v21;
          uint64_t v59 = *(void *)(v3 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(v3 + *v23) + v59);
            *(void *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              BOOL v31 = v56++ >= 9;
              if (v31)
              {
                LODWORD(v57) = 0;
                goto LABEL_179;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v57) = 0;
        }
LABEL_179:
        uint64_t v124 = 92;
        goto LABEL_208;
      case 5:
        if ((v133 & 1) == 0) {
          goto LABEL_166;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0;
        *(_DWORD *)(a1 + v12[147]) |= 0x20u;
        while (2)
        {
          uint64_t v65 = *v21;
          uint64_t v66 = *(void *)(v3 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(v3 + *v23) + v66);
            *(void *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              BOOL v31 = v63++ >= 9;
              if (v31)
              {
                uint64_t v64 = 0;
                goto LABEL_183;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v64 = 0;
        }
LABEL_183:
        BOOL v122 = v64 != 0;
        uint64_t v123 = 98;
        goto LABEL_213;
      case 6:
        if (!v35 || (*(unsigned char *)(a1 + v12[147] + 2) & 2) != 0) {
          goto LABEL_166;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_248;
        }
        BOOL v40 = objc_alloc_init(GEOPDAutocompleteResultSortPriorityMapping);
        if (!GEOPDAutocompleteResultSortPriorityMappingReadAllFrom((uint64_t)v40, (void *)v3)) {
          goto LABEL_247;
        }
        PBReaderRecallMark();
        -[GEOPDAutocompleteResult _addNoFlagsSortPriorityMapping:](a1, v40);
        goto LABEL_100;
      case 7:
        if ((v133 & 1) == 0) {
          goto LABEL_166;
        }
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v71 = 0;
        *(_DWORD *)(a1 + v12[147]) |= 0x40u;
        while (2)
        {
          uint64_t v72 = *v21;
          uint64_t v73 = *(void *)(v3 + v72);
          unint64_t v74 = v73 + 1;
          if (v73 == -1 || v74 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(v3 + *v23) + v73);
            *(void *)(v3 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              BOOL v31 = v70++ >= 9;
              if (v31)
              {
                uint64_t v71 = 0;
                goto LABEL_187;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v71 = 0;
        }
LABEL_187:
        BOOL v122 = v71 != 0;
        uint64_t v123 = 99;
        goto LABEL_213;
      case 15:
        if (!v35 || (*(unsigned char *)(a1 + v12[147] + 1) & 0x20) != 0) {
          goto LABEL_166;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_248;
        }
        BOOL v40 = objc_alloc_init(GEOPDClientRankingFeatureMetadata);
        if (!GEOPDClientRankingFeatureMetadataReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_247;
        }
        PBReaderRecallMark();
        -[GEOPDAutocompleteResult _addNoFlagsClientRankingFeatureMetadata:](a1, v40);
LABEL_100:

        goto LABEL_133;
      case 16:
        if ((v133 & 1) == 0) {
          goto LABEL_166;
        }
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v81 = 0;
        *(_DWORD *)(a1 + v12[147]) |= 0x80u;
        while (2)
        {
          uint64_t v82 = *v21;
          uint64_t v83 = *(void *)(v3 + v82);
          unint64_t v84 = v83 + 1;
          if (v83 == -1 || v84 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v85 = *(unsigned char *)(*(void *)(v3 + *v23) + v83);
            *(void *)(v3 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              BOOL v31 = v80++ >= 9;
              if (v31)
              {
                uint64_t v81 = 0;
                goto LABEL_191;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v81 = 0;
        }
LABEL_191:
        BOOL v122 = v81 != 0;
        uint64_t v123 = 100;
        goto LABEL_213;
      case 17:
        if (!v35) {
          goto LABEL_166;
        }
        if ((*(unsigned char *)(a1 + v12[147] + 1) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_248;
          }
          unsigned int v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
          int v125 = (int)(*(_DWORD *)(a1 + 104) << 19) >> 31;
          goto LABEL_220;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_248;
        }
        BOOL v40 = objc_alloc_init(GEOPDAutocompleteSessionData);
        if (!GEOPDAutocompleteSessionDataReadAllFrom((uint64_t)v40, (void *)v3)) {
          goto LABEL_247;
        }
        PBReaderRecallMark();
        uint64_t v86 = 24;
        goto LABEL_132;
      case 18:
        if (!v35) {
          goto LABEL_166;
        }
        if ((*(unsigned char *)(a1 + v12[147] + 1) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_248;
          }
          unsigned int v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
          int v125 = (int)(*(_DWORD *)(a1 + 104) << 17) >> 31;
          goto LABEL_220;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_248;
        }
        BOOL v40 = objc_alloc_init(GEOPDParsecQueryRankingFeatures);
        if (!GEOPDParsecQueryRankingFeaturesReadAllFrom((uint64_t)v40, (void *)v3)) {
          goto LABEL_247;
        }
        PBReaderRecallMark();
        uint64_t v86 = 40;
        goto LABEL_132;
      case 19:
        if ((v133 & 1) == 0) {
          goto LABEL_166;
        }
        char v87 = 0;
        unsigned int v88 = 0;
        uint64_t v89 = 0;
        *(_DWORD *)(a1 + v12[147]) |= 0x200u;
        while (2)
        {
          uint64_t v90 = *v21;
          uint64_t v91 = *(void *)(v3 + v90);
          unint64_t v92 = v91 + 1;
          if (v91 == -1 || v92 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v93 = *(unsigned char *)(*(void *)(v3 + *v23) + v91);
            *(void *)(v3 + v90) = v92;
            v89 |= (unint64_t)(v93 & 0x7F) << v87;
            if (v93 < 0)
            {
              v87 += 7;
              BOOL v31 = v88++ >= 9;
              if (v31)
              {
                uint64_t v89 = 0;
                goto LABEL_195;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v89 = 0;
        }
LABEL_195:
        BOOL v122 = v89 != 0;
        uint64_t v123 = 102;
        goto LABEL_213;
      case 20:
        if (!v35) {
          goto LABEL_166;
        }
        if ((*(unsigned char *)(a1 + v12[147] + 1) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_248;
          }
          unsigned int v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
          int v125 = (int)(*(_DWORD *)(a1 + 104) << 16) >> 31;
LABEL_220:
          v7 += v125;
LABEL_221:
          char v19 = v134;
          v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_222:
          if (!(v135 & 1 | (v7 != 0))) {
            goto LABEL_223;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_248;
        }
        BOOL v40 = objc_alloc_init(GEOPDPlaceSummaryLayoutMetadata);
        if (GEOPDPlaceSummaryLayoutMetadataReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v86 = 48;
LABEL_132:
          int v94 = *(void **)(a1 + v86);
          *(void *)(a1 + v86) = v40;

          --v7;
LABEL_133:
          unsigned int v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
          goto LABEL_221;
        }
LABEL_247:

LABEL_248:
        int v131 = 0;
        unsigned int v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        char v19 = v134;
        v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_224:
        if (v132) {
LABEL_225:
        }
          *(_DWORD *)(a1 + v12[147]) |= 0x800u;
        if (v19 & 1 | ((v131 & 1) == 0))
        {
          *(_DWORD *)(a1 + v12[147]) |= 0x10000u;
          *(_DWORD *)(a1 + v12[147]) |= 0x20000u;
          *(_DWORD *)(a1 + v12[147]) |= 0x2000u;
          *(_DWORD *)(a1 + v12[147]) |= 0x1000u;
          *(_DWORD *)(a1 + v12[147]) |= 0x4000u;
          *(_DWORD *)(a1 + v12[147]) |= 0x8000u;
          goto LABEL_241;
        }
        if (v20)
        {
          while (1)
          {
            while (1)
            {
              int v127 = *v20++;
              int v126 = v127;
              if (v127 <= 14) {
                break;
              }
              switch(v126)
              {
                case 15:
                  int v128 = 0x2000;
                  goto LABEL_239;
                case 17:
                  int v128 = 4096;
                  goto LABEL_239;
                case 18:
                  int v128 = 0x4000;
                  goto LABEL_239;
                case 20:
                  int v128 = 0x8000;
                  goto LABEL_239;
                default:
                  continue;
              }
            }
            if (v126 == 1) {
              break;
            }
            if (v126 == 6)
            {
              int v128 = 0x20000;
LABEL_239:
              *(_DWORD *)(a1 + v12[147]) |= v128;
              continue;
            }
            if (!v126) {
              goto LABEL_241;
            }
          }
          int v128 = 0x10000;
          goto LABEL_239;
        }
LABEL_241:
        if (v131)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
          if ((v19 & 1) == 0) {
            return v3;
          }
LABEL_245:
          v129 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v19) {
            goto LABEL_245;
          }
        }
        return v3;
      case 21:
        if ((v133 & 1) == 0) {
          goto LABEL_166;
        }
        char v95 = 0;
        unsigned int v96 = 0;
        uint64_t v97 = 0;
        *(_DWORD *)(a1 + v12[147]) |= 0x400u;
        while (2)
        {
          uint64_t v98 = *v21;
          uint64_t v99 = *(void *)(v3 + v98);
          unint64_t v100 = v99 + 1;
          if (v99 == -1 || v100 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v101 = *(unsigned char *)(*(void *)(v3 + *v23) + v99);
            *(void *)(v3 + v98) = v100;
            v97 |= (unint64_t)(v101 & 0x7F) << v95;
            if (v101 < 0)
            {
              v95 += 7;
              BOOL v31 = v96++ >= 9;
              if (v31)
              {
                uint64_t v97 = 0;
                goto LABEL_199;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v97 = 0;
        }
LABEL_199:
        BOOL v122 = v97 != 0;
        uint64_t v123 = 103;
        goto LABEL_213;
      case 22:
        if ((v133 & 1) == 0) {
          goto LABEL_166;
        }
        char v102 = 0;
        unsigned int v103 = 0;
        uint64_t v57 = 0;
        *(_DWORD *)(a1 + v12[147]) |= 1u;
        while (2)
        {
          uint64_t v104 = *v21;
          uint64_t v105 = *(void *)(v3 + v104);
          unint64_t v106 = v105 + 1;
          if (v105 == -1 || v106 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v107 = *(unsigned char *)(*(void *)(v3 + *v23) + v105);
            *(void *)(v3 + v104) = v106;
            v57 |= (unint64_t)(v107 & 0x7F) << v102;
            if (v107 < 0)
            {
              v102 += 7;
              BOOL v31 = v103++ >= 9;
              if (v31)
              {
                LODWORD(v57) = 0;
                goto LABEL_203;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v57) = 0;
        }
LABEL_203:
        uint64_t v124 = 84;
        goto LABEL_208;
      case 23:
        if ((v133 & 1) == 0) {
          goto LABEL_166;
        }
        char v108 = 0;
        unsigned int v109 = 0;
        uint64_t v57 = 0;
        *(_DWORD *)(a1 + v12[147]) |= 2u;
        while (2)
        {
          uint64_t v110 = *v21;
          uint64_t v111 = *(void *)(v3 + v110);
          unint64_t v112 = v111 + 1;
          if (v111 == -1 || v112 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v113 = *(unsigned char *)(*(void *)(v3 + *v23) + v111);
            *(void *)(v3 + v110) = v112;
            v57 |= (unint64_t)(v113 & 0x7F) << v108;
            if (v113 < 0)
            {
              v108 += 7;
              BOOL v31 = v109++ >= 9;
              if (v31)
              {
                LODWORD(v57) = 0;
                goto LABEL_207;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v57) = 0;
        }
LABEL_207:
        uint64_t v124 = 88;
LABEL_208:
        *(_DWORD *)(a1 + v124) = v57;
        goto LABEL_222;
      case 24:
        if ((v133 & 1) == 0) {
          goto LABEL_166;
        }
        char v114 = 0;
        unsigned int v115 = 0;
        uint64_t v116 = 0;
        *(_DWORD *)(a1 + v12[147]) |= 0x10u;
        while (2)
        {
          uint64_t v117 = *v21;
          uint64_t v118 = *(void *)(v3 + v117);
          unint64_t v119 = v118 + 1;
          if (v118 == -1 || v119 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v120 = *(unsigned char *)(*(void *)(v3 + *v23) + v118);
            *(void *)(v3 + v117) = v119;
            v116 |= (unint64_t)(v120 & 0x7F) << v114;
            if (v120 < 0)
            {
              v114 += 7;
              BOOL v31 = v115++ >= 9;
              if (v31)
              {
                uint64_t v116 = 0;
                goto LABEL_212;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v116 = 0;
        }
LABEL_212:
        BOOL v122 = v116 != 0;
        uint64_t v123 = 97;
LABEL_213:
        *(unsigned char *)(a1 + v123) = v122;
        goto LABEL_222;
      default:
        if ((v132 & 1) == 0 || (*(unsigned char *)(a1 + v12[147] + 1) & 8) != 0)
        {
LABEL_166:
          char v121 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E4F940C8];
          char v19 = v134;
          unsigned int v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
          if ((v121 & 1) == 0)
          {
            int v131 = 0;
            goto LABEL_224;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v76 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v77 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v76;
          }
          int v78 = PBUnknownFieldAdd();
          unsigned int v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
          char v19 = v134;
          v22 = (int *)MEMORY[0x1E4F940C8];
          if (!v78)
          {
            int v131 = 0;
            goto LABEL_225;
          }
        }
        goto LABEL_222;
    }
  }
}

void sub_18946FA04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18946FC34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18946FE64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189470078(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189470CD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189470DC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189473484(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteResultCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v2 = a1[7];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v26;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v26 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDAutocompleteResultSection readAll:](*(void *)(*((void *)&v25 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v4);
  }

  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v7 = a1[8];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v22;
    while (1)
    {
      if (*(void *)v22 != v10) {
        objc_enumerationMutation(v7);
      }
      if (!--v9)
      {
        uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
        if (!v9) {
          break;
        }
      }
    }
  }

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v11 = a1[4];
  uint64_t v12 = [v11 countByEnumeratingWithState:&v17 objects:v29 count:16];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)v18;
    do
    {
      uint64_t v15 = 0;
      do
      {
        if (*(void *)v18 != v14) {
          objc_enumerationMutation(v11);
        }
        -[GEOPDClientRankingFeatureMetadata readAll:](*(void *)(*((void *)&v17 + 1) + 8 * v15++), 1);
      }
      while (v13 != v15);
      uint64_t v13 = [v11 countByEnumeratingWithState:&v17 objects:v29 count:16];
    }
    while (v13);
  }

  objc_msgSend(a1[3], "readAll:", 1, (void)v17);
  return [a1[6] readAll:1];
}

unint64_t GEOPDAutocompleteResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompleteResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDAutocompleteResultReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDAutocompleteResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompleteResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDAutocompleteResultCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189473860(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189473D6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteResultIsDirty(uint64_t a1)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  int v2 = *(_DWORD *)(a1 + 104);
  if ((v2 & 0x77000) != 0) {
    return 1;
  }
  if ((v2 & 0x8000) == 0)
  {
LABEL_6:
    if ((v2 & 0x10000) != 0)
    {
      long long v20 = 0u;
      long long v21 = 0u;
      long long v18 = 0u;
      long long v19 = 0u;
      id v4 = *(id *)(a1 + 56);
      uint64_t v5 = [v4 countByEnumeratingWithState:&v18 objects:v23 count:16];
      if (v5)
      {
        uint64_t v6 = v5;
        uint64_t v7 = *(void *)v19;
LABEL_9:
        uint64_t v8 = 0;
        while (1)
        {
          if (*(void *)v19 != v7) {
            objc_enumerationMutation(v4);
          }
          uint64_t v9 = *(void *)(*((void *)&v18 + 1) + 8 * v8);
          if (v9)
          {
            os_unfair_lock_lock_with_options();
            os_unfair_lock_assert_owner((const os_unfair_lock *)(v9 + 120));
            int v10 = *(_WORD *)(v9 + 144) & 0x7E00;
            os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 120));
            if (v10) {
              goto LABEL_28;
            }
          }
          if (v6 == ++v8)
          {
            uint64_t v6 = [v4 countByEnumeratingWithState:&v18 objects:v23 count:16];
            if (v6) {
              goto LABEL_9;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 104);
    }
    if ((v2 & 0x2000) == 0) {
      return 0;
    }
    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    id v4 = *(id *)(a1 + 32);
    uint64_t v3 = [v4 countByEnumeratingWithState:&v14 objects:v22 count:16];
    if (!v3)
    {
LABEL_29:

      return v3;
    }
    uint64_t v11 = *(void *)v15;
LABEL_21:
    uint64_t v12 = 0;
    while (1)
    {
      if (*(void *)v15 != v11) {
        objc_enumerationMutation(v4);
      }
      if (GEOPDClientRankingFeatureMetadataIsDirty(*(void *)(*((void *)&v14 + 1) + 8 * v12))) {
        break;
      }
      if (v3 == ++v12)
      {
        uint64_t v3 = [v4 countByEnumeratingWithState:&v14 objects:v22 count:16];
        if (v3) {
          goto LABEL_21;
        }
        goto LABEL_29;
      }
    }
LABEL_28:
    uint64_t v3 = 1;
    goto LABEL_29;
  }
  if ((GEOPDPlaceSummaryLayoutMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) == 0)
  {
    int v2 = *(_DWORD *)(a1 + 104);
    goto LABEL_6;
  }
  return 1;
}

unint64_t GEOPDAutocompleteResultClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  -[GEOPDAutocompleteResult _readSections](a1);
  unint64_t result = [*(id *)(a1 + 56) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      uint64_t v8 = [*(id *)(a1 + 56) objectAtIndexedSubscript:i];
      uint64_t v9 = v8;
      if (a3 && GEOPDAutocompleteResultSectionHasSensitiveFields(v8, a2))
      {
        int v10 = (void *)[v9 copy];
        GEOPDAutocompleteResultSectionClearSensitiveFields((uint64_t)v10, a2, 0);
        [*(id *)(a1 + 56) replaceObjectAtIndex:i withObject:v10];
      }
      else if (v9)
      {
        GEOPDAutocompleteResultSectionClearSensitiveFields((uint64_t)v9, a2, 1);
      }

      unint64_t result = [*(id *)(a1 + 56) count];
    }
  }
  return result;
}

uint64_t GEOPDAutocompleteResultHasSensitiveFields(id *a1, uint64_t a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  uint64_t v3 = -[GEOPDAutocompleteResult sections](a1);
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    while (2)
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDAutocompleteResultSectionHasSensitiveFields(*(id **)(*((void *)&v10 + 1) + 8 * v7), a2))
        {
          uint64_t v8 = 1;
          goto LABEL_12;
        }
        ++v7;
      }
      while (v5 != v7);
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
  uint64_t v8 = 0;
LABEL_12:

  return v8;
}

uint64_t GEOPDAutocompleteResultSectionHasSensitiveFields(id *a1, uint64_t a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  uint64_t v3 = -[GEOPDAutocompleteResultSection entries](a1);
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    while (2)
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDAutocompleteEntryHasSensitiveFields(*(void **)(*((void *)&v10 + 1) + 8 * v7), a2))
        {
          uint64_t v8 = 1;
          goto LABEL_12;
        }
        ++v7;
      }
      while (v5 != v7);
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
  uint64_t v8 = 0;
LABEL_12:

  return v8;
}

unint64_t GEOPDAutocompleteResultSectionClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  -[GEOPDAutocompleteResultSection _readEntries](a1);
  unint64_t result = [*(id *)(a1 + 96) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      uint64_t v8 = [*(id *)(a1 + 96) objectAtIndexedSubscript:i];
      uint64_t v9 = v8;
      if (a3 && GEOPDAutocompleteEntryHasSensitiveFields(v8, a2))
      {
        long long v10 = (void *)[v9 copy];
        long long v11 = [v10 business];
        [v11 clearSensitiveFields:a2];

        [*(id *)(a1 + 96) replaceObjectAtIndex:i withObject:v10];
      }
      else
      {
        [v9 clearSensitiveFields:a2];
      }

      unint64_t result = [*(id *)(a1 + 96) count];
    }
  }
  return result;
}

void sub_189474974(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18947522C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteResultSectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 116);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 112)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  long long v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  unsigned int v13 = (unsigned __int16)(vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 144)), (uint16x4_t)0xFFF5FFF7FFF3FFF4) & 0xFF81FF81FF81FF81))+ ((*(_WORD *)(a1 + 144) >> 10) & 1)+ (HIBYTE(*(_WORD *)(a1 + 144)) & 1));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 3;
        char v18 = v17 & ~(_BYTE)v11 | v9;
        char v19 = v17 | v11;
        if (((v17 | v11) | v8)) {
          long long v20 = 0;
        }
        else {
          long long v20 = a3;
        }
        long long v21 = (int *)MEMORY[0x1E4F940E8];
        int v160 = 1;
        long long v22 = (int *)MEMORY[0x1E4F940C8];
        char v23 = v17 & ~(_BYTE)v11 | v9;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_234;
        }
        char v158 = v18;
        char v161 = v19 | v18;
        char v162 = (v20 == 0) | v19;
        uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
        char v159 = v19;
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v9;
LABEL_8:
        uint64_t v15 = v10;
        uint64_t v16 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v14;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  while (!*(unsigned char *)(v3 + *v22))
  {
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v21;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v32 = v26++ >= 9;
      if (v32)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    int v34 = v27 & 7;
    if (v33 || v34 == 4) {
      break;
    }
    unint64_t v36 = v27 >> 3;
    BOOL v37 = v19;
    if ((v162 & 1) == 0)
    {
      int v38 = v20;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_165;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + v12[165]) |= 8u;
        while (1)
        {
          uint64_t v45 = *v21;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
            break;
          }
          char v48 = *(unsigned char *)(*(void *)(v3 + *v24) + v46);
          *(void *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0) {
            goto LABEL_169;
          }
          v42 += 7;
          BOOL v32 = v43++ >= 9;
          if (v32)
          {
            LODWORD(v44) = 0;
            goto LABEL_171;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_169:
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v44) = 0;
        }
LABEL_171:
        uint64_t v130 = 136;
        goto LABEL_196;
      case 2:
        if (!v37) {
          goto LABEL_165;
        }
        if ((*(_WORD *)(a1 + v12[165]) & 0x2000) == 0)
        {
          uint64_t v52 = PBReaderReadString();
          unint64_t v53 = *(void **)(a1 + 104);
          *(void *)(a1 + 104) = v52;

          --v7;
          goto LABEL_227;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_253;
        }
        long long v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        v7 += *(unsigned __int16 *)(a1 + 144) << 18 >> 31;
        char v19 = v159;
        long long v22 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_229;
      case 3:
        if (!v37 || (*(_WORD *)(a1 + v12[165]) & 0x1000) != 0)
        {
          char v128 = PBReaderSkipValueWithTag();
          long long v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
          char v19 = v159;
          long long v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
          if ((v128 & 1) == 0) {
            goto LABEL_251;
          }
          goto LABEL_230;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_253;
        }
        char v54 = objc_alloc_init(GEOPDAutocompleteEntry);
        if (GEOPDAutocompleteEntryReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDAutocompleteResultSection _addNoFlagsEntries:](a1, v54);

LABEL_227:
          char v19 = v159;
          long long v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_228:
          long long v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
LABEL_229:
          uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_230;
        }

LABEL_253:
        int v160 = 0;
        char v19 = v159;
        long long v22 = (int *)MEMORY[0x1E4F940C8];
        long long v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        if (v158) {
LABEL_235:
        }
          *(_WORD *)(a1 + v12[165]) |= 0x100u;
LABEL_236:
        if (v19 & 1 | ((v160 & 1) == 0))
        {
          *(_WORD *)(a1 + v12[165]) |= 0x2000u;
          *(_WORD *)(a1 + v12[165]) |= 0x1000u;
          *(_WORD *)(a1 + v12[165]) |= 0x200u;
          *(_WORD *)(a1 + v12[165]) |= 0x800u;
          *(_WORD *)(a1 + v12[165]) |= 0x400u;
        }
        else if (v20)
        {
          while (1)
          {
            int v154 = *v20++;
            __int16 v155 = 0x2000;
            switch(v154)
            {
              case 0:
                goto LABEL_245;
              case 2:
                goto LABEL_244;
              case 3:
                __int16 v155 = 4096;
                goto LABEL_244;
              case 11:
                __int16 v155 = 512;
                goto LABEL_244;
              case 12:
                __int16 v155 = 2048;
                goto LABEL_244;
              case 13:
                __int16 v155 = 1024;
LABEL_244:
                *(_WORD *)(a1 + v12[165]) |= v155;
                break;
              default:
                continue;
            }
          }
        }
LABEL_245:
        if (v160)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
          if ((v19 & 1) == 0) {
            return v3;
          }
LABEL_249:
          v156 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v19) {
            goto LABEL_249;
          }
        }
        return v3;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_165;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + v12[165]) |= 4u;
        while (2)
        {
          uint64_t v57 = *v21;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v24) + v58);
            *(void *)(v3 + v57) = v59;
            v44 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              BOOL v32 = v56++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_175;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v44) = 0;
        }
LABEL_175:
        uint64_t v130 = 132;
        goto LABEL_196;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_165;
        }
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + v12[165]) |= 2u;
        while (2)
        {
          uint64_t v63 = *v21;
          uint64_t v64 = *(void *)(v3 + v63);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(v3 + *v24) + v64);
            *(void *)(v3 + v63) = v65;
            v44 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              BOOL v32 = v62++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_179;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v44) = 0;
        }
LABEL_179:
        uint64_t v130 = 128;
        goto LABEL_196;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_165;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v69 = 0;
        *(_WORD *)(a1 + v12[165]) |= 0x80u;
        while (2)
        {
          uint64_t v70 = *v21;
          uint64_t v71 = *(void *)(v3 + v70);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(v3 + *v24) + v71);
            *(void *)(v3 + v70) = v72;
            v69 |= (unint64_t)(v73 & 0x7F) << v67;
            if (v73 < 0)
            {
              v67 += 7;
              BOOL v32 = v68++ >= 9;
              if (v32)
              {
                uint64_t v69 = 0;
                goto LABEL_183;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v69 = 0;
        }
LABEL_183:
        BOOL v131 = v69 != 0;
        uint64_t v132 = 143;
        goto LABEL_201;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_165;
        }
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v76 = 0;
        *(_WORD *)(a1 + v12[165]) |= 0x20u;
        while (2)
        {
          uint64_t v77 = *v21;
          uint64_t v78 = *(void *)(v3 + v77);
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v80 = *(unsigned char *)(*(void *)(v3 + *v24) + v78);
            *(void *)(v3 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              BOOL v32 = v75++ >= 9;
              if (v32)
              {
                uint64_t v76 = 0;
                goto LABEL_187;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v76 = 0;
        }
LABEL_187:
        BOOL v131 = v76 != 0;
        uint64_t v132 = 141;
        goto LABEL_201;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_165;
        }
        char v81 = 0;
        unsigned int v82 = 0;
        uint64_t v83 = 0;
        *(_WORD *)(a1 + v12[165]) |= 0x10u;
        while (2)
        {
          uint64_t v84 = *v21;
          uint64_t v85 = *(void *)(v3 + v84);
          unint64_t v86 = v85 + 1;
          if (v85 == -1 || v86 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v87 = *(unsigned char *)(*(void *)(v3 + *v24) + v85);
            *(void *)(v3 + v84) = v86;
            v83 |= (unint64_t)(v87 & 0x7F) << v81;
            if (v87 < 0)
            {
              v81 += 7;
              BOOL v32 = v82++ >= 9;
              if (v32)
              {
                uint64_t v83 = 0;
                goto LABEL_191;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v83 = 0;
        }
LABEL_191:
        BOOL v131 = v83 != 0;
        uint64_t v132 = 140;
        goto LABEL_201;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_165;
        }
        char v88 = 0;
        unsigned int v89 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + v12[165]) |= 1u;
        while (2)
        {
          uint64_t v90 = *v21;
          uint64_t v91 = *(void *)(v3 + v90);
          unint64_t v92 = v91 + 1;
          if (v91 == -1 || v92 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v93 = *(unsigned char *)(*(void *)(v3 + *v24) + v91);
            *(void *)(v3 + v90) = v92;
            v44 |= (unint64_t)(v93 & 0x7F) << v88;
            if (v93 < 0)
            {
              v88 += 7;
              BOOL v32 = v89++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_195;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v44) = 0;
        }
LABEL_195:
        uint64_t v130 = 124;
LABEL_196:
        *(_DWORD *)(a1 + v130) = v44;
        goto LABEL_230;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_165;
        }
        char v94 = 0;
        unsigned int v95 = 0;
        uint64_t v96 = 0;
        *(_WORD *)(a1 + v12[165]) |= 0x40u;
        while (2)
        {
          uint64_t v97 = *v21;
          uint64_t v98 = *(void *)(v3 + v97);
          unint64_t v99 = v98 + 1;
          if (v98 == -1 || v99 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v100 = *(unsigned char *)(*(void *)(v3 + *v24) + v98);
            *(void *)(v3 + v97) = v99;
            v96 |= (unint64_t)(v100 & 0x7F) << v94;
            if (v100 < 0)
            {
              v94 += 7;
              BOOL v32 = v95++ >= 9;
              if (v32)
              {
                uint64_t v96 = 0;
                goto LABEL_200;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v96 = 0;
        }
LABEL_200:
        BOOL v131 = v96 != 0;
        uint64_t v132 = 142;
LABEL_201:
        *(unsigned char *)(a1 + v132) = v131;
        goto LABEL_230;
      case 11:
        if (!v37 || (*(_WORD *)(a1 + v12[165]) & 0x200) != 0) {
          goto LABEL_165;
        }
        if (v34 != 2)
        {
          char v133 = 0;
          unsigned int v134 = 0;
          uint64_t v135 = 0;
          while (1)
          {
            uint64_t v136 = *v21;
            uint64_t v137 = *(void *)(v3 + v136);
            unint64_t v138 = v137 + 1;
            if (v137 == -1 || v138 > *(void *)(v3 + *v6)) {
              goto LABEL_225;
            }
            char v139 = *(unsigned char *)(*(void *)(v3 + *v24) + v137);
            *(void *)(v3 + v136) = v138;
            v135 |= (unint64_t)(v139 & 0x7F) << v133;
            if (v139 < 0)
            {
              v133 += 7;
              BOOL v32 = v134++ >= 9;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_226;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_253;
        }
        while (1)
        {
          char v101 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_167;
          }
          char v102 = 0;
          unsigned int v103 = 0;
          uint64_t v104 = 0;
          uint64_t v105 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v106 = *v21;
            uint64_t v107 = *(void *)(v3 + v106);
            unint64_t v108 = v107 + 1;
            if (v107 == -1 || v108 > *(void *)(v3 + *v6)) {
              break;
            }
            char v109 = *(unsigned char *)(*(void *)(v3 + *v105) + v107);
            *(void *)(v3 + v106) = v108;
            v104 |= (unint64_t)(v109 & 0x7F) << v102;
            if (v109 < 0)
            {
              v102 += 7;
              BOOL v32 = v103++ >= 9;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_131;
          }
          *(unsigned char *)(v3 + *v101) = 1;
LABEL_131:
          PBRepeatedInt32Add();
        }
      case 12:
        if (!v37 || (*(_WORD *)(a1 + v12[165]) & 0x800) != 0) {
          goto LABEL_165;
        }
        if (v34 != 2)
        {
          char v140 = 0;
          unsigned int v141 = 0;
          uint64_t v142 = 0;
          while (1)
          {
            uint64_t v143 = *v21;
            uint64_t v144 = *(void *)(v3 + v143);
            unint64_t v145 = v144 + 1;
            if (v144 == -1 || v145 > *(void *)(v3 + *v6)) {
              goto LABEL_225;
            }
            char v146 = *(unsigned char *)(*(void *)(v3 + *v24) + v144);
            *(void *)(v3 + v143) = v145;
            v142 |= (unint64_t)(v146 & 0x7F) << v140;
            if (v146 < 0)
            {
              v140 += 7;
              BOOL v32 = v141++ >= 9;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_226;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_253;
        }
        while (1)
        {
          uint64_t v110 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_167;
          }
          char v111 = 0;
          unsigned int v112 = 0;
          uint64_t v113 = 0;
          char v114 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v115 = *v21;
            uint64_t v116 = *(void *)(v3 + v115);
            unint64_t v117 = v116 + 1;
            if (v116 == -1 || v117 > *(void *)(v3 + *v6)) {
              break;
            }
            char v118 = *(unsigned char *)(*(void *)(v3 + *v114) + v116);
            *(void *)(v3 + v115) = v117;
            v113 |= (unint64_t)(v118 & 0x7F) << v111;
            if (v118 < 0)
            {
              v111 += 7;
              BOOL v32 = v112++ >= 9;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_146;
          }
          *(unsigned char *)(v3 + *v110) = 1;
LABEL_146:
          PBRepeatedInt32Add();
        }
      case 13:
        if (!v37 || (*(_WORD *)(a1 + v12[165]) & 0x400) != 0) {
          goto LABEL_165;
        }
        if (v34 != 2)
        {
          char v147 = 0;
          unsigned int v148 = 0;
          uint64_t v149 = 0;
          while (1)
          {
            uint64_t v150 = *v21;
            uint64_t v151 = *(void *)(v3 + v150);
            unint64_t v152 = v151 + 1;
            if (v151 == -1 || v152 > *(void *)(v3 + *v6)) {
              break;
            }
            char v153 = *(unsigned char *)(*(void *)(v3 + *v24) + v151);
            *(void *)(v3 + v150) = v152;
            v149 |= (unint64_t)(v153 & 0x7F) << v147;
            if (v153 < 0)
            {
              v147 += 7;
              BOOL v32 = v148++ >= 9;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_226;
          }
LABEL_225:
          *(unsigned char *)(v3 + *v22) = 1;
LABEL_226:
          PBRepeatedInt32Add();
          goto LABEL_227;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_253;
        }
        while (1)
        {
          unint64_t v119 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v120 = 0;
          unsigned int v121 = 0;
          uint64_t v122 = 0;
          uint64_t v123 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v124 = *v21;
            uint64_t v125 = *(void *)(v3 + v124);
            unint64_t v126 = v125 + 1;
            if (v125 == -1 || v126 > *(void *)(v3 + *v6)) {
              break;
            }
            char v127 = *(unsigned char *)(*(void *)(v3 + *v123) + v125);
            *(void *)(v3 + v124) = v126;
            v122 |= (unint64_t)(v127 & 0x7F) << v120;
            if (v127 < 0)
            {
              v120 += 7;
              BOOL v32 = v121++ >= 9;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_161;
          }
          *(unsigned char *)(v3 + *v119) = 1;
LABEL_161:
          PBRepeatedInt32Add();
        }
LABEL_167:
        PBReaderRecallMark();
        long long v22 = (int *)MEMORY[0x1E4F940C8];
        char v19 = v159;
        goto LABEL_228;
      default:
        if ((v158 & 1) == 0 || (*(_WORD *)(a1 + v12[165]) & 0x100) != 0)
        {
LABEL_165:
          char v129 = PBReaderSkipValueWithTag();
          uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
          long long v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
          long long v22 = (int *)MEMORY[0x1E4F940C8];
          char v19 = v159;
          if ((v129 & 1) == 0)
          {
LABEL_251:
            int v160 = 0;
            goto LABEL_233;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v50 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v49;
          }
          int v51 = PBUnknownFieldAdd();
          char v19 = v159;
          long long v22 = (int *)MEMORY[0x1E4F940C8];
          long long v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
          uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
          if (!v51)
          {
            int v160 = 0;
            goto LABEL_235;
          }
        }
LABEL_230:
        if (!(v161 & 1 | (v7 != 0)) || *(void *)(v3 + *v21) >= *(void *)(v3 + *v6)) {
          goto LABEL_232;
        }
        break;
    }
  }
LABEL_232:
  int v160 = 1;
LABEL_233:
  char v23 = v158;
LABEL_234:
  if ((v23 & 1) == 0) {
    goto LABEL_236;
  }
  goto LABEL_235;
}

void sub_189476430(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18947665C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894767EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189477290(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAutocompleteResultSectionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 96);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDAutocompleteResultSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 116))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompleteResultSectionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = [v8 position];
  *(_DWORD *)(a1 + 116) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDAutocompleteResultSectionReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDAutocompleteResultSectionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompleteResultSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDAutocompleteResultSectionCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return Specified;
}

void sub_1894775FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894779F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189477DCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteResultSortPriorityMappingReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_59;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_59;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              unint64_t v27 = &OBJC_IVAR___GEOPDAutocompleteResultSortPriorityMapping__resultSubtype;
              goto LABEL_51;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              unint64_t v27 = &OBJC_IVAR___GEOPDAutocompleteResultSortPriorityMapping__resultSubtype;
              goto LABEL_53;
            }
          }
          unint64_t v27 = &OBJC_IVAR___GEOPDAutocompleteResultSortPriorityMapping__resultSubtype;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if (v18 == 2) {
          break;
        }
        if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 4u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              unint64_t v27 = &OBJC_IVAR___GEOPDAutocompleteResultSortPriorityMapping__sortPriority;
              goto LABEL_50;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              unint64_t v27 = &OBJC_IVAR___GEOPDAutocompleteResultSortPriorityMapping__sortPriority;
              goto LABEL_53;
            }
          }
          unint64_t v27 = &OBJC_IVAR___GEOPDAutocompleteResultSortPriorityMapping__sortPriority;
          goto LABEL_51;
        }
        if (!*(void *)(a1 + 8))
        {
          id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          BOOL v41 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v40;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_60;
        }
LABEL_54:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_59;
        }
      }
      char v34 = 0;
      unsigned int v35 = 0;
      uint64_t v21 = 0;
      *(unsigned char *)(a1 + 28) |= 2u;
      while (1)
      {
        uint64_t v36 = *v4;
        uint64_t v37 = *(void *)&v3[v36];
        unint64_t v38 = v37 + 1;
        if (v37 == -1 || v38 > *(void *)&v3[*v5])
        {
          unint64_t v27 = &OBJC_IVAR___GEOPDAutocompleteResultSortPriorityMapping__resultType;
          goto LABEL_50;
        }
        char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
        *(void *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0) {
          break;
        }
        v34 += 7;
        BOOL v26 = v35++ > 8;
        if (v26)
        {
          LODWORD(v21) = 0;
          unint64_t v27 = &OBJC_IVAR___GEOPDAutocompleteResultSortPriorityMapping__resultType;
          goto LABEL_53;
        }
      }
      unint64_t v27 = &OBJC_IVAR___GEOPDAutocompleteResultSortPriorityMapping__resultType;
LABEL_51:
      if (v3[*v6]) {
        LODWORD(v21) = 0;
      }
LABEL_53:
      *(_DWORD *)(a1 + *v27) = v21;
      goto LABEL_54;
    }
LABEL_59:
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_189478A7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189478F20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBankTransactionInformationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 132);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 128)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = (const float *)(a1 + 156);
  uint32x4_t v13 = (uint32x4_t)vld1q_dup_f32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  unsigned int v15 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62F550), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62F560), v14)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62F570), v14)));
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 7;
        char v20 = v19 & ~(_BYTE)v11 | v9;
        unsigned __int8 v21 = v19 | v11;
        char v102 = v20;
        char v103 = v8;
        char v104 = v21 | v20;
        if ((v21 | v8)) {
          uint64_t v22 = 0;
        }
        else {
          uint64_t v22 = a3;
        }
        uint64_t v23 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
        char v105 = (v22 == 0) | v21;
        BOOL v106 = v21;
        char v25 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v9;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v23) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v24)) {
      goto LABEL_190;
    }
    char v26 = 0;
    unsigned int v27 = 0;
    unint64_t v28 = 0;
    while (1)
    {
      uint64_t v29 = *v23;
      uint64_t v30 = *(void *)(v3 + v29);
      unint64_t v31 = v30 + 1;
      if (v30 == -1 || v31 > *(void *)(v3 + *v6)) {
        break;
      }
      char v32 = *(unsigned char *)(*(void *)(v3 + *v25) + v30);
      *(void *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0) {
        goto LABEL_25;
      }
      v26 += 7;
      BOOL v33 = v27++ >= 9;
      if (v33)
      {
        unint64_t v28 = 0;
        int v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v24) = 1;
LABEL_25:
    int v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(unsigned char *)(v3 + *v24)) {
      unint64_t v28 = 0;
    }
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_190:
      int v101 = 1;
      goto LABEL_191;
    }
    unint64_t v36 = v28 >> 3;
    BOOL v37 = v106;
    if ((v105 & 1) == 0)
    {
      unint64_t v38 = v22;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37) {
          goto LABEL_138;
        }
        if ((*(unsigned char *)(a1 + 157) & 1) == 0)
        {
          uint64_t v42 = PBReaderReadString();
          uint64_t v43 = 24;
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_215;
        }
        int v96 = (int)(*(_DWORD *)(a1 + 156) << 23) >> 31;
        goto LABEL_184;
      case 2:
        if ((v103 & 1) == 0) {
          goto LABEL_138;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        *(_DWORD *)(a1 + 156) |= 4u;
        while (2)
        {
          uint64_t v50 = *v23;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v25) + v51);
            *(void *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v33 = v48++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_143;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_143:
        uint64_t v93 = 140;
        goto LABEL_165;
      case 3:
        if (!v37) {
          goto LABEL_138;
        }
        if ((*(unsigned char *)(a1 + 157) & 0x20) == 0)
        {
          uint64_t v42 = PBReaderReadString();
          uint64_t v43 = 64;
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_215;
        }
        int v96 = (int)(*(_DWORD *)(a1 + 156) << 18) >> 31;
        goto LABEL_184;
      case 4:
        if (!v37 || (*(unsigned char *)(a1 + 158) & 1) != 0) {
          goto LABEL_138;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_215;
        }
        char v54 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_214;
        }
        PBReaderRecallMark();
        -[GEOPDBankTransactionInformation _addNoFlagsOtherTransactionLocations:](a1, v54);
LABEL_110:

        goto LABEL_185;
      case 5:
        if ((v103 & 1) == 0) {
          goto LABEL_138;
        }
        *(_DWORD *)(a1 + 156) |= 2u;
        uint64_t v55 = *v23;
        unint64_t v56 = *(void *)(v3 + v55);
        if (v56 <= 0xFFFFFFFFFFFFFFF7 && v56 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v57 = *(void *)(*(void *)(v3 + *v25) + v56);
          *(void *)(v3 + v55) = v56 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v24) = 1;
          uint64_t v57 = 0;
        }
        *(void *)(a1 + 120) = v57;
        goto LABEL_186;
      case 6:
        if (!v37) {
          goto LABEL_138;
        }
        if ((*(unsigned char *)(a1 + 158) & 2) == 0)
        {
          uint64_t v42 = PBReaderReadString();
          uint64_t v43 = 104;
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_215;
        }
        int v96 = (int)(*(_DWORD *)(a1 + 156) << 14) >> 31;
        goto LABEL_184;
      case 7:
        if (!v37) {
          goto LABEL_138;
        }
        if ((*(unsigned char *)(a1 + 157) & 0x40) == 0)
        {
          uint64_t v42 = PBReaderReadString();
          uint64_t v43 = 72;
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_215;
        }
        int v96 = (int)(*(_DWORD *)(a1 + 156) << 17) >> 31;
        goto LABEL_184;
      case 8:
        if ((v103 & 1) == 0) {
          goto LABEL_138;
        }
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v60 = 0;
        *(_DWORD *)(a1 + 156) |= 1u;
        while (2)
        {
          uint64_t v61 = *v23;
          uint64_t v62 = *(void *)(v3 + v61);
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(v3 + *v25) + v62);
            *(void *)(v3 + v61) = v63;
            v60 |= (unint64_t)(v64 & 0x7F) << v58;
            if (v64 < 0)
            {
              v58 += 7;
              BOOL v33 = v59++ >= 9;
              if (v33)
              {
                uint64_t v60 = 0;
                goto LABEL_147;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v60 = 0;
        }
LABEL_147:
        *(void *)(a1 + 80) = -(v60 & 1) ^ (v60 >> 1);
        goto LABEL_186;
      case 9:
        if ((v103 & 1) == 0) {
          goto LABEL_138;
        }
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v67 = 0;
        *(_DWORD *)(a1 + 156) |= 0x20u;
        while (2)
        {
          uint64_t v68 = *v23;
          uint64_t v69 = *(void *)(v3 + v68);
          unint64_t v70 = v69 + 1;
          if (v69 == -1 || v70 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(v3 + *v25) + v69);
            *(void *)(v3 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              BOOL v33 = v66++ >= 9;
              if (v33)
              {
                uint64_t v67 = 0;
                goto LABEL_151;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v67 = 0;
        }
LABEL_151:
        BOOL v94 = v67 != 0;
        uint64_t v95 = 152;
        goto LABEL_160;
      case 10:
        if (!v37) {
          goto LABEL_138;
        }
        if ((*(unsigned char *)(a1 + 158) & 4) == 0)
        {
          uint64_t v42 = PBReaderReadString();
          uint64_t v43 = 112;
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_215;
        }
        int v96 = (int)(*(_DWORD *)(a1 + 156) << 13) >> 31;
        goto LABEL_184;
      case 11:
        if ((v103 & 1) == 0) {
          goto LABEL_138;
        }
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v49 = 0;
        *(_DWORD *)(a1 + 156) |= 0x10u;
        while (2)
        {
          uint64_t v74 = *v23;
          uint64_t v75 = *(void *)(v3 + v74);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(v3 + *v25) + v75);
            *(void *)(v3 + v74) = v76;
            v49 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              BOOL v33 = v73++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_155;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_155:
        uint64_t v93 = 148;
        goto LABEL_165;
      case 12:
        if (!v37) {
          goto LABEL_138;
        }
        if ((*(unsigned char *)(a1 + 157) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_215;
          }
          int v96 = (int)(*(_DWORD *)(a1 + 156) << 16) >> 31;
LABEL_184:
          v7 += v96;
          goto LABEL_185;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_215;
        }
        char v54 = objc_alloc_init(GEOPDMerchantInformation);
        if (GEOPDMerchantInformationReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v78 = *(void **)(a1 + 88);
          *(void *)(a1 + 88) = v54;
LABEL_121:

          --v7;
LABEL_185:
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          char v25 = (int *)MEMORY[0x1E4F940B8];
LABEL_186:
          if (!(v104 & 1 | (v7 != 0))) {
            goto LABEL_190;
          }
          continue;
        }
LABEL_214:

LABEL_215:
        int v101 = 0;
        unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_191:
        if (v102) {
LABEL_192:
        }
          *(_DWORD *)(a1 + 156) |= 0x80u;
        if (v106 || (v101 & 1) == 0)
        {
          *(_DWORD *)(a1 + 156) |= 0x100u;
          *(_DWORD *)(a1 + 156) |= 0x2000u;
          *(_DWORD *)(a1 + 156) |= 0x10000u;
          *(_DWORD *)(a1 + 156) |= 0x20000u;
          *(_DWORD *)(a1 + 156) |= 0x4000u;
          *(_DWORD *)(a1 + 156) |= 0x40000u;
          *(_DWORD *)(a1 + 156) |= 0x8000u;
          *(_DWORD *)(a1 + 156) |= 0x200u;
          *(_DWORD *)(a1 + 156) |= 0x400u;
          *(_DWORD *)(a1 + 156) |= 0x1000u;
          *(_DWORD *)(a1 + 156) |= 0x800u;
        }
        else if (v22)
        {
          while (1)
          {
            int v97 = *v22++;
            int v98 = 256;
            switch(v97)
            {
              case 0:
                goto LABEL_208;
              case 1:
                goto LABEL_207;
              case 3:
                int v98 = 0x2000;
                goto LABEL_207;
              case 4:
                int v98 = 0x10000;
                goto LABEL_207;
              case 6:
                int v98 = 0x20000;
                goto LABEL_207;
              case 7:
                int v98 = 0x4000;
                goto LABEL_207;
              case 10:
                int v98 = 0x40000;
                goto LABEL_207;
              case 12:
                int v98 = 0x8000;
                goto LABEL_207;
              case 13:
                int v98 = 512;
                goto LABEL_207;
              case 14:
                int v98 = 1024;
                goto LABEL_207;
              case 15:
                int v98 = 4096;
                goto LABEL_207;
              case 16:
                int v98 = 2048;
LABEL_207:
                *(_DWORD *)(a1 + 156) |= v98;
                break;
              default:
                continue;
            }
          }
        }
LABEL_208:
        if (v101) {
          unint64_t v3 = *(unsigned char *)(v3 + *v24) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v106)
        {
          unint64_t v99 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 13:
        if (!v37 || (*(unsigned char *)(a1 + 157) & 2) != 0) {
          goto LABEL_138;
        }
        PBReaderReadData();
        char v54 = (GEOLocation *)objc_claimAutoreleasedReturnValue();
        if (v54) {
          -[GEOPDBankTransactionInformation _addNoFlagsBaaCertificate:](a1, v54);
        }
        goto LABEL_110;
      case 14:
        if (!v37) {
          goto LABEL_138;
        }
        if ((*(unsigned char *)(a1 + 157) & 4) == 0)
        {
          uint64_t v42 = PBReaderReadData();
          uint64_t v43 = 40;
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_215;
        }
        int v96 = (int)(*(_DWORD *)(a1 + 156) << 21) >> 31;
        goto LABEL_184;
      case 15:
        if (!v37) {
          goto LABEL_138;
        }
        if ((*(unsigned char *)(a1 + 157) & 0x10) == 0)
        {
          uint64_t v42 = PBReaderReadString();
          uint64_t v43 = 56;
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_215;
        }
        int v96 = (int)(*(_DWORD *)(a1 + 156) << 19) >> 31;
        goto LABEL_184;
      case 16:
        if (!v37) {
          goto LABEL_138;
        }
        if ((*(unsigned char *)(a1 + 157) & 8) == 0)
        {
          uint64_t v42 = PBReaderReadString();
          uint64_t v43 = 48;
LABEL_120:
          uint64_t v78 = *(void **)(a1 + v43);
          *(void *)(a1 + v43) = v42;
          goto LABEL_121;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_215;
        }
        int v96 = (int)(*(_DWORD *)(a1 + 156) << 20) >> 31;
        goto LABEL_184;
      case 17:
        if ((v103 & 1) == 0) {
          goto LABEL_138;
        }
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v81 = 0;
        *(_DWORD *)(a1 + 156) |= 0x40u;
        while (2)
        {
          uint64_t v82 = *v23;
          uint64_t v83 = *(void *)(v3 + v82);
          unint64_t v84 = v83 + 1;
          if (v83 == -1 || v84 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v85 = *(unsigned char *)(*(void *)(v3 + *v25) + v83);
            *(void *)(v3 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              BOOL v33 = v80++ >= 9;
              if (v33)
              {
                uint64_t v81 = 0;
                goto LABEL_159;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v81 = 0;
        }
LABEL_159:
        BOOL v94 = v81 != 0;
        uint64_t v95 = 153;
LABEL_160:
        *(unsigned char *)(a1 + v95) = v94;
        goto LABEL_186;
      case 18:
        if ((v103 & 1) == 0) {
          goto LABEL_138;
        }
        char v86 = 0;
        unsigned int v87 = 0;
        uint64_t v49 = 0;
        *(_DWORD *)(a1 + 156) |= 8u;
        while (2)
        {
          uint64_t v88 = *v23;
          uint64_t v89 = *(void *)(v3 + v88);
          unint64_t v90 = v89 + 1;
          if (v89 == -1 || v90 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v91 = *(unsigned char *)(*(void *)(v3 + *v25) + v89);
            *(void *)(v3 + v88) = v90;
            v49 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              BOOL v33 = v87++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_164;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_164:
        uint64_t v93 = 144;
LABEL_165:
        *(_DWORD *)(a1 + v93) = v49;
        goto LABEL_186;
      default:
        if ((v102 & 1) == 0 || (*(unsigned char *)(a1 + 156) & 0x80) != 0)
        {
LABEL_138:
          char v92 = PBReaderSkipValueWithTag();
          char v25 = (int *)MEMORY[0x1E4F940B8];
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v92 & 1) == 0)
          {
            int v101 = 0;
            goto LABEL_191;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v44 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v45 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v44;
          }
          int v46 = PBUnknownFieldAdd();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          char v25 = (int *)MEMORY[0x1E4F940B8];
          if (!v46)
          {
            int v101 = 0;
            goto LABEL_192;
          }
        }
        goto LABEL_186;
    }
  }
}

void sub_18947A308(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18947A47C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18947A8C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18947AA30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18947AC94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18947AFDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18947B150(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18947B514(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18947B688(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18947B7FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18947D040(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDBankTransactionInformationCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 96);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  return [*(id *)(a1 + 88) readAll:1];
}

unint64_t GEOPDBankTransactionInformationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 132))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDBankTransactionInformationReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 136));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 128) = [v8 position];
  *(_DWORD *)(a1 + 132) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDBankTransactionInformationReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDBankTransactionInformationReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDBankTransactionInformationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDBankTransactionInformationCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 136));
  return Specified;
}

void sub_18947D2E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBankTransactionInformationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDBankTransactionInformationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18947D34C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBankTransactionInformationIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2) {
            goto LABEL_103;
          }
          goto LABEL_80;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_103;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_100;
          }
        case 3u:
          if (v16 == 2) {
            goto LABEL_80;
          }
          goto LABEL_103;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_72;
        case 5u:
          if (v16 != 1) {
            goto LABEL_103;
          }
          uint64_t v24 = *v2;
          unint64_t v25 = *(void *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_99;
          }
          unint64_t v26 = v25 + 8;
          if (v26 > *(void *)&a1[*v3]) {
            goto LABEL_99;
          }
          *(void *)&a1[v24] = v26;
          continue;
        case 6u:
          if (v16 == 2) {
            goto LABEL_80;
          }
          goto LABEL_103;
        case 7u:
          if (v16 == 2) {
            goto LABEL_80;
          }
          goto LABEL_103;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_103;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v23 = v27++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_100;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_103;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v23 = v32++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_100;
          }
        case 0xAu:
          if (v16 == 2) {
            goto LABEL_80;
          }
          goto LABEL_103;
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_103;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v23 = v37++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_100;
          }
        case 0xCu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDMerchantInformationIsValid(a1)) {
            goto LABEL_103;
          }
LABEL_72:
          PBReaderRecallMark();
          continue;
        case 0xDu:
          if (v16 == 2) {
            goto LABEL_80;
          }
          goto LABEL_103;
        case 0xEu:
          if (v16 == 2) {
            goto LABEL_80;
          }
          goto LABEL_103;
        case 0xFu:
          if (v16 == 2) {
            goto LABEL_80;
          }
          goto LABEL_103;
        case 0x10u:
          if (v16 == 2) {
            goto LABEL_80;
          }
          goto LABEL_103;
        case 0x11u:
          if ((v8 & 7) != 0) {
            goto LABEL_103;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v23 = v42++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_100;
          }
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_103;
          }
          unsigned int v47 = 0;
          break;
        default:
LABEL_80:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_103:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v48 = *v2;
        uint64_t v49 = *(void *)&a1[v48];
        unint64_t v50 = v49 + 1;
        if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
          break;
        }
        int v51 = *(char *)(*(void *)&a1[*v5] + v49);
        *(void *)&a1[v48] = v50;
        if (v51 < 0)
        {
          BOOL v23 = v47++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_100;
      }
LABEL_98:
      uint64_t v14 = *v4;
LABEL_99:
      a1[v14] = 1;
LABEL_100:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v52 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v52;
}

BOOL GEOPDMerchantInformationIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_62;
          }
          goto LABEL_56;
        case 2u:
          if (v15 == 2) {
            goto LABEL_56;
          }
          goto LABEL_62;
        case 3u:
          if (v15 == 2) {
            goto LABEL_56;
          }
          goto LABEL_62;
        case 4u:
          if (v15 == 2) {
            goto LABEL_56;
          }
          goto LABEL_62;
        case 5u:
          if (v15 == 2) {
            goto LABEL_56;
          }
          goto LABEL_62;
        case 6u:
          if (v15 == 2) {
            goto LABEL_56;
          }
          goto LABEL_62;
        case 7u:
          if (v15 == 2) {
            goto LABEL_56;
          }
          goto LABEL_62;
        case 8u:
          if (v15 == 2) {
            goto LABEL_56;
          }
          goto LABEL_62;
        case 9u:
          if (v15 == 2) {
            goto LABEL_56;
          }
          goto LABEL_62;
        case 0xAu:
          if (v15 == 2) {
            goto LABEL_56;
          }
          goto LABEL_62;
        case 0xBu:
          if (v15 == 2) {
            goto LABEL_56;
          }
          goto LABEL_62;
        case 0xCu:
          if (v15 == 2) {
            goto LABEL_56;
          }
          goto LABEL_62;
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v17 = 0;
          break;
        case 0xEu:
          if (v15 == 2) {
            goto LABEL_56;
          }
          goto LABEL_62;
        case 0xFu:
          if (v15 != 2) {
            goto LABEL_62;
          }
LABEL_56:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_62:
          BOOL v23 = 0;
          goto LABEL_61;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_62;
          }
          continue;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_57;
      }
      a1[*v4] = 1;
LABEL_57:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
LABEL_61:
  PBReaderRecallMark();
  return v23;
}

void sub_18947E080(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDBankTransactionInformationIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  int v2 = *(_DWORD *)(a1 + 156);
  if ((v2 & 0xF6100) != 0) {
    return 1;
  }
  if ((v2 & 0x8000) != 0)
  {
    if (GEOPDMerchantInformationIsDirty(*(os_unfair_lock_s **)(a1 + 88))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x1E00) != 0) {
    return 1;
  }
  if ((v2 & 0x10000) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 96);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOLocationIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_20;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_20:

  return v3;
}

os_unfair_lock_s *GEOPDBankTransactionInformationIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDBankTransactionInformationIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 34);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOPDBankTransactionInformationClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  -[GEOPDBankTransactionInformation _readOtherTransactionLocations](a1);
  unint64_t result = [*(id *)(a1 + 96) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      uint64_t v8 = [*(id *)(a1 + 96) objectAtIndexedSubscript:i];
      long long v9 = (void *)v8;
      if (a3 && GEOLocationHasSensitiveFields(v8))
      {
        long long v10 = (_DWORD *)[v9 copy];
        GEOLocationClearSensitiveFields(v10);
        [*(id *)(a1 + 96) replaceObjectAtIndex:i withObject:v10];
      }
      else
      {
        [v9 clearSensitiveFields:a2];
      }

      unint64_t result = [*(id *)(a1 + 96) count];
    }
  }
  return result;
}

uint64_t GEOPDBankTransactionInformationHasSensitiveFields(void *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = objc_msgSend(a1, "otherTransactionLocations", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v9;
    while (2)
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v9 != v4) {
          objc_enumerationMutation(v1);
        }
        if (GEOLocationHasSensitiveFields(*(void *)(*((void *)&v8 + 1) + 8 * v5)))
        {
          uint64_t v6 = 1;
          goto LABEL_12;
        }
        ++v5;
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v6 = 0;
LABEL_12:

  return v6;
}

void sub_18947EDD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18947F84C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBatchCategoryLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    long long v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v20 = objc_alloc_init(GEOPDCategoryLookupParameters);
          if (!GEOPDCategoryLookupParametersReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDBatchCategoryLookupParameters addCategoryLookupParameter:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1894801B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBatchCategoryLookupResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    long long v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v20 = objc_alloc_init(GEOPDCategoryLookupResult);
          if (!GEOPDCategoryLookupResultReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDBatchCategoryLookupResult addCategoryLookupResult:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189480C0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBatchMerchantLookupBrandParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    long long v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v20 = objc_alloc_init(GEOPDMerchantLookupBrandParameters);
          if (!GEOPDMerchantLookupBrandParametersReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDBatchMerchantLookupBrandParameters addMerchantLookupBrandParameter:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189481660(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBatchMerchantLookupBrandResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    long long v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          unsigned int v27 = objc_alloc_init(GEOPDMerchantLookupBrandResult);
          if (!GEOPDMerchantLookupBrandResultReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          -[GEOPDBatchMerchantLookupBrandResult addMerchantLookupBrandResult:](a1, v27);
        }
        else if ((v12 >> 3) == 1)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v23 = *v6;
            uint64_t v24 = *(void *)&v5[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
            *(void *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_36;
            }
            v20 += 7;
            BOOL v17 = v21++ >= 9;
            if (v17)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            LODWORD(v22) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v28 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v29 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v28;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v30 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v30 = 0;
  }
  objc_sync_exit(v5);

  return v30;
}

void sub_1894822B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18948286C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBatchPopularNearbySearchParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  char v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  int v13 = ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 2) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v11])
    {
      case -4:
        ++v13;
        uint64_t v14 = v8;
        goto LABEL_8;
      case -3:
        char v10 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v8;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 != 0;
        char v18 = v17 & ~(_BYTE)v12 | v9;
        unsigned __int8 v19 = v17 | v12;
        char v64 = v18;
        char v65 = v19 | v18;
        if ((v19 | v10)) {
          char v20 = 0;
        }
        else {
          char v20 = a3;
        }
        char v66 = (v20 == 0) | v19;
        BOOL v67 = v19;
        unsigned int v21 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v8;
        uint64_t v15 = v9;
LABEL_8:
        uint64_t v16 = v12;
LABEL_10:
        ++v11;
        uint64_t v8 = v14;
        uint64_t v9 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_79;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_79:
      int v62 = 1;
      goto LABEL_80;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v67;
    if ((v66 & 1) == 0)
    {
      int v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v10 & 1) == 0) {
          goto LABEL_67;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 64) |= 2u;
        while (1)
        {
          uint64_t v43 = *v21;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v7)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v23) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_70;
          }
          v40 += 7;
          BOOL v31 = v41++ >= 9;
          if (v31)
          {
            LODWORD(v42) = 0;
            goto LABEL_72;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_70:
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v42) = 0;
        }
LABEL_72:
        *(_DWORD *)(a1 + 60) = v42;
        goto LABEL_78;
      case 2:
        if (!v35) {
          goto LABEL_67;
        }
        if ((*(unsigned char *)(a1 + 64) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_99;
          }
          v11 += *(unsigned __int8 *)(a1 + 64) << 27 >> 31;
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_99;
        }
        unint64_t v50 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v50, (void *)v3))
        {
          PBReaderRecallMark();
          int v51 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v50;

          --v11;
LABEL_75:
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_78:
          if (!(v65 & 1 | (v11 != 0))) {
            goto LABEL_79;
          }
          continue;
        }

LABEL_99:
        int v62 = 0;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_80:
        unint64_t v63 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
        if (v64) {
LABEL_81:
        }
          *(unsigned char *)(a1 + v63[147]) |= 4u;
        if (v67 || (v62 & 1) == 0)
        {
          *(unsigned char *)(a1 + v63[147]) |= 0x10u;
          *(unsigned char *)(a1 + v63[147]) |= 8u;
          goto LABEL_92;
        }
        if (v20)
        {
          while (2)
          {
            while (1)
            {
              int v58 = *v20++;
              int v57 = v58;
              if (v58 == 2) {
                break;
              }
              if (v57 == 4)
              {
                char v59 = 8;
                goto LABEL_91;
              }
              if (!v57) {
                goto LABEL_92;
              }
            }
            char v59 = 16;
LABEL_91:
            *(unsigned char *)(a1 + v63[147]) |= v59;
            continue;
          }
        }
LABEL_92:
        if (v62) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v67)
        {
          uint64_t v60 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if ((v10 & 1) == 0) {
          goto LABEL_67;
        }
        *(unsigned char *)(a1 + 64) |= 1u;
        uint64_t v52 = *v21;
        unint64_t v53 = *(void *)(v3 + v52);
        if (v53 <= 0xFFFFFFFFFFFFFFF7 && v53 + 8 <= *(void *)(v3 + *v7))
        {
          uint64_t v54 = *(void *)(*(void *)(v3 + *v23) + v53);
          *(void *)(v3 + v52) = v53 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v22) = 1;
          uint64_t v54 = 0;
        }
        *(void *)(a1 + 24) = v54;
        goto LABEL_78;
      case 4:
        if (!v35 || (*(unsigned char *)(a1 + 64) & 8) != 0) {
          goto LABEL_67;
        }
        uint64_t v55 = PBReaderReadData();
        if (v55) {
          -[GEOPDBatchPopularNearbySearchParameters _addNoFlagsSuggestionEntryMetadata:](a1, v55);
        }

        goto LABEL_75;
      default:
        if ((v64 & 1) == 0 || (*(unsigned char *)(a1 + 64) & 4) != 0)
        {
LABEL_67:
          char v56 = PBReaderSkipValueWithTag();
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v56 & 1) == 0)
          {
            int v62 = 0;
            goto LABEL_80;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v48 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v47;
          }
          int v49 = PBUnknownFieldAdd();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v49)
          {
            int v62 = 0;
            unint64_t v63 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
            goto LABEL_81;
          }
        }
        goto LABEL_78;
    }
  }
}

void sub_189483048(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBatchPopularNearbySearchParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDBatchPopularNearbySearchParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)char v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDBatchPopularNearbySearchParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDBatchPopularNearbySearchParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDBatchPopularNearbySearchParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18948388C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189483B10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBatchPopularNearbySearchParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 64) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189483E30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBatchPopularNearbySearchResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          char v20 = objc_alloc_init(GEOPDPopularNearbyResult);
          if (!GEOPDPopularNearbyResultReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDBatchPopularNearbySearchResult addPopularNearbyResult:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189484814(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189484D58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBatchReverseGeocodingParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unint64_t v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  int v13 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1)
      + (*(unsigned char *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 != 0;
        int v18 = v17 & ~v11 | v7;
        int v64 = v17 | v11;
        unsigned __int8 v19 = (int *)MEMORY[0x1E4F940E8];
        if (((v17 | v11) | v8)) {
          char v20 = 0;
        }
        else {
          char v20 = a3;
        }
        int v21 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_82;
        }
        char v62 = v18;
        int v63 = (v9 != 0) | v64 | v18;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        BOOL v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v7;
LABEL_8:
        uint64_t v15 = v10;
        uint64_t v16 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v14;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_80;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v19;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_80:
      int v21 = 1;
      goto LABEL_81;
    }
    unint64_t v35 = v26 >> 3;
    BOOL v36 = v64;
    if (!((v20 == 0) | v64 & 1))
    {
      int v37 = v20;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    if (v35 != 2) {
      break;
    }
    if (v36 && (*(unsigned char *)(a1 + 68) & 2) == 0)
    {
      if (v33 == 2)
      {
        int v21 = PBReaderPlaceMark();
        if (!v21) {
          goto LABEL_81;
        }
        while (*(void *)(v3 + *v19) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v22))
        {
          char v42 = 0;
          unsigned int v43 = 0;
          uint64_t v44 = 0;
          while (1)
          {
            uint64_t v45 = *v19;
            uint64_t v46 = *(void *)(v3 + v45);
            unint64_t v47 = v46 + 1;
            if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
              break;
            }
            char v48 = *(unsigned char *)(*(void *)(v3 + *v23) + v46);
            *(void *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v31 = v43++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_59;
          }
          *(unsigned char *)(v3 + *v22) = 1;
LABEL_59:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
      }
      else
      {
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v53 = 0;
        while (1)
        {
          uint64_t v54 = *v19;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6)) {
            break;
          }
          char v57 = *(unsigned char *)(*(void *)(v3 + *v23) + v55);
          *(void *)(v3 + v54) = v56;
          v53 |= (unint64_t)(v57 & 0x7F) << v51;
          if (v57 < 0)
          {
            v51 += 7;
            BOOL v31 = v52++ >= 9;
            if (!v31) {
              continue;
            }
          }
          goto LABEL_77;
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_77:
        PBRepeatedInt32Add();
      }
LABEL_78:
      if ((v63 & 1) == 0) {
        goto LABEL_80;
      }
      goto LABEL_79;
    }
LABEL_66:
    int v21 = PBReaderSkipValueWithTag();
    if ((v21 & v63 & 1) == 0) {
      goto LABEL_81;
    }
LABEL_79:
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v6)) {
      goto LABEL_80;
    }
  }
  if (v35 != 1)
  {
    if ((v62 & 1) != 0 && (*(unsigned char *)(a1 + 68) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v21 = PBUnknownFieldAdd();
      if (!v21)
      {
        unint64_t v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        goto LABEL_83;
      }
      goto LABEL_78;
    }
    goto LABEL_66;
  }
  if (!v36 || (*(unsigned char *)(a1 + 68) & 4) != 0) {
    goto LABEL_66;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_100;
  }
  unsigned int v41 = objc_alloc_init(GEOLocation);
  if (GEOLocationReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDBatchReverseGeocodingParameters _addNoFlagsAssetLocation:](a1, v41);

    goto LABEL_78;
  }

LABEL_100:
  int v21 = 0;
LABEL_81:
  LOBYTE(v18) = v62;
  unint64_t v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
LABEL_82:
  if (v18) {
LABEL_83:
  }
    *(unsigned char *)(a1 + v12[184]) |= 1u;
  if (v64 & 1 | ((v21 & 1) == 0))
  {
    *(unsigned char *)(a1 + v12[184]) |= 4u;
    *(unsigned char *)(a1 + v12[184]) |= 2u;
    goto LABEL_93;
  }
  if (v20)
  {
    while (2)
    {
      while (1)
      {
        int v59 = *v20++;
        int v58 = v59;
        if (v59 == 1) {
          break;
        }
        if (v58 == 2) {
          goto LABEL_92;
        }
        if (!v58) {
          goto LABEL_93;
        }
      }
      LOBYTE(v58) = 4;
LABEL_92:
      *(unsigned char *)(a1 + v12[184]) |= v58;
      continue;
    }
  }
LABEL_93:
  if (v21) {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v64)
  {
    uint64_t v60 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18948567C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDBatchReverseGeocodingParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 48);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDBatchReverseGeocodingParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDBatchReverseGeocodingParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDBatchReverseGeocodingParametersReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDBatchReverseGeocodingParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDBatchReverseGeocodingParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDBatchReverseGeocodingParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18948607C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894862DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBatchReverseGeocodingParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

unint64_t GEOPDBatchReverseGeocodingParametersClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  -[GEOPDBatchReverseGeocodingParameters _readAssetLocations](a1);
  unint64_t result = [*(id *)(a1 + 48) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      uint64_t v8 = [*(id *)(a1 + 48) objectAtIndexedSubscript:i];
      long long v9 = (void *)v8;
      if (a3 && GEOLocationHasSensitiveFields(v8))
      {
        uint64_t v10 = (_DWORD *)[v9 copy];
        GEOLocationClearSensitiveFields(v10);
        [*(id *)(a1 + 48) replaceObjectAtIndex:i withObject:v10];
      }
      else
      {
        [v9 clearSensitiveFields:a2];
      }

      unint64_t result = [*(id *)(a1 + 48) count];
    }
  }
  return result;
}

void sub_189486678(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBatchReverseGeocodingResultReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189486B5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189486D9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBatchSpatialLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        int v17 = v16 & ~v11 | v9;
        int v49 = v16 | v11;
        if (((v16 | v11) | v7)) {
          BOOL v18 = 0;
        }
        else {
          BOOL v18 = a3;
        }
        BOOL v19 = v8 != 0;
        char v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = 1;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_62;
        }
        char v47 = v17;
        int v48 = v19 | v49 | v17;
        BOOL v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_60;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      if (v25++ >= 9)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_60:
      int v21 = 1;
      goto LABEL_61;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v49;
    if (!((v18 == 0) | v49 & 1))
    {
      BOOL v36 = v18;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    if (v34 == 2) {
      break;
    }
    if (v34 == 1)
    {
      if (!v35 || (*(unsigned char *)(a1 + 52) & 4) != 0) {
        goto LABEL_58;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_80;
      }
      BOOL v40 = objc_alloc_init(GEOPDSpatialPlaceLookupParameters);
      if (!GEOPDSpatialPlaceLookupParametersReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
        goto LABEL_79;
      }
      PBReaderRecallMark();
      -[GEOPDBatchSpatialLookupParameters _addNoFlagsSpatialPlaceLookup:](a1, v40);
      goto LABEL_50;
    }
    if (v47 & 1) == 0 || (*(unsigned char *)(a1 + 52)) {
      goto LABEL_58;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      char v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v21 = PBUnknownFieldAdd();
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    if (!v21) {
      goto LABEL_63;
    }
LABEL_56:
    if ((v48 & 1) == 0) {
      goto LABEL_60;
    }
LABEL_59:
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
      goto LABEL_60;
    }
  }
  if (!v35 || (*(unsigned char *)(a1 + 52) & 2) != 0)
  {
LABEL_58:
    int v21 = PBReaderSkipValueWithTag();
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    if ((v21 & v48 & 1) == 0) {
      goto LABEL_61;
    }
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_80;
  }
  BOOL v40 = objc_alloc_init(GEOPDSpatialEventLookupParameters);
  if (GEOPDSpatialEventLookupParametersReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDBatchSpatialLookupParameters _addNoFlagsSpatialEventLookup:](a1, v40);
LABEL_50:

    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_56;
  }
LABEL_79:

LABEL_80:
  int v21 = 0;
  uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_61:
  LOBYTE(v17) = v47;
LABEL_62:
  if (v17) {
LABEL_63:
  }
    *(unsigned char *)(a1 + 52) |= 1u;
  if (v49 & 1 | ((v21 & 1) == 0))
  {
    *(unsigned char *)(a1 + 52) |= 4u;
    *(unsigned char *)(a1 + 52) |= 2u;
    goto LABEL_73;
  }
  if (v18)
  {
    while (1)
    {
      int v44 = *v18++;
      int v43 = v44;
      if (v44 == 1) {
        break;
      }
      if (v43 == 2)
      {
LABEL_69:
        *(unsigned char *)(a1 + 52) |= v43;
      }
      else if (!v43)
      {
        goto LABEL_73;
      }
    }
    LOBYTE(v43) = 4;
    goto LABEL_69;
  }
LABEL_73:
  if (v21) {
    unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v49)
  {
    uint64_t v45 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189487530(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDBatchSpatialLookupParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDSpatialPlaceLookupParameters readAll:](*(void *)(*((void *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 24);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOPDSpatialEventLookupParameters readAll:](*(void *)(*((void *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDBatchSpatialLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDBatchSpatialLookupParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDBatchSpatialLookupParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDBatchSpatialLookupParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDBatchSpatialLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDBatchSpatialLookupParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189487F78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189488228(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDBatchSpatialLookupParametersIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 52) & 0xE) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDSpatialEventLookupParametersIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDBatchSpatialLookupParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDBatchSpatialLookupParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189488890(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189488C18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189488E58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDBatchSpatialLookupResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDSpatialPlaceLookupResult readAll:](*(void *)(*((void *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 24);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOPDSpatialEventLookupResult readAll:](*(void *)(*((void *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDBatchSpatialLookupResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDBatchSpatialLookupResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDBatchSpatialLookupResultReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDBatchSpatialLookupResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDBatchSpatialLookupResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDBatchSpatialLookupResultCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1894898FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189489BD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *GEOPDBatchSpatialLookupResultIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDBatchSpatialLookupResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189489F44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBrandLookupParametersReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      id v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          long long v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_18948A598(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBrandLookupResultReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        id v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18948ABE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBusinessConnectAttributesReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v51 = v15 | v8;
        if ((v16 | v9)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        BOOL v54 = v16;
        char v52 = v16 | v15 | v8;
        char v53 = (v17 == 0) | v16;
        BOOL v18 = (int *)MEMORY[0x1E4F940E8];
        id v19 = (int *)MEMORY[0x1E4F940C8];
        id v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_59;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_59:
      int v50 = 1;
      goto LABEL_60;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v54;
    if ((v53 & 1) == 0)
    {
      int v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (!v32) {
        goto LABEL_51;
      }
      if ((*(unsigned char *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_78;
        }
        char v44 = *(unsigned char *)(a1 + 52) << 6;
        goto LABEL_57;
      }
      uint64_t v37 = PBReaderReadString();
      uint64_t v38 = 24;
      goto LABEL_44;
    }
    if (v51 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_51:
      char v43 = PBReaderSkipValueWithTag();
      id v19 = (int *)MEMORY[0x1E4F940C8];
      if ((v43 & 1) == 0)
      {
        int v50 = 0;
        goto LABEL_60;
      }
      goto LABEL_58;
    }
    if (!*(void *)(a1 + 16))
    {
      id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      id v41 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v40;
    }
    int v42 = PBUnknownFieldAdd();
    id v19 = (int *)MEMORY[0x1E4F940C8];
    if (!v42)
    {
      int v50 = 0;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v52 & 1 | (v10 != 0))) {
      goto LABEL_59;
    }
  }
  if (!v32) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) == 0)
  {
    uint64_t v37 = PBReaderReadString();
    uint64_t v38 = 32;
LABEL_44:
    BOOL v39 = *(void **)(a1 + v38);
    *(void *)(a1 + v38) = v37;

    id v19 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v44 = 32 * *(unsigned char *)(a1 + 52);
LABEL_57:
    v10 += v44 >> 7;
    id v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_58;
  }
LABEL_78:
  int v50 = 0;
  id v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_60:
  if ((v51 & 1) == 0) {
    goto LABEL_62;
  }
LABEL_61:
  *(unsigned char *)(a1 + 52) |= 1u;
LABEL_62:
  if (v54 || (v50 & 1) == 0)
  {
    *(unsigned char *)(a1 + 52) |= 2u;
    *(unsigned char *)(a1 + 52) |= 4u;
    goto LABEL_72;
  }
  if (v17)
  {
    while (1)
    {
      int v47 = *v17++;
      int v46 = v47;
      if (v47 == 1) {
        break;
      }
      if (v46 == 2)
      {
        char v45 = 4;
LABEL_68:
        *(unsigned char *)(a1 + 52) |= v45;
      }
      else if (!v46)
      {
        goto LABEL_72;
      }
    }
    char v45 = 2;
    goto LABEL_68;
  }
LABEL_72:
  if (v50) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v54)
  {
    int v48 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18948B5A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18948B688(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBusinessConnectAttributesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDBusinessConnectAttributesReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDBusinessConnectAttributesReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDBusinessConnectAttributesReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDBusinessConnectAttributesReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18948B8F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18948BA94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18948BC04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCanonicalLocationSearchParametersReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          id v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_18948C2D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCanonicalLocationSearchResultReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        id v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18948C928(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCartoIconZoomReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      while (!v3[*v6])
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            *(unsigned char *)(a1 + 40) |= 4u;
            uint64_t v18 = *v4;
            unint64_t v19 = *(void *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(void *)&v3[*v5])
            {
              int v20 = *(_DWORD *)(*(void *)&v3[*v7] + v19);
              *(void *)&v3[v18] = v19 + 4;
            }
            else
            {
              v3[*v6] = 1;
              int v20 = 0;
            }
            uint64_t v38 = 24;
            goto LABEL_61;
          case 2u:
            *(unsigned char *)(a1 + 40) |= 2u;
            uint64_t v30 = *v4;
            unint64_t v31 = *(void *)&v3[v30];
            if (v31 <= 0xFFFFFFFFFFFFFFFBLL && v31 + 4 <= *(void *)&v3[*v5])
            {
              int v20 = *(_DWORD *)(*(void *)&v3[*v7] + v31);
              *(void *)&v3[v30] = v31 + 4;
            }
            else
            {
              v3[*v6] = 1;
              int v20 = 0;
            }
            uint64_t v38 = 20;
            goto LABEL_61;
          case 3u:
          case 4u:
          case 5u:
          case 6u:
          case 7u:
          case 8u:
          case 9u:
            goto LABEL_31;
          case 0xAu:
            *(unsigned char *)(a1 + 40) |= 0x20u;
            uint64_t v32 = *v4;
            unint64_t v33 = *(void *)&v3[v32];
            if (v33 <= 0xFFFFFFFFFFFFFFFBLL && v33 + 4 <= *(void *)&v3[*v5])
            {
              int v20 = *(_DWORD *)(*(void *)&v3[*v7] + v33);
              *(void *)&v3[v32] = v33 + 4;
            }
            else
            {
              v3[*v6] = 1;
              int v20 = 0;
            }
            uint64_t v38 = 36;
            goto LABEL_61;
          case 0xBu:
            *(unsigned char *)(a1 + 40) |= 8u;
            uint64_t v34 = *v4;
            unint64_t v35 = *(void *)&v3[v34];
            if (v35 <= 0xFFFFFFFFFFFFFFFBLL && v35 + 4 <= *(void *)&v3[*v5])
            {
              int v20 = *(_DWORD *)(*(void *)&v3[*v7] + v35);
              *(void *)&v3[v34] = v35 + 4;
            }
            else
            {
              v3[*v6] = 1;
              int v20 = 0;
            }
            uint64_t v38 = 28;
            goto LABEL_61;
          case 0xCu:
            *(unsigned char *)(a1 + 40) |= 0x10u;
            uint64_t v36 = *v4;
            unint64_t v37 = *(void *)&v3[v36];
            if (v37 <= 0xFFFFFFFFFFFFFFFBLL && v37 + 4 <= *(void *)&v3[*v5])
            {
              int v20 = *(_DWORD *)(*(void *)&v3[*v7] + v37);
              *(void *)&v3[v36] = v37 + 4;
            }
            else
            {
              v3[*v6] = 1;
              int v20 = 0;
            }
            uint64_t v38 = 32;
LABEL_61:
            *(_DWORD *)(a1 + v38) = v20;
            goto LABEL_62;
          default:
            if ((v10 >> 3) == 99)
            {
              char v21 = 0;
              unsigned int v22 = 0;
              uint64_t v23 = 0;
              *(unsigned char *)(a1 + 40) |= 1u;
              while (1)
              {
                uint64_t v24 = *v4;
                uint64_t v25 = *(void *)&v3[v24];
                unint64_t v26 = v25 + 1;
                if (v25 == -1 || v26 > *(void *)&v3[*v5]) {
                  break;
                }
                char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v25);
                *(void *)&v3[v24] = v26;
                v23 |= (unint64_t)(v27 & 0x7F) << v21;
                if ((v27 & 0x80) == 0) {
                  goto LABEL_48;
                }
                v21 += 7;
                BOOL v15 = v22++ >= 9;
                if (v15)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_50;
                }
              }
              v3[*v6] = 1;
LABEL_48:
              if (v3[*v6]) {
                LODWORD(v23) = 0;
              }
LABEL_50:
              *(_DWORD *)(a1 + 16) = v23;
            }
            else
            {
LABEL_31:
              if (!*(void *)(a1 + 8))
              {
                id v28 = objc_alloc_init(MEMORY[0x1E4F940B0]);
                int v29 = *(void **)(a1 + 8);
                *(void *)(a1 + 8) = v28;
              }
              if (!PBUnknownFieldAdd()) {
                goto LABEL_64;
              }
            }
LABEL_62:
            if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
              goto LABEL_63;
            }
            break;
        }
      }
    }
LABEL_63:
    BOOL v39 = v3[*v6] == 0;
  }
  else
  {
LABEL_64:
    BOOL v39 = 0;
  }
  objc_sync_exit(v3);

  return v39;
}

void sub_18948D75C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCartoIconZoomIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
          if (v16 != 5) {
            goto LABEL_39;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFFBLL) {
            goto LABEL_35;
          }
          unint64_t v20 = v19 + 4;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_35;
          }
          *(void *)&a1[v18] = v20;
          goto LABEL_36;
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
          goto LABEL_32;
        default:
          if ((v8 >> 3) == 99)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_39;
            }
            unsigned int v21 = 0;
            while (1)
            {
              uint64_t v22 = *v2;
              uint64_t v23 = *(void *)&a1[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
                break;
              }
              int v25 = *(char *)(*(void *)&a1[*v5] + v23);
              *(void *)&a1[v22] = v24;
              if (v25 < 0 && v21++ <= 8) {
                continue;
              }
              goto LABEL_36;
            }
            uint64_t v14 = *v4;
LABEL_35:
            a1[v14] = 1;
          }
          else
          {
LABEL_32:
            if (!PBReaderSkipValueWithTag())
            {
LABEL_39:
              BOOL v27 = 0;
              goto LABEL_38;
            }
          }
LABEL_36:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_37;
          }
          break;
      }
    }
  }
LABEL_37:
  BOOL v27 = a1[*v4] == 0;
LABEL_38:
  PBReaderRecallMark();
  return v27;
}

unint64_t GEOPDCategoryLookupResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v7)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_66;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_66:
      int v51 = 1;
      goto LABEL_67;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      unint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_57;
      }
      if ((*(unsigned char *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_85;
        }
        BOOL v39 = objc_alloc_init(GEOPDCategoryLookupParameters);
        if (!GEOPDCategoryLookupParametersReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_84;
        }
        PBReaderRecallMark();
        uint64_t v40 = 32;
LABEL_50:
        id v41 = *(void **)(a1 + v40);
        *(void *)(a1 + v40) = v39;

        --v8;
LABEL_64:
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_85;
      }
      char v46 = 32 * *(unsigned char *)(a1 + 52);
LABEL_63:
      v8 += v46 >> 7;
      goto LABEL_64;
    }
    if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_57:
      char v45 = PBReaderSkipValueWithTag();
      unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v45 & 1) == 0)
      {
        int v51 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      char v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v44 = PBUnknownFieldAdd();
    unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v44)
    {
      int v51 = 0;
      char v52 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v54 & 1 | (v8 != 0))) {
      goto LABEL_66;
    }
  }
  if (!v34) {
    goto LABEL_57;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_85;
    }
    char v46 = *(unsigned char *)(a1 + 52) << 6;
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_85;
  }
  BOOL v39 = objc_alloc_init(GEOPDCategoryInformation);
  if (GEOPDCategoryInformationReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = 24;
    goto LABEL_50;
  }
LABEL_84:

LABEL_85:
  int v51 = 0;
  unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_67:
  char v52 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
  if ((v53 & 1) == 0) {
    goto LABEL_69;
  }
LABEL_68:
  *(unsigned char *)(a1 + v52[188]) |= 1u;
LABEL_69:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[188]) |= 4u;
    *(unsigned char *)(a1 + v52[188]) |= 2u;
    goto LABEL_78;
  }
  if (v19)
  {
    while (1)
    {
      int v48 = *v19++;
      int v47 = v48;
      if (v48 == 1) {
        break;
      }
      if (v47 == 2)
      {
LABEL_74:
        *(unsigned char *)(a1 + v52[188]) |= v47;
      }
      else if (!v47)
      {
        goto LABEL_78;
      }
    }
    LOBYTE(v47) = 4;
    goto LABEL_74;
  }
LABEL_78:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    int v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18948EA7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18948EB88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategoryLookupResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDCategoryLookupResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDCategoryLookupResultReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDCategoryLookupResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDCategoryLookupResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    -[GEOPDCategoryLookupParameters readAll:](*(void *)(a1 + 32), 1);
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18948EE20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18948EFF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18948F164(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18948F4F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategorySearchParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 256));
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 252);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 248)];
  uint64_t v6 = 0;
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = *(_DWORD *)(a1 + 288);
  uint32x4_t v12 = (uint32x4_t)vdupq_n_s32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A62F5A0), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A62F5B0), v13)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A62F580), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A62F590), v13))))+ ((v11 >> 25) & 1)+ ((v11 >> 18) & 1)+ ((v11 >> 9) & 1);
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v16 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v18 = v14 > 0xD;
        char v19 = v18 & ~(_BYTE)v10 | v8;
        char v20 = v18 | v10;
        if (((v18 | v10) | v7)) {
          unsigned int v21 = 0;
        }
        else {
          unsigned int v21 = a3;
        }
        uint64_t v22 = (int *)MEMORY[0x1E4F940E8];
        char v23 = (int *)MEMORY[0x1E4F940E0];
        int v206 = 1;
        unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
        char v25 = v19;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + (int)*MEMORY[0x1E4F940E0])) {
          goto LABEL_378;
        }
        char v205 = v19;
        char v207 = v20 | v19;
        char v209 = (v21 == 0) | v20;
        uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
        char v208 = v20;
        break;
      default:
        ++v14;
LABEL_7:
        uint64_t v15 = v8;
LABEL_8:
        uint64_t v16 = v9;
        uint64_t v17 = v10;
LABEL_10:
        ++v6;
        uint64_t v8 = v15;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v24)) {
      goto LABEL_373;
    }
    char v27 = 0;
    unsigned int v28 = 0;
    unint64_t v29 = 0;
    while (1)
    {
      uint64_t v30 = *v22;
      uint64_t v31 = *(void *)(v3 + v30);
      unint64_t v32 = v31 + 1;
      if (v31 == -1 || v32 > *(void *)(v3 + *v23)) {
        break;
      }
      char v33 = *(unsigned char *)(*(void *)(v3 + *v26) + v31);
      *(void *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0) {
        goto LABEL_25;
      }
      v27 += 7;
      BOOL v34 = v28++ >= 9;
      if (v34)
      {
        unint64_t v29 = 0;
        int v35 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v24) = 1;
LABEL_25:
    int v35 = *(unsigned __int8 *)(v3 + *v24);
    if (*(unsigned char *)(v3 + *v24)) {
      unint64_t v29 = 0;
    }
LABEL_27:
    int v36 = v29 & 7;
    if (v35 || v36 == 4)
    {
LABEL_373:
      int v206 = 1;
      goto LABEL_377;
    }
    unint64_t v38 = v29 >> 3;
    BOOL v39 = v20;
    if ((v209 & 1) == 0)
    {
      uint64_t v40 = v21;
      do
      {
        int v42 = *v40++;
        int v41 = v42;
        BOOL v39 = v42 != 0;
        if (v42) {
          BOOL v43 = v41 == v38;
        }
        else {
          BOOL v43 = 1;
        }
      }
      while (!v43);
    }
    switch((int)v38)
    {
      case 1:
        if ((v7 & 1) == 0) {
          goto LABEL_265;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 288) |= 8u;
        char v23 = (int *)MEMORY[0x1E4F940E0];
        while (1)
        {
          uint64_t v47 = *v22;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v23)) {
            break;
          }
          char v50 = *(unsigned char *)(*(void *)(v3 + *v26) + v48);
          *(void *)(v3 + v47) = v49;
          v46 |= (unint64_t)(v50 & 0x7F) << v44;
          if ((v50 & 0x80) == 0) {
            goto LABEL_268;
          }
          v44 += 7;
          BOOL v34 = v45++ >= 9;
          if (v34)
          {
            LODWORD(v46) = 0;
            goto LABEL_270;
          }
        }
        *(unsigned char *)(v3 + *v24) = 1;
LABEL_268:
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v46) = 0;
        }
LABEL_270:
        uint64_t v162 = 272;
        goto LABEL_295;
      case 3:
        if (!v39) {
          goto LABEL_265;
        }
        if ((*(unsigned char *)(a1 + 291) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_409;
          }
          int v165 = (16 * *(_DWORD *)(a1 + 288)) >> 31;
          goto LABEL_329;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_409;
        }
        int v51 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v51, (void *)v3)) {
          goto LABEL_408;
        }
        PBReaderRecallMark();
        uint64_t v52 = 240;
        goto LABEL_248;
      case 4:
        if (!v39) {
          goto LABEL_265;
        }
        if ((*(unsigned char *)(a1 + 291) & 4) == 0)
        {
          uint64_t v53 = PBReaderReadData();
          uint64_t v54 = 232;
          goto LABEL_227;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_409;
        }
        int v165 = (32 * *(_DWORD *)(a1 + 288)) >> 31;
        goto LABEL_329;
      case 5:
        if ((v7 & 1) == 0) {
          goto LABEL_265;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 288) |= 2u;
        char v23 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v57 = *v22;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v23))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v26) + v58);
            *(void *)(v3 + v57) = v59;
            v46 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              BOOL v34 = v56++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_274;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v46) = 0;
        }
LABEL_274:
        uint64_t v162 = 264;
        goto LABEL_295;
      case 6:
        if ((v7 & 1) == 0) {
          goto LABEL_265;
        }
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 288) |= 4u;
        char v23 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v63 = *v22;
          uint64_t v64 = *(void *)(v3 + v63);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(v3 + *v23))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(v3 + *v26) + v64);
            *(void *)(v3 + v63) = v65;
            v46 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              BOOL v34 = v62++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_278;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v46) = 0;
        }
LABEL_278:
        uint64_t v162 = 268;
        goto LABEL_295;
      case 7:
        if ((v7 & 1) == 0) {
          goto LABEL_265;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 288) |= 0x20u;
        char v23 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v69 = *v22;
          uint64_t v70 = *(void *)(v3 + v69);
          unint64_t v71 = v70 + 1;
          if (v70 == -1 || v71 > *(void *)(v3 + *v23))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(v3 + *v26) + v70);
            *(void *)(v3 + v69) = v71;
            v46 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              BOOL v34 = v68++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_282;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v46) = 0;
        }
LABEL_282:
        uint64_t v162 = 280;
        goto LABEL_295;
      case 8:
        if (!v39) {
          goto LABEL_265;
        }
        if ((*(unsigned char *)(a1 + 290) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_409;
          }
          int v165 = (int)(*(_DWORD *)(a1 + 288) << 11) >> 31;
          goto LABEL_329;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_409;
        }
        int v51 = objc_alloc_init(GEOPDRecentRouteInfo);
        if (!GEOPDRecentRouteInfoReadAllFrom((uint64_t)v51, (void *)v3, v9 & 1)) {
          goto LABEL_408;
        }
        PBReaderRecallMark();
        uint64_t v52 = 184;
        goto LABEL_248;
      case 9:
        if ((v7 & 1) == 0) {
          goto LABEL_265;
        }
        char v73 = 0;
        unsigned int v74 = 0;
        uint64_t v75 = 0;
        *(_DWORD *)(a1 + 288) |= 0x40u;
        char v23 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v76 = *v22;
          uint64_t v77 = *(void *)(v3 + v76);
          unint64_t v78 = v77 + 1;
          if (v77 == -1 || v78 > *(void *)(v3 + *v23))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v79 = *(unsigned char *)(*(void *)(v3 + *v26) + v77);
            *(void *)(v3 + v76) = v78;
            v75 |= (unint64_t)(v79 & 0x7F) << v73;
            if (v79 < 0)
            {
              v73 += 7;
              BOOL v34 = v74++ >= 9;
              if (v34)
              {
                uint64_t v75 = 0;
                goto LABEL_286;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v75 = 0;
        }
LABEL_286:
        BOOL v163 = v75 != 0;
        uint64_t v164 = 284;
        goto LABEL_304;
      case 10:
        if (!v39) {
          goto LABEL_265;
        }
        if ((*(unsigned char *)(a1 + 290) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_409;
          }
          int v165 = (int)(*(_DWORD *)(a1 + 288) << 14) >> 31;
          goto LABEL_329;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_409;
        }
        int v51 = objc_alloc_init(GEOPDSSearchEvChargingParameters);
        if (!GEOPDSSearchEvChargingParametersReadAllFrom((uint64_t)v51, (void *)v3, v9 & 1)) {
          goto LABEL_408;
        }
        PBReaderRecallMark();
        uint64_t v52 = 160;
        goto LABEL_248;
      case 21:
        if (!v39 || (*(unsigned char *)(a1 + 289) & 0x10) != 0) {
          goto LABEL_265;
        }
        if (v36 != 2)
        {
          char v166 = 0;
          unsigned int v167 = 0;
          uint64_t v168 = 0;
          char v23 = (int *)MEMORY[0x1E4F940E0];
          while (1)
          {
            uint64_t v169 = *v22;
            uint64_t v170 = *(void *)(v3 + v169);
            unint64_t v171 = v170 + 1;
            if (v170 == -1 || v171 > *(void *)(v3 + *v23)) {
              goto LABEL_370;
            }
            char v172 = *(unsigned char *)(*(void *)(v3 + *v26) + v170);
            *(void *)(v3 + v169) = v171;
            v168 |= (unint64_t)(v172 & 0x7F) << v166;
            if (v172 < 0)
            {
              v166 += 7;
              BOOL v34 = v167++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_371;
          }
        }
        int v80 = PBReaderPlaceMark();
        char v23 = (int *)MEMORY[0x1E4F940E0];
        if (!v80) {
          goto LABEL_409;
        }
        while (1)
        {
          uint64_t v81 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v23) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_264;
          }
          char v82 = 0;
          unsigned int v83 = 0;
          uint64_t v84 = 0;
          char v85 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v86 = *v22;
            uint64_t v87 = *(void *)(v3 + v86);
            unint64_t v88 = v87 + 1;
            if (v87 == -1 || v88 > *(void *)(v3 + *v23)) {
              break;
            }
            char v89 = *(unsigned char *)(*(void *)(v3 + *v85) + v87);
            *(void *)(v3 + v86) = v88;
            v84 |= (unint64_t)(v89 & 0x7F) << v82;
            if (v89 < 0)
            {
              v82 += 7;
              BOOL v34 = v83++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_111;
          }
          *(unsigned char *)(v3 + *v81) = 1;
LABEL_111:
          PBRepeatedInt32Add();
        }
      case 22:
        if (!v39) {
          goto LABEL_265;
        }
        if (*(unsigned char *)(a1 + 290))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_409;
          }
          int v165 = (int)(*(_DWORD *)(a1 + 288) << 15) >> 31;
          goto LABEL_329;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_409;
        }
        int v51 = objc_alloc_init(GEOPDETAFilter);
        if (!GEOPDETAFilterReadAllFrom((uint64_t)v51, (void *)v3, v9 & 1)) {
          goto LABEL_408;
        }
        PBReaderRecallMark();
        uint64_t v52 = 152;
        goto LABEL_248;
      case 23:
        if (!v39 || (*(unsigned char *)(a1 + 289) & 0x40) != 0) {
          goto LABEL_265;
        }
        if (v36 != 2)
        {
          char v173 = 0;
          unsigned int v174 = 0;
          uint64_t v175 = 0;
          char v23 = (int *)MEMORY[0x1E4F940E0];
          while (1)
          {
            uint64_t v176 = *v22;
            uint64_t v177 = *(void *)(v3 + v176);
            unint64_t v178 = v177 + 1;
            if (v177 == -1 || v178 > *(void *)(v3 + *v23)) {
              goto LABEL_370;
            }
            char v179 = *(unsigned char *)(*(void *)(v3 + *v26) + v177);
            *(void *)(v3 + v176) = v178;
            v175 |= (unint64_t)(v179 & 0x7F) << v173;
            if (v179 < 0)
            {
              v173 += 7;
              BOOL v34 = v174++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_371;
          }
        }
        int v90 = PBReaderPlaceMark();
        char v23 = (int *)MEMORY[0x1E4F940E0];
        if (!v90) {
          goto LABEL_409;
        }
        while (1)
        {
          char v91 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v23) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_264;
          }
          char v92 = 0;
          unsigned int v93 = 0;
          uint64_t v94 = 0;
          uint64_t v95 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v96 = *v22;
            uint64_t v97 = *(void *)(v3 + v96);
            unint64_t v98 = v97 + 1;
            if (v97 == -1 || v98 > *(void *)(v3 + *v23)) {
              break;
            }
            char v99 = *(unsigned char *)(*(void *)(v3 + *v95) + v97);
            *(void *)(v3 + v96) = v98;
            v94 |= (unint64_t)(v99 & 0x7F) << v92;
            if (v99 < 0)
            {
              v92 += 7;
              BOOL v34 = v93++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_131;
          }
          *(unsigned char *)(v3 + *v91) = 1;
LABEL_131:
          PBRepeatedInt32Add();
        }
      case 24:
        if ((v7 & 1) == 0) {
          goto LABEL_265;
        }
        char v100 = 0;
        unsigned int v101 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 288) |= 1u;
        char v23 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v102 = *v22;
          uint64_t v103 = *(void *)(v3 + v102);
          unint64_t v104 = v103 + 1;
          if (v103 == -1 || v104 > *(void *)(v3 + *v23))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v105 = *(unsigned char *)(*(void *)(v3 + *v26) + v103);
            *(void *)(v3 + v102) = v104;
            v46 |= (unint64_t)(v105 & 0x7F) << v100;
            if (v105 < 0)
            {
              v100 += 7;
              BOOL v34 = v101++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_290;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v46) = 0;
        }
LABEL_290:
        uint64_t v162 = 260;
        goto LABEL_295;
      case 25:
        if (!v39) {
          goto LABEL_265;
        }
        if ((*(unsigned char *)(a1 + 290) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_409;
          }
          int v165 = (int)(*(_DWORD *)(a1 + 288) << 10) >> 31;
          goto LABEL_329;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_409;
        }
        int v51 = objc_alloc_init(GEOPDResultRefinementQuery);
        if (!GEOPDResultRefinementQueryReadAllFrom((uint64_t)v51, (void *)v3, v9 & 1)) {
          goto LABEL_408;
        }
        PBReaderRecallMark();
        uint64_t v52 = 192;
        goto LABEL_248;
      case 26:
        if (!v39 || (*(unsigned char *)(a1 + 289) & 4) != 0) {
          goto LABEL_265;
        }
        if (v36 != 2)
        {
          char v180 = 0;
          unsigned int v181 = 0;
          uint64_t v182 = 0;
          char v23 = (int *)MEMORY[0x1E4F940E0];
          while (1)
          {
            uint64_t v183 = *v22;
            uint64_t v184 = *(void *)(v3 + v183);
            unint64_t v185 = v184 + 1;
            if (v184 == -1 || v185 > *(void *)(v3 + *v23)) {
              goto LABEL_370;
            }
            char v186 = *(unsigned char *)(*(void *)(v3 + *v26) + v184);
            *(void *)(v3 + v183) = v185;
            v182 |= (unint64_t)(v186 & 0x7F) << v180;
            if (v186 < 0)
            {
              v180 += 7;
              BOOL v34 = v181++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_371;
          }
        }
        int v106 = PBReaderPlaceMark();
        char v23 = (int *)MEMORY[0x1E4F940E0];
        if (!v106) {
          goto LABEL_409;
        }
        while (1)
        {
          uint64_t v107 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v23) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_264;
          }
          char v108 = 0;
          unsigned int v109 = 0;
          uint64_t v110 = 0;
          char v111 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v112 = *v22;
            uint64_t v113 = *(void *)(v3 + v112);
            unint64_t v114 = v113 + 1;
            if (v113 == -1 || v114 > *(void *)(v3 + *v23)) {
              break;
            }
            char v115 = *(unsigned char *)(*(void *)(v3 + *v111) + v113);
            *(void *)(v3 + v112) = v114;
            v110 |= (unint64_t)(v115 & 0x7F) << v108;
            if (v115 < 0)
            {
              v108 += 7;
              BOOL v34 = v109++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_159;
          }
          *(unsigned char *)(v3 + *v107) = 1;
LABEL_159:
          PBRepeatedInt32Add();
        }
      case 27:
        if ((v7 & 1) == 0) {
          goto LABEL_265;
        }
        char v116 = 0;
        unsigned int v117 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 288) |= 0x10u;
        char v23 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v118 = *v22;
          uint64_t v119 = *(void *)(v3 + v118);
          unint64_t v120 = v119 + 1;
          if (v119 == -1 || v120 > *(void *)(v3 + *v23))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v121 = *(unsigned char *)(*(void *)(v3 + *v26) + v119);
            *(void *)(v3 + v118) = v120;
            v46 |= (unint64_t)(v121 & 0x7F) << v116;
            if (v121 < 0)
            {
              v116 += 7;
              BOOL v34 = v117++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_294;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v46) = 0;
        }
LABEL_294:
        uint64_t v162 = 276;
LABEL_295:
        *(_DWORD *)(a1 + v162) = v46;
        goto LABEL_332;
      case 28:
        if (!v39) {
          goto LABEL_265;
        }
        if ((*(unsigned char *)(a1 + 290) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_409;
          }
          int v165 = (int)(*(_DWORD *)(a1 + 288) << 12) >> 31;
          goto LABEL_329;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_409;
        }
        int v51 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v51, (void *)v3)) {
          goto LABEL_408;
        }
        PBReaderRecallMark();
        uint64_t v52 = 176;
        goto LABEL_248;
      case 29:
        if (!v39 || (*(unsigned char *)(a1 + 289) & 8) != 0) {
          goto LABEL_265;
        }
        if (v36 != 2)
        {
          char v187 = 0;
          unsigned int v188 = 0;
          uint64_t v189 = 0;
          char v23 = (int *)MEMORY[0x1E4F940E0];
          while (1)
          {
            uint64_t v190 = *v22;
            uint64_t v191 = *(void *)(v3 + v190);
            unint64_t v192 = v191 + 1;
            if (v191 == -1 || v192 > *(void *)(v3 + *v23)) {
              goto LABEL_370;
            }
            char v193 = *(unsigned char *)(*(void *)(v3 + *v26) + v191);
            *(void *)(v3 + v190) = v192;
            v189 |= (unint64_t)(v193 & 0x7F) << v187;
            if (v193 < 0)
            {
              v187 += 7;
              BOOL v34 = v188++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_371;
          }
        }
        int v122 = PBReaderPlaceMark();
        char v23 = (int *)MEMORY[0x1E4F940E0];
        if (!v122) {
          goto LABEL_409;
        }
        while (1)
        {
          uint64_t v123 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v23) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_264;
          }
          char v124 = 0;
          unsigned int v125 = 0;
          uint64_t v126 = 0;
          char v127 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v128 = *v22;
            uint64_t v129 = *(void *)(v3 + v128);
            unint64_t v130 = v129 + 1;
            if (v129 == -1 || v130 > *(void *)(v3 + *v23)) {
              break;
            }
            char v131 = *(unsigned char *)(*(void *)(v3 + *v127) + v129);
            *(void *)(v3 + v128) = v130;
            v126 |= (unint64_t)(v131 & 0x7F) << v124;
            if (v131 < 0)
            {
              v124 += 7;
              BOOL v34 = v125++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_187;
          }
          *(unsigned char *)(v3 + *v123) = 1;
LABEL_187:
          PBRepeatedInt32Add();
        }
      case 30:
        if (!v39 || (*(unsigned char *)(a1 + 289) & 0x20) != 0) {
          goto LABEL_265;
        }
        if (v36 == 2)
        {
          int v132 = PBReaderPlaceMark();
          char v23 = (int *)MEMORY[0x1E4F940E0];
          if (!v132) {
            goto LABEL_409;
          }
          while (1)
          {
            char v133 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v23) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
              break;
            }
            char v134 = 0;
            unsigned int v135 = 0;
            uint64_t v136 = 0;
            uint64_t v137 = (int *)MEMORY[0x1E4F940B8];
            while (1)
            {
              uint64_t v138 = *v22;
              uint64_t v139 = *(void *)(v3 + v138);
              unint64_t v140 = v139 + 1;
              if (v139 == -1 || v140 > *(void *)(v3 + *v23)) {
                break;
              }
              char v141 = *(unsigned char *)(*(void *)(v3 + *v137) + v139);
              *(void *)(v3 + v138) = v140;
              v136 |= (unint64_t)(v141 & 0x7F) << v134;
              if (v141 < 0)
              {
                v134 += 7;
                BOOL v34 = v135++ >= 9;
                if (!v34) {
                  continue;
                }
              }
              goto LABEL_202;
            }
            *(unsigned char *)(v3 + *v133) = 1;
LABEL_202:
            PBRepeatedInt32Add();
          }
LABEL_264:
          PBReaderRecallMark();
        }
        else
        {
          char v194 = 0;
          unsigned int v195 = 0;
          uint64_t v196 = 0;
          char v23 = (int *)MEMORY[0x1E4F940E0];
          while (1)
          {
            uint64_t v197 = *v22;
            uint64_t v198 = *(void *)(v3 + v197);
            unint64_t v199 = v198 + 1;
            if (v198 == -1 || v199 > *(void *)(v3 + *v23)) {
              break;
            }
            char v200 = *(unsigned char *)(*(void *)(v3 + *v26) + v198);
            *(void *)(v3 + v197) = v199;
            v196 |= (unint64_t)(v200 & 0x7F) << v194;
            if (v200 < 0)
            {
              v194 += 7;
              BOOL v34 = v195++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_371;
          }
LABEL_370:
          *(unsigned char *)(v3 + *v24) = 1;
LABEL_371:
          PBRepeatedInt32Add();
        }
        unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_331;
      case 31:
        if ((v7 & 1) == 0) {
          goto LABEL_265;
        }
        char v142 = 0;
        unsigned int v143 = 0;
        uint64_t v144 = 0;
        *(_DWORD *)(a1 + 288) |= 0x80u;
        char v23 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v145 = *v22;
          uint64_t v146 = *(void *)(v3 + v145);
          unint64_t v147 = v146 + 1;
          if (v146 == -1 || v147 > *(void *)(v3 + *v23))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v148 = *(unsigned char *)(*(void *)(v3 + *v26) + v146);
            *(void *)(v3 + v145) = v147;
            v144 |= (unint64_t)(v148 & 0x7F) << v142;
            if (v148 < 0)
            {
              v142 += 7;
              BOOL v34 = v143++ >= 9;
              if (v34)
              {
                uint64_t v144 = 0;
                goto LABEL_299;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v144 = 0;
        }
LABEL_299:
        BOOL v163 = v144 != 0;
        uint64_t v164 = 285;
        goto LABEL_304;
      case 32:
        if ((v7 & 1) == 0) {
          goto LABEL_265;
        }
        char v149 = 0;
        unsigned int v150 = 0;
        uint64_t v151 = 0;
        *(_DWORD *)(a1 + 288) |= 0x100u;
        char v23 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v152 = *v22;
          uint64_t v153 = *(void *)(v3 + v152);
          unint64_t v154 = v153 + 1;
          if (v153 == -1 || v154 > *(void *)(v3 + *v23))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v155 = *(unsigned char *)(*(void *)(v3 + *v26) + v153);
            *(void *)(v3 + v152) = v154;
            v151 |= (unint64_t)(v155 & 0x7F) << v149;
            if (v155 < 0)
            {
              v149 += 7;
              BOOL v34 = v150++ >= 9;
              if (v34)
              {
                uint64_t v151 = 0;
                goto LABEL_303;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v151 = 0;
        }
LABEL_303:
        BOOL v163 = v151 != 0;
        uint64_t v164 = 286;
LABEL_304:
        *(unsigned char *)(a1 + v164) = v163;
        goto LABEL_332;
      case 33:
        if (!v39) {
          goto LABEL_265;
        }
        if ((*(unsigned char *)(a1 + 290) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_409;
          }
          int v165 = (int)(*(_DWORD *)(a1 + 288) << 8) >> 31;
          goto LABEL_329;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_409;
        }
        int v51 = objc_alloc_init(GEOPDSearchOriginationInfo);
        if (!GEOPDSearchOriginationInfoReadAllFrom((uint64_t)v51, (void *)v3, v9 & 1)) {
          goto LABEL_408;
        }
        PBReaderRecallMark();
        uint64_t v52 = 208;
        goto LABEL_248;
      case 34:
        if (!v39) {
          goto LABEL_265;
        }
        if ((*(unsigned char *)(a1 + 289) & 0x80) == 0)
        {
          uint64_t v53 = PBReaderReadString();
          uint64_t v54 = 144;
LABEL_227:
          v156 = *(void **)(a1 + v54);
          *(void *)(a1 + v54) = v53;
          goto LABEL_249;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_409;
        }
        int v165 = (int)(*(_DWORD *)(a1 + 288) << 16) >> 31;
        goto LABEL_329;
      case 35:
        if (!v39 || (*(unsigned char *)(a1 + 290) & 0x40) != 0)
        {
          char v160 = PBReaderSkipValueWithTag();
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
          char v23 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          if ((v160 & 1) == 0) {
            goto LABEL_375;
          }
          goto LABEL_332;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_409;
        }
        int v51 = objc_alloc_init(GEOPDSearchEnrichmentRevisionMetadata);
        if (!GEOPDSearchEnrichmentRevisionMetadataReadAllFrom((uint64_t)v51, (void *)v3)) {
          goto LABEL_408;
        }
        PBReaderRecallMark();
        -[GEOPDCategorySearchParameters _addNoFlagsSearchEnrichmentRevisionMetadata:](a1, v51);

        goto LABEL_330;
      case 36:
        if (!v39) {
          goto LABEL_265;
        }
        if (*(unsigned char *)(a1 + 291))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_409;
          }
          int v165 = (int)(*(_DWORD *)(a1 + 288) << 7) >> 31;
          goto LABEL_329;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_409;
        }
        int v51 = objc_alloc_init(GEOPDSSearchSessionData);
        if (!GEOPDSSearchSessionDataReadAllFrom((uint64_t)v51, (void *)v3)) {
          goto LABEL_408;
        }
        PBReaderRecallMark();
        uint64_t v52 = 216;
        goto LABEL_248;
      case 37:
        if (!v39) {
          goto LABEL_265;
        }
        if ((*(unsigned char *)(a1 + 291) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_409;
          }
          int v165 = (int)(*(_DWORD *)(a1 + 288) << 6) >> 31;
          goto LABEL_329;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_409;
        }
        int v51 = objc_alloc_init(GEOPDSSessionUserActionMetadata);
        if (!GEOPDSSessionUserActionMetadataReadAllFrom(v51, (void *)v3)) {
          goto LABEL_408;
        }
        PBReaderRecallMark();
        uint64_t v52 = 224;
        goto LABEL_248;
      case 38:
        if (!v39) {
          goto LABEL_265;
        }
        if ((*(unsigned char *)(a1 + 290) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_409;
          }
          int v165 = (int)(*(_DWORD *)(a1 + 288) << 13) >> 31;
LABEL_329:
          v6 += v165;
LABEL_330:
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
          char v23 = (int *)MEMORY[0x1E4F940E0];
LABEL_331:
          uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
LABEL_332:
          if (!(v207 & 1 | (v6 != 0)))
          {
            int v206 = 1;
LABEL_376:
            char v20 = v208;
            goto LABEL_377;
          }
          char v20 = v208;
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v23)) {
            goto LABEL_373;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_409;
        }
        int v51 = objc_alloc_init(GEOPDPaginationParameters);
        if (GEOPDPaginationParametersReadAllFrom((uint64_t)v51, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v52 = 168;
LABEL_248:
          v156 = *(void **)(a1 + v52);
          *(void *)(a1 + v52) = v51;
LABEL_249:

          --v6;
          goto LABEL_330;
        }
LABEL_408:

LABEL_409:
        int v206 = 0;
        char v20 = v208;
        unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_377:
        char v25 = v205;
LABEL_378:
        if (v25) {
LABEL_379:
        }
          *(_DWORD *)(a1 + 288) |= 0x200u;
        if (v20 & 1 | ((v206 & 1) == 0))
        {
          *(_DWORD *)(a1 + 288) |= 0x8000000u;
          *(_DWORD *)(a1 + 288) |= 0x4000000u;
          *(_DWORD *)(a1 + 288) |= 0x100000u;
          *(_DWORD *)(a1 + 288) |= 0x20000u;
          *(_DWORD *)(a1 + 288) |= 0x1000u;
          *(_DWORD *)(a1 + 288) |= 0x10000u;
          *(_DWORD *)(a1 + 288) |= 0x4000u;
          *(_DWORD *)(a1 + 288) |= 0x200000u;
          *(_DWORD *)(a1 + 288) |= 0x400u;
          *(_DWORD *)(a1 + 288) |= 0x80000u;
          *(_DWORD *)(a1 + 288) |= 0x800u;
          *(_DWORD *)(a1 + 288) |= 0x2000u;
          *(_DWORD *)(a1 + 288) |= 0x800000u;
          *(_DWORD *)(a1 + 288) |= 0x8000u;
          *(_DWORD *)(a1 + 288) |= 0x400000u;
          *(_DWORD *)(a1 + 288) |= 0x1000000u;
          *(_DWORD *)(a1 + 288) |= 0x2000000u;
          *(_DWORD *)(a1 + 288) |= 0x40000u;
        }
        else if (v21)
        {
          while (1)
          {
            int v201 = *v21++;
            int v202 = 0x8000000;
            switch(v201)
            {
              case 0:
                goto LABEL_402;
              case 3:
                goto LABEL_401;
              case 4:
                int v202 = 0x4000000;
                goto LABEL_401;
              case 8:
                int v202 = 0x100000;
                goto LABEL_401;
              case 10:
                int v202 = 0x20000;
                goto LABEL_401;
              case 21:
                int v202 = 4096;
                goto LABEL_401;
              case 22:
                int v202 = 0x10000;
                goto LABEL_401;
              case 23:
                int v202 = 0x4000;
                goto LABEL_401;
              case 25:
                int v202 = 0x200000;
                goto LABEL_401;
              case 26:
                int v202 = 1024;
                goto LABEL_401;
              case 28:
                int v202 = 0x80000;
                goto LABEL_401;
              case 29:
                int v202 = 2048;
                goto LABEL_401;
              case 30:
                int v202 = 0x2000;
                goto LABEL_401;
              case 33:
                int v202 = 0x800000;
                goto LABEL_401;
              case 34:
                int v202 = 0x8000;
                goto LABEL_401;
              case 35:
                int v202 = 0x400000;
                goto LABEL_401;
              case 36:
                int v202 = 0x1000000;
                goto LABEL_401;
              case 37:
                int v202 = 0x2000000;
                goto LABEL_401;
              case 38:
                int v202 = 0x40000;
LABEL_401:
                *(_DWORD *)(a1 + 288) |= v202;
                break;
              default:
                continue;
            }
          }
        }
LABEL_402:
        if (v206)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v24) == 0;
          if ((v20 & 1) == 0) {
            return v3;
          }
LABEL_406:
          v203 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v20) {
            goto LABEL_406;
          }
        }
        return v3;
      default:
        if ((v205 & 1) == 0 || (*(unsigned char *)(a1 + 289) & 2) != 0)
        {
LABEL_265:
          char v161 = PBReaderSkipValueWithTag();
          uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
          char v23 = (int *)MEMORY[0x1E4F940E0];
          if ((v161 & 1) == 0)
          {
LABEL_375:
            int v206 = 0;
            goto LABEL_376;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v157 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v158 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v157;
          }
          int v159 = PBUnknownFieldAdd();
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
          char v23 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          if (!v159)
          {
            int v206 = 0;
            char v20 = v208;
            goto LABEL_379;
          }
        }
        goto LABEL_332;
    }
  }
}

void sub_189491540(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18949169C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189491834(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18949197C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189491ACC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189491C14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189491D64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189491EC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189492008(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189492218(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189493754(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDCategorySearchParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 240) readAll:1];
  -[GEOPDRecentRouteInfo readAll:](*(void *)(a1 + 184), 1);
  -[GEOPDSSearchEvChargingParameters readAll:](*(void *)(a1 + 160), 1);
  -[GEOPDETAFilter readAll:](*(void *)(a1 + 152), 1);
  [*(id *)(a1 + 192) readAll:1];
  [*(id *)(a1 + 176) readAll:1];
  -[GEOPDSearchOriginationInfo readAll:](*(void *)(a1 + 208), 1);
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 200);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    while (1)
    {
      if (*(void *)v8 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  return objc_msgSend(*(id *)(a1 + 224), "readAll:", 1, v7);
}

unint64_t GEOPDCategorySearchParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 252))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDCategorySearchParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 256));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 248) = [v8 position];
  *(_DWORD *)(a1 + 252) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDCategorySearchParametersReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDCategorySearchParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDCategorySearchParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDCategorySearchParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 256));
  return Specified;
}

void sub_189493B74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRecentRouteInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_48;
          }
          goto LABEL_42;
        case 2u:
          if (v15 == 2) {
            goto LABEL_42;
          }
          goto LABEL_48;
        case 3u:
          if (v15 == 2) {
            goto LABEL_42;
          }
          goto LABEL_48;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_48;
          }
          unsigned int v17 = 0;
          break;
        case 5u:
          if (v15 == 2) {
            goto LABEL_42;
          }
          goto LABEL_48;
        case 6u:
          if (v15 == 2) {
            goto LABEL_42;
          }
          goto LABEL_48;
        case 7u:
          if (v15 == 2) {
            goto LABEL_42;
          }
          goto LABEL_48;
        case 8u:
          if (v15 != 2) {
            goto LABEL_48;
          }
LABEL_42:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_48:
          BOOL v23 = 0;
          goto LABEL_47;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_48;
          }
          continue;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_43;
      }
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
LABEL_47:
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPDPaginationParametersIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          BOOL v23 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

void sub_1894945F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDCategorySearchParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 256));
  unsigned int v2 = *(_DWORD *)(a1 + 288);
  if ((v2 & 0x1C000000) != 0) {
    return 1;
  }
  if ((v2 & 0x100000) != 0)
  {
    if (GEOPDRecentRouteInfoIsDirty(*(void *)(a1 + 184))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 288);
  }
  if ((v2 & 0x20000) != 0)
  {
    if (GEOPDSSearchEvChargingParametersIsDirty(*(void *)(a1 + 160))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 288);
  }
  if ((v2 & 0x1000) != 0) {
    return 1;
  }
  if ((v2 & 0x10000) != 0)
  {
    if (GEOPDETAFilterIsDirty(*(os_unfair_lock_s **)(a1 + 152))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 288);
  }
  if ((v2 & 0x4000) != 0) {
    return 1;
  }
  if ((v2 & 0x200000) != 0)
  {
    if (GEOPDResultRefinementQueryIsDirty(*(os_unfair_lock_s **)(a1 + 192))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 288);
  }
  if ((v2 & 0x82C00) != 0) {
    return 1;
  }
  if ((v2 & 0x800000) == 0) {
    goto LABEL_21;
  }
  if (GEOPDSearchOriginationInfoIsDirty(*(void *)(a1 + 208))) {
    return 1;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 288);
LABEL_21:
  if ((v2 & 0x3408000) != 0) {
    return 1;
  }
  return (v2 >> 18) & 1;
}

os_unfair_lock_s *GEOPDCategorySearchParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDCategorySearchParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 64);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189494DA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189495B3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategorySearchResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 168));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 164);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 160)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = *(_DWORD *)(a1 + 184);
  uint32x4_t v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  unsigned int v15 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62F5E0), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62F5F0), v14)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62F5C0), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62F5D0), v14))))+ ((v12 >> 15) & 1)+ ((v12 >> 6) & 1);
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 0xD;
        char v20 = v19 & ~(_BYTE)v11 | v9;
        unsigned __int8 v21 = v19 | v11;
        char v123 = v20;
        char v124 = v21 | v20;
        if ((v21 | v8)) {
          uint64_t v22 = 0;
        }
        else {
          uint64_t v22 = a3;
        }
        BOOL v23 = (int *)MEMORY[0x1E4F940E8];
        char v125 = (v22 == 0) | v21;
        BOOL v126 = v21;
        unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
        char v25 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v9;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v23) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v24)) {
      goto LABEL_236;
    }
    char v26 = 0;
    unsigned int v27 = 0;
    unint64_t v28 = 0;
    while (1)
    {
      uint64_t v29 = *v23;
      uint64_t v30 = *(void *)(v3 + v29);
      unint64_t v31 = v30 + 1;
      if (v30 == -1 || v31 > *(void *)(v3 + *v6)) {
        break;
      }
      char v32 = *(unsigned char *)(*(void *)(v3 + *v25) + v30);
      *(void *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0) {
        goto LABEL_25;
      }
      v26 += 7;
      BOOL v33 = v27++ >= 9;
      if (v33)
      {
        unint64_t v28 = 0;
        int v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v24) = 1;
LABEL_25:
    int v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(unsigned char *)(v3 + *v24)) {
      unint64_t v28 = 0;
    }
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_236:
      int v122 = 1;
      goto LABEL_237;
    }
    unint64_t v36 = v28 >> 3;
    BOOL v37 = v126;
    if ((v125 & 1) == 0)
    {
      unint64_t v38 = v22;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37) {
          goto LABEL_180;
        }
        if ((*(unsigned char *)(a1 + 185) & 8) == 0)
        {
          char v42 = PBReaderPlaceMark();
          char v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v42 & 1) == 0) {
            goto LABEL_268;
          }
          BOOL v43 = objc_alloc_init(GEOMapRegion);
          if (GEOMapRegionReadAllFrom((uint64_t)v43, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v44 = 56;
            goto LABEL_179;
          }
          goto LABEL_267;
        }
        char v105 = PBReaderSkipValueWithTag();
        char v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v105 & 1) == 0) {
          goto LABEL_268;
        }
        int v106 = (int)(*(_DWORD *)(a1 + 184) << 20) >> 31;
        goto LABEL_232;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_180;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(_DWORD *)(a1 + 184) |= 0x20u;
        char v6 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v48 = *v23;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v25) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v33 = v46++ >= 9;
              if (v33)
              {
                uint64_t v47 = 0;
                goto LABEL_185;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v47 = 0;
        }
LABEL_185:
        BOOL v102 = v47 != 0;
        uint64_t v103 = 183;
        goto LABEL_202;
      case 3:
        if (!v37 || (*(unsigned char *)(a1 + 186) & 2) != 0) {
          goto LABEL_180;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_268;
        }
        BOOL v43 = objc_alloc_init(GEOPDRelatedSearchSuggestion);
        if (!GEOPDRelatedSearchSuggestionReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
          goto LABEL_267;
        }
        PBReaderRecallMark();
        -[GEOPDCategorySearchResult _addNoFlagsRelatedSearchSuggestion:](a1, v43);
        goto LABEL_100;
      case 4:
        if (!v37 || (*(unsigned char *)(a1 + 186) & 4) != 0) {
          goto LABEL_180;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_268;
        }
        BOOL v43 = objc_alloc_init(GEOPDResultDetourInfo);
        if (!GEOPDResultDetourInfoReadAllFrom((uint64_t)v43, (void *)v3)) {
          goto LABEL_267;
        }
        PBReaderRecallMark();
        -[GEOPDCategorySearchResult _addNoFlagsResultDetourInfo:](a1, v43);
        goto LABEL_100;
      case 5:
        if (!v37) {
          goto LABEL_180;
        }
        if ((*(unsigned char *)(a1 + 185) & 4) != 0)
        {
          char v107 = PBReaderSkipValueWithTag();
          char v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v107 & 1) == 0) {
            goto LABEL_268;
          }
          int v106 = (int)(*(_DWORD *)(a1 + 184) << 21) >> 31;
          goto LABEL_232;
        }
        char v52 = PBReaderPlaceMark();
        char v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v52 & 1) == 0) {
          goto LABEL_268;
        }
        BOOL v43 = objc_alloc_init(GEOPDRelatedSearchSuggestion);
        if (!GEOPDRelatedSearchSuggestionReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
          goto LABEL_267;
        }
        PBReaderRecallMark();
        uint64_t v44 = 48;
        goto LABEL_179;
      case 6:
        if (!v37) {
          goto LABEL_180;
        }
        if ((*(unsigned char *)(a1 + 186) & 0x10) != 0)
        {
          char v108 = PBReaderSkipValueWithTag();
          char v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v108 & 1) == 0) {
            goto LABEL_268;
          }
          int v106 = (int)(*(_DWORD *)(a1 + 184) << 11) >> 31;
          goto LABEL_232;
        }
        char v53 = PBReaderPlaceMark();
        char v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v53 & 1) == 0) {
          goto LABEL_268;
        }
        BOOL v43 = objc_alloc_init(GEOPDSearchClientBehavior);
        if (!GEOPDSearchClientBehaviorReadAllFrom((uint64_t)v43, (void *)v3)) {
          goto LABEL_267;
        }
        PBReaderRecallMark();
        uint64_t v44 = 128;
        goto LABEL_179;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_180;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0;
        *(_DWORD *)(a1 + 184) |= 8u;
        char v6 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v57 = *v23;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v25) + v58);
            *(void *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              BOOL v33 = v55++ >= 9;
              if (v33)
              {
                uint64_t v56 = 0;
                goto LABEL_189;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v56 = 0;
        }
LABEL_189:
        BOOL v102 = v56 != 0;
        uint64_t v103 = 181;
        goto LABEL_202;
      case 8:
        if (!v37 || (*(unsigned char *)(a1 + 185) & 1) != 0) {
          goto LABEL_180;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_268;
        }
        BOOL v43 = objc_alloc_init(GEOPDBrowseCategory);
        if (!GEOPDBrowseCategoryReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
          goto LABEL_267;
        }
        PBReaderRecallMark();
        -[GEOPDCategorySearchResult _addNoFlagsBrowseCategory:](a1, v43);
        goto LABEL_100;
      case 9:
        if (!v37) {
          goto LABEL_180;
        }
        if ((*(unsigned char *)(a1 + 185) & 2) != 0)
        {
          char v109 = PBReaderSkipValueWithTag();
          char v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v109 & 1) == 0) {
            goto LABEL_268;
          }
          int v106 = (int)(*(_DWORD *)(a1 + 184) << 22) >> 31;
          goto LABEL_232;
        }
        char v61 = PBReaderPlaceMark();
        char v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v61 & 1) == 0) {
          goto LABEL_268;
        }
        BOOL v43 = objc_alloc_init(GEOPDSCategorySearchResultSection);
        if (!GEOPDSCategorySearchResultSectionReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
          goto LABEL_267;
        }
        PBReaderRecallMark();
        uint64_t v44 = 40;
        goto LABEL_179;
      case 10:
        if (!v37 || (*(unsigned char *)(a1 + 186) & 1) != 0) {
          goto LABEL_180;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_268;
        }
        BOOL v43 = objc_alloc_init(GEOPDRelatedEntitySection);
        if (!GEOPDRelatedEntitySectionReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
          goto LABEL_267;
        }
        PBReaderRecallMark();
        -[GEOPDCategorySearchResult _addNoFlagsRelatedEntitySection:](a1, v43);
        goto LABEL_100;
      case 11:
        if (!v37 || (*(unsigned char *)(a1 + 186) & 0x40) != 0) {
          goto LABEL_180;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_268;
        }
        BOOL v43 = objc_alloc_init(GEOPDSSearchTierMetadata);
        if (!GEOPDSSearchTierMetadataReadAllFrom((uint64_t)v43, (void *)v3)) {
          goto LABEL_267;
        }
        PBReaderRecallMark();
        -[GEOPDCategorySearchResult _addNoFlagsSearchTierMetadata:](a1, v43);
LABEL_100:

        unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
        char v6 = (int *)MEMORY[0x1E4F940E0];
        goto LABEL_234;
      case 12:
        if (!v37) {
          goto LABEL_180;
        }
        if ((*(unsigned char *)(a1 + 186) & 8) != 0)
        {
          char v110 = PBReaderSkipValueWithTag();
          char v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v110 & 1) == 0) {
            goto LABEL_268;
          }
          int v106 = (int)(*(_DWORD *)(a1 + 184) << 12) >> 31;
          goto LABEL_232;
        }
        char v62 = PBReaderPlaceMark();
        char v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v62 & 1) == 0) {
          goto LABEL_268;
        }
        BOOL v43 = objc_alloc_init(GEOPDResultRefinementGroup);
        if (!GEOPDResultRefinementGroupReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
          goto LABEL_267;
        }
        PBReaderRecallMark();
        uint64_t v44 = 120;
        goto LABEL_179;
      case 13:
        if (!v37) {
          goto LABEL_180;
        }
        if ((*(unsigned char *)(a1 + 184) & 0x80) != 0)
        {
          char v111 = PBReaderSkipValueWithTag();
          char v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v111 & 1) == 0) {
            goto LABEL_268;
          }
          int v106 = (int)(*(_DWORD *)(a1 + 184) << 24) >> 31;
          goto LABEL_232;
        }
        char v63 = PBReaderPlaceMark();
        char v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v63 & 1) == 0) {
          goto LABEL_268;
        }
        BOOL v43 = objc_alloc_init(GEOPDSSearchAutoRedoThreshold);
        if (!GEOPDSSearchAutoRedoThresholdReadAllFrom((uint64_t)v43, (void *)v3)) {
          goto LABEL_267;
        }
        PBReaderRecallMark();
        uint64_t v44 = 24;
        goto LABEL_179;
      case 14:
        if (!v37) {
          goto LABEL_180;
        }
        if ((*(unsigned char *)(a1 + 185) & 0x40) != 0)
        {
          char v112 = PBReaderSkipValueWithTag();
          char v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v112 & 1) == 0) {
            goto LABEL_268;
          }
          int v106 = (int)(*(_DWORD *)(a1 + 184) << 17) >> 31;
          goto LABEL_232;
        }
        char v64 = PBReaderPlaceMark();
        char v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v64 & 1) == 0) {
          goto LABEL_268;
        }
        BOOL v43 = objc_alloc_init(GEOPDPlaceSummaryLayoutMetadata);
        if (!GEOPDPlaceSummaryLayoutMetadataReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
          goto LABEL_267;
        }
        PBReaderRecallMark();
        uint64_t v44 = 80;
        goto LABEL_179;
      case 15:
        if (!v37) {
          goto LABEL_180;
        }
        if ((*(unsigned char *)(a1 + 186) & 0x80) != 0)
        {
          char v113 = PBReaderSkipValueWithTag();
          char v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v113 & 1) == 0) {
            goto LABEL_268;
          }
          int v106 = (int)(*(_DWORD *)(a1 + 184) << 8) >> 31;
          goto LABEL_232;
        }
        char v65 = PBReaderPlaceMark();
        char v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v65 & 1) == 0) {
          goto LABEL_268;
        }
        BOOL v43 = objc_alloc_init(GEOPDSearchSectionList);
        if (!GEOPDSearchSectionListReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
          goto LABEL_267;
        }
        PBReaderRecallMark();
        uint64_t v44 = 152;
        goto LABEL_179;
      case 16:
        if ((v8 & 1) == 0) {
          goto LABEL_180;
        }
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v68 = 0;
        *(_DWORD *)(a1 + 184) |= 4u;
        char v6 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v69 = *v23;
          uint64_t v70 = *(void *)(v3 + v69);
          unint64_t v71 = v70 + 1;
          if (v70 == -1 || v71 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(v3 + *v25) + v70);
            *(void *)(v3 + v69) = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if (v72 < 0)
            {
              v66 += 7;
              BOOL v33 = v67++ >= 9;
              if (v33)
              {
                uint64_t v68 = 0;
                goto LABEL_193;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v68 = 0;
        }
LABEL_193:
        BOOL v102 = v68 != 0;
        uint64_t v103 = 180;
        goto LABEL_202;
      case 17:
        if ((v8 & 1) == 0) {
          goto LABEL_180;
        }
        char v73 = 0;
        unsigned int v74 = 0;
        uint64_t v75 = 0;
        *(_DWORD *)(a1 + 184) |= 2u;
        char v6 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v76 = *v23;
          uint64_t v77 = *(void *)(v3 + v76);
          unint64_t v78 = v77 + 1;
          if (v77 == -1 || v78 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v79 = *(unsigned char *)(*(void *)(v3 + *v25) + v77);
            *(void *)(v3 + v76) = v78;
            v75 |= (unint64_t)(v79 & 0x7F) << v73;
            if (v79 < 0)
            {
              v73 += 7;
              BOOL v33 = v74++ >= 9;
              if (v33)
              {
                LODWORD(v75) = 0;
                goto LABEL_197;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v75) = 0;
        }
LABEL_197:
        uint64_t v104 = 176;
        goto LABEL_207;
      case 19:
        if ((v8 & 1) == 0) {
          goto LABEL_180;
        }
        char v83 = 0;
        unsigned int v84 = 0;
        uint64_t v85 = 0;
        *(_DWORD *)(a1 + 184) |= 0x10u;
        char v6 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v86 = *v23;
          uint64_t v87 = *(void *)(v3 + v86);
          unint64_t v88 = v87 + 1;
          if (v87 == -1 || v88 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v89 = *(unsigned char *)(*(void *)(v3 + *v25) + v87);
            *(void *)(v3 + v86) = v88;
            v85 |= (unint64_t)(v89 & 0x7F) << v83;
            if (v89 < 0)
            {
              v83 += 7;
              BOOL v33 = v84++ >= 9;
              if (v33)
              {
                uint64_t v85 = 0;
                goto LABEL_201;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v85 = 0;
        }
LABEL_201:
        BOOL v102 = v85 != 0;
        uint64_t v103 = 182;
LABEL_202:
        *(unsigned char *)(a1 + v103) = v102;
        goto LABEL_235;
      case 20:
        if (!v37) {
          goto LABEL_180;
        }
        if ((*(unsigned char *)(a1 + 186) & 0x20) != 0)
        {
          char v114 = PBReaderSkipValueWithTag();
          char v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v114 & 1) == 0) {
            goto LABEL_268;
          }
          int v106 = (int)(*(_DWORD *)(a1 + 184) << 10) >> 31;
          goto LABEL_232;
        }
        char v90 = PBReaderPlaceMark();
        char v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v90 & 1) == 0) {
          goto LABEL_268;
        }
        BOOL v43 = objc_alloc_init(GEOPDSSearchSessionData);
        if (!GEOPDSSearchSessionDataReadAllFrom((uint64_t)v43, (void *)v3)) {
          goto LABEL_267;
        }
        PBReaderRecallMark();
        uint64_t v44 = 136;
        goto LABEL_179;
      case 21:
        if ((v8 & 1) == 0) {
          goto LABEL_180;
        }
        char v91 = 0;
        unsigned int v92 = 0;
        uint64_t v75 = 0;
        *(_DWORD *)(a1 + 184) |= 1u;
        char v6 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v93 = *v23;
          uint64_t v94 = *(void *)(v3 + v93);
          unint64_t v95 = v94 + 1;
          if (v94 == -1 || v95 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v96 = *(unsigned char *)(*(void *)(v3 + *v25) + v94);
            *(void *)(v3 + v93) = v95;
            v75 |= (unint64_t)(v96 & 0x7F) << v91;
            if (v96 < 0)
            {
              v91 += 7;
              BOOL v33 = v92++ >= 9;
              if (v33)
              {
                LODWORD(v75) = 0;
                goto LABEL_206;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v75) = 0;
        }
LABEL_206:
        uint64_t v104 = 172;
LABEL_207:
        *(_DWORD *)(a1 + v104) = v75;
        goto LABEL_235;
      case 22:
        if (!v37) {
          goto LABEL_180;
        }
        if ((*(unsigned char *)(a1 + 185) & 0x10) != 0)
        {
          char v115 = PBReaderSkipValueWithTag();
          char v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v115 & 1) == 0) {
            goto LABEL_268;
          }
          int v106 = (int)(*(_DWORD *)(a1 + 184) << 19) >> 31;
          goto LABEL_232;
        }
        char v97 = PBReaderPlaceMark();
        char v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v97 & 1) == 0) {
          goto LABEL_268;
        }
        BOOL v43 = objc_alloc_init(GEOPDGuideSummaryLayoutMetadata);
        if (!GEOPDGuideSummaryLayoutMetadataReadAllFrom((uint64_t)v43, (void *)v3)) {
          goto LABEL_267;
        }
        PBReaderRecallMark();
        uint64_t v44 = 64;
        goto LABEL_179;
      case 23:
        if (!v37) {
          goto LABEL_180;
        }
        if ((*(unsigned char *)(a1 + 185) & 0x20) != 0)
        {
          char v116 = PBReaderSkipValueWithTag();
          char v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v116 & 1) == 0) {
            goto LABEL_268;
          }
          int v106 = (int)(*(_DWORD *)(a1 + 184) << 18) >> 31;
          goto LABEL_232;
        }
        char v98 = PBReaderPlaceMark();
        char v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v98 & 1) == 0) {
          goto LABEL_268;
        }
        BOOL v43 = objc_alloc_init(GEOPDPaginationInfo);
        if (!GEOPDPaginationInfoReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
          goto LABEL_267;
        }
        PBReaderRecallMark();
        uint64_t v44 = 72;
        goto LABEL_179;
      case 24:
        if (!v37) {
          goto LABEL_180;
        }
        if ((*(unsigned char *)(a1 + 185) & 0x80) != 0)
        {
          char v117 = PBReaderSkipValueWithTag();
          char v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v117 & 1) == 0) {
            goto LABEL_268;
          }
          int v106 = (int)(*(_DWORD *)(a1 + 184) << 16) >> 31;
LABEL_232:
          v7 += v106;
LABEL_233:
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_234:
          char v25 = (int *)MEMORY[0x1E4F940B8];
LABEL_235:
          if (!(v124 & 1 | (v7 != 0))) {
            goto LABEL_236;
          }
          continue;
        }
        char v99 = PBReaderPlaceMark();
        char v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v99 & 1) == 0) {
          goto LABEL_268;
        }
        BOOL v43 = objc_alloc_init(GEOPDSSearchRedoButtonThreshold);
        if (GEOPDSSearchRedoButtonThresholdReadAllFrom((uint64_t)v43, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v44 = 88;
LABEL_179:
          char v100 = *(void **)(a1 + v44);
          *(void *)(a1 + v44) = v43;

          --v7;
          goto LABEL_233;
        }
LABEL_267:

LABEL_268:
        int v122 = 0;
        unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_237:
        if (v123) {
LABEL_238:
        }
          *(_DWORD *)(a1 + 184) |= 0x40u;
        if (v126 || (v122 & 1) == 0)
        {
          *(_DWORD *)(a1 + 184) |= 0x800u;
          *(_DWORD *)(a1 + 184) |= 0x20000u;
          *(_DWORD *)(a1 + 184) |= 0x40000u;
          *(_DWORD *)(a1 + 184) |= 0x400u;
          *(_DWORD *)(a1 + 184) |= 0x100000u;
          *(_DWORD *)(a1 + 184) |= 0x100u;
          *(_DWORD *)(a1 + 184) |= 0x200u;
          *(_DWORD *)(a1 + 184) |= 0x10000u;
          *(_DWORD *)(a1 + 184) |= 0x400000u;
          *(_DWORD *)(a1 + 184) |= 0x80000u;
          *(_DWORD *)(a1 + 184) |= 0x80u;
          *(_DWORD *)(a1 + 184) |= 0x4000u;
          *(_DWORD *)(a1 + 184) |= 0x800000u;
          *(_DWORD *)(a1 + 184) |= 0x200000u;
          *(_DWORD *)(a1 + 184) |= 0x1000u;
          *(_DWORD *)(a1 + 184) |= 0x2000u;
          *(_DWORD *)(a1 + 184) |= 0x8000u;
        }
        else if (v22)
        {
          while (1)
          {
            int v119 = *v22++;
            int v118 = 2048;
            switch(v119)
            {
              case 0:
                goto LABEL_261;
              case 1:
                goto LABEL_259;
              case 3:
                int v118 = 0x20000;
                goto LABEL_259;
              case 4:
                int v118 = 0x40000;
                goto LABEL_259;
              case 5:
                int v118 = 1024;
                goto LABEL_259;
              case 6:
                int v118 = 0x100000;
                goto LABEL_259;
              case 8:
                int v118 = 256;
                goto LABEL_259;
              case 9:
                int v118 = 512;
                goto LABEL_259;
              case 10:
                int v118 = 0x10000;
                goto LABEL_259;
              case 11:
                int v118 = 0x400000;
                goto LABEL_259;
              case 12:
                int v118 = 0x80000;
                goto LABEL_259;
              case 13:
                int v118 = 128;
                goto LABEL_259;
              case 14:
                int v118 = 0x4000;
                goto LABEL_259;
              case 15:
                int v118 = 0x800000;
                goto LABEL_259;
              case 20:
                int v118 = 0x200000;
                goto LABEL_259;
              case 22:
                int v118 = 4096;
                goto LABEL_259;
              case 23:
                int v118 = 0x2000;
                goto LABEL_259;
              case 24:
                int v118 = 0x8000;
LABEL_259:
                *(_DWORD *)(a1 + 184) |= v118;
                break;
              default:
                continue;
            }
          }
        }
LABEL_261:
        if (v122) {
          unint64_t v3 = *(unsigned char *)(v3 + *v24) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v126)
        {
          unint64_t v120 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v123 & 1) == 0 || (*(unsigned char *)(a1 + 184) & 0x40) != 0)
        {
LABEL_180:
          char v101 = PBReaderSkipValueWithTag();
          char v25 = (int *)MEMORY[0x1E4F940B8];
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
          char v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v101 & 1) == 0)
          {
            int v122 = 0;
            goto LABEL_237;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v80 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v81 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v80;
          }
          int v82 = PBUnknownFieldAdd();
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
          char v6 = (int *)MEMORY[0x1E4F940E0];
          char v25 = (int *)MEMORY[0x1E4F940B8];
          if (!v82)
          {
            int v122 = 0;
            goto LABEL_238;
          }
        }
        goto LABEL_235;
    }
  }
}

void sub_189497218(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189497448(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189497678(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18949780C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894979A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189497BD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189497D64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189497FD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189498128(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894982B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18949844C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894985E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894987E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894989F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189498C04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189499CA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189499D9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDCategorySearchResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 56) readAll:1];
  long long v44 = 0u;
  long long v45 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  id v2 = *(id *)(a1 + 104);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v42 objects:v50 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v43;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v43 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDRelatedSearchSuggestion readAll:](*(void *)(*((void *)&v42 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v42 objects:v50 count:16];
    }
    while (v4);
  }

  long long v40 = 0u;
  long long v41 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id v7 = *(id *)(a1 + 112);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v38 objects:v49 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v39;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v39 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v38 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v38 objects:v49 count:16];
    }
    while (v9);
  }

  -[GEOPDRelatedSearchSuggestion readAll:](*(void *)(a1 + 48), 1);
  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  id v12 = *(id *)(a1 + 32);
  uint64_t v13 = [v12 countByEnumeratingWithState:&v34 objects:v48 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v35;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v35 != v15) {
          objc_enumerationMutation(v12);
        }
        -[GEOPDBrowseCategory readAll:](*(void *)(*((void *)&v34 + 1) + 8 * v16++), 1);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v34 objects:v48 count:16];
    }
    while (v14);
  }

  -[GEOPDSCategorySearchResultSection readAll:](*(void *)(a1 + 40), 1);
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v17 = *(id *)(a1 + 96);
  uint64_t v18 = [v17 countByEnumeratingWithState:&v30 objects:v47 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v31;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v31 != v20) {
          objc_enumerationMutation(v17);
        }
        -[GEOPDRelatedEntitySection readAll:](*(void *)(*((void *)&v30 + 1) + 8 * v21++), 1);
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v30 objects:v47 count:16];
    }
    while (v19);
  }

  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v22 = *(id *)(a1 + 144);
  uint64_t v23 = [v22 countByEnumeratingWithState:&v26 objects:v46 count:16];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)v27;
    while (1)
    {
      if (*(void *)v27 != v25) {
        objc_enumerationMutation(v22);
      }
      if (!--v24)
      {
        uint64_t v24 = [v22 countByEnumeratingWithState:&v26 objects:v46 count:16];
        if (!v24) {
          break;
        }
      }
    }
  }

  -[GEOPDResultRefinementGroup readAll:](*(void *)(a1 + 120), 1);
  objc_msgSend(*(id *)(a1 + 80), "readAll:", 1, v26);
  -[GEOPDPaginationInfo readAll:](*(void *)(a1 + 72), 1);
}

unint64_t GEOPDCategorySearchResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 164))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDCategorySearchResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 168));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 160) = [v8 position];
  *(_DWORD *)(a1 + 164) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDCategorySearchResultReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDCategorySearchResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDCategorySearchResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDCategorySearchResultCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 168));
  return Specified;
}

void sub_18949A3CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultDetourInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          BOOL v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v21 = v32++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

BOOL GEOPDSearchClientBehaviorIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOPDPaginationInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_44;
          }
          goto LABEL_22;
        case 2u:
          if (v15 == 2) {
            goto LABEL_22;
          }
          goto LABEL_44;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_40;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_41;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_22:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_44:
          BOOL v28 = 0;
          goto LABEL_43;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_41;
      }
LABEL_40:
      a1[*v4] = 1;
LABEL_41:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v28;
}

void sub_18949B234(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDCategorySearchResultIsDirty(uint64_t a1)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 168));
  int v2 = *(_DWORD *)(a1 + 184);
  if ((v2 & 0x1060800) != 0) {
    return 1;
  }
  if ((v2 & 0x400) != 0)
  {
    if (GEOPDRelatedSearchSuggestionIsDirty(*(void *)(a1 + 48))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 184);
  }
  if ((v2 & 0x100100) == 0)
  {
    if ((v2 & 0x200) == 0) {
      goto LABEL_9;
    }
    if (!GEOPDSCategorySearchResultSectionIsDirty(*(void *)(a1 + 40)))
    {
      int v2 = *(_DWORD *)(a1 + 184);
LABEL_9:
      if ((v2 & 0x410000) != 0) {
        return 1;
      }
      if ((v2 & 0x80000) != 0)
      {
        if (GEOPDResultRefinementGroupIsDirty(*(os_unfair_lock_s **)(a1 + 120))) {
          return 1;
        }
        int v2 = *(_DWORD *)(a1 + 184);
      }
      if ((v2 & 0x80) != 0) {
        return 1;
      }
      if ((v2 & 0x4000) != 0)
      {
        if (GEOPDPlaceSummaryLayoutMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 80))) {
          return 1;
        }
        int v2 = *(_DWORD *)(a1 + 184);
      }
      if ((v2 & 0xA01000) != 0) {
        return 1;
      }
      if ((v2 & 0x2000) != 0)
      {
        if (GEOPDPaginationInfoIsDirty(*(void *)(a1 + 72))) {
          return 1;
        }
        int v2 = *(_DWORD *)(a1 + 184);
      }
      if ((v2 & 0x8000) != 0) {
        return 1;
      }
      if ((v2 & 0x20000) != 0)
      {
        long long v26 = 0u;
        long long v27 = 0u;
        long long v24 = 0u;
        long long v25 = 0u;
        id v5 = *(id *)(a1 + 104);
        uint64_t v6 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
        if (v6)
        {
          uint64_t v7 = v6;
          uint64_t v8 = *(void *)v25;
LABEL_27:
          uint64_t v9 = 0;
          while (1)
          {
            if (*(void *)v25 != v8) {
              objc_enumerationMutation(v5);
            }
            if (GEOPDRelatedSearchSuggestionIsDirty(*(void *)(*((void *)&v24 + 1) + 8 * v9))) {
              goto LABEL_55;
            }
            if (v7 == ++v9)
            {
              uint64_t v7 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
              if (v7) {
                goto LABEL_27;
              }
              break;
            }
          }
        }

        int v2 = *(_DWORD *)(a1 + 184);
      }
      if ((v2 & 0x100) != 0)
      {
        long long v22 = 0u;
        long long v23 = 0u;
        long long v20 = 0u;
        long long v21 = 0u;
        id v5 = *(id *)(a1 + 32);
        uint64_t v10 = [v5 countByEnumeratingWithState:&v20 objects:v29 count:16];
        if (v10)
        {
          uint64_t v11 = v10;
          uint64_t v12 = *(void *)v21;
LABEL_37:
          uint64_t v13 = 0;
          while (1)
          {
            if (*(void *)v21 != v12) {
              objc_enumerationMutation(v5);
            }
            if (GEOPDBrowseCategoryIsDirty(*(void *)(*((void *)&v20 + 1) + 8 * v13))) {
              goto LABEL_55;
            }
            if (v11 == ++v13)
            {
              uint64_t v11 = [v5 countByEnumeratingWithState:&v20 objects:v29 count:16];
              if (v11) {
                goto LABEL_37;
              }
              break;
            }
          }
        }

        int v2 = *(_DWORD *)(a1 + 184);
      }
      if ((v2 & 0x10000) == 0) {
        return 0;
      }
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      id v5 = *(id *)(a1 + 96);
      uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v28 count:16];
      if (!v3)
      {
LABEL_56:

        return v3;
      }
      uint64_t v14 = *(void *)v17;
LABEL_48:
      uint64_t v15 = 0;
      while (1)
      {
        if (*(void *)v17 != v14) {
          objc_enumerationMutation(v5);
        }
        if (GEOPDRelatedEntitySectionIsDirty(*(void *)(*((void *)&v16 + 1) + 8 * v15))) {
          break;
        }
        if (v3 == ++v15)
        {
          uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v28 count:16];
          if (v3) {
            goto LABEL_48;
          }
          goto LABEL_56;
        }
      }
LABEL_55:
      uint64_t v3 = 1;
      goto LABEL_56;
    }
  }
  return 1;
}

os_unfair_lock_s *GEOPDCategorySearchResultIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDCategorySearchResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 42);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18949BD58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDChildPlaceLookupByCategoryParametersReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_34;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              uint64_t v22 = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            uint64_t v22 = 0;
          }
LABEL_36:
          *(void *)(a1 + 24) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadData();
          long long v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v28 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v27;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_39;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_39:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_18949CE60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDChildPlaceLookupByCategoryResultReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18949D598(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18949D778(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCollectionSuggestionParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFDFFFBFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 76) & 2) != 0));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 2;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v55 = v18;
        char v56 = v19 | v18;
        if ((v19 | v9)) {
          char v20 = 0;
        }
        else {
          char v20 = a3;
        }
        BOOL v21 = (int *)MEMORY[0x1E4F940E8];
        char v57 = (v20 == 0) | v19;
        BOOL v58 = v19;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (*(void *)(v3 + *v21) < *(void *)(v3 + *v7) && !*(unsigned char *)(v3 + *v22))
  {
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      if (v25++ >= 9)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4) {
      break;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v58;
    if ((v57 & 1) == 0)
    {
      int v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_96;
          }
          long long v40 = objc_alloc_init(GEOPDViewportInfo);
          if (GEOPDViewportInfoReadAllFrom((uint64_t)v40, (void *)v3))
          {
            PBReaderRecallMark();
            long long v41 = *(void **)(a1 + 56);
            *(void *)(a1 + 56) = v40;

            --v8;
            goto LABEL_73;
          }
          goto LABEL_95;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_96;
        }
        v8 += *(unsigned __int8 *)(a1 + 76) << 26 >> 31;
        goto LABEL_73;
      case 2:
        if ((v9 & 1) == 0) {
          goto LABEL_69;
        }
        *(unsigned char *)(a1 + 76) |= 1u;
        uint64_t v45 = *v21;
        unint64_t v46 = *(void *)(v3 + v45);
        if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(void *)(v3 + *v7))
        {
          uint64_t v47 = *(void *)(*(void *)(v3 + *v23) + v46);
          *(void *)(v3 + v45) = v46 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v22) = 1;
          uint64_t v47 = 0;
        }
        *(void *)(a1 + 48) = v47;
        goto LABEL_76;
      case 3:
        if (!v35 || (*(unsigned char *)(a1 + 76) & 0x10) != 0) {
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_96;
        }
        long long v40 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v40, (void *)v3)) {
          goto LABEL_95;
        }
        PBReaderRecallMark();
        -[GEOPDCollectionSuggestionParameters _addNoFlagsPublisherId:](a1, v40);
        goto LABEL_68;
      case 4:
        if (!v35 || (*(unsigned char *)(a1 + 76) & 8) != 0) {
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_96;
        }
        long long v40 = objc_alloc_init(GEOPDMapsIdentifier);
        if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v40, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDCollectionSuggestionParameters _addNoFlagsGeoId:](a1, v40);
LABEL_68:

LABEL_73:
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          goto LABEL_76;
        }
LABEL_95:

LABEL_96:
        int v53 = 0;
        char v54 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_79:
        if (v55) {
LABEL_80:
        }
          *(unsigned char *)(a1 + v54[251]) |= 2u;
        if (v58 || (v53 & 1) == 0)
        {
          *(unsigned char *)(a1 + v54[251]) |= 0x20u;
          *(unsigned char *)(a1 + v54[251]) |= 0x10u;
          *(unsigned char *)(a1 + v54[251]) |= 8u;
          *(unsigned char *)(a1 + v54[251]) |= 4u;
        }
        else if (v20)
        {
          while (1)
          {
            int v49 = *v20++;
            char v50 = 32;
            switch(v49)
            {
              case 0:
                goto LABEL_89;
              case 1:
                goto LABEL_88;
              case 3:
                char v50 = 16;
                goto LABEL_88;
              case 4:
                char v50 = 8;
                goto LABEL_88;
              case 5:
                char v50 = 4;
LABEL_88:
                *(unsigned char *)(a1 + v54[251]) |= v50;
                break;
              default:
                continue;
            }
          }
        }
LABEL_89:
        if (v53) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v58)
        {
          uint64_t v51 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
        if (!v35 || (*(unsigned char *)(a1 + 76) & 4) != 0) {
          goto LABEL_69;
        }
        PBReaderReadString();
        long long v40 = (GEOPDViewportInfo *)objc_claimAutoreleasedReturnValue();
        if (v40) {
          -[GEOPDCollectionSuggestionParameters _addNoFlagsCategoryId:](a1, v40);
        }
        goto LABEL_68;
      default:
        if ((v55 & 1) == 0 || (*(unsigned char *)(a1 + 76) & 2) != 0)
        {
LABEL_69:
          char v48 = PBReaderSkipValueWithTag();
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v48 & 1) == 0)
          {
            int v53 = 0;
LABEL_78:
            char v54 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_79;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            long long v43 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v42;
          }
          int v44 = PBUnknownFieldAdd();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v44)
          {
            int v53 = 0;
            char v54 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_80;
          }
        }
LABEL_76:
        if (!(v56 & 1 | (v8 != 0))) {
          goto LABEL_77;
        }
        break;
    }
  }
LABEL_77:
  int v53 = 1;
  goto LABEL_78;
}

void sub_18949DFF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18949E1C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18949E390(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDCollectionSuggestionParametersCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  [a1[7] readAll:1];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = a1[5];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = a1[4];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDCollectionSuggestionParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDCollectionSuggestionParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDCollectionSuggestionParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDCollectionSuggestionParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDCollectionSuggestionParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDCollectionSuggestionParametersCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18949F328(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCollectionSuggestionParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
            goto LABEL_38;
          }
          goto LABEL_26;
        case 2u:
          if (v16 != 1) {
            goto LABEL_38;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v20 = v19 + 8, v20 <= *(void *)&a1[*v3])) {
            *(void *)&a1[v18] = v20;
          }
          else {
            a1[v14] = 1;
          }
          goto LABEL_33;
        case 3u:
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_38;
          }
LABEL_26:
          PBReaderRecallMark();
          goto LABEL_33;
        case 5u:
          if (v16 == 2) {
            goto LABEL_32;
          }
          goto LABEL_38;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_38:
            PBReaderRecallMark();
            return 0;
          }
LABEL_33:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_36;
          }
          break;
      }
    }
  }
LABEL_36:
  BOOL v21 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDCollectionSuggestionParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(unsigned char *)(a1 + 76) & 0x7C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_18949FBDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894A08F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDCollectionSuggestionResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }

  -[GEOPDExploreGuides readAll:](*(void *)(a1 + 32), 1);
}

void sub_1894A0F44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOPDCollectionSuggestionResultIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 52) & 0xA) != 0) {
    return (os_unfair_lock_s *)1;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) == 0) {
    return 0;
  }
  uint64_t v3 = *(os_unfair_lock_s **)(a1 + 32);

  return GEOPDExploreGuidesIsDirty(v3);
}

os_unfair_lock_s *GEOPDCollectionSuggestionResultIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    id v2 = _GEOPDCollectionSuggestionResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return v2;
  }
  return result;
}

void sub_1894A13AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCustomLandmarkReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          unsigned int v25 = objc_alloc_init(GEOPDGeographicCoordinate);
          if (!GEOPDGeographicCoordinateReadAllFrom((uint64_t)v25, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          unint64_t v26 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_36;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v28 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v27;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_1894A1CA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894A2164(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDisplayHeaderSubstituteReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v62 = v17;
        char v63 = v18 | v17;
        char v61 = v9;
        if ((v18 | v9)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v64 = (v19 == 0) | v18;
        BOOL v65 = v18;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_77;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_77:
      int v59 = 1;
      goto LABEL_78;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v65;
    if ((v64 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3) {
      break;
    }
    if (v33 == 2)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 56) & 4) == 0)
        {
          uint64_t v48 = PBReaderReadString();
          uint64_t v47 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v48;
LABEL_57:

          --v10;
LABEL_75:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_76;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_98;
        }
        char v53 = 32 * *(unsigned char *)(a1 + 56);
LABEL_74:
        v10 += v53 >> 7;
        goto LABEL_75;
      }
    }
    else if (v33 == 1)
    {
      if (v61)
      {
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_67;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_69;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_67:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_69:
        *(_DWORD *)(a1 + 52) = v41;
        goto LABEL_76;
      }
    }
    else if ((v62 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v51 = PBUnknownFieldAdd();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v51)
      {
        int v59 = 0;
        char v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        goto LABEL_80;
      }
      goto LABEL_76;
    }
LABEL_64:
    char v52 = PBReaderSkipValueWithTag();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v52 & 1) == 0)
    {
      int v59 = 0;
LABEL_78:
      char v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
      goto LABEL_79;
    }
LABEL_76:
    if (!(v63 & 1 | (v10 != 0))) {
      goto LABEL_77;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }
  if ((*(unsigned char *)(a1 + 56) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_98;
    }
    char v53 = 16 * *(unsigned char *)(a1 + 56);
    goto LABEL_74;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_98;
  }
  unint64_t v46 = objc_alloc_init(GEOPDRelatedSearchSuggestion);
  if (GEOPDRelatedSearchSuggestionReadAllFrom((uint64_t)v46, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    uint64_t v47 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v46;
    goto LABEL_57;
  }

LABEL_98:
  int v59 = 0;
  char v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_79:
  if ((v62 & 1) == 0) {
    goto LABEL_81;
  }
LABEL_80:
  *(unsigned char *)(a1 + v60[260]) |= 2u;
LABEL_81:
  if (v65 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[260]) |= 4u;
    *(unsigned char *)(a1 + v60[260]) |= 8u;
    goto LABEL_91;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v19++;
        int v54 = v55;
        if (v55 == 2) {
          break;
        }
        if (v54 == 3)
        {
          char v56 = 8;
          goto LABEL_90;
        }
        if (!v54) {
          goto LABEL_91;
        }
      }
      char v56 = 4;
LABEL_90:
      *(unsigned char *)(a1 + v60[260]) |= v56;
      continue;
    }
  }
LABEL_91:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v65)
  {
    char v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1894A2890(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894A2CD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDisplayHeaderSubstituteReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDDisplayHeaderSubstituteReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDDisplayHeaderSubstituteReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDDisplayHeaderSubstituteReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDDisplayHeaderSubstituteReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDRelatedSearchSuggestion readAll:](*(void *)(a1 + 32), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1894A2F54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894A3110(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDDisplayHeaderSubstituteIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 56) & 0x14) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 56) & 8) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 32);

  return GEOPDRelatedSearchSuggestionIsDirty(v3);
}

os_unfair_lock_s *GEOPDDisplayHeaderSubstituteIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOPDDisplayHeaderSubstituteIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1894A33A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDExtendedGeoLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 112)), (uint16x4_t)0xFFFAFFFBFFF8FFF7), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 112) >> 7) & 1)+ ((*(_WORD *)(a1 + 112) >> 4) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        char v18 = v16 | v11;
        if (((v16 | v11) | v8)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v103 = 1;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        char v22 = v17;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_157;
        }
        char v101 = v17;
        char v104 = v18 | v17;
        char v105 = (v19 == 0) | v18;
        char v23 = (int *)MEMORY[0x1E4F940B8];
        char v102 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_155;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_155:
      int v103 = 1;
      goto LABEL_156;
    }
    unint64_t v35 = v26 >> 3;
    BOOL v36 = v18;
    if ((v105 & 1) == 0)
    {
      int v37 = v19;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36) {
          goto LABEL_111;
        }
        if ((*(_WORD *)(a1 + 112) & 0x100) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_175;
          }
          uint64_t v41 = objc_alloc_init(GEOAddress);
          if (GEOAddressReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v42 = 64;
            goto LABEL_110;
          }
          goto LABEL_174;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_175;
        }
        __int16 v89 = *(_WORD *)(a1 + 112) << 7;
        goto LABEL_139;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_111;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 112) |= 1u;
        while (2)
        {
          uint64_t v49 = *v20;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v23) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v31 = v47++ >= 9;
              if (v31)
              {
                uint64_t v48 = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v48 = 0;
        }
LABEL_116:
        uint64_t v86 = 72;
        goto LABEL_125;
      case 3:
        if (!v36) {
          goto LABEL_111;
        }
        if ((*(_WORD *)(a1 + 112) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_175;
          }
          __int16 v89 = *(_WORD *)(a1 + 112) << 6;
          goto LABEL_139;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_175;
        }
        uint64_t v41 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_174;
        }
        PBReaderRecallMark();
        uint64_t v42 = 80;
        goto LABEL_110;
      case 4:
        if (!v36 || (*(_WORD *)(a1 + 112) & 0x20) != 0) {
          goto LABEL_111;
        }
        if (v33 != 2)
        {
          char v90 = 0;
          unsigned int v91 = 0;
          uint64_t v92 = 0;
          while (1)
          {
            uint64_t v93 = *v20;
            uint64_t v94 = *(void *)(v3 + v93);
            unint64_t v95 = v94 + 1;
            if (v94 == -1 || v95 > *(void *)(v3 + *v6)) {
              break;
            }
            char v96 = *(unsigned char *)(*(void *)(v3 + *v23) + v94);
            *(void *)(v3 + v93) = v95;
            v92 |= (unint64_t)(v96 & 0x7F) << v90;
            if (v96 < 0)
            {
              v90 += 7;
              BOOL v31 = v91++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_154;
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_154:
          PBRepeatedUInt64Add();
          goto LABEL_140;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_175;
        }
        while (1)
        {
          char v53 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v54 = 0;
          unsigned int v55 = 0;
          uint64_t v56 = 0;
          char v57 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v58 = *v20;
            uint64_t v59 = *(void *)(v3 + v58);
            unint64_t v60 = v59 + 1;
            if (v59 == -1 || v60 > *(void *)(v3 + *v6)) {
              break;
            }
            char v61 = *(unsigned char *)(*(void *)(v3 + *v57) + v59);
            *(void *)(v3 + v58) = v60;
            v56 |= (unint64_t)(v61 & 0x7F) << v54;
            if (v61 < 0)
            {
              v54 += 7;
              BOOL v31 = v55++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_77;
          }
          *(unsigned char *)(v3 + *v53) = 1;
LABEL_77:
          PBRepeatedUInt64Add();
        }
        PBReaderRecallMark();
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        char v18 = v102;
        goto LABEL_141;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_111;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0;
        *(_WORD *)(a1 + 112) |= 8u;
        while (2)
        {
          uint64_t v65 = *v20;
          uint64_t v66 = *(void *)(v3 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(v3 + *v23) + v66);
            *(void *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              BOOL v31 = v63++ >= 9;
              if (v31)
              {
                uint64_t v64 = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v64 = 0;
        }
LABEL_120:
        BOOL v87 = v64 != 0;
        uint64_t v88 = 109;
        goto LABEL_130;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_111;
        }
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 112) |= 2u;
        while (2)
        {
          uint64_t v71 = *v20;
          uint64_t v72 = *(void *)(v3 + v71);
          unint64_t v73 = v72 + 1;
          if (v72 == -1 || v73 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v74 = *(unsigned char *)(*(void *)(v3 + *v23) + v72);
            *(void *)(v3 + v71) = v73;
            v48 |= (unint64_t)(v74 & 0x7F) << v69;
            if (v74 < 0)
            {
              v69 += 7;
              BOOL v31 = v70++ >= 9;
              if (v31)
              {
                uint64_t v48 = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v48 = 0;
        }
LABEL_124:
        uint64_t v86 = 88;
LABEL_125:
        *(void *)(a1 + v86) = v48;
        goto LABEL_142;
      case 7:
        if (!v36) {
          goto LABEL_111;
        }
        if ((*(_WORD *)(a1 + 112) & 0x40) == 0)
        {
          uint64_t v75 = PBReaderReadString();
          uint64_t v76 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v75;

          char v23 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v102;
          --v7;
          goto LABEL_142;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_175;
        }
        __int16 v89 = *(_WORD *)(a1 + 112) << 9;
        goto LABEL_139;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_111;
        }
        char v77 = 0;
        unsigned int v78 = 0;
        uint64_t v79 = 0;
        *(_WORD *)(a1 + 112) |= 4u;
        while (2)
        {
          uint64_t v80 = *v20;
          uint64_t v81 = *(void *)(v3 + v80);
          unint64_t v82 = v81 + 1;
          if (v81 == -1 || v82 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v83 = *(unsigned char *)(*(void *)(v3 + *v23) + v81);
            *(void *)(v3 + v80) = v82;
            v79 |= (unint64_t)(v83 & 0x7F) << v77;
            if (v83 < 0)
            {
              v77 += 7;
              BOOL v31 = v78++ >= 9;
              if (v31)
              {
                uint64_t v79 = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v79 = 0;
        }
LABEL_129:
        BOOL v87 = v79 != 0;
        uint64_t v88 = 108;
LABEL_130:
        *(unsigned char *)(a1 + v88) = v87;
        goto LABEL_142;
      case 9:
        if (!v36) {
          goto LABEL_111;
        }
        if ((*(_WORD *)(a1 + 112) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_175;
          }
          __int16 v89 = *(_WORD *)(a1 + 112) << 8;
LABEL_139:
          v7 += v89 >> 15;
LABEL_140:
          char v18 = v102;
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_141:
          char v23 = (int *)MEMORY[0x1E4F940B8];
LABEL_142:
          if (!(v104 & 1 | (v7 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_155;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_175;
        }
        uint64_t v41 = objc_alloc_init(GEOInterpolationParameters);
        if (GEOInterpolationParametersReadAllFrom((uint64_t)v41, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v42 = 56;
LABEL_110:
          unsigned int v84 = *(void **)(a1 + v42);
          *(void *)(a1 + v42) = v41;

          --v7;
          goto LABEL_140;
        }
LABEL_174:

LABEL_175:
        int v103 = 0;
        char v18 = v102;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_156:
        char v22 = v101;
LABEL_157:
        if (v22) {
LABEL_158:
        }
          *(_WORD *)(a1 + 112) |= 0x10u;
        if (v18 & 1 | ((v103 & 1) == 0))
        {
          *(_WORD *)(a1 + 112) |= 0x100u;
          *(_WORD *)(a1 + 112) |= 0x200u;
          *(_WORD *)(a1 + 112) |= 0x20u;
          *(_WORD *)(a1 + 112) |= 0x40u;
          *(_WORD *)(a1 + 112) |= 0x80u;
        }
        else if (v19)
        {
          while (1)
          {
            int v97 = *v19++;
            __int16 v98 = 256;
            switch(v97)
            {
              case 0:
                goto LABEL_168;
              case 1:
                goto LABEL_167;
              case 3:
                __int16 v98 = 512;
                goto LABEL_167;
              case 4:
                __int16 v98 = 32;
                goto LABEL_167;
              case 7:
                __int16 v98 = 64;
                goto LABEL_167;
              case 9:
                __int16 v98 = 128;
LABEL_167:
                *(_WORD *)(a1 + 112) |= v98;
                break;
              default:
                continue;
            }
          }
        }
LABEL_168:
        if (v103)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_172:
          char v99 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_172;
          }
        }
        return v3;
      default:
        if ((v101 & 1) == 0 || (*(_WORD *)(a1 + 112) & 0x10) != 0)
        {
LABEL_111:
          char v85 = PBReaderSkipValueWithTag();
          char v23 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v102;
          if ((v85 & 1) == 0)
          {
            int v103 = 0;
            goto LABEL_156;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v44 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v43;
          }
          int v45 = PBUnknownFieldAdd();
          char v18 = v102;
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          char v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v45)
          {
            int v103 = 0;
            goto LABEL_158;
          }
        }
        goto LABEL_142;
    }
  }
}

void sub_1894A444C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894A4584(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894A4D44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDExtendedGeoLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDExtendedGeoLookupParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDExtendedGeoLookupParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDExtendedGeoLookupParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDExtendedGeoLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 64) readAll:1];
    [*(id *)(a1 + 80) readAll:1];
    [*(id *)(a1 + 56) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_1894A4FFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894A52A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDExtendedGeoLookupParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 112);
  if ((v2 & 0x400) != 0) {
    return 1;
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEOAddressIsDirty(*(void *)(a1 + 64))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 112);
  }
  if ((v2 & 0x260) != 0) {
    return 1;
  }
  return (v2 >> 7) & 1;
}

os_unfair_lock_s *GEOPDExtendedGeoLookupParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDExtendedGeoLookupParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1894A55F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDExtendedGeoLookupResultReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0) {
              goto LABEL_46;
            }
            v26 += 7;
            BOOL v15 = v27++ >= 9;
            if (v15)
            {
              LODWORD(v28) = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6]) {
            LODWORD(v28) = 0;
          }
LABEL_48:
          *(_DWORD *)(a1 + 24) = v28;
        }
        else if (v18 == 2)
        {
          uint64_t v33 = PBReaderReadString();
          BOOL v34 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v33;
        }
        else if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 32) |= 2u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_42;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              uint64_t v21 = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6]) {
            uint64_t v21 = 0;
          }
LABEL_44:
          *(unsigned char *)(a1 + 28) = v21 != 0;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v35 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v36 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v35;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_51;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_51:
    BOOL v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_1894A6134(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894A6628(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDExternalTransitLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFEFFFCFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v7;
        unsigned __int8 v18 = v16 | v11;
        char v57 = v17;
        char v58 = v18 | v17;
        if ((v18 | v8)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        char v59 = (v19 == 0) | v18;
        BOOL v60 = v18;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_74;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_74:
      int v55 = 1;
      goto LABEL_75;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v60;
    if ((v59 & 1) == 0)
    {
      id v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_63;
        }
        *(unsigned char *)(a1 + 68) |= 1u;
        uint64_t v39 = *v20;
        unint64_t v40 = *(void *)(v3 + v39);
        if (v40 <= 0xFFFFFFFFFFFFFFF7 && v40 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v41 = *(void *)(*(void *)(v3 + *v22) + v40);
          *(void *)(v3 + v39) = v40 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          uint64_t v41 = 0;
        }
        *(void *)(a1 + 48) = v41;
        goto LABEL_73;
      case 2:
        if (!v34) {
          goto LABEL_63;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_92;
          }
          char v50 = 8 * *(unsigned char *)(a1 + 68);
LABEL_69:
          v9 += v50 >> 7;
          goto LABEL_70;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_92;
        }
        int v45 = objc_alloc_init(GEOLocation);
        if (GEOLocationReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          char v46 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v45;
LABEL_57:

          --v9;
LABEL_70:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_73;
        }

LABEL_92:
        int v55 = 0;
        uint64_t v56 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_76:
        if (v57) {
LABEL_77:
        }
          *(unsigned char *)(a1 + v56[267]) |= 2u;
        if (v60 || (v55 & 1) == 0)
        {
          *(unsigned char *)(a1 + v56[267]) |= 0x10u;
          *(unsigned char *)(a1 + v56[267]) |= 8u;
          *(unsigned char *)(a1 + v56[267]) |= 4u;
        }
        else if (v19)
        {
          while (1)
          {
            int v51 = *v19++;
            char v52 = 16;
            switch(v51)
            {
              case 0:
                goto LABEL_85;
              case 2:
                goto LABEL_84;
              case 3:
                char v52 = 8;
                goto LABEL_84;
              case 4:
                char v52 = 4;
LABEL_84:
                *(unsigned char *)(a1 + v56[267]) |= v52;
                break;
              default:
                continue;
            }
          }
        }
LABEL_85:
        if (v55) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v60)
        {
          char v53 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if (!v34) {
          goto LABEL_63;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          uint64_t v47 = PBReaderReadString();
          char v46 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v47;
          goto LABEL_57;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_92;
        }
        char v50 = 16 * *(unsigned char *)(a1 + 68);
        goto LABEL_69;
      case 4:
        if (!v34 || (*(unsigned char *)(a1 + 68) & 4) != 0) {
          goto LABEL_63;
        }
        uint64_t v48 = PBReaderReadData();
        if (v48) {
          -[GEOPDExternalTransitLookupParameters _addNoFlagsExternalTransitStationCode:](a1, v48);
        }

        goto LABEL_70;
      default:
        if ((v57 & 1) == 0 || (*(unsigned char *)(a1 + 68) & 2) != 0)
        {
LABEL_63:
          char v49 = PBReaderSkipValueWithTag();
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v49 & 1) == 0)
          {
            int v55 = 0;
LABEL_75:
            uint64_t v56 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_76;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v43 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v42;
          }
          int v44 = PBUnknownFieldAdd();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v44)
          {
            int v55 = 0;
            uint64_t v56 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_77;
          }
        }
LABEL_73:
        if (!(v58 & 1 | (v9 != 0))) {
          goto LABEL_74;
        }
        continue;
    }
  }
}

void sub_1894A6EE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894A75D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDExternalTransitLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDExternalTransitLookupParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDExternalTransitLookupParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDExternalTransitLookupParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDExternalTransitLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1894A7860(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894A7AD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDExternalTransitLookupParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  }
  if ((v2 & 8) == 0) {
    return (v2 >> 2) & 1;
  }
  return 1;
}

os_unfair_lock_s *GEOPDExternalTransitLookupParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDExternalTransitLookupParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOPDExternalTransitLookupParametersClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  if (a1
    && a3
    && (-[GEOPDExternalTransitLookupParameters _readTransactionLocation](a1), *(void *)(a1 + 40))
    && (-[GEOPDExternalTransitLookupParameters transactionLocation]((id *)a1),
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    uint64_t v7 = -[GEOPDExternalTransitLookupParameters transactionLocation]((id *)a1);
    id v8 = (_DWORD *)[v7 copy];

    GEOLocationClearSensitiveFields(v8);
    -[GEOPDExternalTransitLookupParameters setTransactionLocation:](a1, v8);
  }
  else
  {
    -[GEOPDExternalTransitLookupParameters transactionLocation]((id *)a1);
    id v8 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    [v8 clearSensitiveFields:a2];
  }
}

void sub_1894A7F28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDExternalTransitLookupResultReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          char v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_1894A8718(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894A8AC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDFeatureIdGeocodingParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  int v13 = ((*(unsigned __int8 *)(a1 + 80) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 80) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 80) >> 2) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 != 0;
        char v18 = v17 & ~(_BYTE)v11 | v7;
        char v19 = v17 | v11;
        id v20 = (int *)MEMORY[0x1E4F940E8];
        if (((v17 | v11) | v8)) {
          uint64_t v21 = 0;
        }
        else {
          uint64_t v21 = a3;
        }
        int v84 = 1;
        char v22 = v17 & ~(_BYTE)v11 | v7;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_110;
        }
        char v82 = v18;
        char v85 = v19 | v18;
        char v86 = (v21 == 0) | v19;
        char v23 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v24 = (int *)MEMORY[0x1E4F940B8];
        char v83 = v19;
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v7;
LABEL_8:
        uint64_t v15 = v10;
        uint64_t v16 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v14;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v23)) {
      goto LABEL_108;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v20;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v32 = v26++ >= 9;
      if (v32)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    int v34 = v27 & 7;
    if (v33 || v34 == 4)
    {
LABEL_108:
      int v84 = 1;
      goto LABEL_109;
    }
    unint64_t v36 = v27 >> 3;
    BOOL v37 = v19;
    if ((v86 & 1) == 0)
    {
      BOOL v38 = v21;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + v12[272]) |= 1u;
        char v23 = (int *)MEMORY[0x1E4F940C8];
        while (1)
        {
          uint64_t v45 = *v20;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
            break;
          }
          char v48 = *(unsigned char *)(*(void *)(v3 + *v24) + v46);
          *(void *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0) {
            goto LABEL_87;
          }
          v42 += 7;
          BOOL v32 = v43++ >= 9;
          if (v32)
          {
            uint64_t v44 = 0;
            goto LABEL_89;
          }
        }
        *(unsigned char *)(v3 + *v23) = 1;
LABEL_87:
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v44 = 0;
        }
LABEL_89:
        *(void *)(a1 + 48) = v44;
        goto LABEL_83;
      case 2:
        if (!v37) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + v12[272]) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_130;
          }
          uint64_t v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
          v9 += *(unsigned __int8 *)(a1 + 80) << 27 >> 31;
          goto LABEL_96;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_130;
        }
        char v52 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v52, (void *)v3))
        {
          PBReaderRecallMark();
          char v53 = *(void **)(a1 + 56);
          *(void *)(a1 + 56) = v52;

          --v9;
          uint64_t v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
LABEL_96:
          char v19 = v83;
          char v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_107:
          unsigned int v24 = (int *)MEMORY[0x1E4F940B8];
LABEL_83:
          if (!(v85 & 1 | (v9 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_108;
          }
          continue;
        }

LABEL_130:
        int v84 = 0;
        uint64_t v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        char v19 = v83;
LABEL_109:
        char v22 = v82;
LABEL_110:
        if (v22) {
LABEL_111:
        }
          *(unsigned char *)(a1 + v12[272]) |= 4u;
        if (v19 & 1 | ((v84 & 1) == 0))
        {
          *(unsigned char *)(a1 + v12[272]) |= 8u;
          *(unsigned char *)(a1 + v12[272]) |= 0x10u;
          goto LABEL_122;
        }
        if (v21)
        {
          while (1)
          {
            int v79 = *v21++;
            int v78 = v79;
            if (v79 == 2) {
              break;
            }
            if (v78 == 4)
            {
              char v77 = 8;
LABEL_118:
              *(unsigned char *)(a1 + v12[272]) |= v77;
            }
            else if (!v78)
            {
              goto LABEL_122;
            }
          }
          char v77 = 16;
          goto LABEL_118;
        }
LABEL_122:
        if (v84)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v19 & 1) == 0) {
            return v3;
          }
LABEL_126:
          uint64_t v80 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v19) {
            goto LABEL_126;
          }
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0;
        *(unsigned char *)(a1 + v12[272]) |= 2u;
        char v23 = (int *)MEMORY[0x1E4F940C8];
        while (2)
        {
          uint64_t v57 = *v20;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v24) + v58);
            *(void *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              BOOL v32 = v55++ >= 9;
              if (v32)
              {
                LODWORD(v56) = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v56) = 0;
        }
LABEL_93:
        *(_DWORD *)(a1 + 76) = v56;
        goto LABEL_83;
      case 4:
        if (!v37 || (*(unsigned char *)(a1 + v12[272]) & 8) != 0) {
          goto LABEL_82;
        }
        if (v34 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_130;
          }
          char v23 = (int *)MEMORY[0x1E4F940C8];
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v23)) {
              break;
            }
            char v61 = 0;
            unsigned int v62 = 0;
            uint64_t v63 = 0;
            uint64_t v64 = (int *)MEMORY[0x1E4F940B8];
            while (1)
            {
              uint64_t v65 = *v20;
              uint64_t v66 = *(void *)(v3 + v65);
              unint64_t v67 = v66 + 1;
              if (v66 == -1 || v67 > *(void *)(v3 + *v6)) {
                break;
              }
              char v68 = *(unsigned char *)(*(void *)(v3 + *v64) + v66);
              *(void *)(v3 + v65) = v67;
              v63 |= (unint64_t)(v68 & 0x7F) << v61;
              if (v68 < 0)
              {
                v61 += 7;
                BOOL v32 = v62++ >= 9;
                if (!v32) {
                  continue;
                }
              }
              goto LABEL_80;
            }
            *(unsigned char *)(v3 + *v23) = 1;
LABEL_80:
            PBRepeatedUInt64Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v70 = 0;
          unsigned int v71 = 0;
          uint64_t v72 = 0;
          char v23 = (int *)MEMORY[0x1E4F940C8];
          while (1)
          {
            uint64_t v73 = *v20;
            uint64_t v74 = *(void *)(v3 + v73);
            unint64_t v75 = v74 + 1;
            if (v74 == -1 || v75 > *(void *)(v3 + *v6)) {
              break;
            }
            char v76 = *(unsigned char *)(*(void *)(v3 + *v24) + v74);
            *(void *)(v3 + v73) = v75;
            v72 |= (unint64_t)(v76 & 0x7F) << v70;
            if (v76 < 0)
            {
              v70 += 7;
              BOOL v32 = v71++ >= 9;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_105;
          }
          *(unsigned char *)(v3 + *v23) = 1;
LABEL_105:
          PBRepeatedUInt64Add();
        }
        uint64_t v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        char v19 = v83;
        goto LABEL_107;
      default:
        if ((v82 & 1) == 0 || (*(unsigned char *)(a1 + v12[272]) & 4) != 0)
        {
LABEL_82:
          char v69 = PBReaderSkipValueWithTag();
          unsigned int v24 = (int *)MEMORY[0x1E4F940B8];
          char v19 = v83;
          uint64_t v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
          char v23 = (int *)MEMORY[0x1E4F940C8];
          if ((v69 & 1) == 0)
          {
            int v84 = 0;
            goto LABEL_109;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v50 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v49;
          }
          int v51 = PBUnknownFieldAdd();
          uint64_t v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
          char v19 = v83;
          char v23 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v24 = (int *)MEMORY[0x1E4F940B8];
          if (!v51)
          {
            int v84 = 0;
            goto LABEL_111;
          }
        }
        goto LABEL_83;
    }
  }
}

void sub_1894A94B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDFeatureIdGeocodingParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDFeatureIdGeocodingParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDFeatureIdGeocodingParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDFeatureIdGeocodingParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDFeatureIdGeocodingParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 56) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1894A9B30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894A9D3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDFeatureIdGeocodingParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(unsigned char *)(a1 + 80) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_1894A9F80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDFeatureIdGeocodingResultReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        id v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1894AA630(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894AA870(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGeocodingParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 84)), (uint16x4_t)0xFFFCFFFAFFFBFFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 84) >> 3) & 1)+ ((*(_WORD *)(a1 + 84) >> 2) & 1));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 3;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v69 = v18;
        char v70 = v19 | v18;
        if ((v19 | v9)) {
          id v20 = 0;
        }
        else {
          id v20 = a3;
        }
        char v71 = (v20 == 0) | v19;
        BOOL v72 = v19;
        BOOL v21 = (int *)MEMORY[0x1E4F940E8];
        char v22 = (int *)MEMORY[0x1E4F940C8];
        char v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_109;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_109:
      int v67 = 1;
      goto LABEL_110;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v72;
    if ((v71 & 1) == 0)
    {
      unint64_t v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_86;
        }
        if ((*(_WORD *)(a1 + 84) & 0x20) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          BOOL v41 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v40;
          goto LABEL_85;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_129;
        }
        __int16 v62 = *(_WORD *)(a1 + 84) << 10;
        goto LABEL_106;
      case 2:
        if ((v9 & 1) == 0) {
          goto LABEL_86;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(_WORD *)(a1 + 84) |= 1u;
        while (2)
        {
          uint64_t v48 = *v21;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v23) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v31 = v46++ >= 9;
              if (v31)
              {
                LODWORD(v47) = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v47) = 0;
        }
LABEL_91:
        *(_DWORD *)(a1 + 76) = v47;
        goto LABEL_108;
      case 3:
        if (!v35) {
          goto LABEL_86;
        }
        if ((*(_WORD *)(a1 + 84) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_129;
          }
          __int16 v62 = *(_WORD *)(a1 + 84) << 8;
          goto LABEL_106;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_129;
        }
        char v52 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v52, (void *)v3)) {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        uint64_t v53 = 56;
        goto LABEL_84;
      case 4:
        if (!v35) {
          goto LABEL_86;
        }
        if ((*(_WORD *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_129;
          }
          __int16 v62 = *(_WORD *)(a1 + 84) << 9;
          goto LABEL_106;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_129;
        }
        char v52 = objc_alloc_init(GEOStructuredAddress);
        if (!GEOStructuredAddressReadAllFrom(v52, (void *)v3)) {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        uint64_t v53 = 48;
        goto LABEL_84;
      case 5:
        if (!v35) {
          goto LABEL_86;
        }
        if ((*(_WORD *)(a1 + 84) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_129;
          }
          __int16 v62 = *(_WORD *)(a1 + 84) << 11;
          goto LABEL_106;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_129;
        }
        char v52 = objc_alloc_init(GEOPDSPunchInHints);
        if (!GEOPDSPunchInHintsReadAllFrom((uint64_t)v52, (void *)v3, v11 & 1)) {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        uint64_t v53 = 32;
        goto LABEL_84;
      case 6:
        if ((v9 & 1) == 0) {
          goto LABEL_86;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0;
        *(_WORD *)(a1 + 84) |= 2u;
        while (2)
        {
          uint64_t v57 = *v21;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v23) + v58);
            *(void *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              BOOL v31 = v55++ >= 9;
              if (v31)
              {
                uint64_t v56 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v56 = 0;
        }
LABEL_95:
        *(unsigned char *)(a1 + 80) = v56 != 0;
        goto LABEL_108;
      case 7:
        if (!v35) {
          goto LABEL_86;
        }
        if ((*(_WORD *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_129;
          }
          __int16 v62 = *(_WORD *)(a1 + 84) << 12;
LABEL_106:
          v8 += v62 >> 15;
LABEL_107:
          char v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          goto LABEL_108;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_129;
        }
        char v52 = objc_alloc_init(GEOPDAddressResultSubTypeFilter);
        if (GEOPDAddressResultSubTypeFilterReadAllFrom((uint64_t)v52, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v53 = 24;
LABEL_84:
          BOOL v41 = *(void **)(a1 + v53);
          *(void *)(a1 + v53) = v52;
LABEL_85:

          --v8;
          goto LABEL_107;
        }
LABEL_128:

LABEL_129:
        int v67 = 0;
        char v68 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        char v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_111:
        if (v69) {
LABEL_112:
        }
          *(_WORD *)(a1 + v68[274]) |= 4u;
        if (v72 || (v67 & 1) == 0)
        {
          *(_WORD *)(a1 + v68[274]) |= 0x20u;
          *(_WORD *)(a1 + v68[274]) |= 0x80u;
          *(_WORD *)(a1 + v68[274]) |= 0x40u;
          *(_WORD *)(a1 + v68[274]) |= 0x10u;
          *(_WORD *)(a1 + v68[274]) |= 8u;
        }
        else if (v20)
        {
          while (1)
          {
            int v63 = *v20++;
            __int16 v64 = 32;
            switch(v63)
            {
              case 0:
                goto LABEL_122;
              case 1:
                goto LABEL_121;
              case 3:
                __int16 v64 = 128;
                goto LABEL_121;
              case 4:
                __int16 v64 = 64;
                goto LABEL_121;
              case 5:
                __int16 v64 = 16;
                goto LABEL_121;
              case 7:
                __int16 v64 = 8;
LABEL_121:
                *(_WORD *)(a1 + v68[274]) |= v64;
                break;
              default:
                continue;
            }
          }
        }
LABEL_122:
        if (v67) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v72)
        {
          uint64_t v65 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v69 & 1) == 0 || (*(_WORD *)(a1 + 84) & 4) != 0)
        {
LABEL_86:
          char v61 = PBReaderSkipValueWithTag();
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          char v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v61 & 1) == 0)
          {
            int v67 = 0;
LABEL_110:
            char v68 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_111;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v43 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v42;
          }
          int v44 = PBUnknownFieldAdd();
          char v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v44)
          {
            int v67 = 0;
            char v68 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_112;
          }
        }
LABEL_108:
        if (!(v70 & 1 | (v8 != 0))) {
          goto LABEL_109;
        }
        continue;
    }
  }
}

void sub_1894AB358(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894AB490(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894AB610(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894ABBFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGeocodingParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 56) readAll:1];
  -[GEOPDSPunchInHints readAll:](*(void *)(a1 + 32), 1);
  uint64_t v2 = *(void *)(a1 + 24);

  -[GEOPDAddressResultSubTypeFilter readAll:](v2, 1);
}

unint64_t GEOPDGeocodingParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDGeocodingParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDGeocodingParametersReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDGeocodingParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDGeocodingParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDGeocodingParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1894ABEE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894AC124(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDGeocodingParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  __int16 v2 = *(_WORD *)(a1 + 84);
  if ((v2 & 0x1E0) != 0) {
    return 1;
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEOPDSPunchInHintsIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 84);
  }
  if ((v2 & 8) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 24);

  return GEOPDAddressResultSubTypeFilterIsDirty(v4);
}

void sub_1894AC474(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGeocodingResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          id v20 = objc_alloc_init(GEOPDMultiLocalizedString);
          if (!GEOPDMultiLocalizedStringReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDGeocodingResult addDisambiguationLabel:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1894ACEDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGroundViewLabelParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          uint64_t v27 = objc_alloc_init(GEOLocation);
          if (!GEOLocationReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          uint64_t v28 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v27;
        }
        else if ((v12 >> 3) == 1)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v23 = *v6;
            uint64_t v24 = *(void *)&v5[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
            *(void *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_36;
            }
            v20 += 7;
            BOOL v17 = v21++ >= 9;
            if (v17)
            {
              uint64_t v22 = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            uint64_t v22 = 0;
          }
LABEL_38:
          *(void *)(a1 + 16) = v22;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v29 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v30 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v29;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_1894AD90C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void GEOPDGroundViewLabelParametersClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  if (a1 && a3)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      id v6 = v5;
      int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v6);

      if (HasSensitiveFields)
      {
        id v8 = *(id *)(a1 + 24);
        char v10 = (_DWORD *)[v8 copy];

        GEOLocationClearSensitiveFields(v10);
        -[GEOPDGroundViewLabelParameters setLocation:](a1, v10);
        goto LABEL_9;
      }
    }
  }
  else if (!a1)
  {
    char v9 = 0;
    goto LABEL_8;
  }
  char v9 = *(id *)(a1 + 24);
LABEL_8:
  char v10 = v9;
  [v9 clearSensitiveFields:a2];
LABEL_9:
}

BOOL GEOPDGroundViewLabelResultReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1894AE134(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894AE3FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGuidesHomeFixedSectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFEFFFBFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 72) & 2) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v59 = v17;
        char v60 = v18 | v17;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v20 = (int *)MEMORY[0x1E4F940E8];
        char v61 = (v19 == 0) | v18;
        BOOL v62 = v18;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
  {
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4) {
      break;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v62;
    if ((v61 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_72;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_75;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_77;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_75:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_77:
        *(_DWORD *)(a1 + 68) = v41;
        goto LABEL_81;
      case 2:
        if (!v34) {
          goto LABEL_72;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_101;
          }
          v7 += *(unsigned __int8 *)(a1 + 72) << 26 >> 31;
        }
        else
        {
          uint64_t v49 = PBReaderReadString();
          unint64_t v50 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v49;

          --v7;
        }
        goto LABEL_80;
      case 3:
        if (!v34 || (*(unsigned char *)(a1 + 72) & 8) != 0) {
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        char v51 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v51, (void *)v3)) {
          goto LABEL_100;
        }
        PBReaderRecallMark();
        -[GEOPDGuidesHomeFixedSection _addNoFlagsFeaturedGuideId:](a1, v51);
        goto LABEL_71;
      case 4:
        if (!v34 || (*(unsigned char *)(a1 + 72) & 4) != 0) {
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        char v51 = objc_alloc_init(GEOPDGuidesHomeResultFilter);
        if (!GEOPDGuidesHomeResultFilterReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1)) {
          goto LABEL_100;
        }
        PBReaderRecallMark();
        -[GEOPDGuidesHomeFixedSection _addNoFlagsBrowseByInterestFilter:](a1, v51);
        goto LABEL_71;
      case 5:
        if (!v34 || (*(unsigned char *)(a1 + 72) & 0x10) != 0) {
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        char v51 = objc_alloc_init(GEOPDMapsIdentifier);
        if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v51, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDGuidesHomeFixedSection _addNoFlagsFilteredGuideId:](a1, v51);
LABEL_71:

LABEL_80:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_81;
        }
LABEL_100:

LABEL_101:
        int v57 = 0;
        uint64_t v58 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_84:
        if (v59) {
LABEL_85:
        }
          *(unsigned char *)(a1 + v58[282]) |= 2u;
        if (v62 || (v57 & 1) == 0)
        {
          *(unsigned char *)(a1 + v58[282]) |= 0x20u;
          *(unsigned char *)(a1 + v58[282]) |= 8u;
          *(unsigned char *)(a1 + v58[282]) |= 4u;
          *(unsigned char *)(a1 + v58[282]) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            int v53 = *v19++;
            char v54 = 32;
            switch(v53)
            {
              case 0:
                goto LABEL_94;
              case 2:
                goto LABEL_93;
              case 3:
                char v54 = 8;
                goto LABEL_93;
              case 4:
                char v54 = 4;
                goto LABEL_93;
              case 5:
                char v54 = 16;
LABEL_93:
                *(unsigned char *)(a1 + v58[282]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_94:
        if (v57) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v62)
        {
          unsigned int v55 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v59 & 1) == 0 || (*(unsigned char *)(a1 + 72) & 2) != 0)
        {
LABEL_72:
          char v52 = PBReaderSkipValueWithTag();
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v52 & 1) == 0)
          {
            int v57 = 0;
LABEL_83:
            uint64_t v58 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_84;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v48)
          {
            int v57 = 0;
            uint64_t v58 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_85;
          }
        }
LABEL_81:
        if (!(v60 & 1 | (v7 != 0))) {
          goto LABEL_82;
        }
        break;
    }
  }
LABEL_82:
  int v57 = 1;
  goto LABEL_83;
}

void sub_1894AED00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894AEF2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894AF158(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894AF454(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGuidesHomeFixedSectionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v2 = a1[4];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v26;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v26 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v25 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v4);
  }

  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v7 = a1[3];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v22;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOPDGuidesHomeResultFilter readAll:](*(void *)(*((void *)&v21 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
    }
    while (v9);
  }

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v12 = a1[5];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v18;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v18 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v17 + 1) + 8 * v16++), "readAll:", 1, (void)v17);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
    }
    while (v14);
  }
}

unint64_t GEOPDGuidesHomeFixedSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDGuidesHomeFixedSectionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDGuidesHomeFixedSectionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDGuidesHomeFixedSectionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDGuidesHomeFixedSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDGuidesHomeFixedSectionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1894AFE64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGuidesHomeFixedSectionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_42;
          }
          unsigned int v17 = 0;
          do
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_38;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0) {
              break;
            }
          }
          while (v17++ <= 8);
          goto LABEL_38;
        case 2u:
          if (v15 == 2) {
            goto LABEL_32;
          }
          goto LABEL_42;
        case 3u:
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_42;
          }
          goto LABEL_37;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDGuidesHomeResultFilterIsValid(a1)) {
            goto LABEL_42;
          }
LABEL_37:
          PBReaderRecallMark();
          goto LABEL_38;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_42:
            PBReaderRecallMark();
            return 0;
          }
LABEL_38:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_41;
          }
          break;
      }
    }
  }
LABEL_41:
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPDGuidesHomeResultFilterIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_65;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_65;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 50) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_67;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v24 = 0;
          unsigned int v25 = 0;
          unint64_t v26 = 0;
          while (1)
          {
            uint64_t v27 = *v2;
            uint64_t v28 = *(void *)&a1[v27];
            unint64_t v29 = v28 + 1;
            if (v28 == -1 || v29 > *(void *)&a1[*v3]) {
              break;
            }
            char v30 = *(unsigned char *)(*(void *)&a1[*v5] + v28);
            *(void *)&a1[v27] = v29;
            v26 |= (unint64_t)(v30 & 0x7F) << v24;
            if ((v30 & 0x80) == 0) {
              goto LABEL_46;
            }
            v24 += 7;
            BOOL v13 = v25++ >= 9;
            if (v13)
            {
              unint64_t v26 = 0;
              int v31 = a1[*v4];
              goto LABEL_48;
            }
          }
          a1[*v4] = 1;
LABEL_46:
          int v31 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v26 = 0;
          }
LABEL_48:
          int v32 = v26 & 7;
          if (v31 || v32 == 4) {
            break;
          }
          if ((v26 >> 3) == 1)
          {
            if (v32 != 2 || !PBReaderPlaceMark() || !GEOPDWarsawMerchantIdentifierIsValid(a1))
            {
LABEL_66:
              PBReaderRecallMark();
              goto LABEL_67;
            }
            PBReaderRecallMark();
          }
          else if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
            goto LABEL_66;
          }
        }
        int v34 = a1[*v4];
        PBReaderRecallMark();
        if (v34) {
          goto LABEL_67;
        }
LABEL_62:
        PBReaderRecallMark();
        goto LABEL_64;
      }
      if (v17 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_67;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_64;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_67;
      }
LABEL_64:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_65;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDGuidesHomeResultFilterIsValid(a1))
    {
LABEL_67:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_62;
  }
LABEL_65:
  BOOL v35 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v35;
}

void sub_1894B084C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGuidesHomeFixedSectionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 72) & 0x7C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_1894B0E70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B19A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGuidesHomeParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 108);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 104)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 116)), (uint16x4_t)0xFFFDFFFAFFFFFFFELL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 116) & 1)+ ((*(unsigned char *)(a1 + 116) & 0x20) != 0)+ ((*(unsigned char *)(a1 + 116) & 0x10) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        char v18 = v16 | v11;
        if (((v16 | v11) | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v93 = 1;
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        char v22 = v17;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_138;
        }
        char v92 = v17;
        char v94 = v18 | v17;
        char v96 = (v19 == 0) | v18;
        BOOL v23 = (int *)MEMORY[0x1E4F940B8];
        char v95 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_136;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_136:
      int v93 = 1;
      goto LABEL_137;
    }
    BOOL v35 = v6;
    int v36 = v21;
    unint64_t v37 = v26 >> 3;
    BOOL v38 = v18;
    if ((v96 & 1) == 0)
    {
      char v39 = v19;
      do
      {
        int v41 = *v39++;
        int v40 = v41;
        BOOL v38 = v41 != 0;
        if (v41) {
          BOOL v42 = v40 == v37;
        }
        else {
          BOOL v42 = 1;
        }
      }
      while (!v42);
    }
    switch((int)v37)
    {
      case 1:
        unint64_t v21 = v36;
        if (!v38 || (*(unsigned char *)(a1 + 116) & 2) != 0) {
          goto LABEL_101;
        }
        char v6 = v35;
        if (v33 == 2)
        {
          int v43 = PBReaderPlaceMark();
          uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          if (!v43) {
            goto LABEL_158;
          }
          BOOL v23 = (int *)MEMORY[0x1E4F940B8];
          if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(v3 + *v6))
          {
            while (1)
            {
              if (*(unsigned char *)(v3 + *v21)) {
                goto LABEL_76;
              }
              char v44 = 0;
              unsigned int v45 = 0;
              uint64_t v46 = 0;
              while (1)
              {
                uint64_t v47 = *v20;
                uint64_t v48 = *(void *)(v3 + v47);
                unint64_t v49 = v48 + 1;
                if (v48 == -1 || v49 > *(void *)(v3 + *v6)) {
                  break;
                }
                char v50 = *(unsigned char *)(*(void *)(v3 + *v23) + v48);
                *(void *)(v3 + v47) = v49;
                v46 |= (unint64_t)(v50 & 0x7F) << v44;
                if (v50 < 0)
                {
                  v44 += 7;
                  BOOL v31 = v45++ >= 9;
                  if (!v31) {
                    continue;
                  }
                }
                goto LABEL_53;
              }
              *(unsigned char *)(v3 + *v21) = 1;
LABEL_53:
              PBRepeatedInt32Add();
              if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
                goto LABEL_76;
              }
            }
          }
          goto LABEL_76;
        }
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v76 = 0;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v23 = (int *)MEMORY[0x1E4F940B8];
        while (1)
        {
          uint64_t v77 = *v20;
          uint64_t v78 = *(void *)(v3 + v77);
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)(v3 + *v6)) {
            goto LABEL_131;
          }
          char v80 = *(unsigned char *)(*(void *)(v3 + *v23) + v78);
          *(void *)(v3 + v77) = v79;
          v76 |= (unint64_t)(v80 & 0x7F) << v74;
          if (v80 < 0)
          {
            v74 += 7;
            BOOL v31 = v75++ >= 9;
            if (!v31) {
              continue;
            }
          }
          goto LABEL_132;
        }
      case 2:
        unint64_t v21 = v36;
        if (!v38 || (*(unsigned char *)(a1 + 116) & 4) != 0) {
          goto LABEL_101;
        }
        char v6 = v35;
        if (v33 == 2)
        {
          int v54 = PBReaderPlaceMark();
          uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          if (!v54) {
            goto LABEL_158;
          }
          BOOL v23 = (int *)MEMORY[0x1E4F940B8];
          if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(v3 + *v6))
          {
            do
            {
              if (*(unsigned char *)(v3 + *v21)) {
                break;
              }
              char v55 = 0;
              unsigned int v56 = 0;
              uint64_t v57 = 0;
              while (1)
              {
                uint64_t v58 = *v20;
                uint64_t v59 = *(void *)(v3 + v58);
                unint64_t v60 = v59 + 1;
                if (v59 == -1 || v60 > *(void *)(v3 + *v6)) {
                  break;
                }
                char v61 = *(unsigned char *)(*(void *)(v3 + *v23) + v59);
                *(void *)(v3 + v58) = v60;
                v57 |= (unint64_t)(v61 & 0x7F) << v55;
                if (v61 < 0)
                {
                  v55 += 7;
                  BOOL v31 = v56++ >= 9;
                  if (!v31) {
                    continue;
                  }
                }
                goto LABEL_75;
              }
              *(unsigned char *)(v3 + *v21) = 1;
LABEL_75:
              PBRepeatedInt32Add();
            }
            while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6));
          }
LABEL_76:
          PBReaderRecallMark();
        }
        else
        {
          char v81 = 0;
          unsigned int v82 = 0;
          uint64_t v83 = 0;
          uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          BOOL v23 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v84 = *v20;
            uint64_t v85 = *(void *)(v3 + v84);
            unint64_t v86 = v85 + 1;
            if (v85 == -1 || v86 > *(void *)(v3 + *v6)) {
              break;
            }
            char v87 = *(unsigned char *)(*(void *)(v3 + *v23) + v85);
            *(void *)(v3 + v84) = v86;
            v83 |= (unint64_t)(v87 & 0x7F) << v81;
            if (v87 < 0)
            {
              v81 += 7;
              BOOL v31 = v82++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_132;
          }
LABEL_131:
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_132:
          PBRepeatedInt32Add();
        }
        char v18 = v95;
        goto LABEL_134;
      case 3:
        unint64_t v21 = v36;
        if (!v38) {
          goto LABEL_101;
        }
        char v6 = v35;
        if ((*(unsigned char *)(a1 + 116) & 0x40) != 0)
        {
          char v70 = PBReaderSkipValueWithTag();
          uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          if ((v70 & 1) == 0) {
            goto LABEL_158;
          }
          char v71 = 2 * *(unsigned char *)(a1 + 116);
          goto LABEL_108;
        }
        char v62 = PBReaderPlaceMark();
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        if ((v62 & 1) == 0) {
          goto LABEL_158;
        }
        int v63 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v63, (void *)v3)) {
          goto LABEL_157;
        }
        PBReaderRecallMark();
        uint64_t v64 = 96;
        goto LABEL_87;
      case 4:
        unint64_t v21 = v36;
        if (!v38) {
          goto LABEL_101;
        }
        char v6 = v35;
        if ((*(unsigned char *)(a1 + 116) & 8) != 0)
        {
          char v72 = PBReaderSkipValueWithTag();
          uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          if ((v72 & 1) == 0) {
            goto LABEL_158;
          }
          char v71 = 16 * *(unsigned char *)(a1 + 116);
LABEL_108:
          v7 += v71 >> 7;
        }
        else
        {
          char v65 = PBReaderPlaceMark();
          uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          if ((v65 & 1) == 0) {
            goto LABEL_158;
          }
          int v63 = objc_alloc_init(GEOPDGuidesLocationEntry);
          if (!GEOPDGuidesLocationEntryReadAllFrom((uint64_t)v63, (void *)v3, v10 & 1)) {
            goto LABEL_157;
          }
          PBReaderRecallMark();
          uint64_t v64 = 72;
LABEL_87:
          uint64_t v66 = *(void **)(a1 + v64);
          *(void *)(a1 + v64) = v63;

          --v7;
        }
        char v18 = v95;
        goto LABEL_116;
      case 5:
        unint64_t v21 = v36;
        if (!v38) {
          goto LABEL_101;
        }
        if ((*(unsigned char *)(a1 + 116) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_158;
          }
          char v6 = v35;
          char v73 = 4 * *(unsigned char *)(a1 + 116);
          goto LABEL_114;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_158;
        }
        int v63 = objc_alloc_init(GEOPDGuidesHomeResultFilter);
        if (!GEOPDGuidesHomeResultFilterReadAllFrom((uint64_t)v63, (void *)v3, v10 & 1)) {
          goto LABEL_157;
        }
        PBReaderRecallMark();
        uint64_t v67 = 88;
        goto LABEL_98;
      case 6:
        unint64_t v21 = v36;
        if (!v38)
        {
LABEL_101:
          char v69 = PBReaderSkipValueWithTag();
          char v18 = v95;
LABEL_102:
          char v6 = v35;
          uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          BOOL v23 = (int *)MEMORY[0x1E4F940B8];
          if ((v69 & 1) == 0)
          {
            int v93 = 0;
            goto LABEL_137;
          }
LABEL_134:
          if (!(v94 & 1 | (v7 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_136;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 116) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_158;
          }
          char v6 = v35;
          char v73 = 8 * *(unsigned char *)(a1 + 116);
LABEL_114:
          v7 += v73 >> 7;
          char v18 = v95;
LABEL_115:
          uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
LABEL_116:
          BOOL v23 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_158;
        }
        int v63 = objc_alloc_init(GEOPDResultRefinementGuidesHome);
        if (GEOPDResultRefinementGuidesHomeReadAllFrom((uint64_t)v63, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v67 = 80;
LABEL_98:
          char v68 = *(void **)(a1 + v67);
          *(void *)(a1 + v67) = v63;

          --v7;
          char v18 = v95;
          char v6 = v35;
          goto LABEL_115;
        }
LABEL_157:

LABEL_158:
        int v93 = 0;
        char v18 = v95;
LABEL_137:
        char v22 = v92;
LABEL_138:
        if (v22) {
LABEL_139:
        }
          *(unsigned char *)(a1 + 116) |= 1u;
        if (v18 & 1 | ((v93 & 1) == 0))
        {
          *(unsigned char *)(a1 + 116) |= 2u;
          *(unsigned char *)(a1 + 116) |= 4u;
          *(unsigned char *)(a1 + 116) |= 0x40u;
          *(unsigned char *)(a1 + 116) |= 8u;
          *(unsigned char *)(a1 + 116) |= 0x20u;
          *(unsigned char *)(a1 + 116) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            int v89 = *v19++;
            char v88 = 2;
            switch(v89)
            {
              case 0:
                goto LABEL_151;
              case 1:
                goto LABEL_149;
              case 2:
                char v88 = 4;
                goto LABEL_149;
              case 3:
                char v88 = 64;
                goto LABEL_149;
              case 4:
                char v88 = 8;
                goto LABEL_149;
              case 5:
                char v88 = 32;
                goto LABEL_149;
              case 6:
                char v88 = 16;
LABEL_149:
                *(unsigned char *)(a1 + 116) |= v88;
                break;
              default:
                continue;
            }
          }
        }
LABEL_151:
        if (v93)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_155:
          char v90 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_155;
          }
        }
        return v3;
      default:
        if (v92 & 1) == 0 || (*(unsigned char *)(a1 + 116))
        {
          char v69 = PBReaderSkipValueWithTag();
          char v18 = v95;
          unint64_t v21 = v36;
          goto LABEL_102;
        }
        if (!*(void *)(a1 + 16))
        {
          id v51 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          char v52 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v51;
        }
        int v53 = PBUnknownFieldAdd();
        char v18 = v95;
        unint64_t v21 = v36;
        char v6 = v35;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v23 = (int *)MEMORY[0x1E4F940B8];
        if (!v53)
        {
          int v93 = 0;
          goto LABEL_139;
        }
        goto LABEL_134;
    }
  }
}

void sub_1894B26B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B27F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B292C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B2AE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B3124(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGuidesHomeParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 96) readAll:1];
  -[GEOPDGuidesLocationEntry readAll:](*(void *)(a1 + 72), 1);
  -[GEOPDGuidesHomeResultFilter readAll:](*(void *)(a1 + 88), 1);
  uint64_t v2 = *(void *)(a1 + 80);

  -[GEOPDResultRefinementGuidesHome readAll:](v2, 1);
}

void sub_1894B34D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDGuidesHomeParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  char v2 = *(unsigned char *)(a1 + 116);
  if ((v2 & 0xC6) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 116) & 8) != 0)
  {
    if (GEOPDGuidesLocationEntryIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 116);
  }
  if ((v2 & 0x20) == 0) {
    goto LABEL_9;
  }
  if (GEOPDGuidesHomeResultFilterIsDirty(*(os_unfair_lock_s **)(a1 + 88))) {
    return 1;
  }
  char v2 = *(unsigned char *)(a1 + 116);
LABEL_9:
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 80);

  return (uint64_t)GEOPDResultRefinementGuidesHomeIsDirty(v4);
}

os_unfair_lock_s *GEOPDGuidesHomeParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDGuidesHomeParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 28);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1894B3870(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B3CE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGuidesHomeRepeatableSectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFAFFFBFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 76) & 4) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v67 = v17;
        char v68 = v18 | v17;
        char v66 = v8;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v69 = (v19 == 0) | v18;
        BOOL v70 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        char v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
  {
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4) {
      break;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v70;
    if ((v69 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v66 & 1) == 0) {
          goto LABEL_80;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_83;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_85;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_83:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_85:
        uint64_t v59 = 72;
        goto LABEL_90;
      case 2:
        if (!v34) {
          goto LABEL_80;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_114;
          }
          v7 += *(unsigned __int8 *)(a1 + 76) << 26 >> 31;
        }
        else
        {
          uint64_t v49 = PBReaderReadString();
          char v50 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v49;

          --v7;
        }
        goto LABEL_93;
      case 3:
        if (!v34 || (*(unsigned char *)(a1 + 76) & 8) != 0) {
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_114;
        }
        id v51 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v51, (void *)v3)) {
          goto LABEL_113;
        }
        PBReaderRecallMark();
        -[GEOPDGuidesHomeRepeatableSection _addNoFlagsCarouselGuideId:](a1, v51);
        goto LABEL_71;
      case 4:
        if (!v34 || (*(unsigned char *)(a1 + 76) & 0x40) != 0) {
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_114;
        }
        id v51 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v51, (void *)v3)) {
          goto LABEL_113;
        }
        PBReaderRecallMark();
        -[GEOPDGuidesHomeRepeatableSection _addNoFlagsPublisherId:](a1, v51);
        goto LABEL_71;
      case 5:
        if (!v34 || (*(unsigned char *)(a1 + 76) & 0x10) != 0) {
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_114;
        }
        id v51 = objc_alloc_init(GEOPDGuidesLocationEntry);
        if (GEOPDGuidesLocationEntryReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDGuidesHomeRepeatableSection _addNoFlagsGuidesLocationEntry:](a1, v51);
LABEL_71:

LABEL_93:
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_94;
        }
LABEL_113:

LABEL_114:
        int v64 = 0;
        char v65 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_97:
        if (v67) {
LABEL_98:
        }
          *(unsigned char *)(a1 + v65[298]) |= 4u;
        if (v70 || (v64 & 1) == 0)
        {
          *(unsigned char *)(a1 + v65[298]) |= 0x20u;
          *(unsigned char *)(a1 + v65[298]) |= 8u;
          *(unsigned char *)(a1 + v65[298]) |= 0x40u;
          *(unsigned char *)(a1 + v65[298]) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            int v60 = *v19++;
            char v61 = 32;
            switch(v60)
            {
              case 0:
                goto LABEL_107;
              case 2:
                goto LABEL_106;
              case 3:
                char v61 = 8;
                goto LABEL_106;
              case 4:
                char v61 = 64;
                goto LABEL_106;
              case 5:
                char v61 = 16;
LABEL_106:
                *(unsigned char *)(a1 + v65[298]) |= v61;
                break;
              default:
                continue;
            }
          }
        }
LABEL_107:
        if (v64) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v70)
        {
          char v62 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 6:
        if ((v66 & 1) == 0) {
          goto LABEL_80;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (2)
        {
          uint64_t v54 = *v20;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v22) + v55);
            *(void *)(v3 + v54) = v56;
            v41 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v30 = v53++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_89:
        uint64_t v59 = 68;
LABEL_90:
        *(_DWORD *)(a1 + v59) = v41;
        goto LABEL_94;
      default:
        if ((v67 & 1) == 0 || (*(unsigned char *)(a1 + 76) & 4) != 0)
        {
LABEL_80:
          char v58 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v58 & 1) == 0)
          {
            int v64 = 0;
LABEL_96:
            char v65 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_97;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v48)
          {
            int v64 = 0;
            char v65 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_98;
          }
        }
LABEL_94:
        if (!(v68 & 1 | (v7 != 0))) {
          goto LABEL_95;
        }
        break;
    }
  }
LABEL_95:
  int v64 = 1;
  goto LABEL_96;
}

void sub_1894B4614(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B4840(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B4A6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B53F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGuidesHomeRepeatableSectionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v2 = a1[3];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v26;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v26 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v25 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v4);
  }

  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v7 = a1[6];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v22;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v21 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
    }
    while (v9);
  }

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v12 = a1[4];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v18;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v18 != v15) {
          objc_enumerationMutation(v12);
        }
        -[GEOPDGuidesLocationEntry readAll:](*(void *)(*((void *)&v17 + 1) + 8 * v16++), 1);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
    }
    while (v14);
  }
}

unint64_t GEOPDGuidesHomeRepeatableSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDGuidesHomeRepeatableSectionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDGuidesHomeRepeatableSectionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDGuidesHomeRepeatableSectionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDGuidesHomeRepeatableSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDGuidesHomeRepeatableSectionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1894B5890(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B5C4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B604C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B64D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGuidesHomeResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFCFFFEFFFFFFFDLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v8)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        long long v20 = (int *)MEMORY[0x1E4F940E8];
        long long v21 = (int *)MEMORY[0x1E4F940C8];
        long long v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_81;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_81:
      int v52 = 1;
      goto LABEL_82;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if ((int)v33 <= 2)
    {
      if (v33 == 1)
      {
        if (v34)
        {
          if ((*(unsigned char *)(a1 + 68) & 2) == 0)
          {
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_101;
            }
            char v39 = objc_alloc_init(GEOPDGuidesHomeFixedSection);
            if (!GEOPDGuidesHomeFixedSectionReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
              goto LABEL_100;
            }
            PBReaderRecallMark();
            uint64_t v40 = 24;
            goto LABEL_63;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_101;
          }
          char v46 = *(unsigned char *)(a1 + 68) << 6;
LABEL_78:
          v7 += v46 >> 7;
          goto LABEL_79;
        }
      }
      else
      {
        if (v33 != 2) {
          goto LABEL_64;
        }
        if (v34)
        {
          if ((*(unsigned char *)(a1 + 68) & 8) == 0)
          {
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_101;
            }
            char v39 = objc_alloc_init(GEOPDGuidesHomeFixedSection);
            if (!GEOPDGuidesHomeFixedSectionReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
              goto LABEL_100;
            }
            PBReaderRecallMark();
            uint64_t v40 = 40;
LABEL_63:
            uint64_t v41 = *(void **)(a1 + v40);
            *(void *)(a1 + v40) = v39;

            --v7;
LABEL_79:
            long long v21 = (int *)MEMORY[0x1E4F940C8];
            goto LABEL_80;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_101;
          }
          char v46 = 16 * *(unsigned char *)(a1 + 68);
          goto LABEL_78;
        }
      }
      goto LABEL_70;
    }
    if (v33 == 3) {
      break;
    }
    if (v33 != 50)
    {
LABEL_64:
      if ((v54 & 1) != 0 && (*(unsigned char *)(a1 + 68) & 1) == 0)
      {
        if (!*(void *)(a1 + 16))
        {
          id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          uint64_t v43 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v42;
        }
        int v44 = PBUnknownFieldAdd();
        long long v21 = (int *)MEMORY[0x1E4F940C8];
        if (!v44)
        {
          int v52 = 0;
          unsigned int v53 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
          goto LABEL_84;
        }
        goto LABEL_80;
      }
      goto LABEL_70;
    }
    if (v34 && (*(unsigned char *)(a1 + 68) & 0x10) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_101;
      }
      char v39 = objc_alloc_init(GEOPDGuidesHomeRepeatableSection);
      if (!GEOPDGuidesHomeRepeatableSectionReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
        goto LABEL_100;
      }
      PBReaderRecallMark();
      -[GEOPDGuidesHomeResult _addNoFlagsRepeatableSection:](a1, v39);

      goto LABEL_79;
    }
LABEL_70:
    char v45 = PBReaderSkipValueWithTag();
    long long v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v52 = 0;
LABEL_82:
      unsigned int v53 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
      goto LABEL_83;
    }
LABEL_80:
    if (!(v55 & 1 | (v7 != 0))) {
      goto LABEL_81;
    }
  }
  if (!v34) {
    goto LABEL_70;
  }
  if ((*(unsigned char *)(a1 + 68) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_101;
    }
    char v46 = 32 * *(unsigned char *)(a1 + 68);
    goto LABEL_78;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_101;
  }
  char v39 = objc_alloc_init(GEOPDGuidesHomeFixedSection);
  if (GEOPDGuidesHomeFixedSectionReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = 32;
    goto LABEL_63;
  }
LABEL_100:

LABEL_101:
  int v52 = 0;
  unsigned int v53 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  long long v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_83:
  if ((v54 & 1) == 0) {
    goto LABEL_85;
  }
LABEL_84:
  *(unsigned char *)(a1 + v53[307]) |= 1u;
LABEL_85:
  if (v57 || (v52 & 1) == 0)
  {
    *(unsigned char *)(a1 + v53[307]) |= 2u;
    *(unsigned char *)(a1 + v53[307]) |= 8u;
    *(unsigned char *)(a1 + v53[307]) |= 4u;
    *(unsigned char *)(a1 + v53[307]) |= 0x10u;
  }
  else if (v19)
  {
    while (1)
    {
      int v48 = *v19++;
      int v47 = v48;
      char v49 = 2;
      switch(v48)
      {
        case 0:
          goto LABEL_94;
        case 1:
          goto LABEL_93;
        case 2:
          char v49 = 8;
          goto LABEL_93;
        case 3:
          char v49 = 4;
          goto LABEL_93;
        default:
          if (v47 != 50) {
            continue;
          }
          char v49 = 16;
LABEL_93:
          *(unsigned char *)(a1 + v53[307]) |= v49;
          break;
      }
    }
  }
LABEL_94:
  if (v52) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v57)
  {
    char v50 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1894B6D68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B6EF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B7088(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B772C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGuidesHomeResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  -[GEOPDGuidesHomeFixedSection readAll:](*(void *)(a1 + 24), 1);
  -[GEOPDGuidesHomeFixedSection readAll:](*(void *)(a1 + 40), 1);
  -[GEOPDGuidesHomeFixedSection readAll:](*(void *)(a1 + 32), 1);
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 48);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDGuidesHomeRepeatableSection readAll:](*(void *)(*((void *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPDGuidesHomeResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDGuidesHomeResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDGuidesHomeResultReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDGuidesHomeResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDGuidesHomeResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDGuidesHomeResultCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1894B7AD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B7D40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDGuidesHomeResultIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((v2 & 2) != 0)
  {
    if (GEOPDGuidesHomeFixedSectionIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  }
  if ((v2 & 8) == 0) {
    goto LABEL_8;
  }
  if (GEOPDGuidesHomeFixedSectionIsDirty(*(void *)(a1 + 40))) {
    return 1;
  }
  unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
LABEL_8:
  if ((v2 & 4) != 0)
  {
    if (GEOPDGuidesHomeFixedSectionIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOPDGuidesHomeResultIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDGuidesHomeResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1894B8468(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B888C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGuidesHomeResultFilterReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v61 = v17;
        char v62 = v18 | v17;
        if ((v18 | v7)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        long long v20 = (int *)MEMORY[0x1E4F940E8];
        char v63 = (v19 == 0) | v18;
        BOOL v64 = v18;
        long long v21 = (int *)MEMORY[0x1E4F940C8];
        long long v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_75;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_75:
      int v59 = 1;
LABEL_76:
      int v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
      goto LABEL_77;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v64;
    if ((v63 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 != 50) {
      break;
    }
    if (v34 && (*(unsigned char *)(a1 + 56) & 8) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_97;
      }
      char v46 = objc_alloc_init(GEOPDGuidesHomeResultFilter);
      if (!GEOPDGuidesHomeResultFilterReadAllFrom()) {
        goto LABEL_96;
      }
      PBReaderRecallMark();
      -[GEOPDGuidesHomeResultFilter _addNoFlagsSubFilter:](a1, v46);

      long long v21 = (int *)MEMORY[0x1E4F940C8];
      uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
      goto LABEL_66;
    }
LABEL_65:
    char v52 = PBReaderSkipValueWithTag();
    long long v21 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
    if ((v52 & 1) == 0)
    {
      int v59 = 0;
      goto LABEL_76;
    }
LABEL_66:
    if (!(v62 & 1 | (v8 != 0))) {
      goto LABEL_75;
    }
  }
  if (v33 != 2)
  {
    if (v33 == 1)
    {
      if (v7)
      {
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_69;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_71;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_69:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_71:
        *(_DWORD *)(a1 + 52) = v41;
        goto LABEL_66;
      }
    }
    else if ((v61 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v51 = PBUnknownFieldAdd();
      long long v21 = (int *)MEMORY[0x1E4F940C8];
      uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
      if (!v51)
      {
        int v59 = 0;
        int v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        goto LABEL_78;
      }
      goto LABEL_66;
    }
    goto LABEL_65;
  }
  if (!v34) {
    goto LABEL_65;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) != 0)
  {
    char v53 = PBReaderSkipValueWithTag();
    uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
    if ((v53 & 1) == 0) {
      goto LABEL_97;
    }
    v8 += *(unsigned __int8 *)(a1 + 56) << 29 >> 31;
    goto LABEL_74;
  }
  char v47 = PBReaderPlaceMark();
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  if ((v47 & 1) == 0) {
    goto LABEL_97;
  }
  char v46 = objc_alloc_init(GEOPDGuidesHomeResultFilterTypeConcept);
  if (GEOPDGuidesHomeResultFilterTypeConceptReadAllFrom((uint64_t)v46, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    int v48 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v46;

    --v8;
LABEL_74:
    long long v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_66;
  }
LABEL_96:

LABEL_97:
  int v59 = 0;
  int v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  long long v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
  if ((v61 & 1) == 0) {
    goto LABEL_79;
  }
LABEL_78:
  *(unsigned char *)(a1 + v60[314]) |= 2u;
LABEL_79:
  if (v64 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[314]) |= 4u;
    *(unsigned char *)(a1 + v60[314]) |= 8u;
    goto LABEL_89;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v19++;
        int v54 = v55;
        if (v55 == 2) {
          break;
        }
        if (v54 == 50)
        {
          char v56 = 8;
          goto LABEL_88;
        }
        if (!v54) {
          goto LABEL_89;
        }
      }
      char v56 = 4;
LABEL_88:
      *(unsigned char *)(a1 + v60[314]) |= v56;
      continue;
    }
  }
LABEL_89:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v64)
  {
    BOOL v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1894B90B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B965C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGuidesHomeResultFilterCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        -[GEOPDGuidesHomeResultFilter readAll:](*(void *)(*((void *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDGuidesHomeResultFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDGuidesHomeResultFilterReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDGuidesHomeResultFilterReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDGuidesHomeResultFilterReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDGuidesHomeResultFilterReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDGuidesHomeResultFilterCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1894B9D68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894B9FC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDGuidesHomeResultFilterIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 56) & 0x1C) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 56) & 8) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 32);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDGuidesHomeResultFilterIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDGuidesHomeResultFilterIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDGuidesHomeResultFilterIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1894BA3E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGuidesHomeResultFilterTypeConceptReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    long long v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    long long v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          long long v20 = objc_alloc_init(GEOPDRelatedSearchSuggestion);
          if (!GEOPDRelatedSearchSuggestionReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          long long v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v22 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v23 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v22;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_1894BABD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGuidesLocationsSuggestionParametersReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          int v18 = objc_alloc_init(GEOPDViewportInfo);
          if (!GEOPDViewportInfoReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          long long v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            long long v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_1894BB384(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894BB6EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGuidesLocationsSuggestionResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        id v20 = (int *)MEMORY[0x1E4F940E8];
        long long v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_70;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_70:
      int v51 = 1;
      goto LABEL_71;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if (!v34) {
        goto LABEL_61;
      }
      if ((*(unsigned char *)(a1 + 60) & 8) == 0)
      {
        uint64_t v40 = PBReaderReadString();
        uint64_t v41 = *(void **)(a1 + 40);
        *(void *)(a1 + 40) = v40;
        goto LABEL_54;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_88;
      }
      char v46 = 16 * *(unsigned char *)(a1 + 60);
LABEL_67:
      v7 += v46 >> 7;
      goto LABEL_68;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34 && (*(unsigned char *)(a1 + 60) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_88;
        }
        char v39 = objc_alloc_init(GEOPDGuidesLocationEntry);
        if (!GEOPDGuidesLocationEntryReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_87;
        }
        PBReaderRecallMark();
        -[GEOPDGuidesLocationsSuggestionResult _addNoFlagsEntry:](a1, v39);

        goto LABEL_68;
      }
    }
    else if ((v53 & 1) != 0 && (*(unsigned char *)(a1 + 60) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;
      }
      int v44 = PBUnknownFieldAdd();
      long long v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v44)
      {
        int v51 = 0;
        char v52 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        goto LABEL_73;
      }
      goto LABEL_69;
    }
LABEL_61:
    char v45 = PBReaderSkipValueWithTag();
    long long v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v51 = 0;
LABEL_71:
      char v52 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
      goto LABEL_72;
    }
LABEL_69:
    if (!(v54 & 1 | (v7 != 0))) {
      goto LABEL_70;
    }
  }
  if (!v34) {
    goto LABEL_61;
  }
  if ((*(unsigned char *)(a1 + 60) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_88;
    }
    char v46 = 32 * *(unsigned char *)(a1 + 60);
    goto LABEL_67;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_88;
  }
  char v39 = objc_alloc_init(GEOPDGuidesLocationEntry);
  if (GEOPDGuidesLocationEntryReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v41 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v39;
LABEL_54:

    --v7;
LABEL_68:
    long long v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_69;
  }
LABEL_87:

LABEL_88:
  int v51 = 0;
  char v52 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  long long v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  if ((v53 & 1) == 0) {
    goto LABEL_74;
  }
LABEL_73:
  *(unsigned char *)(a1 + v52[321]) |= 1u;
LABEL_74:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[321]) |= 2u;
    *(unsigned char *)(a1 + v52[321]) |= 4u;
    *(unsigned char *)(a1 + v52[321]) |= 8u;
  }
  else if (v19)
  {
    while (1)
    {
      int v47 = *v19++;
      char v48 = 2;
      switch(v47)
      {
        case 0:
          goto LABEL_81;
        case 1:
          goto LABEL_80;
        case 2:
          char v48 = 4;
          goto LABEL_80;
        case 3:
          char v48 = 8;
LABEL_80:
          *(unsigned char *)(a1 + v52[321]) |= v48;
          break;
        default:
          continue;
      }
    }
  }
LABEL_81:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    id v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1894BBF0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894BC37C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894BC470(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGuidesLocationsSuggestionResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDGuidesLocationEntry readAll:](*(void *)(*((void *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }

  -[GEOPDGuidesLocationEntry readAll:](*(void *)(a1 + 32), 1);
}

unint64_t GEOPDGuidesLocationsSuggestionResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDGuidesLocationsSuggestionResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDGuidesLocationsSuggestionResultReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDGuidesLocationsSuggestionResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDGuidesLocationsSuggestionResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDGuidesLocationsSuggestionResultCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1894BC7F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894BCA40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDGuidesLocationsSuggestionResultIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v2 = *(unsigned char *)(a1 + 60);
  if ((v2 & 0x12) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 4) != 0)
  {
    if (GEOPDGuidesLocationEntryIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 60);
  }
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 2) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 24);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOPDGuidesLocationEntryIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_20;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_20:

  return v3;
}

void sub_1894BCE14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDIconMappingReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 96)), (uint16x4_t)0xFFFBFFF8FFF9FFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 96) >> 4) & 1)+ ((*(_WORD *)(a1 + 96) >> 9) & 1)+ ((*(_WORD *)(a1 + 96) >> 3) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v84 = v17;
        char v85 = v18 | v17;
        if ((v18 | v8)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        char v86 = (v19 == 0) | v18;
        BOOL v87 = v18;
        id v20 = (int *)MEMORY[0x1E4F940E8];
        long long v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_135;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_135:
      int v82 = 1;
      goto LABEL_136;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v87;
    if ((v86 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_104;
        }
        if ((*(_WORD *)(a1 + 96) & 0x80) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 48;
          goto LABEL_89;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_155;
        }
        __int16 v77 = *(_WORD *)(a1 + 96) << 8;
        goto LABEL_132;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_104;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        while (2)
        {
          uint64_t v47 = *v20;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v22) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v30 = v45++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_109:
        uint64_t v74 = 88;
        goto LABEL_118;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_104;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v53 = 0;
        *(_WORD *)(a1 + 96) |= 4u;
        while (2)
        {
          uint64_t v54 = *v20;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v22) + v55);
            *(void *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              BOOL v30 = v52++ >= 9;
              if (v30)
              {
                uint64_t v53 = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v53 = 0;
        }
LABEL_113:
        BOOL v75 = v53 != 0;
        uint64_t v76 = 93;
        goto LABEL_123;
      case 4:
        if (!v34) {
          goto LABEL_104;
        }
        if ((*(_WORD *)(a1 + 96) & 0x100) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 56;
          goto LABEL_89;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_155;
        }
        __int16 v77 = *(_WORD *)(a1 + 96) << 7;
        goto LABEL_132;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_104;
        }
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 96) |= 1u;
        while (2)
        {
          uint64_t v60 = *v20;
          uint64_t v61 = *(void *)(v3 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(v3 + *v22) + v61);
            *(void *)(v3 + v60) = v62;
            v46 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              BOOL v30 = v59++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_117:
        uint64_t v74 = 84;
LABEL_118:
        *(_DWORD *)(a1 + v74) = v46;
        goto LABEL_134;
      case 6:
        if (!v34 || (*(_WORD *)(a1 + 96) & 0x20) != 0) {
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_155;
        }
        BOOL v64 = objc_alloc_init(GEOPDCartoIconZoom);
        if (!GEOPDCartoIconZoomReadAllFrom((uint64_t)v64, (void *)v3)) {
          goto LABEL_154;
        }
        PBReaderRecallMark();
        -[GEOPDIconMapping _addNoFlagsCartoZoom:](a1, v64);
        goto LABEL_85;
      case 7:
        if (!v34 || (*(_WORD *)(a1 + 96) & 0x10) != 0) {
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_155;
        }
        BOOL v64 = objc_alloc_init(GEOPDCartoIconZoom);
        if (!GEOPDCartoIconZoomReadAllFrom((uint64_t)v64, (void *)v3)) {
          goto LABEL_154;
        }
        PBReaderRecallMark();
        -[GEOPDIconMapping _addNoFlagsCartoZoomIndoor:](a1, v64);
LABEL_85:

        goto LABEL_133;
      case 8:
        if (!v34) {
          goto LABEL_104;
        }
        if ((*(_WORD *)(a1 + 96) & 0x40) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 40;
LABEL_89:
          char v65 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
          goto LABEL_95;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_155;
        }
        __int16 v77 = *(_WORD *)(a1 + 96) << 9;
        goto LABEL_132;
      case 9:
        if (!v34) {
          goto LABEL_104;
        }
        if ((*(_WORD *)(a1 + 96) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_155;
          }
          __int16 v77 = *(_WORD *)(a1 + 96) << 6;
LABEL_132:
          v7 += v77 >> 15;
          goto LABEL_133;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_155;
        }
        BOOL v64 = objc_alloc_init(GEOPDVectorPoiDisplayDV);
        if (GEOPDVectorPoiDisplayDVReadAllFrom((uint64_t)v64, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          char v65 = *(void **)(a1 + 64);
          *(void *)(a1 + 64) = v64;
LABEL_95:

          --v7;
LABEL_133:
          long long v21 = (int *)MEMORY[0x1E4F940C8];
          BOOL v22 = (int *)MEMORY[0x1E4F940B8];
LABEL_134:
          if (!(v85 & 1 | (v7 != 0))) {
            goto LABEL_135;
          }
          continue;
        }
LABEL_154:

LABEL_155:
        int v82 = 0;
        long long v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_136:
        uint64_t v83 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
        if (v84) {
LABEL_137:
        }
          *(_WORD *)(a1 + v83[300]) |= 8u;
        if (v87 || (v82 & 1) == 0)
        {
          *(_WORD *)(a1 + v83[300]) |= 0x80u;
          *(_WORD *)(a1 + v83[300]) |= 0x40u;
          *(_WORD *)(a1 + v83[300]) |= 0x100u;
          *(_WORD *)(a1 + v83[300]) |= 0x20u;
          *(_WORD *)(a1 + v83[300]) |= 0x10u;
          *(_WORD *)(a1 + v83[300]) |= 0x200u;
        }
        else if (v19)
        {
          while (1)
          {
            int v78 = *v19++;
            __int16 v79 = 128;
            switch(v78)
            {
              case 0:
                goto LABEL_148;
              case 1:
                goto LABEL_147;
              case 4:
                __int16 v79 = 256;
                goto LABEL_147;
              case 6:
                __int16 v79 = 32;
                goto LABEL_147;
              case 7:
                __int16 v79 = 16;
                goto LABEL_147;
              case 8:
                __int16 v79 = 64;
                goto LABEL_147;
              case 9:
                __int16 v79 = 512;
LABEL_147:
                *(_WORD *)(a1 + v83[300]) |= v79;
                break;
              default:
                continue;
            }
          }
        }
LABEL_148:
        if (v82) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v87)
        {
          char v80 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_104;
        }
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v68 = 0;
        *(_WORD *)(a1 + 96) |= 2u;
        while (2)
        {
          uint64_t v69 = *v20;
          uint64_t v70 = *(void *)(v3 + v69);
          unint64_t v71 = v70 + 1;
          if (v70 == -1 || v71 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(v3 + *v22) + v70);
            *(void *)(v3 + v69) = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if (v72 < 0)
            {
              v66 += 7;
              BOOL v30 = v67++ >= 9;
              if (v30)
              {
                uint64_t v68 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v68 = 0;
        }
LABEL_122:
        BOOL v75 = v68 != 0;
        uint64_t v76 = 92;
LABEL_123:
        *(unsigned char *)(a1 + v76) = v75;
        goto LABEL_134;
      default:
        if ((v84 & 1) == 0 || (*(_WORD *)(a1 + 96) & 8) != 0)
        {
LABEL_104:
          char v73 = PBReaderSkipValueWithTag();
          BOOL v22 = (int *)MEMORY[0x1E4F940B8];
          long long v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v73 & 1) == 0)
          {
            int v82 = 0;
            goto LABEL_136;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          long long v21 = (int *)MEMORY[0x1E4F940C8];
          BOOL v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v43)
          {
            int v82 = 0;
            uint64_t v83 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
            goto LABEL_137;
          }
        }
        goto LABEL_134;
    }
  }
}

void sub_1894BDC80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894BDE10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894BE748(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894BE844(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDIconMappingCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v14 objects:v19 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v15;
    while (1)
    {
      if (*(void *)v15 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v14 objects:v19 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v6 = *(id *)(a1 + 24);
  uint64_t v7 = [v6 countByEnumeratingWithState:&v10 objects:v18 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v11;
    while (1)
    {
      if (*(void *)v11 != v9) {
        objc_enumerationMutation(v6);
      }
      if (!--v8)
      {
        uint64_t v8 = [v6 countByEnumeratingWithState:&v10 objects:v18 count:16];
        if (!v8) {
          break;
        }
      }
    }
  }

  -[GEOPDVectorPoiDisplayDV readAll:](*(void *)(a1 + 64), 1);
}

unint64_t GEOPDIconMappingReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDIconMappingReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDIconMappingReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDIconMappingReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDIconMappingReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDIconMappingCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1894BFBCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDIconMappingIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
    id v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_167;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v2;
        uint64_t v11 = *(void *)&a1[v10];
        unint64_t v12 = v11 + 1;
        if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        BOOL v14 = v8++ >= 9;
        if (v14)
        {
          unint64_t v9 = 0;
          int v15 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v15 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v16 = v9 & 7;
      if (v15 || v16 == 4) {
        goto LABEL_167;
      }
      switch((v9 >> 3))
      {
        case 1u:
          if (v16 == 2) {
            goto LABEL_53;
          }
          goto LABEL_176;
        case 2u:
          if (v5 || (v9 & 7) != 0) {
            goto LABEL_176;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v6] + v20);
            *(void *)&a1[v19] = v21;
            int v5 = 2;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_164;
          }
          a1[*v4] = 1;
          int v5 = 2;
          goto LABEL_164;
        case 3u:
          if ((v9 & 7) != 0) {
            goto LABEL_176;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_160;
            }
            int v28 = *(char *)(*(void *)&a1[*v6] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_164;
          }
        case 4u:
          if (v16 == 2) {
            goto LABEL_53;
          }
          goto LABEL_176;
        case 5u:
          if ((v9 & 7) != 0) {
            goto LABEL_176;
          }
          unsigned int v29 = 0;
          while (1)
          {
            uint64_t v30 = *v2;
            uint64_t v31 = *(void *)&a1[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
              goto LABEL_160;
            }
            int v33 = *(char *)(*(void *)&a1[*v6] + v31);
            *(void *)&a1[v30] = v32;
            if (v33 < 0)
            {
              BOOL v23 = v29++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_164;
          }
        case 6u:
        case 7u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOPDCartoIconZoomIsValid(a1)) {
            goto LABEL_162;
          }
          goto LABEL_176;
        case 8u:
          if (v16 == 2) {
            goto LABEL_53;
          }
          goto LABEL_176;
        case 9u:
          if (v16 != 2 || !PBReaderPlaceMark()) {
            goto LABEL_176;
          }
          objc_msgSend(a1, "position", 0, 0);
          [a1 length];
LABEL_58:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v34 = 0;
            unsigned int v35 = 0;
            unint64_t v36 = 0;
            while (2)
            {
              uint64_t v37 = *v2;
              uint64_t v38 = *(void *)&a1[v37];
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)&a1[*v6] + v38);
                *(void *)&a1[v37] = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  BOOL v14 = v35++ >= 9;
                  if (v14)
                  {
                    unint64_t v36 = 0;
                    int v41 = a1[*v4];
                    goto LABEL_70;
                  }
                  continue;
                }
              }
              break;
            }
            int v41 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v36 = 0;
            }
LABEL_70:
            int v42 = v36 & 7;
            if (v41) {
              BOOL v43 = 1;
            }
            else {
              BOOL v43 = v42 == 4;
            }
            if (!v43)
            {
              switch((v36 >> 3))
              {
                case 1u:
                  if ((v36 & 7) != 0) {
                    goto LABEL_175;
                  }
                  unsigned int v44 = 0;
                  while (1)
                  {
                    uint64_t v45 = *v2;
                    uint64_t v46 = *(void *)&a1[v45];
                    unint64_t v47 = v46 + 1;
                    if (v46 == -1 || v47 > *(void *)&a1[*v3]) {
                      goto LABEL_149;
                    }
                    int v48 = *(char *)(*(void *)&a1[*v6] + v46);
                    *(void *)&a1[v45] = v47;
                    if (v48 < 0)
                    {
                      BOOL v23 = v44++ > 8;
                      if (!v23) {
                        continue;
                      }
                    }
                    goto LABEL_58;
                  }
                case 2u:
                case 4u:
                case 7u:
                case 8u:
                  if (v42 == 2 && PBReaderPlaceMark() && GEOPDZoomInfoIsValid(a1)) {
                    goto LABEL_78;
                  }
                  goto LABEL_175;
                case 3u:
                  if ((v36 & 7) != 0) {
                    goto LABEL_175;
                  }
                  unsigned int v49 = 0;
                  while (1)
                  {
                    uint64_t v50 = *v2;
                    uint64_t v51 = *(void *)&a1[v50];
                    unint64_t v52 = v51 + 1;
                    if (v51 == -1 || v52 > *(void *)&a1[*v3]) {
                      goto LABEL_149;
                    }
                    int v53 = *(char *)(*(void *)&a1[*v6] + v51);
                    *(void *)&a1[v50] = v52;
                    if (v53 < 0)
                    {
                      BOOL v23 = v49++ > 8;
                      if (!v23) {
                        continue;
                      }
                    }
                    goto LABEL_58;
                  }
                case 5u:
                  if (v42 != 2 || !PBReaderPlaceMark()) {
                    goto LABEL_175;
                  }
                  [a1 position];
                  [a1 length];
LABEL_100:
                  while (2)
                  {
                    if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
                    {
                      char v54 = 0;
                      unsigned int v55 = 0;
                      unint64_t v56 = 0;
                      while (1)
                      {
                        uint64_t v57 = *v2;
                        uint64_t v58 = *(void *)&a1[v57];
                        unint64_t v59 = v58 + 1;
                        if (v58 == -1 || v59 > *(void *)&a1[*v3]) {
                          break;
                        }
                        char v60 = *(unsigned char *)(*(void *)&a1[*v6] + v58);
                        *(void *)&a1[v57] = v59;
                        v56 |= (unint64_t)(v60 & 0x7F) << v54;
                        if ((v60 & 0x80) == 0) {
                          goto LABEL_110;
                        }
                        v54 += 7;
                        BOOL v14 = v55++ >= 9;
                        if (v14)
                        {
                          unint64_t v56 = 0;
                          int v61 = a1[*v4];
                          goto LABEL_112;
                        }
                      }
                      a1[*v4] = 1;
LABEL_110:
                      int v61 = a1[*v4];
                      if (a1[*v4]) {
                        unint64_t v56 = 0;
                      }
LABEL_112:
                      int v62 = v56 & 7;
                      if (!v61 && v62 != 4)
                      {
                        if ((v56 >> 3) == 2)
                        {
                          if (v62 == 2 && PBReaderPlaceMark() && GEOPDGeographicCoordinateIsValid(a1))
                          {
                            PBReaderRecallMark();
                            continue;
                          }
                        }
                        else
                        {
                          if ((v56 >> 3) != 1)
                          {
                            if ((PBReaderSkipValueWithTag() & 1) == 0) {
                              goto LABEL_174;
                            }
                            continue;
                          }
                          if ((v56 & 7) == 0)
                          {
                            unsigned int v64 = 0;
                            do
                            {
                              uint64_t v65 = *v2;
                              uint64_t v66 = *(void *)&a1[v65];
                              unint64_t v67 = v66 + 1;
                              if (v66 == -1 || v67 > *(void *)&a1[*v3])
                              {
                                a1[*v4] = 1;
                                goto LABEL_100;
                              }
                              int v68 = *(char *)(*(void *)&a1[*v6] + v66);
                              *(void *)&a1[v65] = v67;
                              if ((v68 & 0x80000000) == 0) {
                                break;
                              }
                              BOOL v23 = v64++ > 8;
                            }
                            while (!v23);
                            continue;
                          }
                        }
LABEL_174:
                        PBReaderRecallMark();
                        goto LABEL_175;
                      }
                    }
                    break;
                  }
                  int v79 = a1[*v4];
                  PBReaderRecallMark();
                  if (!v79)
                  {
LABEL_78:
                    PBReaderRecallMark();
                    continue;
                  }
LABEL_175:
                  PBReaderRecallMark();
                  goto LABEL_176;
                case 6u:
                  if ((v36 & 7) != 0) {
                    goto LABEL_175;
                  }
                  unsigned int v69 = 0;
                  while (1)
                  {
                    uint64_t v70 = *v2;
                    uint64_t v71 = *(void *)&a1[v70];
                    unint64_t v72 = v71 + 1;
                    if (v71 == -1 || v72 > *(void *)&a1[*v3]) {
                      goto LABEL_149;
                    }
                    int v73 = *(char *)(*(void *)&a1[*v6] + v71);
                    *(void *)&a1[v70] = v72;
                    if (v73 < 0)
                    {
                      BOOL v23 = v69++ > 8;
                      if (!v23) {
                        continue;
                      }
                    }
                    goto LABEL_58;
                  }
                case 9u:
                  if ((v36 & 7) != 0) {
                    goto LABEL_175;
                  }
                  unsigned int v74 = 0;
                  do
                  {
                    uint64_t v75 = *v2;
                    uint64_t v76 = *(void *)&a1[v75];
                    unint64_t v77 = v76 + 1;
                    if (v76 == -1 || v77 > *(void *)&a1[*v3])
                    {
LABEL_149:
                      a1[*v4] = 1;
                      goto LABEL_58;
                    }
                    int v78 = *(char *)(*(void *)&a1[*v6] + v76);
                    *(void *)&a1[v75] = v77;
                    if ((v78 & 0x80000000) == 0) {
                      break;
                    }
                    BOOL v23 = v74++ > 8;
                  }
                  while (!v23);
                  break;
                default:
                  if (PBReaderSkipValueWithTag()) {
                    continue;
                  }
                  goto LABEL_175;
              }
              continue;
            }
            break;
          }
          int v85 = a1[*v4];
          PBReaderRecallMark();
          if (v85)
          {
LABEL_176:
            PBReaderRecallMark();
            return 0;
          }
LABEL_162:
          PBReaderRecallMark();
LABEL_164:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_167;
          }
          break;
        case 0xAu:
          if ((v9 & 7) != 0) {
            goto LABEL_176;
          }
          unsigned int v80 = 0;
          while (1)
          {
            uint64_t v81 = *v2;
            uint64_t v82 = *(void *)&a1[v81];
            unint64_t v83 = v82 + 1;
            if (v82 == -1 || v83 > *(void *)&a1[*v3]) {
              break;
            }
            int v84 = *(char *)(*(void *)&a1[*v6] + v82);
            *(void *)&a1[v81] = v83;
            if (v84 < 0)
            {
              BOOL v23 = v80++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_164;
          }
LABEL_160:
          a1[*v4] = 1;
          goto LABEL_164;
        default:
LABEL_53:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_176;
          }
          goto LABEL_164;
      }
    }
  }
  int v5 = 0;
LABEL_167:
  if (a1[*v4]) {
    BOOL v86 = 1;
  }
  else {
    BOOL v86 = v5 == 0;
  }
  uint64_t v87 = !v86;
  PBReaderRecallMark();
  return v87;
}

void sub_1894C0810(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDIconMappingIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  if ((*(_WORD *)(a1 + 96) & 0x5F0) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 96) & 0x200) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(v3 + 72));
  BOOL v2 = (*(_WORD *)(v3 + 92) & 0x7E0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 72));
  return v2;
}

os_unfair_lock_s *GEOPDIconMappingIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDIconMappingIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1894C0D0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDIdentityMerchantInformationReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_1894C1A60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDIndexQueryNodeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1)
      + (*(unsigned char *)(a1 + 64) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 2) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 1;
        char v18 = v17 & ~(_BYTE)v12 | v8;
        unsigned __int8 v19 = v17 | v12;
        char v62 = v18;
        char v63 = v19 | v18;
        if ((v19 | v9)) {
          id v20 = 0;
        }
        else {
          id v20 = a3;
        }
        char v64 = (v20 == 0) | v19;
        BOOL v65 = v19;
        unint64_t v21 = (int *)MEMORY[0x1E4F940E8];
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        BOOL v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v10;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_78;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_78:
      int v60 = 1;
      goto LABEL_79;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v65;
    if ((v64 & 1) == 0)
    {
      unint64_t v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v9 & 1) == 0) {
          goto LABEL_65;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (1)
        {
          uint64_t v43 = *v21;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v7)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v23) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_68;
          }
          v40 += 7;
          BOOL v31 = v41++ >= 9;
          if (v31)
          {
            LODWORD(v42) = 0;
            goto LABEL_70;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_68:
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v42) = 0;
        }
LABEL_70:
        *(_DWORD *)(a1 + 60) = v42;
        goto LABEL_77;
      case 2:
        if (!v35) {
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 64) & 2) == 0)
        {
          uint64_t v50 = PBReaderReadString();
          uint64_t v51 = 24;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_95;
        }
        char v55 = *(unsigned char *)(a1 + 64) << 6;
        goto LABEL_75;
      case 3:
        if (!v35) {
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 64) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_95;
          }
          char v55 = 16 * *(unsigned char *)(a1 + 64);
LABEL_75:
          v10 += v55 >> 7;
        }
        else
        {
          uint64_t v50 = PBReaderReadString();
          uint64_t v51 = 40;
LABEL_59:
          unint64_t v52 = *(void **)(a1 + v51);
          *(void *)(a1 + v51) = v50;

          --v10;
        }
        goto LABEL_76;
      case 4:
        if (!v35 || (*(unsigned char *)(a1 + 64) & 4) != 0) {
          goto LABEL_65;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_95;
        }
        int v53 = objc_alloc_init(GEOPDIndexQueryNode);
        if (GEOPDIndexQueryNodeReadAllFrom())
        {
          PBReaderRecallMark();
          -[GEOPDIndexQueryNode _addNoFlagsOperand:](a1, v53);

LABEL_76:
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          char v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_77:
          if (!(v63 & 1 | (v10 != 0))) {
            goto LABEL_78;
          }
          continue;
        }

LABEL_95:
        int v60 = 0;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_79:
        int v61 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
        if (v62) {
LABEL_80:
        }
          *(unsigned char *)(a1 + v61[318]) |= 1u;
        if (v65 || (v60 & 1) == 0)
        {
          *(unsigned char *)(a1 + v61[318]) |= 2u;
          *(unsigned char *)(a1 + v61[318]) |= 8u;
          *(unsigned char *)(a1 + v61[318]) |= 4u;
        }
        else if (v20)
        {
          while (1)
          {
            int v56 = *v20++;
            char v57 = 2;
            switch(v56)
            {
              case 0:
                goto LABEL_88;
              case 2:
                goto LABEL_87;
              case 3:
                char v57 = 8;
                goto LABEL_87;
              case 4:
                char v57 = 4;
LABEL_87:
                *(unsigned char *)(a1 + v61[318]) |= v57;
                break;
              default:
                continue;
            }
          }
        }
LABEL_88:
        if (v60) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v65)
        {
          uint64_t v58 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v62 & 1) == 0 || (*(unsigned char *)(a1 + 64))
        {
LABEL_65:
          char v54 = PBReaderSkipValueWithTag();
          char v7 = (int *)MEMORY[0x1E4F940E0];
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v54 & 1) == 0)
          {
            int v60 = 0;
            goto LABEL_79;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v48 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v47;
          }
          int v49 = PBUnknownFieldAdd();
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          char v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v49)
          {
            int v60 = 0;
            int v61 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
            goto LABEL_80;
          }
        }
        goto LABEL_77;
    }
  }
}

void sub_1894C25AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894C2B10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894C2C04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDIndexQueryNodeCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        -[GEOPDIndexQueryNode readAll:](*(void *)(*((void *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDIndexQueryNodeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDIndexQueryNodeReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDIndexQueryNodeReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDIndexQueryNodeReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDIndexQueryNodeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDIndexQueryNodeCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1894C32B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDIndexQueryNodeIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
    long long v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_41;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v2;
        uint64_t v11 = *(void *)&a1[v10];
        unint64_t v12 = v11 + 1;
        if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        if (v8++ >= 9)
        {
          unint64_t v9 = 0;
          int v15 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v15 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v16 = v9 & 7;
      if (v15 || v16 == 4) {
        goto LABEL_41;
      }
      switch((v9 >> 3))
      {
        case 1u:
          if (v5 || (v9 & 7) != 0) {
            goto LABEL_48;
          }
          unsigned int v18 = 0;
          do
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3])
            {
              int v5 = 1;
              a1[*v4] = 1;
              goto LABEL_38;
            }
            int v22 = *(char *)(*(void *)&a1[*v6] + v20);
            *(void *)&a1[v19] = v21;
            int v5 = 1;
            if ((v22 & 0x80000000) == 0) {
              break;
            }
          }
          while (v18++ <= 8);
          goto LABEL_38;
        case 2u:
          if (v16 == 2) {
            goto LABEL_31;
          }
          goto LABEL_48;
        case 3u:
          if (v16 == 2) {
            goto LABEL_31;
          }
          goto LABEL_48;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDIndexQueryNodeIsValid(a1)) {
            goto LABEL_48;
          }
          PBReaderRecallMark();
          goto LABEL_38;
        default:
LABEL_31:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_48:
            PBReaderRecallMark();
            return 0;
          }
LABEL_38:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_41;
          }
          break;
      }
    }
  }
  int v5 = 0;
LABEL_41:
  if (a1[*v4]) {
    BOOL v24 = 1;
  }
  else {
    BOOL v24 = v5 == 0;
  }
  uint64_t v25 = !v24;
  PBReaderRecallMark();
  return v25;
}

void sub_1894C37BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDIndexQueryNodeIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(unsigned char *)(a1 + 64) & 0x1E) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 64) & 4) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 32);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDIndexQueryNodeIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDIndexQueryNodeIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDIndexQueryNodeIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1894C3BD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDIpGeoLookupParametersReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_1894C4474(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894C47D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDIpGeoLookupResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFEFFFDFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 72) & 2) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v62 = v17;
        char v63 = v18 | v17;
        char v61 = v7;
        if ((v18 | v7)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        id v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        char v64 = (v19 == 0) | v18;
        BOOL v65 = v18;
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_86;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_86:
      int v59 = 1;
      goto LABEL_87;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v65;
    if ((v64 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v61 & 1) == 0) {
          goto LABEL_69;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_72;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_74;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_72:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_74:
        *(_DWORD *)(a1 + 68) = v41;
        goto LABEL_85;
      case 2:
        if (!v34) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 72) & 8) == 0)
        {
          uint64_t v49 = PBReaderReadString();
          uint64_t v50 = 32;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_105;
        }
        char v54 = 16 * *(unsigned char *)(a1 + 72);
        goto LABEL_83;
      case 3:
        if (!v34) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_105;
          }
          char v54 = 8 * *(unsigned char *)(a1 + 72);
LABEL_83:
          v8 += v54 >> 7;
          goto LABEL_84;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_105;
        }
        uint64_t v51 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v51, (void *)v3))
        {
          PBReaderRecallMark();
          unint64_t v52 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v51;
LABEL_68:

          --v8;
LABEL_84:
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_85;
        }

LABEL_105:
        int v59 = 0;
        int v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_88:
        if (v62) {
LABEL_89:
        }
          *(unsigned char *)(a1 + v60[327]) |= 2u;
        if (v65 || (v59 & 1) == 0)
        {
          *(unsigned char *)(a1 + v60[327]) |= 8u;
          *(unsigned char *)(a1 + v60[327]) |= 0x10u;
          *(unsigned char *)(a1 + v60[327]) |= 4u;
          *(unsigned char *)(a1 + v60[327]) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            int v55 = *v19++;
            char v56 = 8;
            switch(v55)
            {
              case 0:
                goto LABEL_98;
              case 2:
                goto LABEL_97;
              case 3:
                char v56 = 16;
                goto LABEL_97;
              case 4:
                char v56 = 4;
                goto LABEL_97;
              case 5:
                char v56 = 32;
LABEL_97:
                *(unsigned char *)(a1 + v60[327]) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_98:
        if (v59) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v65)
        {
          char v57 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if (!v34) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 72) & 4) == 0)
        {
          uint64_t v49 = PBReaderReadString();
          uint64_t v50 = 24;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_105;
        }
        char v54 = 32 * *(unsigned char *)(a1 + 72);
        goto LABEL_83;
      case 5:
        if (!v34) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x20) == 0)
        {
          uint64_t v49 = PBReaderReadString();
          uint64_t v50 = 48;
LABEL_67:
          unint64_t v52 = *(void **)(a1 + v50);
          *(void *)(a1 + v50) = v49;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_105;
        }
        char v54 = 4 * *(unsigned char *)(a1 + 72);
        goto LABEL_83;
      default:
        if ((v62 & 1) == 0 || (*(unsigned char *)(a1 + 72) & 2) != 0)
        {
LABEL_69:
          char v53 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v59 = 0;
LABEL_87:
            int v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v48)
          {
            int v59 = 0;
            int v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_89;
          }
        }
LABEL_85:
        if (!(v63 & 1 | (v8 != 0))) {
          goto LABEL_86;
        }
        continue;
    }
  }
}

void sub_1894C50D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894C5264(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894C53F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894C5678(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDIpGeoLookupResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDIpGeoLookupResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDIpGeoLookupResultReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDIpGeoLookupResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDIpGeoLookupResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1894C58F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894C5B00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDIpGeoLookupResultIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 72) & 0x7C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_1894C5D6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDLitePlaceResultReadAllFrom(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  int v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        *(unsigned char *)(a1 + 12) |= 2u;
        while (1)
        {
          uint64_t v28 = *v3;
          uint64_t v29 = *(void *)(a2 + v28);
          unint64_t v30 = v29 + 1;
          if (v29 == -1 || v30 > *(void *)(a2 + *v4)) {
            break;
          }
          char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v30;
          v27 |= (unint64_t)(v31 & 0x7F) << v25;
          if ((v31 & 0x80) == 0) {
            goto LABEL_41;
          }
          v25 += 7;
          BOOL v15 = v26++ >= 9;
          if (v15)
          {
            LODWORD(v27) = 0;
            goto LABEL_43;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_43:
        *(_DWORD *)(a1 + 8) = v27;
      }
      else if ((v10 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 12) |= 1u;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_37;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v20 = 0;
            goto LABEL_39;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_39:
        *(void *)a1 = v20;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_1894C6600(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894C6740(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894C6960(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894C6AA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894C7868(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894C7978(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894C8218(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894C8890(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894C8FEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLocationDirectedSearchParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 96)), (uint16x4_t)0xFFFCFFF9FFF8FFF7), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 96) >> 5) & 1)+ ((*(_WORD *)(a1 + 96) >> 6) & 1)+ ((*(_WORD *)(a1 + 96) >> 3) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v74 = v17;
        char v75 = v18 | v17;
        if ((v18 | v8)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        char v76 = (v19 == 0) | v18;
        BOOL v77 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_129;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_129:
      int v72 = 1;
      goto LABEL_130;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v77;
    if ((v76 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_99;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(_WORD *)(a1 + 96) |= 4u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_102;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_104;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_102:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_104:
        uint64_t v66 = 92;
        goto LABEL_113;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_99;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v41 = 0;
        *(_WORD *)(a1 + 96) |= 1u;
        while (2)
        {
          uint64_t v51 = *v20;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v22) + v52);
            *(void *)(v3 + v51) = v53;
            v41 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v30 = v50++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_108;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_108:
        uint64_t v66 = 84;
        goto LABEL_113;
      case 3:
        if (!v34) {
          goto LABEL_99;
        }
        if ((*(_WORD *)(a1 + 96) & 0x100) == 0)
        {
          uint64_t v55 = PBReaderReadString();
          char v56 = *(void **)(a1 + 56);
          *(void *)(a1 + 56) = v55;
          goto LABEL_98;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_150;
        }
        __int16 v67 = *(_WORD *)(a1 + 96) << 7;
        goto LABEL_126;
      case 4:
        if (!v34) {
          goto LABEL_99;
        }
        if ((*(_WORD *)(a1 + 96) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_150;
          }
          __int16 v67 = *(_WORD *)(a1 + 96) << 6;
          goto LABEL_126;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_150;
        }
        char v57 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v57, (void *)v3)) {
          goto LABEL_149;
        }
        PBReaderRecallMark();
        uint64_t v58 = 64;
        goto LABEL_97;
      case 5:
        if (!v34) {
          goto LABEL_99;
        }
        if ((*(_WORD *)(a1 + 96) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_150;
          }
          __int16 v67 = *(_WORD *)(a1 + 96) << 8;
          goto LABEL_126;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_150;
        }
        char v57 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v57, (void *)v3)) {
          goto LABEL_149;
        }
        PBReaderRecallMark();
        uint64_t v58 = 48;
        goto LABEL_97;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_99;
        }
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v41 = 0;
        *(_WORD *)(a1 + 96) |= 2u;
        while (2)
        {
          uint64_t v61 = *v20;
          uint64_t v62 = *(void *)(v3 + v61);
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(v3 + *v22) + v62);
            *(void *)(v3 + v61) = v63;
            v41 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              BOOL v30 = v60++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_112;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_112:
        uint64_t v66 = 88;
LABEL_113:
        *(_DWORD *)(a1 + v66) = v41;
        goto LABEL_128;
      case 7:
        if (!v34) {
          goto LABEL_99;
        }
        if ((*(_WORD *)(a1 + 96) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_150;
          }
          __int16 v67 = *(_WORD *)(a1 + 96) << 11;
          goto LABEL_126;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_150;
        }
        char v57 = objc_alloc_init(GEOPDNearestTransitParameters);
        if (!GEOPDNearestTransitParametersReadAllFrom((uint64_t)v57, (void *)v3)) {
          goto LABEL_149;
        }
        PBReaderRecallMark();
        uint64_t v58 = 24;
        goto LABEL_97;
      case 8:
        if (!v34) {
          goto LABEL_99;
        }
        if ((*(_WORD *)(a1 + 96) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_150;
          }
          __int16 v67 = *(_WORD *)(a1 + 96) << 10;
          goto LABEL_126;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_150;
        }
        char v57 = objc_alloc_init(GEOPDPaginationParameters);
        if (!GEOPDPaginationParametersReadAllFrom((uint64_t)v57, (void *)v3)) {
          goto LABEL_149;
        }
        PBReaderRecallMark();
        uint64_t v58 = 32;
        goto LABEL_97;
      case 9:
        if (!v34) {
          goto LABEL_99;
        }
        if ((*(_WORD *)(a1 + 96) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_150;
          }
          __int16 v67 = *(_WORD *)(a1 + 96) << 9;
LABEL_126:
          v7 += v67 >> 15;
LABEL_127:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_128;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_150;
        }
        char v57 = objc_alloc_init(GEOPDSSearchFilter);
        if (GEOPDSSearchFilterReadAllFrom((uint64_t)v57, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v58 = 40;
LABEL_97:
          char v56 = *(void **)(a1 + v58);
          *(void *)(a1 + v58) = v57;
LABEL_98:

          --v7;
          goto LABEL_127;
        }
LABEL_149:

LABEL_150:
        int v72 = 0;
        int v73 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_131:
        if (v74) {
LABEL_132:
        }
          *(_WORD *)(a1 + v73[334]) |= 8u;
        if (v77 || (v72 & 1) == 0)
        {
          *(_WORD *)(a1 + v73[334]) |= 0x100u;
          *(_WORD *)(a1 + v73[334]) |= 0x200u;
          *(_WORD *)(a1 + v73[334]) |= 0x80u;
          *(_WORD *)(a1 + v73[334]) |= 0x10u;
          *(_WORD *)(a1 + v73[334]) |= 0x20u;
          *(_WORD *)(a1 + v73[334]) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            int v68 = *v19++;
            __int16 v69 = 256;
            switch(v68)
            {
              case 0:
                goto LABEL_143;
              case 3:
                goto LABEL_142;
              case 4:
                __int16 v69 = 512;
                goto LABEL_142;
              case 5:
                __int16 v69 = 128;
                goto LABEL_142;
              case 7:
                __int16 v69 = 16;
                goto LABEL_142;
              case 8:
                __int16 v69 = 32;
                goto LABEL_142;
              case 9:
                __int16 v69 = 64;
LABEL_142:
                *(_WORD *)(a1 + v73[334]) |= v69;
                break;
              default:
                continue;
            }
          }
        }
LABEL_143:
        if (v72) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v77)
        {
          uint64_t v70 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v74 & 1) == 0 || (*(_WORD *)(a1 + 96) & 8) != 0)
        {
LABEL_99:
          char v65 = PBReaderSkipValueWithTag();
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v65 & 1) == 0)
          {
            int v72 = 0;
LABEL_130:
            int v73 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_131;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v48)
          {
            int v72 = 0;
            int v73 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_132;
          }
        }
LABEL_128:
        if (!(v75 & 1 | (v7 != 0))) {
          goto LABEL_129;
        }
        continue;
    }
  }
}

void sub_1894C9C38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894C9D70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894C9FAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894CA680(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDLocationDirectedSearchParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 64) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  uint64_t v2 = *(void *)(a1 + 40);

  -[GEOPDSSearchFilter readAll:](v2, 1);
}

unint64_t GEOPDLocationDirectedSearchParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDLocationDirectedSearchParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDLocationDirectedSearchParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDLocationDirectedSearchParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDLocationDirectedSearchParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDLocationDirectedSearchParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1894CA968(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894CABEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOPDLocationDirectedSearchParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  __int16 v2 = *(_WORD *)(a1 + 96);
  if ((v2 & 0x7B0) != 0) {
    return (os_unfair_lock_s *)1;
  }
  if ((v2 & 0x40) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 40);

  return GEOPDSSearchFilterIsDirty(v4);
}

os_unfair_lock_s *GEOPDLocationDirectedSearchParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    __int16 v2 = _GEOPDLocationDirectedSearchParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return v2;
  }
  return result;
}

void sub_1894CAFE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894CB520(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLocationDirectedSearchResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_72;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_72:
      int v51 = 1;
      goto LABEL_73;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 != 3) {
      break;
    }
    if (v34)
    {
      if ((*(unsigned char *)(a1 + 60) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_90;
        }
        char v39 = objc_alloc_init(GEOPDPaginationInfo);
        if (!GEOPDPaginationInfoReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_89;
        }
        PBReaderRecallMark();
        uint64_t v40 = 40;
        goto LABEL_51;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_90;
      }
      char v46 = 16 * *(unsigned char *)(a1 + 60);
LABEL_69:
      v7 += v46 >> 7;
      goto LABEL_70;
    }
LABEL_63:
    char v45 = PBReaderSkipValueWithTag();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v51 = 0;
LABEL_73:
      uint64_t v52 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
      goto LABEL_74;
    }
LABEL_71:
    if (!(v54 & 1 | (v7 != 0))) {
      goto LABEL_72;
    }
  }
  if (v33 != 2)
  {
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 60) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_90;
          }
          char v39 = objc_alloc_init(GEOMapRegion);
          if (!GEOMapRegionReadAllFrom((uint64_t)v39, (void *)v3)) {
            goto LABEL_89;
          }
          PBReaderRecallMark();
          uint64_t v40 = 32;
LABEL_51:
          uint64_t v41 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
LABEL_70:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_90;
        }
        char v46 = 32 * *(unsigned char *)(a1 + 60);
        goto LABEL_69;
      }
    }
    else if ((v53 & 1) != 0 && (*(unsigned char *)(a1 + 60) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;
      }
      int v44 = PBUnknownFieldAdd();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v44)
      {
        int v51 = 0;
        uint64_t v52 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        goto LABEL_75;
      }
      goto LABEL_71;
    }
    goto LABEL_63;
  }
  if (!v34 || (*(unsigned char *)(a1 + 60) & 2) != 0) {
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_90;
  }
  char v39 = objc_alloc_init(GEOPDMultiLocalizedString);
  if (GEOPDMultiLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDLocationDirectedSearchResult _addNoFlagsDisambiguationLabel:](a1, v39);

    goto LABEL_70;
  }
LABEL_89:

LABEL_90:
  int v51 = 0;
  uint64_t v52 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_74:
  if ((v53 & 1) == 0) {
    goto LABEL_76;
  }
LABEL_75:
  *(unsigned char *)(a1 + v52[344]) |= 1u;
LABEL_76:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[344]) |= 4u;
    *(unsigned char *)(a1 + v52[344]) |= 2u;
    *(unsigned char *)(a1 + v52[344]) |= 8u;
  }
  else if (v19)
  {
    while (1)
    {
      int v47 = *v19++;
      char v48 = 4;
      switch(v47)
      {
        case 0:
          goto LABEL_83;
        case 1:
          goto LABEL_82;
        case 2:
          char v48 = 2;
          goto LABEL_82;
        case 3:
          char v48 = 8;
LABEL_82:
          *(unsigned char *)(a1 + v52[344]) |= v48;
          break;
        default:
          continue;
      }
    }
  }
LABEL_83:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    char v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1894CBC9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894CC324(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894CC418(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDLocationDirectedSearchResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 32) readAll:1];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v7;
    while (1)
    {
      if (*(void *)v7 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  -[GEOPDPaginationInfo readAll:](*(void *)(a1 + 40), 1);
}

unint64_t GEOPDLocationDirectedSearchResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDLocationDirectedSearchResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDLocationDirectedSearchResultReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDLocationDirectedSearchResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDLocationDirectedSearchResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDLocationDirectedSearchResultCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1894CC798(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894CC9E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDLocationDirectedSearchResultIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(unsigned char *)(a1 + 60) & 0x16) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 40);

  return GEOPDPaginationInfoIsDirty(v3);
}

void sub_1894CCCD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMapsHomeParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    long long v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 3)
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v25 = *v6;
            uint64_t v26 = *(void *)&v5[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&v5[*v7]) {
              break;
            }
            char v28 = *(unsigned char *)(*(void *)&v5[*v9] + v26);
            *(void *)&v5[v25] = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if ((v28 & 0x80) == 0) {
              goto LABEL_36;
            }
            v22 += 7;
            BOOL v17 = v23++ >= 9;
            if (v17)
            {
              uint64_t v24 = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            uint64_t v24 = 0;
          }
LABEL_38:
          *(unsigned char *)(a1 + 24) = v24 != 0;
        }
        else if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          uint64_t v20 = objc_alloc_init(GEOPDCollectionSuggestionParameters);
          if (!GEOPDCollectionSuggestionParametersReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          uint64_t v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v29 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v30 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v29;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_1894CD528(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894CE0FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894CE528(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894CE634(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894CE954(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894CEB44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMapsIdentifierPlaceLookupParametersReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 4)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 32) |= 2u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0) {
              goto LABEL_48;
            }
            v26 += 7;
            BOOL v15 = v27++ >= 9;
            if (v15)
            {
              uint64_t v28 = 0;
              goto LABEL_50;
            }
          }
          v3[*v6] = 1;
LABEL_48:
          if (v3[*v6]) {
            uint64_t v28 = 0;
          }
LABEL_50:
          *(unsigned char *)(a1 + 28) = v28 != 0;
        }
        else if (v18 == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_54;
          }
          unint64_t v33 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v33, v3))
          {

            goto LABEL_54;
          }
          PBReaderRecallMark();
          -[GEOPDMapsIdentifierPlaceLookupParameters addMapsId:](a1, v33);
        }
        else if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_44;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6]) {
            LODWORD(v21) = 0;
          }
LABEL_46:
          *(_DWORD *)(a1 + 24) = v21;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v34 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v35 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v34;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_54;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_54:
    BOOL v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_1894CF664(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMapsIdentifierPlaceLookupResultReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unsigned int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1894D00E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D0390(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMapsSearchHomeParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (*(_WORD *)(a1 + 108) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 108)), (uint16x4_t)0xFFFBFFFEFFFFFFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 108) >> 4) & 1)+ ((*(_WORD *)(a1 + 108) >> 3) & 1)+ ((*(_WORD *)(a1 + 108) >> 7) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 4;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        char v18 = v16 | v11;
        if (((v16 | v11) | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        int v77 = 1;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        char v22 = v17;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_127;
        }
        char v75 = v17;
        char v76 = v18 | v17;
        char v79 = (v19 == 0) | v18;
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        char v78 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_125;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_125:
      int v77 = 1;
      goto LABEL_126;
    }
    BOOL v35 = v21;
    unint64_t v36 = v26 >> 3;
    BOOL v37 = v18;
    if ((v79 & 1) == 0)
    {
      BOOL v38 = v19;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        BOOL v21 = v35;
        if (!v37 || (*(_WORD *)(a1 + 108) & 2) != 0) {
          goto LABEL_93;
        }
        long long v6 = (int *)MEMORY[0x1E4F940E0];
        if (v33 == 2)
        {
          int v42 = PBReaderPlaceMark();
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v42) {
            goto LABEL_147;
          }
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
          {
            char v43 = 0;
            unsigned int v44 = 0;
            uint64_t v45 = 0;
            while (1)
            {
              uint64_t v46 = *v20;
              uint64_t v47 = *(void *)(v3 + v46);
              unint64_t v48 = v47 + 1;
              if (v47 == -1 || v48 > *(void *)(v3 + *v6)) {
                break;
              }
              char v49 = *(unsigned char *)(*(void *)(v3 + *v23) + v47);
              *(void *)(v3 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                BOOL v31 = v44++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_53;
            }
            *(unsigned char *)(v3 + *v21) = 1;
LABEL_53:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v64 = 0;
          unsigned int v65 = 0;
          uint64_t v66 = 0;
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v67 = *v20;
            uint64_t v68 = *(void *)(v3 + v67);
            unint64_t v69 = v68 + 1;
            if (v68 == -1 || v69 > *(void *)(v3 + *v6)) {
              break;
            }
            char v70 = *(unsigned char *)(*(void *)(v3 + *v23) + v68);
            *(void *)(v3 + v67) = v69;
            v66 |= (unint64_t)(v70 & 0x7F) << v64;
            if (v70 < 0)
            {
              v64 += 7;
              BOOL v31 = v65++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_123;
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_123:
          PBRepeatedInt32Add();
        }
        char v18 = v78;
        goto LABEL_111;
      case 2:
        BOOL v21 = v35;
        if (!v37) {
          goto LABEL_93;
        }
        long long v6 = (int *)MEMORY[0x1E4F940E0];
        if ((*(_WORD *)(a1 + 108) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_147;
          }
          __int16 v58 = *(_WORD *)(a1 + 108) << 9;
          goto LABEL_108;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_147;
        }
        char v53 = objc_alloc_init(GEOPDSearchBrowseCategorySuggestionParameters);
        if (!GEOPDSearchBrowseCategorySuggestionParametersReadAllFrom((uint64_t)v53, (void *)v3, v10 & 1)) {
          goto LABEL_146;
        }
        PBReaderRecallMark();
        char v54 = *(void **)(a1 + 80);
        *(void *)(a1 + 80) = v53;

        --v7;
        goto LABEL_109;
      case 3:
        BOOL v21 = v35;
        if (!v37) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 108) & 4) != 0)
        {
          char v59 = PBReaderSkipValueWithTag();
          long long v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v59 & 1) == 0) {
            goto LABEL_147;
          }
          __int16 v58 = *(_WORD *)(a1 + 108) << 13;
          goto LABEL_108;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_147;
        }
        char v53 = objc_alloc_init(GEOPDCollectionSuggestionParameters);
        if (!GEOPDCollectionSuggestionParametersReadAllFrom((uint64_t)v53, (void *)v3, v10 & 1)) {
          goto LABEL_146;
        }
        PBReaderRecallMark();
        uint64_t v55 = 48;
        goto LABEL_90;
      case 4:
        BOOL v21 = v35;
        if (!v37) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 108) & 0x20) != 0)
        {
          char v60 = PBReaderSkipValueWithTag();
          long long v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v60 & 1) == 0) {
            goto LABEL_147;
          }
          __int16 v58 = *(_WORD *)(a1 + 108) << 10;
          goto LABEL_108;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_147;
        }
        char v53 = objc_alloc_init(GEOPDPublisherSuggestionParameters);
        if (!GEOPDPublisherSuggestionParametersReadAllFrom((uint64_t)v53, (void *)v3)) {
          goto LABEL_146;
        }
        PBReaderRecallMark();
        uint64_t v55 = 72;
        goto LABEL_90;
      case 5:
        BOOL v21 = v35;
        if (!v37) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 108) & 0x10) != 0)
        {
          char v61 = PBReaderSkipValueWithTag();
          long long v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v61 & 1) == 0) {
            goto LABEL_147;
          }
          __int16 v58 = *(_WORD *)(a1 + 108) << 11;
          goto LABEL_108;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_147;
        }
        char v53 = objc_alloc_init(GEOPDPlaceSuggestionParameters);
        if (!GEOPDPlaceSuggestionParametersReadAllFrom((uint64_t)v53, (void *)v3, v10 & 1)) {
          goto LABEL_146;
        }
        PBReaderRecallMark();
        uint64_t v55 = 64;
        goto LABEL_90;
      case 6:
        BOOL v21 = v35;
        if (!v37) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 108) & 8) != 0)
        {
          char v62 = PBReaderSkipValueWithTag();
          long long v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v62 & 1) == 0) {
            goto LABEL_147;
          }
          __int16 v58 = *(_WORD *)(a1 + 108) << 12;
          goto LABEL_108;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_147;
        }
        char v53 = objc_alloc_init(GEOPDGuidesLocationsSuggestionParameters);
        if (!GEOPDGuidesLocationsSuggestionParametersReadAllFrom((uint64_t)v53, (void *)v3)) {
          goto LABEL_146;
        }
        PBReaderRecallMark();
        uint64_t v55 = 56;
        goto LABEL_90;
      case 7:
        BOOL v21 = v35;
        if (!v37)
        {
LABEL_93:
          char v57 = PBReaderSkipValueWithTag();
          char v18 = v78;
LABEL_94:
          long long v6 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          if ((v57 & 1) == 0)
          {
            int v77 = 0;
            goto LABEL_126;
          }
LABEL_111:
          if (!(v76 & 1 | (v7 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_125;
          }
          continue;
        }
        if ((*(_WORD *)(a1 + 108) & 0x80) != 0)
        {
          char v63 = PBReaderSkipValueWithTag();
          long long v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v63 & 1) == 0) {
            goto LABEL_147;
          }
          __int16 v58 = *(_WORD *)(a1 + 108) << 8;
LABEL_108:
          v7 += v58 >> 15;
LABEL_109:
          char v18 = v78;
LABEL_110:
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_147;
        }
        char v53 = objc_alloc_init(GEOPDSearchOriginationInfo);
        if (GEOPDSearchOriginationInfoReadAllFrom((uint64_t)v53, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v55 = 88;
LABEL_90:
          BOOL v56 = *(void **)(a1 + v55);
          *(void *)(a1 + v55) = v53;

          --v7;
          char v18 = v78;
          long long v6 = (int *)MEMORY[0x1E4F940E0];
          goto LABEL_110;
        }
LABEL_146:

LABEL_147:
        int v77 = 0;
        char v18 = v78;
LABEL_126:
        char v22 = v75;
LABEL_127:
        if (v22) {
LABEL_128:
        }
          *(_WORD *)(a1 + 108) |= 1u;
        if (v18 & 1 | ((v77 & 1) == 0))
        {
          *(_WORD *)(a1 + 108) |= 2u;
          *(_WORD *)(a1 + 108) |= 0x40u;
          *(_WORD *)(a1 + 108) |= 4u;
          *(_WORD *)(a1 + 108) |= 0x20u;
          *(_WORD *)(a1 + 108) |= 0x10u;
          *(_WORD *)(a1 + 108) |= 8u;
          *(_WORD *)(a1 + 108) |= 0x80u;
        }
        else if (v19)
        {
          while (1)
          {
            int v71 = *v19++;
            __int16 v72 = 2;
            switch(v71)
            {
              case 0:
                goto LABEL_140;
              case 1:
                goto LABEL_139;
              case 2:
                __int16 v72 = 64;
                goto LABEL_139;
              case 3:
                __int16 v72 = 4;
                goto LABEL_139;
              case 4:
                __int16 v72 = 32;
                goto LABEL_139;
              case 5:
                __int16 v72 = 16;
                goto LABEL_139;
              case 6:
                __int16 v72 = 8;
                goto LABEL_139;
              case 7:
                __int16 v72 = 128;
LABEL_139:
                *(_WORD *)(a1 + 108) |= v72;
                break;
              default:
                continue;
            }
          }
        }
LABEL_140:
        if (v77)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_144:
          int v73 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_144;
          }
        }
        return v3;
      default:
        if (v75 & 1) == 0 || (*(_WORD *)(a1 + 108))
        {
          char v57 = PBReaderSkipValueWithTag();
          char v18 = v78;
          BOOL v21 = v35;
          goto LABEL_94;
        }
        if (!*(void *)(a1 + 16))
        {
          id v50 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          int v51 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v50;
        }
        int v52 = PBUnknownFieldAdd();
        char v18 = v78;
        BOOL v21 = v35;
        long long v6 = (int *)MEMORY[0x1E4F940E0];
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        if (!v52)
        {
          int v77 = 0;
          goto LABEL_128;
        }
        goto LABEL_111;
    }
  }
}

void sub_1894D0FF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D112C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D1264(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D139C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D14D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D1608(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDMapsSearchHomeParametersCallReadAllRecursiveWithoutSynchronized(uint64_t *a1)
{
  -[GEOPDSearchBrowseCategorySuggestionParameters readAll:](a1[10], 1);
  -[GEOPDCollectionSuggestionParameters readAll:](a1[6], 1);
  -[GEOPDPlaceSuggestionParameters readAll:](a1[8], 1);
  uint64_t v2 = a1[11];

  -[GEOPDSearchOriginationInfo readAll:](v2, 1);
}

unint64_t GEOPDMapsSearchHomeParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDMapsSearchHomeParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDMapsSearchHomeParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDMapsSearchHomeParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDMapsSearchHomeParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDMapsSearchHomeParametersCallReadAllRecursiveWithoutSynchronized((uint64_t *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_1894D1EC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchBrowseCategorySuggestionParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOPDViewportInfoIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_120;
        case 2u:
          if (v16 != 1) {
            goto LABEL_120;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_95;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_95;
          }
          *(void *)&a1[v18] = v20;
          goto LABEL_106;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_120;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_106;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_120;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_106;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_120;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_106;
          }
        case 6u:
          if (v16 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_120:
              PBReaderRecallMark();
              return 0;
            }
LABEL_109:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v62 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v63 = *v2;
                uint64_t v64 = *(void *)&a1[v63];
                unint64_t v65 = v64 + 1;
                if (v64 == -1 || v65 > *(void *)&a1[*v3]) {
                  break;
                }
                int v66 = *(char *)(*(void *)&a1[*v5] + v64);
                *(void *)&a1[v63] = v65;
                if (v66 < 0)
                {
                  BOOL v13 = v62++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_109;
              }
              a1[*v4] = 1;
            }
LABEL_103:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_120;
            }
            while (1)
            {
              uint64_t v37 = *v2;
              uint64_t v38 = *(void *)&a1[v37];
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)&a1[*v3]) {
                break;
              }
              int v40 = *(char *)(*(void *)&a1[*v5] + v38);
              *(void *)&a1[v37] = v39;
              if (v40 < 0)
              {
                unsigned int v41 = v16++;
                if (v41 <= 8) {
                  continue;
                }
              }
              goto LABEL_106;
            }
LABEL_94:
            uint64_t v14 = *v4;
LABEL_95:
            a1[v14] = 1;
          }
LABEL_106:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_118;
          }
          break;
        case 7u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDVenueIdentifierIsValid(a1)) {
            goto LABEL_120;
          }
          goto LABEL_103;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_120;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v26 = v42++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_106;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_120;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            uint64_t v49 = *(void *)&a1[v48];
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v26 = v47++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_106;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_120;
          }
          unsigned int v52 = 0;
          while (1)
          {
            uint64_t v53 = *v2;
            uint64_t v54 = *(void *)&a1[v53];
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v56 = *(char *)(*(void *)&a1[*v5] + v54);
            *(void *)&a1[v53] = v55;
            if (v56 < 0)
            {
              BOOL v26 = v52++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_106;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_120;
          }
          unsigned int v57 = 0;
          while (1)
          {
            uint64_t v58 = *v2;
            uint64_t v59 = *(void *)&a1[v58];
            unint64_t v60 = v59 + 1;
            if (v59 == -1 || v60 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v61 = *(char *)(*(void *)&a1[*v5] + v59);
            *(void *)&a1[v58] = v60;
            if (v61 < 0)
            {
              BOOL v26 = v57++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_106;
          }
        case 0xCu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDSSearchEvChargingParametersIsValid(a1)) {
            goto LABEL_120;
          }
          goto LABEL_103;
        case 0xDu:
          if (v16 == 2 && PBReaderPlaceMark() && GEOPDSearchOriginationInfoIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_120;
        case 0xEu:
          if (v16 == 2) {
            goto LABEL_105;
          }
          goto LABEL_120;
        default:
LABEL_105:
          if (PBReaderSkipValueWithTag()) {
            goto LABEL_106;
          }
          goto LABEL_120;
      }
    }
  }
LABEL_118:
  BOOL v67 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v67;
}

void sub_1894D272C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDMapsSearchHomeParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  __int16 v2 = *(_WORD *)(a1 + 108);
  if ((v2 & 0x102) != 0) {
    return 1;
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEOPDSearchBrowseCategorySuggestionParametersIsDirty(*(os_unfair_lock_s **)(a1 + 80))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 4) != 0)
  {
    if (GEOPDCollectionSuggestionParametersIsDirty(*(void *)(a1 + 48))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((v2 & 0x10) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 64);
    if (v4)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v4 + 56));
      int v5 = *(unsigned char *)(v4 + 60) & 0x1E;
      os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 56));
      if (v5) {
        return 1;
      }
    }
    __int16 v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 0x80) == 0) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 88);

  return GEOPDSearchOriginationInfoIsDirty(v6);
}

os_unfair_lock_s *GEOPDMapsSearchHomeParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOPDMapsSearchHomeParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1894D2D8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMapsSearchHomeResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  int v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v20 = objc_alloc_init(GEOPDMapsSearchHomeSection);
          if (!GEOPDMapsSearchHomeSectionReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDMapsSearchHomeResult addMapsSearchHomeSection:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1894D3C8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D450C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMapsSearchHomeSectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFFAFFFEFFFCFFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 5) & 1)+ ((*(_WORD *)(a1 + 88) >> 3) & 1)+ ((*(_WORD *)(a1 + 88) >> 1) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v61 = v17;
        char v62 = v18 | v17;
        if ((v18 | v8)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        id v21 = (int *)MEMORY[0x1E4F940C8];
        char v63 = (v19 == 0) | v18;
        BOOL v64 = v18;
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_104;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_104:
      int v59 = 1;
      goto LABEL_105;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v64;
    if ((v63 & 1) == 0)
    {
      unint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_83;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_86;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_88;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_86:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_88:
        *(_DWORD *)(a1 + 84) = v41;
        goto LABEL_103;
      case 2:
        if (!v34) {
          goto LABEL_83;
        }
        if ((*(_WORD *)(a1 + 88) & 0x10) == 0)
        {
          uint64_t v49 = PBReaderReadString();
          unint64_t v50 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v49;
          goto LABEL_82;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_125;
        }
        __int16 v54 = *(_WORD *)(a1 + 88) << 11;
        goto LABEL_101;
      case 3:
        if (!v34) {
          goto LABEL_83;
        }
        if ((*(_WORD *)(a1 + 88) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_125;
          }
          __int16 v54 = *(_WORD *)(a1 + 88) << 8;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_125;
        }
        int v51 = objc_alloc_init(GEOPDSearchBrowseCategorySuggestionResult);
        if (!GEOPDSearchBrowseCategorySuggestionResultReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1)) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        uint64_t v52 = 64;
        goto LABEL_81;
      case 4:
        if (!v34) {
          goto LABEL_83;
        }
        if ((*(_WORD *)(a1 + 88) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_125;
          }
          __int16 v54 = *(_WORD *)(a1 + 88) << 13;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_125;
        }
        int v51 = objc_alloc_init(GEOPDCollectionSuggestionResult);
        if (!GEOPDCollectionSuggestionResultReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1)) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        uint64_t v52 = 24;
        goto LABEL_81;
      case 5:
        if (!v34) {
          goto LABEL_83;
        }
        if ((*(_WORD *)(a1 + 88) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_125;
          }
          __int16 v54 = *(_WORD *)(a1 + 88) << 9;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_125;
        }
        int v51 = objc_alloc_init(GEOPDPublisherSuggestionResult);
        if (!GEOPDPublisherSuggestionResultReadAllFrom((uint64_t)v51, (void *)v3)) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        uint64_t v52 = 56;
        goto LABEL_81;
      case 6:
        if (!v34) {
          goto LABEL_83;
        }
        if ((*(_WORD *)(a1 + 88) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_125;
          }
          __int16 v54 = *(_WORD *)(a1 + 88) << 10;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_125;
        }
        int v51 = objc_alloc_init(GEOPDPlaceSuggestionResult);
        if (!GEOPDPlaceSuggestionResultReadAllFrom((uint64_t)v51, (void *)v3)) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        uint64_t v52 = 48;
        goto LABEL_81;
      case 7:
        if (!v34) {
          goto LABEL_83;
        }
        if ((*(_WORD *)(a1 + 88) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_125;
          }
          __int16 v54 = *(_WORD *)(a1 + 88) << 12;
LABEL_101:
          v7 += v54 >> 15;
LABEL_102:
          id v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_103;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_125;
        }
        int v51 = objc_alloc_init(GEOPDGuidesLocationsSuggestionResult);
        if (GEOPDGuidesLocationsSuggestionResultReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v52 = 32;
LABEL_81:
          unint64_t v50 = *(void **)(a1 + v52);
          *(void *)(a1 + v52) = v51;
LABEL_82:

          --v7;
          goto LABEL_102;
        }
LABEL_124:

LABEL_125:
        int v59 = 0;
        unint64_t v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        id v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_106:
        if (v61) {
LABEL_107:
        }
          *(_WORD *)(a1 + v60[371]) |= 2u;
        if (v64 || (v59 & 1) == 0)
        {
          *(_WORD *)(a1 + v60[371]) |= 0x10u;
          *(_WORD *)(a1 + v60[371]) |= 0x80u;
          *(_WORD *)(a1 + v60[371]) |= 4u;
          *(_WORD *)(a1 + v60[371]) |= 0x40u;
          *(_WORD *)(a1 + v60[371]) |= 0x20u;
          *(_WORD *)(a1 + v60[371]) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            int v55 = *v19++;
            __int16 v56 = 16;
            switch(v55)
            {
              case 0:
                goto LABEL_118;
              case 2:
                goto LABEL_117;
              case 3:
                __int16 v56 = 128;
                goto LABEL_117;
              case 4:
                __int16 v56 = 4;
                goto LABEL_117;
              case 5:
                __int16 v56 = 64;
                goto LABEL_117;
              case 6:
                __int16 v56 = 32;
                goto LABEL_117;
              case 7:
                __int16 v56 = 8;
LABEL_117:
                *(_WORD *)(a1 + v60[371]) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_118:
        if (v59) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v64)
        {
          unsigned int v57 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v61 & 1) == 0 || (*(_WORD *)(a1 + 88) & 2) != 0)
        {
LABEL_83:
          char v53 = PBReaderSkipValueWithTag();
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          id v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v59 = 0;
LABEL_105:
            unint64_t v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_106;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          id v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v48)
          {
            int v59 = 0;
            unint64_t v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_107;
          }
        }
LABEL_103:
        if (!(v62 & 1 | (v7 != 0))) {
          goto LABEL_104;
        }
        continue;
    }
  }
}

void sub_1894D4F78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D5088(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D5198(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D5294(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D535C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMapsSearchHomeSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDMapsSearchHomeSectionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDMapsSearchHomeSectionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDMapsSearchHomeSectionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDMapsSearchHomeSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    -[GEOPDCollectionSuggestionResult readAll:](*(void *)(a1 + 24), 1);
    -[GEOPDGuidesLocationsSuggestionResult readAll:](*(void *)(a1 + 32), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1894D5AB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchBrowseCategorySuggestionResultIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDBrowseCategoryIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1894D631C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D64E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D68A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D6C30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D70A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D7F3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMerchantBrandLookupResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 132))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDMerchantBrandLookupResponseReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 136));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 128) = [v8 position];
  *(_DWORD *)(a1 + 132) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDMerchantBrandLookupResponseReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDMerchantBrandLookupResponseReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDMerchantBrandLookupResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 136));
  return Specified;
}

void sub_1894D80CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMerchantBrandLookupResponseIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_104;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_101;
          }
        case 2u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_104;
        case 3u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_104;
        case 4u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_104;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              uint64_t v24 = *(void *)&a1[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                goto LABEL_69;
              }
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                unsigned int v27 = v15++;
                if (v27 <= 8) {
                  continue;
                }
              }
              goto LABEL_101;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_104;
          }
LABEL_71:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v48 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v49 = *v2;
              uint64_t v50 = *(void *)&a1[v49];
              unint64_t v51 = v50 + 1;
              if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
                break;
              }
              int v52 = *(char *)(*(void *)&a1[*v5] + v50);
              *(void *)&a1[v49] = v51;
              if (v52 < 0)
              {
                BOOL v13 = v48++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_71;
            }
            a1[*v4] = 1;
          }
          goto LABEL_100;
        case 5u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_104;
            }
            while (1)
            {
              uint64_t v28 = *v2;
              uint64_t v29 = *(void *)&a1[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
                goto LABEL_69;
              }
              int v31 = *(char *)(*(void *)&a1[*v5] + v29);
              *(void *)&a1[v28] = v30;
              if (v31 < 0)
              {
                unsigned int v32 = v15++;
                if (v32 <= 8) {
                  continue;
                }
              }
              goto LABEL_101;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_104;
          }
LABEL_81:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v53 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v54 = *v2;
              uint64_t v55 = *(void *)&a1[v54];
              unint64_t v56 = v55 + 1;
              if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
                break;
              }
              int v57 = *(char *)(*(void *)&a1[*v5] + v55);
              *(void *)&a1[v54] = v56;
              if (v57 < 0)
              {
                BOOL v13 = v53++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_81;
            }
            a1[*v4] = 1;
          }
          goto LABEL_100;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_104;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_101;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_104;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_101;
          }
        case 8u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_104:
              PBReaderRecallMark();
              return 0;
            }
LABEL_91:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v58 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v59 = *v2;
                uint64_t v60 = *(void *)&a1[v59];
                unint64_t v61 = v60 + 1;
                if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
                  break;
                }
                int v62 = *(char *)(*(void *)&a1[*v5] + v60);
                *(void *)&a1[v59] = v61;
                if (v62 < 0)
                {
                  BOOL v13 = v58++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_91;
              }
              a1[*v4] = 1;
            }
LABEL_100:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_104;
            }
            while (1)
            {
              uint64_t v43 = *v2;
              uint64_t v44 = *(void *)&a1[v43];
              unint64_t v45 = v44 + 1;
              if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
                break;
              }
              int v46 = *(char *)(*(void *)&a1[*v5] + v44);
              *(void *)&a1[v43] = v45;
              if (v46 < 0)
              {
                unsigned int v47 = v15++;
                if (v47 <= 8) {
                  continue;
                }
              }
              goto LABEL_101;
            }
LABEL_69:
            a1[*v4] = 1;
          }
LABEL_101:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_102;
          }
          break;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_104;
          }
          goto LABEL_101;
      }
    }
  }
LABEL_102:
  BOOL v63 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v63;
}

void sub_1894D89D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D8F5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D9524(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894D97C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMerchantInformationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 144));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 140);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 136)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = *(_DWORD *)(a1 + 152);
  uint32x4_t v12 = (uint32x4_t)vdupq_n_s32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A62F630), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A62F640), v13)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A62F650), v13)))+ ((v11 >> 2) & 1)+ ((v11 >> 4) & 1)+ ((v11 >> 1) & 1);
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v17 = v14 > 0xA;
        char v58 = v17 & ~(_BYTE)v10 | v9;
        char v59 = v17 | v10 | v58;
        if (((v17 | v10) | v8)) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = a3;
        }
        uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        char v60 = (v18 == 0) | v17 | v10;
        char v61 = v17 | v10;
        unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        int v21 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v14;
LABEL_7:
        uint64_t v15 = v9;
LABEL_8:
        uint64_t v16 = v10;
LABEL_9:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v20)) {
      goto LABEL_132;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v19;
      uint64_t v26 = *(void *)(v3 + v25);
      unint64_t v27 = v26 + 1;
      if (v26 == -1 || v27 > *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v21) + v26);
      *(void *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0) {
        goto LABEL_24;
      }
      v22 += 7;
      BOOL v29 = v23++ >= 9;
      if (v29)
      {
        unint64_t v24 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_24:
    int v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v24 = 0;
    }
LABEL_26:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_132:
      int v57 = 1;
      goto LABEL_133;
    }
    unint64_t v32 = v24 >> 3;
    BOOL v33 = v61;
    if ((v60 & 1) == 0)
    {
      uint64_t v34 = v18;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33) {
          goto LABEL_95;
        }
        if ((*(unsigned char *)(a1 + 153) & 2) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 80;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        int v52 = (int)(*(_DWORD *)(a1 + 152) << 22) >> 31;
        goto LABEL_129;
      case 2:
        if (!v33) {
          goto LABEL_95;
        }
        if ((*(unsigned char *)(a1 + 152) & 0x80) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 64;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        int v52 = (int)(*(_DWORD *)(a1 + 152) << 24) >> 31;
        goto LABEL_129;
      case 3:
        if (!v33) {
          goto LABEL_95;
        }
        if ((*(unsigned char *)(a1 + 153) & 1) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 72;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        int v52 = (int)(*(_DWORD *)(a1 + 152) << 23) >> 31;
        goto LABEL_129;
      case 4:
        if (!v33) {
          goto LABEL_95;
        }
        if ((*(unsigned char *)(a1 + 152) & 0x20) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 48;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        int v52 = (int)(*(_DWORD *)(a1 + 152) << 26) >> 31;
        goto LABEL_129;
      case 5:
        if (!v33) {
          goto LABEL_95;
        }
        if ((*(unsigned char *)(a1 + 153) & 8) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 96;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        int v52 = (int)(*(_DWORD *)(a1 + 152) << 20) >> 31;
        goto LABEL_129;
      case 6:
        if (!v33) {
          goto LABEL_95;
        }
        if ((*(unsigned char *)(a1 + 153) & 0x20) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 112;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        int v52 = (int)(*(_DWORD *)(a1 + 152) << 18) >> 31;
        goto LABEL_129;
      case 7:
        if (!v33) {
          goto LABEL_95;
        }
        if ((*(unsigned char *)(a1 + 153) & 0x10) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 104;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        int v52 = (int)(*(_DWORD *)(a1 + 152) << 19) >> 31;
        goto LABEL_129;
      case 8:
        if (!v33) {
          goto LABEL_95;
        }
        if ((*(unsigned char *)(a1 + 153) & 0x80) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 128;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        int v52 = (int)(*(_DWORD *)(a1 + 152) << 16) >> 31;
        goto LABEL_129;
      case 9:
        if (!v33) {
          goto LABEL_95;
        }
        if ((*(unsigned char *)(a1 + 152) & 8) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 32;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        int v52 = (int)(*(_DWORD *)(a1 + 152) << 28) >> 31;
        goto LABEL_129;
      case 10:
        if (!v33) {
          goto LABEL_95;
        }
        if ((*(unsigned char *)(a1 + 153) & 4) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 88;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        int v52 = (int)(*(_DWORD *)(a1 + 152) << 21) >> 31;
        goto LABEL_129;
      case 11:
        if (!v33) {
          goto LABEL_95;
        }
        if ((*(unsigned char *)(a1 + 152) & 0x40) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 56;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        int v52 = (int)(*(_DWORD *)(a1 + 152) << 25) >> 31;
        goto LABEL_129;
      case 12:
        if (!v33) {
          goto LABEL_95;
        }
        if ((*(unsigned char *)(a1 + 153) & 0x40) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 120;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        int v52 = (int)(*(_DWORD *)(a1 + 152) << 17) >> 31;
        goto LABEL_129;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_95;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(_DWORD *)(a1 + 152) |= 1u;
        while (2)
        {
          uint64_t v46 = *v19;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v21) + v47);
            *(void *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              BOOL v29 = v44++ >= 9;
              if (v29)
              {
                LODWORD(v45) = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v45) = 0;
        }
LABEL_100:
        *(_DWORD *)(a1 + 148) = v45;
        goto LABEL_131;
      case 14:
        if (!v33) {
          goto LABEL_95;
        }
        if ((*(unsigned char *)(a1 + 152) & 4) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 24;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        int v52 = (int)(*(_DWORD *)(a1 + 152) << 29) >> 31;
        goto LABEL_129;
      case 15:
        if (!v33) {
          goto LABEL_95;
        }
        if ((*(unsigned char *)(a1 + 152) & 0x10) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 40;
LABEL_94:
          uint64_t v50 = *(void **)(a1 + v39);
          *(void *)(a1 + v39) = v38;

          --v7;
LABEL_130:
          unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
          int v21 = (int *)MEMORY[0x1E4F940B8];
LABEL_131:
          if (!(v59 & 1 | (v7 != 0))) {
            goto LABEL_132;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          int v52 = (int)(*(_DWORD *)(a1 + 152) << 27) >> 31;
LABEL_129:
          v7 += v52;
          goto LABEL_130;
        }
LABEL_159:
        int v57 = 0;
        unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_133:
        if (v58) {
LABEL_134:
        }
          *(_DWORD *)(a1 + 152) |= 2u;
        if (v61 & 1 | ((v57 & 1) == 0))
        {
          *(_DWORD *)(a1 + 152) |= 0x200u;
          *(_DWORD *)(a1 + 152) |= 0x80u;
          *(_DWORD *)(a1 + 152) |= 0x100u;
          *(_DWORD *)(a1 + 152) |= 0x20u;
          *(_DWORD *)(a1 + 152) |= 0x800u;
          *(_DWORD *)(a1 + 152) |= 0x2000u;
          *(_DWORD *)(a1 + 152) |= 0x1000u;
          *(_DWORD *)(a1 + 152) |= 0x8000u;
          *(_DWORD *)(a1 + 152) |= 8u;
          *(_DWORD *)(a1 + 152) |= 0x400u;
          *(_DWORD *)(a1 + 152) |= 0x40u;
          *(_DWORD *)(a1 + 152) |= 0x4000u;
          *(_DWORD *)(a1 + 152) |= 4u;
          *(_DWORD *)(a1 + 152) |= 0x10u;
        }
        else if (v18)
        {
          while (1)
          {
            int v53 = *v18++;
            int v54 = 512;
            switch(v53)
            {
              case 0:
                goto LABEL_153;
              case 1:
                goto LABEL_152;
              case 2:
                int v54 = 128;
                goto LABEL_152;
              case 3:
                int v54 = 256;
                goto LABEL_152;
              case 4:
                int v54 = 32;
                goto LABEL_152;
              case 5:
                int v54 = 2048;
                goto LABEL_152;
              case 6:
                int v54 = 0x2000;
                goto LABEL_152;
              case 7:
                int v54 = 4096;
                goto LABEL_152;
              case 8:
                int v54 = 0x8000;
                goto LABEL_152;
              case 9:
                int v54 = 8;
                goto LABEL_152;
              case 10:
                int v54 = 1024;
                goto LABEL_152;
              case 11:
                int v54 = 64;
                goto LABEL_152;
              case 12:
                int v54 = 0x4000;
                goto LABEL_152;
              case 14:
                int v54 = 4;
                goto LABEL_152;
              case 15:
                int v54 = 16;
LABEL_152:
                *(_DWORD *)(a1 + 152) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_153:
        if (v57) {
          unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v61)
        {
          uint64_t v55 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v58 & 1) == 0 || (*(unsigned char *)(a1 + 152) & 2) != 0)
        {
LABEL_95:
          char v51 = PBReaderSkipValueWithTag();
          int v21 = (int *)MEMORY[0x1E4F940B8];
          unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
          if ((v51 & 1) == 0)
          {
            int v57 = 0;
            goto LABEL_133;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v41 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v40;
          }
          int v42 = PBUnknownFieldAdd();
          unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
          int v21 = (int *)MEMORY[0x1E4F940B8];
          if (!v42)
          {
            int v57 = 0;
            goto LABEL_134;
          }
        }
        goto LABEL_131;
    }
  }
}

void sub_1894DA528(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894DA6A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894DA814(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894DA98C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894DAB04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894DAC7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894DADF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894DAF60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894DB0D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894DB24C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894DB3C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894DB5A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894DB714(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894DC4FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMerchantInformationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 140))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDMerchantInformationReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 144));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 136) = [v8 position];
  *(_DWORD *)(a1 + 140) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDMerchantInformationReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDMerchantInformationReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDMerchantInformationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 144));
  return Specified;
}

void sub_1894DC68C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMerchantInformationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDMerchantInformationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1894DC6F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894DCA40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMerchantInformationIsDirty(os_unfair_lock_s *a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner(a1 + 36);
  BOOL v2 = (a1[38]._os_unfair_lock_opaque & 0x1FFFC) != 0;
  os_unfair_lock_unlock(a1 + 36);
  return v2;
}

void sub_1894DD004(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894DD6D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMerchantLookupBrandParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v6 = 0;
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (*(_WORD *)(a1 + 92) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFFFFFF9FFFCFFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 92) >> 5) & 1)+ ((*(_WORD *)(a1 + 92) >> 3) & 1)+ ((*(_WORD *)(a1 + 92) >> 2) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v15 = v11 > 4;
        char v16 = v15 & ~(_BYTE)v10 | v8;
        unsigned __int8 v17 = v15 | v10;
        char v54 = v16;
        char v55 = v17 | v16;
        if ((v17 | v7)) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = a3;
        }
        char v56 = (v18 == 0) | v17;
        BOOL v57 = v17;
        uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        int v21 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v8;
LABEL_8:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_10:
        ++v6;
        uint64_t v8 = v12;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    char v22 = (int *)MEMORY[0x1E4F940E0];
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) || *(unsigned char *)(v3 + *v20)) {
      goto LABEL_94;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v19;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v22)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v21) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_94:
      int v53 = 1;
      goto LABEL_95;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      int v35 = v18;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_75;
        }
        if ((*(_WORD *)(a1 + 92) & 0x10) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 48;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_115;
        }
        __int16 v48 = *(_WORD *)(a1 + 92) << 11;
        goto LABEL_91;
      case 2:
        if (!v34) {
          goto LABEL_75;
        }
        if ((*(_WORD *)(a1 + 92) & 0x40) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 64;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_115;
        }
        __int16 v48 = *(_WORD *)(a1 + 92) << 9;
        goto LABEL_91;
      case 3:
        if (!v34) {
          goto LABEL_75;
        }
        if ((*(_WORD *)(a1 + 92) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_115;
          }
          __int16 v48 = *(_WORD *)(a1 + 92) << 8;
          goto LABEL_91;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_115;
        }
        unsigned int v44 = objc_alloc_init(GEOPDWarsawMerchantIdentifier);
        if (!GEOPDWarsawMerchantIdentifierReadAllFrom((uint64_t)v44, (void *)v3, v9 & 1)) {
          goto LABEL_114;
        }
        PBReaderRecallMark();
        uint64_t v45 = 72;
        goto LABEL_73;
      case 4:
        if (!v34) {
          goto LABEL_75;
        }
        if ((*(_WORD *)(a1 + 92) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_115;
          }
          __int16 v48 = *(_WORD *)(a1 + 92) << 14;
          goto LABEL_91;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_115;
        }
        unsigned int v44 = objc_alloc_init(GEOPDAdamAppIdentifier);
        if (!GEOPDAdamAppIdentifierReadAllFrom((uint64_t)v44, (void *)v3)) {
          goto LABEL_114;
        }
        PBReaderRecallMark();
        uint64_t v45 = 24;
        goto LABEL_73;
      case 5:
        if (!v34) {
          goto LABEL_75;
        }
        if ((*(_WORD *)(a1 + 92) & 0x20) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 56;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_115;
        }
        __int16 v48 = *(_WORD *)(a1 + 92) << 10;
        goto LABEL_91;
      case 6:
        if (!v34) {
          goto LABEL_75;
        }
        if ((*(_WORD *)(a1 + 92) & 8) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 40;
LABEL_67:
          uint64_t v46 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
          goto LABEL_74;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_115;
        }
        __int16 v48 = *(_WORD *)(a1 + 92) << 12;
        goto LABEL_91;
      case 7:
        if (!v34) {
          goto LABEL_75;
        }
        if ((*(_WORD *)(a1 + 92) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_115;
          }
          __int16 v48 = *(_WORD *)(a1 + 92) << 13;
LABEL_91:
          v6 += v48 >> 15;
LABEL_92:
          unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_93:
          if (!(v55 & 1 | (v6 != 0))) {
            goto LABEL_94;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_115;
        }
        unsigned int v44 = objc_alloc_init(GEOPDIdentityMerchantInformation);
        if (GEOPDIdentityMerchantInformationReadAllFrom((uint64_t)v44, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v45 = 32;
LABEL_73:
          uint64_t v46 = *(void **)(a1 + v45);
          *(void *)(a1 + v45) = v44;
LABEL_74:

          --v6;
          goto LABEL_92;
        }
LABEL_114:

LABEL_115:
        int v53 = 0;
        unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
        if (v54) {
LABEL_96:
        }
          *(_WORD *)(a1 + 92) |= 1u;
        if (v57 || (v53 & 1) == 0)
        {
          *(_WORD *)(a1 + 92) |= 0x10u;
          *(_WORD *)(a1 + 92) |= 0x40u;
          *(_WORD *)(a1 + 92) |= 0x80u;
          *(_WORD *)(a1 + 92) |= 2u;
          *(_WORD *)(a1 + 92) |= 0x20u;
          *(_WORD *)(a1 + 92) |= 8u;
          *(_WORD *)(a1 + 92) |= 4u;
        }
        else if (v18)
        {
          while (1)
          {
            int v49 = *v18++;
            __int16 v50 = 16;
            switch(v49)
            {
              case 0:
                goto LABEL_108;
              case 1:
                goto LABEL_107;
              case 2:
                __int16 v50 = 64;
                goto LABEL_107;
              case 3:
                __int16 v50 = 128;
                goto LABEL_107;
              case 4:
                __int16 v50 = 2;
                goto LABEL_107;
              case 5:
                __int16 v50 = 32;
                goto LABEL_107;
              case 6:
                __int16 v50 = 8;
                goto LABEL_107;
              case 7:
                __int16 v50 = 4;
LABEL_107:
                *(_WORD *)(a1 + 92) |= v50;
                break;
              default:
                continue;
            }
          }
        }
LABEL_108:
        if (v53) {
          unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v57)
        {
          char v51 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v54 & 1) == 0 || (*(_WORD *)(a1 + 92))
        {
LABEL_75:
          char v47 = PBReaderSkipValueWithTag();
          unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
          if ((v47 & 1) == 0)
          {
            int v53 = 0;
            goto LABEL_95;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v53 = 0;
            goto LABEL_96;
          }
        }
        goto LABEL_93;
    }
  }
}

void sub_1894DE894(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894DE9A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMerchantLookupBrandParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDMerchantLookupBrandParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDMerchantLookupBrandParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDMerchantLookupBrandParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDMerchantLookupBrandParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDWarsawMerchantIdentifier readAll:](*(void *)(a1 + 72), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_1894DEC24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDWarsawMerchantIdentifierIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2) {
          goto LABEL_32;
        }
LABEL_26:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_32;
        }
        goto LABEL_29;
      }
      if (v17 == 1)
      {
        if (v15 != 2) {
          goto LABEL_32;
        }
        goto LABEL_26;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_32:
        BOOL v18 = 0;
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2) {
      goto LABEL_32;
    }
    goto LABEL_26;
  }
LABEL_30:
  BOOL v18 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v18;
}

void sub_1894DF068(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894DF264(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMerchantLookupBrandResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  int v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          uint64_t v27 = objc_alloc_init(GEOPDMerchantBrandLookupResponse);
          if (!GEOPDMerchantBrandLookupResponseReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          -[GEOPDMerchantLookupBrandResult addMerchantBrandLookupResponse:](a1, v27);
        }
        else if ((v12 >> 3) == 1)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v23 = *v6;
            uint64_t v24 = *(void *)&v5[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
            *(void *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_36;
            }
            v20 += 7;
            BOOL v17 = v21++ >= 9;
            if (v17)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            LODWORD(v22) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v28 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v29 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v28;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v30 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v30 = 0;
  }
  objc_sync_exit(v5);

  return v30;
}

void sub_1894DFEB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894E0484(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMerchantLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 156);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 152)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = *(_DWORD *)(a1 + 176);
  uint32x4_t v14 = (uint32x4_t)vdupq_n_s32(v13);
  v15.i64[0] = 0x100000001;
  v15.i64[1] = 0x100000001;
  unsigned int v16 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_18A62F660), v15), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_18A62F670), v15)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_18A62F680), v15)))+ ((v13 >> 10) & 1)+ ((v13 >> 8) & 1);
  while (2)
  {
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    uint64_t v19 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v16;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v18 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v20 = v16 > 9;
        char v21 = v20 & ~(_BYTE)v12 | v10;
        unsigned __int8 v22 = v20 | v12;
        char v108 = v21;
        char v109 = v22 | v21;
        if ((v22 | v9)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = a3;
        }
        uint64_t v24 = (int *)MEMORY[0x1E4F940E8];
        char v110 = (v23 == 0) | v22;
        BOOL v111 = v22;
        unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
        char v26 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v16;
LABEL_7:
        uint64_t v17 = v10;
LABEL_8:
        uint64_t v18 = v11;
        uint64_t v19 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        uint64_t v12 = v19;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v24) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v25)) {
      goto LABEL_218;
    }
    char v27 = 0;
    unsigned int v28 = 0;
    unint64_t v29 = 0;
    while (1)
    {
      uint64_t v30 = *v24;
      uint64_t v31 = *(void *)(v3 + v30);
      unint64_t v32 = v31 + 1;
      if (v31 == -1 || v32 > *(void *)(v3 + *v7)) {
        break;
      }
      char v33 = *(unsigned char *)(*(void *)(v3 + *v26) + v31);
      *(void *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0) {
        goto LABEL_25;
      }
      v27 += 7;
      BOOL v34 = v28++ >= 9;
      if (v34)
      {
        unint64_t v29 = 0;
        int v35 = *(unsigned __int8 *)(v3 + *v25);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v25) = 1;
LABEL_25:
    int v35 = *(unsigned __int8 *)(v3 + *v25);
    if (*(unsigned char *)(v3 + *v25)) {
      unint64_t v29 = 0;
    }
LABEL_27:
    if (v35 || (v29 & 7) == 4)
    {
LABEL_218:
      int v107 = 1;
      goto LABEL_219;
    }
    unint64_t v37 = v29 >> 3;
    BOOL v38 = v111;
    if ((v110 & 1) == 0)
    {
      uint64_t v39 = v23;
      do
      {
        int v41 = *v39++;
        int v40 = v41;
        BOOL v38 = v41 != 0;
        if (v41) {
          BOOL v42 = v40 == v37;
        }
        else {
          BOOL v42 = 1;
        }
      }
      while (!v42);
    }
    switch((int)v37)
    {
      case 1:
        if (!v38) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 177) & 0x80) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 80;
          goto LABEL_126;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_245;
        }
        int v101 = (int)(*(_DWORD *)(a1 + 176) << 16) >> 31;
        goto LABEL_209;
      case 2:
        if (!v38) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 177) & 0x20) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 64;
          goto LABEL_126;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_245;
        }
        int v101 = (int)(*(_DWORD *)(a1 + 176) << 18) >> 31;
        goto LABEL_209;
      case 3:
        if ((v9 & 1) == 0) {
          goto LABEL_155;
        }
        *(_DWORD *)(a1 + 176) |= 4u;
        uint64_t v48 = *v24;
        unint64_t v49 = *(void *)(v3 + v48);
        if (v49 <= 0xFFFFFFFFFFFFFFF7 && v49 + 8 <= *(void *)(v3 + *v7))
        {
          uint64_t v50 = *(void *)(*(void *)(v3 + *v26) + v49);
          *(void *)(v3 + v48) = v49 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v25) = 1;
          uint64_t v50 = 0;
        }
        uint64_t v102 = 136;
        goto LABEL_217;
      case 4:
        if (!v38) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 178) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_245;
          }
          int v101 = (int)(*(_DWORD *)(a1 + 176) << 11) >> 31;
          goto LABEL_209;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_245;
        }
        char v51 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v51, (void *)v3, v11 & 1)) {
          goto LABEL_244;
        }
        PBReaderRecallMark();
        uint64_t v52 = 128;
        goto LABEL_153;
      case 5:
        if ((v9 & 1) == 0) {
          goto LABEL_155;
        }
        *(_DWORD *)(a1 + 176) |= 2u;
        uint64_t v53 = *v24;
        unint64_t v54 = *(void *)(v3 + v53);
        if (v54 <= 0xFFFFFFFFFFFFFFF7 && v54 + 8 <= *(void *)(v3 + *v7))
        {
          uint64_t v50 = *(void *)(*(void *)(v3 + *v26) + v54);
          *(void *)(v3 + v53) = v54 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v25) = 1;
          uint64_t v50 = 0;
        }
        uint64_t v102 = 120;
LABEL_217:
        *(void *)(a1 + v102) = v50;
        goto LABEL_211;
      case 6:
        if (!v38) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 178) & 1) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 88;
          goto LABEL_126;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_245;
        }
        int v101 = (int)(*(_DWORD *)(a1 + 176) << 15) >> 31;
        goto LABEL_209;
      case 7:
        if (!v38) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 177) & 0x10) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 48;
          goto LABEL_126;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_245;
        }
        int v101 = (int)(*(_DWORD *)(a1 + 176) << 19) >> 31;
        goto LABEL_209;
      case 8:
        if ((v9 & 1) == 0) {
          goto LABEL_155;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v57 = 0;
        *(_DWORD *)(a1 + 176) |= 1u;
        while (2)
        {
          uint64_t v58 = *v24;
          uint64_t v59 = *(void *)(v3 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(v3 + *v26) + v59);
            *(void *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              BOOL v34 = v56++ >= 9;
              if (v34)
              {
                uint64_t v57 = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v57 = 0;
        }
LABEL_160:
        *(void *)(a1 + 56) = -(v57 & 1) ^ (v57 >> 1);
        goto LABEL_211;
      case 9:
        if ((v9 & 1) == 0) {
          goto LABEL_155;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0;
        *(_DWORD *)(a1 + 176) |= 0x40u;
        while (2)
        {
          uint64_t v65 = *v24;
          uint64_t v66 = *(void *)(v3 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(v3 + *v26) + v66);
            *(void *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              BOOL v34 = v63++ >= 9;
              if (v34)
              {
                uint64_t v64 = 0;
                goto LABEL_164;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v64 = 0;
        }
LABEL_164:
        BOOL v98 = v64 != 0;
        uint64_t v99 = 173;
        goto LABEL_182;
      case 10:
        if (!v38) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 178) & 2) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 96;
          goto LABEL_126;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_245;
        }
        int v101 = (int)(*(_DWORD *)(a1 + 176) << 14) >> 31;
        goto LABEL_209;
      case 11:
        if (!v38) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 178) & 4) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 104;
          goto LABEL_126;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_245;
        }
        int v101 = (int)(*(_DWORD *)(a1 + 176) << 13) >> 31;
        goto LABEL_209;
      case 12:
        if ((v9 & 1) == 0) {
          goto LABEL_155;
        }
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v71 = 0;
        *(_DWORD *)(a1 + 176) |= 0x10u;
        while (2)
        {
          uint64_t v72 = *v24;
          uint64_t v73 = *(void *)(v3 + v72);
          unint64_t v74 = v73 + 1;
          if (v73 == -1 || v74 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(v3 + *v26) + v73);
            *(void *)(v3 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              BOOL v34 = v70++ >= 9;
              if (v34)
              {
                LODWORD(v71) = 0;
                goto LABEL_168;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v71) = 0;
        }
LABEL_168:
        uint64_t v100 = 168;
        goto LABEL_173;
      case 13:
        if (!v38) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 178) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_245;
          }
          int v101 = (int)(*(_DWORD *)(a1 + 176) << 10) >> 31;
          goto LABEL_209;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_245;
        }
        char v51 = objc_alloc_init(GEOPDWarsawMerchantIdentifier);
        if (!GEOPDWarsawMerchantIdentifierReadAllFrom((uint64_t)v51, (void *)v3, v11 & 1)) {
          goto LABEL_244;
        }
        PBReaderRecallMark();
        uint64_t v52 = 144;
        goto LABEL_153;
      case 14:
        if (!v38) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 177) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_245;
          }
          int v101 = (int)(*(_DWORD *)(a1 + 176) << 22) >> 31;
          goto LABEL_209;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_245;
        }
        char v51 = objc_alloc_init(GEOPDAdamAppIdentifier);
        if (!GEOPDAdamAppIdentifierReadAllFrom((uint64_t)v51, (void *)v3)) {
          goto LABEL_244;
        }
        PBReaderRecallMark();
        uint64_t v52 = 24;
        goto LABEL_153;
      case 15:
        if (!v38) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 177) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_245;
          }
          int v101 = (int)(*(_DWORD *)(a1 + 176) << 17) >> 31;
          goto LABEL_209;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_245;
        }
        char v51 = objc_alloc_init(GEOPDMerchantInformation);
        if (!GEOPDMerchantInformationReadAllFrom((uint64_t)v51, (void *)v3, v11 & 1)) {
          goto LABEL_244;
        }
        PBReaderRecallMark();
        uint64_t v52 = 72;
        goto LABEL_153;
      case 16:
        if ((v9 & 1) == 0) {
          goto LABEL_155;
        }
        char v76 = 0;
        unsigned int v77 = 0;
        uint64_t v71 = 0;
        *(_DWORD *)(a1 + 176) |= 8u;
        while (2)
        {
          uint64_t v78 = *v24;
          uint64_t v79 = *(void *)(v3 + v78);
          unint64_t v80 = v79 + 1;
          if (v79 == -1 || v80 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v81 = *(unsigned char *)(*(void *)(v3 + *v26) + v79);
            *(void *)(v3 + v78) = v80;
            v71 |= (unint64_t)(v81 & 0x7F) << v76;
            if (v81 < 0)
            {
              v76 += 7;
              BOOL v34 = v77++ >= 9;
              if (v34)
              {
                LODWORD(v71) = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v71) = 0;
        }
LABEL_172:
        uint64_t v100 = 164;
LABEL_173:
        *(_DWORD *)(a1 + v100) = v71;
        goto LABEL_211;
      case 17:
        if (!v38) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 178) & 8) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 112;
LABEL_126:
          uint64_t v82 = *(void **)(a1 + v44);
          *(void *)(a1 + v44) = v43;
          goto LABEL_154;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_245;
        }
        int v101 = (int)(*(_DWORD *)(a1 + 176) << 12) >> 31;
        goto LABEL_209;
      case 18:
        if ((v9 & 1) == 0) {
          goto LABEL_155;
        }
        char v83 = 0;
        unsigned int v84 = 0;
        uint64_t v85 = 0;
        *(_DWORD *)(a1 + 176) |= 0x80u;
        while (2)
        {
          uint64_t v86 = *v24;
          uint64_t v87 = *(void *)(v3 + v86);
          unint64_t v88 = v87 + 1;
          if (v87 == -1 || v88 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v89 = *(unsigned char *)(*(void *)(v3 + *v26) + v87);
            *(void *)(v3 + v86) = v88;
            v85 |= (unint64_t)(v89 & 0x7F) << v83;
            if (v89 < 0)
            {
              v83 += 7;
              BOOL v34 = v84++ >= 9;
              if (v34)
              {
                uint64_t v85 = 0;
                goto LABEL_177;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v85 = 0;
        }
LABEL_177:
        BOOL v98 = v85 != 0;
        uint64_t v99 = 174;
        goto LABEL_182;
      case 19:
        if ((v9 & 1) == 0) {
          goto LABEL_155;
        }
        char v90 = 0;
        unsigned int v91 = 0;
        uint64_t v92 = 0;
        *(_DWORD *)(a1 + 176) |= 0x20u;
        while (2)
        {
          uint64_t v93 = *v24;
          uint64_t v94 = *(void *)(v3 + v93);
          unint64_t v95 = v94 + 1;
          if (v94 == -1 || v95 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v96 = *(unsigned char *)(*(void *)(v3 + *v26) + v94);
            *(void *)(v3 + v93) = v95;
            v92 |= (unint64_t)(v96 & 0x7F) << v90;
            if (v96 < 0)
            {
              v90 += 7;
              BOOL v34 = v91++ >= 9;
              if (v34)
              {
                uint64_t v92 = 0;
                goto LABEL_181;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v92 = 0;
        }
LABEL_181:
        BOOL v98 = v92 != 0;
        uint64_t v99 = 172;
LABEL_182:
        *(unsigned char *)(a1 + v99) = v98;
        goto LABEL_211;
      case 20:
        if (!v38) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 177) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_245;
          }
          int v101 = (int)(*(_DWORD *)(a1 + 176) << 20) >> 31;
          goto LABEL_209;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_245;
        }
        char v51 = objc_alloc_init(GEOPDIdentityMerchantInformation);
        if (!GEOPDIdentityMerchantInformationReadAllFrom((uint64_t)v51, (void *)v3)) {
          goto LABEL_244;
        }
        PBReaderRecallMark();
        uint64_t v52 = 40;
        goto LABEL_153;
      case 21:
        if (!v38) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 177) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_245;
          }
          int v101 = (int)(*(_DWORD *)(a1 + 176) << 21) >> 31;
LABEL_209:
          v8 += v101;
LABEL_210:
          unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          char v26 = (int *)MEMORY[0x1E4F940B8];
LABEL_211:
          if (!(v109 & 1 | (v8 != 0))) {
            goto LABEL_218;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_245;
        }
        char v51 = objc_alloc_init(GEOPDBankTransactionInformation);
        if (GEOPDBankTransactionInformationReadAllFrom((uint64_t)v51, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v52 = 32;
LABEL_153:
          uint64_t v82 = *(void **)(a1 + v52);
          *(void *)(a1 + v52) = v51;
LABEL_154:

          --v8;
          goto LABEL_210;
        }
LABEL_244:

LABEL_245:
        int v107 = 0;
        unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
LABEL_219:
        if (v108) {
LABEL_220:
        }
          *(_DWORD *)(a1 + 176) |= 0x100u;
        if (v111 || (v107 & 1) == 0)
        {
          *(_DWORD *)(a1 + 176) |= 0x8000u;
          *(_DWORD *)(a1 + 176) |= 0x2000u;
          *(_DWORD *)(a1 + 176) |= 0x100000u;
          *(_DWORD *)(a1 + 176) |= 0x10000u;
          *(_DWORD *)(a1 + 176) |= 0x1000u;
          *(_DWORD *)(a1 + 176) |= 0x20000u;
          *(_DWORD *)(a1 + 176) |= 0x40000u;
          *(_DWORD *)(a1 + 176) |= 0x200000u;
          *(_DWORD *)(a1 + 176) |= 0x200u;
          *(_DWORD *)(a1 + 176) |= 0x4000u;
          *(_DWORD *)(a1 + 176) |= 0x80000u;
          *(_DWORD *)(a1 + 176) |= 0x800u;
          *(_DWORD *)(a1 + 176) |= 0x400u;
        }
        else if (v23)
        {
          while (1)
          {
            int v103 = *v23++;
            int v104 = 0x8000;
            switch(v103)
            {
              case 0:
                goto LABEL_238;
              case 1:
                goto LABEL_237;
              case 2:
                int v104 = 0x2000;
                goto LABEL_237;
              case 4:
                int v104 = 0x100000;
                goto LABEL_237;
              case 6:
                int v104 = 0x10000;
                goto LABEL_237;
              case 7:
                int v104 = 4096;
                goto LABEL_237;
              case 10:
                int v104 = 0x20000;
                goto LABEL_237;
              case 11:
                int v104 = 0x40000;
                goto LABEL_237;
              case 13:
                int v104 = 0x200000;
                goto LABEL_237;
              case 14:
                int v104 = 512;
                goto LABEL_237;
              case 15:
                int v104 = 0x4000;
                goto LABEL_237;
              case 17:
                int v104 = 0x80000;
                goto LABEL_237;
              case 20:
                int v104 = 2048;
                goto LABEL_237;
              case 21:
                int v104 = 1024;
LABEL_237:
                *(_DWORD *)(a1 + 176) |= v104;
                break;
              default:
                continue;
            }
          }
        }
LABEL_238:
        if (v107) {
          unint64_t v3 = *(unsigned char *)(v3 + *v25) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v111)
        {
          char v105 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v108 & 1) == 0 || (*(unsigned char *)(a1 + 177))
        {
LABEL_155:
          char v97 = PBReaderSkipValueWithTag();
          char v26 = (int *)MEMORY[0x1E4F940B8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
          if ((v97 & 1) == 0)
          {
            int v107 = 0;
            goto LABEL_219;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v45 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v46 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v45;
          }
          int v47 = PBUnknownFieldAdd();
          unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          char v26 = (int *)MEMORY[0x1E4F940B8];
          if (!v47)
          {
            int v107 = 0;
            goto LABEL_220;
          }
        }
        goto LABEL_211;
    }
  }
}

void sub_1894E17B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894E19AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894E1BA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894E1D14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894E1F70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894E20E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894E2488(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894E25F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894E2770(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894E2AC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894E2D38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894E2EB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894E38E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDMerchantLookupParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 128) readAll:1];
  -[GEOPDWarsawMerchantIdentifier readAll:](*(void *)(a1 + 144), 1);
  [*(id *)(a1 + 72) readAll:1];
  BOOL v2 = *(void **)(a1 + 32);

  return [v2 readAll:1];
}

unint64_t GEOPDMerchantLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 156))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDMerchantLookupParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 160));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 152) = [v8 position];
  *(_DWORD *)(a1 + 156) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDMerchantLookupParametersReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDMerchantLookupParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDMerchantLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDMerchantLookupParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 160));
  return Specified;
}

void sub_1894E3AF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMerchantLookupParametersReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDMerchantLookupParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1894E3B58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMerchantLookupParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2) {
            goto LABEL_115;
          }
          goto LABEL_84;
        case 2u:
          if (v16 == 2) {
            goto LABEL_84;
          }
          goto LABEL_115;
        case 3u:
        case 5u:
          if (v16 != 1) {
            goto LABEL_115;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_103;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_103;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1)) {
            goto LABEL_115;
          }
          goto LABEL_111;
        case 6u:
          if (v16 == 2) {
            goto LABEL_84;
          }
          goto LABEL_115;
        case 7u:
          if (v16 == 2) {
            goto LABEL_84;
          }
          goto LABEL_115;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_115;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_102;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_112;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_115;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_102;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_112;
          }
        case 0xAu:
          if (v16 == 2) {
            goto LABEL_84;
          }
          goto LABEL_115;
        case 0xBu:
          if (v16 == 2) {
            goto LABEL_84;
          }
          goto LABEL_115;
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_115;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_102;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_112;
          }
        case 0xDu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDWarsawMerchantIdentifierIsValid(a1)) {
            goto LABEL_115;
          }
          goto LABEL_111;
        case 0xEu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDAdamAppIdentifierIsValid(a1)) {
            goto LABEL_115;
          }
          goto LABEL_111;
        case 0xFu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDMerchantInformationIsValid(a1)) {
            goto LABEL_115;
          }
          goto LABEL_111;
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_115;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_102;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v26 = v37++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_112;
          }
        case 0x11u:
          if (v16 == 2) {
            goto LABEL_84;
          }
          goto LABEL_115;
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_115;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_102;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v26 = v42++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_112;
          }
        case 0x13u:
          if ((v8 & 7) != 0) {
            goto LABEL_115;
          }
          unsigned int v47 = 0;
          break;
        case 0x14u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDAdamAppIdentifierIsValid(a1)) {
            goto LABEL_115;
          }
          goto LABEL_111;
        case 0x15u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDBankTransactionInformationIsValid(a1)) {
            goto LABEL_115;
          }
LABEL_111:
          PBReaderRecallMark();
          continue;
        default:
LABEL_84:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_115:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v48 = *v2;
        uint64_t v49 = *(void *)&a1[v48];
        unint64_t v50 = v49 + 1;
        if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
          break;
        }
        int v51 = *(char *)(*(void *)&a1[*v5] + v49);
        *(void *)&a1[v48] = v50;
        if (v51 < 0)
        {
          BOOL v26 = v47++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_112;
      }
LABEL_102:
      uint64_t v14 = *v4;
LABEL_103:
      a1[v14] = 1;
LABEL_112:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v52 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v52;
}

void sub_1894E4540(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDMerchantLookupParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  int v2 = *(_DWORD *)(a1 + 176);
  if ((v2 & 0x40A000) != 0) {
    return 1;
  }
  if ((v2 & 0x100000) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 128))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 176);
  }
  if ((v2 & 0x71000) != 0) {
    return 1;
  }
  if ((v2 & 0x200000) != 0)
  {
    if (GEOPDWarsawMerchantIdentifierIsDirty(*(void *)(a1 + 144))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 176);
  }
  if ((v2 & 0x200) != 0) {
    return 1;
  }
  if ((v2 & 0x4000) != 0)
  {
    if (GEOPDMerchantInformationIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 176);
  }
  if ((v2 & 0x80800) != 0) {
    return 1;
  }
  if ((v2 & 0x400) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 32);

  return (uint64_t)GEOPDBankTransactionInformationIsDirty(v4);
}

os_unfair_lock_s *GEOPDMerchantLookupParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDMerchantLookupParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 40);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOPDMerchantLookupParametersClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3)
  {
    if ([a1 hasTransactionLocation]
      && ([a1 transactionLocation],
          int v5 = objc_claimAutoreleasedReturnValue(),
          int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
          v5,
          HasSensitiveFields))
    {
      unsigned int v7 = [a1 transactionLocation];
      unint64_t v8 = (_DWORD *)[v7 copy];

      GEOLocationClearSensitiveFields(v8);
      [a1 setTransactionLocation:v8];
    }
    else
    {
      unint64_t v8 = [a1 transactionLocation];
      [v8 clearSensitiveFields:a2];
    }

    if ([a1 hasBankTransactionInformation])
    {
      uint64_t v10 = [a1 bankTransactionInformation];
      int v11 = GEOPDBankTransactionInformationHasSensitiveFields(v10);

      if (v11)
      {
        char v12 = [a1 bankTransactionInformation];
        id v13 = (id)[v12 copy];

        GEOPDBankTransactionInformationClearSensitiveFields((uint64_t)v13, a2, 0);
        [a1 setBankTransactionInformation:v13];
        goto LABEL_11;
      }
    }
  }
  else
  {
    uint64_t v9 = [a1 transactionLocation];
    [v9 clearSensitiveFields:a2];
  }
  id v13 = [a1 bankTransactionInformation];
  [v13 clearSensitiveFields:a2];
LABEL_11:
}

void sub_1894E4FE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894E5BB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMerchantLookupResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  int v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v20 = objc_alloc_init(GEOPDCategoryInformation);
          if (!GEOPDCategoryInformationReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          unsigned int v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v22 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v23 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v22;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_1894E64A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMerchantLookupResultReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDMerchantLookupResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1894E6504(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMerchantLookupResultIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDCategoryInformationIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDMultiLocalizedStringReadAllFrom(uint64_t a1, void *a2, int a3)
{
  int v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v20 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDMultiLocalizedString addLocalizedString:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1894E7380(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDNearbySearchFilterReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_36;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            LODWORD(v21) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v21;
        }
        else if ((v10 >> 3) == 1)
        {
          int v18 = PBReaderReadString();
          if (v18) {
            -[GEOPDNearbySearchFilter addIncludedCategoryFilter:](a1, v18);
          }
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v26 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v27 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v26;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_41;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v28 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    BOOL v28 = 0;
  }
  objc_sync_exit(v3);

  return v28;
}

void sub_1894E7DD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894E8390(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDNearbySearchParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  unsigned int v7 = v6;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  int v13 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 != 0;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v69 = v18;
        char v70 = v19 | v18;
        if ((v19 | v8)) {
          unsigned int v20 = 0;
        }
        else {
          unsigned int v20 = a3;
        }
        char v71 = (v20 == 0) | v19;
        BOOL v72 = v19;
        uint64_t v21 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v9;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_90;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_90:
      int v67 = 1;
      goto LABEL_91;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v72;
    if ((v71 & 1) == 0)
    {
      int v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_72;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (1)
        {
          uint64_t v43 = *v21;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v7)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v23) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_75;
          }
          v40 += 7;
          BOOL v31 = v41++ >= 9;
          if (v31)
          {
            LODWORD(v42) = 0;
            goto LABEL_77;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_75:
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v42) = 0;
        }
LABEL_77:
        uint64_t v60 = 56;
        goto LABEL_82;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_72;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v52 = *v21;
          uint64_t v53 = *(void *)(v3 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(v3 + *v23) + v53);
            *(void *)(v3 + v52) = v54;
            v42 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              BOOL v31 = v51++ >= 9;
              if (v31)
              {
                LODWORD(v42) = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v42) = 0;
        }
LABEL_81:
        uint64_t v60 = 52;
LABEL_82:
        *(_DWORD *)(a1 + v60) = v42;
        goto LABEL_89;
      case 3:
        if (!v35) {
          goto LABEL_72;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_110;
          }
          char v61 = 8 * *(unsigned char *)(a1 + 60);
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_110;
        }
        unsigned int v56 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v56, (void *)v3)) {
          goto LABEL_109;
        }
        PBReaderRecallMark();
        uint64_t v57 = 32;
        goto LABEL_71;
      case 4:
        if (!v35) {
          goto LABEL_72;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_110;
          }
          char v61 = 16 * *(unsigned char *)(a1 + 60);
LABEL_87:
          v9 += v61 >> 7;
LABEL_88:
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_89:
          if (!(v70 & 1 | (v9 != 0))) {
            goto LABEL_90;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_110;
        }
        unsigned int v56 = objc_alloc_init(GEOPDNearbySearchFilter);
        if (GEOPDNearbySearchFilterReadAllFrom((uint64_t)v56, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v57 = 24;
LABEL_71:
          uint64_t v58 = *(void **)(a1 + v57);
          *(void *)(a1 + v57) = v56;

          --v9;
          goto LABEL_88;
        }
LABEL_109:

LABEL_110:
        int v67 = 0;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_91:
        char v68 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
        if (v69) {
LABEL_92:
        }
          *(unsigned char *)(a1 + v68[469]) |= 4u;
        if (v72 || (v67 & 1) == 0)
        {
          *(unsigned char *)(a1 + v68[469]) |= 0x10u;
          *(unsigned char *)(a1 + v68[469]) |= 8u;
          goto LABEL_103;
        }
        if (v20)
        {
          while (2)
          {
            while (1)
            {
              int v63 = *v20++;
              int v62 = v63;
              if (v63 == 3) {
                break;
              }
              if (v62 == 4)
              {
                char v64 = 8;
                goto LABEL_102;
              }
              if (!v62) {
                goto LABEL_103;
              }
            }
            char v64 = 16;
LABEL_102:
            *(unsigned char *)(a1 + v68[469]) |= v64;
            continue;
          }
        }
LABEL_103:
        if (v67) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v72)
        {
          uint64_t v65 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v69 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_72:
          char v59 = PBReaderSkipValueWithTag();
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v59 & 1) == 0)
          {
            int v67 = 0;
            goto LABEL_91;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v48 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v47;
          }
          int v49 = PBUnknownFieldAdd();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v49)
          {
            int v67 = 0;
            char v68 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
            goto LABEL_92;
          }
        }
        goto LABEL_89;
    }
  }
}

void sub_1894E8FBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDNearbySearchParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDNearbySearchParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDNearbySearchParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDNearbySearchParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDNearbySearchParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1894E9248(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894E9434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDNearbySearchParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1894E9674(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDNearbySearchResultReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unsigned int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1894E9D1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDNearestTransitParametersReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          *(unsigned char *)(a1 + 28) |= 2u;
          while (1)
          {
            uint64_t v28 = *v4;
            uint64_t v29 = *(void *)&v3[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&v3[*v5]) {
              break;
            }
            char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
            *(void *)&v3[v28] = v30;
            v27 |= (unint64_t)(v31 & 0x7F) << v25;
            if ((v31 & 0x80) == 0) {
              goto LABEL_44;
            }
            v25 += 7;
            BOOL v15 = v26++ >= 9;
            if (v15)
            {
              uint64_t v27 = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6]) {
            uint64_t v27 = 0;
          }
LABEL_46:
          *(unsigned char *)(a1 + 24) = v27 != 0;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_40;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_42;
            }
          }
          v3[*v6] = 1;
LABEL_40:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_42:
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v32 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v33 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v32;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_49;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v34 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    BOOL v34 = 0;
  }
  objc_sync_exit(v3);

  return v34;
}

void sub_1894EA494(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDOfflineRegionNameParametersReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          char v18 = objc_alloc_init(GEOMapRegion);
          if (!GEOMapRegionReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          unsigned int v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_1894EACD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDOfflineRegionNameResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  int v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          id v20 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          uint64_t v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v22 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v23 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v22;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_1894EB46C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDOfflineSearchCapabilitiesReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_34:
          *(unsigned char *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1894EBBFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPaginationInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v66 = v15 | v8;
        char v67 = v16 | v15 | v8;
        if ((v16 | v9)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        char v68 = (v17 == 0) | v16;
        BOOL v69 = v16;
        char v18 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_83;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_83:
      int v64 = 1;
      goto LABEL_84;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v69;
    if ((v68 & 1) == 0)
    {
      uint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 32;
          goto LABEL_43;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_102;
        }
        char v58 = 8 * *(unsigned char *)(a1 + 60);
        goto LABEL_81;
      case 2:
        if (!v32) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 24;
LABEL_43:
          BOOL v39 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          --v10;
LABEL_82:
          if (!(v67 & 1 | (v10 != 0))) {
            goto LABEL_83;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v58 = 16 * *(unsigned char *)(a1 + 60);
LABEL_81:
          v10 += v58 >> 7;
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_82;
        }
LABEL_102:
        int v64 = 0;
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_84:
        uint64_t v65 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
        if (v66) {
LABEL_85:
        }
          *(unsigned char *)(a1 + v65[485]) |= 4u;
        if (v69 || (v64 & 1) == 0)
        {
          *(unsigned char *)(a1 + v65[485]) |= 0x10u;
          *(unsigned char *)(a1 + v65[485]) |= 8u;
          goto LABEL_96;
        }
        if (v17)
        {
          while (1)
          {
            int v61 = *v17++;
            int v60 = v61;
            if (v61 == 1) {
              break;
            }
            if (v60 == 2)
            {
              char v59 = 8;
LABEL_92:
              *(unsigned char *)(a1 + v65[485]) |= v59;
            }
            else if (!v60)
            {
              goto LABEL_96;
            }
          }
          char v59 = 16;
          goto LABEL_92;
        }
LABEL_96:
        if (v64) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v69)
        {
          int v62 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if ((v9 & 1) == 0) {
          goto LABEL_66;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v46 = *v18;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v20) + v47);
            *(void *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              BOOL v28 = v44++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v45) = 0;
        }
LABEL_71:
        uint64_t v57 = 52;
        goto LABEL_76;
      case 5:
        if ((v9 & 1) == 0) {
          goto LABEL_66;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v45 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v52 = *v18;
          uint64_t v53 = *(void *)(v3 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(v3 + *v20) + v53);
            *(void *)(v3 + v52) = v54;
            v45 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              BOOL v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v45) = 0;
        }
LABEL_75:
        uint64_t v57 = 56;
LABEL_76:
        *(_DWORD *)(a1 + v57) = v45;
        goto LABEL_82;
      default:
        if ((v66 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_66:
          char v56 = PBReaderSkipValueWithTag();
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v56 & 1) == 0)
          {
            int v64 = 0;
            goto LABEL_84;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v41 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v40;
          }
          int v42 = PBUnknownFieldAdd();
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v42)
          {
            int v64 = 0;
            uint64_t v65 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
            goto LABEL_85;
          }
        }
        goto LABEL_82;
    }
  }
}

void sub_1894ECA48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894ECB28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPaginationInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPaginationInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDPaginationInfoReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDPaginationInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPaginationInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1894ECFA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894ED18C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPaginationInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1894ED3C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPaginationParametersReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          uint64_t v25 = PBReaderReadString();
          unint64_t v26 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_34;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_36:
          *(unsigned char *)(a1 + 24) = v20 != 0;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v28 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v27;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_39;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_39:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_1894EDA9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894EDEE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceCollectionLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v52 = v17;
        char v53 = v18 | v17;
        if ((v18 | v7)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v54 = (v19 == 0) | v18;
        BOOL v55 = v18;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_62;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_62:
      int v50 = 1;
      goto LABEL_63;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v55;
    if ((v54 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_56;
      }
      if ((*(unsigned char *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_82;
        }
        v8 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_82;
        }
        BOOL v39 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        id v40 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v39;

        --v8;
      }
      goto LABEL_60;
    }
    if (v52 & 1) == 0 || (*(unsigned char *)(a1 + 52)) {
      goto LABEL_56;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      int v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v43 = PBUnknownFieldAdd();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v43)
    {
      int v50 = 0;
      unsigned int v51 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v53 & 1 | (v8 != 0))) {
      goto LABEL_62;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 52) & 4) != 0)
  {
LABEL_56:
    char v44 = PBReaderSkipValueWithTag();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v44 & 1) == 0)
    {
      int v50 = 0;
      goto LABEL_63;
    }
    goto LABEL_61;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_82;
  }
  BOOL v39 = objc_alloc_init(GEOPDMapsIdentifier);
  if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDPlaceCollectionLookupParameters _addNoFlagsCollectionId:](a1, v39);

LABEL_60:
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_61;
  }
LABEL_81:

LABEL_82:
  int v50 = 0;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_63:
  unsigned int v51 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
  if ((v52 & 1) == 0) {
    goto LABEL_65;
  }
LABEL_64:
  *(unsigned char *)(a1 + v51[499]) |= 1u;
LABEL_65:
  if (v55 || (v50 & 1) == 0)
  {
    *(unsigned char *)(a1 + v51[499]) |= 2u;
    *(unsigned char *)(a1 + v51[499]) |= 4u;
    goto LABEL_75;
  }
  if (v19)
  {
    while (1)
    {
      int v47 = *v19++;
      int v46 = v47;
      if (v47 == 1) {
        break;
      }
      if (v46 == 2)
      {
        char v45 = 4;
LABEL_71:
        *(unsigned char *)(a1 + v51[499]) |= v45;
      }
      else if (!v46)
      {
        goto LABEL_75;
      }
    }
    char v45 = 2;
    goto LABEL_71;
  }
LABEL_75:
  if (v50) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v55)
  {
    unint64_t v48 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1894EE564(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceCollectionLookupParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 24) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPDPlaceCollectionLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPlaceCollectionLookupParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDPlaceCollectionLookupParametersReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDPlaceCollectionLookupParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPlaceCollectionLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDPlaceCollectionLookupParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1894EEDB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894EEFF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceCollectionLookupParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1894EF3F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceCollectionLookupResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v20 = objc_alloc_init(GEOPDComponent);
          if (!GEOPDComponentReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          uint64_t v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v22 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v23 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v22;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_1894EFB48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceGlobalCommonResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v20 = objc_alloc_init(GEOPDPlaceContextMetadata);
          if (!GEOPDPlaceContextMetadataReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDPlaceGlobalCommonResult addPlaceContextMetadata:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1894F041C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894F108C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894F1398(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894F159C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894F1BC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894F1DC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894F1FB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894F22D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894F2450(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894F2594(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894F271C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894F2A08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894F2B94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894F2D98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894F3090(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894F53B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894F550C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894FEF30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceGlobalResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  -[GEOPDSearchResult readAll:](*(void *)(a1 + 368), 1);
  [*(id *)(a1 + 248) readAll:1];
  -[GEOPDSiriSearchResult readAll:](*(void *)(a1 + 392), 1);
  -[GEOPDLocationDirectedSearchResult readAll:](*(void *)(a1 + 216), 1);
  -[GEOPDAutocompleteResult readAll:](*(void *)(a1 + 64), 1);
  -[GEOPDCategorySearchResult readAll:](*(void *)(a1 + 136), 1);
  -[GEOPDPopularNearbySearchResult readAll:](*(void *)(a1 + 320), 1);
  -[GEOPDSearchZeroKeywordCategorySuggestionResult readAll:](*(void *)(a1 + 376), 1);
  -[GEOPDIpGeoLookupResult readAll:](*(void *)(a1 + 208), 1);
  -[GEOPDBatchSpatialLookupResult readAll:](*(void *)(a1 + 104), 1);
  -[GEOPDCollectionSuggestionResult readAll:](*(void *)(a1 + 152), 1);
  -[GEOPDPublisherViewResult readAll:](*(void *)(a1 + 328), 1);
  -[GEOPDAllCollectionsViewResult readAll:](*(void *)(a1 + 48), 1);
  -[GEOPDAllGuidesLocationsViewResult readAll:](*(void *)(a1 + 56), 1);
  -[GEOPDGuidesHomeResult readAll:](*(void *)(a1 + 200), 1);
  uint64_t v2 = *(void *)(a1 + 336);

  -[GEOPDQueryUnderstandingResult readAll:](v2, 1);
}

void GEOPDPlaceGlobalResultClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  if (a1) {
    int v5 = a3;
  }
  else {
    int v5 = 0;
  }
  if (v5 == 1
    && (-[GEOPDPlaceGlobalResult _readAutocompleteResult](a1), *(void *)(a1 + 64))
    && (-[GEOPDPlaceGlobalResult autocompleteResult]((id *)a1),
        uint64_t v6 = (id *)objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOPDAutocompleteResultHasSensitiveFields(v6, a2),
        v6,
        HasSensitiveFields))
  {
    id v8 = -[GEOPDPlaceGlobalResult autocompleteResult]((id *)a1);
    long long v9 = (void *)[v8 copy];

    GEOPDAutocompleteResultClearSensitiveFields((uint64_t)v9, a2, 0);
    -[GEOPDPlaceGlobalResult setAutocompleteResult:](a1, v9);
  }
  else
  {
    uint64_t v10 = -[GEOPDPlaceGlobalResult autocompleteResult]((id *)a1);
    unsigned int v11 = (void *)v10;
    if (v10) {
      GEOPDAutocompleteResultClearSensitiveFields(v10, a2, 1);
    }

    if (!v5) {
      goto LABEL_14;
    }
  }
  -[GEOPDPlaceGlobalResult _readQueryUnderstandingResult](a1);
  if (*(void *)(a1 + 336))
  {
    -[GEOPDPlaceGlobalResult queryUnderstandingResult]((id *)a1);
    unint64_t v12 = (id *)objc_claimAutoreleasedReturnValue();
    int v13 = GEOPDQueryUnderstandingResultHasSensitiveFields(v12, a2);

    if (v13)
    {
      uint64_t v14 = -[GEOPDPlaceGlobalResult queryUnderstandingResult]((id *)a1);
      id v16 = (id)[v14 copy];

      GEOPDQueryUnderstandingResultClearSensitiveFields((uint64_t)v16, a2, 0);
      -[GEOPDPlaceGlobalResult setQueryUnderstandingResult:](a1, v16);
      goto LABEL_16;
    }
  }
LABEL_14:
  uint64_t v15 = -[GEOPDPlaceGlobalResult queryUnderstandingResult]((id *)a1);
  if (v15)
  {
    id v16 = (id)v15;
    GEOPDQueryUnderstandingResultClearSensitiveFields(v15, a2, 1);
  }
  else
  {
    id v16 = 0;
  }
LABEL_16:
}

uint64_t GEOPDPlaceGlobalResultHasSensitiveFields(id *a1, uint64_t a2)
{
  if (!a1) {
    return 0;
  }
  -[GEOPDPlaceGlobalResult autocompleteResult](a1);
  uint64_t v4 = (id *)objc_claimAutoreleasedReturnValue();
  if (GEOPDAutocompleteResultHasSensitiveFields(v4, a2))
  {
    uint64_t HasSensitiveFields = 1;
  }
  else
  {
    -[GEOPDPlaceGlobalResult queryUnderstandingResult](a1);
    uint64_t v6 = (id *)objc_claimAutoreleasedReturnValue();
    uint64_t HasSensitiveFields = GEOPDQueryUnderstandingResultHasSensitiveFields(v6, a2);
  }
  return HasSensitiveFields;
}

uint64_t GEOPDQueryUnderstandingResultHasSensitiveFields(id *a1, uint64_t a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  uint64_t v3 = -[GEOPDQueryUnderstandingResult queryIntents](a1);
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    while (2)
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDSearchQueryIntentHasSensitiveFields(*(id **)(*((void *)&v10 + 1) + 8 * v7), a2))
        {
          uint64_t v8 = 1;
          goto LABEL_12;
        }
        ++v7;
      }
      while (v5 != v7);
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
  uint64_t v8 = 0;
LABEL_12:

  return v8;
}

unint64_t GEOPDQueryUnderstandingResultClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  -[GEOPDQueryUnderstandingResult _readQueryIntents](a1);
  unint64_t result = [*(id *)(a1 + 24) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      uint64_t v8 = [*(id *)(a1 + 24) objectAtIndexedSubscript:i];
      long long v9 = v8;
      if (a3 && GEOPDSearchQueryIntentHasSensitiveFields(v8, a2))
      {
        long long v10 = (void *)[v9 copy];
        GEOPDSearchQueryIntentClearSensitiveFields((uint64_t)v10, a2, 0);
        [*(id *)(a1 + 24) replaceObjectAtIndex:i withObject:v10];
      }
      else if (v9)
      {
        GEOPDSearchQueryIntentClearSensitiveFields((uint64_t)v9, a2, 1);
      }

      unint64_t result = [*(id *)(a1 + 24) count];
    }
  }
  return result;
}

void sub_1895003BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189507B70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  long long v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  int v13 = ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 != 0;
        int v18 = v17 & ~v11 | v7;
        int v19 = v17 | v11;
        if (((v17 | v11) | v8)) {
          uint64_t v20 = 0;
        }
        else {
          uint64_t v20 = a3;
        }
        id v21 = (int *)MEMORY[0x1E4F940E8];
        int v22 = 1;
        BOOL v23 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_111;
        }
        char v78 = v18;
        int v80 = (v9 != 0) | v19 | v18;
        char v81 = (v20 == 0) | v19;
        BOOL v24 = (int *)MEMORY[0x1E4F940B8];
        char v79 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v7;
LABEL_8:
        uint64_t v15 = v10;
        uint64_t v16 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v14;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  do
  {
    if (*(unsigned char *)(v3 + *v23)) {
      break;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v21;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v32 = v26++ >= 9;
      if (v32)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    int v34 = v27 & 7;
    if (v33 || v34 == 4) {
      break;
    }
    unint64_t v36 = v27 >> 3;
    BOOL v37 = v19;
    if ((v81 & 1) == 0)
    {
      BOOL v38 = v20;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    if ((int)v36 > 3)
    {
      if (v36 == 4)
      {
        if (v8)
        {
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v59 = 0;
          *(unsigned char *)(a1 + 76) |= 2u;
          BOOL v23 = (int *)MEMORY[0x1E4F940C8];
          while (1)
          {
            uint64_t v60 = *v21;
            uint64_t v61 = *(void *)(v3 + v60);
            unint64_t v62 = v61 + 1;
            if (v61 == -1 || v62 > *(void *)(v3 + *v6)) {
              break;
            }
            char v63 = *(unsigned char *)(*(void *)(v3 + *v24) + v61);
            *(void *)(v3 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if ((v63 & 0x80) == 0) {
              goto LABEL_92;
            }
            v57 += 7;
            BOOL v32 = v58++ >= 9;
            if (v32)
            {
              uint64_t v59 = 0;
              goto LABEL_94;
            }
          }
          *(unsigned char *)(v3 + *v23) = 1;
LABEL_92:
          if (*(unsigned char *)(v3 + *v23)) {
            uint64_t v59 = 0;
          }
LABEL_94:
          *(unsigned char *)(a1 + 72) = v59 != 0;
LABEL_106:
          if ((v80 & 1) == 0) {
            break;
          }
          continue;
        }
      }
      else
      {
        if (v36 != 200)
        {
LABEL_79:
          if ((v78 & 1) != 0 && (*(unsigned char *)(a1 + 76) & 4) == 0)
          {
            if (!*(void *)(a1 + 16))
            {
              id v64 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              uint64_t v65 = *(void **)(a1 + 16);
              *(void *)(a1 + 16) = v64;
            }
            int v22 = PBUnknownFieldAdd();
            LOBYTE(v19) = v79;
            BOOL v23 = (int *)MEMORY[0x1E4F940C8];
            if (!v22)
            {
              long long v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
              goto LABEL_112;
            }
            goto LABEL_106;
          }
          goto LABEL_85;
        }
        if (v37 && (*(unsigned char *)(a1 + 76) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_130;
          }
          char v49 = objc_alloc_init(GEOPlaceIdentifier);
          if (!GEOPlaceIdentifierReadAllFrom((uint64_t)v49, (void *)v3))
          {

LABEL_130:
            int v22 = 0;
            long long v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            LOBYTE(v19) = v79;
            BOOL v23 = (int *)MEMORY[0x1E4F940C8];
            goto LABEL_110;
          }
          PBReaderRecallMark();
          -[GEOPDPlaceLookupParameters _addNoFlagsIdentifier:](a1, v49);

          LOBYTE(v19) = v79;
          BOOL v23 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_106;
        }
      }
    }
    else if (v36 == 1)
    {
      if (v8)
      {
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v52 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        BOOL v23 = (int *)MEMORY[0x1E4F940C8];
        while (1)
        {
          uint64_t v53 = *v21;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6)) {
            break;
          }
          char v56 = *(unsigned char *)(*(void *)(v3 + *v24) + v54);
          *(void *)(v3 + v53) = v55;
          v52 |= (unint64_t)(v56 & 0x7F) << v50;
          if ((v56 & 0x80) == 0) {
            goto LABEL_88;
          }
          v50 += 7;
          BOOL v32 = v51++ >= 9;
          if (v32)
          {
            LODWORD(v52) = 0;
            goto LABEL_90;
          }
        }
        *(unsigned char *)(v3 + *v23) = 1;
LABEL_88:
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v52) = 0;
        }
LABEL_90:
        *(_DWORD *)(a1 + 68) = v52;
        goto LABEL_106;
      }
    }
    else
    {
      if (v36 != 2) {
        goto LABEL_79;
      }
      if (v37 && (*(unsigned char *)(a1 + 76) & 8) == 0)
      {
        if (v34 == 2)
        {
          int v22 = PBReaderPlaceMark();
          BOOL v23 = (int *)MEMORY[0x1E4F940C8];
          if (!v22)
          {
            long long v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            LOBYTE(v19) = v79;
            goto LABEL_110;
          }
          while (*(void *)(v3 + *v21) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v23))
          {
            char v42 = 0;
            unsigned int v43 = 0;
            uint64_t v44 = 0;
            while (1)
            {
              uint64_t v45 = *v21;
              uint64_t v46 = *(void *)(v3 + v45);
              unint64_t v47 = v46 + 1;
              if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
                break;
              }
              char v48 = *(unsigned char *)(*(void *)(v3 + *v24) + v46);
              *(void *)(v3 + v45) = v47;
              v44 |= (unint64_t)(v48 & 0x7F) << v42;
              if (v48 < 0)
              {
                v42 += 7;
                BOOL v32 = v43++ >= 9;
                if (!v32) {
                  continue;
                }
              }
              goto LABEL_55;
            }
            *(unsigned char *)(v3 + *v23) = 1;
LABEL_55:
            PBRepeatedUInt64Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v66 = 0;
          unsigned int v67 = 0;
          uint64_t v68 = 0;
          BOOL v23 = (int *)MEMORY[0x1E4F940C8];
          while (1)
          {
            uint64_t v69 = *v21;
            uint64_t v70 = *(void *)(v3 + v69);
            unint64_t v71 = v70 + 1;
            if (v70 == -1 || v71 > *(void *)(v3 + *v6)) {
              break;
            }
            char v72 = *(unsigned char *)(*(void *)(v3 + *v24) + v70);
            *(void *)(v3 + v69) = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if (v72 < 0)
            {
              v66 += 7;
              BOOL v32 = v67++ >= 9;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_104;
          }
          *(unsigned char *)(v3 + *v23) = 1;
LABEL_104:
          PBRepeatedUInt64Add();
        }
        LOBYTE(v19) = v79;
        goto LABEL_106;
      }
    }
LABEL_85:
    int v22 = PBReaderSkipValueWithTag();
    LOBYTE(v19) = v79;
    BOOL v23 = (int *)MEMORY[0x1E4F940C8];
    if ((v22 & v80 & 1) == 0) {
      goto LABEL_109;
    }
  }
  while (*(void *)(v3 + *v21) < *(void *)(v3 + *v6));
  int v22 = 1;
LABEL_109:
  long long v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
LABEL_110:
  LOBYTE(v18) = v78;
LABEL_111:
  if (v18) {
LABEL_112:
  }
    *(unsigned char *)(a1 + v12[414]) |= 4u;
  if (v19 & 1 | ((v22 & 1) == 0))
  {
    *(unsigned char *)(a1 + v12[414]) |= 8u;
    *(unsigned char *)(a1 + v12[414]) |= 0x10u;
    goto LABEL_123;
  }
  if (v20)
  {
    while (2)
    {
      while (1)
      {
        int v74 = *v20++;
        int v73 = v74;
        if (v74 == 2) {
          break;
        }
        if (v73 == 200)
        {
          char v75 = 16;
          goto LABEL_122;
        }
        if (!v73) {
          goto LABEL_123;
        }
      }
      char v75 = 8;
LABEL_122:
      *(unsigned char *)(a1 + v12[414]) |= v75;
      continue;
    }
  }
LABEL_123:
  if (v22)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v23) == 0;
    if ((v19 & 1) == 0) {
      return v3;
    }
LABEL_127:
    char v76 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v19) {
      goto LABEL_127;
    }
  }
  return v3;
}

void _GEOPDPlaceLookupParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v1 = *(id *)(a1 + 48);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v6;
    while (1)
    {
      if (*(void *)v6 != v4) {
        objc_enumerationMutation(v1);
      }
      if (!--v3)
      {
        uint64_t v3 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
        if (!v3) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDPlaceLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPlaceLookupParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDPlaceLookupParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDPlaceLookupParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPlaceLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDPlaceLookupParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189508BA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189508E4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895090E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18950938C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceLookupResultReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    long long v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189509B60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189509EE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18950A690(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceRefinementParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    long long v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_82;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_79;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_82;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_79;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_82;
          }
          goto LABEL_78;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStructuredAddressIsValid(a1)) {
            goto LABEL_82;
          }
          goto LABEL_78;
        case 5u:
          if (v15 == 2) {
            goto LABEL_64;
          }
          goto LABEL_82;
        case 6u:
          if (v15 == 2) {
            goto LABEL_64;
          }
          goto LABEL_82;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_82;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_79;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_82;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_79;
          }
        case 9u:
          if (v15 == 2) {
            goto LABEL_64;
          }
          goto LABEL_82;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_82;
          }
          unsigned int v38 = 0;
          break;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_82;
          }
LABEL_78:
          PBReaderRecallMark();
          continue;
        default:
LABEL_64:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_82:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v39 = *v2;
        uint64_t v40 = *(void *)&a1[v39];
        unint64_t v41 = v40 + 1;
        if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
          break;
        }
        int v42 = *(char *)(*(void *)&a1[*v5] + v40);
        *(void *)&a1[v39] = v41;
        if (v42 < 0)
        {
          BOOL v22 = v38++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_79;
      }
LABEL_74:
      a1[*v4] = 1;
LABEL_79:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

BOOL GEOPDPlaceRefinementParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  BOOL v2 = (*(_WORD *)(a1 + 108) & 0x1FC0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return v2;
}

void sub_18950BA6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceRefinementResultReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    long long v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18950C3D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18950C680(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18950D4D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18950D618(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18950D9D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18950DB44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceRequestCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v2 = *(id *)(a1 + 96);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v22 objects:v28 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v23;
    while (1)
    {
      if (*(void *)v23 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v22 objects:v28 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  -[GEOPDPlaceRequestParameters readAll:](*(void *)(a1 + 80), 1);
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v6 = *(id *)(a1 + 32);
  uint64_t v7 = [v6 countByEnumeratingWithState:&v18 objects:v27 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v19;
    while (1)
    {
      if (*(void *)v19 != v9) {
        objc_enumerationMutation(v6);
      }
      if (!--v8)
      {
        uint64_t v8 = [v6 countByEnumeratingWithState:&v18 objects:v27 count:16];
        if (!v8) {
          break;
        }
      }
    }
  }

  [*(id *)(a1 + 88) readAll:1];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v10 = *(id *)(a1 + 72);
  uint64_t v11 = [v10 countByEnumeratingWithState:&v14 objects:v26 count:16];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = *(void *)v15;
    while (1)
    {
      if (*(void *)v15 != v13) {
        objc_enumerationMutation(v10);
      }
      if (!--v12)
      {
        uint64_t v12 = [v10 countByEnumeratingWithState:&v14 objects:v26 count:16];
        if (!v12) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDPlaceRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDPlaceRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18950FC30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceRequestIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDAnalyticMetadataIsValid(a1)) {
            goto LABEL_66;
          }
          goto LABEL_78;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDClientMetadataIsValid(a1)) {
            goto LABEL_78;
          }
          goto LABEL_66;
        case 3u:
          if (v15 == 2) {
            goto LABEL_61;
          }
          goto LABEL_78;
        case 4u:
          if (v15 == 2) {
            goto LABEL_61;
          }
          goto LABEL_78;
        case 5u:
        case 0xBu:
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDComponentInfoIsValid(a1)) {
            goto LABEL_78;
          }
          goto LABEL_66;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_75;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_76;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_75;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_76;
          }
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRequestParametersIsValid(a1)) {
            goto LABEL_78;
          }
          goto LABEL_66;
        case 9u:
          if (v15 == 2) {
            goto LABEL_61;
          }
          goto LABEL_78;
        case 0xAu:
          goto LABEL_61;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPrivacyMetadataIsValid(a1)) {
            goto LABEL_78;
          }
LABEL_66:
          PBReaderRecallMark();
          goto LABEL_76;
        default:
          if (v17 == 1000)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_78;
            }
            unsigned int v29 = 0;
            while (1)
            {
              uint64_t v30 = *v2;
              uint64_t v31 = *(void *)&a1[v30];
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
                break;
              }
              int v33 = *(char *)(*(void *)&a1[*v5] + v31);
              *(void *)&a1[v30] = v32;
              if (v33 < 0)
              {
                BOOL v23 = v29++ > 8;
                if (!v23) {
                  continue;
                }
              }
              goto LABEL_76;
            }
LABEL_75:
            a1[*v4] = 1;
          }
          else
          {
            if (v17 == 1001 && v15 != 2)
            {
LABEL_78:
              PBReaderRecallMark();
              return 0;
            }
LABEL_61:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_78;
            }
          }
LABEL_76:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_77;
          }
          break;
      }
    }
  }
LABEL_77:
  BOOL v34 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v34;
}

BOOL GEOPDPlaceRequestParametersIsValid(char *a1)
{
  uint64_t v1258 = *MEMORY[0x1E4F143B8];
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_2957:
    BOOL v1254 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v1254;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_2957;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v13 = v7++ >= 9;
      if (v13)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4) {
      goto LABEL_2957;
    }
    switch((v8 >> 3))
    {
      case 1u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_22:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2951;
            }
            char v17 = 0;
            unsigned int v18 = 0;
            unint64_t v19 = 0;
            while (2)
            {
              uint64_t v20 = *v2;
              uint64_t v21 = *(void *)&a1[v20];
              unint64_t v22 = v21 + 1;
              if (v21 == -1 || v22 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v23 = *(unsigned char *)(*(void *)&a1[*v5] + v21);
                *(void *)&a1[v20] = v22;
                v19 |= (unint64_t)(v23 & 0x7F) << v17;
                if (v23 < 0)
                {
                  v17 += 7;
                  BOOL v13 = v18++ >= 9;
                  if (v13)
                  {
                    unint64_t v19 = 0;
                    int v24 = a1[*v4];
                    goto LABEL_34;
                  }
                  continue;
                }
              }
              break;
            }
            int v24 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v19 = 0;
            }
LABEL_34:
            int v25 = v19 & 7;
            if (v24) {
              BOOL v26 = 1;
            }
            else {
              BOOL v26 = v25 == 4;
            }
            if (v26) {
              goto LABEL_2951;
            }
            switch((v19 >> 3))
            {
              case 1u:
                if ((v19 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v27 = 0;
                while (1)
                {
                  uint64_t v28 = *v2;
                  uint64_t v29 = *(void *)&a1[v28];
                  unint64_t v30 = v29 + 1;
                  if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
                    goto LABEL_224;
                  }
                  int v31 = *(char *)(*(void *)&a1[*v5] + v29);
                  *(void *)&a1[v28] = v30;
                  if (v31 < 0)
                  {
                    BOOL v32 = v27++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_22;
                }
              case 2u:
                if ((v19 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v33 = 0;
                while (1)
                {
                  uint64_t v34 = *v2;
                  uint64_t v35 = *(void *)&a1[v34];
                  unint64_t v36 = v35 + 1;
                  if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
                    goto LABEL_224;
                  }
                  int v37 = *(char *)(*(void *)&a1[*v5] + v35);
                  *(void *)&a1[v34] = v36;
                  if (v37 < 0)
                  {
                    BOOL v32 = v33++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_22;
                }
              case 3u:
                if (v25 != 2) {
                  goto LABEL_2958;
                }
                goto LABEL_226;
              case 4u:
              case 0x1Du:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
                  goto LABEL_2958;
                }
                break;
              case 5u:
                if (v25 != 2) {
                  goto LABEL_2958;
                }
                goto LABEL_226;
              case 6u:
                if (v25 != 2) {
                  goto LABEL_2958;
                }
                goto LABEL_226;
              case 7u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteEntryIsValid(a1)) {
                  goto LABEL_2958;
                }
                break;
              case 8u:
                if ((v19 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v38 = 0;
                while (1)
                {
                  uint64_t v39 = *v2;
                  uint64_t v40 = *(void *)&a1[v39];
                  unint64_t v41 = v40 + 1;
                  if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
                    goto LABEL_224;
                  }
                  int v42 = *(char *)(*(void *)&a1[*v5] + v40);
                  *(void *)&a1[v39] = v41;
                  if (v42 < 0)
                  {
                    BOOL v32 = v38++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_22;
                }
              case 9u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDSearchClientBehaviorIsValid(a1)) {
                  goto LABEL_2958;
                }
                break;
              case 0xAu:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDSSearchLocationParametersIsValid(a1)) {
                  goto LABEL_2958;
                }
                break;
              case 0xBu:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDRecentRouteInfoIsValid(a1)) {
                  goto LABEL_2958;
                }
                break;
              case 0xCu:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDSSearchFilterIsValid(a1)) {
                  goto LABEL_2958;
                }
                break;
              case 0xEu:
                if ((v19 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v43 = 0;
                while (1)
                {
                  uint64_t v44 = *v2;
                  uint64_t v45 = *(void *)&a1[v44];
                  unint64_t v46 = v45 + 1;
                  if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
                    goto LABEL_224;
                  }
                  int v47 = *(char *)(*(void *)&a1[*v5] + v45);
                  *(void *)&a1[v44] = v46;
                  if (v47 < 0)
                  {
                    BOOL v32 = v43++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_22;
                }
              case 0xFu:
                if ((v19 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v48 = 0;
                while (1)
                {
                  uint64_t v49 = *v2;
                  uint64_t v50 = *(void *)&a1[v49];
                  unint64_t v51 = v50 + 1;
                  if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
                    goto LABEL_224;
                  }
                  int v52 = *(char *)(*(void *)&a1[*v5] + v50);
                  *(void *)&a1[v49] = v51;
                  if (v52 < 0)
                  {
                    BOOL v32 = v48++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_22;
                }
              case 0x10u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDRetainedSearchMetadataIsValid(a1)) {
                  goto LABEL_2958;
                }
                break;
              case 0x11u:
                if ((v19 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v53 = 0;
                while (1)
                {
                  uint64_t v54 = *v2;
                  uint64_t v55 = *(void *)&a1[v54];
                  unint64_t v56 = v55 + 1;
                  if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
                    goto LABEL_224;
                  }
                  int v57 = *(char *)(*(void *)&a1[*v5] + v55);
                  *(void *)&a1[v54] = v56;
                  if (v57 < 0)
                  {
                    BOOL v32 = v53++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_22;
                }
              case 0x12u:
                if ((v19 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v58 = 0;
                while (1)
                {
                  uint64_t v59 = *v2;
                  uint64_t v60 = *(void *)&a1[v59];
                  unint64_t v61 = v60 + 1;
                  if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
                    goto LABEL_224;
                  }
                  int v62 = *(char *)(*(void *)&a1[*v5] + v60);
                  *(void *)&a1[v59] = v61;
                  if (v62 < 0)
                  {
                    BOOL v32 = v58++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_22;
                }
              case 0x13u:
                if ((v19 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v63 = 0;
                while (1)
                {
                  uint64_t v64 = *v2;
                  uint64_t v65 = *(void *)&a1[v64];
                  unint64_t v66 = v65 + 1;
                  if (v65 == -1 || v66 > *(void *)&a1[*v3]) {
                    goto LABEL_224;
                  }
                  int v67 = *(char *)(*(void *)&a1[*v5] + v65);
                  *(void *)&a1[v64] = v66;
                  if (v67 < 0)
                  {
                    BOOL v32 = v63++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_22;
                }
              case 0x14u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDSInferredSignalsIsValid(a1)) {
                  goto LABEL_2958;
                }
                break;
              case 0x15u:
                if (v25 != 2)
                {
                  if ((v19 & 7) != 0) {
                    goto LABEL_2958;
                  }
                  while (1)
                  {
                    uint64_t v68 = *v2;
                    uint64_t v69 = *(void *)&a1[v68];
                    unint64_t v70 = v69 + 1;
                    if (v69 == -1 || v70 > *(void *)&a1[*v3]) {
                      goto LABEL_224;
                    }
                    int v71 = *(char *)(*(void *)&a1[*v5] + v69);
                    *(void *)&a1[v68] = v70;
                    if (v71 < 0)
                    {
                      unsigned int v72 = v25++;
                      if (v72 <= 8) {
                        continue;
                      }
                    }
                    goto LABEL_22;
                  }
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_2958;
                }
LABEL_253:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                {
                  unsigned int v113 = a1[*v4];
                  if (a1[*v4]) {
                    break;
                  }
                  while (1)
                  {
                    uint64_t v114 = *v2;
                    uint64_t v115 = *(void *)&a1[v114];
                    unint64_t v116 = v115 + 1;
                    if (v115 == -1 || v116 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v117 = *(char *)(*(void *)&a1[*v5] + v115);
                    *(void *)&a1[v114] = v116;
                    if (v117 < 0)
                    {
                      BOOL v13 = v113++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_253;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x16u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDSSearchEvChargingParametersIsValid(a1)) {
                  goto LABEL_2958;
                }
                break;
              case 0x17u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDETAFilterIsValid(a1)) {
                  goto LABEL_2958;
                }
                break;
              case 0x18u:
                if (v25 != 2)
                {
                  if ((v19 & 7) != 0) {
                    goto LABEL_2958;
                  }
                  while (1)
                  {
                    uint64_t v73 = *v2;
                    uint64_t v74 = *(void *)&a1[v73];
                    unint64_t v75 = v74 + 1;
                    if (v74 == -1 || v75 > *(void *)&a1[*v3]) {
                      goto LABEL_224;
                    }
                    int v76 = *(char *)(*(void *)&a1[*v5] + v74);
                    *(void *)&a1[v73] = v75;
                    if (v76 < 0)
                    {
                      unsigned int v77 = v25++;
                      if (v77 <= 8) {
                        continue;
                      }
                    }
                    goto LABEL_22;
                  }
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_2958;
                }
LABEL_263:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                {
                  unsigned int v118 = a1[*v4];
                  if (a1[*v4]) {
                    break;
                  }
                  while (1)
                  {
                    uint64_t v119 = *v2;
                    uint64_t v120 = *(void *)&a1[v119];
                    unint64_t v121 = v120 + 1;
                    if (v120 == -1 || v121 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v122 = *(char *)(*(void *)&a1[*v5] + v120);
                    *(void *)&a1[v119] = v121;
                    if (v122 < 0)
                    {
                      BOOL v13 = v118++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_263;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x19u:
                if ((v19 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v78 = 0;
                while (1)
                {
                  uint64_t v79 = *v2;
                  uint64_t v80 = *(void *)&a1[v79];
                  unint64_t v81 = v80 + 1;
                  if (v80 == -1 || v81 > *(void *)&a1[*v3]) {
                    goto LABEL_224;
                  }
                  int v82 = *(char *)(*(void *)&a1[*v5] + v80);
                  *(void *)&a1[v79] = v81;
                  if (v82 < 0)
                  {
                    BOOL v32 = v78++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_22;
                }
              case 0x1Au:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementQueryIsValid(a1)) {
                  goto LABEL_2958;
                }
                break;
              case 0x1Bu:
                if (v25 != 2)
                {
                  if ((v19 & 7) != 0) {
                    goto LABEL_2958;
                  }
                  while (1)
                  {
                    uint64_t v83 = *v2;
                    uint64_t v84 = *(void *)&a1[v83];
                    unint64_t v85 = v84 + 1;
                    if (v84 == -1 || v85 > *(void *)&a1[*v3]) {
                      goto LABEL_224;
                    }
                    int v86 = *(char *)(*(void *)&a1[*v5] + v84);
                    *(void *)&a1[v83] = v85;
                    if (v86 < 0)
                    {
                      unsigned int v87 = v25++;
                      if (v87 <= 8) {
                        continue;
                      }
                    }
                    goto LABEL_22;
                  }
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_2958;
                }
LABEL_273:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                {
                  unsigned int v123 = a1[*v4];
                  if (a1[*v4]) {
                    break;
                  }
                  while (1)
                  {
                    uint64_t v124 = *v2;
                    uint64_t v125 = *(void *)&a1[v124];
                    unint64_t v126 = v125 + 1;
                    if (v125 == -1 || v126 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v127 = *(char *)(*(void *)&a1[*v5] + v125);
                    *(void *)&a1[v124] = v126;
                    if (v127 < 0)
                    {
                      BOOL v13 = v123++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_273;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x1Cu:
                if ((v19 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v88 = 0;
                while (1)
                {
                  uint64_t v89 = *v2;
                  uint64_t v90 = *(void *)&a1[v89];
                  unint64_t v91 = v90 + 1;
                  if (v90 == -1 || v91 > *(void *)&a1[*v3]) {
                    goto LABEL_224;
                  }
                  int v92 = *(char *)(*(void *)&a1[*v5] + v90);
                  *(void *)&a1[v89] = v91;
                  if (v92 < 0)
                  {
                    BOOL v32 = v88++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_22;
                }
              case 0x1Eu:
                if (v25 != 2)
                {
                  if ((v19 & 7) != 0) {
                    goto LABEL_2958;
                  }
                  while (1)
                  {
                    uint64_t v93 = *v2;
                    uint64_t v94 = *(void *)&a1[v93];
                    unint64_t v95 = v94 + 1;
                    if (v94 == -1 || v95 > *(void *)&a1[*v3]) {
                      goto LABEL_224;
                    }
                    int v96 = *(char *)(*(void *)&a1[*v5] + v94);
                    *(void *)&a1[v93] = v95;
                    if (v96 < 0)
                    {
                      unsigned int v97 = v25++;
                      if (v97 <= 8) {
                        continue;
                      }
                    }
                    goto LABEL_22;
                  }
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_2958;
                }
LABEL_283:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                {
                  unsigned int v128 = a1[*v4];
                  if (a1[*v4]) {
                    break;
                  }
                  while (1)
                  {
                    uint64_t v129 = *v2;
                    uint64_t v130 = *(void *)&a1[v129];
                    unint64_t v131 = v130 + 1;
                    if (v130 == -1 || v131 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v132 = *(char *)(*(void *)&a1[*v5] + v130);
                    *(void *)&a1[v129] = v131;
                    if (v132 < 0)
                    {
                      BOOL v13 = v128++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_283;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x1Fu:
                if (v25 != 2)
                {
                  if ((v19 & 7) != 0) {
                    goto LABEL_2958;
                  }
                  while (1)
                  {
                    uint64_t v98 = *v2;
                    uint64_t v99 = *(void *)&a1[v98];
                    unint64_t v100 = v99 + 1;
                    if (v99 == -1 || v100 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v101 = *(char *)(*(void *)&a1[*v5] + v99);
                    *(void *)&a1[v98] = v100;
                    if (v101 < 0)
                    {
                      unsigned int v102 = v25++;
                      if (v102 <= 8) {
                        continue;
                      }
                    }
                    goto LABEL_22;
                  }
LABEL_224:
                  a1[*v4] = 1;
                  continue;
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_2958;
                }
LABEL_293:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                {
                  unsigned int v133 = a1[*v4];
                  if (a1[*v4]) {
                    break;
                  }
                  while (1)
                  {
                    uint64_t v134 = *v2;
                    uint64_t v135 = *(void *)&a1[v134];
                    unint64_t v136 = v135 + 1;
                    if (v135 == -1 || v136 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v137 = *(char *)(*(void *)&a1[*v5] + v135);
                    *(void *)&a1[v134] = v136;
                    if (v137 < 0)
                    {
                      BOOL v13 = v133++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_293;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x20u:
                if ((v19 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v103 = 0;
                while (1)
                {
                  uint64_t v104 = *v2;
                  uint64_t v105 = *(void *)&a1[v104];
                  unint64_t v106 = v105 + 1;
                  if (v105 == -1 || v106 > *(void *)&a1[*v3]) {
                    goto LABEL_224;
                  }
                  int v107 = *(char *)(*(void *)&a1[*v5] + v105);
                  *(void *)&a1[v104] = v106;
                  if (v107 < 0)
                  {
                    BOOL v32 = v103++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_22;
                }
              case 0x21u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDSearchOriginationInfoIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_251;
              case 0x22u:
                if ((v19 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v108 = 0;
                while (1)
                {
                  uint64_t v109 = *v2;
                  uint64_t v110 = *(void *)&a1[v109];
                  unint64_t v111 = v110 + 1;
                  if (v110 == -1 || v111 > *(void *)&a1[*v3]) {
                    goto LABEL_224;
                  }
                  int v112 = *(char *)(*(void *)&a1[*v5] + v110);
                  *(void *)&a1[v109] = v111;
                  if (v112 < 0)
                  {
                    BOOL v32 = v108++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_22;
                }
              case 0x23u:
                if (v25 != 2) {
                  goto LABEL_2958;
                }
                goto LABEL_226;
              case 0x24u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDClientRankingFeatureTypeResultIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_251;
              case 0x25u:
                if (v25 != 2
                  || !PBReaderPlaceMark()
                  || !GEOPDSSearchSessionDataIsValid((unsigned __int8 *)a1))
                {
                  goto LABEL_2958;
                }
                goto LABEL_251;
              case 0x26u:
                if (v25 != 2
                  || !PBReaderPlaceMark()
                  || !GEOPDAutocompleteSessionDataIsValid((unsigned __int8 *)a1))
                {
                  goto LABEL_2958;
                }
                goto LABEL_251;
              case 0x27u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDSPunchInHintsIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_251;
              case 0x28u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDSSessionUserActionMetadataIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_251;
              case 0x29u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDPaginationParametersIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_251;
              default:
LABEL_226:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
            }
            break;
          }
LABEL_251:
          PBReaderRecallMark();
          continue;
        }
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_305:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2951;
          }
          char v138 = 0;
          unsigned int v139 = 0;
          unint64_t v140 = 0;
          while (2)
          {
            uint64_t v141 = *v2;
            uint64_t v142 = *(void *)&a1[v141];
            unint64_t v143 = v142 + 1;
            if (v142 == -1 || v143 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v144 = *(unsigned char *)(*(void *)&a1[*v5] + v142);
              *(void *)&a1[v141] = v143;
              v140 |= (unint64_t)(v144 & 0x7F) << v138;
              if (v144 < 0)
              {
                v138 += 7;
                BOOL v13 = v139++ >= 9;
                if (v13)
                {
                  unint64_t v140 = 0;
                  int v145 = a1[*v4];
                  goto LABEL_317;
                }
                continue;
              }
            }
            break;
          }
          int v145 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v140 = 0;
          }
LABEL_317:
          int v146 = v140 & 7;
          if (v145) {
            BOOL v147 = 1;
          }
          else {
            BOOL v147 = v146 == 4;
          }
          if (!v147)
          {
            switch((v140 >> 3))
            {
              case 1u:
                if (v146 == 2) {
                  goto LABEL_323;
                }
                goto LABEL_2958;
              case 2u:
                if ((v140 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v148 = 0;
                while (1)
                {
                  uint64_t v149 = *v2;
                  uint64_t v150 = *(void *)&a1[v149];
                  unint64_t v151 = v150 + 1;
                  if (v150 == -1 || v151 > *(void *)&a1[*v3]) {
                    goto LABEL_353;
                  }
                  int v152 = *(char *)(*(void *)&a1[*v5] + v150);
                  *(void *)&a1[v149] = v151;
                  if (v152 < 0)
                  {
                    BOOL v32 = v148++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_305;
                }
              case 3u:
                if (v146 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_357;
              case 4u:
                if (v146 != 2 || !PBReaderPlaceMark() || !GEOStructuredAddressIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_357;
              case 5u:
                if (v146 != 2 || !PBReaderPlaceMark() || !GEOPDSPunchInHintsIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_357;
              case 6u:
                if ((v140 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v153 = 0;
                do
                {
                  uint64_t v154 = *v2;
                  uint64_t v155 = *(void *)&a1[v154];
                  unint64_t v156 = v155 + 1;
                  if (v155 == -1 || v156 > *(void *)&a1[*v3])
                  {
LABEL_353:
                    a1[*v4] = 1;
                    goto LABEL_305;
                  }
                  int v157 = *(char *)(*(void *)&a1[*v5] + v155);
                  *(void *)&a1[v154] = v156;
                  if ((v157 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v32 = v153++ > 8;
                }
                while (!v32);
                break;
              case 7u:
                if (v146 != 2 || !PBReaderPlaceMark() || !GEOPDAddressResultSubTypeFilterIsValid(a1)) {
                  goto LABEL_2958;
                }
LABEL_357:
                PBReaderRecallMark();
                continue;
              default:
LABEL_323:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
            }
            continue;
          }
          goto LABEL_2951;
        }
      case 3u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v158 = 0;
          unsigned int v159 = 0;
          unint64_t v160 = 0;
          while (1)
          {
            uint64_t v161 = *v2;
            uint64_t v162 = *(void *)&a1[v161];
            unint64_t v163 = v162 + 1;
            if (v162 == -1 || v163 > *(void *)&a1[*v3]) {
              break;
            }
            char v164 = *(unsigned char *)(*(void *)&a1[*v5] + v162);
            *(void *)&a1[v161] = v163;
            v160 |= (unint64_t)(v164 & 0x7F) << v158;
            if ((v164 & 0x80) == 0) {
              goto LABEL_371;
            }
            v158 += 7;
            BOOL v13 = v159++ >= 9;
            if (v13)
            {
              unint64_t v160 = 0;
              int v165 = a1[*v4];
              goto LABEL_373;
            }
          }
          a1[*v4] = 1;
LABEL_371:
          int v165 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v160 = 0;
          }
LABEL_373:
          int v166 = v160 & 7;
          if (v165 || v166 == 4) {
            break;
          }
          if ((v160 >> 3) != 1)
          {
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_2958;
            }
            continue;
          }
          if (v166 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2958;
          }
        }
        goto LABEL_2298;
      case 4u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_386:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2951;
          }
          char v168 = 0;
          unsigned int v169 = 0;
          unint64_t v170 = 0;
          while (2)
          {
            uint64_t v171 = *v2;
            uint64_t v172 = *(void *)&a1[v171];
            unint64_t v173 = v172 + 1;
            if (v172 == -1 || v173 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v174 = *(unsigned char *)(*(void *)&a1[*v5] + v172);
              *(void *)&a1[v171] = v173;
              v170 |= (unint64_t)(v174 & 0x7F) << v168;
              if (v174 < 0)
              {
                v168 += 7;
                BOOL v13 = v169++ >= 9;
                if (v13)
                {
                  unint64_t v170 = 0;
                  int v175 = a1[*v4];
                  goto LABEL_398;
                }
                continue;
              }
            }
            break;
          }
          int v175 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v170 = 0;
          }
LABEL_398:
          int v176 = v170 & 7;
          if (v175) {
            BOOL v177 = 1;
          }
          else {
            BOOL v177 = v176 == 4;
          }
          if (!v177)
          {
            switch((v170 >> 3))
            {
              case 1u:
                if (v176 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_429;
              case 2u:
                if ((v170 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v178 = 0;
                while (1)
                {
                  uint64_t v179 = *v2;
                  uint64_t v180 = *(void *)&a1[v179];
                  unint64_t v181 = v180 + 1;
                  if (v180 == -1 || v181 > *(void *)&a1[*v3]) {
                    goto LABEL_425;
                  }
                  int v182 = *(char *)(*(void *)&a1[*v5] + v180);
                  *(void *)&a1[v179] = v181;
                  if (v182 < 0)
                  {
                    BOOL v32 = v178++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_386;
                }
              case 3u:
                if ((v170 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v183 = 0;
                do
                {
                  uint64_t v184 = *v2;
                  uint64_t v185 = *(void *)&a1[v184];
                  unint64_t v186 = v185 + 1;
                  if (v185 == -1 || v186 > *(void *)&a1[*v3])
                  {
LABEL_425:
                    a1[*v4] = 1;
                    goto LABEL_386;
                  }
                  int v187 = *(char *)(*(void *)&a1[*v5] + v185);
                  *(void *)&a1[v184] = v186;
                  if ((v187 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v32 = v183++ > 8;
                }
                while (!v32);
                break;
              case 4u:
                if (v176 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1)) {
                  goto LABEL_2958;
                }
LABEL_429:
                PBReaderRecallMark();
                continue;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
            }
            continue;
          }
          goto LABEL_2951;
        }
      case 5u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_433:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2951;
          }
          char v188 = 0;
          unsigned int v189 = 0;
          unint64_t v190 = 0;
          while (1)
          {
            uint64_t v191 = *v2;
            uint64_t v192 = *(void *)&a1[v191];
            unint64_t v193 = v192 + 1;
            if (v192 == -1 || v193 > *(void *)&a1[*v3]) {
              break;
            }
            char v194 = *(unsigned char *)(*(void *)&a1[*v5] + v192);
            *(void *)&a1[v191] = v193;
            v190 |= (unint64_t)(v194 & 0x7F) << v188;
            if ((v194 & 0x80) == 0) {
              goto LABEL_443;
            }
            v188 += 7;
            BOOL v13 = v189++ >= 9;
            if (v13)
            {
              unint64_t v190 = 0;
              int v195 = a1[*v4];
              goto LABEL_445;
            }
          }
          a1[*v4] = 1;
LABEL_443:
          int v195 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v190 = 0;
          }
LABEL_445:
          int v196 = v190 & 7;
          if (v195 || v196 == 4) {
            goto LABEL_2951;
          }
          unint64_t v198 = v190 >> 3;
          if ((int)(v190 >> 3) <= 3)
          {
            if (v198 != 1)
            {
              if (v198 == 2)
              {
                if (v196 != 2)
                {
                  if ((v190 & 7) != 0) {
                    goto LABEL_2958;
                  }
                  while (1)
                  {
                    uint64_t v199 = *v2;
                    uint64_t v200 = *(void *)&a1[v199];
                    unint64_t v201 = v200 + 1;
                    if (v200 == -1 || v201 > *(void *)&a1[*v3]) {
                      goto LABEL_481;
                    }
                    int v202 = *(char *)(*(void *)&a1[*v5] + v200);
                    *(void *)&a1[v199] = v201;
                    if (v202 < 0)
                    {
                      unsigned int v203 = v196++;
                      if (v203 <= 8) {
                        continue;
                      }
                    }
                    goto LABEL_433;
                  }
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_2958;
                }
LABEL_485:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                {
                  unsigned int v214 = a1[*v4];
                  if (a1[*v4]) {
                    break;
                  }
                  while (1)
                  {
                    uint64_t v215 = *v2;
                    uint64_t v216 = *(void *)&a1[v215];
                    unint64_t v217 = v216 + 1;
                    if (v216 == -1 || v217 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v218 = *(char *)(*(void *)&a1[*v5] + v216);
                    *(void *)&a1[v215] = v217;
                    if (v218 < 0)
                    {
                      BOOL v13 = v214++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_485;
                  }
                  a1[*v4] = 1;
                }
LABEL_464:
                PBReaderRecallMark();
                continue;
              }
LABEL_482:
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
            }
            if ((v190 & 7) != 0) {
              goto LABEL_2958;
            }
            unsigned int v204 = 0;
            while (1)
            {
              uint64_t v205 = *v2;
              uint64_t v206 = *(void *)&a1[v205];
              unint64_t v207 = v206 + 1;
              if (v206 == -1 || v207 > *(void *)&a1[*v3]) {
                break;
              }
              int v208 = *(char *)(*(void *)&a1[*v5] + v206);
              *(void *)&a1[v205] = v207;
              if (v208 < 0)
              {
                BOOL v32 = v204++ > 8;
                if (!v32) {
                  continue;
                }
              }
              goto LABEL_433;
            }
LABEL_481:
            a1[*v4] = 1;
            continue;
          }
          break;
        }
        if (v198 == 4)
        {
          if ((v190 & 7) != 0) {
            goto LABEL_2958;
          }
          unsigned int v209 = 0;
          while (1)
          {
            uint64_t v210 = *v2;
            uint64_t v211 = *(void *)&a1[v210];
            unint64_t v212 = v211 + 1;
            if (v211 == -1 || v212 > *(void *)&a1[*v3]) {
              goto LABEL_481;
            }
            int v213 = *(char *)(*(void *)&a1[*v5] + v211);
            *(void *)&a1[v210] = v212;
            if (v213 < 0)
            {
              BOOL v32 = v209++ > 8;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_433;
          }
        }
        if (v198 != 200) {
          goto LABEL_482;
        }
        if (v196 == 2 && PBReaderPlaceMark() && GEOPlaceIdentifierIsValid(a1)) {
          goto LABEL_464;
        }
        goto LABEL_2958;
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMerchantLookupParametersIsValid(a1)) {
          goto LABEL_2959;
        }
        goto LABEL_2952;
      case 7u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRefinementParametersIsValid(a1)) {
          goto LABEL_2959;
        }
        goto LABEL_2952;
      case 8u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_505:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2723;
            }
            char v219 = 0;
            unsigned int v220 = 0;
            unint64_t v221 = 0;
            while (2)
            {
              uint64_t v222 = *v2;
              uint64_t v223 = *(void *)&a1[v222];
              unint64_t v224 = v223 + 1;
              if (v223 == -1 || v224 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v225 = *(unsigned char *)(*(void *)&a1[*v5] + v223);
                *(void *)&a1[v222] = v224;
                v221 |= (unint64_t)(v225 & 0x7F) << v219;
                if (v225 < 0)
                {
                  v219 += 7;
                  BOOL v13 = v220++ >= 9;
                  if (v13)
                  {
                    unint64_t v221 = 0;
                    int v226 = a1[*v4];
                    goto LABEL_517;
                  }
                  continue;
                }
              }
              break;
            }
            int v226 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v221 = 0;
            }
LABEL_517:
            int v227 = v221 & 7;
            if (v226) {
              BOOL v228 = 1;
            }
            else {
              BOOL v228 = v227 == 4;
            }
            if (v228) {
              goto LABEL_2723;
            }
            switch((v221 >> 3))
            {
              case 1u:
                if ((v221 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v229 = 0;
                while (1)
                {
                  uint64_t v230 = *v2;
                  uint64_t v231 = *(void *)&a1[v230];
                  unint64_t v232 = v231 + 1;
                  if (v231 == -1 || v232 > *(void *)&a1[*v3]) {
                    goto LABEL_568;
                  }
                  int v233 = *(char *)(*(void *)&a1[*v5] + v231);
                  *(void *)&a1[v230] = v232;
                  if (v233 < 0)
                  {
                    BOOL v32 = v229++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_505;
                }
              case 2u:
                if ((v221 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v234 = 0;
                while (1)
                {
                  uint64_t v235 = *v2;
                  uint64_t v236 = *(void *)&a1[v235];
                  unint64_t v237 = v236 + 1;
                  if (v236 == -1 || v237 > *(void *)&a1[*v3]) {
                    goto LABEL_568;
                  }
                  int v238 = *(char *)(*(void *)&a1[*v5] + v236);
                  *(void *)&a1[v235] = v237;
                  if (v238 < 0)
                  {
                    BOOL v32 = v234++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_505;
                }
              case 3u:
                if (v227 == 2) {
                  goto LABEL_558;
                }
                goto LABEL_2958;
              case 4u:
                if (v227 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_651;
              case 5u:
                if (v227 != 2 || !PBReaderPlaceMark() || !GEOAddressIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_651;
              case 6u:
                if (v227 == 2) {
                  goto LABEL_558;
                }
                goto LABEL_2958;
              case 7u:
                if ((v221 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v239 = 0;
                while (1)
                {
                  uint64_t v240 = *v2;
                  uint64_t v241 = *(void *)&a1[v240];
                  unint64_t v242 = v241 + 1;
                  if (v241 == -1 || v242 > *(void *)&a1[*v3]) {
                    goto LABEL_568;
                  }
                  int v243 = *(char *)(*(void *)&a1[*v5] + v241);
                  *(void *)&a1[v240] = v242;
                  if (v243 < 0)
                  {
                    BOOL v32 = v239++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_505;
                }
              case 9u:
                if ((v221 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v244 = 0;
                do
                {
                  uint64_t v245 = *v2;
                  uint64_t v246 = *(void *)&a1[v245];
                  unint64_t v247 = v246 + 1;
                  if (v246 == -1 || v247 > *(void *)&a1[*v3])
                  {
LABEL_568:
                    a1[*v4] = 1;
                    goto LABEL_505;
                  }
                  int v248 = *(char *)(*(void *)&a1[*v5] + v246);
                  *(void *)&a1[v245] = v247;
                  if ((v248 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v32 = v244++ > 8;
                }
                while (!v32);
                continue;
              case 0xAu:
                if (v227 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_2958;
                }
                [a1 position];
                BOOL v249 = 0;
                [a1 length];
                LODWORD(v1257) = 0;
                uint64_t v1256 = 0;
                if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
                  goto LABEL_639;
                }
                break;
              case 0xBu:
                if (v227 != 2 || !PBReaderPlaceMark() || !GEOPDIndexQueryNodeIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_651;
              case 0xCu:
                if (v227 == 2 && PBReaderPlaceMark() && GEOPDRecentRouteInfoIsValid(a1)) {
                  goto LABEL_651;
                }
                goto LABEL_2958;
              default:
LABEL_558:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
            }
            break;
          }
          while (2)
          {
            if (!a1[*v4])
            {
              char v250 = 0;
              unsigned int v251 = 0;
              unint64_t v252 = 0;
              while (1)
              {
                uint64_t v253 = *v2;
                uint64_t v254 = *(void *)&a1[v253];
                unint64_t v255 = v254 + 1;
                if (v254 == -1 || v255 > *(void *)&a1[*v3]) {
                  break;
                }
                char v256 = *(unsigned char *)(*(void *)&a1[*v5] + v254);
                *(void *)&a1[v253] = v255;
                v252 |= (unint64_t)(v256 & 0x7F) << v250;
                if ((v256 & 0x80) == 0) {
                  goto LABEL_581;
                }
                v250 += 7;
                BOOL v13 = v251++ >= 9;
                if (v13)
                {
                  unint64_t v252 = 0;
                  int v257 = a1[*v4];
                  goto LABEL_583;
                }
              }
              a1[*v4] = 1;
LABEL_581:
              int v257 = a1[*v4];
              if (a1[*v4]) {
                unint64_t v252 = 0;
              }
LABEL_583:
              int v258 = v252 & 7;
              if (!v257 && v258 != 4)
              {
                switch((v252 >> 3))
                {
                  case 1u:
                    uint64_t v260 = v1256;
                    if (!v1256) {
                      goto LABEL_610;
                    }
                    if (v1256 == 1) {
                      goto LABEL_2963;
                    }
                    if (HIDWORD(v1256))
                    {
                      if (HIDWORD(v1256) == 1 || v1257) {
                        goto LABEL_2963;
                      }
                      uint64_t v260 = 2;
                    }
                    else
                    {
                      uint64_t v260 = 1;
                    }
LABEL_610:
                    *((_DWORD *)&v1256 + v260) = 1;
                    if (v258) {
                      goto LABEL_2963;
                    }
                    unsigned int v263 = 0;
                    while (1)
                    {
                      uint64_t v264 = *v2;
                      uint64_t v265 = *(void *)&a1[v264];
                      unint64_t v266 = v265 + 1;
                      if (v265 == -1 || v266 > *(void *)&a1[*v3]) {
                        goto LABEL_636;
                      }
                      int v267 = *(char *)(*(void *)&a1[*v5] + v265);
                      *(void *)&a1[v264] = v266;
                      if (v267 < 0)
                      {
                        BOOL v32 = v263++ > 8;
                        if (!v32) {
                          continue;
                        }
                      }
                      goto LABEL_637;
                    }
                  case 2u:
                    uint64_t v261 = v1256;
                    if (!v1256) {
                      goto LABEL_619;
                    }
                    if (v1256 == 2) {
                      goto LABEL_2963;
                    }
                    if (HIDWORD(v1256))
                    {
                      if (HIDWORD(v1256) == 2 || v1257) {
                        goto LABEL_2963;
                      }
                      uint64_t v261 = 2;
                    }
                    else
                    {
                      uint64_t v261 = 1;
                    }
LABEL_619:
                    *((_DWORD *)&v1256 + v261) = 2;
                    if (v258) {
                      goto LABEL_2963;
                    }
                    unsigned int v268 = 0;
                    while (1)
                    {
                      uint64_t v269 = *v2;
                      uint64_t v270 = *(void *)&a1[v269];
                      unint64_t v271 = v270 + 1;
                      if (v270 == -1 || v271 > *(void *)&a1[*v3]) {
                        goto LABEL_636;
                      }
                      int v272 = *(char *)(*(void *)&a1[*v5] + v270);
                      *(void *)&a1[v269] = v271;
                      if (v272 < 0)
                      {
                        BOOL v32 = v268++ > 8;
                        if (!v32) {
                          continue;
                        }
                      }
                      goto LABEL_637;
                    }
                  case 3u:
                    uint64_t v262 = v1256;
                    if (!v1256) {
                      goto LABEL_628;
                    }
                    if (v1256 == 3) {
                      goto LABEL_2963;
                    }
                    if (HIDWORD(v1256))
                    {
                      if (HIDWORD(v1256) == 3 || v1257) {
                        goto LABEL_2963;
                      }
                      uint64_t v262 = 2;
                    }
                    else
                    {
                      uint64_t v262 = 1;
                    }
LABEL_628:
                    *((_DWORD *)&v1256 + v262) = 3;
                    if (v258) {
                      goto LABEL_2963;
                    }
                    unsigned int v273 = 0;
                    while (1)
                    {
                      uint64_t v274 = *v2;
                      uint64_t v275 = *(void *)&a1[v274];
                      unint64_t v276 = v275 + 1;
                      if (v275 == -1 || v276 > *(void *)&a1[*v3]) {
                        break;
                      }
                      int v277 = *(char *)(*(void *)&a1[*v5] + v275);
                      *(void *)&a1[v274] = v276;
                      if (v277 < 0)
                      {
                        BOOL v32 = v273++ > 8;
                        if (!v32) {
                          continue;
                        }
                      }
                      goto LABEL_637;
                    }
LABEL_636:
                    a1[*v4] = 1;
LABEL_637:
                    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
                      break;
                    }
                    continue;
                  case 4u:
                    if (v258 == 2) {
                      goto LABEL_607;
                    }
                    goto LABEL_2963;
                  default:
LABEL_607:
                    if ((PBReaderSkipValueWithTag() & 1) == 0) {
                      goto LABEL_2963;
                    }
                    goto LABEL_637;
                }
              }
            }
            break;
          }
          BOOL v249 = v1257 != 0;
LABEL_639:
          int v278 = a1[*v4];
          PBReaderRecallMark();
          if (v278) {
            BOOL v279 = 1;
          }
          else {
            BOOL v279 = !v249;
          }
          if (!v279)
          {
LABEL_651:
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2958;
        }
      case 9u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_655:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2723;
          }
          char v280 = 0;
          unsigned int v281 = 0;
          unint64_t v282 = 0;
          while (2)
          {
            uint64_t v283 = *v2;
            uint64_t v284 = *(void *)&a1[v283];
            unint64_t v285 = v284 + 1;
            if (v284 == -1 || v285 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v286 = *(unsigned char *)(*(void *)&a1[*v5] + v284);
              *(void *)&a1[v283] = v285;
              v282 |= (unint64_t)(v286 & 0x7F) << v280;
              if (v286 < 0)
              {
                v280 += 7;
                BOOL v13 = v281++ >= 9;
                if (v13)
                {
                  unint64_t v282 = 0;
                  int v287 = a1[*v4];
                  goto LABEL_667;
                }
                continue;
              }
            }
            break;
          }
          int v287 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v282 = 0;
          }
LABEL_667:
          int v288 = v282 & 7;
          if (v287) {
            BOOL v289 = 1;
          }
          else {
            BOOL v289 = v288 == 4;
          }
          if (v289) {
            goto LABEL_2723;
          }
          switch((v282 >> 3))
          {
            case 1u:
              if ((v282 & 7) != 0) {
                goto LABEL_2958;
              }
              unsigned int v290 = 0;
              while (1)
              {
                uint64_t v291 = *v2;
                uint64_t v292 = *(void *)&a1[v291];
                unint64_t v293 = v292 + 1;
                if (v292 == -1 || v293 > *(void *)&a1[*v3]) {
                  goto LABEL_707;
                }
                int v294 = *(char *)(*(void *)&a1[*v5] + v292);
                *(void *)&a1[v291] = v293;
                if (v294 < 0)
                {
                  BOOL v32 = v290++ > 8;
                  if (!v32) {
                    continue;
                  }
                }
                goto LABEL_655;
              }
            case 2u:
              if ((v282 & 7) != 0) {
                goto LABEL_2958;
              }
              unsigned int v295 = 0;
              while (1)
              {
                uint64_t v296 = *v2;
                uint64_t v297 = *(void *)&a1[v296];
                unint64_t v298 = v297 + 1;
                if (v297 == -1 || v298 > *(void *)&a1[*v3]) {
                  goto LABEL_707;
                }
                int v299 = *(char *)(*(void *)&a1[*v5] + v297);
                *(void *)&a1[v296] = v298;
                if (v299 < 0)
                {
                  BOOL v32 = v295++ > 8;
                  if (!v32) {
                    continue;
                  }
                }
                goto LABEL_655;
              }
            case 3u:
              if (v288 == 2) {
                goto LABEL_689;
              }
              goto LABEL_2958;
            case 4u:
              if (v288 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
                goto LABEL_2958;
              }
              goto LABEL_755;
            case 5u:
              if (v288 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
                goto LABEL_2958;
              }
              goto LABEL_755;
            case 6u:
              if ((v282 & 7) != 0) {
                goto LABEL_2958;
              }
              unsigned int v300 = 0;
              do
              {
                uint64_t v301 = *v2;
                uint64_t v302 = *(void *)&a1[v301];
                unint64_t v303 = v302 + 1;
                if (v302 == -1 || v303 > *(void *)&a1[*v3])
                {
LABEL_707:
                  a1[*v4] = 1;
                  goto LABEL_655;
                }
                int v304 = *(char *)(*(void *)&a1[*v5] + v302);
                *(void *)&a1[v301] = v303;
                if ((v304 & 0x80000000) == 0) {
                  break;
                }
                BOOL v32 = v300++ > 8;
              }
              while (!v32);
              continue;
            case 7u:
              if (v288 != 2 || !PBReaderPlaceMark()) {
                goto LABEL_2958;
              }
              [a1 position];
              [a1 length];
              break;
            case 8u:
              if (v288 != 2 || !PBReaderPlaceMark() || !GEOPDPaginationParametersIsValid(a1)) {
                goto LABEL_2958;
              }
              goto LABEL_755;
            case 9u:
              if (v288 == 2 && PBReaderPlaceMark() && GEOPDSSearchFilterIsValid(a1)) {
                goto LABEL_755;
              }
              goto LABEL_2958;
            default:
LABEL_689:
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
          }
          break;
        }
        while (1)
        {
LABEL_711:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_756;
          }
          char v305 = 0;
          unsigned int v306 = 0;
          unint64_t v307 = 0;
          while (1)
          {
            uint64_t v308 = *v2;
            uint64_t v309 = *(void *)&a1[v308];
            unint64_t v310 = v309 + 1;
            if (v309 == -1 || v310 > *(void *)&a1[*v3]) {
              break;
            }
            char v311 = *(unsigned char *)(*(void *)&a1[*v5] + v309);
            *(void *)&a1[v308] = v310;
            v307 |= (unint64_t)(v311 & 0x7F) << v305;
            if ((v311 & 0x80) == 0) {
              goto LABEL_721;
            }
            v305 += 7;
            BOOL v13 = v306++ >= 9;
            if (v13)
            {
              unint64_t v307 = 0;
              int v312 = a1[*v4];
              goto LABEL_723;
            }
          }
          a1[*v4] = 1;
LABEL_721:
          int v312 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v307 = 0;
          }
LABEL_723:
          if (v312 || (v307 & 7) == 4)
          {
LABEL_756:
            int v324 = a1[*v4];
            PBReaderRecallMark();
            if (!v324)
            {
LABEL_755:
              PBReaderRecallMark();
              goto LABEL_655;
            }
            goto LABEL_2958;
          }
          if ((v307 >> 3) == 2) {
            break;
          }
          if ((v307 >> 3) == 1)
          {
            if ((v307 & 7) == 0)
            {
              unsigned int v314 = 0;
              while (1)
              {
                uint64_t v315 = *v2;
                uint64_t v316 = *(void *)&a1[v315];
                unint64_t v317 = v316 + 1;
                if (v316 == -1 || v317 > *(void *)&a1[*v3]) {
                  goto LABEL_745;
                }
                int v318 = *(char *)(*(void *)&a1[*v5] + v316);
                *(void *)&a1[v315] = v317;
                if (v318 < 0)
                {
                  BOOL v32 = v314++ > 8;
                  if (!v32) {
                    continue;
                  }
                }
                goto LABEL_711;
              }
            }
            goto LABEL_2963;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2963;
          }
        }
        if ((v307 & 7) == 0)
        {
          unsigned int v319 = 0;
          while (1)
          {
            uint64_t v320 = *v2;
            uint64_t v321 = *(void *)&a1[v320];
            unint64_t v322 = v321 + 1;
            if (v321 == -1 || v322 > *(void *)&a1[*v3]) {
              break;
            }
            int v323 = *(char *)(*(void *)&a1[*v5] + v321);
            *(void *)&a1[v320] = v322;
            if (v323 < 0)
            {
              BOOL v32 = v319++ > 8;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_711;
          }
LABEL_745:
          a1[*v4] = 1;
          goto LABEL_711;
        }
        goto LABEL_2963;
      case 0xAu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteParametersIsValid(a1)) {
          goto LABEL_2959;
        }
        goto LABEL_2952;
      case 0xBu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchBrowseCategorySuggestionParametersIsValid(a1)) {
          goto LABEL_2959;
        }
        goto LABEL_2952;
      case 0xCu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_769:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2951;
            }
            char v325 = 0;
            unsigned int v326 = 0;
            unint64_t v327 = 0;
            while (2)
            {
              uint64_t v328 = *v2;
              uint64_t v329 = *(void *)&a1[v328];
              unint64_t v330 = v329 + 1;
              if (v329 == -1 || v330 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v331 = *(unsigned char *)(*(void *)&a1[*v5] + v329);
                *(void *)&a1[v328] = v330;
                v327 |= (unint64_t)(v331 & 0x7F) << v325;
                if (v331 < 0)
                {
                  v325 += 7;
                  BOOL v13 = v326++ >= 9;
                  if (v13)
                  {
                    unint64_t v327 = 0;
                    int v332 = a1[*v4];
                    goto LABEL_781;
                  }
                  continue;
                }
              }
              break;
            }
            int v332 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v327 = 0;
            }
LABEL_781:
            int v333 = v327 & 7;
            if (v332) {
              BOOL v334 = 1;
            }
            else {
              BOOL v334 = v333 == 4;
            }
            if (v334) {
              goto LABEL_2951;
            }
            switch((v327 >> 3))
            {
              case 1u:
                if ((v327 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v335 = 0;
                while (1)
                {
                  uint64_t v336 = *v2;
                  uint64_t v337 = *(void *)&a1[v336];
                  unint64_t v338 = v337 + 1;
                  if (v337 == -1 || v338 > *(void *)&a1[*v3]) {
                    goto LABEL_915;
                  }
                  int v339 = *(char *)(*(void *)&a1[*v5] + v337);
                  *(void *)&a1[v336] = v338;
                  if (v339 < 0)
                  {
                    BOOL v32 = v335++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_769;
                }
              case 3u:
              case 0x1Cu:
                if (v333 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
                  goto LABEL_2958;
                }
                break;
              case 4u:
                if (v333 == 2) {
                  goto LABEL_921;
                }
                goto LABEL_2958;
              case 5u:
                if ((v327 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v340 = 0;
                while (1)
                {
                  uint64_t v341 = *v2;
                  uint64_t v342 = *(void *)&a1[v341];
                  unint64_t v343 = v342 + 1;
                  if (v342 == -1 || v343 > *(void *)&a1[*v3]) {
                    goto LABEL_915;
                  }
                  int v344 = *(char *)(*(void *)&a1[*v5] + v342);
                  *(void *)&a1[v341] = v343;
                  if (v344 < 0)
                  {
                    BOOL v32 = v340++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_769;
                }
              case 6u:
                if ((v327 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v345 = 0;
                while (1)
                {
                  uint64_t v346 = *v2;
                  uint64_t v347 = *(void *)&a1[v346];
                  unint64_t v348 = v347 + 1;
                  if (v347 == -1 || v348 > *(void *)&a1[*v3]) {
                    goto LABEL_915;
                  }
                  int v349 = *(char *)(*(void *)&a1[*v5] + v347);
                  *(void *)&a1[v346] = v348;
                  if (v349 < 0)
                  {
                    BOOL v32 = v345++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_769;
                }
              case 7u:
                if ((v327 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v350 = 0;
                while (1)
                {
                  uint64_t v351 = *v2;
                  uint64_t v352 = *(void *)&a1[v351];
                  unint64_t v353 = v352 + 1;
                  if (v352 == -1 || v353 > *(void *)&a1[*v3]) {
                    goto LABEL_915;
                  }
                  int v354 = *(char *)(*(void *)&a1[*v5] + v352);
                  *(void *)&a1[v351] = v353;
                  if (v354 < 0)
                  {
                    BOOL v32 = v350++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_769;
                }
              case 8u:
                if (v333 != 2 || !PBReaderPlaceMark() || !GEOPDRecentRouteInfoIsValid(a1)) {
                  goto LABEL_2958;
                }
                break;
              case 9u:
                if ((v327 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v355 = 0;
                while (1)
                {
                  uint64_t v356 = *v2;
                  uint64_t v357 = *(void *)&a1[v356];
                  unint64_t v358 = v357 + 1;
                  if (v357 == -1 || v358 > *(void *)&a1[*v3]) {
                    goto LABEL_915;
                  }
                  int v359 = *(char *)(*(void *)&a1[*v5] + v357);
                  *(void *)&a1[v356] = v358;
                  if (v359 < 0)
                  {
                    BOOL v32 = v355++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_769;
                }
              case 0xAu:
                if (v333 != 2 || !PBReaderPlaceMark() || !GEOPDSSearchEvChargingParametersIsValid(a1)) {
                  goto LABEL_2958;
                }
                break;
              case 0x15u:
                if (v333 != 2)
                {
                  if ((v327 & 7) != 0) {
                    goto LABEL_2958;
                  }
                  while (1)
                  {
                    uint64_t v360 = *v2;
                    uint64_t v361 = *(void *)&a1[v360];
                    unint64_t v362 = v361 + 1;
                    if (v361 == -1 || v362 > *(void *)&a1[*v3]) {
                      goto LABEL_915;
                    }
                    int v363 = *(char *)(*(void *)&a1[*v5] + v361);
                    *(void *)&a1[v360] = v362;
                    if (v363 < 0)
                    {
                      unsigned int v364 = v333++;
                      if (v364 <= 8) {
                        continue;
                      }
                    }
                    goto LABEL_769;
                  }
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_2958;
                }
LABEL_940:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                {
                  unsigned int v405 = a1[*v4];
                  if (a1[*v4]) {
                    break;
                  }
                  while (1)
                  {
                    uint64_t v406 = *v2;
                    uint64_t v407 = *(void *)&a1[v406];
                    unint64_t v408 = v407 + 1;
                    if (v407 == -1 || v408 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v409 = *(char *)(*(void *)&a1[*v5] + v407);
                    *(void *)&a1[v406] = v408;
                    if (v409 < 0)
                    {
                      BOOL v13 = v405++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_940;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x16u:
                if (v333 != 2 || !PBReaderPlaceMark() || !GEOPDETAFilterIsValid(a1)) {
                  goto LABEL_2958;
                }
                break;
              case 0x17u:
                if (v333 != 2)
                {
                  if ((v327 & 7) != 0) {
                    goto LABEL_2958;
                  }
                  while (1)
                  {
                    uint64_t v365 = *v2;
                    uint64_t v366 = *(void *)&a1[v365];
                    unint64_t v367 = v366 + 1;
                    if (v366 == -1 || v367 > *(void *)&a1[*v3]) {
                      goto LABEL_915;
                    }
                    int v368 = *(char *)(*(void *)&a1[*v5] + v366);
                    *(void *)&a1[v365] = v367;
                    if (v368 < 0)
                    {
                      unsigned int v369 = v333++;
                      if (v369 <= 8) {
                        continue;
                      }
                    }
                    goto LABEL_769;
                  }
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_2958;
                }
LABEL_950:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                {
                  unsigned int v410 = a1[*v4];
                  if (a1[*v4]) {
                    break;
                  }
                  while (1)
                  {
                    uint64_t v411 = *v2;
                    uint64_t v412 = *(void *)&a1[v411];
                    unint64_t v413 = v412 + 1;
                    if (v412 == -1 || v413 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v414 = *(char *)(*(void *)&a1[*v5] + v412);
                    *(void *)&a1[v411] = v413;
                    if (v414 < 0)
                    {
                      BOOL v13 = v410++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_950;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x18u:
                if ((v327 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v370 = 0;
                while (1)
                {
                  uint64_t v371 = *v2;
                  uint64_t v372 = *(void *)&a1[v371];
                  unint64_t v373 = v372 + 1;
                  if (v372 == -1 || v373 > *(void *)&a1[*v3]) {
                    goto LABEL_915;
                  }
                  int v374 = *(char *)(*(void *)&a1[*v5] + v372);
                  *(void *)&a1[v371] = v373;
                  if (v374 < 0)
                  {
                    BOOL v32 = v370++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_769;
                }
              case 0x19u:
                if (v333 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementQueryIsValid(a1)) {
                  goto LABEL_2958;
                }
                break;
              case 0x1Au:
                if (v333 != 2)
                {
                  if ((v327 & 7) != 0) {
                    goto LABEL_2958;
                  }
                  while (1)
                  {
                    uint64_t v375 = *v2;
                    uint64_t v376 = *(void *)&a1[v375];
                    unint64_t v377 = v376 + 1;
                    if (v376 == -1 || v377 > *(void *)&a1[*v3]) {
                      goto LABEL_915;
                    }
                    int v378 = *(char *)(*(void *)&a1[*v5] + v376);
                    *(void *)&a1[v375] = v377;
                    if (v378 < 0)
                    {
                      unsigned int v379 = v333++;
                      if (v379 <= 8) {
                        continue;
                      }
                    }
                    goto LABEL_769;
                  }
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_2958;
                }
LABEL_960:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                {
                  unsigned int v415 = a1[*v4];
                  if (a1[*v4]) {
                    break;
                  }
                  while (1)
                  {
                    uint64_t v416 = *v2;
                    uint64_t v417 = *(void *)&a1[v416];
                    unint64_t v418 = v417 + 1;
                    if (v417 == -1 || v418 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v419 = *(char *)(*(void *)&a1[*v5] + v417);
                    *(void *)&a1[v416] = v418;
                    if (v419 < 0)
                    {
                      BOOL v13 = v415++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_960;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x1Bu:
                if ((v327 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v380 = 0;
                while (1)
                {
                  uint64_t v381 = *v2;
                  uint64_t v382 = *(void *)&a1[v381];
                  unint64_t v383 = v382 + 1;
                  if (v382 == -1 || v383 > *(void *)&a1[*v3]) {
                    goto LABEL_915;
                  }
                  int v384 = *(char *)(*(void *)&a1[*v5] + v382);
                  *(void *)&a1[v381] = v383;
                  if (v384 < 0)
                  {
                    BOOL v32 = v380++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_769;
                }
              case 0x1Du:
                if (v333 != 2)
                {
                  if ((v327 & 7) != 0) {
                    goto LABEL_2958;
                  }
                  while (1)
                  {
                    uint64_t v385 = *v2;
                    uint64_t v386 = *(void *)&a1[v385];
                    unint64_t v387 = v386 + 1;
                    if (v386 == -1 || v387 > *(void *)&a1[*v3]) {
                      goto LABEL_915;
                    }
                    int v388 = *(char *)(*(void *)&a1[*v5] + v386);
                    *(void *)&a1[v385] = v387;
                    if (v388 < 0)
                    {
                      unsigned int v389 = v333++;
                      if (v389 <= 8) {
                        continue;
                      }
                    }
                    goto LABEL_769;
                  }
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_2958;
                }
LABEL_970:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                {
                  unsigned int v420 = a1[*v4];
                  if (a1[*v4]) {
                    break;
                  }
                  while (1)
                  {
                    uint64_t v421 = *v2;
                    uint64_t v422 = *(void *)&a1[v421];
                    unint64_t v423 = v422 + 1;
                    if (v422 == -1 || v423 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v424 = *(char *)(*(void *)&a1[*v5] + v422);
                    *(void *)&a1[v421] = v423;
                    if (v424 < 0)
                    {
                      BOOL v13 = v420++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_970;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x1Eu:
                if (v333 != 2)
                {
                  if ((v327 & 7) != 0) {
                    goto LABEL_2958;
                  }
                  while (1)
                  {
                    uint64_t v390 = *v2;
                    uint64_t v391 = *(void *)&a1[v390];
                    unint64_t v392 = v391 + 1;
                    if (v391 == -1 || v392 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v393 = *(char *)(*(void *)&a1[*v5] + v391);
                    *(void *)&a1[v390] = v392;
                    if (v393 < 0)
                    {
                      unsigned int v394 = v333++;
                      if (v394 <= 8) {
                        continue;
                      }
                    }
                    goto LABEL_769;
                  }
LABEL_915:
                  a1[*v4] = 1;
                  continue;
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_2958;
                }
LABEL_980:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                {
                  unsigned int v425 = a1[*v4];
                  if (a1[*v4]) {
                    break;
                  }
                  while (1)
                  {
                    uint64_t v426 = *v2;
                    uint64_t v427 = *(void *)&a1[v426];
                    unint64_t v428 = v427 + 1;
                    if (v427 == -1 || v428 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v429 = *(char *)(*(void *)&a1[*v5] + v427);
                    *(void *)&a1[v426] = v428;
                    if (v429 < 0)
                    {
                      BOOL v13 = v425++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_980;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x1Fu:
                if ((v327 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v395 = 0;
                while (1)
                {
                  uint64_t v396 = *v2;
                  uint64_t v397 = *(void *)&a1[v396];
                  unint64_t v398 = v397 + 1;
                  if (v397 == -1 || v398 > *(void *)&a1[*v3]) {
                    goto LABEL_915;
                  }
                  int v399 = *(char *)(*(void *)&a1[*v5] + v397);
                  *(void *)&a1[v396] = v398;
                  if (v399 < 0)
                  {
                    BOOL v32 = v395++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_769;
                }
              case 0x20u:
                if ((v327 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v400 = 0;
                while (1)
                {
                  uint64_t v401 = *v2;
                  uint64_t v402 = *(void *)&a1[v401];
                  unint64_t v403 = v402 + 1;
                  if (v402 == -1 || v403 > *(void *)&a1[*v3]) {
                    goto LABEL_915;
                  }
                  int v404 = *(char *)(*(void *)&a1[*v5] + v402);
                  *(void *)&a1[v401] = v403;
                  if (v404 < 0)
                  {
                    BOOL v32 = v400++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_769;
                }
              case 0x21u:
                if (v333 != 2 || !PBReaderPlaceMark() || !GEOPDSearchOriginationInfoIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_938;
              case 0x22u:
                if (v333 == 2) {
                  goto LABEL_921;
                }
                goto LABEL_2958;
              case 0x23u:
                if (v333 != 2 || !PBReaderPlaceMark() || !GEOPDClientRankingFeatureTypeResultIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_938;
              case 0x24u:
                if (v333 != 2
                  || !PBReaderPlaceMark()
                  || !GEOPDSSearchSessionDataIsValid((unsigned __int8 *)a1))
                {
                  goto LABEL_2958;
                }
                goto LABEL_938;
              case 0x25u:
                if (v333 != 2 || !PBReaderPlaceMark() || !GEOPDSSessionUserActionMetadataIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_938;
              case 0x26u:
                if (v333 == 2 && PBReaderPlaceMark() && GEOPDPaginationParametersIsValid(a1)) {
                  goto LABEL_938;
                }
                goto LABEL_2958;
              default:
LABEL_921:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
            }
            break;
          }
LABEL_938:
          PBReaderRecallMark();
          continue;
        }
      case 0xDu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_992:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2951;
          }
          char v430 = 0;
          unsigned int v431 = 0;
          unint64_t v432 = 0;
          while (2)
          {
            uint64_t v433 = *v2;
            uint64_t v434 = *(void *)&a1[v433];
            unint64_t v435 = v434 + 1;
            if (v434 == -1 || v435 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v436 = *(unsigned char *)(*(void *)&a1[*v5] + v434);
              *(void *)&a1[v433] = v435;
              v432 |= (unint64_t)(v436 & 0x7F) << v430;
              if (v436 < 0)
              {
                v430 += 7;
                BOOL v13 = v431++ >= 9;
                if (v13)
                {
                  unint64_t v432 = 0;
                  int v437 = a1[*v4];
                  goto LABEL_1004;
                }
                continue;
              }
            }
            break;
          }
          int v437 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v432 = 0;
          }
LABEL_1004:
          int v438 = v432 & 7;
          if (v437) {
            BOOL v439 = 1;
          }
          else {
            BOOL v439 = v438 == 4;
          }
          if (!v439)
          {
            switch((v432 >> 3))
            {
              case 1u:
                if ((v432 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v440 = 0;
                while (1)
                {
                  uint64_t v441 = *v2;
                  uint64_t v442 = *(void *)&a1[v441];
                  unint64_t v443 = v442 + 1;
                  if (v442 == -1 || v443 > *(void *)&a1[*v3]) {
                    goto LABEL_1032;
                  }
                  int v444 = *(char *)(*(void *)&a1[*v5] + v442);
                  *(void *)&a1[v441] = v443;
                  if (v444 < 0)
                  {
                    BOOL v32 = v440++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_992;
                }
              case 2u:
                if (v438 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
                  goto LABEL_2958;
                }
                PBReaderRecallMark();
                continue;
              case 3u:
                if (v438 == 2) {
                  goto LABEL_1022;
                }
                goto LABEL_2958;
              case 4u:
                if ((v432 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v445 = 0;
                do
                {
                  uint64_t v446 = *v2;
                  uint64_t v447 = *(void *)&a1[v446];
                  unint64_t v448 = v447 + 1;
                  if (v447 == -1 || v448 > *(void *)&a1[*v3])
                  {
LABEL_1032:
                    a1[*v4] = 1;
                    goto LABEL_992;
                  }
                  int v449 = *(char *)(*(void *)&a1[*v5] + v447);
                  *(void *)&a1[v446] = v448;
                  if ((v449 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v32 = v445++ > 8;
                }
                while (!v32);
                break;
              default:
LABEL_1022:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
            }
            continue;
          }
          goto LABEL_2951;
        }
      case 0xEu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_1036:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2951;
          }
          char v450 = 0;
          unsigned int v451 = 0;
          unint64_t v452 = 0;
          while (2)
          {
            uint64_t v453 = *v2;
            uint64_t v454 = *(void *)&a1[v453];
            unint64_t v455 = v454 + 1;
            if (v454 == -1 || v455 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v456 = *(unsigned char *)(*(void *)&a1[*v5] + v454);
              *(void *)&a1[v453] = v455;
              v452 |= (unint64_t)(v456 & 0x7F) << v450;
              if (v456 < 0)
              {
                v450 += 7;
                BOOL v13 = v451++ >= 9;
                if (v13)
                {
                  unint64_t v452 = 0;
                  uint64_t v457 = *v4;
                  int v458 = a1[v457];
                  goto LABEL_1048;
                }
                continue;
              }
            }
            break;
          }
          uint64_t v457 = *v4;
          int v458 = a1[v457];
          if (a1[v457]) {
            unint64_t v452 = 0;
          }
LABEL_1048:
          int v459 = v452 & 7;
          if (v458) {
            BOOL v460 = 1;
          }
          else {
            BOOL v460 = v459 == 4;
          }
          if (!v460)
          {
            switch((v452 >> 3))
            {
              case 2u:
                if (v459 != 1) {
                  goto LABEL_2958;
                }
                uint64_t v461 = *v2;
                unint64_t v462 = *(void *)&a1[v461];
                if (v462 > 0xFFFFFFFFFFFFFFF7) {
                  goto LABEL_1088;
                }
                unint64_t v463 = v462 + 8;
                if (v463 > *(void *)&a1[*v3]) {
                  goto LABEL_1088;
                }
                *(void *)&a1[v461] = v463;
                continue;
              case 3u:
                if (v459 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
                  goto LABEL_2958;
                }
                PBReaderRecallMark();
                continue;
              case 4u:
                if ((v452 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v464 = 0;
                while (1)
                {
                  uint64_t v465 = *v2;
                  uint64_t v466 = *(void *)&a1[v465];
                  unint64_t v467 = v466 + 1;
                  if (v466 == -1 || v467 > *(void *)&a1[*v3]) {
                    goto LABEL_1087;
                  }
                  int v468 = *(char *)(*(void *)&a1[*v5] + v466);
                  *(void *)&a1[v465] = v467;
                  if (v468 < 0)
                  {
                    BOOL v32 = v464++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_1036;
                }
              case 5u:
                if ((v452 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v469 = 0;
                while (1)
                {
                  uint64_t v470 = *v2;
                  uint64_t v471 = *(void *)&a1[v470];
                  unint64_t v472 = v471 + 1;
                  if (v471 == -1 || v472 > *(void *)&a1[*v3]) {
                    goto LABEL_1087;
                  }
                  int v473 = *(char *)(*(void *)&a1[*v5] + v471);
                  *(void *)&a1[v470] = v472;
                  if (v473 < 0)
                  {
                    BOOL v32 = v469++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_1036;
                }
              case 6u:
                if ((v452 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v474 = 0;
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
            }
            while (1)
            {
              uint64_t v475 = *v2;
              uint64_t v476 = *(void *)&a1[v475];
              unint64_t v477 = v476 + 1;
              if (v476 == -1 || v477 > *(void *)&a1[*v3]) {
                break;
              }
              int v478 = *(char *)(*(void *)&a1[*v5] + v476);
              *(void *)&a1[v475] = v477;
              if (v478 < 0)
              {
                BOOL v32 = v474++ > 8;
                if (!v32) {
                  continue;
                }
              }
              goto LABEL_1036;
            }
LABEL_1087:
            uint64_t v457 = *v4;
LABEL_1088:
            a1[v457] = 1;
            continue;
          }
          goto LABEL_2951;
        }
      case 0xFu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_1092:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2298;
            }
            char v479 = 0;
            unsigned int v480 = 0;
            unint64_t v481 = 0;
            while (1)
            {
              uint64_t v482 = *v2;
              uint64_t v483 = *(void *)&a1[v482];
              unint64_t v484 = v483 + 1;
              if (v483 == -1 || v484 > *(void *)&a1[*v3]) {
                break;
              }
              char v485 = *(unsigned char *)(*(void *)&a1[*v5] + v483);
              *(void *)&a1[v482] = v484;
              v481 |= (unint64_t)(v485 & 0x7F) << v479;
              if ((v485 & 0x80) == 0) {
                goto LABEL_1102;
              }
              v479 += 7;
              BOOL v13 = v480++ >= 9;
              if (v13)
              {
                unint64_t v481 = 0;
                int v486 = a1[*v4];
                goto LABEL_1104;
              }
            }
            a1[*v4] = 1;
LABEL_1102:
            int v486 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v481 = 0;
            }
LABEL_1104:
            if (v486 || (v481 & 7) == 4) {
              goto LABEL_2298;
            }
            if ((v481 >> 3) == 2)
            {
              if ((v481 & 7) != 0) {
                goto LABEL_2958;
              }
              unsigned int v493 = 0;
              while (1)
              {
                uint64_t v494 = *v2;
                uint64_t v495 = *(void *)&a1[v494];
                unint64_t v496 = v495 + 1;
                if (v495 == -1 || v496 > *(void *)&a1[*v3]) {
                  break;
                }
                int v497 = *(char *)(*(void *)&a1[*v5] + v495);
                *(void *)&a1[v494] = v496;
                if (v497 < 0)
                {
                  BOOL v32 = v493++ > 8;
                  if (!v32) {
                    continue;
                  }
                }
                goto LABEL_1092;
              }
LABEL_1126:
              a1[*v4] = 1;
              continue;
            }
            break;
          }
          if ((v481 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_2958;
            }
            continue;
          }
          break;
        }
        if ((v481 & 7) == 0)
        {
          unsigned int v488 = 0;
          while (1)
          {
            uint64_t v489 = *v2;
            uint64_t v490 = *(void *)&a1[v489];
            unint64_t v491 = v490 + 1;
            if (v490 == -1 || v491 > *(void *)&a1[*v3]) {
              goto LABEL_1126;
            }
            int v492 = *(char *)(*(void *)&a1[*v5] + v490);
            *(void *)&a1[v489] = v491;
            if (v492 < 0)
            {
              BOOL v32 = v488++ > 8;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_1092;
          }
        }
        goto LABEL_2958;
      case 0x10u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_1132:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2951;
          }
          char v498 = 0;
          unsigned int v499 = 0;
          unint64_t v500 = 0;
          while (2)
          {
            uint64_t v501 = *v2;
            uint64_t v502 = *(void *)&a1[v501];
            unint64_t v503 = v502 + 1;
            if (v502 == -1 || v503 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v504 = *(unsigned char *)(*(void *)&a1[*v5] + v502);
              *(void *)&a1[v501] = v503;
              v500 |= (unint64_t)(v504 & 0x7F) << v498;
              if (v504 < 0)
              {
                v498 += 7;
                BOOL v13 = v499++ >= 9;
                if (v13)
                {
                  unint64_t v500 = 0;
                  uint64_t v505 = *v4;
                  int v506 = a1[v505];
                  goto LABEL_1144;
                }
                continue;
              }
            }
            break;
          }
          uint64_t v505 = *v4;
          int v506 = a1[v505];
          if (a1[v505]) {
            unint64_t v500 = 0;
          }
LABEL_1144:
          int v507 = v500 & 7;
          if (v506) {
            BOOL v508 = 1;
          }
          else {
            BOOL v508 = v507 == 4;
          }
          if (!v508)
          {
            switch((v500 >> 3))
            {
              case 1u:
                if ((v500 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v509 = 0;
                break;
              case 2u:
                if (v507 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
                  goto LABEL_2958;
                }
                PBReaderRecallMark();
                continue;
              case 3u:
                if (v507 != 1) {
                  goto LABEL_2958;
                }
                uint64_t v514 = *v2;
                unint64_t v515 = *(void *)&a1[v514];
                if (v515 > 0xFFFFFFFFFFFFFFF7) {
                  goto LABEL_1169;
                }
                unint64_t v516 = v515 + 8;
                if (v516 > *(void *)&a1[*v3]) {
                  goto LABEL_1169;
                }
                *(void *)&a1[v514] = v516;
                continue;
              case 4u:
                if (v507 == 2) {
                  goto LABEL_1166;
                }
                goto LABEL_2958;
              default:
LABEL_1166:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
            }
            while (1)
            {
              uint64_t v510 = *v2;
              uint64_t v511 = *(void *)&a1[v510];
              unint64_t v512 = v511 + 1;
              if (v511 == -1 || v512 > *(void *)&a1[*v3]) {
                break;
              }
              int v513 = *(char *)(*(void *)&a1[*v5] + v511);
              *(void *)&a1[v510] = v512;
              if (v513 < 0)
              {
                BOOL v32 = v509++ > 8;
                if (!v32) {
                  continue;
                }
              }
              goto LABEL_1132;
            }
            uint64_t v505 = *v4;
LABEL_1169:
            a1[v505] = 1;
            continue;
          }
          goto LABEL_2951;
        }
      case 0x11u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_1173:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2951;
          }
          char v517 = 0;
          unsigned int v518 = 0;
          unint64_t v519 = 0;
          while (2)
          {
            uint64_t v520 = *v2;
            uint64_t v521 = *(void *)&a1[v520];
            unint64_t v522 = v521 + 1;
            if (v521 == -1 || v522 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v523 = *(unsigned char *)(*(void *)&a1[*v5] + v521);
              *(void *)&a1[v520] = v522;
              v519 |= (unint64_t)(v523 & 0x7F) << v517;
              if (v523 < 0)
              {
                v517 += 7;
                BOOL v13 = v518++ >= 9;
                if (v13)
                {
                  unint64_t v519 = 0;
                  int v524 = a1[*v4];
                  goto LABEL_1185;
                }
                continue;
              }
            }
            break;
          }
          int v524 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v519 = 0;
          }
LABEL_1185:
          int v525 = v519 & 7;
          if (v524) {
            BOOL v526 = 1;
          }
          else {
            BOOL v526 = v525 == 4;
          }
          if (!v526)
          {
            switch((v519 >> 3))
            {
              case 1u:
                if ((v519 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v527 = 0;
                while (1)
                {
                  uint64_t v528 = *v2;
                  uint64_t v529 = *(void *)&a1[v528];
                  unint64_t v530 = v529 + 1;
                  if (v529 == -1 || v530 > *(void *)&a1[*v3]) {
                    goto LABEL_1238;
                  }
                  int v531 = *(char *)(*(void *)&a1[*v5] + v529);
                  *(void *)&a1[v528] = v530;
                  if (v531 < 0)
                  {
                    BOOL v32 = v527++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_1173;
                }
              case 2u:
                if ((v519 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v532 = 0;
                while (1)
                {
                  uint64_t v533 = *v2;
                  uint64_t v534 = *(void *)&a1[v533];
                  unint64_t v535 = v534 + 1;
                  if (v534 == -1 || v535 > *(void *)&a1[*v3]) {
                    goto LABEL_1238;
                  }
                  int v536 = *(char *)(*(void *)&a1[*v5] + v534);
                  *(void *)&a1[v533] = v535;
                  if (v536 < 0)
                  {
                    BOOL v32 = v532++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_1173;
                }
              case 3u:
                if (v525 == 2) {
                  goto LABEL_1240;
                }
                goto LABEL_2958;
              case 4u:
                if (v525 == 2) {
                  goto LABEL_1240;
                }
                goto LABEL_2958;
              case 5u:
                if (v525 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_1217;
              case 6u:
                if (v525 != 2 || !PBReaderPlaceMark() || !GEOStructuredAddressIsValid(a1)) {
                  goto LABEL_2958;
                }
LABEL_1217:
                PBReaderRecallMark();
                continue;
              case 7u:
                if (v525 == 2) {
                  goto LABEL_1240;
                }
                goto LABEL_2958;
              case 8u:
                if (v525 == 2) {
                  goto LABEL_1240;
                }
                goto LABEL_2958;
              case 9u:
                if ((v519 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v537 = 0;
                while (1)
                {
                  uint64_t v538 = *v2;
                  uint64_t v539 = *(void *)&a1[v538];
                  unint64_t v540 = v539 + 1;
                  if (v539 == -1 || v540 > *(void *)&a1[*v3]) {
                    goto LABEL_1238;
                  }
                  int v541 = *(char *)(*(void *)&a1[*v5] + v539);
                  *(void *)&a1[v538] = v540;
                  if (v541 < 0)
                  {
                    BOOL v32 = v537++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_1173;
                }
              case 0xAu:
                if ((v519 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v542 = 0;
                do
                {
                  uint64_t v543 = *v2;
                  uint64_t v544 = *(void *)&a1[v543];
                  unint64_t v545 = v544 + 1;
                  if (v544 == -1 || v545 > *(void *)&a1[*v3])
                  {
LABEL_1238:
                    a1[*v4] = 1;
                    goto LABEL_1173;
                  }
                  int v546 = *(char *)(*(void *)&a1[*v5] + v544);
                  *(void *)&a1[v543] = v545;
                  if ((v546 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v32 = v542++ > 8;
                }
                while (!v32);
                break;
              case 0xBu:
                if (v525 == 2) {
                  goto LABEL_1240;
                }
                goto LABEL_2958;
              default:
LABEL_1240:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
            }
            continue;
          }
          goto LABEL_2951;
        }
      case 0x12u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_1245:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2723;
            }
            char v547 = 0;
            unsigned int v548 = 0;
            unint64_t v549 = 0;
            while (2)
            {
              uint64_t v550 = *v2;
              uint64_t v551 = *(void *)&a1[v550];
              unint64_t v552 = v551 + 1;
              if (v551 == -1 || v552 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v553 = *(unsigned char *)(*(void *)&a1[*v5] + v551);
                *(void *)&a1[v550] = v552;
                v549 |= (unint64_t)(v553 & 0x7F) << v547;
                if (v553 < 0)
                {
                  v547 += 7;
                  BOOL v13 = v548++ >= 9;
                  if (v13)
                  {
                    unint64_t v549 = 0;
                    int v554 = a1[*v4];
                    goto LABEL_1257;
                  }
                  continue;
                }
              }
              break;
            }
            int v554 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v549 = 0;
            }
LABEL_1257:
            int v555 = v549 & 7;
            if (v554) {
              BOOL v556 = 1;
            }
            else {
              BOOL v556 = v555 == 4;
            }
            if (v556) {
              goto LABEL_2723;
            }
            switch((v549 >> 3))
            {
              case 1u:
                if ((v549 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v557 = 0;
                while (1)
                {
                  uint64_t v558 = *v2;
                  uint64_t v559 = *(void *)&a1[v558];
                  unint64_t v560 = v559 + 1;
                  if (v559 == -1 || v560 > *(void *)&a1[*v3]) {
                    goto LABEL_1280;
                  }
                  int v561 = *(char *)(*(void *)&a1[*v5] + v559);
                  *(void *)&a1[v558] = v560;
                  if (v561 < 0)
                  {
                    BOOL v32 = v557++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_1245;
                }
              case 2u:
                if ((v549 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v562 = 0;
                do
                {
                  uint64_t v563 = *v2;
                  uint64_t v564 = *(void *)&a1[v563];
                  unint64_t v565 = v564 + 1;
                  if (v564 == -1 || v565 > *(void *)&a1[*v3])
                  {
LABEL_1280:
                    a1[*v4] = 1;
                    goto LABEL_1245;
                  }
                  int v566 = *(char *)(*(void *)&a1[*v5] + v564);
                  *(void *)&a1[v563] = v565;
                  if ((v566 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v32 = v562++ > 8;
                }
                while (!v32);
                continue;
              case 3u:
                if (v555 == 2 && PBReaderPlaceMark() && GEOPDViewportInfoIsValid(a1)) {
                  goto LABEL_1321;
                }
                goto LABEL_2958;
              case 4u:
                if (v555 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_2958;
                }
                [a1 position];
                [a1 length];
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
            }
            break;
          }
LABEL_1288:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v567 = 0;
            unsigned int v568 = 0;
            unint64_t v569 = 0;
            while (1)
            {
              uint64_t v570 = *v2;
              uint64_t v571 = *(void *)&a1[v570];
              unint64_t v572 = v571 + 1;
              if (v571 == -1 || v572 > *(void *)&a1[*v3]) {
                break;
              }
              char v573 = *(unsigned char *)(*(void *)&a1[*v5] + v571);
              *(void *)&a1[v570] = v572;
              v569 |= (unint64_t)(v573 & 0x7F) << v567;
              if ((v573 & 0x80) == 0) {
                goto LABEL_1298;
              }
              v567 += 7;
              BOOL v13 = v568++ >= 9;
              if (v13)
              {
                unint64_t v569 = 0;
                int v574 = a1[*v4];
                goto LABEL_1300;
              }
            }
            a1[*v4] = 1;
LABEL_1298:
            int v574 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v569 = 0;
            }
LABEL_1300:
            int v575 = v569 & 7;
            if (v574 || v575 == 4) {
              break;
            }
            if ((v569 >> 3) == 2)
            {
              if ((v569 & 7) == 0)
              {
                unsigned int v577 = 0;
                do
                {
                  uint64_t v578 = *v2;
                  uint64_t v579 = *(void *)&a1[v578];
                  unint64_t v580 = v579 + 1;
                  if (v579 == -1 || v580 > *(void *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_1288;
                  }
                  int v581 = *(char *)(*(void *)&a1[*v5] + v579);
                  *(void *)&a1[v578] = v580;
                  if ((v581 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v32 = v577++ > 8;
                }
                while (!v32);
                continue;
              }
              goto LABEL_2963;
            }
            if ((v569 >> 3) == 1)
            {
              if (v575 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2963;
              }
            }
            else if (!PBReaderSkipValueWithTag())
            {
              goto LABEL_2963;
            }
          }
          int v582 = a1[*v4];
          PBReaderRecallMark();
          if (!v582)
          {
LABEL_1321:
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2958;
        }
      case 0x13u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_1325:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2951;
          }
          char v583 = 0;
          unsigned int v584 = 0;
          unint64_t v585 = 0;
          while (1)
          {
            uint64_t v586 = *v2;
            uint64_t v587 = *(void *)&a1[v586];
            unint64_t v588 = v587 + 1;
            if (v587 == -1 || v588 > *(void *)&a1[*v3]) {
              break;
            }
            char v589 = *(unsigned char *)(*(void *)&a1[*v5] + v587);
            *(void *)&a1[v586] = v588;
            v585 |= (unint64_t)(v589 & 0x7F) << v583;
            if ((v589 & 0x80) == 0) {
              goto LABEL_1335;
            }
            v583 += 7;
            BOOL v13 = v584++ >= 9;
            if (v13)
            {
              unint64_t v585 = 0;
              int v590 = a1[*v4];
              goto LABEL_1337;
            }
          }
          a1[*v4] = 1;
LABEL_1335:
          int v590 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v585 = 0;
          }
LABEL_1337:
          int v591 = v585 & 7;
          if (v590 || v591 == 4) {
            goto LABEL_2951;
          }
          unint64_t v593 = v585 >> 3;
          if ((v585 >> 3) == 3)
          {
            if (v591 == 2 && PBReaderPlaceMark() && GEOPDViewportInfoIsValid(a1))
            {
              PBReaderRecallMark();
              continue;
            }
          }
          else
          {
            if (v593 != 2)
            {
              if (v593 == 1 && v591 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
            }
            if ((v585 & 7) == 0)
            {
              unsigned int v594 = 0;
              do
              {
                uint64_t v595 = *v2;
                uint64_t v596 = *(void *)&a1[v595];
                unint64_t v597 = v596 + 1;
                if (v596 == -1 || v597 > *(void *)&a1[*v3])
                {
                  a1[*v4] = 1;
                  goto LABEL_1325;
                }
                int v598 = *(char *)(*(void *)&a1[*v5] + v596);
                *(void *)&a1[v595] = v597;
                if ((v598 & 0x80000000) == 0) {
                  break;
                }
                BOOL v32 = v594++ > 8;
              }
              while (!v32);
              continue;
            }
          }
          goto LABEL_2958;
        }
      case 0x14u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_1364:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2298;
          }
          char v599 = 0;
          unsigned int v600 = 0;
          unint64_t v601 = 0;
          while (2)
          {
            uint64_t v602 = *v2;
            uint64_t v603 = *(void *)&a1[v602];
            unint64_t v604 = v603 + 1;
            if (v603 == -1 || v604 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v605 = *(unsigned char *)(*(void *)&a1[*v5] + v603);
              *(void *)&a1[v602] = v604;
              v601 |= (unint64_t)(v605 & 0x7F) << v599;
              if (v605 < 0)
              {
                v599 += 7;
                BOOL v13 = v600++ >= 9;
                if (v13)
                {
                  unint64_t v601 = 0;
                  int v606 = a1[*v4];
                  goto LABEL_1376;
                }
                continue;
              }
            }
            break;
          }
          int v606 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v601 = 0;
          }
LABEL_1376:
          if (v606) {
            BOOL v607 = 1;
          }
          else {
            BOOL v607 = (v601 & 7) == 4;
          }
          if (!v607)
          {
            switch((v601 >> 3))
            {
              case 1u:
                if ((v601 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v608 = 0;
                while (1)
                {
                  uint64_t v609 = *v2;
                  uint64_t v610 = *(void *)&a1[v609];
                  unint64_t v611 = v610 + 1;
                  if (v610 == -1 || v611 > *(void *)&a1[*v3]) {
                    goto LABEL_1415;
                  }
                  int v612 = *(char *)(*(void *)&a1[*v5] + v610);
                  *(void *)&a1[v609] = v611;
                  if (v612 < 0)
                  {
                    BOOL v32 = v608++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_1364;
                }
              case 2u:
                if ((v601 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v613 = 0;
                while (1)
                {
                  uint64_t v614 = *v2;
                  uint64_t v615 = *(void *)&a1[v614];
                  unint64_t v616 = v615 + 1;
                  if (v615 == -1 || v616 > *(void *)&a1[*v3]) {
                    goto LABEL_1415;
                  }
                  int v617 = *(char *)(*(void *)&a1[*v5] + v615);
                  *(void *)&a1[v614] = v616;
                  if (v617 < 0)
                  {
                    BOOL v32 = v613++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_1364;
                }
              case 3u:
                if ((v601 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v618 = 0;
                while (1)
                {
                  uint64_t v619 = *v2;
                  uint64_t v620 = *(void *)&a1[v619];
                  unint64_t v621 = v620 + 1;
                  if (v620 == -1 || v621 > *(void *)&a1[*v3]) {
                    goto LABEL_1415;
                  }
                  int v622 = *(char *)(*(void *)&a1[*v5] + v620);
                  *(void *)&a1[v619] = v621;
                  if (v622 < 0)
                  {
                    BOOL v32 = v618++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_1364;
                }
              case 4u:
                if ((v601 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v623 = 0;
                do
                {
                  uint64_t v624 = *v2;
                  uint64_t v625 = *(void *)&a1[v624];
                  unint64_t v626 = v625 + 1;
                  if (v625 == -1 || v626 > *(void *)&a1[*v3])
                  {
LABEL_1415:
                    a1[*v4] = 1;
                    goto LABEL_1364;
                  }
                  int v627 = *(char *)(*(void *)&a1[*v5] + v625);
                  *(void *)&a1[v624] = v626;
                  if ((v627 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v32 = v623++ > 8;
                }
                while (!v32);
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
            }
            continue;
          }
          goto LABEL_2298;
        }
      case 0x15u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2951;
          }
          char v628 = 0;
          unsigned int v629 = 0;
          unint64_t v630 = 0;
          while (2)
          {
            uint64_t v631 = *v2;
            uint64_t v632 = *(void *)&a1[v631];
            unint64_t v633 = v632 + 1;
            if (v632 == -1 || v633 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v634 = *(unsigned char *)(*(void *)&a1[*v5] + v632);
              *(void *)&a1[v631] = v633;
              v630 |= (unint64_t)(v634 & 0x7F) << v628;
              if (v634 < 0)
              {
                v628 += 7;
                BOOL v13 = v629++ >= 9;
                if (v13)
                {
                  unint64_t v630 = 0;
                  uint64_t v635 = *v4;
                  int v636 = a1[v635];
                  goto LABEL_1431;
                }
                continue;
              }
            }
            break;
          }
          uint64_t v635 = *v4;
          int v636 = a1[v635];
          if (a1[v635]) {
            unint64_t v630 = 0;
          }
LABEL_1431:
          int v637 = v630 & 7;
          if (v636) {
            BOOL v638 = 1;
          }
          else {
            BOOL v638 = v637 == 4;
          }
          if (!v638)
          {
            switch((v630 >> 3))
            {
              case 1u:
                if (v637 != 1) {
                  goto LABEL_2958;
                }
                uint64_t v639 = *v2;
                unint64_t v640 = *(void *)&a1[v639];
                if (v640 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v641 = v640 + 8, v641 <= *(void *)&a1[*v3])) {
                  *(void *)&a1[v639] = v641;
                }
                else {
                  a1[v635] = 1;
                }
                continue;
              case 2u:
                if (v637 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1)) {
                  goto LABEL_2958;
                }
                PBReaderRecallMark();
                continue;
              case 3u:
                if (v637 == 2) {
                  goto LABEL_1447;
                }
                goto LABEL_2958;
              case 4u:
                if (v637 == 2) {
                  goto LABEL_1447;
                }
                goto LABEL_2958;
              default:
LABEL_1447:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
            }
          }
          goto LABEL_2951;
        }
      case 0x16u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_1453:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2951;
          }
          char v642 = 0;
          unsigned int v643 = 0;
          unint64_t v644 = 0;
          while (2)
          {
            uint64_t v645 = *v2;
            uint64_t v646 = *(void *)&a1[v645];
            unint64_t v647 = v646 + 1;
            if (v646 == -1 || v647 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v648 = *(unsigned char *)(*(void *)&a1[*v5] + v646);
              *(void *)&a1[v645] = v647;
              v644 |= (unint64_t)(v648 & 0x7F) << v642;
              if (v648 < 0)
              {
                v642 += 7;
                BOOL v13 = v643++ >= 9;
                if (v13)
                {
                  unint64_t v644 = 0;
                  int v649 = a1[*v4];
                  goto LABEL_1465;
                }
                continue;
              }
            }
            break;
          }
          int v649 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v644 = 0;
          }
LABEL_1465:
          int v650 = v644 & 7;
          if (v649) {
            BOOL v651 = 1;
          }
          else {
            BOOL v651 = v650 == 4;
          }
          if (v651) {
            goto LABEL_2951;
          }
          switch((v644 >> 3))
          {
            case 1u:
              if ((v644 & 7) != 0) {
                goto LABEL_2958;
              }
              unsigned int v652 = 0;
              while (1)
              {
                uint64_t v653 = *v2;
                uint64_t v654 = *(void *)&a1[v653];
                unint64_t v655 = v654 + 1;
                if (v654 == -1 || v655 > *(void *)&a1[*v3]) {
                  goto LABEL_1499;
                }
                int v656 = *(char *)(*(void *)&a1[*v5] + v654);
                *(void *)&a1[v653] = v655;
                if (v656 < 0)
                {
                  BOOL v32 = v652++ > 8;
                  if (!v32) {
                    continue;
                  }
                }
                goto LABEL_1453;
              }
            case 2u:
              if (v650 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1)) {
                goto LABEL_1483;
              }
              goto LABEL_2958;
            case 3u:
              if ((v644 & 7) != 0) {
                goto LABEL_2958;
              }
              unsigned int v657 = 0;
              while (1)
              {
                uint64_t v658 = *v2;
                uint64_t v659 = *(void *)&a1[v658];
                unint64_t v660 = v659 + 1;
                if (v659 == -1 || v660 > *(void *)&a1[*v3]) {
                  goto LABEL_1499;
                }
                int v661 = *(char *)(*(void *)&a1[*v5] + v659);
                *(void *)&a1[v658] = v660;
                if (v661 < 0)
                {
                  BOOL v32 = v657++ > 8;
                  if (!v32) {
                    continue;
                  }
                }
                goto LABEL_1453;
              }
            case 4u:
              if (v650 == 2)
              {
                if (PBReaderPlaceMark())
                {
                  while (1)
                  {
LABEL_1501:
                    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || (unsigned int v667 = a1[*v4], a1[*v4]))
                    {
LABEL_1483:
                      PBReaderRecallMark();
                      goto LABEL_1453;
                    }
                    while (1)
                    {
                      uint64_t v668 = *v2;
                      uint64_t v669 = *(void *)&a1[v668];
                      unint64_t v670 = v669 + 1;
                      if (v669 == -1 || v670 > *(void *)&a1[*v3]) {
                        break;
                      }
                      int v671 = *(char *)(*(void *)&a1[*v5] + v669);
                      *(void *)&a1[v668] = v670;
                      if (v671 < 0)
                      {
                        BOOL v13 = v667++ >= 9;
                        if (!v13) {
                          continue;
                        }
                      }
                      goto LABEL_1501;
                    }
                    a1[*v4] = 1;
                  }
                }
              }
              else if ((v644 & 7) == 0)
              {
                do
                {
                  uint64_t v662 = *v2;
                  uint64_t v663 = *(void *)&a1[v662];
                  unint64_t v664 = v663 + 1;
                  if (v663 == -1 || v664 > *(void *)&a1[*v3])
                  {
LABEL_1499:
                    a1[*v4] = 1;
                    goto LABEL_1453;
                  }
                  int v665 = *(char *)(*(void *)&a1[*v5] + v663);
                  *(void *)&a1[v662] = v664;
                  if ((v665 & 0x80000000) == 0) {
                    break;
                  }
                  unsigned int v666 = v650++;
                }
                while (v666 <= 8);
                continue;
              }
              break;
            default:
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
          }
          goto LABEL_2958;
        }
      case 0x17u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_1513:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2951;
            }
            char v672 = 0;
            unsigned int v673 = 0;
            unint64_t v674 = 0;
            while (1)
            {
              uint64_t v675 = *v2;
              uint64_t v676 = *(void *)&a1[v675];
              unint64_t v677 = v676 + 1;
              if (v676 == -1 || v677 > *(void *)&a1[*v3]) {
                break;
              }
              char v678 = *(unsigned char *)(*(void *)&a1[*v5] + v676);
              *(void *)&a1[v675] = v677;
              v674 |= (unint64_t)(v678 & 0x7F) << v672;
              if ((v678 & 0x80) == 0) {
                goto LABEL_1523;
              }
              v672 += 7;
              BOOL v13 = v673++ >= 9;
              if (v13)
              {
                unint64_t v674 = 0;
                int v679 = a1[*v4];
                goto LABEL_1525;
              }
            }
            a1[*v4] = 1;
LABEL_1523:
            int v679 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v674 = 0;
            }
LABEL_1525:
            int v680 = v674 & 7;
            if (v679 || v680 == 4) {
              goto LABEL_2951;
            }
            unint64_t v682 = v674 >> 3;
            if ((v674 >> 3) == 4)
            {
              if ((v674 & 7) != 0) {
                goto LABEL_2958;
              }
              unsigned int v688 = 0;
              while (1)
              {
                uint64_t v689 = *v2;
                uint64_t v690 = *(void *)&a1[v689];
                unint64_t v691 = v690 + 1;
                if (v690 == -1 || v691 > *(void *)&a1[*v3]) {
                  break;
                }
                int v692 = *(char *)(*(void *)&a1[*v5] + v690);
                *(void *)&a1[v689] = v691;
                if (v692 < 0)
                {
                  BOOL v32 = v688++ > 8;
                  if (!v32) {
                    continue;
                  }
                }
                goto LABEL_1513;
              }
LABEL_1548:
              a1[*v4] = 1;
              continue;
            }
            break;
          }
          if (v682 == 2)
          {
            if (v680 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
            {
              PBReaderRecallMark();
              continue;
            }
          }
          else
          {
            if (v682 != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
            }
            if ((v674 & 7) == 0)
            {
              unsigned int v683 = 0;
              while (1)
              {
                uint64_t v684 = *v2;
                uint64_t v685 = *(void *)&a1[v684];
                unint64_t v686 = v685 + 1;
                if (v685 == -1 || v686 > *(void *)&a1[*v3]) {
                  goto LABEL_1548;
                }
                int v687 = *(char *)(*(void *)&a1[*v5] + v685);
                *(void *)&a1[v684] = v686;
                if (v687 < 0)
                {
                  BOOL v32 = v683++ > 8;
                  if (!v32) {
                    continue;
                  }
                }
                goto LABEL_1513;
              }
            }
          }
          goto LABEL_2958;
        }
      case 0x19u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_1560:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2951;
          }
          char v693 = 0;
          unsigned int v694 = 0;
          unint64_t v695 = 0;
          while (1)
          {
            uint64_t v696 = *v2;
            uint64_t v697 = *(void *)&a1[v696];
            unint64_t v698 = v697 + 1;
            if (v697 == -1 || v698 > *(void *)&a1[*v3]) {
              break;
            }
            char v699 = *(unsigned char *)(*(void *)&a1[*v5] + v697);
            *(void *)&a1[v696] = v698;
            v695 |= (unint64_t)(v699 & 0x7F) << v693;
            if ((v699 & 0x80) == 0) {
              goto LABEL_1570;
            }
            v693 += 7;
            BOOL v13 = v694++ >= 9;
            if (v13)
            {
              unint64_t v695 = 0;
              int v700 = a1[*v4];
              goto LABEL_1572;
            }
          }
          a1[*v4] = 1;
LABEL_1570:
          int v700 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v695 = 0;
          }
LABEL_1572:
          int v701 = v695 & 7;
          if (v700 || v701 == 4) {
            goto LABEL_2951;
          }
          if ((v695 >> 3) == 2)
          {
            if (v701 == 2)
            {
              if (!PBReaderPlaceMark()) {
                goto LABEL_2958;
              }
LABEL_1592:
              while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
              {
                unsigned int v708 = a1[*v4];
                if (a1[*v4]) {
                  break;
                }
                while (1)
                {
                  uint64_t v709 = *v2;
                  uint64_t v710 = *(void *)&a1[v709];
                  unint64_t v711 = v710 + 1;
                  if (v710 == -1 || v711 > *(void *)&a1[*v3]) {
                    break;
                  }
                  int v712 = *(char *)(*(void *)&a1[*v5] + v710);
                  *(void *)&a1[v709] = v711;
                  if (v712 < 0)
                  {
                    BOOL v13 = v708++ >= 9;
                    if (!v13) {
                      continue;
                    }
                  }
                  goto LABEL_1592;
                }
                a1[*v4] = 1;
              }
LABEL_1581:
              PBReaderRecallMark();
              continue;
            }
            if ((v695 & 7) == 0)
            {
              do
              {
                uint64_t v703 = *v2;
                uint64_t v704 = *(void *)&a1[v703];
                unint64_t v705 = v704 + 1;
                if (v704 == -1 || v705 > *(void *)&a1[*v3])
                {
                  a1[*v4] = 1;
                  goto LABEL_1560;
                }
                int v706 = *(char *)(*(void *)&a1[*v5] + v704);
                *(void *)&a1[v703] = v705;
                if ((v706 & 0x80000000) == 0) {
                  break;
                }
                unsigned int v707 = v701++;
              }
              while (v707 <= 8);
              continue;
            }
          }
          else
          {
            if ((v695 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
            }
            if (v701 == 2 && PBReaderPlaceMark() && GEOLocationIsValid(a1)) {
              goto LABEL_1581;
            }
          }
          goto LABEL_2958;
        }
      case 0x1Eu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v713 = 0;
          unsigned int v714 = 0;
          unint64_t v715 = 0;
          while (1)
          {
            uint64_t v716 = *v2;
            uint64_t v717 = *(void *)&a1[v716];
            unint64_t v718 = v717 + 1;
            if (v717 == -1 || v718 > *(void *)&a1[*v3]) {
              break;
            }
            char v719 = *(unsigned char *)(*(void *)&a1[*v5] + v717);
            *(void *)&a1[v716] = v718;
            v715 |= (unint64_t)(v719 & 0x7F) << v713;
            if ((v719 & 0x80) == 0) {
              goto LABEL_1615;
            }
            v713 += 7;
            BOOL v13 = v714++ >= 9;
            if (v13)
            {
              unint64_t v715 = 0;
              int v720 = a1[*v4];
              goto LABEL_1617;
            }
          }
          a1[*v4] = 1;
LABEL_1615:
          int v720 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v715 = 0;
          }
LABEL_1617:
          int v721 = v715 & 7;
          if (v720 || v721 == 4) {
            break;
          }
          if ((v715 >> 3) != 1)
          {
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_2958;
            }
            continue;
          }
          if (v721 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2958;
          }
        }
        goto LABEL_2298;
      case 0x20u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_1630:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v723 = 0;
          unsigned int v724 = 0;
          unint64_t v725 = 0;
          while (2)
          {
            uint64_t v726 = *v2;
            uint64_t v727 = *(void *)&a1[v726];
            unint64_t v728 = v727 + 1;
            if (v727 == -1 || v728 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v729 = *(unsigned char *)(*(void *)&a1[*v5] + v727);
              *(void *)&a1[v726] = v728;
              v725 |= (unint64_t)(v729 & 0x7F) << v723;
              if (v729 < 0)
              {
                v723 += 7;
                BOOL v13 = v724++ >= 9;
                if (v13)
                {
                  unint64_t v725 = 0;
                  int v730 = a1[*v4];
                  goto LABEL_1642;
                }
                continue;
              }
            }
            break;
          }
          int v730 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v725 = 0;
          }
LABEL_1642:
          int v731 = v725 & 7;
          if (v730) {
            BOOL v732 = 1;
          }
          else {
            BOOL v732 = v731 == 4;
          }
          if (!v732)
          {
            if ((v725 >> 3) == 2)
            {
              if ((v725 & 7) == 0)
              {
                unsigned int v784 = 0;
                do
                {
                  uint64_t v785 = *v2;
                  uint64_t v786 = *(void *)&a1[v785];
                  unint64_t v787 = v786 + 1;
                  if (v786 == -1 || v787 > *(void *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_1630;
                  }
                  int v788 = *(char *)(*(void *)&a1[*v5] + v786);
                  *(void *)&a1[v785] = v787;
                  if ((v788 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v32 = v784++ > 8;
                }
                while (!v32);
                continue;
              }
            }
            else
            {
              if ((v725 >> 3) != 1)
              {
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
              }
              if (v731 == 2)
              {
                uint64_t v1256 = 0;
                uint64_t v1257 = 0;
                if (PBReaderPlaceMark())
                {
                  [a1 position];
                  [a1 length];
LABEL_1651:
                  while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
                  {
                    char v733 = 0;
                    unsigned int v734 = 0;
                    unint64_t v735 = 0;
                    while (1)
                    {
                      uint64_t v736 = *v2;
                      uint64_t v737 = *(void *)&a1[v736];
                      unint64_t v738 = v737 + 1;
                      if (v737 == -1 || v738 > *(void *)&a1[*v3]) {
                        break;
                      }
                      char v739 = *(unsigned char *)(*(void *)&a1[*v5] + v737);
                      *(void *)&a1[v736] = v738;
                      v735 |= (unint64_t)(v739 & 0x7F) << v733;
                      if ((v739 & 0x80) == 0) {
                        goto LABEL_1661;
                      }
                      v733 += 7;
                      BOOL v13 = v734++ >= 9;
                      if (v13)
                      {
                        unint64_t v735 = 0;
                        int v740 = a1[*v4];
                        goto LABEL_1663;
                      }
                    }
                    a1[*v4] = 1;
LABEL_1661:
                    int v740 = a1[*v4];
                    if (a1[*v4]) {
                      unint64_t v735 = 0;
                    }
LABEL_1663:
                    int v741 = v735 & 7;
                    if (v740 || v741 == 4) {
                      break;
                    }
                    switch((v735 >> 3))
                    {
                      case 1u:
                        if (v741 == 2 && PBReaderPlaceMark() && GEOLocationIsValid(a1)) {
                          goto LABEL_1748;
                        }
                        goto LABEL_2966;
                      case 2u:
                        if (v741 != 2 || !PBReaderPlaceMark()) {
                          goto LABEL_2966;
                        }
                        [a1 position];
                        [a1 length];
LABEL_1677:
                        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
                        {
                          char v743 = 0;
                          unsigned int v744 = 0;
                          unint64_t v745 = 0;
                          while (2)
                          {
                            uint64_t v746 = *v2;
                            uint64_t v747 = *(void *)&a1[v746];
                            unint64_t v748 = v747 + 1;
                            if (v747 == -1 || v748 > *(void *)&a1[*v3])
                            {
                              a1[*v4] = 1;
                            }
                            else
                            {
                              char v749 = *(unsigned char *)(*(void *)&a1[*v5] + v747);
                              *(void *)&a1[v746] = v748;
                              v745 |= (unint64_t)(v749 & 0x7F) << v743;
                              if (v749 < 0)
                              {
                                v743 += 7;
                                BOOL v13 = v744++ >= 9;
                                if (v13)
                                {
                                  unint64_t v745 = 0;
                                  int v750 = a1[*v4];
                                  goto LABEL_1689;
                                }
                                continue;
                              }
                            }
                            break;
                          }
                          int v750 = a1[*v4];
                          if (a1[*v4]) {
                            unint64_t v745 = 0;
                          }
LABEL_1689:
                          int v751 = v745 & 7;
                          if (v750) {
                            BOOL v752 = 1;
                          }
                          else {
                            BOOL v752 = v751 == 4;
                          }
                          if (!v752)
                          {
                            switch((v745 >> 3))
                            {
                              case 1u:
                                if (v751 == 2) {
                                  goto LABEL_1695;
                                }
                                goto LABEL_2965;
                              case 2u:
                                if ((v745 & 7) != 0) {
                                  goto LABEL_2965;
                                }
                                unsigned int v753 = 0;
                                while (1)
                                {
                                  uint64_t v754 = *v2;
                                  uint64_t v755 = *(void *)&a1[v754];
                                  unint64_t v756 = v755 + 1;
                                  if (v755 == -1 || v756 > *(void *)&a1[*v3]) {
                                    goto LABEL_1729;
                                  }
                                  int v757 = *(char *)(*(void *)&a1[*v5] + v755);
                                  *(void *)&a1[v754] = v756;
                                  if (v757 < 0)
                                  {
                                    BOOL v32 = v753++ > 8;
                                    if (!v32) {
                                      continue;
                                    }
                                  }
                                  goto LABEL_1677;
                                }
                              case 3u:
                                if ((v745 & 7) != 0) {
                                  goto LABEL_2965;
                                }
                                unsigned int v758 = 0;
                                while (1)
                                {
                                  uint64_t v759 = *v2;
                                  uint64_t v760 = *(void *)&a1[v759];
                                  unint64_t v761 = v760 + 1;
                                  if (v760 == -1 || v761 > *(void *)&a1[*v3]) {
                                    goto LABEL_1729;
                                  }
                                  int v762 = *(char *)(*(void *)&a1[*v5] + v760);
                                  *(void *)&a1[v759] = v761;
                                  if (v762 < 0)
                                  {
                                    BOOL v32 = v758++ > 8;
                                    if (!v32) {
                                      continue;
                                    }
                                  }
                                  goto LABEL_1677;
                                }
                              case 4u:
                                if ((v745 & 7) != 0) {
                                  goto LABEL_2965;
                                }
                                unsigned int v763 = 0;
                                while (1)
                                {
                                  uint64_t v764 = *v2;
                                  uint64_t v765 = *(void *)&a1[v764];
                                  unint64_t v766 = v765 + 1;
                                  if (v765 == -1 || v766 > *(void *)&a1[*v3]) {
                                    goto LABEL_1729;
                                  }
                                  int v767 = *(char *)(*(void *)&a1[*v5] + v765);
                                  *(void *)&a1[v764] = v766;
                                  if (v767 < 0)
                                  {
                                    BOOL v32 = v763++ > 8;
                                    if (!v32) {
                                      continue;
                                    }
                                  }
                                  goto LABEL_1677;
                                }
                              case 5u:
                                if ((v745 & 7) != 0) {
                                  goto LABEL_2965;
                                }
                                unsigned int v768 = 0;
                                do
                                {
                                  uint64_t v769 = *v2;
                                  uint64_t v770 = *(void *)&a1[v769];
                                  unint64_t v771 = v770 + 1;
                                  if (v770 == -1 || v771 > *(void *)&a1[*v3])
                                  {
LABEL_1729:
                                    a1[*v4] = 1;
                                    goto LABEL_1677;
                                  }
                                  int v772 = *(char *)(*(void *)&a1[*v5] + v770);
                                  *(void *)&a1[v769] = v771;
                                  if ((v772 & 0x80000000) == 0) {
                                    break;
                                  }
                                  BOOL v32 = v768++ > 8;
                                }
                                while (!v32);
                                break;
                              default:
LABEL_1695:
                                if (PBReaderSkipValueWithTag()) {
                                  continue;
                                }
LABEL_2965:
                                PBReaderRecallMark();
                                goto LABEL_2966;
                            }
                            continue;
                          }
                          break;
                        }
                        int v783 = a1[*v4];
                        PBReaderRecallMark();
                        if (v783)
                        {
LABEL_2966:
                          PBReaderRecallMark();
                          goto LABEL_2958;
                        }
LABEL_1748:
                        PBReaderRecallMark();
                        break;
                      case 3u:
                        if ((v735 & 7) != 0) {
                          goto LABEL_2966;
                        }
                        unsigned int v773 = 0;
                        while (1)
                        {
                          uint64_t v774 = *v2;
                          uint64_t v775 = *(void *)&a1[v774];
                          unint64_t v776 = v775 + 1;
                          if (v775 == -1 || v776 > *(void *)&a1[*v3]) {
                            goto LABEL_1746;
                          }
                          int v777 = *(char *)(*(void *)&a1[*v5] + v775);
                          *(void *)&a1[v774] = v776;
                          if (v777 < 0)
                          {
                            BOOL v32 = v773++ > 8;
                            if (!v32) {
                              continue;
                            }
                          }
                          goto LABEL_1651;
                        }
                      case 4u:
                        if ((v735 & 7) != 0) {
                          goto LABEL_2966;
                        }
                        unsigned int v778 = 0;
                        while (1)
                        {
                          uint64_t v779 = *v2;
                          uint64_t v780 = *(void *)&a1[v779];
                          unint64_t v781 = v780 + 1;
                          if (v780 == -1 || v781 > *(void *)&a1[*v3]) {
                            break;
                          }
                          int v782 = *(char *)(*(void *)&a1[*v5] + v780);
                          *(void *)&a1[v779] = v781;
                          if (v782 < 0)
                          {
                            BOOL v32 = v778++ > 8;
                            if (!v32) {
                              continue;
                            }
                          }
                          goto LABEL_1651;
                        }
LABEL_1746:
                        a1[*v4] = 1;
                        continue;
                      default:
                        if ((PBReaderSkipValueWithTag() & 1) == 0) {
                          goto LABEL_2966;
                        }
                        continue;
                    }
                  }
                  int v789 = a1[*v4];
                  PBReaderRecallMark();
                  if (!v789)
                  {
                    PBReaderRecallMark();
                    continue;
                  }
                }
              }
            }
            goto LABEL_2958;
          }
          break;
        }
        int v1253 = a1[*v4];
        PBReaderRecallMark();
        if (v1253) {
          goto LABEL_2959;
        }
LABEL_2952:
        PBReaderRecallMark();
LABEL_2953:
        if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
          goto LABEL_2957;
        }
        continue;
      case 0x22u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v790 = 0;
          unsigned int v791 = 0;
          unint64_t v792 = 0;
          while (1)
          {
            uint64_t v793 = *v2;
            uint64_t v794 = *(void *)&a1[v793];
            unint64_t v795 = v794 + 1;
            if (v794 == -1 || v795 > *(void *)&a1[*v3]) {
              break;
            }
            char v796 = *(unsigned char *)(*(void *)&a1[*v5] + v794);
            *(void *)&a1[v793] = v795;
            v792 |= (unint64_t)(v796 & 0x7F) << v790;
            if ((v796 & 0x80) == 0) {
              goto LABEL_1775;
            }
            v790 += 7;
            BOOL v13 = v791++ >= 9;
            if (v13)
            {
              unint64_t v792 = 0;
              int v797 = a1[*v4];
              goto LABEL_1777;
            }
          }
          a1[*v4] = 1;
LABEL_1775:
          int v797 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v792 = 0;
          }
LABEL_1777:
          int v798 = v792 & 7;
          if (v797 || v798 == 4) {
            break;
          }
          if ((v792 >> 3) != 1)
          {
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_2958;
            }
            continue;
          }
          if (v798 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2958;
          }
        }
        goto LABEL_2298;
      case 0x23u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_1790:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2951;
          }
          char v800 = 0;
          unsigned int v801 = 0;
          unint64_t v802 = 0;
          while (2)
          {
            uint64_t v803 = *v2;
            uint64_t v804 = *(void *)&a1[v803];
            unint64_t v805 = v804 + 1;
            if (v804 == -1 || v805 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v806 = *(unsigned char *)(*(void *)&a1[*v5] + v804);
              *(void *)&a1[v803] = v805;
              v802 |= (unint64_t)(v806 & 0x7F) << v800;
              if (v806 < 0)
              {
                v800 += 7;
                BOOL v13 = v801++ >= 9;
                if (v13)
                {
                  unint64_t v802 = 0;
                  int v807 = a1[*v4];
                  goto LABEL_1802;
                }
                continue;
              }
            }
            break;
          }
          int v807 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v802 = 0;
          }
LABEL_1802:
          int v808 = v802 & 7;
          if (v807) {
            BOOL v809 = 1;
          }
          else {
            BOOL v809 = v808 == 4;
          }
          if (v809) {
            goto LABEL_2951;
          }
          if ((v802 >> 3) == 2)
          {
            if (v808 == 2 && PBReaderPlaceMark() && GEOLocationIsValid(a1))
            {
              PBReaderRecallMark();
              continue;
            }
          }
          else
          {
            if ((v802 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
            }
            if ((v802 & 7) == 0)
            {
              unsigned int v810 = 0;
              do
              {
                uint64_t v811 = *v2;
                uint64_t v812 = *(void *)&a1[v811];
                unint64_t v813 = v812 + 1;
                if (v812 == -1 || v813 > *(void *)&a1[*v3])
                {
                  a1[*v4] = 1;
                  goto LABEL_1790;
                }
                int v814 = *(char *)(*(void *)&a1[*v5] + v812);
                *(void *)&a1[v811] = v813;
                if ((v814 & 0x80000000) == 0) {
                  break;
                }
                BOOL v32 = v810++ > 8;
              }
              while (!v32);
              continue;
            }
          }
          goto LABEL_2958;
        }
      case 0x24u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2951;
            }
            char v815 = 0;
            unsigned int v816 = 0;
            unint64_t v817 = 0;
            while (2)
            {
              uint64_t v818 = *v2;
              uint64_t v819 = *(void *)&a1[v818];
              unint64_t v820 = v819 + 1;
              if (v819 == -1 || v820 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v821 = *(unsigned char *)(*(void *)&a1[*v5] + v819);
                *(void *)&a1[v818] = v820;
                v817 |= (unint64_t)(v821 & 0x7F) << v815;
                if (v821 < 0)
                {
                  v815 += 7;
                  BOOL v13 = v816++ >= 9;
                  if (v13)
                  {
                    unint64_t v817 = 0;
                    int v822 = a1[*v4];
                    goto LABEL_1838;
                  }
                  continue;
                }
              }
              break;
            }
            int v822 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v817 = 0;
            }
LABEL_1838:
            int v823 = v817 & 7;
            if (v822) {
              BOOL v824 = 1;
            }
            else {
              BOOL v824 = v823 == 4;
            }
            if (v824) {
              goto LABEL_2951;
            }
            if ((v817 >> 3) == 2)
            {
              if (v823 != 2 || !PBReaderPlaceMark() || !GEOPDSpatialEventLookupParametersIsValid(a1)) {
                goto LABEL_2958;
              }
            }
            else
            {
              if ((v817 >> 3) != 1)
              {
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
              }
              if (v823 != 2 || !PBReaderPlaceMark() || !GEOPDSpatialPlaceLookupParametersIsValid(a1)) {
                goto LABEL_2958;
              }
            }
            break;
          }
          PBReaderRecallMark();
          continue;
        }
      case 0x25u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_1857:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2951;
            }
            char v825 = 0;
            unsigned int v826 = 0;
            unint64_t v827 = 0;
            while (2)
            {
              uint64_t v828 = *v2;
              uint64_t v829 = *(void *)&a1[v828];
              unint64_t v830 = v829 + 1;
              if (v829 == -1 || v830 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v831 = *(unsigned char *)(*(void *)&a1[*v5] + v829);
                *(void *)&a1[v828] = v830;
                v827 |= (unint64_t)(v831 & 0x7F) << v825;
                if (v831 < 0)
                {
                  v825 += 7;
                  BOOL v13 = v826++ >= 9;
                  if (v13)
                  {
                    unint64_t v827 = 0;
                    int v832 = a1[*v4];
                    goto LABEL_1869;
                  }
                  continue;
                }
              }
              break;
            }
            int v832 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v827 = 0;
            }
LABEL_1869:
            int v833 = v827 & 7;
            if (v832) {
              BOOL v834 = 1;
            }
            else {
              BOOL v834 = v833 == 4;
            }
            if (v834) {
              goto LABEL_2951;
            }
            if ((v827 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
            }
            break;
          }
          if (v833 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_2958;
            }
            while (1)
            {
LABEL_1884:
              if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || (unsigned int v840 = a1[*v4], a1[*v4]))
              {
                PBReaderRecallMark();
                goto LABEL_1857;
              }
              while (1)
              {
                uint64_t v841 = *v2;
                uint64_t v842 = *(void *)&a1[v841];
                unint64_t v843 = v842 + 1;
                if (v842 == -1 || v843 > *(void *)&a1[*v3]) {
                  break;
                }
                int v844 = *(char *)(*(void *)&a1[*v5] + v842);
                *(void *)&a1[v841] = v843;
                if (v844 < 0)
                {
                  BOOL v13 = v840++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_1884;
              }
              a1[*v4] = 1;
            }
          }
          if ((v827 & 7) == 0)
          {
            do
            {
              uint64_t v835 = *v2;
              uint64_t v836 = *(void *)&a1[v835];
              unint64_t v837 = v836 + 1;
              if (v836 == -1 || v837 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_1857;
              }
              int v838 = *(char *)(*(void *)&a1[*v5] + v836);
              *(void *)&a1[v835] = v837;
              if ((v838 & 0x80000000) == 0) {
                break;
              }
              unsigned int v839 = v833++;
            }
            while (v839 <= 8);
            continue;
          }
          goto LABEL_2958;
        }
      case 0x26u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2951;
            }
            char v845 = 0;
            unsigned int v846 = 0;
            unint64_t v847 = 0;
            while (2)
            {
              uint64_t v848 = *v2;
              uint64_t v849 = *(void *)&a1[v848];
              unint64_t v850 = v849 + 1;
              if (v849 == -1 || v850 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v851 = *(unsigned char *)(*(void *)&a1[*v5] + v849);
                *(void *)&a1[v848] = v850;
                v847 |= (unint64_t)(v851 & 0x7F) << v845;
                if (v851 < 0)
                {
                  v845 += 7;
                  BOOL v13 = v846++ >= 9;
                  if (v13)
                  {
                    unint64_t v847 = 0;
                    int v852 = a1[*v4];
                    goto LABEL_1910;
                  }
                  continue;
                }
              }
              break;
            }
            int v852 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v847 = 0;
            }
LABEL_1910:
            int v853 = v847 & 7;
            if (v852) {
              BOOL v854 = 1;
            }
            else {
              BOOL v854 = v853 == 4;
            }
            if (v854) {
              goto LABEL_2951;
            }
            if ((v847 >> 3) == 2)
            {
              if (v853 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
                goto LABEL_2958;
              }
            }
            else
            {
              if ((v847 >> 3) != 1)
              {
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
              }
              if (v853 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
                goto LABEL_2958;
              }
            }
            break;
          }
          PBReaderRecallMark();
          continue;
        }
      case 0x27u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitScheduleLookupParametersIsValid(a1)) {
          goto LABEL_2959;
        }
        goto LABEL_2952;
      case 0x28u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2951;
            }
            char v855 = 0;
            unsigned int v856 = 0;
            unint64_t v857 = 0;
            while (2)
            {
              uint64_t v858 = *v2;
              uint64_t v859 = *(void *)&a1[v858];
              unint64_t v860 = v859 + 1;
              if (v859 == -1 || v860 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v861 = *(unsigned char *)(*(void *)&a1[*v5] + v859);
                *(void *)&a1[v858] = v860;
                v857 |= (unint64_t)(v861 & 0x7F) << v855;
                if (v861 < 0)
                {
                  v855 += 7;
                  BOOL v13 = v856++ >= 9;
                  if (v13)
                  {
                    unint64_t v857 = 0;
                    int v862 = a1[*v4];
                    goto LABEL_1945;
                  }
                  continue;
                }
              }
              break;
            }
            int v862 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v857 = 0;
            }
LABEL_1945:
            int v863 = v857 & 7;
            if (v862) {
              BOOL v864 = 1;
            }
            else {
              BOOL v864 = v863 == 4;
            }
            if (v864) {
              goto LABEL_2951;
            }
            if ((v857 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
            }
            break;
          }
          if (v863 == 2 && PBReaderPlaceMark() && GEOPDCategoryLookupParametersIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2958;
        }
      case 0x29u:
        if (v15 != 2) {
          goto LABEL_2959;
        }
        uint64_t v1256 = 0;
        uint64_t v1257 = 0;
        if (!PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2801;
            }
            char v865 = 0;
            unsigned int v866 = 0;
            unint64_t v867 = 0;
            while (2)
            {
              uint64_t v868 = *v2;
              uint64_t v869 = *(void *)&a1[v868];
              unint64_t v870 = v869 + 1;
              if (v869 == -1 || v870 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v871 = *(unsigned char *)(*(void *)&a1[*v5] + v869);
                *(void *)&a1[v868] = v870;
                v867 |= (unint64_t)(v871 & 0x7F) << v865;
                if (v871 < 0)
                {
                  v865 += 7;
                  BOOL v13 = v866++ >= 9;
                  if (v13)
                  {
                    unint64_t v867 = 0;
                    int v872 = a1[*v4];
                    goto LABEL_1971;
                  }
                  continue;
                }
              }
              break;
            }
            int v872 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v867 = 0;
            }
LABEL_1971:
            int v873 = v867 & 7;
            if (v872) {
              BOOL v874 = 1;
            }
            else {
              BOOL v874 = v873 == 4;
            }
            if (v874) {
              goto LABEL_2801;
            }
            if ((v867 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
            }
            break;
          }
          if (v873 == 2 && PBReaderPlaceMark())
          {
            [a1 position];
            [a1 length];
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
            {
              char v875 = 0;
              unsigned int v876 = 0;
              unint64_t v877 = 0;
              while (1)
              {
                uint64_t v878 = *v2;
                uint64_t v879 = *(void *)&a1[v878];
                unint64_t v880 = v879 + 1;
                if (v879 == -1 || v880 > *(void *)&a1[*v3]) {
                  break;
                }
                char v881 = *(unsigned char *)(*(void *)&a1[*v5] + v879);
                *(void *)&a1[v878] = v880;
                v877 |= (unint64_t)(v881 & 0x7F) << v875;
                if ((v881 & 0x80) == 0) {
                  goto LABEL_1989;
                }
                v875 += 7;
                BOOL v13 = v876++ >= 9;
                if (v13)
                {
                  unint64_t v877 = 0;
                  int v882 = a1[*v4];
                  goto LABEL_1991;
                }
              }
              a1[*v4] = 1;
LABEL_1989:
              int v882 = a1[*v4];
              if (a1[*v4]) {
                unint64_t v877 = 0;
              }
LABEL_1991:
              int v883 = v877 & 7;
              if (v882 || v883 == 4) {
                break;
              }
              switch((v877 >> 3))
              {
                case 1u:
                  if (v883 == 2) {
                    goto LABEL_2011;
                  }
                  goto LABEL_2961;
                case 2u:
                  if (v883 == 2) {
                    goto LABEL_2011;
                  }
                  goto LABEL_2961;
                case 3u:
                  if (v883 != 2 || !PBReaderPlaceMark() || !GEOPDWarsawMerchantIdentifierIsValid(a1)) {
                    goto LABEL_2961;
                  }
                  goto LABEL_2016;
                case 4u:
                  if (v883 != 2 || !PBReaderPlaceMark() || !GEOPDAdamAppIdentifierIsValid(a1)) {
                    goto LABEL_2961;
                  }
                  goto LABEL_2016;
                case 5u:
                  if (v883 == 2) {
                    goto LABEL_2011;
                  }
                  goto LABEL_2961;
                case 6u:
                  if (v883 == 2) {
                    goto LABEL_2011;
                  }
                  goto LABEL_2961;
                case 7u:
                  if (v883 != 2 || !PBReaderPlaceMark() || !GEOPDAdamAppIdentifierIsValid(a1)) {
                    goto LABEL_2961;
                  }
LABEL_2016:
                  PBReaderRecallMark();
                  break;
                default:
LABEL_2011:
                  if ((PBReaderSkipValueWithTag() & 1) == 0) {
                    goto LABEL_2961;
                  }
                  continue;
              }
            }
            int v885 = a1[*v4];
            PBReaderRecallMark();
            if (!v885)
            {
              PBReaderRecallMark();
              continue;
            }
          }
          goto LABEL_2958;
        }
      case 0x2Au:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_2024:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2298;
            }
            char v886 = 0;
            unsigned int v887 = 0;
            unint64_t v888 = 0;
            while (1)
            {
              uint64_t v889 = *v2;
              uint64_t v890 = *(void *)&a1[v889];
              unint64_t v891 = v890 + 1;
              if (v890 == -1 || v891 > *(void *)&a1[*v3]) {
                break;
              }
              char v892 = *(unsigned char *)(*(void *)&a1[*v5] + v890);
              *(void *)&a1[v889] = v891;
              v888 |= (unint64_t)(v892 & 0x7F) << v886;
              if ((v892 & 0x80) == 0) {
                goto LABEL_2034;
              }
              v886 += 7;
              BOOL v13 = v887++ >= 9;
              if (v13)
              {
                unint64_t v888 = 0;
                int v893 = a1[*v4];
                goto LABEL_2036;
              }
            }
            a1[*v4] = 1;
LABEL_2034:
            int v893 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v888 = 0;
            }
LABEL_2036:
            int v894 = v888 & 7;
            if (v893 || v894 == 4) {
              goto LABEL_2298;
            }
            if ((v888 >> 3) != 2)
            {
              if ((v888 >> 3) != 1)
              {
                if (!PBReaderSkipValueWithTag()) {
                  goto LABEL_2958;
                }
                continue;
              }
              if (v894 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
            }
            break;
          }
          if ((v888 & 7) == 0)
          {
            unsigned int v896 = 0;
            do
            {
              uint64_t v897 = *v2;
              uint64_t v898 = *(void *)&a1[v897];
              unint64_t v899 = v898 + 1;
              if (v898 == -1 || v899 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_2024;
              }
              int v900 = *(char *)(*(void *)&a1[*v5] + v898);
              *(void *)&a1[v897] = v899;
              if ((v900 & 0x80000000) == 0) {
                break;
              }
              BOOL v32 = v896++ > 8;
            }
            while (!v32);
            continue;
          }
          goto LABEL_2958;
        }
      case 0x2Bu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDCollectionSuggestionParametersIsValid(a1)) {
          goto LABEL_2959;
        }
        goto LABEL_2952;
      case 0x2Cu:
        if (v15 != 2) {
          goto LABEL_2959;
        }
        uint64_t v1256 = 0;
        uint64_t v1257 = 0;
        if (!PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_2063:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2801;
          }
          char v901 = 0;
          unsigned int v902 = 0;
          unint64_t v903 = 0;
          while (2)
          {
            uint64_t v904 = *v2;
            uint64_t v905 = *(void *)&a1[v904];
            unint64_t v906 = v905 + 1;
            if (v905 == -1 || v906 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v907 = *(unsigned char *)(*(void *)&a1[*v5] + v905);
              *(void *)&a1[v904] = v906;
              v903 |= (unint64_t)(v907 & 0x7F) << v901;
              if (v907 < 0)
              {
                v901 += 7;
                BOOL v13 = v902++ >= 9;
                if (v13)
                {
                  unint64_t v903 = 0;
                  int v908 = a1[*v4];
                  goto LABEL_2075;
                }
                continue;
              }
            }
            break;
          }
          int v908 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v903 = 0;
          }
LABEL_2075:
          int v909 = v903 & 7;
          if (v908) {
            BOOL v910 = 1;
          }
          else {
            BOOL v910 = v909 == 4;
          }
          if (v910) {
            goto LABEL_2801;
          }
          switch((v903 >> 3))
          {
            case 1u:
              if (v909 == 2)
              {
                if (!PBReaderPlaceMark()) {
                  goto LABEL_2958;
                }
LABEL_2167:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                {
                  unsigned int v938 = a1[*v4];
                  if (a1[*v4]) {
                    break;
                  }
                  while (1)
                  {
                    uint64_t v939 = *v2;
                    uint64_t v940 = *(void *)&a1[v939];
                    unint64_t v941 = v940 + 1;
                    if (v940 == -1 || v941 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v942 = *(char *)(*(void *)&a1[*v5] + v940);
                    *(void *)&a1[v939] = v941;
                    if (v942 < 0)
                    {
                      BOOL v13 = v938++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_2167;
                  }
                  a1[*v4] = 1;
                }
LABEL_2165:
                PBReaderRecallMark();
                continue;
              }
              if ((v903 & 7) == 0)
              {
                do
                {
                  uint64_t v911 = *v2;
                  uint64_t v912 = *(void *)&a1[v911];
                  unint64_t v913 = v912 + 1;
                  if (v912 == -1 || v913 > *(void *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_2063;
                  }
                  int v914 = *(char *)(*(void *)&a1[*v5] + v912);
                  *(void *)&a1[v911] = v913;
                  if ((v914 & 0x80000000) == 0) {
                    break;
                  }
                  unsigned int v915 = v909++;
                }
                while (v915 <= 8);
                continue;
              }
              break;
            case 2u:
              if (v909 != 2
                || !PBReaderPlaceMark()
                || !GEOPDSearchBrowseCategorySuggestionParametersIsValid(a1))
              {
                goto LABEL_2958;
              }
              goto LABEL_2165;
            case 3u:
              if (v909 != 2 || !PBReaderPlaceMark() || !GEOPDCollectionSuggestionParametersIsValid(a1)) {
                goto LABEL_2958;
              }
              goto LABEL_2165;
            case 4u:
              if (v909 != 2 || !PBReaderPlaceMark() || !GEOPDPublisherSuggestionParametersIsValid(a1)) {
                goto LABEL_2958;
              }
              goto LABEL_2165;
            case 5u:
              if (v909 != 2 || !PBReaderPlaceMark()) {
                goto LABEL_2958;
              }
              [a1 position];
              [a1 length];
              while (1)
              {
                if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
                  goto LABEL_2160;
                }
                char v916 = 0;
                unsigned int v917 = 0;
                unint64_t v918 = 0;
                while (1)
                {
                  uint64_t v919 = *v2;
                  uint64_t v920 = *(void *)&a1[v919];
                  unint64_t v921 = v920 + 1;
                  if (v920 == -1 || v921 > *(void *)&a1[*v3]) {
                    break;
                  }
                  char v922 = *(unsigned char *)(*(void *)&a1[*v5] + v920);
                  *(void *)&a1[v919] = v921;
                  v918 |= (unint64_t)(v922 & 0x7F) << v916;
                  if ((v922 & 0x80) == 0) {
                    goto LABEL_2114;
                  }
                  v916 += 7;
                  BOOL v13 = v917++ >= 9;
                  if (v13)
                  {
                    unint64_t v918 = 0;
                    int v923 = a1[*v4];
                    goto LABEL_2116;
                  }
                }
                a1[*v4] = 1;
LABEL_2114:
                int v923 = a1[*v4];
                if (a1[*v4]) {
                  unint64_t v918 = 0;
                }
LABEL_2116:
                int v924 = v918 & 7;
                if (v923 || v924 == 4) {
                  goto LABEL_2160;
                }
                unint64_t v926 = v918 >> 3;
                if ((v918 >> 3) == 3) {
                  break;
                }
                if (v926 == 2)
                {
                  if (v924 != 2) {
                    goto LABEL_2961;
                  }
                }
                else if (v926 == 1)
                {
                  if (v924 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
                    goto LABEL_2961;
                  }
LABEL_2130:
                  PBReaderRecallMark();
                  continue;
                }
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2961;
                }
              }
              if (v924 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
                goto LABEL_2961;
              }
              goto LABEL_2130;
            case 6u:
              if (v909 != 2 || !PBReaderPlaceMark()) {
                goto LABEL_2958;
              }
              [a1 position];
              [a1 length];
              while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
              {
                char v927 = 0;
                unsigned int v928 = 0;
                unint64_t v929 = 0;
                while (1)
                {
                  uint64_t v930 = *v2;
                  uint64_t v931 = *(void *)&a1[v930];
                  unint64_t v932 = v931 + 1;
                  if (v931 == -1 || v932 > *(void *)&a1[*v3]) {
                    break;
                  }
                  char v933 = *(unsigned char *)(*(void *)&a1[*v5] + v931);
                  *(void *)&a1[v930] = v932;
                  v929 |= (unint64_t)(v933 & 0x7F) << v927;
                  if ((v933 & 0x80) == 0) {
                    goto LABEL_2147;
                  }
                  v927 += 7;
                  BOOL v13 = v928++ >= 9;
                  if (v13)
                  {
                    unint64_t v929 = 0;
                    int v934 = a1[*v4];
                    goto LABEL_2149;
                  }
                }
                a1[*v4] = 1;
LABEL_2147:
                int v934 = a1[*v4];
                if (a1[*v4]) {
                  unint64_t v929 = 0;
                }
LABEL_2149:
                int v935 = v929 & 7;
                if (v934 || v935 == 4) {
                  break;
                }
                if ((v929 >> 3) == 1)
                {
                  if (v935 == 2 && PBReaderPlaceMark() && GEOPDViewportInfoIsValid(a1))
                  {
                    PBReaderRecallMark();
                    continue;
                  }
                  goto LABEL_2961;
                }
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2961;
                }
              }
LABEL_2160:
              int v937 = a1[*v4];
              PBReaderRecallMark();
              if (v937) {
                goto LABEL_2958;
              }
              goto LABEL_2165;
            case 7u:
              if (v909 == 2 && PBReaderPlaceMark() && GEOPDSearchOriginationInfoIsValid(a1)) {
                goto LABEL_2165;
              }
              goto LABEL_2958;
            default:
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
          }
          goto LABEL_2958;
        }
      case 0x2Du:
        if (v15 == 2 && PBReaderPlaceMark() && GEOPDPlaceQuestionnaireLookupParametersIsValid(a1)) {
          goto LABEL_2952;
        }
        goto LABEL_2959;
      case 0x2Eu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_2184:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2951;
          }
          char v943 = 0;
          unsigned int v944 = 0;
          unint64_t v945 = 0;
          while (2)
          {
            uint64_t v946 = *v2;
            uint64_t v947 = *(void *)&a1[v946];
            unint64_t v948 = v947 + 1;
            if (v947 == -1 || v948 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v949 = *(unsigned char *)(*(void *)&a1[*v5] + v947);
              *(void *)&a1[v946] = v948;
              v945 |= (unint64_t)(v949 & 0x7F) << v943;
              if (v949 < 0)
              {
                v943 += 7;
                BOOL v13 = v944++ >= 9;
                if (v13)
                {
                  unint64_t v945 = 0;
                  int v950 = a1[*v4];
                  goto LABEL_2196;
                }
                continue;
              }
            }
            break;
          }
          int v950 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v945 = 0;
          }
LABEL_2196:
          int v951 = v945 & 7;
          if (v950) {
            BOOL v952 = 1;
          }
          else {
            BOOL v952 = v951 == 4;
          }
          if (!v952)
          {
            switch((v945 >> 3))
            {
              case 1u:
                if (v951 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_2222;
              case 2u:
                if ((v945 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v953 = 0;
                break;
              case 3u:
                if (v951 != 2 || !PBReaderPlaceMark() || !GEOPDAllCollectionsViewResultFilterIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_2222;
              case 4u:
                if (v951 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
                  goto LABEL_2958;
                }
LABEL_2222:
                PBReaderRecallMark();
                continue;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
            }
            do
            {
              uint64_t v954 = *v2;
              uint64_t v955 = *(void *)&a1[v954];
              unint64_t v956 = v955 + 1;
              if (v955 == -1 || v956 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_2184;
              }
              int v957 = *(char *)(*(void *)&a1[*v5] + v955);
              *(void *)&a1[v954] = v956;
              if ((v957 & 0x80000000) == 0) {
                break;
              }
              BOOL v32 = v953++ > 8;
            }
            while (!v32);
            continue;
          }
          goto LABEL_2951;
        }
      case 0x2Fu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_2227:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2951;
          }
          char v958 = 0;
          unsigned int v959 = 0;
          unint64_t v960 = 0;
          while (2)
          {
            uint64_t v961 = *v2;
            uint64_t v962 = *(void *)&a1[v961];
            unint64_t v963 = v962 + 1;
            if (v962 == -1 || v963 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v964 = *(unsigned char *)(*(void *)&a1[*v5] + v962);
              *(void *)&a1[v961] = v963;
              v960 |= (unint64_t)(v964 & 0x7F) << v958;
              if (v964 < 0)
              {
                v958 += 7;
                BOOL v13 = v959++ >= 9;
                if (v13)
                {
                  unint64_t v960 = 0;
                  int v965 = a1[*v4];
                  goto LABEL_2239;
                }
                continue;
              }
            }
            break;
          }
          int v965 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v960 = 0;
          }
LABEL_2239:
          int v966 = v960 & 7;
          if (v965) {
            BOOL v967 = 1;
          }
          else {
            BOOL v967 = v966 == 4;
          }
          if (!v967)
          {
            switch((v960 >> 3))
            {
              case 1u:
                if (v966 != 2 || !PBReaderPlaceMark() || !GEOPDPublisherSuggestionParametersIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_2265;
              case 2u:
                if ((v960 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v968 = 0;
                break;
              case 3u:
                if (v966 != 2 || !PBReaderPlaceMark() || !GEOPDAllCollectionsViewResultFilterIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_2265;
              case 4u:
                if (v966 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
                  goto LABEL_2958;
                }
LABEL_2265:
                PBReaderRecallMark();
                continue;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
            }
            do
            {
              uint64_t v969 = *v2;
              uint64_t v970 = *(void *)&a1[v969];
              unint64_t v971 = v970 + 1;
              if (v970 == -1 || v971 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_2227;
              }
              int v972 = *(char *)(*(void *)&a1[*v5] + v970);
              *(void *)&a1[v969] = v971;
              if ((v972 & 0x80000000) == 0) {
                break;
              }
              BOOL v32 = v968++ > 8;
            }
            while (!v32);
            continue;
          }
          goto LABEL_2951;
        }
      case 0x30u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v973 = 0;
          unsigned int v974 = 0;
          unint64_t v975 = 0;
          while (2)
          {
            uint64_t v976 = *v2;
            uint64_t v977 = *(void *)&a1[v976];
            unint64_t v978 = v977 + 1;
            if (v977 == -1 || v978 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v979 = *(unsigned char *)(*(void *)&a1[*v5] + v977);
              *(void *)&a1[v976] = v978;
              v975 |= (unint64_t)(v979 & 0x7F) << v973;
              if (v979 < 0)
              {
                v973 += 7;
                BOOL v13 = v974++ >= 9;
                if (v13)
                {
                  unint64_t v975 = 0;
                  int v980 = a1[*v4];
                  goto LABEL_2282;
                }
                continue;
              }
            }
            break;
          }
          int v980 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v975 = 0;
          }
LABEL_2282:
          int v981 = v975 & 7;
          if (v980) {
            BOOL v982 = 1;
          }
          else {
            BOOL v982 = v981 == 4;
          }
          if (!v982)
          {
            unint64_t v983 = v975 >> 3;
            if ((v975 >> 3) == 6)
            {
              if (v981 != 2) {
                goto LABEL_2958;
              }
            }
            else if (v983 == 5)
            {
              if (v981 != 2) {
                goto LABEL_2958;
              }
            }
            else
            {
              if (v983 != 4)
              {
                if (!PBReaderSkipValueWithTag()) {
                  goto LABEL_2958;
                }
                continue;
              }
              if (v981 != 2) {
                goto LABEL_2958;
              }
            }
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_2958;
            }
            continue;
          }
          break;
        }
LABEL_2298:
        int v984 = a1[*v4];
        PBReaderRecallMark();
        if (!v984) {
          goto LABEL_2952;
        }
        goto LABEL_2959;
      case 0x31u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2951;
            }
            char v985 = 0;
            unsigned int v986 = 0;
            unint64_t v987 = 0;
            while (2)
            {
              uint64_t v988 = *v2;
              uint64_t v989 = *(void *)&a1[v988];
              unint64_t v990 = v989 + 1;
              if (v989 == -1 || v990 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v991 = *(unsigned char *)(*(void *)&a1[*v5] + v989);
                *(void *)&a1[v988] = v990;
                v987 |= (unint64_t)(v991 & 0x7F) << v985;
                if (v991 < 0)
                {
                  v985 += 7;
                  BOOL v13 = v986++ >= 9;
                  if (v13)
                  {
                    unint64_t v987 = 0;
                    int v992 = a1[*v4];
                    goto LABEL_2315;
                  }
                  continue;
                }
              }
              break;
            }
            int v992 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v987 = 0;
            }
LABEL_2315:
            int v993 = v987 & 7;
            if (v992) {
              BOOL v994 = 1;
            }
            else {
              BOOL v994 = v993 == 4;
            }
            if (v994) {
              goto LABEL_2951;
            }
            if ((v987 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
            }
            break;
          }
          if (v993 == 2 && PBReaderPlaceMark() && GEOLatLngE7IsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2958;
        }
      case 0x32u:
        if (v15 != 2) {
          goto LABEL_2959;
        }
        uint64_t v1256 = 0;
        uint64_t v1257 = 0;
        if (!PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2801;
            }
            char v995 = 0;
            unsigned int v996 = 0;
            unint64_t v997 = 0;
            while (2)
            {
              uint64_t v998 = *v2;
              uint64_t v999 = *(void *)&a1[v998];
              unint64_t v1000 = v999 + 1;
              if (v999 == -1 || v1000 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v1001 = *(unsigned char *)(*(void *)&a1[*v5] + v999);
                *(void *)&a1[v998] = v1000;
                v997 |= (unint64_t)(v1001 & 0x7F) << v995;
                if (v1001 < 0)
                {
                  v995 += 7;
                  BOOL v13 = v996++ >= 9;
                  if (v13)
                  {
                    unint64_t v997 = 0;
                    int v1002 = a1[*v4];
                    goto LABEL_2341;
                  }
                  continue;
                }
              }
              break;
            }
            int v1002 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v997 = 0;
            }
LABEL_2341:
            int v1003 = v997 & 7;
            if (v1002) {
              BOOL v1004 = 1;
            }
            else {
              BOOL v1004 = v1003 == 4;
            }
            if (v1004) {
              goto LABEL_2801;
            }
            if ((v997 >> 3) == 2)
            {
              if (v1003 != 2 || !PBReaderPlaceMark() || !GEOWaypointTypedIsValid(a1)) {
                goto LABEL_2958;
              }
LABEL_2380:
              PBReaderRecallMark();
              continue;
            }
            break;
          }
          if ((v997 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_2958;
            }
            continue;
          }
          break;
        }
        if (v1003 == 2 && PBReaderPlaceMark())
        {
          [a1 position];
          [a1 length];
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v1005 = 0;
            unsigned int v1006 = 0;
            unint64_t v1007 = 0;
            while (1)
            {
              uint64_t v1008 = *v2;
              uint64_t v1009 = *(void *)&a1[v1008];
              unint64_t v1010 = v1009 + 1;
              if (v1009 == -1 || v1010 > *(void *)&a1[*v3]) {
                break;
              }
              char v1011 = *(unsigned char *)(*(void *)&a1[*v5] + v1009);
              *(void *)&a1[v1008] = v1010;
              v1007 |= (unint64_t)(v1011 & 0x7F) << v1005;
              if ((v1011 & 0x80) == 0) {
                goto LABEL_2360;
              }
              v1005 += 7;
              BOOL v13 = v1006++ >= 9;
              if (v13)
              {
                unint64_t v1007 = 0;
                int v1012 = a1[*v4];
                goto LABEL_2362;
              }
            }
            a1[*v4] = 1;
LABEL_2360:
            int v1012 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v1007 = 0;
            }
LABEL_2362:
            int v1013 = v1007 & 7;
            if (v1012 || v1013 == 4) {
              break;
            }
            if ((v1007 >> 3) == 1)
            {
              if (v1013 != 2 || !PBReaderPlaceMark() || !GEOWaypointTypedIsValid(a1)) {
                goto LABEL_2961;
              }
              PBReaderRecallMark();
            }
            else if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
              goto LABEL_2961;
            }
          }
          int v1015 = a1[*v4];
          PBReaderRecallMark();
          if (v1015) {
            goto LABEL_2958;
          }
          goto LABEL_2380;
        }
        goto LABEL_2958;
      case 0x33u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_2384:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2951;
          }
          char v1016 = 0;
          unsigned int v1017 = 0;
          unint64_t v1018 = 0;
          while (2)
          {
            uint64_t v1019 = *v2;
            uint64_t v1020 = *(void *)&a1[v1019];
            unint64_t v1021 = v1020 + 1;
            if (v1020 == -1 || v1021 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v1022 = *(unsigned char *)(*(void *)&a1[*v5] + v1020);
              *(void *)&a1[v1019] = v1021;
              v1018 |= (unint64_t)(v1022 & 0x7F) << v1016;
              if (v1022 < 0)
              {
                v1016 += 7;
                BOOL v13 = v1017++ >= 9;
                if (v13)
                {
                  unint64_t v1018 = 0;
                  int v1023 = a1[*v4];
                  goto LABEL_2396;
                }
                continue;
              }
            }
            break;
          }
          int v1023 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v1018 = 0;
          }
LABEL_2396:
          int v1024 = v1018 & 7;
          if (v1023) {
            BOOL v1025 = 1;
          }
          else {
            BOOL v1025 = v1024 == 4;
          }
          if (v1025) {
            goto LABEL_2951;
          }
          if ((v1018 >> 3) == 3)
          {
            if ((v1018 & 7) == 0)
            {
              unsigned int v1026 = 0;
              do
              {
                uint64_t v1027 = *v2;
                uint64_t v1028 = *(void *)&a1[v1027];
                unint64_t v1029 = v1028 + 1;
                if (v1028 == -1 || v1029 > *(void *)&a1[*v3])
                {
                  a1[*v4] = 1;
                  goto LABEL_2384;
                }
                int v1030 = *(char *)(*(void *)&a1[*v5] + v1028);
                *(void *)&a1[v1027] = v1029;
                if ((v1030 & 0x80000000) == 0) {
                  break;
                }
                BOOL v32 = v1026++ > 8;
              }
              while (!v32);
              continue;
            }
          }
          else
          {
            if ((v1018 >> 3) != 2)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
            }
            if (v1024 == 2 && PBReaderPlaceMark() && GEOPDCollectionSuggestionParametersIsValid(a1))
            {
              PBReaderRecallMark();
              continue;
            }
          }
          goto LABEL_2958;
        }
      case 0x34u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_2420:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2951;
          }
          char v1031 = 0;
          unsigned int v1032 = 0;
          unint64_t v1033 = 0;
          while (2)
          {
            uint64_t v1034 = *v2;
            uint64_t v1035 = *(void *)&a1[v1034];
            unint64_t v1036 = v1035 + 1;
            if (v1035 == -1 || v1036 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v1037 = *(unsigned char *)(*(void *)&a1[*v5] + v1035);
              *(void *)&a1[v1034] = v1036;
              v1033 |= (unint64_t)(v1037 & 0x7F) << v1031;
              if (v1037 < 0)
              {
                v1031 += 7;
                BOOL v13 = v1032++ >= 9;
                if (v13)
                {
                  unint64_t v1033 = 0;
                  int v1038 = a1[*v4];
                  goto LABEL_2432;
                }
                continue;
              }
            }
            break;
          }
          int v1038 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v1033 = 0;
          }
LABEL_2432:
          int v1039 = v1033 & 7;
          if (v1038) {
            BOOL v1040 = 1;
          }
          else {
            BOOL v1040 = v1039 == 4;
          }
          if (v1040) {
            goto LABEL_2951;
          }
          if ((v1033 >> 3) == 2)
          {
            if ((v1033 & 7) == 0)
            {
              unsigned int v1041 = 0;
              do
              {
                uint64_t v1042 = *v2;
                uint64_t v1043 = *(void *)&a1[v1042];
                unint64_t v1044 = v1043 + 1;
                if (v1043 == -1 || v1044 > *(void *)&a1[*v3])
                {
                  a1[*v4] = 1;
                  goto LABEL_2420;
                }
                int v1045 = *(char *)(*(void *)&a1[*v5] + v1043);
                *(void *)&a1[v1042] = v1044;
                if ((v1045 & 0x80000000) == 0) {
                  break;
                }
                BOOL v32 = v1041++ > 8;
              }
              while (!v32);
              continue;
            }
          }
          else
          {
            if ((v1033 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
            }
            if (v1039 == 2 && PBReaderPlaceMark() && GEOPDViewportInfoIsValid(a1))
            {
              PBReaderRecallMark();
              continue;
            }
          }
          goto LABEL_2958;
        }
      case 0x35u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_2456:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2951;
            }
            char v1046 = 0;
            unsigned int v1047 = 0;
            unint64_t v1048 = 0;
            while (2)
            {
              uint64_t v1049 = *v2;
              uint64_t v1050 = *(void *)&a1[v1049];
              unint64_t v1051 = v1050 + 1;
              if (v1050 == -1 || v1051 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v1052 = *(unsigned char *)(*(void *)&a1[*v5] + v1050);
                *(void *)&a1[v1049] = v1051;
                v1048 |= (unint64_t)(v1052 & 0x7F) << v1046;
                if (v1052 < 0)
                {
                  v1046 += 7;
                  BOOL v13 = v1047++ >= 9;
                  if (v13)
                  {
                    unint64_t v1048 = 0;
                    int v1053 = a1[*v4];
                    goto LABEL_2468;
                  }
                  continue;
                }
              }
              break;
            }
            int v1053 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v1048 = 0;
            }
LABEL_2468:
            int v1054 = v1048 & 7;
            if (v1053) {
              BOOL v1055 = 1;
            }
            else {
              BOOL v1055 = v1054 == 4;
            }
            if (v1055) {
              goto LABEL_2951;
            }
            switch((v1048 >> 3))
            {
              case 1u:
                if (v1054 != 2)
                {
                  if ((v1048 & 7) != 0) {
                    goto LABEL_2958;
                  }
                  while (1)
                  {
                    uint64_t v1056 = *v2;
                    uint64_t v1057 = *(void *)&a1[v1056];
                    unint64_t v1058 = v1057 + 1;
                    if (v1057 == -1 || v1058 > *(void *)&a1[*v3]) {
                      goto LABEL_2505;
                    }
                    int v1059 = *(char *)(*(void *)&a1[*v5] + v1057);
                    *(void *)&a1[v1056] = v1058;
                    if (v1059 < 0)
                    {
                      unsigned int v1060 = v1054++;
                      if (v1060 <= 8) {
                        continue;
                      }
                    }
                    goto LABEL_2456;
                  }
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_2958;
                }
LABEL_2507:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                {
                  unsigned int v1066 = a1[*v4];
                  if (a1[*v4]) {
                    break;
                  }
                  while (1)
                  {
                    uint64_t v1067 = *v2;
                    uint64_t v1068 = *(void *)&a1[v1067];
                    unint64_t v1069 = v1068 + 1;
                    if (v1068 == -1 || v1069 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v1070 = *(char *)(*(void *)&a1[*v5] + v1068);
                    *(void *)&a1[v1067] = v1069;
                    if (v1070 < 0)
                    {
                      BOOL v13 = v1066++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_2507;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 2u:
                if (v1054 != 2)
                {
                  if ((v1048 & 7) != 0) {
                    goto LABEL_2958;
                  }
                  while (1)
                  {
                    uint64_t v1061 = *v2;
                    uint64_t v1062 = *(void *)&a1[v1061];
                    unint64_t v1063 = v1062 + 1;
                    if (v1062 == -1 || v1063 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v1064 = *(char *)(*(void *)&a1[*v5] + v1062);
                    *(void *)&a1[v1061] = v1063;
                    if (v1064 < 0)
                    {
                      unsigned int v1065 = v1054++;
                      if (v1065 <= 8) {
                        continue;
                      }
                    }
                    goto LABEL_2456;
                  }
LABEL_2505:
                  a1[*v4] = 1;
                  continue;
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_2958;
                }
LABEL_2517:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                {
                  unsigned int v1071 = a1[*v4];
                  if (a1[*v4]) {
                    break;
                  }
                  while (1)
                  {
                    uint64_t v1072 = *v2;
                    uint64_t v1073 = *(void *)&a1[v1072];
                    unint64_t v1074 = v1073 + 1;
                    if (v1073 == -1 || v1074 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v1075 = *(char *)(*(void *)&a1[*v5] + v1073);
                    *(void *)&a1[v1072] = v1074;
                    if (v1075 < 0)
                    {
                      BOOL v13 = v1071++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_2517;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 3u:
                if (v1054 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_2504;
              case 4u:
                if (v1054 != 2 || !PBReaderPlaceMark() || !GEOPDGuidesLocationEntryIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_2504;
              case 5u:
                if (v1054 != 2 || !PBReaderPlaceMark() || !GEOPDGuidesHomeResultFilterIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_2504;
              case 6u:
                if (v1054 == 2 && PBReaderPlaceMark() && GEOPDResultRefinementGuidesHomeIsValid(a1)) {
                  goto LABEL_2504;
                }
                goto LABEL_2958;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
            }
            break;
          }
LABEL_2504:
          PBReaderRecallMark();
          continue;
        }
      case 0x36u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_2529:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2951;
          }
          char v1076 = 0;
          unsigned int v1077 = 0;
          unint64_t v1078 = 0;
          while (2)
          {
            uint64_t v1079 = *v2;
            uint64_t v1080 = *(void *)&a1[v1079];
            unint64_t v1081 = v1080 + 1;
            if (v1080 == -1 || v1081 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v1082 = *(unsigned char *)(*(void *)&a1[*v5] + v1080);
              *(void *)&a1[v1079] = v1081;
              v1078 |= (unint64_t)(v1082 & 0x7F) << v1076;
              if (v1082 < 0)
              {
                v1076 += 7;
                BOOL v13 = v1077++ >= 9;
                if (v13)
                {
                  unint64_t v1078 = 0;
                  int v1083 = a1[*v4];
                  goto LABEL_2541;
                }
                continue;
              }
            }
            break;
          }
          int v1083 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v1078 = 0;
          }
LABEL_2541:
          int v1084 = v1078 & 7;
          if (v1083) {
            BOOL v1085 = 1;
          }
          else {
            BOOL v1085 = v1084 == 4;
          }
          if (!v1085)
          {
            switch((v1078 >> 3))
            {
              case 1u:
                if (v1084 != 2 || !PBReaderPlaceMark() || !GEOAddressIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_2600;
              case 2u:
                if ((v1078 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v1086 = 0;
                while (1)
                {
                  uint64_t v1087 = *v2;
                  uint64_t v1088 = *(void *)&a1[v1087];
                  unint64_t v1089 = v1088 + 1;
                  if (v1088 == -1 || v1089 > *(void *)&a1[*v3]) {
                    goto LABEL_2596;
                  }
                  int v1090 = *(char *)(*(void *)&a1[*v5] + v1088);
                  *(void *)&a1[v1087] = v1089;
                  if (v1090 < 0)
                  {
                    BOOL v32 = v1086++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_2529;
                }
              case 3u:
                if (v1084 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
                  goto LABEL_2958;
                }
                goto LABEL_2600;
              case 4u:
                if (v1084 == 2)
                {
                  if (!PBReaderPlaceMark()) {
                    goto LABEL_2958;
                  }
                  while (1)
                  {
LABEL_2602:
                    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || (unsigned int v1111 = a1[*v4], a1[*v4]))
                    {
LABEL_2600:
                      PBReaderRecallMark();
                      goto LABEL_2529;
                    }
                    while (1)
                    {
                      uint64_t v1112 = *v2;
                      uint64_t v1113 = *(void *)&a1[v1112];
                      unint64_t v1114 = v1113 + 1;
                      if (v1113 == -1 || v1114 > *(void *)&a1[*v3]) {
                        break;
                      }
                      int v1115 = *(char *)(*(void *)&a1[*v5] + v1113);
                      *(void *)&a1[v1112] = v1114;
                      if (v1115 < 0)
                      {
                        BOOL v13 = v1111++ >= 9;
                        if (!v13) {
                          continue;
                        }
                      }
                      goto LABEL_2602;
                    }
                    a1[*v4] = 1;
                  }
                }
                if ((v1078 & 7) != 0) {
                  goto LABEL_2958;
                }
                while (1)
                {
                  uint64_t v1091 = *v2;
                  uint64_t v1092 = *(void *)&a1[v1091];
                  unint64_t v1093 = v1092 + 1;
                  if (v1092 == -1 || v1093 > *(void *)&a1[*v3]) {
                    goto LABEL_2596;
                  }
                  int v1094 = *(char *)(*(void *)&a1[*v5] + v1092);
                  *(void *)&a1[v1091] = v1093;
                  if (v1094 < 0)
                  {
                    unsigned int v1095 = v1084++;
                    if (v1095 <= 8) {
                      continue;
                    }
                  }
                  goto LABEL_2529;
                }
              case 5u:
                if ((v1078 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v1096 = 0;
                while (1)
                {
                  uint64_t v1097 = *v2;
                  uint64_t v1098 = *(void *)&a1[v1097];
                  unint64_t v1099 = v1098 + 1;
                  if (v1098 == -1 || v1099 > *(void *)&a1[*v3]) {
                    goto LABEL_2596;
                  }
                  int v1100 = *(char *)(*(void *)&a1[*v5] + v1098);
                  *(void *)&a1[v1097] = v1099;
                  if (v1100 < 0)
                  {
                    BOOL v32 = v1096++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_2529;
                }
              case 6u:
                if ((v1078 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v1101 = 0;
                while (1)
                {
                  uint64_t v1102 = *v2;
                  uint64_t v1103 = *(void *)&a1[v1102];
                  unint64_t v1104 = v1103 + 1;
                  if (v1103 == -1 || v1104 > *(void *)&a1[*v3]) {
                    goto LABEL_2596;
                  }
                  int v1105 = *(char *)(*(void *)&a1[*v5] + v1103);
                  *(void *)&a1[v1102] = v1104;
                  if (v1105 < 0)
                  {
                    BOOL v32 = v1101++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_2529;
                }
              case 7u:
                if (v1084 == 2) {
                  goto LABEL_2586;
                }
                goto LABEL_2958;
              case 8u:
                if ((v1078 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v1106 = 0;
                do
                {
                  uint64_t v1107 = *v2;
                  uint64_t v1108 = *(void *)&a1[v1107];
                  unint64_t v1109 = v1108 + 1;
                  if (v1108 == -1 || v1109 > *(void *)&a1[*v3])
                  {
LABEL_2596:
                    a1[*v4] = 1;
                    goto LABEL_2529;
                  }
                  int v1110 = *(char *)(*(void *)&a1[*v5] + v1108);
                  *(void *)&a1[v1107] = v1109;
                  if ((v1110 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v32 = v1106++ > 8;
                }
                while (!v32);
                break;
              case 9u:
                if (v1084 == 2 && PBReaderPlaceMark() && GEOInterpolationParametersIsValid(a1)) {
                  goto LABEL_2600;
                }
                goto LABEL_2958;
              default:
LABEL_2586:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
            }
            continue;
          }
          goto LABEL_2951;
        }
      case 0x37u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_2614:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v1116 = 0;
          unsigned int v1117 = 0;
          unint64_t v1118 = 0;
          while (2)
          {
            uint64_t v1119 = *v2;
            uint64_t v1120 = *(void *)&a1[v1119];
            unint64_t v1121 = v1120 + 1;
            if (v1120 == -1 || v1121 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v1122 = *(unsigned char *)(*(void *)&a1[*v5] + v1120);
              *(void *)&a1[v1119] = v1121;
              v1118 |= (unint64_t)(v1122 & 0x7F) << v1116;
              if (v1122 < 0)
              {
                v1116 += 7;
                BOOL v13 = v1117++ >= 9;
                if (v13)
                {
                  unint64_t v1118 = 0;
                  int v1123 = a1[*v4];
                  goto LABEL_2626;
                }
                continue;
              }
            }
            break;
          }
          int v1123 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v1118 = 0;
          }
LABEL_2626:
          int v1124 = v1118 & 7;
          if (v1123) {
            BOOL v1125 = 1;
          }
          else {
            BOOL v1125 = v1124 == 4;
          }
          if (!v1125)
          {
            switch((v1118 >> 3))
            {
              case 1u:
                if ((v1118 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v1126 = 0;
                while (1)
                {
                  uint64_t v1127 = *v2;
                  uint64_t v1128 = *(void *)&a1[v1127];
                  unint64_t v1129 = v1128 + 1;
                  if (v1128 == -1 || v1129 > *(void *)&a1[*v3]) {
                    goto LABEL_2654;
                  }
                  int v1130 = *(char *)(*(void *)&a1[*v5] + v1128);
                  *(void *)&a1[v1127] = v1129;
                  if (v1130 < 0)
                  {
                    BOOL v32 = v1126++ > 8;
                    if (!v32) {
                      continue;
                    }
                  }
                  goto LABEL_2614;
                }
              case 2u:
                if (v1124 == 2) {
                  goto LABEL_2640;
                }
                goto LABEL_2958;
              case 3u:
                if (v1124 == 2 && PBReaderPlaceMark() && GEOPDViewportInfoIsValid(a1)) {
                  goto LABEL_2722;
                }
                goto LABEL_2958;
              case 4u:
                if ((v1118 & 7) != 0) {
                  goto LABEL_2958;
                }
                unsigned int v1131 = 0;
                do
                {
                  uint64_t v1132 = *v2;
                  uint64_t v1133 = *(void *)&a1[v1132];
                  unint64_t v1134 = v1133 + 1;
                  if (v1133 == -1 || v1134 > *(void *)&a1[*v3])
                  {
LABEL_2654:
                    a1[*v4] = 1;
                    goto LABEL_2614;
                  }
                  int v1135 = *(char *)(*(void *)&a1[*v5] + v1133);
                  *(void *)&a1[v1132] = v1134;
                  if ((v1135 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v32 = v1131++ > 8;
                }
                while (!v32);
                continue;
              case 5u:
                if (v1124 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_2958;
                }
                [a1 position];
                [a1 length];
LABEL_2658:
                while (2)
                {
                  while (2)
                  {
                    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
                      goto LABEL_2721;
                    }
                    char v1136 = 0;
                    unsigned int v1137 = 0;
                    unint64_t v1138 = 0;
                    while (1)
                    {
                      uint64_t v1139 = *v2;
                      uint64_t v1140 = *(void *)&a1[v1139];
                      unint64_t v1141 = v1140 + 1;
                      if (v1140 == -1 || v1141 > *(void *)&a1[*v3]) {
                        break;
                      }
                      char v1142 = *(unsigned char *)(*(void *)&a1[*v5] + v1140);
                      *(void *)&a1[v1139] = v1141;
                      v1138 |= (unint64_t)(v1142 & 0x7F) << v1136;
                      if ((v1142 & 0x80) == 0) {
                        goto LABEL_2668;
                      }
                      v1136 += 7;
                      BOOL v13 = v1137++ >= 9;
                      if (v13)
                      {
                        unint64_t v1138 = 0;
                        int v1143 = a1[*v4];
                        goto LABEL_2670;
                      }
                    }
                    a1[*v4] = 1;
LABEL_2668:
                    int v1143 = a1[*v4];
                    if (a1[*v4]) {
                      unint64_t v1138 = 0;
                    }
LABEL_2670:
                    int v1144 = v1138 & 7;
                    if (v1143 || v1144 == 4) {
                      goto LABEL_2721;
                    }
                    unint64_t v1146 = v1138 >> 3;
                    if ((v1138 >> 3) == 3)
                    {
                      if (v1144 != 2) {
                        goto LABEL_2963;
                      }
                    }
                    else
                    {
                      if (v1146 != 2)
                      {
                        if (v1146 != 1)
                        {
                          if (!PBReaderSkipValueWithTag()) {
                            goto LABEL_2963;
                          }
                          continue;
                        }
                        if ((v1138 & 7) == 0)
                        {
                          unsigned int v1147 = 0;
                          do
                          {
                            uint64_t v1148 = *v2;
                            uint64_t v1149 = *(void *)&a1[v1148];
                            unint64_t v1150 = v1149 + 1;
                            if (v1149 == -1 || v1150 > *(void *)&a1[*v3])
                            {
                              a1[*v4] = 1;
                              goto LABEL_2658;
                            }
                            int v1151 = *(char *)(*(void *)&a1[*v5] + v1149);
                            *(void *)&a1[v1148] = v1150;
                            if ((v1151 & 0x80000000) == 0) {
                              break;
                            }
                            BOOL v32 = v1147++ > 8;
                          }
                          while (!v32);
                          continue;
                        }
LABEL_2963:
                        PBReaderRecallMark();
                        goto LABEL_2958;
                      }
                      if (v1144 != 2) {
                        goto LABEL_2963;
                      }
                    }
                    break;
                  }
                  if ((PBReaderSkipValueWithTag() & 1) == 0) {
                    goto LABEL_2963;
                  }
                  continue;
                }
              case 6u:
                if (v1124 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_2958;
                }
                [a1 position];
                [a1 length];
                break;
              default:
LABEL_2640:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
            }
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
            {
              char v1152 = 0;
              unsigned int v1153 = 0;
              unint64_t v1154 = 0;
              while (1)
              {
                uint64_t v1155 = *v2;
                uint64_t v1156 = *(void *)&a1[v1155];
                unint64_t v1157 = v1156 + 1;
                if (v1156 == -1 || v1157 > *(void *)&a1[*v3]) {
                  break;
                }
                char v1158 = *(unsigned char *)(*(void *)&a1[*v5] + v1156);
                *(void *)&a1[v1155] = v1157;
                v1154 |= (unint64_t)(v1158 & 0x7F) << v1152;
                if ((v1158 & 0x80) == 0) {
                  goto LABEL_2706;
                }
                v1152 += 7;
                BOOL v13 = v1153++ >= 9;
                if (v13)
                {
                  unint64_t v1154 = 0;
                  int v1159 = a1[*v4];
                  goto LABEL_2708;
                }
              }
              a1[*v4] = 1;
LABEL_2706:
              int v1159 = a1[*v4];
              if (a1[*v4]) {
                unint64_t v1154 = 0;
              }
LABEL_2708:
              int v1160 = v1154 & 7;
              if (v1159 || v1160 == 4) {
                break;
              }
              if ((v1154 >> 3) == 2)
              {
                if (v1160 != 2) {
                  goto LABEL_2963;
                }
LABEL_2717:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2963;
                }
                continue;
              }
              if ((v1154 >> 3) == 1)
              {
                if (v1160 != 2) {
                  goto LABEL_2963;
                }
                goto LABEL_2717;
              }
              if (!PBReaderSkipValueWithTag()) {
                goto LABEL_2963;
              }
            }
LABEL_2721:
            int v1162 = a1[*v4];
            PBReaderRecallMark();
            if (!v1162)
            {
LABEL_2722:
              PBReaderRecallMark();
              continue;
            }
            goto LABEL_2958;
          }
          break;
        }
LABEL_2723:
        int v1163 = a1[*v4];
        PBReaderRecallMark();
        if (v1163) {
          goto LABEL_2959;
        }
        goto LABEL_2952;
      case 0x38u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2951;
            }
            char v1164 = 0;
            unsigned int v1165 = 0;
            unint64_t v1166 = 0;
            while (2)
            {
              uint64_t v1167 = *v2;
              uint64_t v1168 = *(void *)&a1[v1167];
              unint64_t v1169 = v1168 + 1;
              if (v1168 == -1 || v1169 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v1170 = *(unsigned char *)(*(void *)&a1[*v5] + v1168);
                *(void *)&a1[v1167] = v1169;
                v1166 |= (unint64_t)(v1170 & 0x7F) << v1164;
                if (v1170 < 0)
                {
                  v1164 += 7;
                  BOOL v13 = v1165++ >= 9;
                  if (v13)
                  {
                    unint64_t v1166 = 0;
                    int v1171 = a1[*v4];
                    goto LABEL_2740;
                  }
                  continue;
                }
              }
              break;
            }
            int v1171 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v1166 = 0;
            }
LABEL_2740:
            int v1172 = v1166 & 7;
            if (v1171) {
              BOOL v1173 = 1;
            }
            else {
              BOOL v1173 = v1172 == 4;
            }
            if (v1173) {
              goto LABEL_2951;
            }
            if ((v1166 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
            }
            break;
          }
          if (v1172 == 2 && PBReaderPlaceMark() && GEOPDComponentIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2958;
        }
      case 0x39u:
        if (v15 != 2) {
          goto LABEL_2959;
        }
        uint64_t v1256 = 0;
        uint64_t v1257 = 0;
        if (!PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v1174 = 0;
          unsigned int v1175 = 0;
          unint64_t v1176 = 0;
          while (2)
          {
            uint64_t v1177 = *v2;
            uint64_t v1178 = *(void *)&a1[v1177];
            unint64_t v1179 = v1178 + 1;
            if (v1178 == -1 || v1179 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v1180 = *(unsigned char *)(*(void *)&a1[*v5] + v1178);
              *(void *)&a1[v1177] = v1179;
              v1176 |= (unint64_t)(v1180 & 0x7F) << v1174;
              if (v1180 < 0)
              {
                v1174 += 7;
                BOOL v13 = v1175++ >= 9;
                if (v13)
                {
                  unint64_t v1176 = 0;
                  int v1181 = a1[*v4];
                  goto LABEL_2766;
                }
                continue;
              }
            }
            break;
          }
          int v1181 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v1176 = 0;
          }
LABEL_2766:
          int v1182 = v1176 & 7;
          if (v1181) {
            BOOL v1183 = 1;
          }
          else {
            BOOL v1183 = v1182 == 4;
          }
          if (!v1183)
          {
            if ((v1176 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
            }
            if (v1182 == 2 && PBReaderPlaceMark())
            {
              [a1 position];
              [a1 length];
              while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
              {
                char v1184 = 0;
                unsigned int v1185 = 0;
                unint64_t v1186 = 0;
                while (1)
                {
                  uint64_t v1187 = *v2;
                  uint64_t v1188 = *(void *)&a1[v1187];
                  unint64_t v1189 = v1188 + 1;
                  if (v1188 == -1 || v1189 > *(void *)&a1[*v3]) {
                    break;
                  }
                  char v1190 = *(unsigned char *)(*(void *)&a1[*v5] + v1188);
                  *(void *)&a1[v1187] = v1189;
                  v1186 |= (unint64_t)(v1190 & 0x7F) << v1184;
                  if ((v1190 & 0x80) == 0) {
                    goto LABEL_2784;
                  }
                  v1184 += 7;
                  BOOL v13 = v1185++ >= 9;
                  if (v13)
                  {
                    unint64_t v1186 = 0;
                    int v1191 = a1[*v4];
                    goto LABEL_2786;
                  }
                }
                a1[*v4] = 1;
LABEL_2784:
                int v1191 = a1[*v4];
                if (a1[*v4]) {
                  unint64_t v1186 = 0;
                }
LABEL_2786:
                int v1192 = v1186 & 7;
                if (v1191 || v1192 == 4) {
                  break;
                }
                if ((v1186 >> 3) == 1)
                {
                  if (v1192 != 2 || !PBReaderPlaceMark() || !GEOWaypointTypedIsValid(a1)) {
                    goto LABEL_2961;
                  }
                  PBReaderRecallMark();
                }
                else if ((PBReaderSkipValueWithTag() & 1) == 0)
                {
LABEL_2961:
                  PBReaderRecallMark();
                  goto LABEL_2958;
                }
              }
              int v1194 = a1[*v4];
              PBReaderRecallMark();
              if (!v1194)
              {
                PBReaderRecallMark();
                continue;
              }
            }
            goto LABEL_2958;
          }
          break;
        }
LABEL_2801:
        int v1195 = a1[*v4];
        PBReaderRecallMark();
        if (v1195) {
          goto LABEL_2959;
        }
        goto LABEL_2952;
      case 0x3Au:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
LABEL_2806:
        while (2)
        {
          while (2)
          {
            while (2)
            {
              if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
                goto LABEL_2951;
              }
              char v1196 = 0;
              unsigned int v1197 = 0;
              unint64_t v1198 = 0;
              while (2)
              {
                uint64_t v1199 = *v2;
                uint64_t v1200 = *(void *)&a1[v1199];
                unint64_t v1201 = v1200 + 1;
                if (v1200 == -1 || v1201 > *(void *)&a1[*v3])
                {
                  a1[*v4] = 1;
                }
                else
                {
                  char v1202 = *(unsigned char *)(*(void *)&a1[*v5] + v1200);
                  *(void *)&a1[v1199] = v1201;
                  v1198 |= (unint64_t)(v1202 & 0x7F) << v1196;
                  if (v1202 < 0)
                  {
                    v1196 += 7;
                    BOOL v13 = v1197++ >= 9;
                    if (v13)
                    {
                      unint64_t v1198 = 0;
                      int v1203 = a1[*v4];
                      goto LABEL_2818;
                    }
                    continue;
                  }
                }
                break;
              }
              int v1203 = a1[*v4];
              if (a1[*v4]) {
                unint64_t v1198 = 0;
              }
LABEL_2818:
              int v1204 = v1198 & 7;
              if (v1203) {
                BOOL v1205 = 1;
              }
              else {
                BOOL v1205 = v1204 == 4;
              }
              if (v1205) {
                goto LABEL_2951;
              }
              unint64_t v1206 = v1198 >> 3;
              if ((v1198 >> 3) == 3)
              {
                if ((v1198 & 7) == 0)
                {
                  unsigned int v1207 = 0;
                  do
                  {
                    uint64_t v1208 = *v2;
                    uint64_t v1209 = *(void *)&a1[v1208];
                    unint64_t v1210 = v1209 + 1;
                    if (v1209 == -1 || v1210 > *(void *)&a1[*v3])
                    {
                      a1[*v4] = 1;
                      goto LABEL_2806;
                    }
                    int v1211 = *(char *)(*(void *)&a1[*v5] + v1209);
                    *(void *)&a1[v1208] = v1210;
                    if ((v1211 & 0x80000000) == 0) {
                      break;
                    }
                    BOOL v32 = v1207++ > 8;
                  }
                  while (!v32);
                  continue;
                }
                goto LABEL_2958;
              }
              break;
            }
            if (v1206 == 2)
            {
              if (v1204 != 2 || !PBReaderPlaceMark() || !GEOPDEnrichmentInfoIsValid(a1)) {
                goto LABEL_2958;
              }
LABEL_2840:
              PBReaderRecallMark();
              continue;
            }
            break;
          }
          if (v1206 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_2958;
            }
            continue;
          }
          break;
        }
        if (v1204 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1)) {
          goto LABEL_2840;
        }
LABEL_2958:
        PBReaderRecallMark();
LABEL_2959:
        PBReaderRecallMark();
        return 0;
      case 0x3Bu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2951;
            }
            char v1212 = 0;
            unsigned int v1213 = 0;
            unint64_t v1214 = 0;
            while (2)
            {
              uint64_t v1215 = *v2;
              uint64_t v1216 = *(void *)&a1[v1215];
              unint64_t v1217 = v1216 + 1;
              if (v1216 == -1 || v1217 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v1218 = *(unsigned char *)(*(void *)&a1[*v5] + v1216);
                *(void *)&a1[v1215] = v1217;
                v1214 |= (unint64_t)(v1218 & 0x7F) << v1212;
                if (v1218 < 0)
                {
                  v1212 += 7;
                  BOOL v13 = v1213++ >= 9;
                  if (v13)
                  {
                    unint64_t v1214 = 0;
                    int v1219 = a1[*v4];
                    goto LABEL_2859;
                  }
                  continue;
                }
              }
              break;
            }
            int v1219 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v1214 = 0;
            }
LABEL_2859:
            int v1220 = v1214 & 7;
            if (v1219) {
              BOOL v1221 = 1;
            }
            else {
              BOOL v1221 = v1220 == 4;
            }
            if (v1221) {
              goto LABEL_2951;
            }
            if ((v1214 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
            }
            break;
          }
          if (v1220 == 2 && PBReaderPlaceMark() && GEOMapRegionIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2958;
        }
      case 0x3Cu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2951;
            }
            char v1222 = 0;
            unsigned int v1223 = 0;
            unint64_t v1224 = 0;
            while (2)
            {
              uint64_t v1225 = *v2;
              uint64_t v1226 = *(void *)&a1[v1225];
              unint64_t v1227 = v1226 + 1;
              if (v1226 == -1 || v1227 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v1228 = *(unsigned char *)(*(void *)&a1[*v5] + v1226);
                *(void *)&a1[v1225] = v1227;
                v1224 |= (unint64_t)(v1228 & 0x7F) << v1222;
                if (v1228 < 0)
                {
                  v1222 += 7;
                  BOOL v13 = v1223++ >= 9;
                  if (v13)
                  {
                    unint64_t v1224 = 0;
                    int v1229 = a1[*v4];
                    goto LABEL_2885;
                  }
                  continue;
                }
              }
              break;
            }
            int v1229 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v1224 = 0;
            }
LABEL_2885:
            int v1230 = v1224 & 7;
            if (v1229) {
              BOOL v1231 = 1;
            }
            else {
              BOOL v1231 = v1230 == 4;
            }
            if (v1231) {
              goto LABEL_2951;
            }
            if ((v1224 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
            }
            break;
          }
          if (v1230 == 2 && PBReaderPlaceMark() && GEOPDViewportInfoIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2958;
        }
      case 0x3Du:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2951;
            }
            char v1232 = 0;
            unsigned int v1233 = 0;
            unint64_t v1234 = 0;
            while (2)
            {
              uint64_t v1235 = *v2;
              uint64_t v1236 = *(void *)&a1[v1235];
              unint64_t v1237 = v1236 + 1;
              if (v1236 == -1 || v1237 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v1238 = *(unsigned char *)(*(void *)&a1[*v5] + v1236);
                *(void *)&a1[v1235] = v1237;
                v1234 |= (unint64_t)(v1238 & 0x7F) << v1232;
                if (v1238 < 0)
                {
                  v1232 += 7;
                  BOOL v13 = v1233++ >= 9;
                  if (v13)
                  {
                    unint64_t v1234 = 0;
                    int v1239 = a1[*v4];
                    goto LABEL_2911;
                  }
                  continue;
                }
              }
              break;
            }
            int v1239 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v1234 = 0;
            }
LABEL_2911:
            int v1240 = v1234 & 7;
            if (v1239) {
              BOOL v1241 = 1;
            }
            else {
              BOOL v1241 = v1240 == 4;
            }
            if (v1241) {
              goto LABEL_2951;
            }
            if ((v1234 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2958;
              }
              continue;
            }
            break;
          }
          if (v1240 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2958;
        }
      case 0x3Eu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2959;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v1242 = 0;
            unsigned int v1243 = 0;
            unint64_t v1244 = 0;
            while (1)
            {
              uint64_t v1245 = *v2;
              uint64_t v1246 = *(void *)&a1[v1245];
              unint64_t v1247 = v1246 + 1;
              if (v1246 == -1 || v1247 > *(void *)&a1[*v3]) {
                break;
              }
              char v1248 = *(unsigned char *)(*(void *)&a1[*v5] + v1246);
              *(void *)&a1[v1245] = v1247;
              v1244 |= (unint64_t)(v1248 & 0x7F) << v1242;
              if ((v1248 & 0x80) == 0) {
                goto LABEL_2935;
              }
              v1242 += 7;
              BOOL v13 = v1243++ >= 9;
              if (v13)
              {
                unint64_t v1244 = 0;
                int v1249 = a1[*v4];
                goto LABEL_2937;
              }
            }
            a1[*v4] = 1;
LABEL_2935:
            int v1249 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v1244 = 0;
            }
LABEL_2937:
            int v1250 = v1244 & 7;
            if (!v1249 && v1250 != 4)
            {
              if ((v1244 >> 3) != 2)
              {
                if ((v1244 >> 3) == 1 && v1250 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2958;
                }
                continue;
              }
              if (v1250 == 2 && PBReaderPlaceMark() && GEOPDAddressWithComponentsIsValid(a1))
              {
                PBReaderRecallMark();
                continue;
              }
              goto LABEL_2958;
            }
          }
          break;
        }
LABEL_2951:
        int v1252 = a1[*v4];
        PBReaderRecallMark();
        if (v1252) {
          goto LABEL_2959;
        }
        goto LABEL_2952;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_2959;
        }
        goto LABEL_2953;
    }
  }
}

os_unfair_lock_s *GEOPDPlaceRequestIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDPlaceRequestIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 30);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

uint64_t GEOPDPlaceRequestHasSensitiveFields(void *a1, uint64_t a2)
{
  if (!a1) {
    return 0;
  }
  uint64_t v4 = [a1 clientMetadata];
  if (GEOPDClientMetadataHasSensitiveFields(v4))
  {
    uint64_t HasSensitiveFields = 1;
  }
  else
  {
    char v6 = [a1 placeRequestParameters];
    uint64_t HasSensitiveFields = GEOPDPlaceRequestParametersHasSensitiveFields(v6, a2);
  }
  return HasSensitiveFields;
}

void sub_18951A858(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951B24C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951E1BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951E34C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951E4DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951E6D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951E814(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951EA0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951EB54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951ECD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951EE14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951EF14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951F058(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951F1D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951F2FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951F534(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951F800(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951FA04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951FBF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951FDA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18951FF4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18952007C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895201B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895202E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189520410(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895205D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895207C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189520878(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895209AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189520AE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189520C10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189520D40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189520EE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18952101C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189521150(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189521284(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189522FEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *GEOPDPlaceRequestParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDPlaceRequestParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 118);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOPDSearchParametersClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  if (a1
    && a3
    && (-[GEOPDSearchParameters _readSuggestionEntry](a1), *(void *)(a1 + 304))
    && (-[GEOPDSearchParameters suggestionEntry]((id *)a1),
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        unsigned int v6 = GEOPDAutocompleteEntryHasSensitiveFields(v5, a2),
        v5,
        v6))
  {
    unsigned int v7 = -[GEOPDSearchParameters suggestionEntry]((id *)a1);
    id v9 = (id)[v7 copy];

    unint64_t v8 = [v9 business];
    [v8 clearSensitiveFields:a2];

    -[GEOPDSearchParameters setSuggestionEntry:](a1, v9);
  }
  else
  {
    -[GEOPDSearchParameters suggestionEntry]((id *)a1);
    id v9 = (id)objc_claimAutoreleasedReturnValue();
    [v9 clearSensitiveFields:a2];
  }
}

unint64_t GEOPDWifiFingerprintParametersClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result = [*(id *)(a1 + 16) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      unint64_t v8 = [*(id *)(a1 + 16) objectAtIndexedSubscript:i];
      id v9 = v8;
      if (a3 && GEOPDWifiMeasurementHasSensitiveFields(v8))
      {
        uint64_t v10 = (void *)[v9 copy];
        GEOPDWifiMeasurementClearSensitiveFields((uint64_t)v10, a2, 0);
        [*(id *)(a1 + 16) replaceObjectAtIndex:i withObject:v10];
      }
      else if (v9)
      {
        GEOPDWifiMeasurementClearSensitiveFields((uint64_t)v9, a2, 1);
      }

      unint64_t result = [*(id *)(a1 + 16) count];
    }
  }
  return result;
}

void GEOPDTransitNearbyScheduleLookupParametersClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  -[GEOPDTransitNearbyScheduleLookupParameters _readTransitNearbyScheduleLookupOrigins](a1);
  if ([*(id *)(a1 + 24) count])
  {
    unint64_t v6 = 0;
    do
    {
      unsigned int v7 = [*(id *)(a1 + 24) objectAtIndexedSubscript:v6];
      unint64_t v8 = v7;
      if (a3 && GEOPDTransitNearbyScheduleLookupOriginHasSensitiveFields(v7))
      {
        id v9 = (void *)[v8 copy];
        GEOPDTransitNearbyScheduleLookupOriginClearSensitiveFields((uint64_t)v9, a2, 0);
        [*(id *)(a1 + 24) replaceObjectAtIndex:v6 withObject:v9];
      }
      else if (v8)
      {
        GEOPDTransitNearbyScheduleLookupOriginClearSensitiveFields((uint64_t)v8, a2, 1);
      }

      ++v6;
    }
    while (v6 < [*(id *)(a1 + 24) count]);
  }
  if ((a3 & 1) != 0
    && (-[GEOPDTransitNearbyScheduleLookupParameters _readUserLocation](a1), *(void *)(a1 + 32))
    && (-[GEOPDTransitNearbyScheduleLookupParameters userLocation]((id *)a1),
        uint64_t v10 = objc_claimAutoreleasedReturnValue(),
        unsigned int v11 = GEOWaypointTypedHasSensitiveFields(v10),
        v10,
        v11))
  {
    char v12 = -[GEOPDTransitNearbyScheduleLookupParameters userLocation]((id *)a1);
    id v14 = (id)[v12 copy];

    BOOL v13 = [v14 waypointLocation];
    [v13 clearSensitiveFields:a2];

    -[GEOPDTransitNearbyScheduleLookupParameters setUserLocation:](a1, v14);
  }
  else
  {
    -[GEOPDTransitNearbyScheduleLookupParameters userLocation]((id *)a1);
    id v14 = (id)objc_claimAutoreleasedReturnValue();
    [v14 clearSensitiveFields:a2];
  }
}

unint64_t GEOPDTransitNearbyPaymentMethodLookupParametersClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result = [*(id *)(a1 + 16) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      unint64_t v8 = [*(id *)(a1 + 16) objectAtIndexedSubscript:i];
      id v9 = v8;
      if (a3 && GEOPDTransitNearbyPaymentMethodLookupOriginHasSensitiveFields(v8))
      {
        uint64_t v10 = (void *)[v9 copy];
        GEOPDTransitNearbyPaymentMethodLookupOriginClearSensitiveFields((uint64_t)v10, a2, 0);
        [*(id *)(a1 + 16) replaceObjectAtIndex:i withObject:v10];
      }
      else if (v9)
      {
        GEOPDTransitNearbyPaymentMethodLookupOriginClearSensitiveFields((uint64_t)v9, a2, 1);
      }

      unint64_t result = [*(id *)(a1 + 16) count];
    }
  }
  return result;
}

void sub_1895256B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895259F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189525B5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189525E94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189526478(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceResponseCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  -[GEOPDPlaceGlobalResult readAll:](*(void *)(a1 + 88), 1);
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v2 = *(id *)(a1 + 104);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v26 objects:v32 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v27;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v27 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v26 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v26 objects:v32 count:16];
    }
    while (v4);
  }

  [*(id *)(a1 + 40) readAll:1];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v7 = *(id *)(a1 + 96);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v22 objects:v31 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v23;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v23 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v22 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v22 objects:v31 count:16];
    }
    while (v9);
  }

  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v12 = *(id *)(a1 + 80);
  uint64_t v13 = [v12 countByEnumeratingWithState:&v18 objects:v30 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v19;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v19 != v15) {
          objc_enumerationMutation(v12);
        }
        -[GEOPDDotPlace readAll:](*(void *)(*((void *)&v18 + 1) + 8 * v16++), 1);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v18 objects:v30 count:16];
    }
    while (v14);
  }

  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1, (void)v18);
  return [*(id *)(a1 + 32) readAll:1];
}

unint64_t GEOPDPlaceResponseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDPlaceResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1895269BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacesRequestResponseAnalyticsDataIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      uint64_t v11 = *(void *)&a1[v10];
      unint64_t v12 = v11 + 1;
      if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v9 & 7) == 4;
    }
    if (v15) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v16 = 0;
      goto LABEL_22;
    }
  }
  BOOL v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

os_unfair_lock_s *GEOPDPlaceResponseIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDPlaceResponseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 32);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOPDPlaceResponseClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasGlobalResult]
    && ([a1 globalResult],
        int v6 = (id *)objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOPDPlaceGlobalResultHasSensitiveFields(v6, a2),
        v6,
        HasSensitiveFields))
  {
    unsigned int v8 = [a1 globalResult];
    uint64_t v9 = (void *)[v8 copy];

    GEOPDPlaceGlobalResultClearSensitiveFields((uint64_t)v9, a2, 0);
    [a1 setGlobalResult:v9];
  }
  else
  {
    uint64_t v10 = [a1 globalResult];
    uint64_t v9 = (void *)v10;
    if (v10) {
      GEOPDPlaceGlobalResultClearSensitiveFields(v10, a2, 1);
    }
  }

  -[GEOPDPlaceResponse _readLegacyPlaceResults]((uint64_t)a1);
  if ([a1[13] count])
  {
    unint64_t v11 = 0;
    do
    {
      unint64_t v12 = [a1[13] objectAtIndexedSubscript:v11];
      char v13 = v12;
      if (a3 && GEOPDPlaceHasSensitiveFields(v12, a2))
      {
        uint64_t v14 = (void *)[v13 copy];
        BOOL v15 = [v14 requestData];
        [v15 clearSensitiveFields:a2];

        [a1[13] replaceObjectAtIndex:v11 withObject:v14];
      }
      else
      {
        [v13 clearSensitiveFields:a2];
      }

      ++v11;
    }
    while (v11 < [a1[13] count]);
  }
  -[GEOPDPlaceResponse _readMapsResults]((uint64_t)a1);
  unint64_t result = [a1[12] count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      long long v18 = [a1[12] objectAtIndexedSubscript:i];
      long long v19 = v18;
      if (a3 && GEOPDMapsResultHasSensitiveFields(v18, a2))
      {
        long long v20 = (void *)[v19 copy];
        GEOPDMapsResultClearSensitiveFields(v20, a2, 0);
        [a1[12] replaceObjectAtIndex:i withObject:v20];
      }
      else
      {
        [v19 clearSensitiveFields:a2];
      }

      unint64_t result = [a1[12] count];
    }
  }
  return result;
}

void sub_1895284E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189528EB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895292BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895294AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSuggestionParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v51 = v17;
        char v52 = v18 | v17;
        if ((v18 | v8)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        long long v20 = (int *)MEMORY[0x1E4F940E8];
        char v53 = (v19 == 0) | v18;
        BOOL v54 = v18;
        long long v21 = (int *)MEMORY[0x1E4F940C8];
        long long v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_68;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_68:
      int v49 = 1;
      goto LABEL_69;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v54;
    if ((v53 & 1) == 0)
    {
      uint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3) {
      break;
    }
    if (v33 == 2)
    {
      if (!v34 || (*(unsigned char *)(a1 + 60) & 2) != 0) {
        goto LABEL_62;
      }
      PBReaderReadString();
      uint64_t v39 = (GEOPDViewportInfo *)objc_claimAutoreleasedReturnValue();
      if (v39) {
        -[GEOPDPlaceSuggestionParameters _addNoFlagsMapsCategoryId:](a1, v39);
      }
      goto LABEL_55;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_62;
      }
      if ((*(unsigned char *)(a1 + 60) & 8) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_85;
        }
        v7 += *(unsigned __int8 *)(a1 + 60) << 28 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_85;
        }
        uint64_t v39 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_84;
        }
        PBReaderRecallMark();
        uint64_t v40 = *(void **)(a1 + 40);
        *(void *)(a1 + 40) = v39;

        --v7;
      }
      goto LABEL_66;
    }
    if (v51 & 1) == 0 || (*(unsigned char *)(a1 + 60)) {
      goto LABEL_62;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      int v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v43 = PBUnknownFieldAdd();
    long long v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v43)
    {
      int v49 = 0;
      uint64_t v50 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
      goto LABEL_70;
    }
LABEL_67:
    if (!(v52 & 1 | (v7 != 0))) {
      goto LABEL_68;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 60) & 4) != 0)
  {
LABEL_62:
    char v44 = PBReaderSkipValueWithTag();
    long long v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v44 & 1) == 0)
    {
      int v49 = 0;
      goto LABEL_69;
    }
    goto LABEL_67;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_85;
  }
  uint64_t v39 = objc_alloc_init(GEOPDMapsIdentifier);
  if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDPlaceSuggestionParameters _addNoFlagsSuggestedPlaceId:](a1, v39);
LABEL_55:

LABEL_66:
    long long v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_67;
  }
LABEL_84:

LABEL_85:
  int v49 = 0;
  long long v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_69:
  uint64_t v50 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
  if ((v51 & 1) == 0) {
    goto LABEL_71;
  }
LABEL_70:
  *(unsigned char *)(a1 + v50[603]) |= 1u;
LABEL_71:
  if (v54 || (v49 & 1) == 0)
  {
    *(unsigned char *)(a1 + v50[603]) |= 8u;
    *(unsigned char *)(a1 + v50[603]) |= 2u;
    *(unsigned char *)(a1 + v50[603]) |= 4u;
  }
  else if (v19)
  {
    while (1)
    {
      int v45 = *v19++;
      char v46 = 8;
      switch(v45)
      {
        case 0:
          goto LABEL_78;
        case 1:
          goto LABEL_77;
        case 2:
          char v46 = 2;
          goto LABEL_77;
        case 3:
          char v46 = 4;
LABEL_77:
          *(unsigned char *)(a1 + v50[603]) |= v46;
          break;
        default:
          continue;
      }
    }
  }
LABEL_78:
  if (v49) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v54)
  {
    int v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189529BBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189529D88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18952A388(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceSuggestionParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 40) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPDPlaceSuggestionParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPlaceSuggestionParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDPlaceSuggestionParametersReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDPlaceSuggestionParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPlaceSuggestionParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDPlaceSuggestionParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18952A710(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSuggestionResultReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unsigned __int8 v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDPlaceSuggestionResult addPlaceId:](a1, v18);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            long long v20 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18952AFCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18952B4A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlacecardEnrichmentParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v61 = v17;
        char v62 = v18 | v17;
        if ((v18 | v7)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        long long v20 = (int *)MEMORY[0x1E4F940E8];
        char v63 = (v19 == 0) | v18;
        BOOL v64 = v18;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        long long v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_75;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_75:
      int v59 = 1;
      goto LABEL_76;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v64;
    if ((v63 & 1) == 0)
    {
      uint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if (v7)
      {
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        while (1)
        {
          uint64_t v45 = *v20;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
            break;
          }
          char v48 = *(unsigned char *)(*(void *)(v3 + *v22) + v46);
          *(void *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0) {
            goto LABEL_69;
          }
          v42 += 7;
          BOOL v30 = v43++ >= 9;
          if (v30)
          {
            uint64_t v44 = 0;
            goto LABEL_71;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_69:
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v44 = 0;
        }
LABEL_71:
        *(unsigned char *)(a1 + 52) = v44 != 0;
        goto LABEL_66;
      }
LABEL_65:
      char v52 = PBReaderSkipValueWithTag();
      BOOL v21 = (int *)MEMORY[0x1E4F940C8];
      uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
      if (v52) {
        goto LABEL_66;
      }
      int v59 = 0;
LABEL_76:
      uint64_t v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
      goto LABEL_77;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 != 1)
    {
      if ((v61 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
      {
        if (!*(void *)(a1 + 16))
        {
          id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          uint64_t v50 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v49;
        }
        int v51 = PBUnknownFieldAdd();
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        if (!v51)
        {
          int v59 = 0;
          uint64_t v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
          goto LABEL_78;
        }
        goto LABEL_66;
      }
      goto LABEL_65;
    }
    if (!v34) {
      goto LABEL_65;
    }
    if ((*(unsigned char *)(a1 + 56) & 8) != 0)
    {
      char v53 = PBReaderSkipValueWithTag();
      uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
      if ((v53 & 1) == 0) {
        goto LABEL_97;
      }
      v8 += *(unsigned __int8 *)(a1 + 56) << 28 >> 31;
    }
    else
    {
      char v39 = PBReaderPlaceMark();
      uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
      if ((v39 & 1) == 0) {
        goto LABEL_97;
      }
      uint64_t v40 = objc_alloc_init(GEOPDMapsIdentifier);
      if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v40, (void *)v3)) {
        goto LABEL_96;
      }
      PBReaderRecallMark();
      id v41 = *(void **)(a1 + 32);
      *(void *)(a1 + 32) = v40;

      --v8;
    }
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
    if (!(v62 & 1 | (v8 != 0))) {
      goto LABEL_75;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 56) & 4) != 0) {
    goto LABEL_65;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_97;
  }
  uint64_t v40 = objc_alloc_init(GEOPDEnrichmentInfo);
  if (GEOPDEnrichmentInfoReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDPlacecardEnrichmentParameters _addNoFlagsEnrichmentInfo:](a1, v40);

    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
    goto LABEL_66;
  }
LABEL_96:

LABEL_97:
  int v59 = 0;
  uint64_t v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
  if ((v61 & 1) == 0) {
    goto LABEL_79;
  }
LABEL_78:
  *(unsigned char *)(a1 + v60[483]) |= 2u;
LABEL_79:
  if (v64 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[483]) |= 8u;
    *(unsigned char *)(a1 + v60[483]) |= 4u;
    goto LABEL_89;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v19++;
        int v54 = v55;
        if (v55 == 1) {
          break;
        }
        if (v54 == 2)
        {
          char v56 = 4;
          goto LABEL_88;
        }
        if (!v54) {
          goto LABEL_89;
        }
      }
      char v56 = 8;
LABEL_88:
      *(unsigned char *)(a1 + v60[483]) |= v56;
      continue;
    }
  }
LABEL_89:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v64)
  {
    int v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18952BD40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlacecardEnrichmentParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 32) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDEnrichmentInfo readAll:](*(void *)(*((void *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPDPlacecardEnrichmentParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPlacecardEnrichmentParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDPlacecardEnrichmentParametersReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDPlacecardEnrichmentParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPlacecardEnrichmentParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDPlacecardEnrichmentParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18952C560(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18952C7B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlacecardEnrichmentParametersIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 56) & 0x1C) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDEnrichmentInfoIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDPlacecardEnrichmentParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDPlacecardEnrichmentParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18952CBDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacecardEnrichmentResultReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        long long v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18952D254(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacesRequestResponseAnalyticsDataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        long long v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18952D7B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacesRequestResponseAnalyticsDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDPlacesRequestResponseAnalyticsDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18952D814(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPoiAtAddressLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    int v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          long long v20 = objc_alloc_init(GEOPDComponent);
          if (!GEOPDComponentReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDPoiAtAddressLookupParameters addComponent:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            long long v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_18952E088(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPoiAtAddressLookupResultReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        long long v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18952E864(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18952EB7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18952ECA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDPopularNearbyResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPopularNearbyResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDPopularNearbyResultReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDPopularNearbyResultReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOPDPopularNearbyResultReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18952F474(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18952F67C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18952F80C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18952FB14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPopularNearbySearchParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPopularNearbySearchParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDPopularNearbySearchParametersReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDPopularNearbySearchParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPopularNearbySearchParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18952FE4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189530038(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPopularNearbySearchParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189530288(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189530660(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPopularNearbySearchResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v62 = v17;
        char v63 = v18 | v17;
        char v61 = v9;
        if ((v18 | v9)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        long long v20 = (int *)MEMORY[0x1E4F940E8];
        char v64 = (v19 == 0) | v18;
        BOOL v65 = v18;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        long long v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_77;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_77:
      int v59 = 1;
      goto LABEL_78;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v65;
    if ((v64 & 1) == 0)
    {
      uint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if (v61)
      {
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (1)
        {
          uint64_t v44 = *v20;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6)) {
            break;
          }
          char v47 = *(unsigned char *)(*(void *)(v3 + *v22) + v45);
          *(void *)(v3 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0) {
            goto LABEL_67;
          }
          v41 += 7;
          BOOL v30 = v42++ >= 9;
          if (v30)
          {
            uint64_t v43 = 0;
            goto LABEL_69;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_67:
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v43 = 0;
        }
LABEL_69:
        *(unsigned char *)(a1 + 52) = v43 != 0;
        goto LABEL_76;
      }
      goto LABEL_64;
    }
    if (v33 != 2) {
      break;
    }
    if (v34)
    {
      if ((*(unsigned char *)(a1 + 56) & 8) == 0)
      {
        uint64_t v48 = PBReaderReadString();
        uint64_t v40 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v48;
LABEL_57:

        --v10;
LABEL_75:
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_76;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_98;
      }
      char v53 = 16 * *(unsigned char *)(a1 + 56);
LABEL_74:
      v10 += v53 >> 7;
      goto LABEL_75;
    }
LABEL_64:
    char v52 = PBReaderSkipValueWithTag();
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v52 & 1) == 0)
    {
      int v59 = 0;
LABEL_78:
      uint64_t v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
      goto LABEL_79;
    }
LABEL_76:
    if (!(v63 & 1 | (v10 != 0))) {
      goto LABEL_77;
    }
  }
  if (v33 != 1)
  {
    if ((v62 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v51 = PBUnknownFieldAdd();
      BOOL v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v51)
      {
        int v59 = 0;
        uint64_t v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        goto LABEL_80;
      }
      goto LABEL_76;
    }
    goto LABEL_64;
  }
  if (!v34) {
    goto LABEL_64;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_98;
    }
    char v53 = 32 * *(unsigned char *)(a1 + 56);
    goto LABEL_74;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_98;
  }
  char v39 = objc_alloc_init(GEOMapRegion);
  if (GEOMapRegionReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v40 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v39;
    goto LABEL_57;
  }

LABEL_98:
  int v59 = 0;
  uint64_t v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_79:
  if ((v62 & 1) == 0) {
    goto LABEL_81;
  }
LABEL_80:
  *(unsigned char *)(a1 + v60[493]) |= 2u;
LABEL_81:
  if (v65 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[493]) |= 4u;
    *(unsigned char *)(a1 + v60[493]) |= 8u;
    goto LABEL_91;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v19++;
        int v54 = v55;
        if (v55 == 1) {
          break;
        }
        if (v54 == 2)
        {
          char v56 = 8;
          goto LABEL_90;
        }
        if (!v54) {
          goto LABEL_91;
        }
      }
      char v56 = 4;
LABEL_90:
      *(unsigned char *)(a1 + v60[493]) |= v56;
      continue;
    }
  }
LABEL_91:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v65)
  {
    int v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189530DCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPopularNearbySearchResultIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

BOOL GEOPDPublisherSuggestionParametersReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 32) |= 1u;
          uint64_t v20 = *v4;
          unint64_t v21 = *(void *)&v3[v20];
          if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v22 = *(void *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v22 = 0;
          }
          *(void *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_36;
          }
          unsigned __int8 v18 = objc_alloc_init(GEOPDViewportInfo);
          if (!GEOPDViewportInfoReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_36;
          }
          PBReaderRecallMark();
          id v19 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v23 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v24 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v23;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_36;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_36:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_189531574(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPublisherSuggestionResultReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unsigned __int8 v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDPublisherSuggestionResult addPublisherId:](a1, v18);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v20 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189531C84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189532160(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895322D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189532408(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPublisherViewParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 24) readAll:1];
  -[GEOPDPublisherViewResultFilter readAll:](*(void *)(a1 + 32), 1);
  BOOL v2 = *(void **)(a1 + 40);

  return [v2 readAll:1];
}

unint64_t GEOPDPublisherViewParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPublisherViewParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    unsigned int v9 = (int *)&GEOPDPublisherViewParametersReadAllFrom_recursiveTag;
  }
  else {
    unsigned int v9 = (int *)&GEOPDPublisherViewParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPublisherViewParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDPublisherViewParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189532A18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189532BF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPublisherViewParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 64);
  if ((v2 & 0x24) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    if (v4)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v4 + 48));
      int v5 = *(unsigned char *)(v4 + 56) & 0x1C;
      os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 48));
      if (v5) {
        return 1;
      }
      unsigned int v2 = *(unsigned __int8 *)(a1 + 64);
    }
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOPDPublisherViewParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDPublisherViewParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189533254(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPublisherViewResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        int v17 = v16 & ~v11 | v9;
        int v49 = v16 | v11;
        if (((v16 | v11) | v7)) {
          unsigned __int8 v18 = 0;
        }
        else {
          unsigned __int8 v18 = a3;
        }
        BOOL v19 = v8 != 0;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = 1;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_62;
        }
        char v47 = v17;
        int v48 = v19 | v49 | v17;
        id v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_60;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      if (v25++ >= 9)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_60:
      int v21 = 1;
      goto LABEL_61;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v49;
    if (!((v18 == 0) | v49 & 1))
    {
      int v36 = v18;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    if (v34 == 2) {
      break;
    }
    if (v34 == 1)
    {
      if (!v35 || (*(unsigned char *)(a1 + 52) & 4) != 0) {
        goto LABEL_58;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_80;
      }
      uint64_t v40 = objc_alloc_init(GEOPDPublisherViewResultFilter);
      if (!GEOPDPublisherViewResultFilterReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
        goto LABEL_79;
      }
      PBReaderRecallMark();
      -[GEOPDPublisherViewResult _addNoFlagsResultFilter:](a1, v40);
      goto LABEL_50;
    }
    if (v47 & 1) == 0 || (*(unsigned char *)(a1 + 52)) {
      goto LABEL_58;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      unsigned int v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v21 = PBUnknownFieldAdd();
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    if (!v21) {
      goto LABEL_63;
    }
LABEL_56:
    if ((v48 & 1) == 0) {
      goto LABEL_60;
    }
LABEL_59:
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
      goto LABEL_60;
    }
  }
  if (!v35 || (*(unsigned char *)(a1 + 52) & 2) != 0)
  {
LABEL_58:
    int v21 = PBReaderSkipValueWithTag();
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    if ((v21 & v48 & 1) == 0) {
      goto LABEL_61;
    }
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_80;
  }
  uint64_t v40 = objc_alloc_init(GEOPDMapsIdentifier);
  if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v40, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDPublisherViewResult _addNoFlagsCollectionId:](a1, v40);
LABEL_50:

    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_56;
  }
LABEL_79:

LABEL_80:
  int v21 = 0;
  uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_61:
  LOBYTE(v17) = v47;
LABEL_62:
  if (v17) {
LABEL_63:
  }
    *(unsigned char *)(a1 + 52) |= 1u;
  if (v49 & 1 | ((v21 & 1) == 0))
  {
    *(unsigned char *)(a1 + 52) |= 4u;
    *(unsigned char *)(a1 + 52) |= 2u;
    goto LABEL_73;
  }
  if (v18)
  {
    while (1)
    {
      int v44 = *v18++;
      int v43 = v44;
      if (v44 == 1) {
        break;
      }
      if (v43 == 2)
      {
LABEL_69:
        *(unsigned char *)(a1 + 52) |= v43;
      }
      else if (!v43)
      {
        goto LABEL_73;
      }
    }
    LOBYTE(v43) = 4;
    goto LABEL_69;
  }
LABEL_73:
  if (v21) {
    unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v49)
  {
    uint64_t v45 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189533998(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189534058(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPublisherViewResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDPublisherViewResultFilter readAll:](*(void *)(*((void *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 24);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDPublisherViewResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPublisherViewResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDPublisherViewResultReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDPublisherViewResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPublisherViewResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDPublisherViewResultCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189534460(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189534720(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPublisherViewResultIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189534A70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189534DF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPublisherViewResultFilterReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v62 = v17;
        char v63 = v18 | v17;
        char v61 = v7;
        if ((v18 | v7)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        char v64 = (v19 == 0) | v18;
        BOOL v65 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_79;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_79:
      int v59 = 1;
      goto LABEL_80;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v65;
    if ((v64 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if (!v34) {
        goto LABEL_66;
      }
      if ((*(unsigned char *)(a1 + 56) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_100;
        }
        unint64_t v46 = objc_alloc_init(GEOPDPublisherViewResultFilterKeyword);
        if (!GEOPDPublisherViewResultFilterKeywordReadAllFrom((uint64_t)v46, (void *)v3, v10 & 1)) {
          goto LABEL_99;
        }
        PBReaderRecallMark();
        uint64_t v47 = 32;
LABEL_59:
        int v48 = *(void **)(a1 + v47);
        *(void *)(a1 + v47) = v46;

        --v8;
LABEL_77:
        int v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_78;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_100;
      }
      char v53 = 16 * *(unsigned char *)(a1 + 56);
LABEL_76:
      v8 += v53 >> 7;
      goto LABEL_77;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v61)
      {
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_69;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_71;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_69:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_71:
        *(_DWORD *)(a1 + 52) = v41;
        goto LABEL_78;
      }
    }
    else if ((v62 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v51 = PBUnknownFieldAdd();
      int v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v51)
      {
        int v59 = 0;
        uint64_t v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        goto LABEL_82;
      }
      goto LABEL_78;
    }
LABEL_66:
    char v52 = PBReaderSkipValueWithTag();
    int v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v52 & 1) == 0)
    {
      int v59 = 0;
LABEL_80:
      uint64_t v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
      goto LABEL_81;
    }
LABEL_78:
    if (!(v63 & 1 | (v8 != 0))) {
      goto LABEL_79;
    }
  }
  if (!v34) {
    goto LABEL_66;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_100;
    }
    char v53 = 32 * *(unsigned char *)(a1 + 56);
    goto LABEL_76;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_100;
  }
  unint64_t v46 = objc_alloc_init(GEOPDPublisherViewResultFilterAddress);
  if (GEOPDPublisherViewResultFilterAddressReadAllFrom((uint64_t)v46, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v47 = 24;
    goto LABEL_59;
  }
LABEL_99:

LABEL_100:
  int v59 = 0;
  uint64_t v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_81:
  if ((v62 & 1) == 0) {
    goto LABEL_83;
  }
LABEL_82:
  *(unsigned char *)(a1 + v60[515]) |= 2u;
LABEL_83:
  if (v65 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[515]) |= 4u;
    *(unsigned char *)(a1 + v60[515]) |= 8u;
    goto LABEL_93;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v19++;
        int v54 = v55;
        if (v55 == 2) {
          break;
        }
        if (v54 == 3)
        {
          char v56 = 8;
          goto LABEL_92;
        }
        if (!v54) {
          goto LABEL_93;
        }
      }
      char v56 = 4;
LABEL_92:
      *(unsigned char *)(a1 + v60[515]) |= v56;
      continue;
    }
  }
LABEL_93:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v65)
  {
    int v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189535588(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895357E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPublisherViewResultFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPublisherViewResultFilterReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDPublisherViewResultFilterReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDPublisherViewResultFilterReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPublisherViewResultFilterReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189535A48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189535C10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189535DC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPublisherViewResultFilterAddressReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unsigned __int8 v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          long long v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_1895365B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPublisherViewResultFilterKeywordReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    char v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          id v20 = objc_alloc_init(GEOPDRelatedSearchSuggestion);
          if (!GEOPDRelatedSearchSuggestionReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          int v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v22 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v23 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v22;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_189536D90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQueryUnderstandingParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  char v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFBFFFDFFFALL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 76) & 4) != 0));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 2;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v69 = v18;
        char v70 = v19 | v18;
        if ((v19 | v9)) {
          id v20 = 0;
        }
        else {
          id v20 = a3;
        }
        int v21 = (int *)MEMORY[0x1E4F940E8];
        char v71 = (v20 == 0) | v19;
        BOOL v72 = v19;
        id v22 = (int *)MEMORY[0x1E4F940C8];
        char v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_103;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_103:
      int v67 = 1;
      goto LABEL_104;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v72;
    if ((v71 & 1) == 0)
    {
      int v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v9 & 1) == 0) {
          goto LABEL_81;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (1)
        {
          uint64_t v43 = *v21;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v7)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v23) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_84;
          }
          v40 += 7;
          BOOL v31 = v41++ >= 9;
          if (v31)
          {
            LODWORD(v42) = 0;
            goto LABEL_86;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_84:
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v42) = 0;
        }
LABEL_86:
        uint64_t v61 = 68;
        goto LABEL_91;
      case 2:
        if (!v35) {
          goto LABEL_81;
        }
        if ((*(unsigned char *)(a1 + 76) & 8) == 0)
        {
          uint64_t v50 = PBReaderReadString();
          int v51 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v50;
          goto LABEL_80;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_121;
        }
        char v62 = 16 * *(unsigned char *)(a1 + 76);
        goto LABEL_100;
      case 3:
        if (!v35) {
          goto LABEL_81;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          char v62 = 2 * *(unsigned char *)(a1 + 76);
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        char v52 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v52, (void *)v3)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        uint64_t v53 = 48;
        goto LABEL_79;
      case 4:
        if ((v9 & 1) == 0) {
          goto LABEL_81;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (2)
        {
          uint64_t v56 = *v21;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v23) + v57);
            *(void *)(v3 + v56) = v58;
            v42 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              BOOL v31 = v55++ >= 9;
              if (v31)
              {
                LODWORD(v42) = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v42) = 0;
        }
LABEL_90:
        uint64_t v61 = 72;
LABEL_91:
        *(_DWORD *)(a1 + v61) = v42;
        goto LABEL_102;
      case 5:
        if (!v35) {
          goto LABEL_81;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          char v62 = 4 * *(unsigned char *)(a1 + 76);
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        char v52 = objc_alloc_init(GEOPDQueryUnderstandingTaxonomySearchParameters);
        if (!GEOPDQueryUnderstandingTaxonomySearchParametersReadAllFrom((uint64_t)v52, (void *)v3, v11 & 1))goto LABEL_120; {
        PBReaderRecallMark();
        }
        uint64_t v53 = 40;
        goto LABEL_79;
      case 6:
        if (!v35) {
          goto LABEL_81;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          char v62 = 8 * *(unsigned char *)(a1 + 76);
LABEL_100:
          v8 += v62 >> 7;
LABEL_101:
          id v22 = (int *)MEMORY[0x1E4F940C8];
          char v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_102:
          if (!(v70 & 1 | (v8 != 0))) {
            goto LABEL_103;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        char v52 = objc_alloc_init(GEOPDQueryUnderstandingTaxonomyLookupParameters);
        if (GEOPDQueryUnderstandingTaxonomyLookupParametersReadAllFrom((uint64_t)v52, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v53 = 32;
LABEL_79:
          int v51 = *(void **)(a1 + v53);
          *(void *)(a1 + v53) = v52;
LABEL_80:

          --v8;
          goto LABEL_101;
        }
LABEL_120:

LABEL_121:
        int v67 = 0;
        id v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_104:
        uint64_t v68 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
        if (v69) {
LABEL_105:
        }
          *(unsigned char *)(a1 + v68[654]) |= 4u;
        if (v72 || (v67 & 1) == 0)
        {
          *(unsigned char *)(a1 + v68[654]) |= 8u;
          *(unsigned char *)(a1 + v68[654]) |= 0x40u;
          *(unsigned char *)(a1 + v68[654]) |= 0x20u;
          *(unsigned char *)(a1 + v68[654]) |= 0x10u;
        }
        else if (v20)
        {
          while (1)
          {
            int v63 = *v20++;
            char v64 = 8;
            switch(v63)
            {
              case 0:
                goto LABEL_114;
              case 2:
                goto LABEL_113;
              case 3:
                char v64 = 64;
                goto LABEL_113;
              case 5:
                char v64 = 32;
                goto LABEL_113;
              case 6:
                char v64 = 16;
LABEL_113:
                *(unsigned char *)(a1 + v68[654]) |= v64;
                break;
              default:
                continue;
            }
          }
        }
LABEL_114:
        if (v67) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v72)
        {
          BOOL v65 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v69 & 1) == 0 || (*(unsigned char *)(a1 + 76) & 4) != 0)
        {
LABEL_81:
          char v60 = PBReaderSkipValueWithTag();
          char v7 = (int *)MEMORY[0x1E4F940E0];
          id v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v60 & 1) == 0)
          {
            int v67 = 0;
            goto LABEL_104;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v48 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v47;
          }
          int v49 = PBUnknownFieldAdd();
          id v22 = (int *)MEMORY[0x1E4F940C8];
          char v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v49)
          {
            int v67 = 0;
            uint64_t v68 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
            goto LABEL_105;
          }
        }
        goto LABEL_102;
    }
  }
}

void sub_189537A00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDQueryUnderstandingParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 48) readAll:1];
  -[GEOPDQueryUnderstandingTaxonomySearchParameters readAll:](*(void *)(a1 + 40), 1);
  uint64_t v2 = *(void *)(a1 + 32);

  -[GEOPDQueryUnderstandingTaxonomyLookupParameters readAll:](v2, 1);
}

unint64_t GEOPDQueryUnderstandingParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDQueryUnderstandingParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDQueryUnderstandingParametersReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDQueryUnderstandingParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDQueryUnderstandingParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDQueryUnderstandingParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189537E90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895380B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDQueryUnderstandingParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v2 = *(unsigned char *)(a1 + 76);
  if ((v2 & 0xC8) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 76) & 0x20) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    if (v4)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v4 + 48));
      int v5 = *(unsigned char *)(v4 + 56) & 0x1C;
      os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 48));
      if (v5) {
        return 1;
      }
      char v2 = *(unsigned char *)(a1 + 76);
    }
  }
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 32);
  if (!v6) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(v6 + 48));
  BOOL v3 = (*(unsigned char *)(v6 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 48));
  return v3;
}

os_unfair_lock_s *GEOPDQueryUnderstandingParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDQueryUnderstandingParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189538434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895387BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQueryUnderstandingResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v52 = v17;
        char v53 = v18 | v17;
        if ((v18 | v7)) {
          unsigned __int8 v19 = 0;
        }
        else {
          unsigned __int8 v19 = a3;
        }
        id v20 = (int *)MEMORY[0x1E4F940E8];
        char v54 = (v19 == 0) | v18;
        BOOL v55 = v18;
        int v21 = (int *)MEMORY[0x1E4F940C8];
        id v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_62;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_62:
      int v50 = 1;
      goto LABEL_63;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v55;
    if ((v54 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
        goto LABEL_56;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_82;
      }
      BOOL v39 = objc_alloc_init(GEOPDSearchQueryIntent);
      if (!GEOPDSearchQueryIntentReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
        goto LABEL_81;
      }
      PBReaderRecallMark();
      -[GEOPDQueryUnderstandingResult _addNoFlagsQueryIntent:](a1, v39);

      goto LABEL_60;
    }
    if (v52 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_56:
      char v44 = PBReaderSkipValueWithTag();
      int v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v44 & 1) == 0)
      {
        int v50 = 0;
        goto LABEL_63;
      }
      goto LABEL_61;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v43 = PBUnknownFieldAdd();
    int v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v43)
    {
      int v50 = 0;
      int v51 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v53 & 1 | (v8 != 0))) {
      goto LABEL_62;
    }
  }
  if (!v34) {
    goto LABEL_56;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_82;
    }
    v8 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
    goto LABEL_60;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_82;
  }
  BOOL v39 = objc_alloc_init(GEOPDQueryUnderstandingTaxonomyResult);
  if (GEOPDQueryUnderstandingTaxonomyResultReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    char v40 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v39;

    --v8;
LABEL_60:
    int v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_61;
  }
LABEL_81:

LABEL_82:
  int v50 = 0;
  int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_63:
  int v51 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
  if ((v52 & 1) == 0) {
    goto LABEL_65;
  }
LABEL_64:
  *(unsigned char *)(a1 + v51[666]) |= 1u;
LABEL_65:
  if (v55 || (v50 & 1) == 0)
  {
    *(unsigned char *)(a1 + v51[666]) |= 2u;
    *(unsigned char *)(a1 + v51[666]) |= 4u;
    goto LABEL_75;
  }
  if (v19)
  {
    while (1)
    {
      int v47 = *v19++;
      int v46 = v47;
      if (v47 == 1) {
        break;
      }
      if (v46 == 2)
      {
        char v45 = 4;
LABEL_71:
        *(unsigned char *)(a1 + v51[666]) |= v45;
      }
      else if (!v46)
      {
        goto LABEL_75;
      }
    }
    char v45 = 2;
    goto LABEL_71;
  }
LABEL_75:
  if (v50) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v55)
  {
    int v48 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189539318(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189539408(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDQueryUnderstandingResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        -[GEOPDSearchQueryIntent readAll:](*(void *)(*((void *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDQueryUnderstandingResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDQueryUnderstandingResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDQueryUnderstandingResultReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDQueryUnderstandingResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDQueryUnderstandingResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDQueryUnderstandingResultCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189539778(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895399B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDQueryUnderstandingResultIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189539C70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18953A3C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQueryUnderstandingTaxonomyLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDQueryUnderstandingTaxonomyLookupParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDQueryUnderstandingTaxonomyLookupParametersReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDQueryUnderstandingTaxonomyLookupParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDQueryUnderstandingTaxonomyLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18953A630(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18953A8F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18953ABC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDQueryUnderstandingTaxonomyResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    long long v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          id v20 = objc_alloc_init(GEOPDQueryUnderstandingTaxonomyResultItem);
          if (!GEOPDQueryUnderstandingTaxonomyResultItemReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDQueryUnderstandingTaxonomyResult addResultItem:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_18953B440(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQueryUnderstandingTaxonomyResultItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v6 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v15 = v11 != 0;
        char v16 = v15 & ~(_BYTE)v10 | v8;
        unsigned __int8 v17 = v15 | v10;
        char v61 = v16;
        char v62 = v17 | v16;
        if ((v17 | v6)) {
          int v18 = 0;
        }
        else {
          int v18 = a3;
        }
        unsigned __int8 v19 = (int *)MEMORY[0x1E4F940E8];
        id v20 = (int *)MEMORY[0x1E4F940C8];
        char v63 = (v18 == 0) | v17;
        BOOL v64 = v17;
        id v21 = (int *)MEMORY[0x1E4F940B8];
        id v22 = (int *)MEMORY[0x1E4F940E0];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v8;
LABEL_8:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_10:
        ++v7;
        uint64_t v8 = v12;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v22) || *(unsigned char *)(v3 + *v20)) {
      goto LABEL_79;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v19;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v22)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v21) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_79:
      int v59 = 1;
      goto LABEL_80;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v64;
    if ((v63 & 1) == 0)
    {
      BOOL v35 = v18;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if (!v34) {
        goto LABEL_66;
      }
      if ((*(unsigned char *)(a1 + 56) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_99;
        }
        int v46 = objc_alloc_init(GEOPDQueryUnderstandingTaxonomyResultItemBrand);
        if (!GEOPDQueryUnderstandingTaxonomyResultItemBrandReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_98;
        }
        PBReaderRecallMark();
        uint64_t v47 = 24;
LABEL_59:
        int v48 = *(void **)(a1 + v47);
        *(void *)(a1 + v47) = v46;

        --v7;
LABEL_77:
        id v20 = (int *)MEMORY[0x1E4F940C8];
        id v22 = (int *)MEMORY[0x1E4F940E0];
        goto LABEL_78;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_99;
      }
      char v53 = 32 * *(unsigned char *)(a1 + 56);
LABEL_76:
      v7 += v53 >> 7;
      goto LABEL_77;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if ((v6 & 1) == 0) {
        goto LABEL_66;
      }
      char v39 = 0;
      unsigned int v40 = 0;
      uint64_t v41 = 0;
      *(unsigned char *)(a1 + 56) |= 1u;
      while (1)
      {
        uint64_t v42 = *v19;
        uint64_t v43 = *(void *)(v3 + v42);
        unint64_t v44 = v43 + 1;
        if (v43 == -1 || v44 > *(void *)(v3 + *v22)) {
          break;
        }
        char v45 = *(unsigned char *)(*(void *)(v3 + *v21) + v43);
        *(void *)(v3 + v42) = v44;
        v41 |= (unint64_t)(v45 & 0x7F) << v39;
        if ((v45 & 0x80) == 0) {
          goto LABEL_69;
        }
        v39 += 7;
        BOOL v30 = v40++ >= 9;
        if (v30)
        {
          LODWORD(v41) = 0;
          goto LABEL_71;
        }
      }
      *(unsigned char *)(v3 + *v20) = 1;
LABEL_69:
      if (*(unsigned char *)(v3 + *v20)) {
        LODWORD(v41) = 0;
      }
LABEL_71:
      *(_DWORD *)(a1 + 52) = v41;
    }
    else
    {
      if ((v61 & 1) == 0 || (*(unsigned char *)(a1 + 56) & 2) != 0)
      {
LABEL_66:
        char v52 = PBReaderSkipValueWithTag();
        id v22 = (int *)MEMORY[0x1E4F940E0];
        id v20 = (int *)MEMORY[0x1E4F940C8];
        if ((v52 & 1) == 0)
        {
          int v59 = 0;
          goto LABEL_80;
        }
        goto LABEL_78;
      }
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        int v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v51 = PBUnknownFieldAdd();
      id v20 = (int *)MEMORY[0x1E4F940C8];
      id v22 = (int *)MEMORY[0x1E4F940E0];
      if (!v51)
      {
        int v59 = 0;
        char v60 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
        goto LABEL_81;
      }
    }
LABEL_78:
    if (!(v62 & 1 | (v7 != 0))) {
      goto LABEL_79;
    }
  }
  if (!v34) {
    goto LABEL_66;
  }
  if ((*(unsigned char *)(a1 + 56) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_99;
    }
    char v53 = 16 * *(unsigned char *)(a1 + 56);
    goto LABEL_76;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_99;
  }
  int v46 = objc_alloc_init(GEOPDQueryUnderstandingTaxonomyResultItemCategory);
  if (GEOPDQueryUnderstandingTaxonomyResultItemCategoryReadAllFrom((uint64_t)v46, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v47 = 32;
    goto LABEL_59;
  }
LABEL_98:

LABEL_99:
  int v59 = 0;
  id v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_80:
  char v60 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
  if ((v61 & 1) == 0) {
    goto LABEL_82;
  }
LABEL_81:
  *(unsigned char *)(a1 + v60[683]) |= 2u;
LABEL_82:
  if (v64 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[683]) |= 8u;
    *(unsigned char *)(a1 + v60[683]) |= 4u;
    goto LABEL_92;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v18++;
        int v54 = v55;
        if (v55 == 2) {
          break;
        }
        if (v54 == 3)
        {
          char v56 = 4;
          goto LABEL_91;
        }
        if (!v54) {
          goto LABEL_92;
        }
      }
      char v56 = 8;
LABEL_91:
      *(unsigned char *)(a1 + v60[683]) |= v56;
      continue;
    }
  }
LABEL_92:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v64)
  {
    uint64_t v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18953C03C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQueryUnderstandingTaxonomyResultItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDQueryUnderstandingTaxonomyResultItemReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDQueryUnderstandingTaxonomyResultItemReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDQueryUnderstandingTaxonomyResultItemReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDQueryUnderstandingTaxonomyResultItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18953C2A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18953C460(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDQueryUnderstandingTaxonomyResultItemCategoryReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        id v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18953CEE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQueryUnderstandingTaxonomySearchParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v58 = v15 | v8;
        char v59 = v16 | v15 | v8;
        if ((v16 | v9)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        char v60 = (v17 == 0) | v16;
        BOOL v61 = v16;
        BOOL v18 = (int *)MEMORY[0x1E4F940E8];
        id v19 = (int *)MEMORY[0x1E4F940C8];
        id v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_71;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_71:
      int v56 = 1;
      goto LABEL_72;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v61;
    if ((v60 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3)
    {
      if (v32 && (*(unsigned char *)(a1 + 56) & 4) == 0)
      {
        unint64_t v44 = PBReaderReadString();
        if (v44) {
          -[GEOPDQueryUnderstandingTaxonomySearchParameters _addNoFlagsCategoryBranch:](a1, v44);
        }

        goto LABEL_70;
      }
      goto LABEL_61;
    }
    if (v31 != 2)
    {
      if (v31 == 1)
      {
        if (v9)
        {
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v39 = 0;
          *(unsigned char *)(a1 + 56) |= 1u;
          while (1)
          {
            uint64_t v40 = *v18;
            uint64_t v41 = *(void *)(v3 + v40);
            unint64_t v42 = v41 + 1;
            if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
              break;
            }
            char v43 = *(unsigned char *)(*(void *)(v3 + *v20) + v41);
            *(void *)(v3 + v40) = v42;
            v39 |= (unint64_t)(v43 & 0x7F) << v37;
            if ((v43 & 0x80) == 0) {
              goto LABEL_65;
            }
            v37 += 7;
            BOOL v28 = v38++ >= 9;
            if (v28)
            {
              LODWORD(v39) = 0;
              goto LABEL_67;
            }
          }
          *(unsigned char *)(v3 + *v19) = 1;
LABEL_65:
          if (*(unsigned char *)(v3 + *v19)) {
            LODWORD(v39) = 0;
          }
LABEL_67:
          *(_DWORD *)(a1 + 52) = v39;
          goto LABEL_62;
        }
      }
      else if ((v58 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
      {
        if (!*(void *)(a1 + 16))
        {
          id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          int v48 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v47;
        }
        int v49 = PBUnknownFieldAdd();
        id v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v49)
        {
          int v56 = 0;
          uint64_t v57 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
          goto LABEL_73;
        }
        goto LABEL_62;
      }
      goto LABEL_61;
    }
    if (v32) {
      break;
    }
LABEL_61:
    char v50 = PBReaderSkipValueWithTag();
    id v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v50 & 1) == 0)
    {
      int v56 = 0;
      goto LABEL_72;
    }
LABEL_62:
    if (!(v59 & 1 | (v10 != 0))) {
      goto LABEL_71;
    }
  }
  if ((*(unsigned char *)(a1 + 56) & 8) == 0)
  {
    uint64_t v45 = PBReaderReadString();
    int v46 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v45;

    id v19 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_62;
  }
  if (PBReaderSkipValueWithTag())
  {
    v10 += *(unsigned __int8 *)(a1 + 56) << 28 >> 31;
LABEL_70:
    id v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_62;
  }
  int v56 = 0;
  id v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  uint64_t v57 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
  if ((v58 & 1) == 0) {
    goto LABEL_74;
  }
LABEL_73:
  *(unsigned char *)(a1 + v57[695]) |= 2u;
LABEL_74:
  if (v61 || (v56 & 1) == 0)
  {
    *(unsigned char *)(a1 + v57[695]) |= 8u;
    *(unsigned char *)(a1 + v57[695]) |= 4u;
    goto LABEL_84;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        int v52 = *v17++;
        int v51 = v52;
        if (v52 == 2) {
          break;
        }
        if (v51 == 3)
        {
          char v53 = 4;
          goto LABEL_83;
        }
        if (!v51) {
          goto LABEL_84;
        }
      }
      char v53 = 8;
LABEL_83:
      *(unsigned char *)(a1 + v57[695]) |= v53;
      continue;
    }
  }
LABEL_84:
  if (v56) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v61)
  {
    int v54 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18953D754(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18953DBE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18953DCC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQueryUnderstandingTaxonomySearchParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDQueryUnderstandingTaxonomySearchParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDQueryUnderstandingTaxonomySearchParametersReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDQueryUnderstandingTaxonomySearchParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDQueryUnderstandingTaxonomySearchParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18953DF30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18953E194(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18953E418(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRecentRouteInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int16 *)(a1 + 96) >> 1) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 96)), (uint16x4_t)0xFFFAFFFCFFF8FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 96) >> 5) & 1)+ ((*(_WORD *)(a1 + 96) >> 2) & 1)+ ((*(_WORD *)(a1 + 96) >> 3) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 > 4;
        char v15 = v14 & ~(_BYTE)v10 | v9;
        unsigned __int8 v16 = v14 | v10;
        char v59 = v15;
        char v60 = v16 | v15;
        if ((v16 | v8)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        char v61 = (v17 == 0) | v16;
        BOOL v62 = v16;
        BOOL v18 = (int *)MEMORY[0x1E4F940E8];
        id v19 = (int *)MEMORY[0x1E4F940C8];
        id v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v9;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (*(void *)(v3 + *v18) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v19))
  {
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4) {
      break;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v62;
    if ((v61 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_76;
        }
        if ((*(_WORD *)(a1 + 96) & 0x100) == 0)
        {
          uint64_t v37 = PBReaderReadData();
          uint64_t v38 = 72;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_118;
        }
        __int16 v52 = *(_WORD *)(a1 + 96) << 7;
        goto LABEL_94;
      case 2:
        if (!v32) {
          goto LABEL_76;
        }
        if ((*(_WORD *)(a1 + 96) & 0x40) == 0)
        {
          uint64_t v37 = PBReaderReadData();
          uint64_t v38 = 56;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_118;
        }
        __int16 v52 = *(_WORD *)(a1 + 96) << 9;
        goto LABEL_94;
      case 3:
        if (!v32) {
          goto LABEL_76;
        }
        if ((*(_WORD *)(a1 + 96) & 0x20) == 0)
        {
          uint64_t v37 = PBReaderReadData();
          uint64_t v38 = 48;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_118;
        }
        __int16 v52 = *(_WORD *)(a1 + 96) << 10;
        goto LABEL_94;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_76;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + 96) |= 1u;
        while (2)
        {
          uint64_t v45 = *v18;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v20) + v46);
            *(void *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v28 = v43++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v44) = 0;
        }
LABEL_81:
        *(_DWORD *)(a1 + 92) = v44;
        goto LABEL_96;
      case 5:
        if (!v32) {
          goto LABEL_76;
        }
        if ((*(_WORD *)(a1 + 96) & 4) == 0)
        {
          uint64_t v37 = PBReaderReadData();
          uint64_t v38 = 24;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_118;
        }
        __int16 v52 = *(_WORD *)(a1 + 96) << 13;
        goto LABEL_94;
      case 6:
        if (!v32 || (*(_WORD *)(a1 + 96) & 0x80) != 0) {
          goto LABEL_76;
        }
        int v49 = PBReaderReadData();
        if (v49) {
          -[GEOPDRecentRouteInfo _addNoFlagsZilchPointSegment:](a1, v49);
        }

        goto LABEL_95;
      case 7:
        if (!v32) {
          goto LABEL_76;
        }
        if ((*(_WORD *)(a1 + 96) & 8) == 0)
        {
          uint64_t v37 = PBReaderReadData();
          uint64_t v38 = 32;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_118;
        }
        __int16 v52 = *(_WORD *)(a1 + 96) << 12;
        goto LABEL_94;
      case 8:
        if (!v32) {
          goto LABEL_76;
        }
        if ((*(_WORD *)(a1 + 96) & 0x10) == 0)
        {
          uint64_t v37 = PBReaderReadData();
          uint64_t v38 = 40;
LABEL_75:
          char v50 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          id v19 = (int *)MEMORY[0x1E4F940C8];
          --v7;
          goto LABEL_96;
        }
        if (PBReaderSkipValueWithTag())
        {
          __int16 v52 = *(_WORD *)(a1 + 96) << 11;
LABEL_94:
          v7 += v52 >> 15;
LABEL_95:
          id v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_96;
        }
LABEL_118:
        int v57 = 0;
        char v58 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        id v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_99:
        if (v59) {
LABEL_100:
        }
          *(_WORD *)(a1 + v58[524]) |= 2u;
        if (v62 || (v57 & 1) == 0)
        {
          *(_WORD *)(a1 + v58[524]) |= 0x100u;
          *(_WORD *)(a1 + v58[524]) |= 0x80u;
          *(_WORD *)(a1 + v58[524]) |= 0x10u;
          *(_WORD *)(a1 + v58[524]) |= 0x40u;
          *(_WORD *)(a1 + v58[524]) |= 0x20u;
          *(_WORD *)(a1 + v58[524]) |= 4u;
          *(_WORD *)(a1 + v58[524]) |= 8u;
        }
        else if (v17)
        {
          while (1)
          {
            int v53 = *v17++;
            __int16 v54 = 256;
            switch(v53)
            {
              case 0:
                goto LABEL_112;
              case 1:
                goto LABEL_111;
              case 2:
                __int16 v54 = 64;
                goto LABEL_111;
              case 3:
                __int16 v54 = 32;
                goto LABEL_111;
              case 5:
                __int16 v54 = 4;
                goto LABEL_111;
              case 6:
                __int16 v54 = 128;
                goto LABEL_111;
              case 7:
                __int16 v54 = 8;
                goto LABEL_111;
              case 8:
                __int16 v54 = 16;
LABEL_111:
                *(_WORD *)(a1 + v58[524]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_112:
        if (v57) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v62)
        {
          int v55 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v59 & 1) == 0 || (*(_WORD *)(a1 + 96) & 2) != 0)
        {
LABEL_76:
          char v51 = PBReaderSkipValueWithTag();
          id v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v51 & 1) == 0)
          {
            int v57 = 0;
LABEL_98:
            char v58 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_99;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v40 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v39;
          }
          int v41 = PBUnknownFieldAdd();
          id v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v41)
          {
            int v57 = 0;
            char v58 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_100;
          }
        }
LABEL_96:
        if (!(v60 & 1 | (v7 != 0))) {
          goto LABEL_97;
        }
        break;
    }
  }
LABEL_97:
  int v57 = 1;
  goto LABEL_98;
}

void sub_18953F0A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18953F454(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18953FDE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18953FEE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189540838(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRecentRouteInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  BOOL v2 = (*(_WORD *)(a1 + 96) & 0x3FC) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return v2;
}

void sub_189540BD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRefreshIdLookUpParametersReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          BOOL v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDRefreshIdLookUpParameters addMapsId:](a1, v18);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v20 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189541634(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultDetourInfoReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOPDResultDetourInfo__detourTime;
                goto LABEL_56;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                break;
              }
              v18 += 7;
              BOOL v25 = v19++ > 8;
              if (v25)
              {
                LODWORD(v20) = 0;
                unint64_t v26 = &OBJC_IVAR___GEOPDResultDetourInfo__detourTime;
                goto LABEL_59;
              }
            }
            unint64_t v26 = &OBJC_IVAR___GEOPDResultDetourInfo__detourTime;
            goto LABEL_57;
          case 2u:
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 8u;
            while (2)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOPDResultDetourInfo__timeToPlace;
                goto LABEL_56;
              }
              char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v33;
              v20 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                BOOL v25 = v30++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  unint64_t v26 = &OBJC_IVAR___GEOPDResultDetourInfo__timeToPlace;
                  goto LABEL_59;
                }
                continue;
              }
              break;
            }
            unint64_t v26 = &OBJC_IVAR___GEOPDResultDetourInfo__timeToPlace;
            goto LABEL_57;
          case 3u:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (2)
            {
              uint64_t v37 = *v4;
              uint64_t v38 = *(void *)&v3[v37];
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOPDResultDetourInfo__detourDistance;
                goto LABEL_56;
              }
              char v40 = *(unsigned char *)(*(void *)&v3[*v7] + v38);
              *(void *)&v3[v37] = v39;
              v20 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                BOOL v25 = v36++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  unint64_t v26 = &OBJC_IVAR___GEOPDResultDetourInfo__detourDistance;
                  goto LABEL_59;
                }
                continue;
              }
              break;
            }
            unint64_t v26 = &OBJC_IVAR___GEOPDResultDetourInfo__detourDistance;
            goto LABEL_57;
          case 4u:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 4u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              BOOL v28 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v27;
            }
            if ((PBUnknownFieldAdd() & 1) == 0) {
              goto LABEL_67;
            }
            continue;
        }
        while (1)
        {
          uint64_t v43 = *v4;
          uint64_t v44 = *(void *)&v3[v43];
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)&v3[*v5]) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)&v3[*v7] + v44);
          *(void *)&v3[v43] = v45;
          v20 |= (unint64_t)(v46 & 0x7F) << v41;
          if ((v46 & 0x80) == 0)
          {
            unint64_t v26 = &OBJC_IVAR___GEOPDResultDetourInfo__distanceToPlace;
            goto LABEL_57;
          }
          v41 += 7;
          BOOL v25 = v42++ > 8;
          if (v25)
          {
            LODWORD(v20) = 0;
            unint64_t v26 = &OBJC_IVAR___GEOPDResultDetourInfo__distanceToPlace;
            goto LABEL_59;
          }
        }
        unint64_t v26 = &OBJC_IVAR___GEOPDResultDetourInfo__distanceToPlace;
LABEL_56:
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_59:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v47 = v3[*v6] == 0;
  }
  else
  {
LABEL_67:
    BOOL v47 = 0;
  }
  objc_sync_exit(v3);

  return v47;
}

void sub_189542604(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultDetourInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDResultDetourInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189542678(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189542DDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDReverseGeocodingParametersIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 60) & 0x38) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOLocationIsDirty(*(os_unfair_lock_s **)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

BOOL GEOPDReverseGeocodingResultReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189543DF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189544028(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895441E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895444D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189544608(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchBrowseCategorySuggestionParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 88) readAll:1];
  -[GEOPDVenueIdentifier readAll:](*(void *)(a1 + 80), 1);
  -[GEOPDSSearchEvChargingParameters readAll:](*(void *)(a1 + 48), 1);
  uint64_t v2 = *(void *)(a1 + 72);

  -[GEOPDSearchOriginationInfo readAll:](v2, 1);
}

unint64_t GEOPDSearchBrowseCategorySuggestionParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchBrowseCategorySuggestionParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDSearchBrowseCategorySuggestionParametersReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDSearchBrowseCategorySuggestionParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchBrowseCategorySuggestionParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchBrowseCategorySuggestionParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_189545564(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18954594C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchBrowseCategorySuggestionParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 124);
  if ((v2 & 0xC200) != 0) {
    return 1;
  }
  if ((v2 & 0x2000) != 0)
  {
    if (GEOPDVenueIdentifierIsDirty(*(void *)(a1 + 80))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 124);
  }
  if ((v2 & 0x400) != 0)
  {
    if (GEOPDSSearchEvChargingParametersIsDirty(*(void *)(a1 + 48))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 124);
  }
  if ((v2 & 0x1000) != 0)
  {
    if (!GEOPDSearchOriginationInfoIsDirty(*(void *)(a1 + 72)))
    {
      unsigned int v2 = *(unsigned __int16 *)(a1 + 124);
      return (v2 >> 11) & 1;
    }
    return 1;
  }
  return (v2 >> 11) & 1;
}

os_unfair_lock_s *GEOPDSearchBrowseCategorySuggestionParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDSearchBrowseCategorySuggestionParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189545E74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchBrowseCategorySuggestionResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v20 = objc_alloc_init(GEOPDBrowseCategory);
          if (!GEOPDBrowseCategoryReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDSearchBrowseCategorySuggestionResult addCategory:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189546CDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchCapabilitiesParametersReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          int v18 = objc_alloc_init(GEOPDViewportInfo);
          if (!GEOPDViewportInfoReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          id v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_189547610(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchCapabilitiesResultReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          int v18 = objc_alloc_init(GEOPDOfflineSearchCapabilities);
          if (!GEOPDOfflineSearchCapabilitiesReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          id v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_189547DE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchClientBehaviorReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              unint64_t v26 = &OBJC_IVAR___GEOPDSearchClientBehavior__shouldEnableRedoSearch;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              uint64_t v20 = 0;
              unint64_t v26 = &OBJC_IVAR___GEOPDSearchClientBehavior__shouldEnableRedoSearch;
              goto LABEL_44;
            }
          }
          unint64_t v26 = &OBJC_IVAR___GEOPDSearchClientBehavior__shouldEnableRedoSearch;
LABEL_42:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_44:
          *(unsigned char *)(a1 + *v26) = v20 != 0;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          char v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 20) |= 1u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          unint64_t v26 = &OBJC_IVAR___GEOPDSearchClientBehavior__shouldAllowManualRedoButton;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          uint64_t v20 = 0;
          unint64_t v26 = &OBJC_IVAR___GEOPDSearchClientBehavior__shouldAllowManualRedoButton;
          goto LABEL_44;
        }
      }
      unint64_t v26 = &OBJC_IVAR___GEOPDSearchClientBehavior__shouldAllowManualRedoButton;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1895487B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchFieldPlaceholderParametersReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v28 = *v4;
            uint64_t v29 = *(void *)&v3[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&v3[*v5]) {
              break;
            }
            char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
            *(void *)&v3[v28] = v30;
            v27 |= (unint64_t)(v31 & 0x7F) << v25;
            if ((v31 & 0x80) == 0) {
              goto LABEL_44;
            }
            v25 += 7;
            BOOL v15 = v26++ >= 9;
            if (v15)
            {
              uint64_t v27 = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6]) {
            uint64_t v27 = 0;
          }
LABEL_46:
          *(unsigned char *)(a1 + 20) = v27 != 0;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_40;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_42;
            }
          }
          v3[*v6] = 1;
LABEL_40:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_42:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v32 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v33 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v32;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_49;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v34 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    BOOL v34 = 0;
  }
  objc_sync_exit(v3);

  return v34;
}

void sub_189549100(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895499C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189549C98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189549EC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18954A1B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18954A344(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18954A5C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18954A864(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18954AA3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18954AB84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18954ACE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18954AE3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18954B008(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18954B23C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 320) readAll:1];
  [*(id *)(a1 + 304) readAll:1];
  -[GEOPDRecentRouteInfo readAll:](*(void *)(a1 + 208), 1);
  -[GEOPDSSearchFilter readAll:](*(void *)(a1 + 240), 1);
  -[GEOPDRetainedSearchMetadata readAll:](*(void *)(a1 + 224), 1);
  -[GEOPDSSearchEvChargingParameters readAll:](*(void *)(a1 + 160), 1);
  -[GEOPDETAFilter readAll:](*(void *)(a1 + 152), 1);
  [*(id *)(a1 + 216) readAll:1];
  [*(id *)(a1 + 192) readAll:1];
  -[GEOPDSearchOriginationInfo readAll:](*(void *)(a1 + 256), 1);
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 232);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    while (1)
    {
      if (*(void *)v8 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  objc_msgSend(*(id *)(a1 + 176), "readAll:", 1, v7);
  -[GEOPDSPunchInHints readAll:](*(void *)(a1 + 200), 1);
  return [*(id *)(a1 + 288) readAll:1];
}

unint64_t GEOPDSearchParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 332))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 336));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 328) = [v8 position];
  *(_DWORD *)(a1 + 332) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDSearchParametersReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDSearchParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 336));
  return Specified;
}

void sub_18954D8F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18954E038(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 336));
  unint64_t v2 = *(void *)(a1 + 372);
  if ((v2 & 0x3A400000000) != 0) {
    return 1;
  }
  if ((v2 & 0x4000000000) != 0)
  {
    if (GEOPDAutocompleteEntryIsDirty(*(os_unfair_lock_s **)(a1 + 304))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 372);
  }
  if ((v2 & 0x880000000) != 0) {
    return 1;
  }
  if ((v2 & 0x4000000) != 0)
  {
    if (GEOPDRecentRouteInfoIsDirty(*(void *)(a1 + 208))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 372);
  }
  if ((v2 & 0x40000000) != 0)
  {
    if (GEOPDSSearchFilterIsDirty(*(os_unfair_lock_s **)(a1 + 240))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 372);
  }
  if ((v2 & 0x10000000) != 0)
  {
    if (GEOPDRetainedSearchMetadataIsDirty(*(void *)(a1 + 224))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 372);
  }
  if ((v2 & 0x208000) != 0) {
    return 1;
  }
  if ((v2 & 0x100000) != 0)
  {
    if (GEOPDSSearchEvChargingParametersIsDirty(*(void *)(a1 + 160))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 372);
  }
  if ((v2 & 0x80000) != 0)
  {
    if (GEOPDETAFilterIsDirty(*(os_unfair_lock_s **)(a1 + 152))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 372);
  }
  if ((v2 & 0x20000) != 0) {
    return 1;
  }
  if ((v2 & 0x8000000) != 0)
  {
    if (GEOPDResultRefinementQueryIsDirty(*(os_unfair_lock_s **)(a1 + 216))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 372);
  }
  if ((v2 & 0x1016000) != 0) {
    return 1;
  }
  if ((v2 & 0x100000000) != 0)
  {
    if (GEOPDSearchOriginationInfoIsDirty(*(void *)(a1 + 256))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 372);
  }
  if ((v2 & 0x220440000) != 0) {
    return 1;
  }
  if ((v2 & 0x2000000) != 0)
  {
    if (GEOPDSPunchInHintsIsDirty(*(os_unfair_lock_s **)(a1 + 200))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 372);
  }
  if ((v2 & 0x1000000000) != 0) {
    return 1;
  }
  return (v2 >> 23) & 1;
}

void sub_18954E920(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18954F7F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18954FAA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18954FCD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18954FF78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189550104(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189550290(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18955041C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189550604(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189550790(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189550920(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189550C40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189550E7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895510AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18955131C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189551470(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895515FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189551788(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189551914(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189551B0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189551C98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189551E98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18955209C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189553744(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v80 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 72) readAll:1];
  long long v70 = 0u;
  long long v71 = 0u;
  long long v68 = 0u;
  long long v69 = 0u;
  id v2 = *(id *)(a1 + 56);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v68 objects:v79 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v69;
    while (1)
    {
      if (*(void *)v69 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v68 objects:v79 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  long long v66 = 0u;
  long long v67 = 0u;
  long long v64 = 0u;
  long long v65 = 0u;
  id v6 = *(id *)(a1 + 128);
  uint64_t v7 = [v6 countByEnumeratingWithState:&v64 objects:v78 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v65;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v65 != v9) {
          objc_enumerationMutation(v6);
        }
        -[GEOPDRelatedSearchSuggestion readAll:](*(void *)(*((void *)&v64 + 1) + 8 * v10++), 1);
      }
      while (v8 != v10);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v64 objects:v78 count:16];
    }
    while (v8);
  }

  -[GEOPDRelatedSearchSuggestion readAll:](*(void *)(a1 + 40), 1);
  long long v62 = 0u;
  long long v63 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  id v11 = *(id *)(a1 + 136);
  uint64_t v12 = [v11 countByEnumeratingWithState:&v60 objects:v77 count:16];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)v61;
    do
    {
      uint64_t v15 = 0;
      do
      {
        if (*(void *)v61 != v14) {
          objc_enumerationMutation(v11);
        }
        [*(id *)(*((void *)&v60 + 1) + 8 * v15++) readAll:1];
      }
      while (v13 != v15);
      uint64_t v13 = [v11 countByEnumeratingWithState:&v60 objects:v77 count:16];
    }
    while (v13);
  }

  -[GEOPDDirectionIntent readAll:](*(void *)(a1 + 48), 1);
  long long v58 = 0u;
  long long v59 = 0u;
  long long v56 = 0u;
  long long v57 = 0u;
  id v16 = *(id *)(a1 + 64);
  uint64_t v17 = [v16 countByEnumeratingWithState:&v56 objects:v76 count:16];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = *(void *)v57;
    do
    {
      uint64_t v20 = 0;
      do
      {
        if (*(void *)v57 != v19) {
          objc_enumerationMutation(v16);
        }
        -[GEOPDDisplayHeaderSubstitute readAll:](*(void *)(*((void *)&v56 + 1) + 8 * v20++), 1);
      }
      while (v18 != v20);
      uint64_t v18 = [v16 countByEnumeratingWithState:&v56 objects:v76 count:16];
    }
    while (v18);
  }

  long long v54 = 0u;
  long long v55 = 0u;
  long long v52 = 0u;
  long long v53 = 0u;
  id v21 = *(id *)(a1 + 160);
  uint64_t v22 = [v21 countByEnumeratingWithState:&v52 objects:v75 count:16];
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = *(void *)v53;
    do
    {
      uint64_t v25 = 0;
      do
      {
        if (*(void *)v53 != v24) {
          objc_enumerationMutation(v21);
        }
        -[GEOPDRetainedSearchMetadata readAll:](*(void *)(*((void *)&v52 + 1) + 8 * v25++), 1);
      }
      while (v23 != v25);
      uint64_t v23 = [v21 countByEnumeratingWithState:&v52 objects:v75 count:16];
    }
    while (v23);
  }

  long long v50 = 0u;
  long long v51 = 0u;
  long long v48 = 0u;
  long long v49 = 0u;
  id v26 = *(id *)(a1 + 176);
  uint64_t v27 = [v26 countByEnumeratingWithState:&v48 objects:v74 count:16];
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = *(void *)v49;
    do
    {
      uint64_t v30 = 0;
      do
      {
        if (*(void *)v49 != v29) {
          objc_enumerationMutation(v26);
        }
        -[GEOPDSSearchResultSection readAll:](*(void *)(*((void *)&v48 + 1) + 8 * v30++), 1);
      }
      while (v28 != v30);
      uint64_t v28 = [v26 countByEnumeratingWithState:&v48 objects:v74 count:16];
    }
    while (v28);
  }

  long long v46 = 0u;
  long long v47 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  id v31 = *(id *)(a1 + 120);
  uint64_t v32 = [v31 countByEnumeratingWithState:&v44 objects:v73 count:16];
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v34 = *(void *)v45;
    do
    {
      uint64_t v35 = 0;
      do
      {
        if (*(void *)v45 != v34) {
          objc_enumerationMutation(v31);
        }
        -[GEOPDRelatedEntitySection readAll:](*(void *)(*((void *)&v44 + 1) + 8 * v35++), 1);
      }
      while (v33 != v35);
      uint64_t v33 = [v31 countByEnumeratingWithState:&v44 objects:v73 count:16];
    }
    while (v33);
  }

  long long v42 = 0u;
  long long v43 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  id v36 = *(id *)(a1 + 192);
  uint64_t v37 = [v36 countByEnumeratingWithState:&v40 objects:v72 count:16];
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v39 = *(void *)v41;
    while (1)
    {
      if (*(void *)v41 != v39) {
        objc_enumerationMutation(v36);
      }
      if (!--v38)
      {
        uint64_t v38 = [v36 countByEnumeratingWithState:&v40 objects:v72 count:16];
        if (!v38) {
          break;
        }
      }
    }
  }

  -[GEOPDResultRefinementGroup readAll:](*(void *)(a1 + 152), 1);
  objc_msgSend(*(id *)(a1 + 104), "readAll:", 1, v40);
  [*(id *)(a1 + 88) readAll:1];
  -[GEOPDPaginationInfo readAll:](*(void *)(a1 + 96), 1);
}

unint64_t GEOPDSearchResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 212))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 216));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 208) = [v8 position];
  *(_DWORD *)(a1 + 212) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchResultReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchResultCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 216));
  return Specified;
}

void sub_189555900(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189556248(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchResultIsDirty(uint64_t a1)
{
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 216));
  uint64_t v2 = *(void *)(a1 + 248);
  if ((v2 & 0x405028000) != 0) {
    return 1;
  }
  if ((v2 & 0x2000) != 0)
  {
    if (GEOPDRelatedSearchSuggestionIsDirty(*(void *)(a1 + 40))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 248);
  }
  if ((v2 & 0x22000000) == 0)
  {
    if ((v2 & 0x4000) == 0) {
      goto LABEL_9;
    }
    if (!GEOPDDirectionIntentIsDirty(*(void *)(a1 + 48)))
    {
      uint64_t v2 = *(void *)(a1 + 248);
LABEL_9:
      if ((v2 & 0x150811000) != 0) {
        return 1;
      }
      if ((v2 & 0x8000000) != 0)
      {
        if (GEOPDResultRefinementGroupIsDirty(*(os_unfair_lock_s **)(a1 + 152))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 248);
      }
      if ((v2 & 0x800) != 0) {
        return 1;
      }
      if ((v2 & 0x200000) != 0)
      {
        if (GEOPDPlaceSummaryLayoutMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 104))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 248);
      }
      if ((v2 & 0x2800C0000) != 0) {
        return 1;
      }
      if ((v2 & 0x100000) != 0)
      {
        if (GEOPDPaginationInfoIsDirty(*(void *)(a1 + 96))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 248);
      }
      if ((v2 & 0x400000) != 0) {
        return 1;
      }
      if ((v2 & 0x1000000) != 0)
      {
        long long v42 = 0u;
        long long v43 = 0u;
        long long v40 = 0u;
        long long v41 = 0u;
        id v5 = *(id *)(a1 + 128);
        uint64_t v6 = [v5 countByEnumeratingWithState:&v40 objects:v48 count:16];
        if (v6)
        {
          uint64_t v7 = v6;
          uint64_t v8 = *(void *)v41;
LABEL_27:
          uint64_t v9 = 0;
          while (1)
          {
            if (*(void *)v41 != v8) {
              objc_enumerationMutation(v5);
            }
            if (GEOPDRelatedSearchSuggestionIsDirty(*(void *)(*((void *)&v40 + 1) + 8 * v9))) {
              goto LABEL_75;
            }
            if (v7 == ++v9)
            {
              uint64_t v7 = [v5 countByEnumeratingWithState:&v40 objects:v48 count:16];
              if (v7) {
                goto LABEL_27;
              }
              break;
            }
          }
        }

        uint64_t v2 = *(void *)(a1 + 248);
      }
      if ((v2 & 0x10000) != 0)
      {
        long long v38 = 0u;
        long long v39 = 0u;
        long long v36 = 0u;
        long long v37 = 0u;
        id v5 = *(id *)(a1 + 64);
        uint64_t v10 = [v5 countByEnumeratingWithState:&v36 objects:v47 count:16];
        if (v10)
        {
          uint64_t v11 = v10;
          uint64_t v12 = *(void *)v37;
LABEL_37:
          uint64_t v13 = 0;
          while (1)
          {
            if (*(void *)v37 != v12) {
              objc_enumerationMutation(v5);
            }
            if ((GEOPDDisplayHeaderSubstituteIsDirty(*(os_unfair_lock_s **)(*((void *)&v36 + 1)
                                                                                            + 8 * v13)) & 1) != 0)
              goto LABEL_75;
            if (v11 == ++v13)
            {
              uint64_t v11 = [v5 countByEnumeratingWithState:&v36 objects:v47 count:16];
              if (v11) {
                goto LABEL_37;
              }
              break;
            }
          }
        }

        uint64_t v2 = *(void *)(a1 + 248);
      }
      if ((v2 & 0x10000000) != 0)
      {
        long long v34 = 0u;
        long long v35 = 0u;
        long long v32 = 0u;
        long long v33 = 0u;
        id v5 = *(id *)(a1 + 160);
        uint64_t v14 = [v5 countByEnumeratingWithState:&v32 objects:v46 count:16];
        if (v14)
        {
          uint64_t v15 = v14;
          uint64_t v16 = *(void *)v33;
LABEL_47:
          uint64_t v17 = 0;
          while (1)
          {
            if (*(void *)v33 != v16) {
              objc_enumerationMutation(v5);
            }
            if (GEOPDRetainedSearchMetadataIsDirty(*(void *)(*((void *)&v32 + 1) + 8 * v17))) {
              goto LABEL_75;
            }
            if (v15 == ++v17)
            {
              uint64_t v15 = [v5 countByEnumeratingWithState:&v32 objects:v46 count:16];
              if (v15) {
                goto LABEL_47;
              }
              break;
            }
          }
        }

        uint64_t v2 = *(void *)(a1 + 248);
      }
      if ((v2 & 0x40000000) != 0)
      {
        long long v30 = 0u;
        long long v31 = 0u;
        long long v28 = 0u;
        long long v29 = 0u;
        id v5 = *(id *)(a1 + 176);
        uint64_t v18 = [v5 countByEnumeratingWithState:&v28 objects:v45 count:16];
        if (v18)
        {
          uint64_t v19 = v18;
          uint64_t v20 = *(void *)v29;
LABEL_57:
          uint64_t v21 = 0;
          while (1)
          {
            if (*(void *)v29 != v20) {
              objc_enumerationMutation(v5);
            }
            if (GEOPDSSearchResultSectionIsDirty(*(void *)(*((void *)&v28 + 1) + 8 * v21))) {
              goto LABEL_75;
            }
            if (v19 == ++v21)
            {
              uint64_t v19 = [v5 countByEnumeratingWithState:&v28 objects:v45 count:16];
              if (v19) {
                goto LABEL_57;
              }
              break;
            }
          }
        }

        uint64_t v2 = *(void *)(a1 + 248);
      }
      if ((v2 & 0x800000) == 0) {
        return 0;
      }
      long long v26 = 0u;
      long long v27 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      id v5 = *(id *)(a1 + 120);
      uint64_t v3 = [v5 countByEnumeratingWithState:&v24 objects:v44 count:16];
      if (!v3)
      {
LABEL_76:

        return v3;
      }
      uint64_t v22 = *(void *)v25;
LABEL_68:
      uint64_t v23 = 0;
      while (1)
      {
        if (*(void *)v25 != v22) {
          objc_enumerationMutation(v5);
        }
        if (GEOPDRelatedEntitySectionIsDirty(*(void *)(*((void *)&v24 + 1) + 8 * v23))) {
          break;
        }
        if (v3 == ++v23)
        {
          uint64_t v3 = [v5 countByEnumeratingWithState:&v24 objects:v44 count:16];
          if (v3) {
            goto LABEL_68;
          }
          goto LABEL_76;
        }
      }
LABEL_75:
      uint64_t v3 = 1;
      goto LABEL_76;
    }
  }
  return 1;
}

void sub_189557164(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchResultsForCategoryEntryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1)
      + (*(unsigned char *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v7;
        char v18 = v16 | v11;
        if (((v16 | v11) | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = 1;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_86;
        }
        char v65 = v17;
        char v66 = v18 | v17;
        char v68 = (v19 == 0) | v18;
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        char v67 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_84;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_84:
      int v21 = 1;
      goto LABEL_85;
    }
    unint64_t v35 = v26 >> 3;
    BOOL v36 = v18;
    if ((v68 & 1) == 0)
    {
      long long v37 = v19;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    if (v35 == 2)
    {
      if (v36 && (*(unsigned char *)(a1 + 68) & 2) == 0)
      {
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_105;
          }
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v22)) {
              break;
            }
            char v43 = 0;
            unsigned int v44 = 0;
            uint64_t v45 = 0;
            while (1)
            {
              uint64_t v46 = *v20;
              uint64_t v47 = *(void *)(v3 + v46);
              unint64_t v48 = v47 + 1;
              if (v47 == -1 || v48 > *(void *)(v3 + *v6)) {
                break;
              }
              char v49 = *(unsigned char *)(*(void *)(v3 + *v23) + v47);
              *(void *)(v3 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                BOOL v31 = v44++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_59;
            }
            *(unsigned char *)(v3 + *v22) = 1;
LABEL_59:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v54 = 0;
          unsigned int v55 = 0;
          uint64_t v56 = 0;
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          while (1)
          {
            uint64_t v57 = *v20;
            uint64_t v58 = *(void *)(v3 + v57);
            unint64_t v59 = v58 + 1;
            if (v58 == -1 || v59 > *(void *)(v3 + *v6)) {
              break;
            }
            char v60 = *(unsigned char *)(*(void *)(v3 + *v23) + v58);
            *(void *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              BOOL v31 = v55++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_82;
          }
          *(unsigned char *)(v3 + *v22) = 1;
LABEL_82:
          PBRepeatedUInt32Add();
        }
        char v18 = v67;
        goto LABEL_68;
      }
      goto LABEL_67;
    }
    if (v35 == 1) {
      break;
    }
    if (v65 & 1) == 0 || (*(unsigned char *)(a1 + 68)) {
      goto LABEL_67;
    }
    if (!*(void *)(a1 + 16))
    {
      id v50 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      long long v51 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v50;
    }
    int v52 = PBUnknownFieldAdd();
    char v18 = v67;
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    if (!v52)
    {
      int v21 = 0;
      goto LABEL_87;
    }
LABEL_68:
    if (!(v66 & 1 | (v9 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
      goto LABEL_84;
    }
  }
  if (!v36)
  {
LABEL_67:
    char v53 = PBReaderSkipValueWithTag();
    char v18 = v67;
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    if ((v53 & 1) == 0)
    {
      int v21 = 0;
      goto LABEL_85;
    }
    goto LABEL_68;
  }
  if ((*(unsigned char *)(a1 + 68) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_105;
    }
    v9 += *(unsigned __int8 *)(a1 + 68) << 29 >> 31;
    goto LABEL_73;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_105;
  }
  long long v41 = objc_alloc_init(GEOPDBrowseCategory);
  if (GEOPDBrowseCategoryReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    long long v42 = *(void **)(a1 + 48);
    *(void *)(a1 + 48) = v41;

    --v9;
LABEL_73:
    char v18 = v67;
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_68;
  }

LABEL_105:
  int v21 = 0;
  char v18 = v67;
  uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
  char v17 = v65;
LABEL_86:
  if (v17) {
LABEL_87:
  }
    *(unsigned char *)(a1 + 68) |= 1u;
  if (v18 & 1 | ((v21 & 1) == 0))
  {
    *(unsigned char *)(a1 + 68) |= 4u;
    *(unsigned char *)(a1 + 68) |= 2u;
    goto LABEL_97;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v62 = *v19++;
        int v61 = v62;
        if (v62 == 1) {
          break;
        }
        if (v61 == 2) {
          goto LABEL_96;
        }
        if (!v61) {
          goto LABEL_97;
        }
      }
      LOBYTE(v61) = 4;
LABEL_96:
      *(unsigned char *)(a1 + 68) |= v61;
      continue;
    }
  }
LABEL_97:
  if (v21)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
    if ((v18 & 1) == 0) {
      return v3;
    }
LABEL_101:
    long long v63 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v18) {
      goto LABEL_101;
    }
  }
  return v3;
}

void sub_1895583C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895584BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchResultsForCategoryEntryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchResultsForCategoryEntryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchResultsForCategoryEntryReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchResultsForCategoryEntryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchResultsForCategoryEntryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDBrowseCategory readAll:](*(void *)(a1 + 48), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189558740(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18955891C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189558A80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchSubstringDescriptorReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_49;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_51;
              }
            }
            v3[*v6] = 1;
LABEL_49:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_51:
            uint64_t v40 = 32;
            goto LABEL_60;
          case 2u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v20 = 0;
            while (2)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
                *(void *)&v3[v29] = v31;
                v20 |= (unint64_t)(v32 & 0x7F) << v27;
                if (v32 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_55:
            uint64_t v40 = 24;
            goto LABEL_60;
          case 3u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v20 = 0;
            break;
          case 4u:
            int v39 = PBReaderReadString();
            if (v39) {
              -[GEOPDSearchSubstringDescriptor addSpanData:](a1, v39);
            }

            continue;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unint64_t v26 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v25;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_63;
            }
            continue;
        }
        while (1)
        {
          uint64_t v35 = *v4;
          uint64_t v36 = *(void *)&v3[v35];
          unint64_t v37 = v36 + 1;
          if (v36 == -1 || v37 > *(void *)&v3[*v5]) {
            break;
          }
          char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
          *(void *)&v3[v35] = v37;
          v20 |= (unint64_t)(v38 & 0x7F) << v33;
          if ((v38 & 0x80) == 0) {
            goto LABEL_57;
          }
          v33 += 7;
          BOOL v15 = v34++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_59;
          }
        }
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_59:
        uint64_t v40 = 28;
LABEL_60:
        *(_DWORD *)(a1 + v40) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v41 = v3[*v6] == 0;
  }
  else
  {
LABEL_63:
    BOOL v41 = 0;
  }
  objc_sync_exit(v3);

  return v41;
}

void sub_189559438(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchZeroKeywordCategorySuggestionParametersReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      while (!v3[*v6])
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 2u:
            *(unsigned char *)(a1 + 44) |= 1u;
            uint64_t v18 = *v4;
            unint64_t v19 = *(void *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
              *(void *)&v3[v18] = v19 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            *(void *)(a1 + 16) = v20;
            goto LABEL_66;
          case 3u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_69;
            }
            unint64_t v23 = objc_alloc_init(GEOLatLng);
            if (!GEOLatLngReadAllFrom((uint64_t)v23, v3))
            {

              goto LABEL_69;
            }
            PBReaderRecallMark();
            char v24 = *(void **)(a1 + 24);
            *(void *)(a1 + 24) = v23;

LABEL_66:
            if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
              goto LABEL_67;
            }
            break;
          case 4u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            *(unsigned char *)(a1 + 44) |= 2u;
            while (2)
            {
              uint64_t v28 = *v4;
              uint64_t v29 = *(void *)&v3[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
                *(void *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v27) = 0;
                    goto LABEL_54;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v27) = 0;
            }
LABEL_54:
            uint64_t v45 = 32;
            goto LABEL_59;
          case 5u:
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v27 = 0;
            *(unsigned char *)(a1 + 44) |= 4u;
            while (2)
            {
              uint64_t v34 = *v4;
              uint64_t v35 = *(void *)&v3[v34];
              unint64_t v36 = v35 + 1;
              if (v35 == -1 || v36 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v37 = *(unsigned char *)(*(void *)&v3[*v7] + v35);
                *(void *)&v3[v34] = v36;
                v27 |= (unint64_t)(v37 & 0x7F) << v32;
                if (v37 < 0)
                {
                  v32 += 7;
                  BOOL v15 = v33++ >= 9;
                  if (v15)
                  {
                    LODWORD(v27) = 0;
                    goto LABEL_58;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v27) = 0;
            }
LABEL_58:
            uint64_t v45 = 36;
LABEL_59:
            *(_DWORD *)(a1 + v45) = v27;
            goto LABEL_66;
          case 6u:
            char v38 = 0;
            unsigned int v39 = 0;
            uint64_t v40 = 0;
            *(unsigned char *)(a1 + 44) |= 8u;
            while (2)
            {
              uint64_t v41 = *v4;
              uint64_t v42 = *(void *)&v3[v41];
              unint64_t v43 = v42 + 1;
              if (v42 == -1 || v43 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v44 = *(unsigned char *)(*(void *)&v3[*v7] + v42);
                *(void *)&v3[v41] = v43;
                v40 |= (unint64_t)(v44 & 0x7F) << v38;
                if (v44 < 0)
                {
                  v38 += 7;
                  BOOL v15 = v39++ >= 9;
                  if (v15)
                  {
                    uint64_t v40 = 0;
                    goto LABEL_63;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v40 = 0;
            }
LABEL_63:
            *(unsigned char *)(a1 + 40) = v40 != 0;
            goto LABEL_66;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              uint64_t v22 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v21;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_69;
            }
            goto LABEL_66;
        }
      }
    }
LABEL_67:
    BOOL v46 = v3[*v6] == 0;
  }
  else
  {
LABEL_69:
    BOOL v46 = 0;
  }
  objc_sync_exit(v3);

  return v46;
}

void sub_18955A280(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18955A918(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchZeroKeywordCategorySuggestionResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        int v17 = v16 & ~v11 | v9;
        int v50 = v16 | v11;
        if (((v16 | v11) | v7)) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = a3;
        }
        BOOL v19 = v8 != 0;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = 1;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_62;
        }
        char v48 = v17;
        int v49 = v19 | v50 | v17;
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_60;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      if (v25++ >= 9)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_60:
      int v21 = 1;
      goto LABEL_61;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v50;
    if (!((v18 == 0) | v50 & 1))
    {
      unint64_t v36 = v18;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    if (v34 == 2) {
      break;
    }
    if (v34 == 1)
    {
      if (!v35 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
        goto LABEL_58;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_81;
      }
      uint64_t v40 = objc_alloc_init(GEOPDBrowseCategory);
      if (!GEOPDBrowseCategoryReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
        goto LABEL_80;
      }
      PBReaderRecallMark();
      -[GEOPDSearchZeroKeywordCategorySuggestionResult _addNoFlagsCategory:](a1, v40);
      goto LABEL_50;
    }
    if (v48 & 1) == 0 || (*(unsigned char *)(a1 + 52)) {
      goto LABEL_58;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v21 = PBUnknownFieldAdd();
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    if (!v21) {
      goto LABEL_63;
    }
LABEL_56:
    if ((v49 & 1) == 0) {
      goto LABEL_60;
    }
LABEL_59:
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
      goto LABEL_60;
    }
  }
  if (!v35 || (*(unsigned char *)(a1 + 52) & 4) != 0)
  {
LABEL_58:
    int v21 = PBReaderSkipValueWithTag();
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    if ((v21 & v49 & 1) == 0) {
      goto LABEL_61;
    }
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_81;
  }
  uint64_t v40 = objc_alloc_init(GEOPDSearchZeroKeywordEntry);
  if (GEOPDSearchZeroKeywordEntryReadAllFrom((uint64_t)v40, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDSearchZeroKeywordCategorySuggestionResult _addNoFlagsZeroKeywordEntry:](a1, v40);
LABEL_50:

    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_56;
  }
LABEL_80:

LABEL_81:
  int v21 = 0;
  uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_61:
  LOBYTE(v17) = v48;
LABEL_62:
  if (v17) {
LABEL_63:
  }
    *(unsigned char *)(a1 + 52) |= 1u;
  if (v50 & 1 | ((v21 & 1) == 0))
  {
    *(unsigned char *)(a1 + 52) |= 2u;
    *(unsigned char *)(a1 + 52) |= 4u;
    goto LABEL_74;
  }
  if (v18)
  {
    while (1)
    {
      int v45 = *v18++;
      int v44 = v45;
      if (v45 == 1) {
        break;
      }
      if (v44 == 2)
      {
        char v43 = 4;
LABEL_70:
        *(unsigned char *)(a1 + 52) |= v43;
      }
      else if (!v44)
      {
        goto LABEL_74;
      }
    }
    char v43 = 2;
    goto LABEL_70;
  }
LABEL_74:
  if (v21) {
    unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v50)
  {
    BOOL v46 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18955B0A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18955B674(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchZeroKeywordCategorySuggestionResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v15 objects:v20 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v16;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v16 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDBrowseCategory readAll:](*(void *)(*((void *)&v15 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v15 objects:v20 count:16];
    }
    while (v4);
  }

  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v7 = *(id *)(a1 + 32);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v11 objects:v19 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v12;
    while (1)
    {
      if (*(void *)v12 != v10) {
        objc_enumerationMutation(v7);
      }
      if (!--v9)
      {
        uint64_t v9 = [v7 countByEnumeratingWithState:&v11 objects:v19 count:16];
        if (!v9) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDSearchZeroKeywordCategorySuggestionResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchZeroKeywordCategorySuggestionResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchZeroKeywordCategorySuggestionResultReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchZeroKeywordCategorySuggestionResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchZeroKeywordCategorySuggestionResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchZeroKeywordCategorySuggestionResultCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18955BA64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18955BD24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchZeroKeywordCategorySuggestionResultIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18955C074(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchZeroKeywordEntryReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      id v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_74;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        int v17 = v10 & 7;
        if (v16 || v17 == 4) {
          goto LABEL_74;
        }
        unint64_t v19 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_75;
            }
            while (*(void *)&v3[*v4] < *(void *)&v3[*v5] && !v3[*v6])
            {
              char v27 = 0;
              unsigned int v28 = 0;
              uint64_t v29 = 0;
              while (1)
              {
                uint64_t v30 = *v4;
                uint64_t v31 = *(void *)&v3[v30];
                unint64_t v32 = v31 + 1;
                if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
                  break;
                }
                char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
                *(void *)&v3[v30] = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (!v15) {
                    continue;
                  }
                }
                goto LABEL_41;
              }
              v3[*v6] = 1;
LABEL_41:
              PBRepeatedUInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v43 = 0;
            unsigned int v44 = 0;
            uint64_t v45 = 0;
            while (1)
            {
              uint64_t v46 = *v4;
              uint64_t v47 = *(void *)&v3[v46];
              unint64_t v48 = v47 + 1;
              if (v47 == -1 || v48 > *(void *)&v3[*v5]) {
                break;
              }
              char v49 = *(unsigned char *)(*(void *)&v3[*v7] + v47);
              *(void *)&v3[v46] = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                BOOL v15 = v44++ >= 9;
                if (!v15) {
                  continue;
                }
              }
              goto LABEL_73;
            }
            v3[*v6] = 1;
LABEL_73:
            PBRepeatedUInt32Add();
          }
          goto LABEL_62;
        }
        if (v19 == 2) {
          break;
        }
        if (v19 == 1)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 48) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_54;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_56;
            }
          }
          v3[*v6] = 1;
LABEL_54:
          if (v3[*v6]) {
            LODWORD(v22) = 0;
          }
LABEL_56:
          uint64_t v42 = 40;
LABEL_61:
          *(_DWORD *)(a1 + v42) = v22;
          goto LABEL_62;
        }
        if (!*(void *)(a1 + 8))
        {
          id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          id v41 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v40;
        }
        if (!PBUnknownFieldAdd()) {
          goto LABEL_75;
        }
LABEL_62:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_74;
        }
      }
      char v34 = 0;
      unsigned int v35 = 0;
      uint64_t v22 = 0;
      *(unsigned char *)(a1 + 48) |= 2u;
      while (1)
      {
        uint64_t v36 = *v4;
        uint64_t v37 = *(void *)&v3[v36];
        unint64_t v38 = v37 + 1;
        if (v37 == -1 || v38 > *(void *)&v3[*v5]) {
          break;
        }
        char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
        *(void *)&v3[v36] = v38;
        v22 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0) {
          goto LABEL_58;
        }
        v34 += 7;
        BOOL v15 = v35++ >= 9;
        if (v15)
        {
          LODWORD(v22) = 0;
          goto LABEL_60;
        }
      }
      v3[*v6] = 1;
LABEL_58:
      if (v3[*v6]) {
        LODWORD(v22) = 0;
      }
LABEL_60:
      uint64_t v42 = 44;
      goto LABEL_61;
    }
LABEL_74:
    BOOL v50 = v3[*v6] == 0;
  }
  else
  {
LABEL_75:
    BOOL v50 = 0;
  }
  objc_sync_exit(v3);

  return v50;
}

void sub_18955CACC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchZeroKeywordWithSearchResultsSuggestionParametersReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      id v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 4u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                char v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__maxCategories;
                goto LABEL_56;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                break;
              }
              v18 += 7;
              BOOL v25 = v19++ > 8;
              if (v25)
              {
                LODWORD(v20) = 0;
                char v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__maxCategories;
                goto LABEL_59;
              }
            }
            char v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__maxCategories;
            goto LABEL_57;
          case 2u:
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 8u;
            while (2)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5])
              {
                char v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__maxResultsPerCategory;
                goto LABEL_56;
              }
              char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v33;
              v20 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                BOOL v25 = v30++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  char v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__maxResultsPerCategory;
                  goto LABEL_59;
                }
                continue;
              }
              break;
            }
            char v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__maxResultsPerCategory;
            goto LABEL_57;
          case 3u:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (2)
            {
              uint64_t v37 = *v4;
              uint64_t v38 = *(void *)&v3[v37];
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)&v3[*v5])
              {
                char v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__blurredHourOfDay;
                goto LABEL_56;
              }
              char v40 = *(unsigned char *)(*(void *)&v3[*v7] + v38);
              *(void *)&v3[v37] = v39;
              v20 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                BOOL v25 = v36++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  char v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__blurredHourOfDay;
                  goto LABEL_59;
                }
                continue;
              }
              break;
            }
            char v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__blurredHourOfDay;
            goto LABEL_57;
          case 4u:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unsigned int v28 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v27;
            }
            if ((PBUnknownFieldAdd() & 1) == 0) {
              goto LABEL_67;
            }
            continue;
        }
        while (1)
        {
          uint64_t v43 = *v4;
          uint64_t v44 = *(void *)&v3[v43];
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)&v3[*v5]) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)&v3[*v7] + v44);
          *(void *)&v3[v43] = v45;
          v20 |= (unint64_t)(v46 & 0x7F) << v41;
          if ((v46 & 0x80) == 0)
          {
            char v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__dayOfWeek;
            goto LABEL_57;
          }
          v41 += 7;
          BOOL v25 = v42++ > 8;
          if (v25)
          {
            LODWORD(v20) = 0;
            char v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__dayOfWeek;
            goto LABEL_59;
          }
        }
        char v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__dayOfWeek;
LABEL_56:
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_59:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v47 = v3[*v6] == 0;
  }
  else
  {
LABEL_67:
    BOOL v47 = 0;
  }
  objc_sync_exit(v3);

  return v47;
}

void sub_18955D6BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchZeroKeywordWithSearchResultsSuggestionResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    id v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v20 = objc_alloc_init(GEOPDSearchResultsForCategoryEntry);
          if (!GEOPDSearchResultsForCategoryEntryReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDSearchZeroKeywordWithSearchResultsSuggestionResult addSearchResultsForCategoryEntry:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_18955E074(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18955E64C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18955E804(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18955EA20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18955F430(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSiriSearchParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 72) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  id v2 = *(id *)(a1 + 64);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v7;
    while (1)
    {
      if (*(void *)v7 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  -[GEOPDIndexQueryNode readAll:](*(void *)(a1 + 40), 1);
  -[GEOPDRecentRouteInfo readAll:](*(void *)(a1 + 48), 1);
}

unint64_t GEOPDSiriSearchParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSiriSearchParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)char v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDSiriSearchParametersReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDSiriSearchParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSiriSearchParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSiriSearchParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_18955F7F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18955FBB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDSiriSearchParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  __int16 v2 = *(_WORD *)(a1 + 104);
  if ((v2 & 0x1A00) != 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOAddressIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x440) != 0) {
    return 1;
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEOPDIndexQueryNodeIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x100) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 48);

  return GEOPDRecentRouteInfoIsDirty(v4);
}

void sub_1895600A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSiriSearchResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        int v17 = v16 & ~v11 | v9;
        int v18 = v16 | v11;
        if (((v16 | v11) | v7)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = v8 != 0;
        int v22 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_76;
        }
        char v56 = v16 & ~(_BYTE)v11 | v9;
        int v58 = v21 | v18 | v17;
        char v59 = (v19 == 0) | v18;
        BOOL v23 = (int *)MEMORY[0x1E4F940C8];
        char v24 = (int *)MEMORY[0x1E4F940B8];
        char v57 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v23)) {
      goto LABEL_74;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v20;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v32 = v26++ >= 9;
      if (v32)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_74:
      int v22 = 1;
      goto LABEL_75;
    }
    unint64_t v35 = v27 >> 3;
    BOOL v36 = v18;
    if ((v59 & 1) == 0)
    {
      uint64_t v37 = v19;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    if (v35 != 3) {
      break;
    }
    if (v7)
    {
      char v42 = 0;
      unsigned int v43 = 0;
      uint64_t v44 = 0;
      *(unsigned char *)(a1 + 56) |= 1u;
      while (1)
      {
        uint64_t v45 = *v20;
        uint64_t v46 = *(void *)(v3 + v45);
        unint64_t v47 = v46 + 1;
        if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
          break;
        }
        char v48 = *(unsigned char *)(*(void *)(v3 + *v24) + v46);
        *(void *)(v3 + v45) = v47;
        v44 |= (unint64_t)(v48 & 0x7F) << v42;
        if ((v48 & 0x80) == 0) {
          goto LABEL_69;
        }
        v42 += 7;
        BOOL v32 = v43++ >= 9;
        if (v32)
        {
          uint64_t v44 = 0;
          goto LABEL_71;
        }
      }
      *(unsigned char *)(v3 + *v23) = 1;
LABEL_69:
      if (*(unsigned char *)(v3 + *v23)) {
        uint64_t v44 = 0;
      }
LABEL_71:
      *(unsigned char *)(a1 + 52) = v44 != 0;
      goto LABEL_72;
    }
LABEL_66:
    int v22 = PBReaderSkipValueWithTag();
    BOOL v23 = (int *)MEMORY[0x1E4F940C8];
    LOBYTE(v18) = v57;
    if ((v22 & v58 & 1) == 0) {
      goto LABEL_75;
    }
LABEL_73:
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
      goto LABEL_74;
    }
  }
  if (v35 != 2)
  {
    if (v35 == 1)
    {
      if (v36 && (*(unsigned char *)(a1 + 56) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_95;
        }
        char v41 = objc_alloc_init(GEOPDMultiLocalizedString);
        if (!GEOPDMultiLocalizedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        -[GEOPDSiriSearchResult _addNoFlagsDisambiguationLabel:](a1, v41);
LABEL_59:

        LOBYTE(v18) = v57;
        BOOL v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
        if ((v58 & 1) == 0) {
          goto LABEL_74;
        }
        goto LABEL_73;
      }
    }
    else if ((v56 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        BOOL v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v22 = PBUnknownFieldAdd();
      LOBYTE(v18) = v57;
      BOOL v23 = (int *)MEMORY[0x1E4F940C8];
      if (!v22) {
        goto LABEL_77;
      }
      goto LABEL_72;
    }
    goto LABEL_66;
  }
  if (!v36 || (*(unsigned char *)(a1 + 56) & 8) != 0) {
    goto LABEL_66;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_95;
  }
  char v41 = objc_alloc_init(GEOPDResultDetourInfo);
  if (GEOPDResultDetourInfoReadAllFrom((uint64_t)v41, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDSiriSearchResult _addNoFlagsResultDetourInfo:](a1, v41);
    goto LABEL_59;
  }
LABEL_94:

LABEL_95:
  int v22 = 0;
  LOBYTE(v18) = v57;
LABEL_75:
  LOBYTE(v17) = v56;
LABEL_76:
  if (v17) {
LABEL_77:
  }
    *(unsigned char *)(a1 + 56) |= 2u;
  if (v18 & 1 | ((v22 & 1) == 0))
  {
    *(unsigned char *)(a1 + 56) |= 4u;
    *(unsigned char *)(a1 + 56) |= 8u;
    goto LABEL_88;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v52 = *v19++;
        int v51 = v52;
        if (v52 == 1) {
          break;
        }
        if (v51 == 2)
        {
          char v53 = 8;
          goto LABEL_87;
        }
        if (!v51) {
          goto LABEL_88;
        }
      }
      char v53 = 4;
LABEL_87:
      *(unsigned char *)(a1 + 56) |= v53;
      continue;
    }
  }
LABEL_88:
  if (v22)
  {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
    if ((v18 & 1) == 0) {
      return v3;
    }
LABEL_92:
    char v54 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v18) {
      goto LABEL_92;
    }
  }
  return v3;
}

void sub_189560CCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189560DD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18956140C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSiriSearchResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSiriSearchResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSiriSearchResultReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSiriSearchResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSiriSearchResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSiriSearchResultCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1895615A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18956188C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189561B9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189561EC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSpatialEventLookupResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v61 = v17;
        char v62 = v18 | v17;
        if ((v18 | v7)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v63 = (v19 == 0) | v18;
        BOOL v64 = v18;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_75;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_75:
      int v59 = 1;
      goto LABEL_76;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v64;
    if ((v63 & 1) == 0)
    {
      unint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 != 3) {
      break;
    }
    if (!v34) {
      goto LABEL_65;
    }
    if ((*(unsigned char *)(a1 + 56) & 4) != 0)
    {
      char v53 = PBReaderSkipValueWithTag();
      long long v6 = (int *)MEMORY[0x1E4F940E0];
      if ((v53 & 1) == 0) {
        goto LABEL_97;
      }
      v8 += *(unsigned __int8 *)(a1 + 56) << 29 >> 31;
    }
    else
    {
      char v46 = PBReaderPlaceMark();
      long long v6 = (int *)MEMORY[0x1E4F940E0];
      if ((v46 & 1) == 0) {
        goto LABEL_97;
      }
      unint64_t v47 = objc_alloc_init(GEOMapRegion);
      if (!GEOMapRegionReadAllFrom((uint64_t)v47, (void *)v3)) {
        goto LABEL_96;
      }
      PBReaderRecallMark();
      char v48 = *(void **)(a1 + 24);
      *(void *)(a1 + 24) = v47;

      --v8;
    }
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
    if (!(v62 & 1 | (v8 != 0))) {
      goto LABEL_75;
    }
  }
  if (v33 != 2)
  {
    if (v33 == 1)
    {
      if (v7)
      {
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        long long v6 = (int *)MEMORY[0x1E4F940E0];
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_69;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_71;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_69:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_71:
        *(_DWORD *)(a1 + 52) = v41;
        goto LABEL_66;
      }
    }
    else if ((v61 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        BOOL v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v51 = PBUnknownFieldAdd();
      BOOL v21 = (int *)MEMORY[0x1E4F940C8];
      long long v6 = (int *)MEMORY[0x1E4F940E0];
      if (!v51)
      {
        int v59 = 0;
        char v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        goto LABEL_78;
      }
      goto LABEL_66;
    }
LABEL_65:
    char v52 = PBReaderSkipValueWithTag();
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    long long v6 = (int *)MEMORY[0x1E4F940E0];
    if (v52) {
      goto LABEL_66;
    }
    int v59 = 0;
LABEL_76:
    char v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
    goto LABEL_77;
  }
  if (!v34 || (*(unsigned char *)(a1 + 56) & 8) != 0) {
    goto LABEL_65;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_97;
  }
  unint64_t v47 = objc_alloc_init(GEOPDSpatialEventLookupResponse);
  if (GEOPDSpatialEventLookupResponseReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDSpatialEventLookupResult _addNoFlagsEvent:](a1, v47);

    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    long long v6 = (int *)MEMORY[0x1E4F940E0];
    goto LABEL_66;
  }
LABEL_96:

LABEL_97:
  int v59 = 0;
  char v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
  if ((v61 & 1) == 0) {
    goto LABEL_79;
  }
LABEL_78:
  *(unsigned char *)(a1 + v60[632]) |= 2u;
LABEL_79:
  if (v64 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[632]) |= 8u;
    *(unsigned char *)(a1 + v60[632]) |= 4u;
    goto LABEL_89;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v19++;
        int v54 = v55;
        if (v55 == 2) {
          break;
        }
        if (v54 == 3)
        {
          char v56 = 4;
          goto LABEL_88;
        }
        if (!v54) {
          goto LABEL_89;
        }
      }
      char v56 = 8;
LABEL_88:
      *(unsigned char *)(a1 + v60[632]) |= v56;
      continue;
    }
  }
LABEL_89:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v64)
  {
    char v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189562734(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189562840(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSpatialEventLookupResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  return [*(id *)(a1 + 24) readAll:1];
}

void sub_189562C90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189562F14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189563304(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSpatialPlaceLookupResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v61 = v17;
        char v62 = v18 | v17;
        if ((v18 | v7)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v63 = (v19 == 0) | v18;
        BOOL v64 = v18;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_75;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_75:
      int v59 = 1;
      goto LABEL_76;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v64;
    if ((v63 & 1) == 0)
    {
      unint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 != 3) {
      break;
    }
    if (!v34) {
      goto LABEL_65;
    }
    if ((*(unsigned char *)(a1 + 56) & 4) != 0)
    {
      char v53 = PBReaderSkipValueWithTag();
      uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
      if ((v53 & 1) == 0) {
        goto LABEL_97;
      }
      v8 += *(unsigned __int8 *)(a1 + 56) << 29 >> 31;
    }
    else
    {
      char v46 = PBReaderPlaceMark();
      uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
      if ((v46 & 1) == 0) {
        goto LABEL_97;
      }
      unint64_t v47 = objc_alloc_init(GEOMapRegion);
      if (!GEOMapRegionReadAllFrom((uint64_t)v47, (void *)v3)) {
        goto LABEL_96;
      }
      PBReaderRecallMark();
      char v48 = *(void **)(a1 + 24);
      *(void *)(a1 + 24) = v47;

      --v8;
    }
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
    if (!(v62 & 1 | (v8 != 0))) {
      goto LABEL_75;
    }
  }
  if (v33 != 2)
  {
    if (v33 == 1)
    {
      if (v7)
      {
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_69;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_71;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_69:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_71:
        *(_DWORD *)(a1 + 52) = v41;
        goto LABEL_66;
      }
    }
    else if ((v61 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        BOOL v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v51 = PBUnknownFieldAdd();
      BOOL v21 = (int *)MEMORY[0x1E4F940C8];
      uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
      if (!v51)
      {
        int v59 = 0;
        char v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        goto LABEL_78;
      }
      goto LABEL_66;
    }
LABEL_65:
    char v52 = PBReaderSkipValueWithTag();
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
    if (v52) {
      goto LABEL_66;
    }
    int v59 = 0;
LABEL_76:
    char v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
    goto LABEL_77;
  }
  if (!v34 || (*(unsigned char *)(a1 + 56) & 8) != 0) {
    goto LABEL_65;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_97;
  }
  unint64_t v47 = objc_alloc_init(GEOPDSpatialPlaceLookupResponse);
  if (GEOPDSpatialPlaceLookupResponseReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDSpatialPlaceLookupResult _addNoFlagsPlace:](a1, v47);

    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
    goto LABEL_66;
  }
LABEL_96:

LABEL_97:
  int v59 = 0;
  char v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
  if ((v61 & 1) == 0) {
    goto LABEL_79;
  }
LABEL_78:
  *(unsigned char *)(a1 + v60[637]) |= 2u;
LABEL_79:
  if (v64 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[637]) |= 8u;
    *(unsigned char *)(a1 + v60[637]) |= 4u;
    goto LABEL_89;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v19++;
        int v54 = v55;
        if (v55 == 2) {
          break;
        }
        if (v54 == 3)
        {
          char v56 = 4;
          goto LABEL_88;
        }
        if (!v54) {
          goto LABEL_89;
        }
      }
      char v56 = 8;
LABEL_88:
      *(unsigned char *)(a1 + v60[637]) |= v56;
      continue;
    }
  }
LABEL_89:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v64)
  {
    char v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189563B88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18956419C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSpatialPlaceLookupResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSpatialPlaceLookupResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSpatialPlaceLookupResultReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSpatialPlaceLookupResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSpatialPlaceLookupResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSpatialPlaceLookupResultCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189564410(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189564674(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895648F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTerritoryLookupParametersReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unsigned __int8 v18 = objc_alloc_init(GEOLatLngE7);
          if (!GEOLatLngE7ReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDTerritoryLookupParameters addLocation:](a1, v18);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v20 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189565228(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTerritoryLookupResultReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    char v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189565A04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void **GEOPDTransitNearbyPaymentMethodLookupOriginHasSensitiveFields(void **result)
{
  if (result) {
    return (void **)GEOWaypointTypedHasSensitiveFields(result[2]);
  }
  return result;
}

BOOL GEOPDTransitNearbyPaymentMethodLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    char v7 = (int *)MEMORY[0x1E4F940E0];
    int v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v20 = objc_alloc_init(GEOPDTransitNearbyPaymentMethodLookupOrigin);
          if (!GEOPDTransitNearbyPaymentMethodLookupOriginReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDTransitNearbyPaymentMethodLookupParameters addTransitNearbyPaymentMethodLookupOrigin:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189565FB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitNearbyScheduleLookupOriginReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    char v7 = (int *)MEMORY[0x1E4F940E0];
    int v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v20 = objc_alloc_init(GEOWaypointTyped);
          if (!GEOWaypointTypedReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          id v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v22 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v23 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v22;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_18956674C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void GEOPDTransitNearbyScheduleLookupOriginClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  if (a1 && a3)
  {
    uint64_t v5 = *(void **)(a1 + 16);
    if (v5)
    {
      id v6 = v5;
      unsigned int v7 = GEOWaypointTypedHasSensitiveFields(v6);

      if (v7)
      {
        id v8 = *(id *)(a1 + 16);
        id v11 = (id)[v8 copy];

        char v9 = [v11 waypointLocation];
        [v9 clearSensitiveFields:a2];

        -[GEOPDTransitNearbyScheduleLookupOrigin setWaypointTyped:](a1, v11);
        goto LABEL_9;
      }
    }
  }
  else if (!a1)
  {
    id v10 = 0;
    goto LABEL_8;
  }
  id v10 = *(id *)(a1 + 16);
LABEL_8:
  id v11 = v10;
  [v10 clearSensitiveFields:a2];
LABEL_9:
}

void **GEOPDTransitNearbyScheduleLookupOriginHasSensitiveFields(void **result)
{
  if (result) {
    return (void **)GEOWaypointTypedHasSensitiveFields(result[2]);
  }
  return result;
}

void sub_189566B54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189566D94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDTransitNearbyScheduleLookupParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    while (1)
    {
      if (*(void *)v8 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  return objc_msgSend(*(id *)(a1 + 32), "readAll:", 1, v7);
}

unint64_t GEOPDTransitNearbyScheduleLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTransitNearbyScheduleLookupParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDTransitNearbyScheduleLookupParametersReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDTransitNearbyScheduleLookupParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDTransitNearbyScheduleLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDTransitNearbyScheduleLookupParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18956757C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895677AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOPDTransitNearbyScheduleLookupParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 52) & 0xA) != 0) {
    return (os_unfair_lock_s *)1;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) == 0) {
    return 0;
  }
  uint64_t v3 = *(os_unfair_lock_s **)(a1 + 32);

  return GEOWaypointTypedIsDirty(v3);
}

os_unfair_lock_s *GEOPDTransitNearbyScheduleLookupParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    id v2 = _GEOPDTransitNearbyScheduleLookupParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return v2;
  }
  return result;
}

void sub_189567AD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitScheduleLookupResultReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1895680D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitVehiclePositionParametersReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        int v17 = v10 & 7;
        if (v16 || v17 == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_49;
            }
            while (*(void *)&v3[*v4] < *(void *)&v3[*v5] && !v3[*v6])
            {
              char v19 = 0;
              unsigned int v20 = 0;
              uint64_t v21 = 0;
              while (1)
              {
                uint64_t v22 = *v4;
                uint64_t v23 = *(void *)&v3[v22];
                unint64_t v24 = v23 + 1;
                if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                  break;
                }
                char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
                *(void *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  BOOL v15 = v20++ >= 9;
                  if (!v15) {
                    continue;
                  }
                }
                goto LABEL_32;
              }
              v3[*v6] = 1;
LABEL_32:
              PBRepeatedUInt64Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            while (1)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
                break;
              }
              char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                BOOL v15 = v29++ >= 9;
                if (!v15) {
                  continue;
                }
              }
              goto LABEL_46;
            }
            v3[*v6] = 1;
LABEL_46:
            PBRepeatedUInt64Add();
          }
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v26 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v27 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v26;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_49;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189568868(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18956926C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189569358(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVectorPoiDisplayDVReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDVectorPoiDisplayDVReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    unsigned int v9 = (int *)&GEOPDVectorPoiDisplayDVReadAllFrom_recursiveTag;
  }
  else {
    unsigned int v9 = (int *)&GEOPDVectorPoiDisplayDVReadAllFrom_initialTag;
  }
  unint64_t v6 = GEOPDVectorPoiDisplayDVReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v6;
}

void sub_1895695C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDZoomInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v16 != 1) {
          goto LABEL_30;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v20 = v19 + 8, v20 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v18] = v20;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_30:
        BOOL v21 = 0;
        goto LABEL_29;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_29:
  PBReaderRecallMark();
  return v21;
}

void sub_189569A20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189569C98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18956A0F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18956A2C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18956A440(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVendorSpecificPlaceRefinementParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 92))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDVendorSpecificPlaceRefinementParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = [v8 position];
  *(_DWORD *)(a1 + 92) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDVendorSpecificPlaceRefinementParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDVendorSpecificPlaceRefinementParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDVendorSpecificPlaceRefinementParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 56) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_18956AA50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18956ADA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDVendorSpecificPlaceRefinementParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  BOOL v2 = (*(_WORD *)(a1 + 112) & 0x1FE0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return v2;
}

void sub_18956B1A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDVendorSpecificPlaceRefinementResultReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18956B704(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDViewportInfoReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_53;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_53;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3) {
          break;
        }
        if (v18 == 2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 32) |= 2u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v23 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0) {
              goto LABEL_48;
            }
            v28 += 7;
            BOOL v15 = v29++ >= 9;
            if (v15)
            {
              LODWORD(v23) = 0;
              goto LABEL_50;
            }
          }
          v3[*v6] = 1;
LABEL_48:
          if (v3[*v6]) {
            LODWORD(v23) = 0;
          }
LABEL_50:
          uint64_t v36 = 28;
LABEL_51:
          *(_DWORD *)(a1 + v36) = v23;
          goto LABEL_52;
        }
        if (v18 == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_55;
          }
          id v19 = objc_alloc_init(GEOMapRegion);
          if (!GEOMapRegionReadAllFrom((uint64_t)v19, v3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          unint64_t v20 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v19;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v34 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v35 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v34;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_55;
          }
        }
LABEL_52:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_53;
        }
      }
      char v21 = 0;
      unsigned int v22 = 0;
      uint64_t v23 = 0;
      *(unsigned char *)(a1 + 32) |= 1u;
      while (1)
      {
        uint64_t v24 = *v4;
        uint64_t v25 = *(void *)&v3[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&v3[*v5]) {
          break;
        }
        char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v25);
        *(void *)&v3[v24] = v26;
        v23 |= (unint64_t)(v27 & 0x7F) << v21;
        if ((v27 & 0x80) == 0) {
          goto LABEL_44;
        }
        v21 += 7;
        BOOL v15 = v22++ >= 9;
        if (v15)
        {
          LODWORD(v23) = 0;
          goto LABEL_46;
        }
      }
      v3[*v6] = 1;
LABEL_44:
      if (v3[*v6]) {
        LODWORD(v23) = 0;
      }
LABEL_46:
      uint64_t v36 = 24;
      goto LABEL_51;
    }
LABEL_53:
    BOOL v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_55:
    BOOL v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_18956C410(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDViewportInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDViewportInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18956C474(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDWarsawMerchantIdentifierReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v48 = v15 | v8;
        if ((v16 | v9)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        BOOL v51 = v16;
        char v49 = v16 | v15 | v8;
        char v50 = (v17 == 0) | v16;
        unint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        id v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_65;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_65:
      int v47 = 1;
      goto LABEL_66;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v51;
    if ((v50 & 1) == 0)
    {
      char v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3)
    {
      if (!v32) {
        goto LABEL_55;
      }
      if ((*(unsigned char *)(a1 + 60) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_81;
        }
        char v42 = 32 * *(unsigned char *)(a1 + 60);
        goto LABEL_63;
      }
      uint64_t v37 = PBReaderReadString();
      uint64_t v38 = 32;
      goto LABEL_48;
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (!v32) {
        goto LABEL_55;
      }
      if ((*(unsigned char *)(a1 + 60) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_81;
        }
        char v42 = *(unsigned char *)(a1 + 60) << 6;
        goto LABEL_63;
      }
      uint64_t v37 = PBReaderReadString();
      uint64_t v38 = 24;
      goto LABEL_48;
    }
    if (v48 & 1) == 0 || (*(unsigned char *)(a1 + 60))
    {
LABEL_55:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_81;
      }
      goto LABEL_64;
    }
    if (!*(void *)(a1 + 16))
    {
      id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v41 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v40;
    }
    if (!PBUnknownFieldAdd())
    {
      int v47 = 0;
      id v19 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_67;
    }
LABEL_64:
    id v19 = (int *)MEMORY[0x1E4F940C8];
    if (!(v49 & 1 | (v10 != 0))) {
      goto LABEL_65;
    }
  }
  if (!v32) {
    goto LABEL_55;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) == 0)
  {
    uint64_t v37 = PBReaderReadString();
    uint64_t v38 = 40;
LABEL_48:
    char v39 = *(void **)(a1 + v38);
    *(void *)(a1 + v38) = v37;

    --v10;
    goto LABEL_64;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v42 = 16 * *(unsigned char *)(a1 + 60);
LABEL_63:
    v10 += v42 >> 7;
    goto LABEL_64;
  }
LABEL_81:
  int v47 = 0;
  id v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
  if ((v48 & 1) == 0) {
    goto LABEL_68;
  }
LABEL_67:
  *(unsigned char *)(a1 + 60) |= 1u;
LABEL_68:
  if (v51 || (v47 & 1) == 0)
  {
    *(unsigned char *)(a1 + 60) |= 2u;
    *(unsigned char *)(a1 + 60) |= 8u;
    *(unsigned char *)(a1 + 60) |= 4u;
  }
  else if (v17)
  {
    while (1)
    {
      int v43 = *v17++;
      char v44 = 2;
      switch(v43)
      {
        case 0:
          goto LABEL_75;
        case 1:
          goto LABEL_74;
        case 2:
          char v44 = 8;
          goto LABEL_74;
        case 3:
          char v44 = 4;
LABEL_74:
          *(unsigned char *)(a1 + 60) |= v44;
          break;
        default:
          continue;
      }
    }
  }
LABEL_75:
  if (v47) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v51)
  {
    char v45 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18956D5D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18956D6B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDWarsawMerchantIdentifierReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDWarsawMerchantIdentifierReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDWarsawMerchantIdentifierReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDWarsawMerchantIdentifierReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDWarsawMerchantIdentifierReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18956DA98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18956DC58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDWarsawMerchantIdentifierIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18956DE64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDWifiFingerprintParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v24 = *v6;
            uint64_t v25 = *(void *)&v5[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&v5[*v7]) {
              break;
            }
            char v27 = *(unsigned char *)(*(void *)&v5[*v9] + v25);
            *(void *)&v5[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0) {
              goto LABEL_36;
            }
            v21 += 7;
            BOOL v17 = v22++ >= 9;
            if (v17)
            {
              LODWORD(v23) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            LODWORD(v23) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v23;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          unint64_t v20 = objc_alloc_init(GEOPDWifiMeasurement);
          if (!GEOPDWifiMeasurementReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          -[GEOPDWifiFingerprintParameters addMeasurement:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v28 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v29 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v28;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v30 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v30 = 0;
  }
  objc_sync_exit(v5);

  return v30;
}

void sub_18956EBC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDWifiMeasurementHasSensitiveFields(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = -[GEOPDWifiMeasurement locations](a1);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v9;
    while (2)
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v9 != v4) {
          objc_enumerationMutation(v1);
        }
        if (GEOLocationHasSensitiveFields(*(void *)(*((void *)&v8 + 1) + 8 * v5)))
        {
          uint64_t v6 = 1;
          goto LABEL_12;
        }
        ++v5;
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v6 = 0;
LABEL_12:

  return v6;
}

unint64_t GEOPDWifiMeasurementClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  -[GEOPDWifiMeasurement _readLocations](a1);
  unint64_t result = [*(id *)(a1 + 40) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      uint64_t v8 = [*(id *)(a1 + 40) objectAtIndexedSubscript:i];
      long long v9 = (void *)v8;
      if (a3 && GEOLocationHasSensitiveFields(v8))
      {
        long long v10 = (_DWORD *)[v9 copy];
        GEOLocationClearSensitiveFields(v10);
        [*(id *)(a1 + 40) replaceObjectAtIndex:i withObject:v10];
      }
      else
      {
        [v9 clearSensitiveFields:a2];
      }

      unint64_t result = [*(id *)(a1 + 40) count];
    }
  }
  return result;
}

BOOL GEOPDWifiFingerprintResultReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18956F67C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18956F888(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18956FAD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDZoomInfoReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_37;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_37;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          *(unsigned char *)(a1 + 32) |= 2u;
          uint64_t v18 = *v4;
          unint64_t v19 = *(void *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
            *(void *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v20 = 0;
          }
          uint64_t v25 = &OBJC_IVAR___GEOPDZoomInfo__minZoom;
LABEL_35:
          *(void *)(a1 + *v25) = v20;
          goto LABEL_36;
        }
        if (!*(void *)(a1 + 8))
        {
          id v23 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          uint64_t v24 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v23;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_38;
        }
LABEL_36:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_37;
        }
      }
      *(unsigned char *)(a1 + 32) |= 1u;
      uint64_t v21 = *v4;
      unint64_t v22 = *(void *)&v3[v21];
      if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)&v3[*v5])
      {
        uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v22);
        *(void *)&v3[v21] = v22 + 8;
      }
      else
      {
        v3[*v6] = 1;
        uint64_t v20 = 0;
      }
      uint64_t v25 = &OBJC_IVAR___GEOPDZoomInfo__maxZoom;
      goto LABEL_35;
    }
LABEL_37:
    BOOL v26 = v3[*v6] == 0;
  }
  else
  {
LABEL_38:
    BOOL v26 = 0;
  }
  objc_sync_exit(v3);

  return v26;
}

void sub_189570548(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18957179C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_189572EDC(_Unwind_Exception *a1)
{
}

void sub_189573378(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
}

void sub_189573810(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

void sub_18957396C(_Unwind_Exception *a1)
{
}

void sub_189573AE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_189573DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

__n128 __Block_byref_object_copy__1(__n128 *a1, __n128 *a2)
{
  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  __n128 result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 48) = *(void *)(a2 + 48);
  return result;
}

void sub_189575548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189575848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_189575924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

double geo::MapPickedFeature::operator=(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    uint64_t v2 = *(void *)(a2 + 8);
    if (*(void *)(a1 + 8) != v2) {
      *(void *)(a1 + 8) = v2;
    }
    double result = *(double *)(a2 + 16);
    *(double *)(a1 + 16) = result;
  }
  return result;
}

float geo::MapPickedRoadFeature::operator=(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    uint64_t v3 = geo::MapPickedRoadFeature::operator=();
    uint64_t v4 = *(void *)(a2 + 32);
    *(void *)(v3 + 24) = v4;
    *(void *)(v3 + 32) = v4;
    float result = *(float *)(a2 + 40);
    *(float *)(v3 + 40) = result;
  }
  return result;
}

void geo::MapPickedRoadFeature::~MapPickedRoadFeature(geo::MapPickedRoadFeature *this)
{
}

uint64_t geo::MapPickedRoadFeature::type(geo::MapPickedRoadFeature *this)
{
  return 1;
}

void sub_1895766E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
}

void __GEOGetGEOComposedStringLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOComposedString");
  id v1 = (void *)_MergedGlobals_203;
  _MergedGlobals_203 = (uint64_t)v0;
}

uint64_t _getFirstColumnInt64_0(const char **a1, int a2, const char **a3)
{
  if (a2)
  {
    uint64_t v4 = *a3;
    if (*a3) {
      uint64_t v4 = (const char *)strtoll(v4, 0, 10);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *a1 = v4;
  return 0;
}

void sub_189578F88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18957AB70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18957ADA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18957B198(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18957B308(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18957B478(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18957B7CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18957B940(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18957BAB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18957BE98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18957C084(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18957C1F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18957C368(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteEntryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18957CF94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryHighlightLineIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteEntryHighlightSpanIsValid(a1)) {
          goto LABEL_29;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDAutocompleteEntryBusinessIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_55;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_37;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_55;
          }
          unsigned int v24 = 0;
          break;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1)) {
            goto LABEL_55;
          }
          goto LABEL_49;
        case 5u:
          if (v16 != 1) {
            goto LABEL_55;
          }
          uint64_t v29 = *v2;
          unint64_t v30 = *(void *)&a1[v29];
          if (v30 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_45;
          }
          unint64_t v31 = v30 + 8;
          if (v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          *(void *)&a1[v29] = v31;
          continue;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_55;
          }
LABEL_49:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_55:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v25 = *v2;
        uint64_t v26 = *(void *)&a1[v25];
        unint64_t v27 = v26 + 1;
        if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
          break;
        }
        int v28 = *(char *)(*(void *)&a1[*v5] + v26);
        *(void *)&a1[v25] = v27;
        if (v28 < 0)
        {
          BOOL v23 = v24++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_37:
      uint64_t v14 = *v4;
LABEL_45:
      a1[v14] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOPDAutocompleteEntryOfflineAreaIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
        }
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_46;
        }
      }
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEOPDAutocompleteEntryClientResolvedIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOPDAutocompleteEntryDirectionIntentIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDDirectionIntentIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDParsecRankingFeaturesIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
          if (v16 != 1) {
            goto LABEL_46;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_42;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_42;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_43;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v27 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          BOOL v32 = 0;
          goto LABEL_45;
      }
      while (1)
      {
        uint64_t v28 = *v2;
        uint64_t v29 = *(void *)&a1[v28];
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
          break;
        }
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v26 = v27++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_43;
      }
LABEL_41:
      uint64_t v14 = *v4;
LABEL_42:
      a1[v14] = 1;
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
LABEL_45:
  PBReaderRecallMark();
  return v32;
}

BOOL GEOPDAutocompleteEntryCollectionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDAutocompleteEntryPublisherIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_18957E590(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteEntryIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  unsigned int v2 = *(_DWORD *)(a1 + 184);
  if ((v2 & 0x400000) != 0) {
    return 1;
  }
  if ((v2 & 0x4000) != 0)
  {
    if (GEOPDAutocompleteEntryHighlightLineIsDirty(*(void *)(a1 + 88))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 184);
  }
  if ((v2 & 0x2000) != 0)
  {
    if (GEOPDAutocompleteEntryHighlightLineIsDirty(*(void *)(a1 + 80))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 184);
  }
  if ((v2 & 0x80000) != 0)
  {
    if (GEOPDAutocompleteEntryQueryIsDirty(*(void *)(a1 + 128))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 184);
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEOPDAutocompleteEntryBusinessIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 184);
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEOPDAutocompleteEntryAddressIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 184);
  }
  if ((v2 & 0x200) != 0)
  {
    if (GEOPDAutocompleteEntryCategoryIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 184);
  }
  if ((v2 & 0x9480) != 0) {
    return 1;
  }
  if ((v2 & 0x100000) == 0) {
    goto LABEL_24;
  }
  if (GEOPDRetainedSearchMetadataIsDirty(*(void *)(a1 + 136))) {
    return 1;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 184);
LABEL_24:
  if ((v2 & 0x250800) != 0) {
    return 1;
  }
  return (v2 >> 17) & 1;
}

os_unfair_lock_s *GEOPDAutocompleteEntryIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDAutocompleteEntryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 40);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOPDAutocompleteEntryClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasBusiness]
    && ([a1 business],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        unsigned int v6 = GEOPDAutocompleteEntryBusinessHasSensitiveFields(v5, a2),
        v5,
        v6))
  {
    unsigned int v7 = [a1 business];
    id v9 = (id)[v7 copy];

    unint64_t v8 = [v9 place];
    [v8 clearSensitiveFields:a2];

    [a1 setBusiness:v9];
  }
  else
  {
    id v9 = [a1 business];
    [v9 clearSensitiveFields:a2];
  }
}

void *GEOPDAutocompleteEntryHasSensitiveFields(void *result, uint64_t a2)
{
  if (result)
  {
    id v3 = [result business];
    uint64_t v4 = GEOPDAutocompleteEntryBusinessHasSensitiveFields(v3, a2);

    return v4;
  }
  return result;
}

void *GEOPDAutocompleteEntryBusinessHasSensitiveFields(void *result, uint64_t a2)
{
  if (result)
  {
    id v3 = [result place];
    uint64_t v4 = GEOPDPlaceHasSensitiveFields(v3, a2);

    return v4;
  }
  return result;
}

void GEOPDAutocompleteEntryBusinessClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasPlace]
    && ([a1 place],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        unsigned int v6 = GEOPDPlaceHasSensitiveFields(v5, a2),
        v5,
        v6))
  {
    unsigned int v7 = [a1 place];
    id v9 = (id)[v7 copy];

    unint64_t v8 = [v9 requestData];
    [v8 clearSensitiveFields:a2];

    [a1 setPlace:v9];
  }
  else
  {
    id v9 = [a1 place];
    [v9 clearSensitiveFields:a2];
  }
}

void sub_18957F180(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18957FC88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189580120(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189580A90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryAddressReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompleteEntryAddressReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    id v9 = (int *)&GEOPDAutocompleteEntryAddressReadAllFrom_recursiveTag;
  }
  else {
    id v9 = (int *)&GEOPDAutocompleteEntryAddressReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompleteEntryAddressReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1895814B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryAddressReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteEntryAddressReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189581518(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189581788(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryAddressIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(_WORD *)(a1 + 84) & 0x1C0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_189581C64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryBrandProfileReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDAutocompleteEntryBrandProfileReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18958270C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189582D10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryBusinessReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  unsigned int v7 = v6;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  int v13 = ((*(unsigned __int8 *)(a1 + 72) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 72) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 72) >> 3) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 != 0;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v72 = v18;
        char v73 = v19 | v18;
        if ((v19 | v8)) {
          unint64_t v20 = 0;
        }
        else {
          unint64_t v20 = a3;
        }
        char v74 = (v20 == 0) | v19;
        BOOL v75 = v19;
        unsigned int v21 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v9;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_95;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_95:
      int v70 = 1;
      goto LABEL_96;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v75;
    if ((v74 & 1) == 0)
    {
      BOOL v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_76;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 72) |= 2u;
        while (1)
        {
          uint64_t v43 = *v21;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v7)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v23) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_79;
          }
          v40 += 7;
          BOOL v31 = v41++ >= 9;
          if (v31)
          {
            uint64_t v42 = 0;
            goto LABEL_81;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_79:
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v42 = 0;
        }
LABEL_81:
        *(void *)(a1 + 40) = v42;
        goto LABEL_94;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_76;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v52 = 0;
        *(unsigned char *)(a1 + 72) |= 4u;
        while (2)
        {
          uint64_t v53 = *v21;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v23) + v54);
            *(void *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              BOOL v31 = v51++ >= 9;
              if (v31)
              {
                LODWORD(v52) = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v52) = 0;
        }
LABEL_85:
        *(_DWORD *)(a1 + 68) = v52;
        goto LABEL_94;
      case 4:
        if (!v35) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_115;
          }
          char v64 = 4 * *(unsigned char *)(a1 + 72);
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_115;
        }
        char v57 = objc_alloc_init(GEOPDPlace);
        if (!GEOPDPlaceReadAllFrom()) {
          goto LABEL_114;
        }
        PBReaderRecallMark();
        uint64_t v58 = 48;
        goto LABEL_75;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_76;
        }
        *(unsigned char *)(a1 + 72) |= 1u;
        uint64_t v59 = *v21;
        unint64_t v60 = *(void *)(v3 + v59);
        if (v60 <= 0xFFFFFFFFFFFFFFF7 && v60 + 8 <= *(void *)(v3 + *v7))
        {
          uint64_t v61 = *(void *)(*(void *)(v3 + *v23) + v60);
          *(void *)(v3 + v59) = v60 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v22) = 1;
          uint64_t v61 = 0;
        }
        *(void *)(a1 + 24) = v61;
        goto LABEL_94;
      case 6:
        if (!v35) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_115;
          }
          char v64 = 8 * *(unsigned char *)(a1 + 72);
LABEL_90:
          v9 += v64 >> 7;
LABEL_91:
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_94:
          if (!(v73 & 1 | (v9 != 0))) {
            goto LABEL_95;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_115;
        }
        char v57 = objc_alloc_init(GEOPDMapsIdentifier);
        if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v57, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v58 = 32;
LABEL_75:
          char v62 = *(void **)(a1 + v58);
          *(void *)(a1 + v58) = v57;

          --v9;
          goto LABEL_91;
        }
LABEL_114:

LABEL_115:
        int v70 = 0;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_96:
        long long v71 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
        if (v72) {
LABEL_97:
        }
          *(unsigned char *)(a1 + v71[920]) |= 8u;
        if (v75 || (v70 & 1) == 0)
        {
          *(unsigned char *)(a1 + v71[920]) |= 0x20u;
          *(unsigned char *)(a1 + v71[920]) |= 0x10u;
          goto LABEL_108;
        }
        if (v20)
        {
          while (1)
          {
            int v67 = *v20++;
            int v66 = v67;
            if (v67 == 4) {
              break;
            }
            if (v66 == 6)
            {
              char v65 = 16;
LABEL_104:
              *(unsigned char *)(a1 + v71[920]) |= v65;
            }
            else if (!v66)
            {
              goto LABEL_108;
            }
          }
          char v65 = 32;
          goto LABEL_104;
        }
LABEL_108:
        if (v70) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v75)
        {
          char v68 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v72 & 1) == 0 || (*(unsigned char *)(a1 + 72) & 8) != 0)
        {
LABEL_76:
          char v63 = PBReaderSkipValueWithTag();
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v63 & 1) == 0)
          {
            int v70 = 0;
            goto LABEL_96;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v48 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v47;
          }
          int v49 = PBUnknownFieldAdd();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v49)
          {
            int v70 = 0;
            long long v71 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
            goto LABEL_97;
          }
        }
        goto LABEL_94;
    }
  }
}

void sub_18958368C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189583EC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryBusinessReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompleteEntryBusinessReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDAutocompleteEntryBusinessReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDAutocompleteEntryBusinessReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompleteEntryBusinessReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 48) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189584084(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryBusinessReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteEntryBusinessReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1895840E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895842F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteEntryBusinessIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 72);
  if ((v2 & 0x40) != 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 72);
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOPDAutocompleteEntryBusinessIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDAutocompleteEntryBusinessIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189584798(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189584BFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189584EC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryCategoryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFCFFFDFFFFFFFELL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v8)) {
          unsigned __int8 v19 = 0;
        }
        else {
          unsigned __int8 v19 = a3;
        }
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_78;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_78:
      int v52 = 1;
      goto LABEL_79;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_97;
          }
          BOOL v39 = objc_alloc_init(GEOLocalizedString);
          if (GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = 24;
            goto LABEL_63;
          }
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_97;
        }
        char v47 = *(unsigned char *)(a1 + 68) << 6;
        goto LABEL_75;
      case 2:
        if (!v34) {
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_97;
          }
          char v47 = 32 * *(unsigned char *)(a1 + 68);
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        BOOL v39 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_96;
        }
        PBReaderRecallMark();
        uint64_t v40 = 32;
        goto LABEL_63;
      case 3:
        if (!v34) {
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          uint64_t v44 = PBReaderReadData();
          unint64_t v45 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v44;
          goto LABEL_64;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_97;
        }
        char v47 = 16 * *(unsigned char *)(a1 + 68);
        goto LABEL_75;
      case 4:
        if (!v34) {
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_97;
          }
          char v47 = 8 * *(unsigned char *)(a1 + 68);
LABEL_75:
          v7 += v47 >> 7;
LABEL_76:
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
          if (!(v55 & 1 | (v7 != 0))) {
            goto LABEL_78;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        BOOL v39 = objc_alloc_init(GEOPDVenueIdentifier);
        if (GEOPDVenueIdentifierReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v40 = 48;
LABEL_63:
          unint64_t v45 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
LABEL_64:

          --v7;
          goto LABEL_76;
        }
LABEL_96:

LABEL_97:
        int v52 = 0;
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_79:
        uint64_t v53 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
        if (v54) {
LABEL_80:
        }
          *(unsigned char *)(a1 + v53[930]) |= 1u;
        if (v57 || (v52 & 1) == 0)
        {
          *(unsigned char *)(a1 + v53[930]) |= 2u;
          *(unsigned char *)(a1 + v53[930]) |= 4u;
          *(unsigned char *)(a1 + v53[930]) |= 8u;
          *(unsigned char *)(a1 + v53[930]) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            int v49 = *v19++;
            char v48 = 2;
            switch(v49)
            {
              case 0:
                goto LABEL_90;
              case 1:
                goto LABEL_88;
              case 2:
                char v48 = 4;
                goto LABEL_88;
              case 3:
                char v48 = 8;
                goto LABEL_88;
              case 4:
                char v48 = 16;
LABEL_88:
                *(unsigned char *)(a1 + v53[930]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_90:
        if (v52) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v57)
        {
          char v50 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v54 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_65:
          char v46 = PBReaderSkipValueWithTag();
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v46 & 1) == 0)
          {
            int v52 = 0;
            goto LABEL_79;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v52 = 0;
            uint64_t v53 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
            goto LABEL_80;
          }
        }
        goto LABEL_77;
    }
  }
}

void sub_18958572C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18958589C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189585A0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895861F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAutocompleteEntryCategoryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  uint64_t v2 = *(void *)(a1 + 48);

  -[GEOPDVenueIdentifier readAll:](v2, 1);
}

unint64_t GEOPDAutocompleteEntryCategoryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompleteEntryCategoryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDAutocompleteEntryCategoryReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDAutocompleteEntryCategoryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompleteEntryCategoryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDAutocompleteEntryCategoryCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1895863F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryCategoryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteEntryCategoryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189586458(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189586630(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDAutocompleteEntryCategoryIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v2 = *(unsigned char *)(a1 + 68);
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 68) & 2) != 0)
  {
    if (GEOLocalizedStringIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 68);
  }
  if ((v2 & 0xC) != 0) {
    return 1;
  }
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 48);

  return GEOPDVenueIdentifierIsDirty(v4);
}

os_unfair_lock_s *GEOPDAutocompleteEntryCategoryIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOPDAutocompleteEntryCategoryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1895869EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189586D1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryClientResolvedReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    unsigned int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1895877E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryClientResolvedReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDAutocompleteEntryClientResolvedReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189587848(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryCollectionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDAutocompleteEntryCollectionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189588098(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryDirectionIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    unsigned int v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v20 = objc_alloc_init(GEOPDDirectionIntent);
          if (!GEOPDDirectionIntentReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          uint64_t v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v22 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v23 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v22;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_189588B14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryDirectionIntentReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDAutocompleteEntryDirectionIntentReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189588B78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895890D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryHighlightLineReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v10 | v7;
        unsigned __int8 v16 = v14 | v10;
        char v50 = v15;
        char v51 = v16 | v15;
        if ((v16 | v8)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        char v52 = (v17 == 0) | v16;
        BOOL v53 = v16;
        int v18 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_59;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_59:
      int v49 = 1;
      goto LABEL_60;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v53;
    if ((v52 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (!v32) {
        goto LABEL_53;
      }
      if ((*(unsigned char *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_79;
        }
        v9 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
      }
      else
      {
        uint64_t v37 = PBReaderReadString();
        BOOL v38 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v37;

        --v9;
      }
      goto LABEL_57;
    }
    if (v50 & 1) == 0 || (*(unsigned char *)(a1 + 52)) {
      goto LABEL_53;
    }
    if (!*(void *)(a1 + 16))
    {
      id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      id v41 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v40;
    }
    int v42 = PBUnknownFieldAdd();
    unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
    if (!v42)
    {
      int v49 = 0;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v51 & 1 | (v9 != 0))) {
      goto LABEL_59;
    }
  }
  if (!v32 || (*(unsigned char *)(a1 + 52) & 4) != 0)
  {
LABEL_53:
    char v43 = PBReaderSkipValueWithTag();
    unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v43 & 1) == 0)
    {
      int v49 = 0;
      goto LABEL_60;
    }
    goto LABEL_58;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_79;
  }
  BOOL v39 = objc_alloc_init(GEOPDAutocompleteEntryHighlightSpan);
  if (GEOPDAutocompleteEntryHighlightSpanReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDAutocompleteEntryHighlightLine _addNoFlagsSpan:](a1, v39);

LABEL_57:
    unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_58;
  }

LABEL_79:
  int v49 = 0;
  unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_60:
  if ((v50 & 1) == 0) {
    goto LABEL_62;
  }
LABEL_61:
  *(unsigned char *)(a1 + 52) |= 1u;
LABEL_62:
  if (v53 || (v49 & 1) == 0)
  {
    *(unsigned char *)(a1 + 52) |= 2u;
    *(unsigned char *)(a1 + 52) |= 4u;
    goto LABEL_72;
  }
  if (v17)
  {
    while (1)
    {
      int v46 = *v17++;
      int v45 = v46;
      if (v46 == 1) {
        break;
      }
      if (v45 == 2)
      {
        char v44 = 4;
LABEL_68:
        *(unsigned char *)(a1 + 52) |= v44;
      }
      else if (!v45)
      {
        goto LABEL_72;
      }
    }
    char v44 = 2;
    goto LABEL_68;
  }
LABEL_72:
  if (v49) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v53)
  {
    char v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189589734(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18958A15C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAutocompleteEntryHighlightLineCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDAutocompleteEntryHighlightLineReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteEntryHighlightLineReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18958A2B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryHighlightSpanIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_18958A738(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryHighlightLineIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18958AB08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18958AE10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryHighlightSpanReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              int v26 = &OBJC_IVAR___GEOPDAutocompleteEntryHighlightSpan__startIndex;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              int v26 = &OBJC_IVAR___GEOPDAutocompleteEntryHighlightSpan__startIndex;
              goto LABEL_44;
            }
          }
          int v26 = &OBJC_IVAR___GEOPDAutocompleteEntryHighlightSpan__startIndex;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          int v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 1u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          int v26 = &OBJC_IVAR___GEOPDAutocompleteEntryHighlightSpan__length;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          int v26 = &OBJC_IVAR___GEOPDAutocompleteEntryHighlightSpan__length;
          goto LABEL_44;
        }
      }
      int v26 = &OBJC_IVAR___GEOPDAutocompleteEntryHighlightSpan__length;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_18958B874(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryHighlightSpanReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDAutocompleteEntryHighlightSpanReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18958B8D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryOfflineAreaReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_54;
          }
          int v26 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v26, v3))
          {

            goto LABEL_54;
          }
          PBReaderRecallMark();
          char v27 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v26;
        }
        else if (v18 == 2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          *(unsigned char *)(a1 + 36) |= 2u;
          while (1)
          {
            uint64_t v31 = *v4;
            uint64_t v32 = *(void *)&v3[v31];
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
              break;
            }
            char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
            *(void *)&v3[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0) {
              goto LABEL_48;
            }
            v28 += 7;
            BOOL v15 = v29++ >= 9;
            if (v15)
            {
              uint64_t v30 = 0;
              goto LABEL_50;
            }
          }
          v3[*v6] = 1;
LABEL_48:
          if (v3[*v6]) {
            uint64_t v30 = 0;
          }
LABEL_50:
          *(unsigned char *)(a1 + 32) = v30 != 0;
        }
        else if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 36) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_44;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              uint64_t v21 = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6]) {
            uint64_t v21 = 0;
          }
LABEL_46:
          *(void *)(a1 + 16) = v21;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v35 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v36 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v35;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_54;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_54:
    BOOL v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_18958C77C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryOfflineAreaReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDAutocompleteEntryOfflineAreaReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18958C7E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryPublisherReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          char v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_18958D41C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryPublisherReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDAutocompleteEntryPublisherReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18958D480(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18958D9F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryQueryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFAFFFCFFFBLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v76 = v17;
        char v77 = v8;
        char v78 = v18 | v17;
        if ((v18 | v8)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        char v79 = (v19 == 0) | v18;
        BOOL v80 = v18;
        id v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_105;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_105:
      int v74 = 1;
      goto LABEL_106;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v80;
    if ((v79 & 1) == 0)
    {
      id v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_83;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          id v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;
          goto LABEL_74;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_122;
        }
        char v69 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_102;
      case 2:
        if ((v77 & 1) == 0) {
          goto LABEL_83;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (2)
        {
          uint64_t v47 = *v20;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v22) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v30 = v45++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_88:
        *(_DWORD *)(a1 + 60) = v46;
        goto LABEL_104;
      case 3:
        if ((v77 & 1) == 0) {
          goto LABEL_83;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v53 = 0;
        *(unsigned char *)(a1 + 68) |= 4u;
        while (2)
        {
          uint64_t v54 = *v20;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v22) + v55);
            *(void *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              BOOL v30 = v52++ >= 9;
              if (v30)
              {
                uint64_t v53 = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v53 = 0;
        }
LABEL_92:
        BOOL v67 = v53 != 0;
        uint64_t v68 = 65;
        goto LABEL_97;
      case 4:
        if (!v34 || (*(unsigned char *)(a1 + 68) & 0x20) != 0) {
          goto LABEL_83;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_122;
        }
        uint64_t v58 = objc_alloc_init(GEOPDResultRefinement);
        if (!GEOPDResultRefinementReadAllFrom((uint64_t)v58, (void *)v3, v10 & 1)) {
          goto LABEL_121;
        }
        PBReaderRecallMark();
        -[GEOPDAutocompleteEntryQuery _addNoFlagsResultRefinement:](a1, v58);

        goto LABEL_103;
      case 5:
        if (!v34) {
          goto LABEL_83;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_122;
          }
          char v69 = 2 * *(unsigned char *)(a1 + 68);
LABEL_102:
          v7 += v69 >> 7;
          goto LABEL_103;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_122;
        }
        uint64_t v58 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v58, (void *)v3))
        {
          PBReaderRecallMark();
          id v40 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v58;
LABEL_74:

          --v7;
LABEL_103:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_104:
          if (!(v78 & 1 | (v7 != 0))) {
            goto LABEL_105;
          }
          continue;
        }
LABEL_121:

LABEL_122:
        int v74 = 0;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_106:
        BOOL v75 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
        if (v76) {
LABEL_107:
        }
          *(unsigned char *)(a1 + v75[966]) |= 8u;
        if (v80 || (v74 & 1) == 0)
        {
          *(unsigned char *)(a1 + v75[966]) |= 0x10u;
          *(unsigned char *)(a1 + v75[966]) |= 0x20u;
          *(unsigned char *)(a1 + v75[966]) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            int v70 = *v19++;
            char v71 = 16;
            switch(v70)
            {
              case 0:
                goto LABEL_115;
              case 1:
                goto LABEL_114;
              case 4:
                char v71 = 32;
                goto LABEL_114;
              case 5:
                char v71 = 64;
LABEL_114:
                *(unsigned char *)(a1 + v75[966]) |= v71;
                break;
              default:
                continue;
            }
          }
        }
LABEL_115:
        if (v74) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v80)
        {
          char v72 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 6:
        if ((v77 & 1) == 0) {
          goto LABEL_83;
        }
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v61 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (2)
        {
          uint64_t v62 = *v20;
          uint64_t v63 = *(void *)(v3 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(v3 + *v22) + v63);
            *(void *)(v3 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              BOOL v30 = v60++ >= 9;
              if (v30)
              {
                uint64_t v61 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v61 = 0;
        }
LABEL_96:
        BOOL v67 = v61 != 0;
        uint64_t v68 = 64;
LABEL_97:
        *(unsigned char *)(a1 + v68) = v67;
        goto LABEL_104;
      default:
        if ((v76 & 1) == 0 || (*(unsigned char *)(a1 + 68) & 8) != 0)
        {
LABEL_83:
          char v66 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v66 & 1) == 0)
          {
            int v74 = 0;
            goto LABEL_106;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v74 = 0;
            BOOL v75 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
            goto LABEL_107;
          }
        }
        goto LABEL_104;
    }
  }
}

void sub_18958E5F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18958E9B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18958F598(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteEntryQueryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDResultRefinement readAll:](*(void *)(*((void *)&v8 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  return objc_msgSend(*(id *)(a1 + 40), "readAll:", 1, (void)v8);
}

unint64_t GEOPDAutocompleteEntryQueryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompleteEntryQueryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDAutocompleteEntryQueryReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDAutocompleteEntryQueryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompleteEntryQueryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDAutocompleteEntryQueryCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18958F844(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryQueryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteEntryQueryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18958F8A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18958FB70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryQueryIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = *(unsigned __int8 *)(a1 + 68) > 0xFu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189590194(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895906A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteSessionDataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        id v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189590D1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteSessionDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDAutocompleteSessionDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189590D80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteSessionDataIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      uint64_t v11 = *(void *)&a1[v10];
      unint64_t v12 = v11 + 1;
      if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v9 & 7) == 4;
    }
    if (v15) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v16 = 0;
      goto LABEL_22;
    }
  }
  BOOL v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

BOOL GEOPDClientRankingFeatureFunctionTypeDiscreteReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            *(unsigned char *)(a1 + 32) |= 2u;
            uint64_t v18 = *v4;
            unint64_t v19 = *(void *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(void *)&v3[*v5])
            {
              int v20 = *(_DWORD *)(*(void *)&v3[*v7] + v19);
              *(void *)&v3[v18] = v19 + 4;
            }
            else
            {
              v3[*v6] = 1;
              int v20 = 0;
            }
            char v29 = &OBJC_IVAR___GEOPDClientRankingFeatureFunctionTypeDiscrete__featureValueThresholdLow;
            goto LABEL_44;
          case 2u:
            *(unsigned char *)(a1 + 32) |= 8u;
            uint64_t v23 = *v4;
            unint64_t v24 = *(void *)&v3[v23];
            if (v24 <= 0xFFFFFFFFFFFFFFFBLL && v24 + 4 <= *(void *)&v3[*v5])
            {
              int v20 = *(_DWORD *)(*(void *)&v3[*v7] + v24);
              *(void *)&v3[v23] = v24 + 4;
            }
            else
            {
              v3[*v6] = 1;
              int v20 = 0;
            }
            char v29 = &OBJC_IVAR___GEOPDClientRankingFeatureFunctionTypeDiscrete__featureWeightLow;
            goto LABEL_44;
          case 3u:
            *(unsigned char *)(a1 + 32) |= 1u;
            uint64_t v25 = *v4;
            unint64_t v26 = *(void *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *(void *)&v3[*v5])
            {
              int v20 = *(_DWORD *)(*(void *)&v3[*v7] + v26);
              *(void *)&v3[v25] = v26 + 4;
            }
            else
            {
              v3[*v6] = 1;
              int v20 = 0;
            }
            char v29 = &OBJC_IVAR___GEOPDClientRankingFeatureFunctionTypeDiscrete__featureValueThresholdHigh;
            goto LABEL_44;
          case 4u:
            *(unsigned char *)(a1 + 32) |= 4u;
            uint64_t v27 = *v4;
            unint64_t v28 = *(void *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFFBLL && v28 + 4 <= *(void *)&v3[*v5])
            {
              int v20 = *(_DWORD *)(*(void *)&v3[*v7] + v28);
              *(void *)&v3[v27] = v28 + 4;
            }
            else
            {
              v3[*v6] = 1;
              int v20 = 0;
            }
            char v29 = &OBJC_IVAR___GEOPDClientRankingFeatureFunctionTypeDiscrete__featureWeightHigh;
LABEL_44:
            *(_DWORD *)(a1 + *v29) = v20;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              BOOL v22 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v21;
            }
            if ((PBUnknownFieldAdd() & 1) == 0) {
              goto LABEL_47;
            }
            break;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v30 = v3[*v6] == 0;
  }
  else
  {
LABEL_47:
    BOOL v30 = 0;
  }
  objc_sync_exit(v3);

  return v30;
}

void sub_189591A40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDClientRankingFeatureFunctionTypeDiscreteIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
          if (v16 != 5) {
            goto LABEL_29;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v20 = v19 + 4, v20 <= *(void *)&a1[*v3])) {
            *(void *)&a1[v18] = v20;
          }
          else {
            a1[v14] = 1;
          }
          goto LABEL_26;
        default:
          if (!PBReaderSkipValueWithTag())
          {
LABEL_29:
            BOOL v21 = 0;
            goto LABEL_28;
          }
LABEL_26:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_27;
          }
          break;
      }
    }
  }
LABEL_27:
  BOOL v21 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDClientRankingFeatureFunctionTypeLinearReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_43;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_43;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          *(unsigned char *)(a1 + 28) |= 2u;
          uint64_t v22 = *v4;
          unint64_t v23 = *(void *)&v3[v22];
          if (v23 <= 0xFFFFFFFFFFFFFFFBLL && v23 + 4 <= *(void *)&v3[*v5])
          {
            int v21 = *(_DWORD *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v23 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v21 = 0;
          }
          unint64_t v28 = &OBJC_IVAR___GEOPDClientRankingFeatureFunctionTypeLinear__featureMeanValue;
          goto LABEL_41;
        }
        if (v18 == 2) {
          break;
        }
        if (v18 == 1)
        {
          *(unsigned char *)(a1 + 28) |= 4u;
          uint64_t v19 = *v4;
          unint64_t v20 = *(void *)&v3[v19];
          if (v20 <= 0xFFFFFFFFFFFFFFFBLL && v20 + 4 <= *(void *)&v3[*v5])
          {
            int v21 = *(_DWORD *)(*(void *)&v3[*v7] + v20);
            *(void *)&v3[v19] = v20 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v21 = 0;
          }
          unint64_t v28 = &OBJC_IVAR___GEOPDClientRankingFeatureFunctionTypeLinear__featureWeight;
LABEL_41:
          *(_DWORD *)(a1 + *v28) = v21;
          goto LABEL_42;
        }
        if (!*(void *)(a1 + 8))
        {
          id v26 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          uint64_t v27 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v26;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_44;
        }
LABEL_42:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_43;
        }
      }
      *(unsigned char *)(a1 + 28) |= 1u;
      uint64_t v24 = *v4;
      unint64_t v25 = *(void *)&v3[v24];
      if (v25 <= 0xFFFFFFFFFFFFFFFBLL && v25 + 4 <= *(void *)&v3[*v5])
      {
        int v21 = *(_DWORD *)(*(void *)&v3[*v7] + v25);
        *(void *)&v3[v24] = v25 + 4;
      }
      else
      {
        v3[*v6] = 1;
        int v21 = 0;
      }
      unint64_t v28 = &OBJC_IVAR___GEOPDClientRankingFeatureFunctionTypeLinear__featureMaxRelativeValue;
      goto LABEL_41;
    }
LABEL_43:
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_44:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_189592448(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDClientRankingFeatureFunctionTypeLinearIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      unint64_t v18 = v8 >> 3;
      if ((v8 >> 3) == 3 || v18 == 2 || v18 == 1)
      {
        if (v16 != 5) {
          goto LABEL_31;
        }
        uint64_t v19 = *v2;
        unint64_t v20 = *(void *)&a1[v19];
        if (v20 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v21 = v20 + 4, v21 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v19] = v21;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_31:
        BOOL v22 = 0;
        goto LABEL_30;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_30:
  PBReaderRecallMark();
  return v22;
}

void sub_189592C68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189592DC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189592F4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18959305C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18959316C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18959329C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDClientRankingFeatureMetadataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_181;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchClientBehaviorIsValid(a1)) {
            goto LABEL_181;
          }
          goto LABEL_53;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDClientRankingFeatureTypeResultIsValid(a1)) {
            goto LABEL_181;
          }
          goto LABEL_53;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_181;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              break;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_54;
          }
LABEL_45:
          a1[*v4] = 1;
          continue;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDClientRankingFeatureFunctionTypeLinearIsValid(a1)) {
            goto LABEL_181;
          }
          goto LABEL_53;
        case 6u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDClientRankingFeatureFunctionTypeDiscreteIsValid(a1)) {
            goto LABEL_53;
          }
          goto LABEL_181;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark()) {
            goto LABEL_181;
          }
          objc_msgSend(a1, "position", 0, 0);
          [a1 length];
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_181;
          }
          continue;
      }
      while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
      {
        char v28 = 0;
        unsigned int v29 = 0;
        unint64_t v30 = 0;
        while (1)
        {
          uint64_t v31 = *v2;
          uint64_t v32 = *(void *)&a1[v31];
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)&a1[*v3]) {
            break;
          }
          char v34 = *(unsigned char *)(*(void *)&a1[*v5] + v32);
          *(void *)&a1[v31] = v33;
          v30 |= (unint64_t)(v34 & 0x7F) << v28;
          if ((v34 & 0x80) == 0) {
            goto LABEL_69;
          }
          v28 += 7;
          BOOL v13 = v29++ >= 9;
          if (v13)
          {
            unint64_t v30 = 0;
            uint64_t v35 = *v4;
            int v36 = a1[v35];
            goto LABEL_71;
          }
        }
        a1[*v4] = 1;
LABEL_69:
        uint64_t v35 = *v4;
        int v36 = a1[v35];
        if (a1[v35]) {
          unint64_t v30 = 0;
        }
LABEL_71:
        int v37 = v30 & 7;
        if (v36 || v37 == 4) {
          break;
        }
        if ((v30 >> 3) == 2)
        {
          if (v37 == 5)
          {
            uint64_t v75 = *v2;
            unint64_t v76 = *(void *)&a1[v75];
            if (v76 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v77 = v76 + 4, v77 <= *(void *)&a1[*v3])) {
              *(void *)&a1[v75] = v77;
            }
            else {
              a1[v35] = 1;
            }
            continue;
          }
          goto LABEL_180;
        }
        if ((v30 >> 3) == 1)
        {
          if (v37 == 2 && PBReaderPlaceMark())
          {
            [a1 position];
            [a1 length];
LABEL_80:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
            {
              char v39 = 0;
              unsigned int v40 = 0;
              unint64_t v41 = 0;
              while (1)
              {
                uint64_t v42 = *v2;
                uint64_t v43 = *(void *)&a1[v42];
                unint64_t v44 = v43 + 1;
                if (v43 == -1 || v44 > *(void *)&a1[*v3]) {
                  break;
                }
                char v45 = *(unsigned char *)(*(void *)&a1[*v5] + v43);
                *(void *)&a1[v42] = v44;
                v41 |= (unint64_t)(v45 & 0x7F) << v39;
                if ((v45 & 0x80) == 0) {
                  goto LABEL_90;
                }
                v39 += 7;
                BOOL v13 = v40++ >= 9;
                if (v13)
                {
                  unint64_t v41 = 0;
                  int v46 = a1[*v4];
                  goto LABEL_92;
                }
              }
              a1[*v4] = 1;
LABEL_90:
              int v46 = a1[*v4];
              if (a1[*v4]) {
                unint64_t v41 = 0;
              }
LABEL_92:
              int v47 = v41 & 7;
              if (v46 || v47 == 4) {
                break;
              }
              if ((v41 >> 3) == 2)
              {
                if ((v41 & 7) != 0) {
                  goto LABEL_179;
                }
                unsigned int v69 = 0;
                while (1)
                {
                  uint64_t v70 = *v2;
                  uint64_t v71 = *(void *)&a1[v70];
                  unint64_t v72 = v71 + 1;
                  if (v71 == -1 || v72 > *(void *)&a1[*v3]) {
                    break;
                  }
                  int v73 = *(char *)(*(void *)&a1[*v5] + v71);
                  *(void *)&a1[v70] = v72;
                  if (v73 < 0)
                  {
                    BOOL v22 = v69++ > 8;
                    if (!v22) {
                      continue;
                    }
                  }
                  goto LABEL_80;
                }
                a1[*v4] = 1;
              }
              else if ((v41 >> 3) == 1)
              {
                if (v47 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_179;
                }
                [a1 position];
                [a1 length];
LABEL_101:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
                {
                  char v49 = 0;
                  unsigned int v50 = 0;
                  unint64_t v51 = 0;
                  while (1)
                  {
                    uint64_t v52 = *v2;
                    uint64_t v53 = *(void *)&a1[v52];
                    unint64_t v54 = v53 + 1;
                    if (v53 == -1 || v54 > *(void *)&a1[*v3]) {
                      break;
                    }
                    char v55 = *(unsigned char *)(*(void *)&a1[*v5] + v53);
                    *(void *)&a1[v52] = v54;
                    v51 |= (unint64_t)(v55 & 0x7F) << v49;
                    if ((v55 & 0x80) == 0) {
                      goto LABEL_111;
                    }
                    v49 += 7;
                    BOOL v13 = v50++ >= 9;
                    if (v13)
                    {
                      unint64_t v51 = 0;
                      int v56 = a1[*v4];
                      goto LABEL_113;
                    }
                  }
                  a1[*v4] = 1;
LABEL_111:
                  int v56 = a1[*v4];
                  if (a1[*v4]) {
                    unint64_t v51 = 0;
                  }
LABEL_113:
                  int v57 = v51 & 7;
                  if (v56 || v57 == 4) {
                    break;
                  }
                  switch((v51 >> 3))
                  {
                    case 1u:
                      if ((v51 & 7) != 0) {
                        goto LABEL_178;
                      }
                      unsigned int v59 = 0;
                      while (1)
                      {
                        uint64_t v60 = *v2;
                        uint64_t v61 = *(void *)&a1[v60];
                        unint64_t v62 = v61 + 1;
                        if (v61 == -1 || v62 > *(void *)&a1[*v3]) {
                          goto LABEL_144;
                        }
                        int v63 = *(char *)(*(void *)&a1[*v5] + v61);
                        *(void *)&a1[v60] = v62;
                        if (v63 < 0)
                        {
                          BOOL v22 = v59++ > 8;
                          if (!v22) {
                            continue;
                          }
                        }
                        goto LABEL_101;
                      }
                    case 2u:
                      if (v57 != 2 || !PBReaderPlaceMark() || !GEOPDSearchClientBehaviorIsValid(a1)) {
                        goto LABEL_178;
                      }
                      goto LABEL_152;
                    case 3u:
                      if (v57 != 2
                        || !PBReaderPlaceMark()
                        || !GEOPDClientRankingFeatureTypeResultIsValid(a1))
                      {
                        goto LABEL_178;
                      }
                      goto LABEL_152;
                    case 4u:
                      if ((v51 & 7) != 0) {
                        goto LABEL_178;
                      }
                      unsigned int v64 = 0;
                      break;
                    case 5u:
                      if (v57 != 2
                        || !PBReaderPlaceMark()
                        || !GEOPDClientRankingFeatureFunctionTypeLinearIsValid(a1))
                      {
                        goto LABEL_178;
                      }
                      goto LABEL_152;
                    case 6u:
                      if (v57 != 2
                        || !PBReaderPlaceMark()
                        || !GEOPDClientRankingFeatureFunctionTypeDiscreteIsValid(a1))
                      {
                        goto LABEL_178;
                      }
LABEL_152:
                      PBReaderRecallMark();
                      continue;
                    default:
                      if (PBReaderSkipValueWithTag()) {
                        continue;
                      }
LABEL_178:
                      PBReaderRecallMark();
                      goto LABEL_179;
                  }
                  while (1)
                  {
                    uint64_t v65 = *v2;
                    uint64_t v66 = *(void *)&a1[v65];
                    unint64_t v67 = v66 + 1;
                    if (v66 == -1 || v67 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v68 = *(char *)(*(void *)&a1[*v5] + v66);
                    *(void *)&a1[v65] = v67;
                    if (v68 < 0)
                    {
                      BOOL v22 = v64++ > 8;
                      if (!v22) {
                        continue;
                      }
                    }
                    goto LABEL_101;
                  }
LABEL_144:
                  a1[*v4] = 1;
                }
                int v74 = a1[*v4];
                PBReaderRecallMark();
                if (v74)
                {
LABEL_179:
                  PBReaderRecallMark();
                  goto LABEL_180;
                }
                PBReaderRecallMark();
              }
              else if ((PBReaderSkipValueWithTag() & 1) == 0)
              {
                goto LABEL_179;
              }
            }
            int v78 = a1[*v4];
            PBReaderRecallMark();
            if (!v78)
            {
              PBReaderRecallMark();
              continue;
            }
          }
LABEL_180:
          PBReaderRecallMark();
LABEL_181:
          PBReaderRecallMark();
          return 0;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_180;
        }
      }
      int v79 = a1[*v4];
      PBReaderRecallMark();
      if (v79) {
        goto LABEL_181;
      }
LABEL_53:
      PBReaderRecallMark();
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v80 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v80;
}

BOOL GEOPDClientRankingFeatureTypeResultIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOPDClientRankingFeatureTypeCompositeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 28) |= 1u;
          uint64_t v21 = *v6;
          unint64_t v22 = *(void *)&v5[v21];
          if (v22 <= 0xFFFFFFFFFFFFFFFBLL && v22 + 4 <= *(void *)&v5[*v7])
          {
            int v23 = *(_DWORD *)(*(void *)&v5[*v9] + v22);
            *(void *)&v5[v21] = v22 + 4;
          }
          else
          {
            v5[*v8] = 1;
            int v23 = 0;
          }
          *(_DWORD *)(a1 + 24) = v23;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_36;
          }
          int v20 = objc_alloc_init(GEOPDVariableExponentPair);
          if (!GEOPDVariableExponentPairReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_36;
          }
          PBReaderRecallMark();
          -[GEOPDClientRankingFeatureTypeComposite addVariableExponentPair:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v24 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v25 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v24;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_36;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v26 = v5[*v8] == 0;
  }
  else
  {
LABEL_36:
    BOOL v26 = 0;
  }
  objc_sync_exit(v5);

  return v26;
}

void sub_189594C4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDClientRankingFeatureTypeResultReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189595CB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDClientRankingFeatureTypeSourceReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              BOOL v26 = &OBJC_IVAR___GEOPDClientRankingFeatureTypeSource__suggestionType;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              BOOL v26 = &OBJC_IVAR___GEOPDClientRankingFeatureTypeSource__suggestionType;
              goto LABEL_44;
            }
          }
          BOOL v26 = &OBJC_IVAR___GEOPDClientRankingFeatureTypeSource__suggestionType;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          char v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 1u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          BOOL v26 = &OBJC_IVAR___GEOPDClientRankingFeatureTypeSource__serverEntryType;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          BOOL v26 = &OBJC_IVAR___GEOPDClientRankingFeatureTypeSource__serverEntryType;
          goto LABEL_44;
        }
      }
      BOOL v26 = &OBJC_IVAR___GEOPDClientRankingFeatureTypeSource__serverEntryType;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1895969E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189596EA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189596FB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDParsecRankingFeaturesReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            *(unsigned char *)(a1 + 44) |= 4u;
            uint64_t v18 = *v4;
            unint64_t v19 = *(void *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
              *(void *)&v3[v18] = v19 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            uint64_t v43 = 32;
            goto LABEL_62;
          case 2u:
            *(unsigned char *)(a1 + 44) |= 2u;
            uint64_t v23 = *v4;
            unint64_t v24 = *(void *)&v3[v23];
            if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v24);
              *(void *)&v3[v23] = v24 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            uint64_t v43 = 24;
            goto LABEL_62;
          case 3u:
            *(unsigned char *)(a1 + 44) |= 1u;
            uint64_t v25 = *v4;
            unint64_t v26 = *(void *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v26);
              *(void *)&v3[v25] = v26 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            uint64_t v43 = 16;
LABEL_62:
            *(void *)(a1 + v43) = v20;
            continue;
          case 4u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            *(unsigned char *)(a1 + 44) |= 0x10u;
            while (2)
            {
              uint64_t v30 = *v4;
              uint64_t v31 = *(void *)&v3[v30];
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
                *(void *)&v3[v30] = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    uint64_t v29 = 0;
                    goto LABEL_50;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v29 = 0;
            }
LABEL_50:
            BOOL v41 = v29 != 0;
            uint64_t v42 = 41;
            goto LABEL_55;
          case 5u:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            *(unsigned char *)(a1 + 44) |= 8u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              uint64_t v22 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v21;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_65;
            }
            continue;
        }
        while (1)
        {
          uint64_t v37 = *v4;
          uint64_t v38 = *(void *)&v3[v37];
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)&v3[*v5]) {
            break;
          }
          char v40 = *(unsigned char *)(*(void *)&v3[*v7] + v38);
          *(void *)&v3[v37] = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if ((v40 & 0x80) == 0) {
            goto LABEL_52;
          }
          v34 += 7;
          BOOL v15 = v35++ >= 9;
          if (v15)
          {
            uint64_t v36 = 0;
            goto LABEL_54;
          }
        }
        v3[*v6] = 1;
LABEL_52:
        if (v3[*v6]) {
          uint64_t v36 = 0;
        }
LABEL_54:
        BOOL v41 = v36 != 0;
        uint64_t v42 = 40;
LABEL_55:
        *(unsigned char *)(a1 + v42) = v41;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v44 = v3[*v6] == 0;
  }
  else
  {
LABEL_65:
    BOOL v44 = 0;
  }
  objc_sync_exit(v3);

  return v44;
}

void sub_1895983EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDParsecRankingFeaturesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDParsecRankingFeaturesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189598464(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDServerResultScoreMetadataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          *(unsigned char *)(a1 + 20) |= 1u;
          uint64_t v18 = *v4;
          unint64_t v19 = *(void *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(void *)&v3[*v5])
          {
            int v20 = *(_DWORD *)(*(void *)&v3[*v7] + v19);
            *(void *)&v3[v18] = v19 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v20 = 0;
          }
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_31;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_31:
    BOOL v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_189599220(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDVariableExponentPairReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v25 = *v6;
            uint64_t v26 = *(void *)&v5[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&v5[*v7]) {
              break;
            }
            char v28 = *(unsigned char *)(*(void *)&v5[*v9] + v26);
            *(void *)&v5[v25] = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if ((v28 & 0x80) == 0) {
              goto LABEL_36;
            }
            v22 += 7;
            BOOL v17 = v23++ >= 9;
            if (v17)
            {
              LODWORD(v24) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            LODWORD(v24) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v24;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          int v20 = objc_alloc_init(GEOPDClientRankingFeatureUnit);
          if (!GEOPDClientRankingFeatureUnitReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          id v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v29 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v30 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v29;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_189599B10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOServerFormatTokenEqual(void *a1, void *a2)
{
  uint64_t v295 = *MEMORY[0x1E4F143B8];
  unint64_t v3 = a1;
  unint64_t v4 = a2;
  uint64_t v5 = (void *)v4;
  if (!(v3 | v4))
  {
    uint64_t v6 = 1;
    goto LABEL_3;
  }
  uint64_t v6 = 0;
  BOOL v8 = v3 != 0;
  if (v4)
  {
    BOOL v8 = 0;
    BOOL v9 = v3 == 0;
  }
  else
  {
    BOOL v9 = 0;
  }
  if (!v9 && !v8)
  {
    uint64_t v10 = [(id)v3 type];
    if (v10 != [v5 type])
    {
      uint64_t v6 = 0;
      goto LABEL_3;
    }
    unsigned int v11 = [(id)v3 token];
    unint64_t v12 = [v5 token];
    unint64_t v13 = v11;
    uint64_t v14 = v12;
    if (!(v13 | v14)
      || (int v15 = [(id)v13 isEqual:v14], (id)v14, (id)v13, v15))
    {
      int v16 = [(id)v3 value1];
      if (v16 == [v5 value1])
      {
        int v17 = [(id)v3 value2];
        if (v17 == [v5 value2])
        {
          int v18 = [(id)v3 value3s];
          unint64_t v19 = [v5 value3s];
          unint64_t v20 = v18;
          unint64_t v21 = v19;
          char v22 = (void *)v21;
          if (!(v20 | v21)) {
            goto LABEL_15;
          }
          BOOL v53 = v20 != 0;
          if (v21)
          {
            BOOL v53 = 0;
            BOOL v54 = v20 == 0;
          }
          else
          {
            BOOL v54 = 0;
          }
          if (!v54 && !v53)
          {
            uint64_t v55 = [(id)v20 count];
            if (v55 == [v22 count])
            {
              uint64_t v274 = (void *)v13;
              uint64_t v279 = v14;
              int v56 = v22;
              long long v292 = 0u;
              long long v293 = 0u;
              long long v290 = 0u;
              long long v291 = 0u;
              id v267 = (id)v20;
              id v57 = (id)v20;
              uint64_t v58 = [v57 countByEnumeratingWithState:&v290 objects:v294 count:16];
              if (v58)
              {
                uint64_t v59 = v58;
                uint64_t v60 = 0;
                uint64_t v61 = *(void *)v291;
                while (2)
                {
                  for (uint64_t i = 0; i != v59; ++i)
                  {
                    if (*(void *)v291 != v61) {
                      objc_enumerationMutation(v57);
                    }
                    unint64_t v63 = *(void *)(*((void *)&v290 + 1) + 8 * i);
                    uint64_t v64 = [v56 objectAtIndexedSubscript:v60 + i];
                    if (v63 | v64)
                    {
                      uint64_t v65 = (void *)v64;
                      int v66 = [(id)v63 isEqual:v64];

                      if (!v66)
                      {

                        char v22 = v56;
                        uint64_t v6 = 0;
                        unint64_t v20 = (unint64_t)v267;
                        unint64_t v13 = (unint64_t)v274;
                        uint64_t v14 = v279;
                        goto LABEL_212;
                      }
                    }
                  }
                  uint64_t v59 = [v57 countByEnumeratingWithState:&v290 objects:v294 count:16];
                  v60 += i;
                  if (v59) {
                    continue;
                  }
                  break;
                }
              }

              char v22 = v56;
              unint64_t v20 = (unint64_t)v267;
              unint64_t v13 = (unint64_t)v274;
              uint64_t v14 = v279;
LABEL_15:
              unsigned int v23 = [(id)v3 stringValue];
              uint64_t v24 = [v5 stringValue];
              unint64_t v25 = v23;
              unint64_t v26 = v24;
              if (v25 | v26)
              {
                uint64_t v6 = [(id)v25 isEqual:v26];

                if (!v6)
                {
LABEL_211:

LABEL_212:
                  goto LABEL_44;
                }
              }
              int v287 = v22;
              unint64_t v288 = v26;
              unint64_t v27 = [(id)v3 priceValue];
              char v28 = [v5 priceValue];
              uint64_t v29 = v27;
              unint64_t v30 = v28;
              BOOL v289 = (void *)v30;
              if (!(v29 | v30)) {
                goto LABEL_18;
              }
              uint64_t v6 = 0;
              BOOL v67 = v29 != 0;
              if (v30) {
                BOOL v67 = 0;
              }
              uint64_t v33 = v29;
              if (v30) {
                BOOL v68 = v29 == 0;
              }
              else {
                BOOL v68 = 0;
              }
              if (v68)
              {
                unint64_t v26 = v288;
              }
              else
              {
                unint64_t v26 = v288;
                if (!v67)
                {
                  [(id)v29 value];
                  double v70 = v69;
                  [v289 value];
                  if (vabdd_f64(v70, v71) < 0.0001)
                  {
                    unint64_t v72 = [(id)v29 currencyCode];
                    int v73 = [v289 currencyCode];
                    unint64_t v74 = v72;
                    unint64_t v75 = v73;
                    if (v74 | v75)
                    {
                      uint64_t v124 = (void *)v75;
                      char v286 = [(id)v74 isEqual:v75];

                      if ((v286 & 1) == 0)
                      {
                        uint64_t v6 = 0;
                        unint64_t v26 = v288;
LABEL_210:

                        char v22 = v287;
                        goto LABEL_211;
                      }
                    }
                    else
                    {
                    }
LABEL_18:
                    uint64_t v283 = v29;
                    BOOL v31 = [(id)v3 artworkValue];
                    unint64_t v32 = [v5 artworkValue];
                    uint64_t v33 = v31;
                    unint64_t v34 = v32;
                    unint64_t v284 = v25;
                    unint64_t v285 = (void *)v34;
                    if (!(v33 | v34))
                    {
LABEL_19:
                      unsigned int v35 = [(id)v3 timeStampValues];
                      uint64_t v36 = [v5 timeStampValues];
                      uint64_t v37 = v35;
                      unint64_t v38 = v36;
                      unint64_t v39 = (void *)v38;
                      if (!(v37 | v38))
                      {
                        unsigned int v263 = (void *)v37;
                        goto LABEL_21;
                      }
                      BOOL v104 = v37 != 0;
                      if (v38)
                      {
                        BOOL v104 = 0;
                        BOOL v105 = v37 == 0;
                      }
                      else
                      {
                        BOOL v105 = 0;
                      }
                      if (!v105 && !v104)
                      {
                        unsigned int v263 = (void *)v37;
                        uint64_t v106 = [(id)v37 count];
                        BOOL v9 = v106 == [v39 count];
                        uint64_t v37 = (uint64_t)v263;
                        if (v9)
                        {
                          uint64_t v258 = v33;
                          unint64_t v277 = v13;
                          uint64_t v281 = v14;
                          id v269 = (id)v20;
                          long long v292 = 0u;
                          long long v293 = 0u;
                          long long v290 = 0u;
                          long long v291 = 0u;
                          id v107 = v263;
                          uint64_t v108 = [v107 countByEnumeratingWithState:&v290 objects:v294 count:16];
                          if (v108)
                          {
                            uint64_t v109 = v108;
                            uint64_t v110 = 0;
                            uint64_t v111 = *(void *)v291;
                            while (2)
                            {
                              for (uint64_t j = 0; j != v109; ++j)
                              {
                                if (*(void *)v291 != v111) {
                                  objc_enumerationMutation(v107);
                                }
                                unsigned int v113 = *(void **)(*((void *)&v290 + 1) + 8 * j);
                                uint64_t v114 = [v39 objectAtIndexedSubscript:v110 + j];
                                LODWORD(v113) = __GEOServerFormatTokenEqual_block_invoke_2(v113, v114);

                                if (!v113)
                                {

                                  uint64_t v6 = 0;
                                  uint64_t v33 = (uint64_t)v107;
                                  unint64_t v20 = (unint64_t)v269;
                                  unint64_t v13 = v277;
                                  uint64_t v14 = v281;
                                  unint64_t v26 = v288;
                                  uint64_t v78 = v258;
                                  goto LABEL_207;
                                }
                              }
                              uint64_t v109 = [v107 countByEnumeratingWithState:&v290 objects:v294 count:16];
                              v110 += j;
                              if (v109) {
                                continue;
                              }
                              break;
                            }
                          }

                          unint64_t v20 = (unint64_t)v269;
                          unint64_t v13 = v277;
                          uint64_t v14 = v281;
                          uint64_t v33 = v258;
LABEL_21:
                          char v40 = [(id)v3 urlValue];
                          BOOL v41 = [v5 urlValue];
                          unint64_t v42 = v40;
                          unint64_t v43 = v41;
                          uint64_t v275 = (void *)v43;
                          int v278 = (void *)v42;
                          if (v42 | v43)
                          {
                            uint64_t v6 = 0;
                            BOOL v115 = v42 != 0;
                            if (v43) {
                              BOOL v115 = 0;
                            }
                            unint64_t v116 = (void *)v42;
                            if (v43) {
                              BOOL v117 = v42 == 0;
                            }
                            else {
                              BOOL v117 = 0;
                            }
                            if (v117 || v115) {
                              goto LABEL_137;
                            }
                            unsigned int v118 = [(id)v42 displayTitle];
                            uint64_t v119 = [v275 displayTitle];
                            unint64_t v120 = v118;
                            unint64_t v52 = v119;
                            v259 = (void *)v120;
                            if (v120 | v52)
                            {
                              int v270 = [(id)v120 isEqual:v52];

                              if (!v270)
                              {
                                uint64_t v6 = 0;
                                id v266 = v275;
                                id v254 = (id)v42;
                                unint64_t v50 = (unint64_t)v259;
                                goto LABEL_136;
                              }
                            }
                            unint64_t v121 = [(id)v42 url];
                            id v271 = [v275 url];
                            unint64_t v122 = v121;
                            unint64_t v123 = (unint64_t)v271;
                            if (v122 | v123)
                            {
                              int v145 = (void *)v123;
                              char v272 = [(id)v122 isEqual:v123];

                              if ((v272 & 1) == 0)
                              {
                                uint64_t v78 = v33;
                                uint64_t v6 = 0;
LABEL_138:
                                unint64_t v26 = v288;

                                uint64_t v33 = (uint64_t)v263;
                                goto LABEL_207;
                              }
                            }
                            else
                            {
                            }
                          }
                          BOOL v44 = [(id)v3 maneuverValue];
                          char v45 = [v5 maneuverValue];
                          unint64_t v46 = v44;
                          unint64_t v47 = v45;
                          id v254 = (id)v46;
                          id v266 = (id)v47;
                          if (!(v46 | v47))
                          {
LABEL_23:
                            uint64_t v48 = [(id)v3 numberData];
                            char v49 = [v5 numberData];
                            unint64_t v50 = v48;
                            unint64_t v51 = v49;
                            unint64_t v52 = v51;
                            if (v50 | v51)
                            {
                              uint64_t v6 = 0;
                              BOOL v135 = v50 != 0;
                              if (v51)
                              {
                                BOOL v135 = 0;
                                BOOL v136 = v50 == 0;
                              }
                              else
                              {
                                BOOL v136 = 0;
                              }
                              if (!v136 && !v135)
                              {
                                [(id)v50 value];
                                float v138 = v137;
                                [(id)v52 value];
                                uint64_t v6 = vabds_f32(v138, v139) < 1.0e-12;
                              }
                            }
                            else
                            {
                              uint64_t v6 = 1;
                            }

                            goto LABEL_136;
                          }
                          uint64_t v125 = (void *)v46;
                          uint64_t v6 = 0;
                          BOOL v126 = v125 != 0;
                          if (v47)
                          {
                            BOOL v126 = 0;
                            BOOL v127 = v125 == 0;
                          }
                          else
                          {
                            BOOL v127 = 0;
                          }
                          if (v127 || v126)
                          {
                            unint64_t v50 = (unint64_t)v125;
                            unint64_t v52 = v47;
                          }
                          else
                          {
                            unsigned int v128 = (void *)v47;
                            int v129 = [v125 maneuverType];
                            if (v129 == [v128 maneuverType])
                            {
                              uint64_t v130 = [v125 junctionInfo];
                              [v266 junctionInfo];
                              v132 = unint64_t v131 = v125;
                              unint64_t v133 = v130;
                              unint64_t v134 = v132;
                              if (v133 | v134)
                              {
                                unint64_t v160 = (void *)v134;
                                char v262 = [(id)v133 isEqual:v134];

                                if ((v262 & 1) == 0)
                                {
                                  unint64_t v116 = v131;
                                  unint64_t v43 = (unint64_t)v266;
                                  uint64_t v6 = 0;
                                  goto LABEL_137;
                                }
                              }
                              else
                              {
                              }
                              goto LABEL_23;
                            }
                            uint64_t v6 = 0;
                            unint64_t v50 = (unint64_t)v125;
                            unint64_t v52 = (unint64_t)v266;
                          }
LABEL_136:

                          unint64_t v116 = v254;
                          unint64_t v43 = (unint64_t)v266;
LABEL_137:
                          uint64_t v78 = v33;

                          goto LABEL_138;
                        }
                      }
                      uint64_t v78 = v33;

                      uint64_t v33 = v37;
                      uint64_t v6 = 0;
LABEL_206:
                      unint64_t v26 = v288;
                      goto LABEL_207;
                    }
                    uint64_t v6 = 0;
                    BOOL v76 = v33 != 0;
                    if (v34)
                    {
                      BOOL v76 = 0;
                      BOOL v77 = v33 == 0;
                    }
                    else
                    {
                      BOOL v77 = 0;
                    }
                    uint64_t v78 = v33;
                    unint64_t v39 = (void *)v34;
                    if (v77) {
                      goto LABEL_206;
                    }
                    unint64_t v26 = v288;
                    if (!v76)
                    {
                      int v79 = [(id)v33 artworkSourceType];
                      unint64_t v39 = v285;
                      if (v79 == [v285 artworkSourceType])
                      {
                        int v80 = [(id)v33 artworkUseType];
                        if (v80 == [v285 artworkUseType])
                        {
                          unint64_t v81 = [(id)v33 shieldDataSource];
                          int v82 = [v285 shieldDataSource];
                          unint64_t v83 = v81;
                          unint64_t v84 = v82;
                          unint64_t v85 = (void *)v84;
                          if (!(v83 | v84)) {
                            goto LABEL_63;
                          }
                          BOOL v140 = v83 != 0;
                          if (v84)
                          {
                            BOOL v140 = 0;
                            BOOL v141 = v83 == 0;
                          }
                          else
                          {
                            BOOL v141 = 0;
                          }
                          if (!v141 && !v140)
                          {
                            uint64_t v142 = [(id)v83 shieldType];
                            if (v142 == [v85 shieldType])
                            {
                              uint64_t v260 = v33;
                              uint64_t v265 = v85;
                              uint64_t v282 = v14;
                              char v256 = (void *)v83;
                              unint64_t v143 = [(id)v83 shieldText];
                              if (!v143)
                              {
                                uint64_t v274 = [v85 shieldText];
                                if (!v274)
                                {
                                  uint64_t v274 = 0;
                                  int v253 = 0;
                                  goto LABEL_189;
                                }
                              }
                              char v144 = [(id)v83 shieldText];
                              [v265 shieldText];
                              v33 = uint64_t v14 = (uint64_t)v144;
                              if (objc_msgSend(v144, "isEqualToString:"))
                              {
                                int v253 = 1;
LABEL_189:
                                int v187 = [(id)v83 shieldColorString];
                                if (v187
                                  || ([v265 shieldColorString],
                                      (char v250 = objc_claimAutoreleasedReturnValue()) != 0))
                                {
                                  char v188 = [(id)v83 shieldColorString];
                                  unsigned int v189 = [v265 shieldColorString];
                                  int v273 = [v188 isEqualToString:v189];

                                  if (v187)
                                  {

                                    if (!v253) {
                                      goto LABEL_194;
                                    }
                                    goto LABEL_193;
                                  }
                                }
                                else
                                {
                                  char v250 = 0;
                                  int v273 = 1;
                                }

                                if ((v253 & 1) == 0)
                                {
LABEL_194:
                                  if (v143)
                                  {

                                    unint64_t v85 = v265;
                                    unint64_t v83 = (unint64_t)v256;

                                    uint64_t v14 = v282;
                                    uint64_t v33 = v260;
                                    if (!v273) {
                                      goto LABEL_177;
                                    }
                                  }
                                  else
                                  {

                                    unint64_t v85 = v265;
                                    unint64_t v83 = (unint64_t)v256;

                                    uint64_t v14 = v282;
                                    uint64_t v33 = v260;
                                    if ((v273 & 1) == 0) {
                                      goto LABEL_177;
                                    }
                                  }
LABEL_63:
                                  uint64_t v264 = v85;
                                  int v86 = [(id)v33 iconDataSource];
                                  unsigned int v87 = [v285 iconDataSource];
                                  id v88 = v86;
                                  unint64_t v89 = v87;
                                  unint64_t v90 = (unint64_t)v88;
                                  unint64_t v91 = (void *)v89;
                                  if (v90 | v89)
                                  {
                                    BOOL v146 = v90 != 0;
                                    if (v89)
                                    {
                                      BOOL v146 = 0;
                                      BOOL v147 = v90 == 0;
                                    }
                                    else
                                    {
                                      BOOL v147 = 0;
                                    }
                                    unsigned int v148 = (void *)v89;
                                    uint64_t v149 = (void *)v90;
                                    if (v147) {
                                      goto LABEL_203;
                                    }
                                    unsigned int v148 = (void *)v89;
                                    uint64_t v149 = (void *)v90;
                                    if (v146) {
                                      goto LABEL_203;
                                    }
                                    uint64_t v261 = (void *)v89;
                                    int v150 = [(id)v90 iconType];
                                    int v151 = [v261 iconType];
                                    unsigned int v148 = v261;
                                    uint64_t v149 = (void *)v90;
                                    BOOL v9 = v150 == v151;
                                    unint64_t v91 = v261;
                                    if (!v9) {
                                      goto LABEL_203;
                                    }
                                    int v152 = [(id)v90 cartoID];
                                    int v153 = [v261 cartoID];
                                    unsigned int v148 = v261;
                                    uint64_t v149 = (void *)v90;
                                    BOOL v9 = v152 == v153;
                                    unint64_t v91 = v261;
                                    if (!v9) {
                                      goto LABEL_203;
                                    }
                                    int v154 = [(id)v90 defaultTransitType];
                                    int v155 = [v261 defaultTransitType];
                                    unsigned int v148 = v261;
                                    uint64_t v149 = (void *)v90;
                                    BOOL v9 = v154 == v155;
                                    unint64_t v91 = v261;
                                    if (!v9) {
                                      goto LABEL_203;
                                    }
                                    int v156 = [(id)v90 iconAttributeKey];
                                    int v157 = [v261 iconAttributeKey];
                                    unsigned int v148 = v261;
                                    uint64_t v149 = (void *)v90;
                                    BOOL v9 = v156 == v157;
                                    unint64_t v91 = v261;
                                    if (!v9) {
                                      goto LABEL_203;
                                    }
                                    int v158 = [(id)v90 iconAttributeValue];
                                    int v159 = [v261 iconAttributeValue];

                                    BOOL v9 = v158 == v159;
                                    unint64_t v91 = v261;
                                    if (!v9) {
                                      goto LABEL_204;
                                    }
                                  }
                                  unint64_t v255 = (void *)v83;
                                  int v257 = v91;
                                  unsigned int v251 = (void *)v90;
                                  unint64_t v276 = v13;
                                  uint64_t v280 = v14;
                                  id v268 = (id)v20;
                                  int v92 = [(id)v33 iconFallbackShieldDataSource];
                                  uint64_t v93 = [v285 iconFallbackShieldDataSource];
                                  uint64_t v94 = v92;
                                  unint64_t v252 = v93;
                                  if (!(v94 | v252)) {
                                    goto LABEL_65;
                                  }
                                  BOOL v161 = v94 != 0;
                                  if (v252)
                                  {
                                    BOOL v161 = 0;
                                    BOOL v162 = v94 == 0;
                                  }
                                  else
                                  {
                                    BOOL v162 = 0;
                                  }
                                  if (!v162 && !v161)
                                  {
                                    uint64_t v163 = [(id)v94 shieldType];
                                    if (v163 == [(id)v252 shieldType])
                                    {
                                      char v164 = (void *)v94;
                                      int v165 = [(id)v94 shieldText];
                                      if (!v165)
                                      {
                                        uint64_t v245 = [(id)v252 shieldText];
                                        if (!v245)
                                        {
                                          uint64_t v245 = 0;
                                          int v241 = 0;
                                          goto LABEL_221;
                                        }
                                      }
                                      int v166 = [(id)v94 shieldText];
                                      [(id)v252 shieldText];
                                      uint64_t v94 = v247 = v166;
                                      if (objc_msgSend(v166, "isEqualToString:"))
                                      {
                                        int v241 = 1;
LABEL_221:
                                        uint64_t v191 = [v164 shieldColorString];
                                        if (v191
                                          || ([(id)v252 shieldColorString],
                                              (unsigned int v239 = objc_claimAutoreleasedReturnValue()) != 0))
                                        {
                                          uint64_t v192 = [v164 shieldColorString];
                                          unint64_t v193 = [(id)v252 shieldColorString];
                                          int v244 = [v192 isEqualToString:v193];

                                          if (v191)
                                          {

                                            if (!v241) {
                                              goto LABEL_226;
                                            }
                                            goto LABEL_225;
                                          }
                                        }
                                        else
                                        {
                                          unsigned int v239 = 0;
                                          int v244 = 1;
                                        }

                                        if ((v241 & 1) == 0)
                                        {
LABEL_226:
                                          if (v165)
                                          {

                                            uint64_t v94 = (uint64_t)v164;
                                            if (!v244) {
                                              goto LABEL_230;
                                            }
                                          }
                                          else
                                          {

                                            uint64_t v94 = (uint64_t)v164;
                                            if ((v244 & 1) == 0)
                                            {
LABEL_230:
                                              uint64_t v149 = (void *)v94;
                                              unint64_t v20 = (unint64_t)v268;
                                              unint64_t v13 = v276;
                                              unint64_t v83 = (unint64_t)v255;
                                              unint64_t v91 = v257;
                                              unint64_t v90 = (unint64_t)v251;
                                              unsigned int v148 = (void *)v252;
                                              goto LABEL_203;
                                            }
                                          }
LABEL_65:
                                          BOOL v249 = (void *)v94;
                                          unint64_t v95 = [(id)v33 textDataSource];
                                          int v96 = [v285 textDataSource];
                                          unint64_t v97 = v95;
                                          unint64_t v98 = v96;
                                          uint64_t v99 = (void *)v98;
                                          if (!(v97 | v98)) {
                                            goto LABEL_66;
                                          }
                                          BOOL v167 = v97 != 0;
                                          uint64_t v246 = (void *)v98;
                                          int v248 = (void *)v97;
                                          if (v98)
                                          {
                                            BOOL v167 = 0;
                                            BOOL v168 = v97 == 0;
                                          }
                                          else
                                          {
                                            BOOL v168 = 0;
                                          }
                                          if (v168 || v167)
                                          {
LABEL_294:
                                            uint64_t v99 = v246;

                                            unint64_t v97 = (unint64_t)v248;
                                            goto LABEL_295;
                                          }
                                          unsigned int v169 = [(id)v97 text];
                                          unint64_t v170 = [v246 text];
                                          unint64_t v171 = v169;
                                          unint64_t v242 = v170;
                                          int v243 = (void *)v171;
                                          if (!(v171 | v242))
                                          {
                                            uint64_t v99 = v246;

                                            unint64_t v97 = (unint64_t)v248;
LABEL_66:
                                            int v100 = [(id)v33 hasRoutingIncidentBadge];
                                            if (v100 == [v285 hasRoutingIncidentBadge])
                                            {
                                              int v101 = [(id)v33 accessibilityText];
                                              if (v101
                                                || ([v285 accessibilityText],
                                                    (uint64_t v14 = objc_claimAutoreleasedReturnValue()) != 0))
                                              {
                                                unsigned int v102 = [(id)v33 accessibilityText];
                                                unsigned int v103 = [v285 accessibilityText];
                                                uint64_t v6 = [v102 isEqualToString:v103];

                                                if (v101) {
                                                  goto LABEL_218;
                                                }
                                              }
                                              else
                                              {
                                                uint64_t v6 = 1;
                                              }
                                              int v101 = (void *)v14;
LABEL_218:

                                              unint64_t v30 = (unint64_t)v285;
                                              unint64_t v20 = (unint64_t)v268;
                                              unint64_t v13 = v276;
                                              uint64_t v14 = v280;
                                              unint64_t v25 = v284;
                                              if (!v6)
                                              {
                                                unint64_t v26 = v288;
                                                goto LABEL_208;
                                              }
                                              goto LABEL_19;
                                            }
LABEL_295:

                                            uint64_t v6 = 0;
                                            unint64_t v39 = v285;
                                            uint64_t v78 = v33;
                                            unint64_t v20 = (unint64_t)v268;
                                            unint64_t v13 = v276;
                                            goto LABEL_206;
                                          }
                                          BOOL v173 = v171 != 0;
                                          if (v242)
                                          {
                                            BOOL v173 = 0;
                                            BOOL v174 = v171 == 0;
                                          }
                                          else
                                          {
                                            BOOL v174 = 0;
                                          }
                                          if (v174 || v173)
                                          {
LABEL_293:

                                            goto LABEL_294;
                                          }
                                          int v175 = [(id)v171 formatStrings];
                                          int v176 = [(id)v242 formatStrings];
                                          unint64_t v236 = v175;
                                          unint64_t v240 = v176;
                                          if (v236 | v240)
                                          {
                                            BOOL v194 = v236 != 0;
                                            if (v240)
                                            {
                                              BOOL v194 = 0;
                                              BOOL v195 = v236 == 0;
                                            }
                                            else
                                            {
                                              BOOL v195 = 0;
                                            }
                                            if (v195
                                              || v194
                                              || (uint64_t v196 = [(id)v236 count],
                                                  v196 != [(id)v240 count]))
                                            {

                                              uint64_t v206 = (void *)v236;
                                              goto LABEL_291;
                                            }
                                            long long v292 = 0u;
                                            long long v293 = 0u;
                                            long long v290 = 0u;
                                            long long v291 = 0u;
                                            id obja = (id)v236;
                                            uint64_t v197 = [obja countByEnumeratingWithState:&v290 objects:v294 count:16];
                                            if (v197)
                                            {
                                              uint64_t v198 = v197;
                                              uint64_t v199 = 0;
                                              uint64_t v200 = *(void *)v291;
                                              while (2)
                                              {
                                                for (uint64_t k = 0; k != v198; ++k)
                                                {
                                                  if (*(void *)v291 != v200) {
                                                    objc_enumerationMutation(obja);
                                                  }
                                                  unint64_t v202 = *(void *)(*((void *)&v290 + 1) + 8 * k);
                                                  uint64_t v203 = [(id)v240 objectAtIndexedSubscript:v199 + k];
                                                  if (v202 | v203)
                                                  {
                                                    unsigned int v204 = (void *)v203;
                                                    int v205 = [(id)v202 isEqual:v203];

                                                    if (!v205)
                                                    {

                                                      goto LABEL_292;
                                                    }
                                                  }
                                                }
                                                uint64_t v198 = [obja countByEnumeratingWithState:&v290 objects:v294 count:16];
                                                v199 += k;
                                                if (v198) {
                                                  continue;
                                                }
                                                break;
                                              }
                                            }
                                          }
                                          BOOL v177 = [v243 separators];
                                          unsigned int v178 = [(id)v242 separators];
                                          unint64_t v235 = v177;
                                          obuint64_t j = v178;
                                          if (v235 | obj)
                                          {
                                            BOOL v207 = v235 != 0;
                                            if (obj)
                                            {
                                              BOOL v207 = 0;
                                              BOOL v208 = v235 == 0;
                                            }
                                            else
                                            {
                                              BOOL v208 = 0;
                                            }
                                            if (v208
                                              || v207
                                              || (uint64_t v209 = [(id)v235 count],
                                                  v209 != [(id)obj count]))
                                            {

LABEL_290:
                                              uint64_t v206 = (void *)v235;
LABEL_291:

LABEL_292:
                                              goto LABEL_293;
                                            }
                                            long long v292 = 0u;
                                            long long v293 = 0u;
                                            long long v290 = 0u;
                                            long long v291 = 0u;
                                            id v234 = (id)v235;
                                            uint64_t v210 = [v234 countByEnumeratingWithState:&v290 objects:v294 count:16];
                                            if (v210)
                                            {
                                              uint64_t v211 = v210;
                                              uint64_t v212 = 0;
                                              uint64_t v213 = *(void *)v291;
                                              while (2)
                                              {
                                                for (uint64_t m = 0; m != v211; ++m)
                                                {
                                                  if (*(void *)v291 != v213) {
                                                    objc_enumerationMutation(v234);
                                                  }
                                                  unint64_t v215 = *(void *)(*((void *)&v290 + 1) + 8 * m);
                                                  uint64_t v216 = [(id)obj objectAtIndexedSubscript:v212 + m];
                                                  if (v215 | v216)
                                                  {
                                                    unint64_t v217 = (void *)v216;
                                                    int v218 = [(id)v215 isEqual:v216];

                                                    if (!v218)
                                                    {

                                                      goto LABEL_290;
                                                    }
                                                  }
                                                }
                                                uint64_t v211 = [v234 countByEnumeratingWithState:&v290 objects:v294 count:16];
                                                v212 += m;
                                                if (v211) {
                                                  continue;
                                                }
                                                break;
                                              }
                                            }
                                          }
                                          uint64_t v179 = [v243 formatTokens];
                                          uint64_t v180 = [(id)v242 formatTokens];
                                          id v181 = v179;
                                          unint64_t v232 = v181;
                                          id v233 = v180;
                                          if (__PAIR128__((unint64_t)v233, (unint64_t)v181) == 0) {
                                            goto LABEL_186;
                                          }
                                          BOOL v219 = v181 != 0;
                                          if (v233)
                                          {
                                            BOOL v219 = 0;
                                            BOOL v220 = v181 == 0;
                                          }
                                          else
                                          {
                                            BOOL v220 = 0;
                                          }
                                          if (!v220 && !v219)
                                          {
                                            uint64_t v221 = [v181 count];
                                            if (v221 == [v233 count])
                                            {
                                              long long v292 = 0u;
                                              long long v293 = 0u;
                                              long long v290 = 0u;
                                              long long v291 = 0u;
                                              id v231 = v181;
                                              uint64_t v222 = [v231 countByEnumeratingWithState:&v290 objects:v294 count:16];
                                              if (v222)
                                              {
                                                uint64_t v223 = v222;
                                                uint64_t v224 = 0;
                                                uint64_t v225 = *(void *)v291;
                                                while (2)
                                                {
                                                  for (uint64_t n = 0; n != v223; ++n)
                                                  {
                                                    if (*(void *)v291 != v225) {
                                                      objc_enumerationMutation(v231);
                                                    }
                                                    int v227 = *(void **)(*((void *)&v290 + 1) + 8 * n);
                                                    BOOL v228 = [v233 objectAtIndexedSubscript:v224 + n];
                                                    LODWORD(v227) = __GEOServerFormattedStringEqual_block_invoke_3(v227, v228);

                                                    if (!v227)
                                                    {
                                                      uint64_t v230 = v231;

                                                      unsigned int v229 = v233;
                                                      goto LABEL_284;
                                                    }
                                                  }
                                                  uint64_t v223 = [v231 countByEnumeratingWithState:&v290 objects:v294 count:16];
                                                  v224 += n;
                                                  if (v223) {
                                                    continue;
                                                  }
                                                  break;
                                                }
                                              }

LABEL_186:
                                              int v182 = [v243 alternativeString];
                                              unsigned int v183 = [(id)v242 alternativeString];
                                              unint64_t v184 = v182;
                                              unint64_t v185 = v183;
                                              if (v184 | v185) {
                                                char v186 = [(id)v184 isEqual:v185];
                                              }
                                              else {
                                                char v186 = 1;
                                              }

                                              uint64_t v99 = v246;
                                              unint64_t v97 = (unint64_t)v248;

                                              if ((v186 & 1) == 0) {
                                                goto LABEL_295;
                                              }
                                              goto LABEL_66;
                                            }
                                          }
                                          unsigned int v229 = v233;

                                          uint64_t v230 = v232;
LABEL_284:

                                          goto LABEL_290;
                                        }
LABEL_225:

                                        goto LABEL_226;
                                      }

                                      unint64_t v190 = v245;
                                      if (v165) {
                                        unint64_t v190 = v165;
                                      }

                                      uint64_t v94 = (uint64_t)v164;
                                    }
                                  }

                                  unsigned int v148 = (void *)v252;
                                  uint64_t v149 = (void *)v94;
                                  unint64_t v20 = (unint64_t)v268;
                                  unint64_t v13 = v276;
                                  unint64_t v91 = v257;
                                  unint64_t v90 = (unint64_t)v251;
LABEL_203:

LABEL_204:
                                  goto LABEL_205;
                                }
LABEL_193:

                                goto LABEL_194;
                              }

                              uint64_t v172 = v274;
                              if (v143) {
                                uint64_t v172 = v143;
                              }

                              uint64_t v14 = v282;
                              uint64_t v33 = v78;
                              unint64_t v85 = v265;
                            }
                          }

LABEL_177:
LABEL_205:

                          uint64_t v6 = 0;
                          unint64_t v39 = v285;
                          uint64_t v78 = v33;
                          goto LABEL_206;
                        }
                      }
                      uint64_t v6 = 0;
                    }
LABEL_207:

                    unint64_t v25 = v284;
                    unint64_t v30 = (unint64_t)v285;
                    uint64_t v33 = v78;
LABEL_208:
                    uint64_t v29 = v283;
                    goto LABEL_209;
                  }
                  uint64_t v6 = 0;
                  unint64_t v30 = (unint64_t)v289;
                  uint64_t v33 = v29;
                }
              }
LABEL_209:

              goto LABEL_210;
            }
          }
        }
      }
    }
    uint64_t v6 = 0;
LABEL_44:
  }
LABEL_3:

  return v6;
}

uint64_t __GEOServerFormatTokenEqual_block_invoke_2(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  unint64_t v5 = (unint64_t)v3;
  unint64_t v6 = (unint64_t)v4;
  unsigned int v7 = (void *)v6;
  if (v5 | v6)
  {
    uint64_t v8 = 0;
    if (v6) {
      BOOL v10 = 0;
    }
    else {
      BOOL v10 = v5 != 0;
    }
    if (v6) {
      BOOL v11 = v5 == 0;
    }
    else {
      BOOL v11 = 0;
    }
    if (!v11 && !v10)
    {
      [(id)v5 timeStamp];
      uint64_t v13 = (uint64_t)v12;
      [v7 timeStamp];
      if (v13 == (uint64_t)v14)
      {
        int v15 = [(id)v5 timeZone];
        int v16 = [v7 timeZone];
        unint64_t v17 = v15;
        unint64_t v18 = v16;
        if (!(v17 | v18)
          || (uint64_t v8 = [(id)v17 isEqual:v18], (id)v18, (id)v17, v8))
        {
          uint64_t v19 = [(id)v5 formatPattern];
          uint64_t v20 = [v7 formatPattern];
          if (v19 | v20) {
            uint64_t v8 = [(id)v19 isEqual:v20];
          }
          else {
            uint64_t v8 = 1;
          }
        }
      }
      else
      {
        uint64_t v8 = 0;
      }
    }
  }
  else
  {
    uint64_t v8 = 1;
  }

  return v8;
}

uint64_t __GEOServerFormattedStringEqual_block_invoke_3(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = GEOServerFormatTokenEqual(v3, v4);

  return v5;
}

BOOL GEOPDSBrandFilterReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_34:
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18959BD00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSCategoryFilterReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadData();
          unsigned int v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_18959C478(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18959C7DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18959C9B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18959CBB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSCategorySearchResultSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSCategorySearchResultSectionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    unsigned int v9 = (int *)&GEOPDSCategorySearchResultSectionReadAllFrom_recursiveTag;
  }
  else {
    unsigned int v9 = (int *)&GEOPDSCategorySearchResultSectionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSCategorySearchResultSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18959CF14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSCategorySearchResultSectionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_42;
          }
          goto LABEL_36;
        case 2u:
          if (v15 == 2) {
            goto LABEL_36;
          }
          goto LABEL_42;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_42;
          }
          unsigned int v17 = 0;
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
            goto LABEL_42;
          }
          PBReaderRecallMark();
          continue;
        case 5u:
          if (v15 == 2) {
            goto LABEL_36;
          }
          goto LABEL_42;
        default:
LABEL_36:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_42:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_37;
      }
      a1[*v4] = 1;
LABEL_37:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPDSCategorySearchResultSectionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 72) & 0x7C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_18959D424(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSImplicitQueryCategoryFilterReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFEFFFCFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v60 = v17;
        char v61 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v62 = (v19 == 0) | v18;
        BOOL v63 = v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_84;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_84:
      int v58 = 1;
      goto LABEL_85;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v63;
    if ((v62 & 1) == 0)
    {
      unsigned int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_72;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_74;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_72:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_74:
        *(_DWORD *)(a1 + 60) = v41;
        goto LABEL_83;
      case 2:
        if (!v34) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 64) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_102;
          }
          char v53 = 8 * *(unsigned char *)(a1 + 64);
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_102;
        }
        char v49 = objc_alloc_init(GEOPDSImplicitQuerySearchForEVCharger);
        if (!GEOPDSImplicitQuerySearchForEVChargerReadAllFrom((uint64_t)v49, (void *)v3)) {
          goto LABEL_101;
        }
        PBReaderRecallMark();
        uint64_t v50 = 40;
        goto LABEL_68;
      case 3:
        if (!v34) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 64) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_102;
          }
          char v53 = 16 * *(unsigned char *)(a1 + 64);
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_102;
        }
        char v49 = objc_alloc_init(GEOPDSImplicitQuerySearchAroundPOI);
        if (!GEOPDSImplicitQuerySearchAroundPOIReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_101;
        }
        PBReaderRecallMark();
        uint64_t v50 = 32;
        goto LABEL_68;
      case 4:
        if (!v34) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 64) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_102;
          }
          char v53 = 32 * *(unsigned char *)(a1 + 64);
LABEL_81:
          v7 += v53 >> 7;
LABEL_82:
          int v21 = (int *)MEMORY[0x1E4F940C8];
          BOOL v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_83;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_102;
        }
        char v49 = objc_alloc_init(GEOPDSImplicitQueryIntroTipForHiking);
        if (GEOPDSImplicitQueryIntroTipForHikingReadAllFrom((uint64_t)v49, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v50 = 24;
LABEL_68:
          unint64_t v51 = *(void **)(a1 + v50);
          *(void *)(a1 + v50) = v49;

          --v7;
          goto LABEL_82;
        }
LABEL_101:

LABEL_102:
        int v58 = 0;
        uint64_t v59 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_86:
        if (v60) {
LABEL_87:
        }
          *(unsigned char *)(a1 + v59[812]) |= 2u;
        if (v63 || (v58 & 1) == 0)
        {
          *(unsigned char *)(a1 + v59[812]) |= 0x10u;
          *(unsigned char *)(a1 + v59[812]) |= 8u;
          *(unsigned char *)(a1 + v59[812]) |= 4u;
        }
        else if (v19)
        {
          while (1)
          {
            int v54 = *v19++;
            char v55 = 16;
            switch(v54)
            {
              case 0:
                goto LABEL_95;
              case 2:
                goto LABEL_94;
              case 3:
                char v55 = 8;
                goto LABEL_94;
              case 4:
                char v55 = 4;
LABEL_94:
                *(unsigned char *)(a1 + v59[812]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_95:
        if (v58) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v63)
        {
          int v56 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v60 & 1) == 0 || (*(unsigned char *)(a1 + 64) & 2) != 0)
        {
LABEL_69:
          char v52 = PBReaderSkipValueWithTag();
          BOOL v22 = (int *)MEMORY[0x1E4F940B8];
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v52 & 1) == 0)
          {
            int v58 = 0;
LABEL_85:
            uint64_t v59 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_86;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          BOOL v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v48)
          {
            int v58 = 0;
            uint64_t v59 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_87;
          }
        }
LABEL_83:
        if (!(v61 & 1 | (v7 != 0))) {
          goto LABEL_84;
        }
        continue;
    }
  }
}

void sub_18959E15C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18959E2F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18959E560(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSImplicitQueryCategoryFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSImplicitQueryCategoryFilterReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSImplicitQueryCategoryFilterReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSImplicitQueryCategoryFilterReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSImplicitQueryCategoryFilterReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDSImplicitQuerySearchAroundPOI readAll:](*(void *)(a1 + 32), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18959E7E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18959E9BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSImplicitQueryCategoryFilterIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 64);
  if ((v2 & 0x30) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEOPDSImplicitQuerySearchAroundPOIIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 64);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEOPDSImplicitQueryCategoryFilterIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDSImplicitQueryCategoryFilterIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18959ECFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSImplicitQueryIntroTipForHikingReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_36;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              uint64_t v22 = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            uint64_t v22 = 0;
          }
LABEL_38:
          *(void *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          unsigned __int8 v18 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          uint64_t v19 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v28 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v27;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_18959F6A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSImplicitQuerySearchAroundPOIReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v62 = v17;
        char v63 = v18 | v17;
        char v61 = v9;
        if ((v18 | v9)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v20 = (int *)MEMORY[0x1E4F940E8];
        char v64 = (v19 == 0) | v18;
        BOOL v65 = v18;
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_77;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_77:
      int v59 = 1;
      goto LABEL_78;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v65;
    if ((v64 & 1) == 0)
    {
      unsigned int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if (v61)
      {
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (1)
        {
          uint64_t v44 = *v20;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6)) {
            break;
          }
          char v47 = *(unsigned char *)(*(void *)(v3 + *v22) + v45);
          *(void *)(v3 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0) {
            goto LABEL_67;
          }
          v41 += 7;
          BOOL v30 = v42++ >= 9;
          if (v30)
          {
            uint64_t v43 = 0;
            goto LABEL_69;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_67:
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v43 = 0;
        }
LABEL_69:
        *(void *)(a1 + 32) = v43;
        goto LABEL_76;
      }
      goto LABEL_64;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 60) & 4) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          unsigned int v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;
          goto LABEL_57;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_98;
        }
        char v53 = 32 * *(unsigned char *)(a1 + 60);
        goto LABEL_74;
      }
    }
    else if ((v62 & 1) != 0 && (*(unsigned char *)(a1 + 60) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v51 = PBUnknownFieldAdd();
      unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v51)
      {
        int v59 = 0;
        char v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        goto LABEL_80;
      }
      goto LABEL_76;
    }
LABEL_64:
    char v52 = PBReaderSkipValueWithTag();
    unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v52 & 1) == 0)
    {
      int v59 = 0;
LABEL_78:
      char v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
      goto LABEL_79;
    }
LABEL_76:
    if (!(v63 & 1 | (v10 != 0))) {
      goto LABEL_77;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_98;
    }
    char v53 = 16 * *(unsigned char *)(a1 + 60);
LABEL_74:
    v10 += v53 >> 7;
    goto LABEL_75;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_98;
  }
  int v48 = objc_alloc_init(GEOLatLng);
  if (GEOLatLngReadAllFrom((uint64_t)v48, (void *)v3))
  {
    PBReaderRecallMark();
    unsigned int v40 = *(void **)(a1 + 40);
    *(void *)(a1 + 40) = v48;
LABEL_57:

    --v10;
LABEL_75:
    unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_76;
  }

LABEL_98:
  int v59 = 0;
  char v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_79:
  if ((v62 & 1) == 0) {
    goto LABEL_81;
  }
LABEL_80:
  *(unsigned char *)(a1 + v60[824]) |= 2u;
LABEL_81:
  if (v65 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[824]) |= 4u;
    *(unsigned char *)(a1 + v60[824]) |= 8u;
    goto LABEL_91;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v19++;
        int v54 = v55;
        if (v55 == 1) {
          break;
        }
        if (v54 == 2)
        {
          char v56 = 8;
          goto LABEL_90;
        }
        if (!v54) {
          goto LABEL_91;
        }
      }
      char v56 = 4;
LABEL_90:
      *(unsigned char *)(a1 + v60[824]) |= v56;
      continue;
    }
  }
LABEL_91:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v65)
  {
    id v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1895A0198(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895A0590(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895A0688(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSImplicitQuerySearchAroundPOIReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSImplicitQuerySearchAroundPOIReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDSImplicitQuerySearchAroundPOIReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDSImplicitQuerySearchAroundPOIReadAllFrom_initialTag;
  }
  SearchAroundPOIReadunint64_t Specified = GEOPDSImplicitQuerySearchAroundPOIReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return SearchAroundPOIReadSpecified;
}

void sub_1895A0908(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895A0AD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSImplicitQuerySearchAroundPOIIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1895A0CFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSImplicitQuerySearchForEVChargerReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_34:
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1895A1490(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSInferredInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = v6;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  int v13 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 != 0;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v67 = v18;
        char v68 = v19 | v18;
        if ((v19 | v8)) {
          uint64_t v20 = 0;
        }
        else {
          uint64_t v20 = a3;
        }
        uint64_t v21 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        char v69 = (v20 == 0) | v19;
        BOOL v70 = v19;
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v9;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_86;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_86:
      int v65 = 1;
      goto LABEL_87;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v70;
    if ((v69 & 1) == 0)
    {
      int v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_71;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (1)
        {
          uint64_t v43 = *v21;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v7)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v23) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_74;
          }
          v40 += 7;
          BOOL v31 = v41++ >= 9;
          if (v31)
          {
            LODWORD(v42) = 0;
            goto LABEL_76;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_74:
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v42) = 0;
        }
LABEL_76:
        uint64_t v59 = 52;
        goto LABEL_81;
      case 2:
        if (!v35) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_106;
          }
          v9 += *(unsigned __int8 *)(a1 + 60) << 28 >> 31;
          goto LABEL_84;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        uint64_t v50 = objc_alloc_init(GEOPDSInferredValue);
        if (GEOPDSInferredValueReadAllFrom((uint64_t)v50, (void *)v3))
        {
          PBReaderRecallMark();
          int v51 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v50;

          --v9;
LABEL_84:
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_85:
          if (!(v68 & 1 | (v9 != 0))) {
            goto LABEL_86;
          }
          continue;
        }
LABEL_105:

LABEL_106:
        int v65 = 0;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_87:
        int v66 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
        if (v67) {
LABEL_88:
        }
          *(unsigned char *)(a1 + v66[1004]) |= 4u;
        if (v70 || (v65 & 1) == 0)
        {
          *(unsigned char *)(a1 + v66[1004]) |= 8u;
          *(unsigned char *)(a1 + v66[1004]) |= 0x10u;
          goto LABEL_99;
        }
        if (v20)
        {
          while (1)
          {
            int v62 = *v20++;
            int v61 = v62;
            if (v62 == 2) {
              break;
            }
            if (v61 == 4)
            {
              char v60 = 16;
LABEL_95:
              *(unsigned char *)(a1 + v66[1004]) |= v60;
            }
            else if (!v61)
            {
              goto LABEL_99;
            }
          }
          char v60 = 8;
          goto LABEL_95;
        }
LABEL_99:
        if (v65) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v70)
        {
          char v63 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_71;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v54 = *v21;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v23) + v55);
            *(void *)(v3 + v54) = v56;
            v42 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v31 = v53++ >= 9;
              if (v31)
              {
                LODWORD(v42) = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v42) = 0;
        }
LABEL_80:
        uint64_t v59 = 56;
LABEL_81:
        *(_DWORD *)(a1 + v59) = v42;
        goto LABEL_85;
      case 4:
        if (!v35 || (*(unsigned char *)(a1 + 60) & 0x10) != 0) {
          goto LABEL_71;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        uint64_t v50 = objc_alloc_init(GEOPDSInferredInfo);
        if (!GEOPDSInferredInfoReadAllFrom()) {
          goto LABEL_105;
        }
        PBReaderRecallMark();
        -[GEOPDSInferredInfo _addNoFlagsOperand:](a1, v50);

        goto LABEL_84;
      default:
        if ((v67 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_71:
          char v58 = PBReaderSkipValueWithTag();
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v58 & 1) == 0)
          {
            int v65 = 0;
            goto LABEL_87;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v48 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v47;
          }
          int v49 = PBUnknownFieldAdd();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v49)
          {
            int v65 = 0;
            int v66 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
            goto LABEL_88;
          }
        }
        goto LABEL_85;
    }
  }
}

void sub_1895A1FC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895A2550(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895A2640(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSInferredInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        -[GEOPDSInferredInfo readAll:](*(void *)(*((void *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDSInferredInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSInferredInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDSInferredInfoReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDSInferredInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSInferredInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSInferredInfoCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1895A31F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895A3490(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSInferredInfoIsDirty(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 60) & 0x38) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 0x10) == 0) {
    return 0;
  }
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v3 = *(id *)(a1 + 32);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v3);
        }
        long long v6 = *(os_unfair_lock_s **)(*((void *)&v9 + 1) + 8 * i);
        if (v6)
        {
          os_unfair_lock_lock_with_options();
          char IsDirty = _GEOPDSInferredInfoIsDirty(v6);
          os_unfair_lock_unlock(v6 + 12);
          if (IsDirty)
          {
            uint64_t v2 = 1;
            goto LABEL_16;
          }
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_16:

  return v2;
}

void sub_1895A38AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSInferredSignalsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    long long v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v20 = objc_alloc_init(GEOPDSInferredInfo);
          if (!GEOPDSInferredInfoReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          uint64_t v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v22 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v23 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v22;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_1895A4348(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSInferredSignalsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSInferredInfoIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDSInferredValueReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (!v3[*v6])
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 36) |= 1u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_49;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_51;
              }
            }
            v3[*v6] = 1;
LABEL_49:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_51:
            uint64_t v42 = 24;
            goto LABEL_56;
          case 2u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 36) |= 2u;
            while (2)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
                *(void *)&v3[v29] = v31;
                v20 |= (unint64_t)(v32 & 0x7F) << v27;
                if (v32 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_55:
            uint64_t v42 = 28;
LABEL_56:
            *(_DWORD *)(a1 + v42) = v20;
            goto LABEL_61;
          case 3u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_64;
            }
            unint64_t v33 = objc_alloc_init(GEOPDSRawAttribute);
            if (!GEOPDSRawAttributeReadAllFrom((uint64_t)v33, v3))
            {

              goto LABEL_64;
            }
            PBReaderRecallMark();
            unint64_t v34 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v33;

LABEL_61:
            if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
              goto LABEL_62;
            }
            break;
          case 4u:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v37 = 0;
            *(unsigned char *)(a1 + 36) |= 4u;
            while (2)
            {
              uint64_t v38 = *v4;
              uint64_t v39 = *(void *)&v3[v38];
              unint64_t v40 = v39 + 1;
              if (v39 == -1 || v40 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v41 = *(unsigned char *)(*(void *)&v3[*v7] + v39);
                *(void *)&v3[v38] = v40;
                v37 |= (unint64_t)(v41 & 0x7F) << v35;
                if (v41 < 0)
                {
                  v35 += 7;
                  BOOL v15 = v36++ >= 9;
                  if (v15)
                  {
                    uint64_t v37 = 0;
                    goto LABEL_60;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v37 = 0;
            }
LABEL_60:
            *(unsigned char *)(a1 + 32) = v37 != 0;
            goto LABEL_61;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unint64_t v26 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v25;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_64;
            }
            goto LABEL_61;
        }
      }
    }
LABEL_62:
    BOOL v43 = v3[*v6] == 0;
  }
  else
  {
LABEL_64:
    BOOL v43 = 0;
  }
  objc_sync_exit(v3);

  return v43;
}

void sub_1895A50A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSPunchInHintsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFCFFFDFFFFFFFELL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v8)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_76;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_76:
      int v52 = 1;
      goto LABEL_77;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      char v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          unint64_t v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;
          goto LABEL_64;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_96;
        }
        char v47 = *(unsigned char *)(a1 + 68) << 6;
        goto LABEL_73;
      case 2:
        if (!v34) {
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_96;
          }
          char v47 = 32 * *(unsigned char *)(a1 + 68);
          goto LABEL_73;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_96;
        }
        uint64_t v44 = objc_alloc_init(GEOPDSPunchInQueryHints);
        if (!GEOPDSPunchInQueryHintsReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1)) {
          goto LABEL_95;
        }
        PBReaderRecallMark();
        uint64_t v45 = 32;
        goto LABEL_63;
      case 3:
        if (!v34 || (*(unsigned char *)(a1 + 68) & 8) != 0) {
          goto LABEL_65;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_96;
        }
        uint64_t v44 = objc_alloc_init(GEOPDSPunchInResultHints);
        if (!GEOPDSPunchInResultHintsReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1)) {
          goto LABEL_95;
        }
        PBReaderRecallMark();
        -[GEOPDSPunchInHints _addNoFlagsResultHints:](a1, v44);

        goto LABEL_74;
      case 4:
        if (!v34) {
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_96;
          }
          char v47 = 8 * *(unsigned char *)(a1 + 68);
LABEL_73:
          v7 += v47 >> 7;
LABEL_74:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_96;
        }
        uint64_t v44 = objc_alloc_init(GEOPDSPunchInResultHints);
        if (GEOPDSPunchInResultHintsReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v45 = 48;
LABEL_63:
          unint64_t v40 = *(void **)(a1 + v45);
          *(void *)(a1 + v45) = v44;
LABEL_64:

          --v7;
          goto LABEL_74;
        }
LABEL_95:

LABEL_96:
        int v52 = 0;
        unsigned int v53 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_78:
        if (v54) {
LABEL_79:
        }
          *(unsigned char *)(a1 + v53[836]) |= 1u;
        if (v57 || (v52 & 1) == 0)
        {
          *(unsigned char *)(a1 + v53[836]) |= 2u;
          *(unsigned char *)(a1 + v53[836]) |= 4u;
          *(unsigned char *)(a1 + v53[836]) |= 8u;
          *(unsigned char *)(a1 + v53[836]) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            int v49 = *v19++;
            char v48 = 2;
            switch(v49)
            {
              case 0:
                goto LABEL_89;
              case 1:
                goto LABEL_87;
              case 2:
                char v48 = 4;
                goto LABEL_87;
              case 3:
                char v48 = 8;
                goto LABEL_87;
              case 4:
                char v48 = 16;
LABEL_87:
                *(unsigned char *)(a1 + v53[836]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_89:
        if (v52) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v57)
        {
          uint64_t v50 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v54 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_65:
          char v46 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v46 & 1) == 0)
          {
            int v52 = 0;
LABEL_77:
            unsigned int v53 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_78;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v52 = 0;
            unsigned int v53 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_79;
          }
        }
LABEL_75:
        if (!(v55 & 1 | (v7 != 0))) {
          goto LABEL_76;
        }
        continue;
    }
  }
}

void sub_1895A5DA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895A5F3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895A6120(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895A6684(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895A6778(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSPunchInHintsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  -[GEOPDSPunchInQueryHints readAll:](*(void *)(a1 + 32), 1);
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 40);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDSPunchInResultHints readAll:](*(void *)(*((void *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }

  -[GEOPDSPunchInResultHints readAll:](*(void *)(a1 + 48), 1);
}

unint64_t GEOPDSPunchInHintsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSPunchInHintsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDSPunchInHintsReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDSPunchInHintsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSPunchInHintsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSPunchInHintsCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1895A6EFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSPunchInHintsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]]) {
    goto LABEL_57;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  do
  {
    if (a1[*v4]) {
      break;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v13 = v7++ >= 9;
      if (v13)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14) {
      BOOL v16 = 1;
    }
    else {
      BOOL v16 = v15 == 4;
    }
    if (v16) {
      break;
    }
    switch((v8 >> 3))
    {
      case 1u:
        if (v15 != 2) {
          goto LABEL_59;
        }
        goto LABEL_24;
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_59;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
        break;
      case 3u:
      case 4u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOPDSPunchInResultHintsIsValid(a1)) {
          goto LABEL_55;
        }
        goto LABEL_59;
      default:
LABEL_24:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_59;
        }
        continue;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
    {
      char v17 = 0;
      unsigned int v18 = 0;
      unint64_t v19 = 0;
      while (1)
      {
        uint64_t v20 = *v2;
        uint64_t v21 = *(void *)&a1[v20];
        unint64_t v22 = v21 + 1;
        if (v21 == -1 || v22 > *(void *)&a1[*v3]) {
          break;
        }
        char v23 = *(unsigned char *)(*(void *)&a1[*v5] + v21);
        *(void *)&a1[v20] = v22;
        v19 |= (unint64_t)(v23 & 0x7F) << v17;
        if ((v23 & 0x80) == 0) {
          goto LABEL_39;
        }
        v17 += 7;
        BOOL v13 = v18++ >= 9;
        if (v13)
        {
          unint64_t v19 = 0;
          int v24 = a1[*v4];
          goto LABEL_41;
        }
      }
      a1[*v4] = 1;
LABEL_39:
      int v24 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v19 = 0;
      }
LABEL_41:
      int v25 = v19 & 7;
      if (v24 || v25 == 4) {
        break;
      }
      if ((v19 >> 3) == 2)
      {
        if (v25 != 2) {
          goto LABEL_58;
        }
        goto LABEL_50;
      }
      if ((v19 >> 3) == 1)
      {
        if (v25 != 2) {
          goto LABEL_58;
        }
LABEL_50:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_58;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_58:
        PBReaderRecallMark();
        goto LABEL_59;
      }
    }
    int v27 = a1[*v4];
    PBReaderRecallMark();
    if (v27)
    {
LABEL_59:
      PBReaderRecallMark();
      return 0;
    }
LABEL_55:
    PBReaderRecallMark();
  }
  while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
LABEL_57:
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDSPunchInResultHintsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_48;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_44;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_45;
          }
        case 2u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_48;
        case 3u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_48;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_48;
          }
          PBReaderRecallMark();
          continue;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_48;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_30:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_48:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_45;
      }
LABEL_44:
      a1[*v4] = 1;
LABEL_45:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_1895A77C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSPunchInHintsIsDirty(uint64_t a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  int v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x22222222) != 0) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    if (v5)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v5 + 48));
      int v6 = *(unsigned char *)(v5 + 52) & 0xE;
      os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 48));
      if (v6) {
        return 1;
      }
      LOBYTE(v2) = *(unsigned char *)(a1 + 68);
    }
  }
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  if (GEOPDSPunchInResultHintsIsDirty(*(void *)(a1 + 48))) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 68) & 8) == 0) {
    return 0;
  }
  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v7 = *(id *)(a1 + 40);
  uint64_t v3 = [v7 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    uint64_t v8 = *(void *)v11;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v11 != v8) {
          objc_enumerationMutation(v7);
        }
        if (GEOPDSPunchInResultHintsIsDirty(*(void *)(*((void *)&v10 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_23;
        }
      }
      uint64_t v3 = [v7 countByEnumeratingWithState:&v10 objects:v14 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_23:

  return v3;
}

os_unfair_lock_s *GEOPDSPunchInHintsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDSPunchInHintsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1895A7DE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895A87D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSPunchInQueryHintsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        unsigned __int8 v15 = v14 | v7;
        unsigned __int8 v50 = v14 & ~(_BYTE)v7 | v8;
        if (((v14 | v7) | v9)) {
          BOOL v16 = 0;
        }
        else {
          BOOL v16 = a3;
        }
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_59;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_59:
      int v48 = 1;
      goto LABEL_60;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      char v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 2) {
      break;
    }
    if (v30 == 1)
    {
      if (v31)
      {
        if ((*(unsigned char *)(a1 + 52) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_78;
          }
          char v43 = 32 * *(unsigned char *)(a1 + 52);
          goto LABEL_57;
        }
        uint64_t v36 = PBReaderReadString();
        uint64_t v37 = 32;
        goto LABEL_44;
      }
    }
    else if ((v50 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v40 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v39;
      }
      int v41 = PBUnknownFieldAdd();
      uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
      if (!v41)
      {
        int v48 = 0;
        int v49 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        goto LABEL_62;
      }
      goto LABEL_58;
    }
LABEL_51:
    char v42 = PBReaderSkipValueWithTag();
    uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
    if ((v42 & 1) == 0)
    {
      int v48 = 0;
LABEL_60:
      int v49 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
      goto LABEL_61;
    }
LABEL_58:
    if (!((v15 | v50) & 1 | (v10 != 0))) {
      goto LABEL_59;
    }
  }
  if (!v31) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0)
  {
    uint64_t v36 = PBReaderReadString();
    uint64_t v37 = 24;
LABEL_44:
    BOOL v38 = *(void **)(a1 + v37);
    *(void *)(a1 + v37) = v36;

    uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v43 = *(unsigned char *)(a1 + 52) << 6;
LABEL_57:
    v10 += v43 >> 7;
    uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_58;
  }
LABEL_78:
  int v48 = 0;
  int v49 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_61:
  if ((v50 & 1) == 0) {
    goto LABEL_63;
  }
LABEL_62:
  *(unsigned char *)(a1 + v49[844]) |= 1u;
LABEL_63:
  if (v15 & 1 | ((v48 & 1) == 0))
  {
    *(unsigned char *)(a1 + v49[844]) |= 4u;
    *(unsigned char *)(a1 + v49[844]) |= 2u;
    goto LABEL_72;
  }
  if (v16)
  {
    while (1)
    {
      int v45 = *v16++;
      int v44 = v45;
      if (v45 == 1) {
        break;
      }
      if (v44 == 2)
      {
LABEL_68:
        *(unsigned char *)(a1 + v49[844]) |= v44;
      }
      else if (!v44)
      {
        goto LABEL_72;
      }
    }
    LOBYTE(v44) = 4;
    goto LABEL_68;
  }
LABEL_72:
  if (v48)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
    if ((v15 & 1) == 0) {
      return v3;
    }
LABEL_76:
    char v46 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v15) {
      goto LABEL_76;
    }
  }
  return v3;
}

void sub_1895A8E64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895A9278(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSPunchInQueryHintsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSPunchInQueryHintsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDSPunchInQueryHintsReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDSPunchInQueryHintsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSPunchInQueryHintsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1895A94E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895A9680(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895A97F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSPunchInResultHintsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFDFFFBFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v7;
        unsigned __int8 v18 = v16 | v11;
        char v68 = v17;
        char v69 = v8;
        char v70 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v20 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        char v71 = (v19 == 0) | v18;
        BOOL v72 = v18;
        unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_93;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_93:
      int v66 = 1;
      goto LABEL_94;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v72;
    if ((v71 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v69 & 1) == 0) {
          goto LABEL_74;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_77;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            uint64_t v41 = 0;
            goto LABEL_79;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_77:
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v41 = 0;
        }
LABEL_79:
        *(void *)(a1 + 40) = v41;
        goto LABEL_92;
      case 2:
        if (!v34) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x20) == 0)
        {
          uint64_t v49 = PBReaderReadString();
          uint64_t v50 = 48;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        char v61 = 4 * *(unsigned char *)(a1 + 72);
        goto LABEL_90;
      case 3:
        if (!v34) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x10) == 0)
        {
          uint64_t v49 = PBReaderReadString();
          uint64_t v50 = 32;
LABEL_59:
          int v51 = *(void **)(a1 + v50);
          *(void *)(a1 + v50) = v49;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        char v61 = 8 * *(unsigned char *)(a1 + 72);
        goto LABEL_90;
      case 4:
        if (!v34) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 72) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_111;
          }
          char v61 = 16 * *(unsigned char *)(a1 + 72);
LABEL_90:
          v9 += v61 >> 7;
          goto LABEL_91;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_111;
        }
        int v52 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v52, (void *)v3))
        {
          PBReaderRecallMark();
          int v51 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v52;
LABEL_65:

          --v9;
LABEL_91:
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_92;
        }

LABEL_111:
        int v66 = 0;
        char v67 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
        if (v68) {
LABEL_96:
        }
          *(unsigned char *)(a1 + v67[850]) |= 4u;
        if (v72 || (v66 & 1) == 0)
        {
          *(unsigned char *)(a1 + v67[850]) |= 0x20u;
          *(unsigned char *)(a1 + v67[850]) |= 0x10u;
          *(unsigned char *)(a1 + v67[850]) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            int v62 = *v19++;
            char v63 = 32;
            switch(v62)
            {
              case 0:
                goto LABEL_104;
              case 2:
                goto LABEL_103;
              case 3:
                char v63 = 16;
                goto LABEL_103;
              case 4:
                char v63 = 8;
LABEL_103:
                *(unsigned char *)(a1 + v67[850]) |= v63;
                break;
              default:
                continue;
            }
          }
        }
LABEL_104:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v72)
        {
          char v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
        if ((v69 & 1) == 0) {
          goto LABEL_74;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        *(unsigned char *)(a1 + 72) |= 2u;
        while (2)
        {
          uint64_t v56 = *v20;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v22) + v57);
            *(void *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v30 = v54++ >= 9;
              if (v30)
              {
                LODWORD(v55) = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v55) = 0;
        }
LABEL_83:
        *(_DWORD *)(a1 + 68) = v55;
        goto LABEL_92;
      default:
        if ((v68 & 1) == 0 || (*(unsigned char *)(a1 + 72) & 4) != 0)
        {
LABEL_74:
          char v60 = PBReaderSkipValueWithTag();
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v60 & 1) == 0)
          {
            int v66 = 0;
LABEL_94:
            char v67 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_95;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v48)
          {
            int v66 = 0;
            char v67 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_96;
          }
        }
LABEL_92:
        if (!(v70 & 1 | (v9 != 0))) {
          goto LABEL_93;
        }
        continue;
    }
  }
}

void sub_1895AA3A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895AA9D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895AAB60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSPunchInResultHintsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSPunchInResultHintsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSPunchInResultHintsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSPunchInResultHintsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSPunchInResultHintsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1895AB2D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895AB4E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSPunchInResultHintsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 72) & 0x78) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_1895AB750(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSRawAttributeReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              uint64_t v26 = &OBJC_IVAR___GEOPDSRawAttribute__beginIndex;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              uint64_t v26 = &OBJC_IVAR___GEOPDSRawAttribute__beginIndex;
              goto LABEL_44;
            }
          }
          uint64_t v26 = &OBJC_IVAR___GEOPDSRawAttribute__beginIndex;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          BOOL v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 2u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          uint64_t v26 = &OBJC_IVAR___GEOPDSRawAttribute__endIndex;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          uint64_t v26 = &OBJC_IVAR___GEOPDSRawAttribute__endIndex;
          goto LABEL_44;
        }
      }
      uint64_t v26 = &OBJC_IVAR___GEOPDSRawAttribute__endIndex;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1895AC0B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchAutoRedoThresholdReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 44) |= 8u;
            break;
          case 2u:
            *(unsigned char *)(a1 + 44) |= 4u;
            uint64_t v27 = *v4;
            unint64_t v28 = *(void *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v29 = *(void *)(*(void *)&v3[*v7] + v28);
              *(void *)&v3[v27] = v28 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v29 = 0;
            }
            uint64_t v34 = 32;
            goto LABEL_50;
          case 3u:
            *(unsigned char *)(a1 + 44) |= 2u;
            uint64_t v30 = *v4;
            unint64_t v31 = *(void *)&v3[v30];
            if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v29 = *(void *)(*(void *)&v3[*v7] + v31);
              *(void *)&v3[v30] = v31 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v29 = 0;
            }
            uint64_t v34 = 24;
            goto LABEL_50;
          case 4u:
            *(unsigned char *)(a1 + 44) |= 1u;
            uint64_t v32 = *v4;
            unint64_t v33 = *(void *)&v3[v32];
            if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v29 = *(void *)(*(void *)&v3[*v7] + v33);
              *(void *)&v3[v32] = v33 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v29 = 0;
            }
            uint64_t v34 = 16;
LABEL_50:
            *(void *)(a1 + v34) = v29;
            continue;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              uint64_t v26 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v25;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_53;
            }
            continue;
        }
        while (1)
        {
          uint64_t v21 = *v4;
          uint64_t v22 = *(void *)&v3[v21];
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
          *(void *)&v3[v21] = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_41;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_43;
          }
        }
        v3[*v6] = 1;
LABEL_41:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_43:
        *(_DWORD *)(a1 + 40) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_53:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1895ACD2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchAutoRedoThresholdIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_38;
          }
          unsigned int v21 = 0;
          do
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3])
            {
              uint64_t v14 = *v4;
              goto LABEL_34;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if ((v25 & 0x80000000) == 0) {
              break;
            }
          }
          while (v21++ <= 8);
          goto LABEL_35;
        case 2u:
        case 3u:
        case 4u:
          if (v16 != 1) {
            goto LABEL_38;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7 || (unint64_t v20 = v19 + 8, v20 > *(void *)&a1[*v3])) {
LABEL_34:
          }
            a1[v14] = 1;
          else {
            *(void *)&a1[v18] = v20;
          }
          goto LABEL_35;
        default:
          if (!PBReaderSkipValueWithTag())
          {
LABEL_38:
            BOOL v27 = 0;
            goto LABEL_37;
          }
LABEL_35:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_36;
          }
          break;
      }
    }
  }
LABEL_36:
  BOOL v27 = a1[*v4] == 0;
LABEL_37:
  PBReaderRecallMark();
  return v27;
}

void sub_1895AD730(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSSearchEvChargingParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  char v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  unsigned int v13 = ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + (*(unsigned char *)(a1 + 76) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 1;
        int v18 = v17 & ~v11 | v9;
        int v65 = v17 | v11;
        if (((v17 | v11) | v7)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = 1;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_88;
        }
        char v63 = v18;
        int v64 = (v8 != 0) | v65 | v18;
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v9;
LABEL_8:
        uint64_t v15 = v10;
        uint64_t v16 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v14;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_86;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_86:
      int v21 = 1;
      goto LABEL_87;
    }
    unint64_t v35 = v26 >> 3;
    BOOL v36 = v65;
    if (!((v19 == 0) | v65 & 1))
    {
      int v37 = v19;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    if (v35 == 3)
    {
      if (v36 && (*(unsigned char *)(a1 + 76) & 2) == 0)
      {
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_104;
          }
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v22))
          {
            char v42 = 0;
            unsigned int v43 = 0;
            uint64_t v44 = 0;
            while (1)
            {
              uint64_t v45 = *v20;
              uint64_t v46 = *(void *)(v3 + v45);
              unint64_t v47 = v46 + 1;
              if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
                break;
              }
              char v48 = *(unsigned char *)(*(void *)(v3 + *v23) + v46);
              *(void *)(v3 + v45) = v47;
              v44 |= (unint64_t)(v48 & 0x7F) << v42;
              if (v48 < 0)
              {
                v42 += 7;
                BOOL v31 = v43++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_60;
            }
            *(unsigned char *)(v3 + *v22) = 1;
LABEL_60:
            PBRepeatedUInt64Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v54 = 0;
          while (1)
          {
            uint64_t v55 = *v20;
            uint64_t v56 = *(void *)(v3 + v55);
            unint64_t v57 = v56 + 1;
            if (v56 == -1 || v57 > *(void *)(v3 + *v6)) {
              break;
            }
            char v58 = *(unsigned char *)(*(void *)(v3 + *v23) + v56);
            *(void *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              BOOL v31 = v53++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_83;
          }
          *(unsigned char *)(v3 + *v22) = 1;
LABEL_83:
          PBRepeatedUInt64Add();
        }
LABEL_84:
        if ((v64 & 1) == 0) {
          goto LABEL_86;
        }
        goto LABEL_85;
      }
      goto LABEL_72;
    }
    if (v35 != 2) {
      break;
    }
    if (v36 && (*(unsigned char *)(a1 + 76) & 4) == 0)
    {
      PBReaderReadString();
      uint64_t v41 = (GEOPDEvChargingPort *)objc_claimAutoreleasedReturnValue();
      if (v41) {
        -[GEOPDSSearchEvChargingParameters _addNoFlagsNetwork:](a1, v41);
      }
      goto LABEL_65;
    }
LABEL_72:
    int v51 = PBReaderSkipValueWithTag();
    if ((v51 & v64 & 1) == 0)
    {
      int v21 = v51;
      goto LABEL_87;
    }
LABEL_85:
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
      goto LABEL_86;
    }
  }
  if (v35 != 1)
  {
    if ((v63 & 1) != 0 && (*(unsigned char *)(a1 + 76) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      if (!PBUnknownFieldAdd())
      {
        int v21 = 0;
        char v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        goto LABEL_89;
      }
      goto LABEL_84;
    }
    goto LABEL_72;
  }
  if (!v36 || (*(unsigned char *)(a1 + 76) & 8) != 0) {
    goto LABEL_72;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_104;
  }
  uint64_t v41 = objc_alloc_init(GEOPDEvChargingPort);
  if (GEOPDEvChargingPortReadAllFrom((uint64_t)v41, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDSSearchEvChargingParameters _addNoFlagsPort:](a1, v41);
LABEL_65:

    goto LABEL_84;
  }

LABEL_104:
  int v21 = 0;
LABEL_87:
  char v12 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  LOBYTE(v18) = v63;
LABEL_88:
  if (v18) {
LABEL_89:
  }
    *(unsigned char *)(a1 + v12[862]) |= 1u;
  if (v65 & 1 | ((v21 & 1) == 0))
  {
    *(unsigned char *)(a1 + v12[862]) |= 8u;
    *(unsigned char *)(a1 + v12[862]) |= 4u;
    *(unsigned char *)(a1 + v12[862]) |= 2u;
  }
  else if (v19)
  {
    while (1)
    {
      int v59 = *v19++;
      char v60 = 8;
      switch(v59)
      {
        case 0:
          goto LABEL_97;
        case 1:
          goto LABEL_96;
        case 2:
          char v60 = 4;
          goto LABEL_96;
        case 3:
          char v60 = 2;
LABEL_96:
          *(unsigned char *)(a1 + v12[862]) |= v60;
          break;
        default:
          continue;
      }
    }
  }
LABEL_97:
  if (v21) {
    unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v65)
  {
    char v61 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1895AE0A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895AE284(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895AE934(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSSearchEvChargingParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 56);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDSSearchEvChargingParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSSearchEvChargingParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDSSearchEvChargingParametersReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDSSearchEvChargingParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSSearchEvChargingParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSSearchEvChargingParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1895AF040(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchEvChargingParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_49;
          }
LABEL_37:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v23 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v24 = *v2;
              uint64_t v25 = *(void *)&a1[v24];
              unint64_t v26 = v25 + 1;
              if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
                break;
              }
              int v27 = *(char *)(*(void *)&a1[*v5] + v25);
              *(void *)&a1[v24] = v26;
              if (v27 < 0)
              {
                BOOL v13 = v23++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_37;
            }
            a1[*v4] = 1;
          }
          goto LABEL_24;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_49;
        }
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            unsigned int v22 = v15++;
            if (v22 <= 8) {
              continue;
            }
          }
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else
      {
        if (v17 == 2)
        {
          if (v15 != 2) {
            goto LABEL_49;
          }
        }
        else if (v17 == 1)
        {
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDEvChargingPortIsValid(a1))
          {
LABEL_49:
            PBReaderRecallMark();
            return 0;
          }
LABEL_24:
          PBReaderRecallMark();
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_49;
        }
      }
LABEL_34:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_1895AF618(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchEvChargingParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(unsigned char *)(a1 + 76) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_1895AF97C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSSearchFilterReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int16 *)(a1 + 116) >> 2) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 116)), (uint16x4_t)0xFFF8FFFBFFF7FFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 116) >> 7) & 1)+ ((*(_WORD *)(a1 + 116) >> 3) & 1)+ ((*(_WORD *)(a1 + 116) >> 4) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 4;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        char v18 = v16 | v11;
        uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        if (((v16 | v11) | v8)) {
          unint64_t v20 = 0;
        }
        else {
          unint64_t v20 = a3;
        }
        int v86 = 1;
        char v21 = v17;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_149;
        }
        char v84 = v17;
        char v87 = v18 | v17;
        char v88 = (v20 == 0) | v18;
        unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        char v85 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_147;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v19;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_147:
      int v86 = 1;
      goto LABEL_148;
    }
    unint64_t v35 = v26 >> 3;
    BOOL v36 = v18;
    if ((v88 & 1) == 0)
    {
      int v37 = v20;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36) {
          goto LABEL_108;
        }
        if ((*(_WORD *)(a1 + 116) & 0x200) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_169;
          }
          uint64_t v41 = objc_alloc_init(GEOPDSSearchVenueFilter);
          if (GEOPDSSearchVenueFilterReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v42 = 88;
            goto LABEL_107;
          }
          goto LABEL_168;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_169;
        }
        __int16 v72 = *(_WORD *)(a1 + 116) << 6;
        goto LABEL_130;
      case 2:
        if (!v36) {
          goto LABEL_108;
        }
        if ((*(_WORD *)(a1 + 116) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_169;
          }
          __int16 v72 = *(_WORD *)(a1 + 116) << 9;
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_169;
        }
        uint64_t v41 = objc_alloc_init(GEOPDSCategoryFilter);
        if (!GEOPDSCategoryFilterReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_168;
        }
        PBReaderRecallMark();
        uint64_t v42 = 64;
        goto LABEL_107;
      case 3:
        if (!v36) {
          goto LABEL_108;
        }
        if ((*(_WORD *)(a1 + 116) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_169;
          }
          __int16 v72 = *(_WORD *)(a1 + 116) << 10;
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_169;
        }
        uint64_t v41 = objc_alloc_init(GEOPDSBrandFilter);
        if (!GEOPDSBrandFilterReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_168;
        }
        PBReaderRecallMark();
        uint64_t v42 = 56;
        goto LABEL_107;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_108;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 116) |= 1u;
        char v6 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v49 = *v19;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v23) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v31 = v47++ >= 9;
              if (v31)
              {
                LODWORD(v48) = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v48) = 0;
        }
LABEL_113:
        *(_DWORD *)(a1 + 108) = v48;
        goto LABEL_134;
      case 5:
        if (!v36) {
          goto LABEL_108;
        }
        if ((*(_WORD *)(a1 + 116) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_169;
          }
          __int16 v72 = *(_WORD *)(a1 + 116) << 7;
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_169;
        }
        uint64_t v41 = objc_alloc_init(GEOPDPoiIconCategoryFilter);
        if (!GEOPDPoiIconCategoryFilterReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_168;
        }
        PBReaderRecallMark();
        uint64_t v42 = 80;
        goto LABEL_107;
      case 6:
        if (!v36) {
          goto LABEL_108;
        }
        if ((*(_WORD *)(a1 + 116) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_169;
          }
          __int16 v72 = *(_WORD *)(a1 + 116) << 8;
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_169;
        }
        uint64_t v41 = objc_alloc_init(GEOPDSImplicitQueryCategoryFilter);
        if (!GEOPDSImplicitQueryCategoryFilterReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_168;
        }
        PBReaderRecallMark();
        uint64_t v42 = 72;
        goto LABEL_107;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_108;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        *(_WORD *)(a1 + 116) |= 2u;
        char v6 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v56 = *v19;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v23) + v57);
            *(void *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v31 = v54++ >= 9;
              if (v31)
              {
                uint64_t v55 = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v55 = 0;
        }
LABEL_117:
        *(unsigned char *)(a1 + 112) = v55 != 0;
        goto LABEL_134;
      case 8:
        if (!v36 || (*(_WORD *)(a1 + 116) & 8) != 0) {
          goto LABEL_108;
        }
        if (v33 != 2)
        {
          char v73 = 0;
          unsigned int v74 = 0;
          uint64_t v75 = 0;
          char v6 = (int *)MEMORY[0x1E4F940E0];
          while (1)
          {
            uint64_t v76 = *v19;
            uint64_t v77 = *(void *)(v3 + v76);
            unint64_t v78 = v77 + 1;
            if (v77 == -1 || v78 > *(void *)(v3 + *v6)) {
              break;
            }
            char v79 = *(unsigned char *)(*(void *)(v3 + *v23) + v77);
            *(void *)(v3 + v76) = v78;
            v75 |= (unint64_t)(v79 & 0x7F) << v73;
            if (v79 < 0)
            {
              v73 += 7;
              BOOL v31 = v74++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_146;
          }
          *(unsigned char *)(v3 + *v22) = 1;
LABEL_146:
          PBRepeatedInt32Add();
          char v18 = v85;
          goto LABEL_132;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_169;
        }
        unint64_t v60 = *(void *)(v3 + *v19);
        char v6 = (int *)MEMORY[0x1E4F940E0];
        while (1)
        {
          char v61 = (int *)MEMORY[0x1E4F940C8];
          if (v60 >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v62 = 0;
          unsigned int v63 = 0;
          uint64_t v64 = 0;
          int v65 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v66 = *v19;
            uint64_t v67 = *(void *)(v3 + v66);
            unint64_t v68 = v67 + 1;
            if (v67 == -1 || v68 > *(void *)(v3 + *v6)) {
              break;
            }
            char v69 = *(unsigned char *)(*(void *)(v3 + *v65) + v67);
            *(void *)(v3 + v66) = v68;
            v64 |= (unint64_t)(v69 & 0x7F) << v62;
            if (v69 < 0)
            {
              v62 += 7;
              BOOL v31 = v63++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_101;
          }
          *(unsigned char *)(v3 + *v61) = 1;
LABEL_101:
          PBRepeatedInt32Add();
          unint64_t v60 = *(void *)(v3 + *v19);
        }
        PBReaderRecallMark();
        unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
        char v18 = v85;
        goto LABEL_133;
      case 9:
        if (!v36) {
          goto LABEL_108;
        }
        if ((*(_WORD *)(a1 + 116) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_169;
          }
          __int16 v72 = *(_WORD *)(a1 + 116) << 11;
LABEL_130:
          v7 += v72 >> 15;
LABEL_131:
          char v18 = v85;
          char v6 = (int *)MEMORY[0x1E4F940E0];
LABEL_132:
          unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_133:
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
LABEL_134:
          if (!(v87 & 1 | (v7 != 0)) || *(void *)(v3 + *v19) >= *(void *)(v3 + *v6)) {
            goto LABEL_147;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_169;
        }
        uint64_t v41 = objc_alloc_init(GEOPDAddressResultSubTypeFilter);
        if (GEOPDAddressResultSubTypeFilterReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v42 = 48;
LABEL_107:
          char v70 = *(void **)(a1 + v42);
          *(void *)(a1 + v42) = v41;

          --v7;
          goto LABEL_131;
        }
LABEL_168:

LABEL_169:
        int v86 = 0;
        char v18 = v85;
LABEL_148:
        char v21 = v84;
LABEL_149:
        if (v21) {
LABEL_150:
        }
          *(_WORD *)(a1 + 116) |= 4u;
        if (v18 & 1 | ((v86 & 1) == 0))
        {
          *(_WORD *)(a1 + 116) |= 0x200u;
          *(_WORD *)(a1 + 116) |= 0x40u;
          *(_WORD *)(a1 + 116) |= 0x20u;
          *(_WORD *)(a1 + 116) |= 0x100u;
          *(_WORD *)(a1 + 116) |= 0x80u;
          *(_WORD *)(a1 + 116) |= 8u;
          *(_WORD *)(a1 + 116) |= 0x10u;
        }
        else if (v20)
        {
          while (1)
          {
            int v80 = *v20++;
            __int16 v81 = 512;
            switch(v80)
            {
              case 0:
                goto LABEL_162;
              case 1:
                goto LABEL_161;
              case 2:
                __int16 v81 = 64;
                goto LABEL_161;
              case 3:
                __int16 v81 = 32;
                goto LABEL_161;
              case 5:
                __int16 v81 = 256;
                goto LABEL_161;
              case 6:
                __int16 v81 = 128;
                goto LABEL_161;
              case 8:
                __int16 v81 = 8;
                goto LABEL_161;
              case 9:
                __int16 v81 = 16;
LABEL_161:
                *(_WORD *)(a1 + 116) |= v81;
                break;
              default:
                continue;
            }
          }
        }
LABEL_162:
        if (v86)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_166:
          int v82 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_166;
          }
        }
        return v3;
      default:
        if ((v84 & 1) == 0 || (*(_WORD *)(a1 + 116) & 4) != 0)
        {
LABEL_108:
          char v71 = PBReaderSkipValueWithTag();
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
          unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v85;
          char v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v71 & 1) == 0)
          {
            int v86 = 0;
            goto LABEL_148;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v44 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v43;
          }
          int v45 = PBUnknownFieldAdd();
          char v18 = v85;
          char v6 = (int *)MEMORY[0x1E4F940E0];
          unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v45)
          {
            int v86 = 0;
            goto LABEL_150;
          }
        }
        goto LABEL_134;
    }
  }
}

void sub_1895B0F6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895B1100(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895B1258(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895B1AA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895B1BA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSSearchFilterCallReadAllRecursiveWithoutSynchronized(void *a1)
{
  -[GEOPDPoiIconCategoryFilter readAll:](a1[10], 1);
  -[GEOPDSImplicitQueryCategoryFilter readAll:](a1[9], 1);
  uint64_t v2 = a1[6];

  -[GEOPDAddressResultSubTypeFilter readAll:](v2, 1);
}

unint64_t GEOPDSSearchFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSSearchFilterReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSSearchFilterReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSSearchFilterReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSSearchFilterReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSSearchFilterCallReadAllRecursiveWithoutSynchronized((void *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_1895B2DBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchFilterIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_304:
    BOOL v142 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v142;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_304;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v13 = v7++ >= 9;
      if (v13)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4) {
      goto LABEL_304;
    }
    switch((v8 >> 3))
    {
      case 1u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_308;
        }
        [a1 position];
        [a1 length];
LABEL_22:
        while (2)
        {
          if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v17 = 0;
            unsigned int v18 = 0;
            unint64_t v19 = 0;
            while (1)
            {
              uint64_t v20 = *v2;
              uint64_t v21 = *(void *)&a1[v20];
              unint64_t v22 = v21 + 1;
              if (v21 == -1 || v22 > *(void *)&a1[*v3]) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)&a1[*v5] + v21);
              *(void *)&a1[v20] = v22;
              v19 |= (unint64_t)(v23 & 0x7F) << v17;
              if ((v23 & 0x80) == 0) {
                goto LABEL_32;
              }
              v17 += 7;
              BOOL v13 = v18++ >= 9;
              if (v13)
              {
                unint64_t v19 = 0;
                int v24 = a1[*v4];
                goto LABEL_34;
              }
            }
            a1[*v4] = 1;
LABEL_32:
            int v24 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v19 = 0;
            }
LABEL_34:
            int v25 = v19 & 7;
            if (!v24 && v25 != 4)
            {
              if ((v19 >> 3) == 2)
              {
                if ((v19 & 7) == 0)
                {
                  unsigned int v27 = 0;
                  do
                  {
                    uint64_t v28 = *v2;
                    uint64_t v29 = *(void *)&a1[v28];
                    unint64_t v30 = v29 + 1;
                    if (v29 == -1 || v30 > *(void *)&a1[*v3])
                    {
                      a1[*v4] = 1;
                      goto LABEL_22;
                    }
                    int v31 = *(char *)(*(void *)&a1[*v5] + v29);
                    *(void *)&a1[v28] = v30;
                    if ((v31 & 0x80000000) == 0) {
                      break;
                    }
                    BOOL v32 = v27++ > 8;
                  }
                  while (!v32);
                  continue;
                }
              }
              else
              {
                if ((v19 >> 3) != 1)
                {
                  if ((PBReaderSkipValueWithTag() & 1) == 0) {
                    goto LABEL_307;
                  }
                  continue;
                }
                if (v25 == 2 && PBReaderPlaceMark() && GEOPDVenueIdentifierIsValid(a1))
                {
                  PBReaderRecallMark();
                  continue;
                }
              }
              goto LABEL_307;
            }
          }
          break;
        }
        int v135 = a1[*v4];
        PBReaderRecallMark();
        if (v135) {
          goto LABEL_308;
        }
        goto LABEL_291;
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_308;
        }
        [a1 position];
        [a1 length];
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v33 = 0;
          unsigned int v34 = 0;
          unint64_t v35 = 0;
          while (1)
          {
            uint64_t v36 = *v2;
            uint64_t v37 = *(void *)&a1[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&a1[*v3]) {
              break;
            }
            char v39 = *(unsigned char *)(*(void *)&a1[*v5] + v37);
            *(void *)&a1[v36] = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if ((v39 & 0x80) == 0) {
              goto LABEL_70;
            }
            v33 += 7;
            BOOL v13 = v34++ >= 9;
            if (v13)
            {
              unint64_t v35 = 0;
              int v40 = a1[*v4];
              goto LABEL_72;
            }
          }
          a1[*v4] = 1;
LABEL_70:
          int v40 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v35 = 0;
          }
LABEL_72:
          int v41 = v35 & 7;
          if (v40 || v41 == 4) {
            break;
          }
          if ((v35 >> 3) != 1)
          {
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_307;
            }
            continue;
          }
          if (v41 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_307;
          }
        }
        goto LABEL_113;
      case 3u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_308;
        }
        [a1 position];
        [a1 length];
LABEL_85:
        if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
          goto LABEL_113;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        unint64_t v45 = 0;
        while (1)
        {
          uint64_t v46 = *v2;
          uint64_t v47 = *(void *)&a1[v46];
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)&a1[*v3]) {
            break;
          }
          char v49 = *(unsigned char *)(*(void *)&a1[*v5] + v47);
          *(void *)&a1[v46] = v48;
          v45 |= (unint64_t)(v49 & 0x7F) << v43;
          if ((v49 & 0x80) == 0) {
            goto LABEL_95;
          }
          v43 += 7;
          BOOL v13 = v44++ >= 9;
          if (v13)
          {
            unint64_t v45 = 0;
            int v50 = a1[*v4];
            goto LABEL_97;
          }
        }
        a1[*v4] = 1;
LABEL_95:
        int v50 = a1[*v4];
        if (a1[*v4]) {
          unint64_t v45 = 0;
        }
LABEL_97:
        if (v50 || (v45 & 7) == 4)
        {
LABEL_113:
          int v57 = a1[*v4];
          PBReaderRecallMark();
          if (v57) {
            goto LABEL_308;
          }
LABEL_291:
          PBReaderRecallMark();
LABEL_292:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_304;
          }
          continue;
        }
        if ((v45 >> 3) != 1)
        {
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_307;
          }
          goto LABEL_85;
        }
        if ((v45 & 7) == 0)
        {
          unsigned int v52 = 0;
          do
          {
            uint64_t v53 = *v2;
            uint64_t v54 = *(void *)&a1[v53];
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_85;
            }
            int v56 = *(char *)(*(void *)&a1[*v5] + v54);
            *(void *)&a1[v53] = v55;
            if ((v56 & 0x80000000) == 0) {
              break;
            }
            BOOL v32 = v52++ > 8;
          }
          while (!v32);
          goto LABEL_85;
        }
LABEL_307:
        PBReaderRecallMark();
LABEL_308:
        PBReaderRecallMark();
        return 0;
      case 4u:
        if ((v8 & 7) != 0) {
          goto LABEL_308;
        }
        unsigned int v58 = 0;
        while (1)
        {
          uint64_t v59 = *v2;
          uint64_t v60 = *(void *)&a1[v59];
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
            goto LABEL_283;
          }
          int v62 = *(char *)(*(void *)&a1[*v5] + v60);
          *(void *)&a1[v59] = v61;
          if (v62 < 0)
          {
            BOOL v32 = v58++ > 8;
            if (!v32) {
              continue;
            }
          }
          goto LABEL_292;
        }
      case 5u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAddressResultSubTypeFilterIsValid(a1)) {
          goto LABEL_308;
        }
        goto LABEL_291;
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_308;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_130:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_290;
            }
            char v63 = 0;
            unsigned int v64 = 0;
            unint64_t v65 = 0;
            while (2)
            {
              uint64_t v66 = *v2;
              uint64_t v67 = *(void *)&a1[v66];
              unint64_t v68 = v67 + 1;
              if (v67 == -1 || v68 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v69 = *(unsigned char *)(*(void *)&a1[*v5] + v67);
                *(void *)&a1[v66] = v68;
                v65 |= (unint64_t)(v69 & 0x7F) << v63;
                if (v69 < 0)
                {
                  v63 += 7;
                  BOOL v13 = v64++ >= 9;
                  if (v13)
                  {
                    unint64_t v65 = 0;
                    int v70 = a1[*v4];
                    goto LABEL_142;
                  }
                  continue;
                }
              }
              break;
            }
            int v70 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v65 = 0;
            }
LABEL_142:
            int v71 = v65 & 7;
            if (v70) {
              BOOL v72 = 1;
            }
            else {
              BOOL v72 = v71 == 4;
            }
            if (v72)
            {
LABEL_290:
              int v136 = a1[*v4];
              PBReaderRecallMark();
              if (v136) {
                goto LABEL_308;
              }
              goto LABEL_291;
            }
            switch((v65 >> 3))
            {
              case 1u:
                if ((v65 & 7) != 0) {
                  goto LABEL_307;
                }
                unsigned int v73 = 0;
                do
                {
                  uint64_t v74 = *v2;
                  uint64_t v75 = *(void *)&a1[v74];
                  unint64_t v76 = v75 + 1;
                  if (v75 == -1 || v76 > *(void *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_130;
                  }
                  int v77 = *(char *)(*(void *)&a1[*v5] + v75);
                  *(void *)&a1[v74] = v76;
                  if ((v77 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v32 = v73++ > 8;
                }
                while (!v32);
                continue;
              case 2u:
                if (v71 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_307;
                }
                [a1 position];
                [a1 length];
LABEL_160:
                while (2)
                {
                  if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
                  {
                    char v78 = 0;
                    unsigned int v79 = 0;
                    unint64_t v80 = 0;
                    while (1)
                    {
                      uint64_t v81 = *v2;
                      uint64_t v82 = *(void *)&a1[v81];
                      unint64_t v83 = v82 + 1;
                      if (v82 == -1 || v83 > *(void *)&a1[*v3]) {
                        break;
                      }
                      char v84 = *(unsigned char *)(*(void *)&a1[*v5] + v82);
                      *(void *)&a1[v81] = v83;
                      v80 |= (unint64_t)(v84 & 0x7F) << v78;
                      if ((v84 & 0x80) == 0) {
                        goto LABEL_170;
                      }
                      v78 += 7;
                      BOOL v13 = v79++ >= 9;
                      if (v13)
                      {
                        unint64_t v80 = 0;
                        int v85 = a1[*v4];
                        goto LABEL_172;
                      }
                    }
                    a1[*v4] = 1;
LABEL_170:
                    int v85 = a1[*v4];
                    if (a1[*v4]) {
                      unint64_t v80 = 0;
                    }
LABEL_172:
                    if (!v85 && (v80 & 7) != 4)
                    {
                      if ((v80 >> 3) != 1)
                      {
                        if (!PBReaderSkipValueWithTag()) {
                          goto LABEL_306;
                        }
                        continue;
                      }
                      if ((v80 & 7) == 0)
                      {
                        unsigned int v87 = 0;
                        do
                        {
                          uint64_t v88 = *v2;
                          uint64_t v89 = *(void *)&a1[v88];
                          unint64_t v90 = v89 + 1;
                          if (v89 == -1 || v90 > *(void *)&a1[*v3])
                          {
                            a1[*v4] = 1;
                            goto LABEL_160;
                          }
                          int v91 = *(char *)(*(void *)&a1[*v5] + v89);
                          *(void *)&a1[v88] = v90;
                          if ((v91 & 0x80000000) == 0) {
                            break;
                          }
                          BOOL v32 = v87++ > 8;
                        }
                        while (!v32);
                        continue;
                      }
LABEL_306:
                      PBReaderRecallMark();
                      goto LABEL_307;
                    }
                  }
                  break;
                }
                int v124 = a1[*v4];
                PBReaderRecallMark();
                if (v124) {
                  goto LABEL_307;
                }
                break;
              case 3u:
                if (v71 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_307;
                }
                [a1 position];
                [a1 length];
LABEL_191:
                while (2)
                {
                  if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
                    goto LABEL_263;
                  }
                  char v92 = 0;
                  unsigned int v93 = 0;
                  unint64_t v94 = 0;
                  while (1)
                  {
                    uint64_t v95 = *v2;
                    uint64_t v96 = *(void *)&a1[v95];
                    unint64_t v97 = v96 + 1;
                    if (v96 == -1 || v97 > *(void *)&a1[*v3]) {
                      break;
                    }
                    char v98 = *(unsigned char *)(*(void *)&a1[*v5] + v96);
                    *(void *)&a1[v95] = v97;
                    v94 |= (unint64_t)(v98 & 0x7F) << v92;
                    if ((v98 & 0x80) == 0) {
                      goto LABEL_201;
                    }
                    v92 += 7;
                    BOOL v13 = v93++ >= 9;
                    if (v13)
                    {
                      unint64_t v94 = 0;
                      int v99 = a1[*v4];
                      goto LABEL_203;
                    }
                  }
                  a1[*v4] = 1;
LABEL_201:
                  int v99 = a1[*v4];
                  if (a1[*v4]) {
                    unint64_t v94 = 0;
                  }
LABEL_203:
                  int v100 = v94 & 7;
                  if (v99 || v100 == 4) {
                    goto LABEL_263;
                  }
                  unint64_t v102 = v94 >> 3;
                  if ((v94 >> 3) == 3)
                  {
                    if ((v94 & 7) == 0)
                    {
                      unsigned int v103 = 0;
                      do
                      {
                        uint64_t v104 = *v2;
                        uint64_t v105 = *(void *)&a1[v104];
                        unint64_t v106 = v105 + 1;
                        if (v105 == -1 || v106 > *(void *)&a1[*v3])
                        {
                          a1[*v4] = 1;
                          goto LABEL_191;
                        }
                        int v107 = *(char *)(*(void *)&a1[*v5] + v105);
                        *(void *)&a1[v104] = v106;
                        if ((v107 & 0x80000000) == 0) {
                          break;
                        }
                        BOOL v32 = v103++ > 8;
                      }
                      while (!v32);
                      continue;
                    }
                  }
                  else
                  {
                    if (v102 != 2)
                    {
                      if (v102 == 1 && v100 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
                        goto LABEL_306;
                      }
                      continue;
                    }
                    if (v100 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1))
                    {
                      PBReaderRecallMark();
                      continue;
                    }
                  }
                  goto LABEL_306;
                }
              case 4u:
                if (v71 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_307;
                }
                [a1 position];
                [a1 length];
LABEL_230:
                while (2)
                {
                  if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
                  {
                    char v108 = 0;
                    unsigned int v109 = 0;
                    unint64_t v110 = 0;
                    while (1)
                    {
                      uint64_t v111 = *v2;
                      uint64_t v112 = *(void *)&a1[v111];
                      unint64_t v113 = v112 + 1;
                      if (v112 == -1 || v113 > *(void *)&a1[*v3]) {
                        break;
                      }
                      char v114 = *(unsigned char *)(*(void *)&a1[*v5] + v112);
                      *(void *)&a1[v111] = v113;
                      v110 |= (unint64_t)(v114 & 0x7F) << v108;
                      if ((v114 & 0x80) == 0) {
                        goto LABEL_240;
                      }
                      v108 += 7;
                      BOOL v13 = v109++ >= 9;
                      if (v13)
                      {
                        unint64_t v110 = 0;
                        int v115 = a1[*v4];
                        goto LABEL_242;
                      }
                    }
                    a1[*v4] = 1;
LABEL_240:
                    int v115 = a1[*v4];
                    if (a1[*v4]) {
                      unint64_t v110 = 0;
                    }
LABEL_242:
                    int v116 = v110 & 7;
                    if (!v115 && v116 != 4)
                    {
                      if ((v110 >> 3) == 2)
                      {
                        if ((v110 & 7) == 0)
                        {
                          unsigned int v118 = 0;
                          do
                          {
                            uint64_t v119 = *v2;
                            uint64_t v120 = *(void *)&a1[v119];
                            unint64_t v121 = v120 + 1;
                            if (v120 == -1 || v121 > *(void *)&a1[*v3])
                            {
                              a1[*v4] = 1;
                              goto LABEL_230;
                            }
                            int v122 = *(char *)(*(void *)&a1[*v5] + v120);
                            *(void *)&a1[v119] = v121;
                            if ((v122 & 0x80000000) == 0) {
                              break;
                            }
                            BOOL v32 = v118++ > 8;
                          }
                          while (!v32);
                          continue;
                        }
                      }
                      else
                      {
                        if ((v110 >> 3) != 1)
                        {
                          if ((PBReaderSkipValueWithTag() & 1) == 0) {
                            goto LABEL_306;
                          }
                          continue;
                        }
                        if (v116 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1))
                        {
                          PBReaderRecallMark();
                          continue;
                        }
                      }
                      goto LABEL_306;
                    }
                  }
                  break;
                }
LABEL_263:
                int v123 = a1[*v4];
                PBReaderRecallMark();
                if (v123) {
                  goto LABEL_307;
                }
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_307;
                }
                continue;
            }
            break;
          }
          PBReaderRecallMark();
          continue;
        }
      case 7u:
        if ((v8 & 7) != 0) {
          goto LABEL_308;
        }
        unsigned int v125 = 0;
        while (1)
        {
          uint64_t v126 = *v2;
          uint64_t v127 = *(void *)&a1[v126];
          unint64_t v128 = v127 + 1;
          if (v127 == -1 || v128 > *(void *)&a1[*v3]) {
            goto LABEL_283;
          }
          int v129 = *(char *)(*(void *)&a1[*v5] + v127);
          *(void *)&a1[v126] = v128;
          if (v129 < 0)
          {
            BOOL v32 = v125++ > 8;
            if (!v32) {
              continue;
            }
          }
          goto LABEL_292;
        }
      case 8u:
        if (v15 != 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_308;
          }
          while (1)
          {
            uint64_t v130 = *v2;
            uint64_t v131 = *(void *)&a1[v130];
            unint64_t v132 = v131 + 1;
            if (v131 == -1 || v132 > *(void *)&a1[*v3]) {
              break;
            }
            int v133 = *(char *)(*(void *)&a1[*v5] + v131);
            *(void *)&a1[v130] = v132;
            if (v133 < 0)
            {
              unsigned int v134 = v15++;
              if (v134 <= 8) {
                continue;
              }
            }
            goto LABEL_292;
          }
LABEL_283:
          a1[*v4] = 1;
          goto LABEL_292;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_308;
        }
LABEL_295:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v137 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v138 = *v2;
            uint64_t v139 = *(void *)&a1[v138];
            unint64_t v140 = v139 + 1;
            if (v139 == -1 || v140 > *(void *)&a1[*v3]) {
              break;
            }
            int v141 = *(char *)(*(void *)&a1[*v5] + v139);
            *(void *)&a1[v138] = v140;
            if (v141 < 0)
            {
              BOOL v13 = v137++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_295;
          }
          a1[*v4] = 1;
        }
        goto LABEL_291;
      case 9u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOPDAddressResultSubTypeFilterIsValid(a1)) {
          goto LABEL_291;
        }
        goto LABEL_308;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_308;
        }
        goto LABEL_292;
    }
  }
}

void sub_1895B3FA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDSSearchFilterIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  __int16 v2 = *(_WORD *)(a1 + 116);
  if ((v2 & 0x660) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 116) & 0x100) != 0)
  {
    if (GEOPDPoiIconCategoryFilterIsDirty(*(void *)(a1 + 80))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 116);
  }
  if ((v2 & 0x80) == 0) {
    goto LABEL_9;
  }
  if (GEOPDSImplicitQueryCategoryFilterIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
    return 1;
  }
  __int16 v2 = *(_WORD *)(a1 + 116);
LABEL_9:
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 48);

  return GEOPDAddressResultSubTypeFilterIsDirty(v4);
}

os_unfair_lock_s *GEOPDSSearchFilterIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOPDSSearchFilterIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1895B4380(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchLocationParametersReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          int v25 = objc_alloc_init(GEOPDSTransportHint);
          if (!GEOPDSTransportHintReadAllFrom((uint64_t)v25, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          unint64_t v26 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_36;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v28 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v27;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_1895B5844(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchLocationParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark())
        {
LABEL_67:
          PBReaderRecallMark();
          return 0;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_31:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v23 = 0;
          unsigned int v24 = 0;
          unint64_t v25 = 0;
          while (1)
          {
            uint64_t v26 = *v2;
            uint64_t v27 = *(void *)&a1[v26];
            unint64_t v28 = v27 + 1;
            if (v27 == -1 || v28 > *(void *)&a1[*v3]) {
              break;
            }
            char v29 = *(unsigned char *)(*(void *)&a1[*v5] + v27);
            *(void *)&a1[v26] = v28;
            v25 |= (unint64_t)(v29 & 0x7F) << v23;
            if ((v29 & 0x80) == 0) {
              goto LABEL_41;
            }
            v23 += 7;
            BOOL v13 = v24++ >= 9;
            if (v13)
            {
              unint64_t v25 = 0;
              int v30 = a1[*v4];
              goto LABEL_43;
            }
          }
          a1[*v4] = 1;
LABEL_41:
          int v30 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v25 = 0;
          }
LABEL_43:
          if (v30 || (v25 & 7) == 4) {
            break;
          }
          if ((v25 >> 3) == 1)
          {
            if ((v25 & 7) != 0) {
              goto LABEL_66;
            }
            unsigned int v32 = 0;
            while (1)
            {
              uint64_t v33 = *v2;
              uint64_t v34 = *(void *)&a1[v33];
              unint64_t v35 = v34 + 1;
              if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
                break;
              }
              int v36 = *(char *)(*(void *)&a1[*v5] + v34);
              *(void *)&a1[v33] = v35;
              if (v36 < 0)
              {
                BOOL v22 = v32++ > 8;
                if (!v22) {
                  continue;
                }
              }
              goto LABEL_31;
            }
            a1[*v4] = 1;
          }
          else if (!PBReaderSkipValueWithTag())
          {
LABEL_66:
            PBReaderRecallMark();
            goto LABEL_67;
          }
        }
        int v37 = a1[*v4];
        PBReaderRecallMark();
        if (v37) {
          goto LABEL_67;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_67;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_64;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_67;
      }
LABEL_64:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOPDSSearchRedoButtonThresholdReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 44) |= 8u;
            break;
          case 2u:
            *(unsigned char *)(a1 + 44) |= 4u;
            uint64_t v27 = *v4;
            unint64_t v28 = *(void *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v29 = *(void *)(*(void *)&v3[*v7] + v28);
              *(void *)&v3[v27] = v28 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v29 = 0;
            }
            uint64_t v34 = 32;
            goto LABEL_50;
          case 3u:
            *(unsigned char *)(a1 + 44) |= 2u;
            uint64_t v30 = *v4;
            unint64_t v31 = *(void *)&v3[v30];
            if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v29 = *(void *)(*(void *)&v3[*v7] + v31);
              *(void *)&v3[v30] = v31 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v29 = 0;
            }
            uint64_t v34 = 24;
            goto LABEL_50;
          case 4u:
            *(unsigned char *)(a1 + 44) |= 1u;
            uint64_t v32 = *v4;
            unint64_t v33 = *(void *)&v3[v32];
            if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v29 = *(void *)(*(void *)&v3[*v7] + v33);
              *(void *)&v3[v32] = v33 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v29 = 0;
            }
            uint64_t v34 = 16;
LABEL_50:
            *(void *)(a1 + v34) = v29;
            continue;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              uint64_t v26 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v25;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_53;
            }
            continue;
        }
        while (1)
        {
          uint64_t v21 = *v4;
          uint64_t v22 = *(void *)&v3[v21];
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
          *(void *)&v3[v21] = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_41;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_43;
          }
        }
        v3[*v6] = 1;
LABEL_41:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_43:
        *(_DWORD *)(a1 + 40) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_53:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1895B6A34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchRedoButtonThresholdIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_38;
          }
          unsigned int v21 = 0;
          do
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3])
            {
              uint64_t v14 = *v4;
              goto LABEL_34;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if ((v25 & 0x80000000) == 0) {
              break;
            }
          }
          while (v21++ <= 8);
          goto LABEL_35;
        case 2u:
        case 3u:
        case 4u:
          if (v16 != 1) {
            goto LABEL_38;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7 || (unint64_t v20 = v19 + 8, v20 > *(void *)&a1[*v3])) {
LABEL_34:
          }
            a1[v14] = 1;
          else {
            *(void *)&a1[v18] = v20;
          }
          goto LABEL_35;
        default:
          if (!PBReaderSkipValueWithTag())
          {
LABEL_38:
            BOOL v27 = 0;
            goto LABEL_37;
          }
LABEL_35:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_36;
          }
          break;
      }
    }
  }
LABEL_36:
  BOOL v27 = a1[*v4] == 0;
LABEL_37:
  PBReaderRecallMark();
  return v27;
}

void sub_1895B73E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSSearchResultSectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 84)), (uint16x4_t)0xFFF9FFFAFFFCFFFDLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 84) >> 5) & 1)+ ((*(_WORD *)(a1 + 84) >> 2) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v69 = v17;
        char v70 = v18 | v17;
        char v68 = v8;
        if ((v18 | v8)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        char v71 = (v19 == 0) | v18;
        BOOL v72 = v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_104;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_104:
      int v66 = 1;
      goto LABEL_105;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v72;
    if ((v71 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_82;
        }
        if ((*(_WORD *)(a1 + 84) & 0x10) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 32;
          goto LABEL_80;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_124;
        }
        __int16 v61 = *(_WORD *)(a1 + 84) << 11;
        goto LABEL_101;
      case 2:
        if (!v34 || (*(_WORD *)(a1 + 84) & 8) != 0) {
          goto LABEL_82;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_124;
        }
        unsigned int v44 = objc_alloc_init(GEOPDResolvedItem);
        if (!GEOPDResolvedItemReadAllFrom((uint64_t)v44, (void *)v3)) {
          goto LABEL_123;
        }
        PBReaderRecallMark();
        -[GEOPDSSearchResultSection _addNoFlagsResolvedItem:](a1, v44);

        goto LABEL_102;
      case 3:
        if ((v68 & 1) == 0) {
          goto LABEL_82;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(_WORD *)(a1 + 84) |= 2u;
        while (2)
        {
          uint64_t v48 = *v20;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v30 = v46++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_87:
        uint64_t v60 = 80;
        goto LABEL_92;
      case 4:
        if (!v34) {
          goto LABEL_82;
        }
        if ((*(_WORD *)(a1 + 84) & 0x40) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 48;
          goto LABEL_80;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_124;
        }
        __int16 v61 = *(_WORD *)(a1 + 84) << 9;
        goto LABEL_101;
      case 5:
        if ((v68 & 1) == 0) {
          goto LABEL_82;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v47 = 0;
        *(_WORD *)(a1 + 84) |= 1u;
        while (2)
        {
          uint64_t v54 = *v20;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v22) + v55);
            *(void *)(v3 + v54) = v56;
            v47 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v30 = v53++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_91:
        uint64_t v60 = 76;
LABEL_92:
        *(_DWORD *)(a1 + v60) = v47;
        goto LABEL_103;
      case 6:
        if (!v34) {
          goto LABEL_82;
        }
        if ((*(_WORD *)(a1 + 84) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_124;
          }
          __int16 v61 = *(_WORD *)(a1 + 84) << 8;
LABEL_101:
          v7 += v61 >> 15;
          goto LABEL_102;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_124;
        }
        unsigned int v44 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v44, (void *)v3))
        {
          PBReaderRecallMark();
          unsigned int v58 = *(void **)(a1 + 56);
          *(void *)(a1 + 56) = v44;
LABEL_81:

          --v7;
LABEL_102:
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_103;
        }
LABEL_123:

LABEL_124:
        int v66 = 0;
        uint64_t v67 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_106:
        if (v69) {
LABEL_107:
        }
          *(_WORD *)(a1 + v67[891]) |= 4u;
        if (v72 || (v66 & 1) == 0)
        {
          *(_WORD *)(a1 + v67[891]) |= 0x10u;
          *(_WORD *)(a1 + v67[891]) |= 8u;
          *(_WORD *)(a1 + v67[891]) |= 0x40u;
          *(_WORD *)(a1 + v67[891]) |= 0x80u;
          *(_WORD *)(a1 + v67[891]) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            int v62 = *v19++;
            __int16 v63 = 16;
            switch(v62)
            {
              case 0:
                goto LABEL_117;
              case 1:
                goto LABEL_116;
              case 2:
                __int16 v63 = 8;
                goto LABEL_116;
              case 4:
                __int16 v63 = 64;
                goto LABEL_116;
              case 6:
                __int16 v63 = 128;
                goto LABEL_116;
              case 7:
                __int16 v63 = 32;
LABEL_116:
                *(_WORD *)(a1 + v67[891]) |= v63;
                break;
              default:
                continue;
            }
          }
        }
LABEL_117:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v72)
        {
          unsigned int v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 7:
        if (!v34) {
          goto LABEL_82;
        }
        if ((*(_WORD *)(a1 + 84) & 0x20) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 40;
LABEL_80:
          unsigned int v58 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
          goto LABEL_81;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_124;
        }
        __int16 v61 = *(_WORD *)(a1 + 84) << 10;
        goto LABEL_101;
      default:
        if ((v69 & 1) == 0 || (*(_WORD *)(a1 + 84) & 4) != 0)
        {
LABEL_82:
          char v59 = PBReaderSkipValueWithTag();
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v59 & 1) == 0)
          {
            int v66 = 0;
LABEL_105:
            uint64_t v67 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_106;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v66 = 0;
            uint64_t v67 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_107;
          }
        }
LABEL_103:
        if (!(v70 & 1 | (v7 != 0))) {
          goto LABEL_104;
        }
        continue;
    }
  }
}

void sub_1895B7DFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895B7F4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895B80D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895B8700(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895B87F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSSearchResultSectionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    while (1)
    {
      if (*(void *)v8 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  return objc_msgSend(*(id *)(a1 + 56), "readAll:", 1, v7);
}

unint64_t GEOPDSSearchResultSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSSearchResultSectionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDSSearchResultSectionReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDSSearchResultSectionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSSearchResultSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSSearchResultSectionCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1895B9204(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchResultSectionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_52;
          }
          goto LABEL_49;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchRelatedCategoryIsValid(a1)) {
            goto LABEL_52;
          }
          goto LABEL_47;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_43;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 4u:
          if (v15 == 2) {
            goto LABEL_49;
          }
          goto LABEL_52;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          unsigned int v23 = 0;
          break;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
            goto LABEL_52;
          }
LABEL_47:
          PBReaderRecallMark();
          continue;
        case 7u:
          if (v15 == 2) {
            goto LABEL_49;
          }
          goto LABEL_52;
        default:
LABEL_49:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_52:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_43:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_1895B97F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchResultSectionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(_WORD *)(a1 + 84) & 0x1F8) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_1895B9B78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchSessionDataReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1895BA4C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchSessionDataIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      uint64_t v11 = *(void *)&a1[v10];
      unint64_t v12 = v11 + 1;
      if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v9 & 7) == 4;
    }
    if (v15) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v16 = 0;
      goto LABEL_22;
    }
  }
  BOOL v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

BOOL GEOPDSSearchStructureIntentRequestTypeReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              unint64_t v26 = &OBJC_IVAR___GEOPDSSearchStructureIntentRequestType__structureType;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              unint64_t v26 = &OBJC_IVAR___GEOPDSSearchStructureIntentRequestType__structureType;
              goto LABEL_44;
            }
          }
          unint64_t v26 = &OBJC_IVAR___GEOPDSSearchStructureIntentRequestType__structureType;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          BOOL v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 1u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          unint64_t v26 = &OBJC_IVAR___GEOPDSSearchStructureIntentRequestType__intentType;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          unint64_t v26 = &OBJC_IVAR___GEOPDSSearchStructureIntentRequestType__intentType;
          goto LABEL_44;
        }
      }
      unint64_t v26 = &OBJC_IVAR___GEOPDSSearchStructureIntentRequestType__intentType;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1895BB030(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchTierMetadataReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_59;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_59;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              char v27 = &OBJC_IVAR___GEOPDSSearchTierMetadata__endIndex;
              goto LABEL_51;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              char v27 = &OBJC_IVAR___GEOPDSSearchTierMetadata__endIndex;
              goto LABEL_53;
            }
          }
          char v27 = &OBJC_IVAR___GEOPDSSearchTierMetadata__endIndex;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if (v18 == 2) {
          break;
        }
        if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 4u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              char v27 = &OBJC_IVAR___GEOPDSSearchTierMetadata__tierType;
              goto LABEL_50;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              char v27 = &OBJC_IVAR___GEOPDSSearchTierMetadata__tierType;
              goto LABEL_53;
            }
          }
          char v27 = &OBJC_IVAR___GEOPDSSearchTierMetadata__tierType;
          goto LABEL_51;
        }
        if (!*(void *)(a1 + 8))
        {
          id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          id v41 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v40;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_60;
        }
LABEL_54:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_59;
        }
      }
      char v34 = 0;
      unsigned int v35 = 0;
      uint64_t v21 = 0;
      *(unsigned char *)(a1 + 28) |= 2u;
      while (1)
      {
        uint64_t v36 = *v4;
        uint64_t v37 = *(void *)&v3[v36];
        unint64_t v38 = v37 + 1;
        if (v37 == -1 || v38 > *(void *)&v3[*v5])
        {
          char v27 = &OBJC_IVAR___GEOPDSSearchTierMetadata__startIndex;
          goto LABEL_50;
        }
        char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
        *(void *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0) {
          break;
        }
        v34 += 7;
        BOOL v26 = v35++ > 8;
        if (v26)
        {
          LODWORD(v21) = 0;
          char v27 = &OBJC_IVAR___GEOPDSSearchTierMetadata__startIndex;
          goto LABEL_53;
        }
      }
      char v27 = &OBJC_IVAR___GEOPDSSearchTierMetadata__startIndex;
LABEL_51:
      if (v3[*v6]) {
        LODWORD(v21) = 0;
      }
LABEL_53:
      *(_DWORD *)(a1 + *v27) = v21;
      goto LABEL_54;
    }
LABEL_59:
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_1895BBD2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchTierMetadataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOPDSSearchVenueFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v25 = *v6;
            uint64_t v26 = *(void *)&v5[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&v5[*v7]) {
              break;
            }
            char v28 = *(unsigned char *)(*(void *)&v5[*v9] + v26);
            *(void *)&v5[v25] = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if ((v28 & 0x80) == 0) {
              goto LABEL_36;
            }
            v22 += 7;
            BOOL v17 = v23++ >= 9;
            if (v17)
            {
              LODWORD(v24) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            LODWORD(v24) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v24;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          unint64_t v20 = objc_alloc_init(GEOPDVenueIdentifier);
          if (!GEOPDVenueIdentifierReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          int v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v29 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v30 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v29;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_1895BC9D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSessionUserActionMetadataReadAllFrom(void *a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          int v18 = objc_alloc_init(GEOPDSUserActionMetadataElement);
          if (!GEOPDSUserActionMetadataElementReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addUserActionMetadataElement:", v18, 0, 0);
        }
        else
        {
          if (!a1[1])
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v20 = (void *)a1[1];
            a1[1] = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1895BD5C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSessionUserActionMetadataReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDSSessionUserActionMetadataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1895BD628(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSessionUserActionMetadataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]]) {
    goto LABEL_64;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  do
  {
    if (a1[*v4]) {
      break;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v13 = v7++ >= 9;
      if (v13)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14) {
      BOOL v16 = 1;
    }
    else {
      BOOL v16 = v15 == 4;
    }
    if (v16) {
      break;
    }
    if ((v8 >> 3) != 1)
    {
      if (PBReaderSkipValueWithTag()) {
        continue;
      }
LABEL_66:
      PBReaderRecallMark();
      return 0;
    }
    if (v15 != 2 || !PBReaderPlaceMark()) {
      goto LABEL_66;
    }
    objc_msgSend(a1, "position", 0, 0);
    [a1 length];
LABEL_22:
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
    {
      char v17 = 0;
      unsigned int v18 = 0;
      unint64_t v19 = 0;
      while (1)
      {
        uint64_t v20 = *v2;
        uint64_t v21 = *(void *)&a1[v20];
        unint64_t v22 = v21 + 1;
        if (v21 == -1 || v22 > *(void *)&a1[*v3]) {
          break;
        }
        char v23 = *(unsigned char *)(*(void *)&a1[*v5] + v21);
        *(void *)&a1[v20] = v22;
        v19 |= (unint64_t)(v23 & 0x7F) << v17;
        if ((v23 & 0x80) == 0) {
          goto LABEL_32;
        }
        v17 += 7;
        BOOL v13 = v18++ >= 9;
        if (v13)
        {
          unint64_t v19 = 0;
          int v24 = a1[*v4];
          goto LABEL_34;
        }
      }
      a1[*v4] = 1;
LABEL_32:
      int v24 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v19 = 0;
      }
LABEL_34:
      if (v24 || (v19 & 7) == 4) {
        break;
      }
      if ((v19 >> 3) == 2)
      {
        if ((v19 & 7) != 0) {
          goto LABEL_65;
        }
        unsigned int v32 = 0;
        while (1)
        {
          uint64_t v33 = *v2;
          uint64_t v34 = *(void *)&a1[v33];
          unint64_t v35 = v34 + 1;
          if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
            break;
          }
          int v36 = *(char *)(*(void *)&a1[*v5] + v34);
          *(void *)&a1[v33] = v35;
          if (v36 < 0)
          {
            BOOL v31 = v32++ > 8;
            if (!v31) {
              continue;
            }
          }
          goto LABEL_22;
        }
LABEL_56:
        a1[*v4] = 1;
      }
      else
      {
        if ((v19 >> 3) == 1)
        {
          if ((v19 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v26 = 0;
          while (1)
          {
            uint64_t v27 = *v2;
            uint64_t v28 = *(void *)&a1[v27];
            unint64_t v29 = v28 + 1;
            if (v28 == -1 || v29 > *(void *)&a1[*v3]) {
              goto LABEL_56;
            }
            int v30 = *(char *)(*(void *)&a1[*v5] + v28);
            *(void *)&a1[v27] = v29;
            if (v30 < 0)
            {
              BOOL v31 = v26++ > 8;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_22;
          }
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_65:
          PBReaderRecallMark();
          goto LABEL_66;
        }
      }
    }
    int v37 = a1[*v4];
    PBReaderRecallMark();
    if (v37) {
      goto LABEL_66;
    }
    PBReaderRecallMark();
  }
  while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
LABEL_64:
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOPDSTransportHintReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1895BE644(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

#error "1895C74CC: too complex function (funcsize=10951)"

BOOL GEOPDSUserActionMetadataElementReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              unsigned int v26 = &OBJC_IVAR___GEOPDSUserActionMetadataElement__uiAction;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              unsigned int v26 = &OBJC_IVAR___GEOPDSUserActionMetadataElement__uiAction;
              goto LABEL_44;
            }
          }
          unsigned int v26 = &OBJC_IVAR___GEOPDSUserActionMetadataElement__uiAction;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          uint64_t v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 2u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          unsigned int v26 = &OBJC_IVAR___GEOPDSUserActionMetadataElement__uiTarget;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          unsigned int v26 = &OBJC_IVAR___GEOPDSUserActionMetadataElement__uiTarget;
          goto LABEL_44;
        }
      }
      unsigned int v26 = &OBJC_IVAR___GEOPDSUserActionMetadataElement__uiTarget;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1895D3F6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895D436C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRDefinedPlateConditionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  int v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      int v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  BOOL v12 = v10 > 1;
  int v13 = v9 | v12;
  if (((v9 | v12) | v7)) {
    char v14 = 0;
  }
  else {
    char v14 = a3;
  }
  int v15 = (v14 == 0) | v13;
  int v16 = (int *)MEMORY[0x1E4F940E8];
  char v17 = (int *)MEMORY[0x1E4F940C8];
  char v43 = (v8 != 0) | v13;
  char v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_58;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      unint64_t v23 = *(void *)(v3 + v22);
      if (v23 == -1 || v23 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0) {
        goto LABEL_24;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_24:
    int v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_26:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_58:
      if (v13)
      {
        char v37 = 1;
        goto LABEL_67;
      }
      if (v14)
      {
        while (1)
        {
          int v39 = *v14++;
          char v38 = 4;
          switch(v39)
          {
            case 0:
              goto LABEL_68;
            case 1:
              goto LABEL_64;
            case 2:
              char v38 = 2;
              goto LABEL_64;
            case 3:
              char v38 = 1;
LABEL_64:
              *(unsigned char *)(a1 + 52) |= v38;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_68;
    }
    unint64_t v28 = v21 >> 3;
    BOOL v29 = v13;
    if ((v15 & 1) == 0)
    {
      uint64_t v30 = v14;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    if (v28 != 3)
    {
      if (v28 == 2)
      {
        if (!v29 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
          goto LABEL_56;
        }
        int v42 = v15;
        uint64_t v34 = v17;
        BOOL v35 = PBReaderReadString();
        if (v35) {
          -[GEOLPRDefinedPlateCondition _addNoFlagsPowerTypeKey:](a1, v35);
        }
LABEL_53:

        char v17 = v34;
        int v15 = v42;
      }
      else if (v28 == 1)
      {
        if (v29 && (*(unsigned char *)(a1 + 52) & 4) == 0)
        {
          int v42 = v15;
          uint64_t v34 = v17;
          BOOL v35 = PBReaderReadString();
          if (v35) {
            -[GEOLPRDefinedPlateCondition _addNoFlagsVehicleTypeKey:](a1, v35);
          }
          goto LABEL_53;
        }
LABEL_56:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_66:
          char v37 = 0;
          goto LABEL_67;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_66;
      }
LABEL_57:
      if ((v43 & 1) == 0) {
        goto LABEL_58;
      }
      continue;
    }
    break;
  }
  if (!v29 || (*(unsigned char *)(a1 + 52) & 1) != 0) {
    goto LABEL_56;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_66;
  }
  int v36 = objc_alloc_init(GEOLPRPlateMatchCondition);
  if (GEOLPRPlateMatchConditionReadAllFrom(v36, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOLPRDefinedPlateCondition _addNoFlagsPlateMatchCondition:](a1, v36);

    char v17 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_57;
  }

  char v37 = 0;
  char v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_67:
  *(unsigned char *)(a1 + 52) |= 4u;
  *(unsigned char *)(a1 + 52) |= 2u;
  *(unsigned char *)(a1 + 52) |= 1u;
  if (v37)
  {
LABEL_68:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if ((v13 & 1) == 0) {
      return v3;
    }
    goto LABEL_69;
  }
  unint64_t v3 = 0;
  if (v13)
  {
LABEL_69:
    id v40 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1895D4B94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895D4F58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895D5A10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLPRDefinedPlateConditionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 16);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOLPRDefinedPlateConditionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRDefinedPlateConditionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOLPRDefinedPlateConditionReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOLPRDefinedPlateConditionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRDefinedPlateConditionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLPRDefinedPlateConditionCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1895D5CA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRDefinedPlateConditionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRDefinedPlateConditionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1895D5D08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRDefinedPlateConditionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRPlateMatchConditionIsValid(a1))
        {
LABEL_31:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v16 == 2)
        {
          if (v14 != 2) {
            goto LABEL_31;
          }
        }
        else if (v16 == 1 && v14 != 2)
        {
          goto LABEL_31;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_31;
        }
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLPRPlateMatchConditionIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v16 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v16;
}

void sub_1895D6400(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRDefinedPlateConditionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1895D6990(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895D6F20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRDefinedPlateTypeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          BOOL v16 = 0;
        }
        else {
          BOOL v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v45 = v17;
        char v18 = (int *)MEMORY[0x1E4F940E8];
        char v19 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_58;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_25;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_58:
      if (v15)
      {
        char v40 = 1;
        goto LABEL_68;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            int v42 = *v16++;
            int v41 = v42;
            if (v42 != 1 && v41 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v41;
          }
        }
        while (v41);
      }
      goto LABEL_69;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v15;
    if (!v45)
    {
      int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 != 2) {
      break;
    }
    if (!v31) {
      goto LABEL_50;
    }
    if ((*(unsigned char *)(a1 + 44) & 2) != 0)
    {
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_67:
        char v40 = 0;
        goto LABEL_68;
      }
      v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    }
    else
    {
      uint64_t v37 = PBReaderReadString();
      char v38 = *(void **)(a1 + 24);
      *(void *)(a1 + 24) = v37;

      --v9;
    }
LABEL_51:
    if (v9) {
      char v39 = 1;
    }
    else {
      char v39 = v15;
    }
    if ((v39 & 1) == 0) {
      goto LABEL_58;
    }
  }
  if (v30 != 1)
  {
    if (!PBReaderSkipValueWithTag()) {
      goto LABEL_67;
    }
    goto LABEL_51;
  }
  if (!v31 || (*(unsigned char *)(a1 + 44) & 1) != 0)
  {
LABEL_50:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_67;
    }
    goto LABEL_51;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_67;
  }
  int v36 = objc_alloc_init(GEOLPRDefinedPlateCondition);
  if (GEOLPRDefinedPlateConditionReadAllFrom((uint64_t)v36, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOLPRDefinedPlateType _addNoFlagsConditions:](a1, v36);

    char v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_51;
  }

  char v40 = 0;
  char v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_68:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v40)
  {
LABEL_69:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (!v15) {
      return v3;
    }
    goto LABEL_70;
  }
  unint64_t v3 = 0;
  if (v15)
  {
LABEL_70:
    char v43 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1895D7720(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895D7D48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLPRDefinedPlateTypeCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 16);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOLPRDefinedPlateTypeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRDefinedPlateTypeReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOLPRDefinedPlateTypeReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOLPRDefinedPlateTypeReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRDefinedPlateTypeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLPRDefinedPlateTypeCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1895D7FDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRDefinedPlateTypeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRDefinedPlateTypeReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1895D8040(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRDefinedPlateTypeIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) != 1) {
        goto LABEL_25;
      }
      if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRDefinedPlateConditionIsValid(a1))
      {
LABEL_28:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v14 != 2) {
      goto LABEL_28;
    }
LABEL_25:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_28;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_1895D845C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRDefinedPlateTypeIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_1895D881C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895D8C54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLPRConvertRuleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v8)) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        LODWORD(v16) = v14;
        char v56 = (v15 == 0) | v14;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        char v55 = (v7 != 0) | v14;
        char v18 = (int *)MEMORY[0x1E4F940C8];
        char v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_83;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_83:
      if (v16)
      {
        char v49 = 1;
        goto LABEL_95;
      }
      if (v15)
      {
        while (1)
        {
          int v51 = *v15++;
          char v50 = 16;
          switch(v51)
          {
            case 0:
              goto LABEL_96;
            case 1:
              goto LABEL_89;
            case 2:
              char v50 = 8;
              goto LABEL_89;
            case 3:
              char v50 = 4;
LABEL_89:
              *(unsigned char *)(a1 + 60) |= v50;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_96;
    }
    unint64_t v29 = v22 >> 3;
    BOOL v30 = (char)v16;
    if ((v56 & 1) == 0)
    {
      BOOL v31 = v15;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30 || (*(unsigned char *)(a1 + 60) & 0x10) != 0) {
          goto LABEL_71;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_92;
        }
        int v54 = (int)v16;
        BOOL v16 = objc_alloc_init(GEOLPRLPRPickupRule);
        if (!GEOLPRLPRPickupRuleReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        -[GEOLPRLPRConvertRule _addNoFlagsPickupRule:](a1, v16);
        goto LABEL_54;
      case 2:
        if (!v30 || (*(unsigned char *)(a1 + 60) & 8) != 0) {
          goto LABEL_71;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_92;
        }
        int v54 = (int)v16;
        BOOL v16 = objc_alloc_init(GEOLPRLPRMapRule);
        if (!GEOLPRLPRMapRuleReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        -[GEOLPRLPRConvertRule _addNoFlagsMapRule:](a1, v16);
        goto LABEL_54;
      case 3:
        if (!v30 || (*(unsigned char *)(a1 + 60) & 4) != 0) {
          goto LABEL_71;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
        {
LABEL_92:
          char v49 = 0;
          goto LABEL_94;
        }
        int v54 = (int)v16;
        BOOL v16 = objc_alloc_init(GEOLPRLPRFillRule);
        if (GEOLPRLPRFillRuleReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOLPRLPRConvertRule _addNoFlagsFillRule:](a1, v16);
LABEL_54:

          LODWORD(v16) = v54;
          char v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_82:
          if ((v55 & 1) == 0) {
            goto LABEL_83;
          }
          continue;
        }
LABEL_93:

        char v49 = 0;
        LOBYTE(v16) = v54;
LABEL_94:
        char v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
        *(unsigned char *)(a1 + 60) |= 0x10u;
        *(unsigned char *)(a1 + 60) |= 8u;
        *(unsigned char *)(a1 + 60) |= 4u;
        if (v49)
        {
LABEL_96:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_97;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_97:
            char v52 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_71;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v39 = *v17;
          unint64_t v40 = *(void *)(v3 + v39);
          if (v40 == -1 || v40 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
            *(void *)(v3 + v39) = v40 + 1;
            v38 |= (unint64_t)(v41 & 0x7F) << v36;
            if (v41 < 0)
            {
              v36 += 7;
              BOOL v26 = v37++ >= 9;
              if (v26)
              {
                LODWORD(v38) = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_76:
        uint64_t v48 = 56;
        goto LABEL_81;
      case 5:
        if (v8)
        {
          char v42 = 0;
          unsigned int v43 = 0;
          uint64_t v38 = 0;
          *(unsigned char *)(a1 + 60) |= 1u;
          while (1)
          {
            uint64_t v44 = *v17;
            unint64_t v45 = *(void *)(v3 + v44);
            if (v45 == -1 || v45 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v46 = *(unsigned char *)(*(void *)(v3 + *v19) + v45);
            *(void *)(v3 + v44) = v45 + 1;
            v38 |= (unint64_t)(v46 & 0x7F) << v42;
            if ((v46 & 0x80) == 0) {
              goto LABEL_78;
            }
            v42 += 7;
            BOOL v26 = v43++ >= 9;
            if (v26)
            {
              LODWORD(v38) = 0;
              goto LABEL_80;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_78:
          if (*(unsigned char *)(v3 + *v18)) {
            LODWORD(v38) = 0;
          }
LABEL_80:
          uint64_t v48 = 52;
LABEL_81:
          *(_DWORD *)(a1 + v48) = v38;
        }
        else
        {
LABEL_71:
          char v47 = PBReaderSkipValueWithTag();
          char v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v47 & 1) == 0)
          {
LABEL_91:
            char v49 = 0;
            goto LABEL_95;
          }
        }
        goto LABEL_82;
      default:
        int v35 = PBReaderSkipValueWithTag();
        char v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v35) {
          goto LABEL_91;
        }
        goto LABEL_82;
    }
  }
}

void sub_1895D96C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895D9A88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895DA960(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLPRLPRConvertRuleCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v2 = a1[4];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v26;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v26 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v25 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v4);
  }

  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v7 = a1[3];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v22;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v21 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
    }
    while (v9);
  }

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v12 = a1[2];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v18;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v18 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v17 + 1) + 8 * v16++), "readAll:", 1, (void)v17);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
    }
    while (v14);
  }
}

unint64_t GEOLPRLPRConvertRuleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRLPRConvertRuleReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLPRLPRConvertRuleReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLPRLPRConvertRuleReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRLPRConvertRuleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLPRLPRConvertRuleCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1895DAD28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLPRConvertRuleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRLPRConvertRuleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1895DAD8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRLPRConvertRuleIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOLPRLPRPickupRuleIsValid(a1)) {
            goto LABEL_32;
          }
          goto LABEL_53;
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRLPRMapRuleIsValid(a1)) {
            goto LABEL_53;
          }
          goto LABEL_32;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRLPRFillRuleIsValid(a1)) {
            goto LABEL_53;
          }
LABEL_32:
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v22 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v23 = *v2;
        unint64_t v24 = *(void *)&a1[v23];
        if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v25 = v24 + 1;
        int v26 = *(char *)(*(void *)&a1[*v5] + v24);
        *(void *)&a1[v23] = v25;
        if (v26 < 0)
        {
          BOOL v21 = v22++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_49:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLPRLPRPickupRuleIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_50;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_50;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 200)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRLicensePlateStructureIsValid(a1))
        {
LABEL_52:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_35;
      }
      if (v16 == 2) {
        break;
      }
      if (v16 == 1)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_52;
          }
LABEL_39:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v22 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              unint64_t v24 = *(void *)&a1[v23];
              if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v25 = v24 + 1;
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                BOOL v12 = v22++ >= 9;
                if (!v12) {
                  continue;
                }
              }
              goto LABEL_39;
            }
            a1[*v4] = 1;
          }
LABEL_35:
          PBReaderRecallMark();
          goto LABEL_49;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_52;
        }
        while (1)
        {
          uint64_t v17 = *v2;
          unint64_t v18 = *(void *)&a1[v17];
          if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v19 = v18 + 1;
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            unsigned int v21 = v14++;
            if (v21 <= 8) {
              continue;
            }
          }
          goto LABEL_49;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_52;
      }
LABEL_49:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_50;
      }
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRTargetCharIsValid(a1)) {
      goto LABEL_52;
    }
    goto LABEL_35;
  }
LABEL_50:
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLPRLPRMapRuleIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_56;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_56;
      }
      unint64_t v16 = v8 >> 3;
      if ((int)(v8 >> 3) > 2) {
        break;
      }
      if (v16 != 1)
      {
        if (v16 == 2)
        {
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRTargetCharIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_41;
        }
        goto LABEL_42;
      }
      if (v14 == 2)
      {
        if (!PBReaderPlaceMark()) {
          goto LABEL_57;
        }
LABEL_45:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v22 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v23 = *v2;
            unint64_t v24 = *(void *)&a1[v23];
            if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
              break;
            }
            unint64_t v25 = v24 + 1;
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v12 = v22++ >= 9;
              if (!v12) {
                continue;
              }
            }
            goto LABEL_45;
          }
          a1[*v4] = 1;
        }
LABEL_41:
        PBReaderRecallMark();
        goto LABEL_55;
      }
      if ((v8 & 7) != 0) {
        goto LABEL_57;
      }
      while (1)
      {
        uint64_t v17 = *v2;
        unint64_t v18 = *(void *)&a1[v17];
        if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v19 = v18 + 1;
        int v20 = *(char *)(*(void *)&a1[*v5] + v18);
        *(void *)&a1[v17] = v19;
        if (v20 < 0)
        {
          unsigned int v21 = v14++;
          if (v21 <= 8) {
            continue;
          }
        }
        goto LABEL_55;
      }
      a1[*v4] = 1;
LABEL_55:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_56;
      }
    }
    if (v16 == 3)
    {
      if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRValueMappingIsValid(a1))
      {
LABEL_57:
        PBReaderRecallMark();
        return 0;
      }
      goto LABEL_41;
    }
    if (v16 == 200)
    {
      if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRLicensePlateStructureIsValid(a1)) {
        goto LABEL_57;
      }
      goto LABEL_41;
    }
LABEL_42:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_57;
    }
    goto LABEL_55;
  }
LABEL_56:
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLPRLPRFillRuleIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_59;
            }
            while (1)
            {
LABEL_49:
              if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
                goto LABEL_27;
              }
              unsigned int v27 = a1[*v4];
              if (a1[*v4]) {
                goto LABEL_27;
              }
              while (1)
              {
                uint64_t v28 = *v2;
                unint64_t v29 = *(void *)&a1[v28];
                if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
                  break;
                }
                unint64_t v30 = v29 + 1;
                int v31 = *(char *)(*(void *)&a1[*v5] + v29);
                *(void *)&a1[v28] = v30;
                if (v31 < 0)
                {
                  BOOL v12 = v27++ >= 9;
                  if (!v12) {
                    continue;
                  }
                }
                goto LABEL_49;
              }
              a1[*v4] = 1;
            }
          }
          if ((v8 & 7) != 0) {
            goto LABEL_59;
          }
          while (1)
          {
            uint64_t v16 = *v2;
            unint64_t v17 = *(void *)&a1[v16];
            if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            unint64_t v18 = v17 + 1;
            int v19 = *(char *)(*(void *)&a1[*v5] + v17);
            *(void *)&a1[v16] = v18;
            if (v19 < 0)
            {
              unsigned int v20 = v14++;
              if (v20 <= 8) {
                continue;
              }
            }
            goto LABEL_46;
          }
        case 2u:
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRTargetCharIsValid(a1)) {
            goto LABEL_59;
          }
          goto LABEL_27;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_59;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            unint64_t v23 = *(void *)&a1[v22];
            if (v23 == -1 || v23 >= *(void *)&a1[*v3]) {
              break;
            }
            unint64_t v24 = v23 + 1;
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0 && v21++ <= 8) {
              continue;
            }
            goto LABEL_46;
          }
LABEL_45:
          a1[*v4] = 1;
          goto LABEL_46;
        default:
          if ((v8 >> 3) == 200)
          {
            if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRLicensePlateStructureIsValid(a1))
            {
LABEL_59:
              PBReaderRecallMark();
              return 0;
            }
LABEL_27:
            PBReaderRecallMark();
          }
          else if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
            goto LABEL_59;
          }
LABEL_46:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_58;
          }
          break;
      }
    }
  }
LABEL_58:
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

void sub_1895DBDD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRLPRConvertRuleIsDirty(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 60);
  if ((v2 & 0x3C) == 0)
  {
    if ((*(unsigned char *)(a1 + 60) & 8) != 0)
    {
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      id v4 = *(id *)(a1 + 24);
      uint64_t v5 = [v4 countByEnumeratingWithState:&v16 objects:v21 count:16];
      if (v5)
      {
        uint64_t v6 = v5;
        uint64_t v7 = *(void *)v17;
LABEL_6:
        uint64_t v8 = 0;
        while (1)
        {
          if (*(void *)v17 != v7) {
            objc_enumerationMutation(v4);
          }
          if (GEOLPRLPRMapRuleIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1) + 8 * v8))) {
            goto LABEL_24;
          }
          if (v6 == ++v8)
          {
            uint64_t v6 = [v4 countByEnumeratingWithState:&v16 objects:v21 count:16];
            if (v6) {
              goto LABEL_6;
            }
            break;
          }
        }
      }

      char v2 = *(unsigned char *)(a1 + 60);
    }
    if ((v2 & 4) == 0) {
      return 0;
    }
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v4 = *(id *)(a1 + 16);
    uint64_t v3 = [v4 countByEnumeratingWithState:&v12 objects:v20 count:16];
    if (!v3)
    {
LABEL_25:

      return v3;
    }
    uint64_t v9 = *(void *)v13;
LABEL_17:
    uint64_t v10 = 0;
    while (1)
    {
      if (*(void *)v13 != v9) {
        objc_enumerationMutation(v4);
      }
      if (GEOLPRLPRFillRuleIsDirty(*(os_unfair_lock_s **)(*((void *)&v12 + 1) + 8 * v10))) {
        break;
      }
      if (v3 == ++v10)
      {
        uint64_t v3 = [v4 countByEnumeratingWithState:&v12 objects:v20 count:16];
        if (v3) {
          goto LABEL_17;
        }
        goto LABEL_25;
      }
    }
LABEL_24:
    uint64_t v3 = 1;
    goto LABEL_25;
  }
  return 1;
}

os_unfair_lock_s *GEOLPRLPRConvertRuleIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLPRLPRConvertRuleIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1895DC5EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895DCCE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLPRFillRuleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFCFFFFFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 2;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          long long v16 = 0;
        }
        else {
          long long v16 = a3;
        }
        long long v17 = (int *)MEMORY[0x1E4F940E8];
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_106;
        }
        char v68 = (v16 == 0) | v15;
        long long v19 = (int *)MEMORY[0x1E4F940B8];
        char v67 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_106;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    int v28 = v22 & 7;
    if (v27 || v28 == 4)
    {
LABEL_106:
      if (v15)
      {
        char v60 = 1;
        goto LABEL_108;
      }
      if (v16)
      {
        while (1)
        {
          int v62 = *v16++;
          int v61 = v62;
          char v63 = 2;
          switch(v62)
          {
            case 0:
              goto LABEL_118;
            case 1:
              goto LABEL_117;
            case 2:
              char v63 = 8;
              goto LABEL_117;
            case 3:
              char v63 = 16;
              goto LABEL_117;
            default:
              if (v61 != 200) {
                continue;
              }
              char v63 = 4;
LABEL_117:
              *(unsigned char *)(a1 + 80) |= v63;
              break;
          }
        }
      }
      goto LABEL_118;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v68 & 1) == 0)
    {
      BOOL v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31 || (*(unsigned char *)(a1 + 80) & 2) != 0) {
          goto LABEL_79;
        }
        if (v28 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_123;
          }
          while (1)
          {
            char v36 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]))
            {
              PBReaderRecallMark();
              long long v18 = (int *)MEMORY[0x1E4F940C8];
              char v15 = v67;
              goto LABEL_93;
            }
            char v37 = 0;
            unsigned int v38 = 0;
            uint64_t v39 = 0;
            while (1)
            {
              uint64_t v40 = *v17;
              unint64_t v41 = *(void *)(v3 + v40);
              if (v41 == -1 || v41 >= *(void *)(v3 + *v6)) {
                break;
              }
              char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v41);
              *(void *)(v3 + v40) = v41 + 1;
              v39 |= (unint64_t)(v42 & 0x7F) << v37;
              if (v42 < 0)
              {
                v37 += 7;
                BOOL v26 = v38++ >= 9;
                if (!v26) {
                  continue;
                }
              }
              goto LABEL_51;
            }
            *(unsigned char *)(v3 + *v36) = 1;
LABEL_51:
            PBRepeatedUInt32Add();
          }
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0;
        while (1)
        {
          uint64_t v57 = *v17;
          unint64_t v58 = *(void *)(v3 + v57);
          if (v58 == -1 || v58 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v59 = *(unsigned char *)(*(void *)(v3 + *v19) + v58);
          *(void *)(v3 + v57) = v58 + 1;
          v56 |= (unint64_t)(v59 & 0x7F) << v54;
          if (v59 < 0)
          {
            v54 += 7;
            BOOL v26 = v55++ >= 9;
            if (!v26) {
              continue;
            }
          }
          goto LABEL_105;
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_105:
        PBRepeatedUInt32Add();
        goto LABEL_92;
      case 2:
        if (!v31) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_123;
          }
          char v53 = 16 * *(unsigned char *)(a1 + 80);
          goto LABEL_91;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_123;
        }
        int v66 = objc_alloc_init(GEOLPRTargetChar);
        if (!GEOLPRTargetCharReadAllFrom((uint64_t)v66, (void *)v3)) {
          goto LABEL_122;
        }
        PBReaderRecallMark();
        uint64_t v43 = 48;
        goto LABEL_68;
      case 3:
        if (!v31) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_123;
          }
          char v53 = 8 * *(unsigned char *)(a1 + 80);
LABEL_91:
          v7 += v53 >> 7;
          goto LABEL_92;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_123;
        }
        int v66 = objc_alloc_init(GEOLPRTargetChar);
        if (GEOLPRTargetCharReadAllFrom((uint64_t)v66, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v43 = 56;
LABEL_68:
          uint64_t v44 = *(void **)(a1 + v43);
          *(void *)(a1 + v43) = v66;

          --v7;
LABEL_92:
          char v15 = v67;
          long long v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_93:
          if (!(v15 & 1 | (v7 != 0)) || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_106;
          }
          continue;
        }
LABEL_122:

LABEL_123:
        char v60 = 0;
        char v15 = v67;
        long long v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_108:
        *(unsigned char *)(a1 + 80) |= 2u;
        *(unsigned char *)(a1 + 80) |= 8u;
        *(unsigned char *)(a1 + 80) |= 0x10u;
        *(unsigned char *)(a1 + 80) |= 4u;
        if (v60)
        {
LABEL_118:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_119;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v15 & 1) == 0) {
          return v3;
        }
LABEL_119:
        unsigned int v64 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_79;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 80) |= 1u;
        while (2)
        {
          uint64_t v48 = *v17;
          unint64_t v49 = *(void *)(v3 + v48);
          if (v49 == -1 || v49 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v19) + v49);
            *(void *)(v3 + v48) = v49 + 1;
            v47 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              BOOL v26 = v46++ >= 9;
              if (v26)
              {
                LODWORD(v47) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v47) = 0;
        }
LABEL_84:
        *(_DWORD *)(a1 + 76) = v47;
        goto LABEL_93;
      default:
        if (v30 != 200)
        {
          int v51 = PBReaderSkipValueWithTag();
          long long v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v67;
          if (!v51) {
            goto LABEL_121;
          }
          goto LABEL_93;
        }
        if (!v31)
        {
LABEL_79:
          char v52 = PBReaderSkipValueWithTag();
          long long v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v67;
          if ((v52 & 1) == 0)
          {
LABEL_121:
            char v60 = 0;
            goto LABEL_108;
          }
          goto LABEL_93;
        }
        if ((*(unsigned char *)(a1 + 80) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_123;
          }
          char v53 = 32 * *(unsigned char *)(a1 + 80);
          goto LABEL_91;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_123;
        }
        int v66 = objc_alloc_init(GEOLPRLicensePlateStructure);
        if (!GEOLPRLicensePlateStructureReadAllFrom((uint64_t)v66, (void *)v3, v9 & 1)) {
          goto LABEL_122;
        }
        PBReaderRecallMark();
        uint64_t v43 = 40;
        goto LABEL_68;
    }
  }
}

void sub_1895DD8C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895DDA38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895DE480(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLPRFillRuleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRLPRFillRuleReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLPRLPRFillRuleReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLPRLPRFillRuleReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRLPRFillRuleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 48) readAll:1];
    [*(id *)(a1 + 56) readAll:1];
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1895DE64C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLPRFillRuleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRLPRFillRuleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1895DE6B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRTargetCharIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v13 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v15 = 0;
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0)
          {
            BOOL v20 = v15++ > 8;
            if (!v20) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v26 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v21 = 0;
    while (1)
    {
      uint64_t v22 = *v2;
      unint64_t v23 = *(void *)&a1[v22];
      if (v23 == -1 || v23 >= *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      unint64_t v24 = v23 + 1;
      int v25 = *(char *)(*(void *)&a1[*v5] + v23);
      *(void *)&a1[v22] = v24;
      if (v25 < 0)
      {
        BOOL v20 = v21++ > 8;
        if (!v20) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v26 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v26;
}

BOOL GEOLPRLicensePlateStructureIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v16 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v14 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v16 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v16;
}