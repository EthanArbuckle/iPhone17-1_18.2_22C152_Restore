void sub_1895DECC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOLPRLPRFillRuleIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  if ((*(unsigned char *)(a1 + 80) & 0x3A) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 80) & 4) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 40);

  return GEOLPRLicensePlateStructureIsDirty(v3);
}

os_unfair_lock_s *GEOLPRLPRFillRuleIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOLPRLPRFillRuleIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1895DF0DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895DF4C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895DF7C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLPRMapRuleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + (*(unsigned char *)(a1 + 76) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        unsigned __int8 v14 = v10 | (v11 > 2);
        if ((v14 | v8)) {
          v15 = 0;
        }
        else {
          v15 = a3;
        }
        BOOL v16 = v14;
        v17 = (int *)MEMORY[0x1E4F940E8];
        v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_92;
        }
        char v60 = (v15 == 0) | v14;
        v19 = (int *)MEMORY[0x1E4F940B8];
        BOOL v59 = v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  do
  {
    if (*(unsigned char *)(v3 + *v18)) {
      break;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    int v28 = v22 & 7;
    if (v27 || v28 == 4) {
      break;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v16;
    if ((v60 & 1) == 0)
    {
      v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if ((int)v30 <= 2)
    {
      if (v30 == 1)
      {
        if (!v31 || (*(unsigned char *)(a1 + 76) & 1) != 0) {
          goto LABEL_75;
        }
        if (v28 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_108;
          }
          while (1)
          {
            v38 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
              break;
            }
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            while (1)
            {
              uint64_t v42 = *v17;
              unint64_t v43 = *(void *)(v3 + v42);
              if (v43 == -1 || v43 >= *(void *)(v3 + *v6)) {
                break;
              }
              char v44 = *(unsigned char *)(*(void *)(v3 + *v19) + v43);
              *(void *)(v3 + v42) = v43 + 1;
              v41 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                BOOL v26 = v40++ >= 9;
                if (!v26) {
                  continue;
                }
              }
              goto LABEL_65;
            }
            *(unsigned char *)(v3 + *v38) = 1;
LABEL_65:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v49 = 0;
          while (1)
          {
            uint64_t v50 = *v17;
            unint64_t v51 = *(void *)(v3 + v50);
            if (v51 == -1 || v51 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v52 = *(unsigned char *)(*(void *)(v3 + *v19) + v51);
            *(void *)(v3 + v50) = v51 + 1;
            v49 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              BOOL v26 = v48++ >= 9;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_88;
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_88:
          PBRepeatedUInt32Add();
        }
        goto LABEL_89;
      }
      if (v30 != 2) {
        goto LABEL_73;
      }
      if (!v31 || (*(unsigned char *)(a1 + 76) & 4) != 0) {
        goto LABEL_75;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_108;
      }
      v36 = objc_alloc_init(GEOLPRTargetChar);
      if (!GEOLPRTargetCharReadAllFrom((uint64_t)v36, (void *)v3)) {
        goto LABEL_109;
      }
      PBReaderRecallMark();
      -[GEOLPRLPRMapRule _addNoFlagsTargetChar:](a1, v36);
      goto LABEL_71;
    }
    if (v30 == 3)
    {
      if (!v31 || (*(unsigned char *)(a1 + 76) & 8) != 0)
      {
LABEL_75:
        char v46 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E4F940C8];
        if ((v46 & 1) == 0)
        {
LABEL_107:
          char v53 = 0;
          goto LABEL_94;
        }
        continue;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_108;
      }
      v36 = objc_alloc_init(GEOLPRValueMapping);
      if (!GEOLPRValueMappingReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
      {
LABEL_109:

        char v53 = 0;
        BOOL v16 = v59;
        goto LABEL_110;
      }
      PBReaderRecallMark();
      -[GEOLPRLPRMapRule _addNoFlagsValueMapping:](a1, v36);
LABEL_71:

      goto LABEL_72;
    }
    if (v30 != 200)
    {
LABEL_73:
      int v45 = PBReaderSkipValueWithTag();
      v18 = (int *)MEMORY[0x1E4F940C8];
      if (!v45) {
        goto LABEL_107;
      }
      continue;
    }
    if (!v31) {
      goto LABEL_75;
    }
    if ((*(unsigned char *)(a1 + 76) & 2) != 0)
    {
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_108:
        char v53 = 0;
LABEL_110:
        v18 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_94;
      }
      v7 += *(unsigned __int8 *)(a1 + 76) << 30 >> 31;
      goto LABEL_89;
    }
    if ((PBReaderPlaceMark() & 1) == 0) {
      goto LABEL_108;
    }
    v36 = objc_alloc_init(GEOLPRLicensePlateStructure);
    if (!GEOLPRLicensePlateStructureReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1)) {
      goto LABEL_109;
    }
    PBReaderRecallMark();
    v37 = *(void **)(a1 + 40);
    *(void *)(a1 + 40) = v36;

    --v7;
LABEL_72:
    BOOL v16 = v59;
LABEL_89:
    v18 = (int *)MEMORY[0x1E4F940C8];
  }
  while ((v16 || v7 != 0) && *(void *)(v3 + *v17) < *(void *)(v3 + *v6));
LABEL_92:
  if (!v16)
  {
    if (v15)
    {
      while (1)
      {
        int v55 = *v15++;
        int v54 = v55;
        char v56 = 1;
        switch(v55)
        {
          case 0:
            goto LABEL_104;
          case 1:
            goto LABEL_103;
          case 2:
            char v56 = 4;
            goto LABEL_103;
          case 3:
            char v56 = 8;
            goto LABEL_103;
          default:
            if (v54 != 200) {
              continue;
            }
            char v56 = 2;
LABEL_103:
            *(unsigned char *)(a1 + 76) |= v56;
            break;
        }
      }
    }
    goto LABEL_104;
  }
  char v53 = 1;
LABEL_94:
  *(unsigned char *)(a1 + 76) |= 1u;
  *(unsigned char *)(a1 + 76) |= 4u;
  *(unsigned char *)(a1 + 76) |= 8u;
  *(unsigned char *)(a1 + 76) |= 2u;
  if ((v53 & 1) == 0)
  {
    unint64_t v3 = 0;
    if (!v16) {
      return v3;
    }
    goto LABEL_105;
  }
LABEL_104:
  unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
  if (!v16) {
    return v3;
  }
LABEL_105:
  v57 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = 0;

  return v3;
}

void sub_1895E0284(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895E0648(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895E12B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRLPRMapRuleCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v2 = a1[6];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v4);
  }

  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = a1[7];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * v11++), "readAll:", 1, (void)v13);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v9);
  }

  return [a1[5] readAll:1];
}

unint64_t GEOLPRLPRMapRuleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRLPRMapRuleReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLPRLPRMapRuleReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLPRLPRMapRuleReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRLPRMapRuleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLPRLPRMapRuleCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1895E15FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLPRMapRuleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRLPRMapRuleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1895E1660(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRValueMappingIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRTimeConditionIsValid(a1))
        {
LABEL_31:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v16 == 2)
        {
          if (v14 != 2) {
            goto LABEL_31;
          }
        }
        else if (v16 == 1 && v14 != 2)
        {
          goto LABEL_31;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_31;
        }
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1895E1B60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRLPRMapRuleIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v2 = *(unsigned char *)(a1 + 76);
  if ((v2 & 0x1D) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 76) & 2) != 0)
  {
    if (GEOLPRLicensePlateStructureIsDirty(*(void *)(a1 + 40))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 76);
  }
  if ((v2 & 8) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 56);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOLPRValueMappingIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_19;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_19:

  return v3;
}

os_unfair_lock_s *GEOLPRLPRMapRuleIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLPRLPRMapRuleIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1895E21E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895E2634(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895E292C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLPRPickupRuleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1)
      + (*(unsigned char *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v8)) {
          long long v15 = 0;
        }
        else {
          long long v15 = a3;
        }
        LODWORD(v16) = v14;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_84;
        }
        char v59 = (v15 == 0) | v14;
        long long v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_84;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    int v28 = v22 & 7;
    if (v27 || v28 == 4)
    {
LABEL_84:
      if (v16)
      {
        char v52 = 1;
        goto LABEL_86;
      }
      if (!v15) {
        goto LABEL_100;
      }
      while (1)
      {
        while (1)
        {
          int v54 = *v15++;
          int v53 = v54;
          BOOL v55 = v54 == 1;
          if (v54 <= 1) {
            break;
          }
          if (v53 == 200)
          {
            LOBYTE(v53) = 4;
LABEL_98:
            *(unsigned char *)(a1 + 68) |= v53;
          }
          else if (v53 == 2)
          {
            goto LABEL_98;
          }
        }
        if (v55)
        {
          LOBYTE(v53) = 1;
          goto LABEL_98;
        }
        if (!v53) {
          goto LABEL_100;
        }
      }
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v59 & 1) == 0)
    {
      v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 != 200) {
      break;
    }
    if (v31)
    {
      if ((*(unsigned char *)(a1 + 68) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_104:
          char v52 = 0;
          goto LABEL_106;
        }
        v7 += *(unsigned __int8 *)(a1 + 68) << 29 >> 31;
        goto LABEL_81;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_104;
      }
      int v58 = (int)v16;
      unint64_t v16 = objc_alloc_init(GEOLPRLicensePlateStructure);
      if (!GEOLPRLicensePlateStructureReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
        goto LABEL_105;
      }
      PBReaderRecallMark();
      unint64_t v43 = *(void **)(a1 + 48);
      *(void *)(a1 + 48) = v16;

      --v7;
      goto LABEL_64;
    }
LABEL_67:
    char v45 = PBReaderSkipValueWithTag();
    long long v18 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
LABEL_103:
      char v52 = 0;
      goto LABEL_86;
    }
LABEL_82:
    if (!(v16 & 1 | (v7 != 0)) || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
      goto LABEL_84;
    }
  }
  if (v30 != 2)
  {
    if (v30 != 1)
    {
      int v44 = PBReaderSkipValueWithTag();
      long long v18 = (int *)MEMORY[0x1E4F940C8];
      if (!v44) {
        goto LABEL_103;
      }
      goto LABEL_82;
    }
    if (v31 && (*(unsigned char *)(a1 + 68) & 1) == 0)
    {
      if (v28 == 2)
      {
        if (!PBReaderPlaceMark()) {
          goto LABEL_104;
        }
        while (1)
        {
          v36 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v39 = 0;
          while (1)
          {
            uint64_t v40 = *v17;
            unint64_t v41 = *(void *)(v3 + v40);
            if (v41 == -1 || v41 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v41);
            *(void *)(v3 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              BOOL v26 = v38++ >= 9;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_53;
          }
          *(unsigned char *)(v3 + *v36) = 1;
LABEL_53:
          PBRepeatedUInt32Add();
        }
        PBReaderRecallMark();
      }
      else
      {
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        while (1)
        {
          uint64_t v49 = *v17;
          unint64_t v50 = *(void *)(v3 + v49);
          if (v50 == -1 || v50 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v51 = *(unsigned char *)(*(void *)(v3 + *v19) + v50);
          *(void *)(v3 + v49) = v50 + 1;
          v48 |= (unint64_t)(v51 & 0x7F) << v46;
          if (v51 < 0)
          {
            v46 += 7;
            BOOL v26 = v47++ >= 9;
            if (!v26) {
              continue;
            }
          }
          goto LABEL_80;
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_80:
        PBRepeatedUInt32Add();
      }
      goto LABEL_81;
    }
    goto LABEL_67;
  }
  if (!v31 || (*(unsigned char *)(a1 + 68) & 2) != 0) {
    goto LABEL_67;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_104;
  }
  int v58 = (int)v16;
  unint64_t v16 = objc_alloc_init(GEOLPRTargetChar);
  if (GEOLPRTargetCharReadAllFrom((uint64_t)v16, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOLPRLPRPickupRule _addNoFlagsPickupChar:](a1, v16);

LABEL_64:
    LODWORD(v16) = v58;
LABEL_81:
    long long v18 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_82;
  }
LABEL_105:

  char v52 = 0;
  LOBYTE(v16) = v58;
LABEL_106:
  long long v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_86:
  *(unsigned char *)(a1 + 68) |= 1u;
  *(unsigned char *)(a1 + 68) |= 2u;
  *(unsigned char *)(a1 + 68) |= 4u;
  if (v52)
  {
LABEL_100:
    unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
    if (v16) {
      goto LABEL_101;
    }
    return v3;
  }
  unint64_t v3 = 0;
  if ((v16 & 1) == 0) {
    return v3;
  }
LABEL_101:
  char v56 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = 0;

  return v3;
}

void sub_1895E3338(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895E3D70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRLPRPickupRuleCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 40);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  return [*(id *)(a1 + 48) readAll:1];
}

unint64_t GEOLPRLPRPickupRuleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRLPRPickupRuleReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOLPRLPRPickupRuleReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOLPRLPRPickupRuleReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRLPRPickupRuleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLPRLPRPickupRuleCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1895E401C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLPRPickupRuleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRLPRPickupRuleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1895E4080(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895E42E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOLPRLPRPickupRuleIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  if ((*(unsigned char *)(a1 + 68) & 0xB) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 68) & 4) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 48);

  return GEOLPRLicensePlateStructureIsDirty(v3);
}

os_unfair_lock_s *GEOLPRLPRPickupRuleIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOLPRLPRPickupRuleIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1895E4774(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895E4AFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895E4D8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -3:
        char v7 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        char v14 = v10 | (v11 > 1);
        if (v10 & 1 | (v11 > 1) | v7 & 1) {
          long long v15 = 0;
        }
        else {
          long long v15 = a3;
        }
        unint64_t v16 = (int *)MEMORY[0x1E4F940E8];
        BOOL v17 = (int *)MEMORY[0x1E4F940C8];
        long long v18 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_61;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      unint64_t v23 = *(void *)(v3 + v22);
      if (v23 == -1 || v23 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0) {
        goto LABEL_23;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_23:
    int v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_25:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_61:
      if (v14)
      {
        char v37 = 1;
        goto LABEL_70;
      }
      if (v15)
      {
        while (1)
        {
          int v39 = *v15++;
          char v38 = 4;
          switch(v39)
          {
            case 0:
              goto LABEL_71;
            case 1:
              goto LABEL_67;
            case 2:
              char v38 = 2;
              goto LABEL_67;
            case 3:
              char v38 = 1;
LABEL_67:
              *(unsigned char *)(a1 + 52) |= v38;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_71;
    }
    unint64_t v28 = v21 >> 3;
    BOOL v29 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      unint64_t v30 = v15;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    if (v28 != 3)
    {
      if (v28 == 2)
      {
        if (!v29 || (*(unsigned char *)(a1 + 52) & 2) != 0)
        {
LABEL_56:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_69;
          }
          goto LABEL_57;
        }
        int v34 = PBReaderReadString();
        if (v34) {
          -[GEOLPRLicensePlateInfo _addNoFlagsPowerTypeKeys:](a1, v34);
        }
      }
      else
      {
        if (v28 != 1)
        {
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_69;
          }
          goto LABEL_57;
        }
        if (!v29 || (*(unsigned char *)(a1 + 52) & 4) != 0) {
          goto LABEL_56;
        }
        int v34 = PBReaderReadString();
        if (v34) {
          -[GEOLPRLicensePlateInfo _addNoFlagsVehicleTypeKeys:](a1, v34);
        }
      }

      goto LABEL_53;
    }
    if (!v29) {
      goto LABEL_56;
    }
    if ((*(unsigned char *)(a1 + 52) & 1) == 0) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_69:
      char v37 = 0;
      goto LABEL_70;
    }
    v8 -= *(unsigned char *)(a1 + 52) & 1;
LABEL_57:
    if (!(v14 & 1 | (v8 != 0))) {
      goto LABEL_61;
    }
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_69;
  }
  BOOL v35 = objc_alloc_init(GEOLPRLicensePlateStructure);
  if (GEOLPRLicensePlateStructureReadAllFrom((uint64_t)v35, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    v36 = *(void **)(a1 + 16);
    *(void *)(a1 + 16) = v35;

    --v8;
LABEL_53:
    BOOL v17 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_57;
  }

  char v37 = 0;
  BOOL v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_70:
  *(unsigned char *)(a1 + 52) |= 4u;
  *(unsigned char *)(a1 + 52) |= 2u;
  *(unsigned char *)(a1 + 52) |= 1u;
  if (v37)
  {
LABEL_71:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if ((v14 & 1) == 0) {
      return v3;
    }
    goto LABEL_72;
  }
  unint64_t v3 = 0;
  if (v14)
  {
LABEL_72:
    uint64_t v40 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1895E5620(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895E59E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895E609C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRLicensePlateInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLPRLicensePlateInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLPRLicensePlateInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRLicensePlateInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 16) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1895E6244(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRLicensePlateInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1895E62A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRLicensePlateInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRLicensePlateStructureIsValid(a1))
        {
LABEL_31:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v16 == 2)
        {
          if (v14 != 2) {
            goto LABEL_31;
          }
        }
        else if (v16 == 1 && v14 != 2)
        {
          goto LABEL_31;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_31;
        }
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1895E676C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOLPRLicensePlateInfoIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 52) & 0xE) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 1) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 16);

  return GEOLPRLicensePlateStructureIsDirty(v3);
}

os_unfair_lock_s *GEOLPRLicensePlateInfoIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOLPRLicensePlateInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1895E6CA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateRegionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 2);
        if ((v14 | v8)) {
          long long v15 = 0;
        }
        else {
          long long v15 = a3;
        }
        LODWORD(v16) = v14;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        char v46 = (v15 == 0) | v14;
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        char v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_67;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_67:
      if (v16)
      {
        char v40 = 1;
        goto LABEL_79;
      }
      if (v15)
      {
        while (1)
        {
          int v41 = *v15++;
          char v42 = 1;
          switch(v41)
          {
            case 0:
              goto LABEL_80;
            case 1:
              goto LABEL_74;
            case 2:
              char v42 = 4;
              goto LABEL_74;
            case 3:
              char v42 = 2;
              goto LABEL_74;
            case 4:
              char v42 = 8;
LABEL_74:
              *(unsigned char *)(a1 + 60) |= v42;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_80;
    }
    unint64_t v29 = v22 >> 3;
    BOOL v30 = (char)v16;
    if ((v46 & 1) == 0)
    {
      int v31 = v15;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30) {
          goto LABEL_59;
        }
        if ((*(unsigned char *)(a1 + 60) & 1) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          v36 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v35;

          --v7;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_76;
        }
        v7 -= *(unsigned char *)(a1 + 60) & 1;
        goto LABEL_65;
      case 2:
        if (!v30) {
          goto LABEL_59;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_76;
          }
          int v45 = (int)v16;
          unint64_t v16 = objc_alloc_init(GEOMapRegionE7);
          if (!GEOMapRegionE7ReadAllFrom((uint64_t)v16, (void *)v3)) {
            goto LABEL_77;
          }
          PBReaderRecallMark();
          char v38 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v16;

          --v7;
          goto LABEL_58;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_76:
          char v40 = 0;
          goto LABEL_78;
        }
        v7 += *(unsigned __int8 *)(a1 + 60) << 29 >> 31;
        goto LABEL_65;
      case 3:
        if (!v30 || (*(unsigned char *)(a1 + 60) & 2) != 0) {
          goto LABEL_59;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_76;
        }
        int v45 = (int)v16;
        unint64_t v16 = objc_alloc_init(GEOLPRLicensePlateInfo);
        if (!GEOLPRLicensePlateInfoReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_77;
        }
        PBReaderRecallMark();
        -[GEOLPRLicensePlateRegion _addNoFlagsLicensePlateInfo:](a1, v16);
        goto LABEL_57;
      case 4:
        if (!v30 || (*(unsigned char *)(a1 + 60) & 8) != 0)
        {
LABEL_59:
          char v39 = PBReaderSkipValueWithTag();
          long long v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v39 & 1) == 0)
          {
LABEL_75:
            char v40 = 0;
            goto LABEL_79;
          }
LABEL_66:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_67;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_76;
        }
        int v45 = (int)v16;
        unint64_t v16 = objc_alloc_init(GEOLPRRestrictionRegion);
        if (GEOLPRRestrictionRegionReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOLPRLicensePlateRegion _addNoFlagsRegion:](a1, v16);
LABEL_57:

LABEL_58:
          LODWORD(v16) = v45;
LABEL_65:
          long long v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_66;
        }
LABEL_77:

        char v40 = 0;
        LOBYTE(v16) = v45;
LABEL_78:
        long long v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_79:
        *(unsigned char *)(a1 + 60) |= 1u;
        *(unsigned char *)(a1 + 60) |= 4u;
        *(unsigned char *)(a1 + 60) |= 2u;
        *(unsigned char *)(a1 + 60) |= 8u;
        if (v40)
        {
LABEL_80:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_81;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_81:
            unint64_t v43 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v37 = PBReaderSkipValueWithTag();
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v37) {
          goto LABEL_75;
        }
        goto LABEL_66;
    }
  }
}

void sub_1895E77B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895E78AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895E7A1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895E7DE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895E896C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLPRLicensePlateRegionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  [a1[4] readAll:1];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = a1[3];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = a1[5];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOLPRLicensePlateRegionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRLicensePlateRegionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLPRLicensePlateRegionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLPRLicensePlateRegionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRLicensePlateRegionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLPRLicensePlateRegionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1895E8CB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateRegionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRLicensePlateRegionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1895E8D14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOLPRLicensePlateRegionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
    uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v2;
        unint64_t v11 = *(void *)&a1[v10];
        if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v11 + 1;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        if (v8++ >= 9)
        {
          unint64_t v9 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v15 = v9 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_39;
      }
      switch((v9 >> 3))
      {
        case 1u:
          if (v5 || v15 != 2) {
            goto LABEL_46;
          }
          int v5 = 1;
          goto LABEL_22;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionE7IsValid(a1)) {
            goto LABEL_46;
          }
          goto LABEL_35;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLPRLicensePlateInfoIsValid(a1)) {
            goto LABEL_46;
          }
          goto LABEL_35;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLPRRestrictionRegionIsValid(a1)) {
            goto LABEL_46;
          }
LABEL_35:
          PBReaderRecallMark();
          goto LABEL_36;
        default:
LABEL_22:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_46:
            PBReaderRecallMark();
            return 0;
          }
LABEL_36:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_39;
          }
          break;
      }
    }
  }
  int v5 = 0;
LABEL_39:
  if (a1[*v4]) {
    BOOL v17 = 1;
  }
  else {
    BOOL v17 = v5 == 0;
  }
  uint64_t v18 = !v17;
  PBReaderRecallMark();
  return v18;
}

uint64_t GEOLPRRestrictionRegionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
    uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_40;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v2;
        unint64_t v11 = *(void *)&a1[v10];
        if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v11 + 1;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        if (v8++ >= 9)
        {
          unint64_t v9 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v15 = v9 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_40;
      }
      switch((v9 >> 3))
      {
        case 1u:
          if (v5 || v15 != 2) {
            goto LABEL_47;
          }
          int v5 = 1;
          goto LABEL_23;
        case 2u:
          if (v15 == 2) {
            goto LABEL_23;
          }
          goto LABEL_47;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionE7IsValid(a1)) {
            goto LABEL_47;
          }
          goto LABEL_36;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLPRDefinedPlateTypeIsValid(a1)) {
            goto LABEL_47;
          }
          goto LABEL_36;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLPRLPRConvertRuleIsValid(a1)) {
            goto LABEL_47;
          }
LABEL_36:
          PBReaderRecallMark();
          goto LABEL_37;
        default:
LABEL_23:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_47:
            PBReaderRecallMark();
            return 0;
          }
LABEL_37:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_40;
          }
          break;
      }
    }
  }
  int v5 = 0;
LABEL_40:
  if (a1[*v4]) {
    BOOL v17 = 1;
  }
  else {
    BOOL v17 = v5 == 0;
  }
  uint64_t v18 = !v17;
  PBReaderRecallMark();
  return v18;
}

void sub_1895E951C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRLicensePlateRegionIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(unsigned char *)(a1 + 60) & 0x1F) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 40);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOLPRRestrictionRegionIsDirty(*(os_unfair_lock_s **)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOLPRLicensePlateRegionIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLPRLicensePlateRegionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1895E9B3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateRestrictionRulesReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1) + (*(unsigned char *)(a1 + 48) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        BOOL v16 = v14 != 0;
        if (v14) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = v15 == 0;
        }
        BOOL v55 = v17;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        long long v19 = (int *)MEMORY[0x1E4F940C8];
        char v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_73;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v27 = v22++ >= 9;
      if (v27)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_73:
      if (v16)
      {
        char v48 = 1;
        goto LABEL_88;
      }
      if (!v15) {
        goto LABEL_89;
      }
      while (1)
      {
        int v51 = *v15++;
        int v50 = v51;
        if (v51 == 1) {
          break;
        }
        if (v50 == 3)
        {
          char v49 = 1;
LABEL_79:
          *(unsigned char *)(a1 + 48) |= v49;
        }
        else if (!v50)
        {
          goto LABEL_89;
        }
      }
      char v49 = 2;
      goto LABEL_79;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v16;
    if (!v55)
    {
      int v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 3) {
      break;
    }
    if (v30 == 2)
    {
      if (v8)
      {
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        while (1)
        {
          uint64_t v42 = *v18;
          unint64_t v43 = *(void *)(v3 + v42);
          if (v43 == -1 || v43 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v44 = *(unsigned char *)(*(void *)(v3 + *v20) + v43);
          *(void *)(v3 + v42) = v43 + 1;
          v41 |= (unint64_t)(v44 & 0x7F) << v39;
          if ((v44 & 0x80) == 0) {
            goto LABEL_63;
          }
          v39 += 7;
          BOOL v27 = v40++ >= 9;
          if (v27)
          {
            LODWORD(v41) = 0;
            goto LABEL_65;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_63:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v41) = 0;
        }
LABEL_65:
        *(_DWORD *)(a1 + 44) = v41;
        goto LABEL_69;
      }
    }
    else
    {
      if (v30 != 1)
      {
        int v45 = PBReaderSkipValueWithTag();
        long long v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v45) {
          goto LABEL_84;
        }
        goto LABEL_69;
      }
      if (v31)
      {
        if ((*(unsigned char *)(a1 + 48) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_85:
            char v48 = 0;
            goto LABEL_87;
          }
          v9 += *(unsigned __int8 *)(a1 + 48) << 30 >> 31;
        }
        else
        {
          uint64_t v36 = PBReaderReadData();
          int v37 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v36;

          --v9;
        }
        goto LABEL_68;
      }
    }
LABEL_60:
    char v46 = PBReaderSkipValueWithTag();
    long long v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v46 & 1) == 0)
    {
LABEL_84:
      char v48 = 0;
      goto LABEL_88;
    }
LABEL_69:
    if (v9) {
      char v47 = 1;
    }
    else {
      char v47 = v16;
    }
    if ((v47 & 1) == 0) {
      goto LABEL_73;
    }
  }
  if (!v31 || (*(unsigned char *)(a1 + 48) & 1) != 0) {
    goto LABEL_60;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_85;
  }
  BOOL v54 = v16;
  char v38 = objc_alloc_init(GEOLPRLicensePlateRegion);
  if (GEOLPRLicensePlateRegionReadAllFrom((uint64_t)v38, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOLPRLicensePlateRestrictionRules _addNoFlagsLicensePlateRegion:](a1, v38);

    BOOL v16 = v54;
LABEL_68:
    long long v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_69;
  }

  char v48 = 0;
  BOOL v16 = v54;
LABEL_87:
  long long v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_88:
  *(unsigned char *)(a1 + 48) |= 2u;
  *(unsigned char *)(a1 + 48) |= 1u;
  if (v48)
  {
LABEL_89:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v16) {
      goto LABEL_90;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v16)
    {
LABEL_90:
      char v52 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_1895EA5D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895EA700(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895EB08C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLPRLicensePlateRestrictionRulesCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 16);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOLPRLicensePlateRestrictionRulesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRLicensePlateRestrictionRulesReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOLPRLicensePlateRestrictionRulesReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOLPRLicensePlateRestrictionRulesReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRLicensePlateRestrictionRulesReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLPRLicensePlateRestrictionRulesCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1895EB320(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateRestrictionRulesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRLicensePlateRestrictionRulesReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1895EB384(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRLicensePlateRestrictionRulesIsValid(char *a1)
{
  v34[1] = *MEMORY[0x1E4F143B8];
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  v34[0] = 0;
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_56;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4)
      {
LABEL_56:
        BOOL v31 = HIDWORD(v34[0]) != 0;
        goto LABEL_50;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 1) {
        break;
      }
      if (v16 == 3)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRLicensePlateRegionIsValid(a1)) {
          goto LABEL_54;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v16 != 2) {
          goto LABEL_45;
        }
        uint64_t v17 = 0;
        char v18 = 1;
        while (1)
        {
          char v19 = v18;
          int v20 = *((_DWORD *)v34 + v17);
          if (!v20) {
            break;
          }
          if (v20 != 2)
          {
            char v18 = 0;
            uint64_t v17 = 1;
            if (v19) {
              continue;
            }
          }
          goto LABEL_54;
        }
        *((_DWORD *)v34 + v17) = 2;
        if (v14) {
          goto LABEL_54;
        }
        unsigned int v25 = 0;
        while (1)
        {
          uint64_t v26 = *v2;
          unint64_t v27 = *(void *)&a1[v26];
          if (v27 == -1 || v27 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v28 = v27 + 1;
          int v29 = *(char *)(*(void *)&a1[*v5] + v27);
          *(void *)&a1[v26] = v28;
          if (v29 < 0 && v25++ <= 8) {
            continue;
          }
          goto LABEL_46;
        }
        a1[*v4] = 1;
      }
LABEL_46:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_56;
      }
    }
    uint64_t v21 = 0;
    char v22 = 1;
    while (1)
    {
      char v23 = v22;
      int v24 = *((_DWORD *)v34 + v21);
      if (!v24) {
        break;
      }
      if (v24 != 1)
      {
        char v22 = 0;
        uint64_t v21 = 1;
        if (v23) {
          continue;
        }
      }
      goto LABEL_54;
    }
    *((_DWORD *)v34 + v21) = 1;
    if (v14 != 2)
    {
LABEL_54:
      PBReaderRecallMark();
      return 0;
    }
LABEL_45:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_54;
    }
    goto LABEL_46;
  }
  BOOL v31 = 0;
LABEL_50:
  if (a1[*v4]) {
    BOOL v32 = 0;
  }
  else {
    BOOL v32 = v31;
  }
  PBReaderRecallMark();
  return v32;
}

void sub_1895EB8C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRLicensePlateRestrictionRulesIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 48) & 7) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 48) & 1) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 16);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOLPRLicensePlateRegionIsDirty(*(os_unfair_lock_s **)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOLPRLicensePlateRestrictionRulesIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLPRLicensePlateRestrictionRulesIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1895EBDC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895EC234(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateStructureReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    int v14 = 0;
  }
  else {
    int v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  unint64_t v16 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
  char v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_62;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      unint64_t v23 = *(void *)(v3 + v22);
      if (v23 == -1 || v23 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        char v40 = 1;
        goto LABEL_72;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            int v42 = *v14++;
            int v41 = v42;
            if (v42 != 1 && v41 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v41;
          }
        }
        while (v41);
      }
      goto LABEL_73;
    }
    unint64_t v28 = v21 >> 3;
    BOOL v29 = v13;
    if (!v15)
    {
      unint64_t v30 = v14;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    if (v28 != 2)
    {
      if (v28 != 1)
      {
        int v37 = PBReaderSkipValueWithTag();
        uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v37) {
          goto LABEL_70;
        }
        goto LABEL_58;
      }
      if (v29)
      {
        if ((*(unsigned char *)(a1 + 44) & 1) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 16;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_71;
        }
        v9 -= *(unsigned char *)(a1 + 44) & 1;
LABEL_57:
        uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_58:
        if (v9) {
          char v39 = 1;
        }
        else {
          char v39 = v13;
        }
        if ((v39 & 1) == 0) {
          goto LABEL_62;
        }
        continue;
      }
LABEL_51:
      char v38 = PBReaderSkipValueWithTag();
      uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
      if ((v38 & 1) == 0)
      {
LABEL_70:
        char v40 = 0;
        goto LABEL_72;
      }
      goto LABEL_58;
    }
    break;
  }
  if (!v29) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0)
  {
    uint64_t v34 = PBReaderReadString();
    uint64_t v35 = 24;
LABEL_48:
    uint64_t v36 = *(void **)(a1 + v35);
    *(void *)(a1 + v35) = v34;

    uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
    --v9;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_57;
  }
LABEL_71:
  char v40 = 0;
  uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v40)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if (!v13) {
      return v3;
    }
    goto LABEL_74;
  }
  unint64_t v3 = 0;
  if (v13)
  {
LABEL_74:
    unint64_t v43 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1895EC778(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895ECB9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateStructureReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRLicensePlateStructureReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLPRLicensePlateStructureReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLPRLicensePlateStructureReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRLicensePlateStructureReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1895ECD2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateStructureReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRLicensePlateStructureReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1895ECD90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895ECF20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRLicensePlateStructureIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_1895ED1C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRPlateMatchConditionReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v17 = PBReaderReadString();
          if (v17) {
            [a1 addPatterns:v17];
          }
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_26;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v18 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v18 = 0;
  }
  objc_sync_exit(v3);

  return v18;
}

void sub_1895ED938(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRPlateMatchConditionReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLPRPlateMatchConditionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1895ED99C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRRestrictionRegionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFFFFFDFFFEFFFCLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 3);
        if ((v14 | v8)) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        LODWORD(v16) = v14;
        char v48 = (v15 == 0) | v14;
        uint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        BOOL v18 = (int *)MEMORY[0x1E4F940C8];
        char v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_74;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_74:
      if (v16)
      {
        char v42 = 1;
        goto LABEL_88;
      }
      if (v15)
      {
        while (1)
        {
          int v44 = *v15++;
          char v43 = 4;
          switch(v44)
          {
            case 0:
              goto LABEL_89;
            case 1:
              goto LABEL_82;
            case 2:
              char v43 = 16;
              goto LABEL_82;
            case 3:
              char v43 = 8;
              goto LABEL_82;
            case 4:
              char v43 = 2;
              goto LABEL_82;
            case 5:
              char v43 = 1;
LABEL_82:
              *(unsigned char *)(a1 + 68) |= v43;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_89;
    }
    unint64_t v29 = v22 >> 3;
    BOOL v30 = (char)v16;
    if ((v48 & 1) == 0)
    {
      int v31 = v15;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30) {
          goto LABEL_63;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 32;
          goto LABEL_45;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_85;
        }
        char v41 = 32 * *(unsigned char *)(a1 + 68);
        goto LABEL_71;
      case 2:
        if (!v30) {
          goto LABEL_63;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 48;
LABEL_45:
          char v38 = *(void **)(a1 + v36);
          *(void *)(a1 + v36) = v35;

          --v7;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_85;
        }
        char v41 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_71;
      case 3:
        if (!v30) {
          goto LABEL_63;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_85;
          }
          int v47 = (int)v16;
          unint64_t v16 = objc_alloc_init(GEOMapRegionE7);
          if (!GEOMapRegionE7ReadAllFrom((uint64_t)v16, (void *)v3)) {
            goto LABEL_86;
          }
          PBReaderRecallMark();
          char v39 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v16;

          --v7;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_85:
          char v42 = 0;
          goto LABEL_87;
        }
        char v41 = 16 * *(unsigned char *)(a1 + 68);
LABEL_71:
        v7 += v41 >> 7;
        goto LABEL_72;
      case 4:
        if (!v30 || (*(unsigned char *)(a1 + 68) & 2) != 0) {
          goto LABEL_63;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_85;
        }
        int v47 = (int)v16;
        unint64_t v16 = objc_alloc_init(GEOLPRDefinedPlateType);
        if (!GEOLPRDefinedPlateTypeReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_86;
        }
        PBReaderRecallMark();
        -[GEOLPRRestrictionRegion _addNoFlagsDefinedPlateTypes:](a1, v16);
        goto LABEL_61;
      case 5:
        if (!v30 || (*(unsigned char *)(a1 + 68) & 1) != 0)
        {
LABEL_63:
          char v40 = PBReaderSkipValueWithTag();
          BOOL v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v40 & 1) == 0)
          {
LABEL_84:
            char v42 = 0;
            goto LABEL_88;
          }
LABEL_73:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_74;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_85;
        }
        int v47 = (int)v16;
        unint64_t v16 = objc_alloc_init(GEOLPRLPRConvertRule);
        if (GEOLPRLPRConvertRuleReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOLPRRestrictionRegion _addNoFlagsConvertRule:](a1, v16);
LABEL_61:

LABEL_62:
          LODWORD(v16) = v47;
LABEL_72:
          BOOL v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_73;
        }
LABEL_86:

        char v42 = 0;
        LOBYTE(v16) = v47;
LABEL_87:
        BOOL v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_88:
        *(unsigned char *)(a1 + 68) |= 4u;
        *(unsigned char *)(a1 + 68) |= 0x10u;
        *(unsigned char *)(a1 + 68) |= 8u;
        *(unsigned char *)(a1 + 68) |= 2u;
        *(unsigned char *)(a1 + 68) |= 1u;
        if (v42)
        {
LABEL_89:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_90;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_90:
            int v45 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v37 = PBReaderSkipValueWithTag();
        BOOL v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v37) {
          goto LABEL_84;
        }
        goto LABEL_73;
    }
  }
}

void sub_1895EE6A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895EE7A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895EE90C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895EEA7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895EEE40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895EFA68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLPRRestrictionRegionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  [a1[5] readAll:1];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = a1[3];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = a1[2];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOLPRRestrictionRegionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRRestrictionRegionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLPRRestrictionRegionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLPRRestrictionRegionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRRestrictionRegionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLPRRestrictionRegionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1895EFDAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRRestrictionRegionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRRestrictionRegionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1895EFE10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895F0104(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRRestrictionRegionIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  if ((*(unsigned char *)(a1 + 68) & 0x3F) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 68) & 1) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 16);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOLPRLPRConvertRuleIsDirty(*(os_unfair_lock_s **)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOLPRRestrictionRegionIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLPRRestrictionRegionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1895F0758(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRTargetCharReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 16) |= 1u;
          while (1)
          {
            uint64_t v25 = *v4;
            unint64_t v26 = *(void *)&v3[v25];
            if (v26 == -1 || v26 >= *(void *)&v3[*v5]) {
              break;
            }
            char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v26);
            *(void *)&v3[v25] = v26 + 1;
            v19 |= (unint64_t)(v27 & 0x7F) << v23;
            if ((v27 & 0x80) == 0) {
              goto LABEL_42;
            }
            v23 += 7;
            BOOL v14 = v24++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v19) = 0;
          }
LABEL_44:
          LODWORD(v19) = -(v19 & 1) ^ ((int)v19 >> 1);
          unint64_t v28 = &OBJC_IVAR___GEOLPRTargetChar__charIndex;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
            continue;
          }
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 16) |= 2u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_38;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_40;
            }
          }
          v3[*v6] = 1;
LABEL_38:
          if (v3[*v6]) {
            LODWORD(v19) = 0;
          }
LABEL_40:
          unint64_t v28 = &OBJC_IVAR___GEOLPRTargetChar__type;
        }
        *(_DWORD *)(a1 + *v28) = v19;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_1895F1410(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRTargetCharReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLPRTargetCharReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1895F1474(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895F1A1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRTimeConditionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1) + (*(unsigned char *)(a1 + 76) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  BOOL v12 = (v9 & 1 | v10) != 0;
  if (((v9 & 1 | v10) != 0) | v7 & 1) {
    char v13 = 0;
  }
  else {
    char v13 = a3;
  }
  BOOL v14 = (int *)MEMORY[0x1E4F940E8];
  int v15 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6))
  {
LABEL_101:
    if (v12)
    {
      char v59 = 1;
      goto LABEL_103;
    }
    if (!v13) {
      goto LABEL_114;
    }
    while (1)
    {
      int v61 = *v13++;
      int v60 = v61;
      if (v61 == 1) {
        break;
      }
      if (v60 == 2)
      {
        char v62 = 1;
LABEL_113:
        *(unsigned char *)(a1 + 76) |= v62;
      }
      else if (!v60)
      {
        goto LABEL_114;
      }
    }
    char v62 = 2;
    goto LABEL_113;
  }
  if (v13) {
    BOOL v16 = (v9 & 1 | v10) != 0;
  }
  else {
    BOOL v16 = 1;
  }
  if (v8) {
    BOOL v17 = 1;
  }
  else {
    BOOL v17 = (v9 & 1 | v10) != 0;
  }
  BOOL v65 = v17;
  unsigned int v18 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    if (*(unsigned char *)(v3 + *v15)) {
      goto LABEL_101;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v14;
      unint64_t v23 = *(void *)(v3 + v22);
      if (v23 == -1 || v23 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0) {
        goto LABEL_30;
      }
      v19 += 7;
      BOOL v25 = v20++ >= 9;
      if (v25)
      {
        unint64_t v21 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_32;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_30:
    int v26 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v21 = 0;
    }
LABEL_32:
    int v27 = v21 & 7;
    if (v26 || v27 == 4) {
      goto LABEL_101;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v12;
    if (!v16)
    {
      int v31 = v13;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 == 2) {
      break;
    }
    if (v29 != 1)
    {
      if (!PBReaderSkipValueWithTag()) {
        goto LABEL_117;
      }
      goto LABEL_78;
    }
    if (!v30 || (*(unsigned char *)(a1 + 76) & 2) != 0) {
      goto LABEL_77;
    }
    if (v27 != 2)
    {
      char v47 = 0;
      unsigned int v48 = 0;
      uint64_t v49 = 0;
      while (1)
      {
        uint64_t v50 = *v14;
        unint64_t v51 = *(void *)(v3 + v50);
        if (v51 == -1 || v51 >= *(void *)(v3 + *v6)) {
          break;
        }
        char v52 = *(unsigned char *)(*(void *)(v3 + *v18) + v51);
        *(void *)(v3 + v50) = v51 + 1;
        v49 |= (unint64_t)(v52 & 0x7F) << v47;
        if (v52 < 0)
        {
          v47 += 7;
          BOOL v25 = v48++ >= 9;
          if (!v25) {
            continue;
          }
        }
        goto LABEL_98;
      }
      *(unsigned char *)(v3 + *v15) = 1;
LABEL_98:
      PBRepeatedInt32Add();
      goto LABEL_78;
    }
    if (!PBReaderPlaceMark()) {
      goto LABEL_117;
    }
    while (*(void *)(v3 + *v14) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v15))
    {
      char v35 = 0;
      unsigned int v36 = 0;
      uint64_t v37 = 0;
      while (1)
      {
        uint64_t v38 = *v14;
        unint64_t v39 = *(void *)(v3 + v38);
        if (v39 == -1 || v39 >= *(void *)(v3 + *v6)) {
          break;
        }
        char v40 = *(unsigned char *)(*(void *)(v3 + *v18) + v39);
        *(void *)(v3 + v38) = v39 + 1;
        v37 |= (unint64_t)(v40 & 0x7F) << v35;
        if (v40 < 0)
        {
          v35 += 7;
          BOOL v25 = v36++ >= 9;
          if (!v25) {
            continue;
          }
        }
        goto LABEL_59;
      }
      *(unsigned char *)(v3 + *v15) = 1;
LABEL_59:
      PBRepeatedInt32Add();
    }
LABEL_81:
    PBReaderRecallMark();
    if (!v65) {
      goto LABEL_101;
    }
LABEL_79:
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6)) {
      goto LABEL_101;
    }
  }
  if (v30 && (*(unsigned char *)(a1 + 76) & 1) == 0)
  {
    if (v27 == 2)
    {
      if (!PBReaderPlaceMark()) {
        goto LABEL_117;
      }
      while (*(void *)(v3 + *v14) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v15))
      {
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        while (1)
        {
          uint64_t v44 = *v14;
          unint64_t v45 = *(void *)(v3 + v44);
          if (v45 == -1 || v45 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v18) + v45);
          *(void *)(v3 + v44) = v45 + 1;
          v43 |= (unint64_t)(v46 & 0x7F) << v41;
          if (v46 < 0)
          {
            v41 += 7;
            BOOL v25 = v42++ >= 9;
            if (!v25) {
              continue;
            }
          }
          goto LABEL_74;
        }
        *(unsigned char *)(v3 + *v15) = 1;
LABEL_74:
        PBRepeatedUInt32Add();
      }
      goto LABEL_81;
    }
    char v53 = 0;
    unsigned int v54 = 0;
    uint64_t v55 = 0;
    while (1)
    {
      uint64_t v56 = *v14;
      unint64_t v57 = *(void *)(v3 + v56);
      if (v57 == -1 || v57 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v58 = *(unsigned char *)(*(void *)(v3 + *v18) + v57);
      *(void *)(v3 + v56) = v57 + 1;
      v55 |= (unint64_t)(v58 & 0x7F) << v53;
      if (v58 < 0)
      {
        v53 += 7;
        BOOL v25 = v54++ >= 9;
        if (!v25) {
          continue;
        }
      }
      goto LABEL_100;
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_100:
    PBRepeatedUInt32Add();
LABEL_78:
    if (!v65) {
      goto LABEL_101;
    }
    goto LABEL_79;
  }
LABEL_77:
  if (PBReaderSkipValueWithTag()) {
    goto LABEL_78;
  }
LABEL_117:
  char v59 = 0;
LABEL_103:
  *(unsigned char *)(a1 + 76) |= 2u;
  *(unsigned char *)(a1 + 76) |= 1u;
  if (v59)
  {
LABEL_114:
    unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
    if (v12) {
      goto LABEL_115;
    }
    return v3;
  }
  unint64_t v3 = 0;
  if (!v12) {
    return v3;
  }
LABEL_115:
  v63 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = 0;

  return v3;
}

void sub_1895F2550(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895F2EE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRTimeConditionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRTimeConditionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOLPRTimeConditionReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOLPRTimeConditionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRTimeConditionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1895F3074(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRTimeConditionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRTimeConditionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1895F30D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRTimeConditionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_59;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_59;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_61;
          }
LABEL_38:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v26 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v27 = *v2;
              unint64_t v28 = *(void *)&a1[v27];
              if (v28 == -1 || v28 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v29 = v28 + 1;
              int v30 = *(char *)(*(void *)&a1[*v5] + v28);
              *(void *)&a1[v27] = v29;
              if (v30 < 0)
              {
                BOOL v12 = v26++ >= 9;
                if (!v12) {
                  continue;
                }
              }
              goto LABEL_38;
            }
            a1[*v4] = 1;
          }
LABEL_57:
          PBReaderRecallMark();
          goto LABEL_58;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_61;
        }
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0)
          {
            unsigned int v20 = v14++;
            if (v20 <= 8) {
              continue;
            }
          }
          goto LABEL_58;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_58;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_61;
      }
LABEL_58:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_59;
      }
    }
    if (v14 == 2)
    {
      if (!PBReaderPlaceMark())
      {
LABEL_61:
        PBReaderRecallMark();
        return 0;
      }
LABEL_48:
      while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
      {
        unsigned int v31 = a1[*v4];
        if (a1[*v4]) {
          break;
        }
        while (1)
        {
          uint64_t v32 = *v2;
          unint64_t v33 = *(void *)&a1[v32];
          if (v33 == -1 || v33 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v34 = v33 + 1;
          int v35 = *(char *)(*(void *)&a1[*v5] + v33);
          *(void *)&a1[v32] = v34;
          if (v35 < 0)
          {
            BOOL v12 = v31++ >= 9;
            if (!v12) {
              continue;
            }
          }
          goto LABEL_48;
        }
        a1[*v4] = 1;
      }
      goto LABEL_57;
    }
    if ((v8 & 7) != 0) {
      goto LABEL_61;
    }
    while (1)
    {
      uint64_t v21 = *v2;
      unint64_t v22 = *(void *)&a1[v21];
      if (v22 == -1 || v22 >= *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      unint64_t v23 = v22 + 1;
      int v24 = *(char *)(*(void *)&a1[*v5] + v22);
      *(void *)&a1[v21] = v23;
      if (v24 < 0)
      {
        unsigned int v25 = v14++;
        if (v25 <= 8) {
          continue;
        }
      }
      goto LABEL_58;
    }
  }
LABEL_59:
  BOOL v36 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v36;
}

void sub_1895F363C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRTimeConditionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(unsigned char *)(a1 + 76) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_1895F3940(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895F3C9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRValueMappingReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -3:
        char v7 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        char v14 = v10 | (v11 > 1);
        if (v10 & 1 | (v11 > 1) | v7 & 1) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        uint64_t v16 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v17 = (int *)MEMORY[0x1E4F940C8];
        char v40 = (v8 != 0) | v14;
        unint64_t v18 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_57;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      unint64_t v23 = *(void *)(v3 + v22);
      if (v23 == -1 || v23 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0) {
        goto LABEL_23;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_23:
    int v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_25:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_57:
      if (v14)
      {
        char v35 = 1;
        goto LABEL_66;
      }
      if (v15)
      {
        while (1)
        {
          int v37 = *v15++;
          char v36 = 4;
          switch(v37)
          {
            case 0:
              goto LABEL_67;
            case 1:
              goto LABEL_63;
            case 2:
              char v36 = 1;
              goto LABEL_63;
            case 3:
              char v36 = 2;
LABEL_63:
              *(unsigned char *)(a1 + 52) |= v36;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_67;
    }
    unint64_t v28 = v21 >> 3;
    BOOL v29 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      int v30 = v15;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    if (v28 == 3) {
      break;
    }
    if (v28 == 2)
    {
      if (v29 && (*(unsigned char *)(a1 + 52) & 1) == 0)
      {
        PBReaderReadString();
        unint64_t v34 = (GEOLPRTimeCondition *)objc_claimAutoreleasedReturnValue();
        if (v34) {
          -[GEOLPRValueMapping _addNoFlagsMappedValue:](a1, v34);
        }
        goto LABEL_52;
      }
    }
    else
    {
      if (v28 != 1)
      {
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_65;
        }
        goto LABEL_56;
      }
      if (v29 && (*(unsigned char *)(a1 + 52) & 4) == 0)
      {
        PBReaderReadString();
        unint64_t v34 = (GEOLPRTimeCondition *)objc_claimAutoreleasedReturnValue();
        if (v34) {
          -[GEOLPRValueMapping _addNoFlagsValue:](a1, v34);
        }
        goto LABEL_52;
      }
    }
LABEL_55:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_65:
      char v35 = 0;
      goto LABEL_66;
    }
LABEL_56:
    if ((v40 & 1) == 0) {
      goto LABEL_57;
    }
  }
  if (!v29 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
    goto LABEL_55;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_65;
  }
  unint64_t v34 = objc_alloc_init(GEOLPRTimeCondition);
  if (GEOLPRTimeConditionReadAllFrom((uint64_t)v34, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEOLPRValueMapping _addNoFlagsTimeConditions:](a1, v34);
LABEL_52:

    unint64_t v17 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_56;
  }

  char v35 = 0;
  unint64_t v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
  *(unsigned char *)(a1 + 52) |= 4u;
  *(unsigned char *)(a1 + 52) |= 1u;
  *(unsigned char *)(a1 + 52) |= 2u;
  if (v35)
  {
LABEL_67:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if ((v14 & 1) == 0) {
      return v3;
    }
    goto LABEL_68;
  }
  unint64_t v3 = 0;
  if (v14)
  {
LABEL_68:
    uint64_t v38 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1895F44F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895F48B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895F534C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLPRValueMappingCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOLPRValueMappingReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRValueMappingReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOLPRValueMappingReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOLPRValueMappingReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRValueMappingReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLPRValueMappingCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1895F55E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRValueMappingReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRValueMappingReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1895F5644(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895F5984(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRValueMappingIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 52) & 0xF) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOLPRTimeConditionIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOLPRValueMappingIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLPRValueMappingIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1895F6048(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

__CFString *GEOMapDataSubscriptionDataTypeAsString(__int16 a1)
{
  uint64_t v2 = [MEMORY[0x1E4F1CA48] array];
  id v3 = v2;
  if (a1)
  {
    [v2 addObject:@"mapMatchingRoads"];
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_3;
  }
  [v3 addObject:@"mapMatchingBuildings"];
  if ((a1 & 4) == 0)
  {
LABEL_4:
    if ((a1 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  [v3 addObject:@"mapMatchingRunningTracks"];
  if ((a1 & 8) == 0)
  {
LABEL_5:
    if ((a1 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  [v3 addObject:@"mapMatchingRayTracing"];
  if ((a1 & 0x400) == 0)
  {
LABEL_6:
    if ((a1 & 0x800) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_14:
  [v3 addObject:@"offline"];
  if ((a1 & 0x800) != 0) {
LABEL_7:
  }
    [v3 addObject:@"resources"];
LABEL_8:
  if ([v3 count])
  {
    uint64_t v4 = [v3 componentsJoinedByString:@"|"];
  }
  else
  {
    uint64_t v4 = @"<unknown>";
  }

  return v4;
}

__CFString *GEOMapDataSubscriptionPolicyAsString(uint64_t a1)
{
  id v1 = @"<unknown>";
  if (a1 == 1) {
    id v1 = @"user-initiated";
  }
  if (a1) {
    return v1;
  }
  else {
    return @"opportunistic";
  }
}

void _GEOEnumerateTileSetsForSubscriptionDataTypes(void *a1, char a2, void *a3)
{
  id v5 = a1;
  long long v6 = a3;
  char v12 = 0;
  if (a2)
  {
    long long v7 = [v5 activeTileGroup];
    long long v8 = [v7 activeTileSetForStyle:53];

    if (v8)
    {
      v6[2](v6, 1, v8, (([v8 style] & 0x3FFF | ((objc_msgSend(v8, "size") & 0xF) << 14) & 0xFFC3FFFF | ((objc_msgSend(v8, "scale") & 0xF) << 18)) << 8) | 1, &v12);
      if (v12) {
        goto LABEL_16;
      }
    }
  }
  if ((a2 & 2) != 0)
  {
    long long v9 = [v5 activeTileGroup];
    long long v8 = [v9 activeTileSetForStyle:11];

    if (v8)
    {
      v6[2](v6, 2, v8, (([v8 style] & 0x3FFF | ((objc_msgSend(v8, "size") & 0xF) << 14) & 0xFFC3FFFF | ((objc_msgSend(v8, "scale") & 0xF) << 18)) << 8) | 1, &v12);
      if (v12) {
        goto LABEL_16;
      }
    }
  }
  if ((a2 & 4) == 0) {
    goto LABEL_13;
  }
  long long v10 = [v5 activeTileGroup];
  long long v8 = [v10 activeTileSetForStyle:62];

  if (v8)
  {
    v6[2](v6, 4, v8, (([v8 style] & 0x3FFF | ((objc_msgSend(v8, "size") & 0xF) << 14) & 0xFFC3FFFF | ((objc_msgSend(v8, "scale") & 0xF) << 18)) << 8) | 1, &v12);
    if (v12)
    {
LABEL_16:

      goto LABEL_17;
    }
  }

LABEL_13:
  if ((a2 & 8) != 0)
  {
    uint64_t v11 = [v5 activeTileGroup];
    long long v8 = [v11 activeTileSetForStyle:89];

    if (v8) {
      v6[2](v6, 8, v8, (([v8 style] & 0x3FFF | ((objc_msgSend(v8, "size") & 0xF) << 14) & 0xFFC3FFFF | ((objc_msgSend(v8, "scale") & 0xF) << 18)) << 8) | 1, &v12);
    }
    goto LABEL_16;
  }
LABEL_17:
}

void _GEOEnumerateMapDataSubscriptionTileDataTypes(void *a1)
{
  id v1 = a1;
  char v2 = 0;
  v1[2](v1, 1, &v2);
  if (!v2)
  {
    v1[2](v1, 2, &v2);
    if (!v2)
    {
      v1[2](v1, 4, &v2);
      if (!v2) {
        v1[2](v1, 8, &v2);
      }
    }
  }
}

void sub_1895F77D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1895F7AE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1895F8024(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1895F80B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1895F824C(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1895F83F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGroundMetadataTileReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFFFFFCFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 72) & 8) != 0));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          uint64_t v16 = 0;
        }
        else {
          uint64_t v16 = a3;
        }
        char v51 = (v16 == 0) | v15;
        unint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v19 = (int *)MEMORY[0x1E4F940B8];
        char v50 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_83;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_83:
      if (v15)
      {
        char v44 = 1;
        goto LABEL_95;
      }
      if (v16)
      {
        while (1)
        {
          int v45 = *v16++;
          char v46 = 16;
          switch(v45)
          {
            case 0:
              goto LABEL_96;
            case 1:
              goto LABEL_91;
            case 3:
              char v46 = 32;
              goto LABEL_91;
            case 4:
              char v46 = 2;
              goto LABEL_91;
            case 5:
              char v46 = 4;
              goto LABEL_91;
            case 6:
              char v46 = 8;
LABEL_91:
              *(unsigned char *)(a1 + 72) |= v46;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_96;
    }
    unint64_t v29 = v22 >> 3;
    BOOL v30 = v15;
    if ((v51 & 1) == 0)
    {
      int v31 = v16;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30 || (*(unsigned char *)(a1 + 72) & 0x10) != 0) {
          goto LABEL_73;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_94;
        }
        uint64_t v49 = objc_alloc_init(GEOPDPhotoPosition);
        if (!GEOPDPhotoPositionReadAllFrom((uint64_t)v49, (void *)v3, v9 & 1)) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        -[GEOPDGroundMetadataTile _addNoFlagsPhotoPosition:](a1, v49);
        goto LABEL_59;
      case 3:
        if (!v30 || (*(unsigned char *)(a1 + 72) & 0x20) != 0) {
          goto LABEL_73;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_94;
        }
        uint64_t v49 = objc_alloc_init(GEOPDStorefrontBundle);
        if (!GEOPDStorefrontBundleReadAllFrom((uint64_t)v49, (void *)v3, v9 & 1)) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        -[GEOPDGroundMetadataTile _addNoFlagsStorefront:](a1, v49);
        goto LABEL_59;
      case 4:
        if (!v30 || (*(unsigned char *)(a1 + 72) & 2) != 0) {
          goto LABEL_73;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_94;
        }
        uint64_t v49 = objc_alloc_init(GEOPDGroundDataBuild);
        if (!GEOPDGroundDataBuildReadAllFrom((uint64_t)v49, (void *)v3, v9 & 1)) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        -[GEOPDGroundMetadataTile _addNoFlagsBuildTable:](a1, v49);
        goto LABEL_59;
      case 5:
        if (!v30 || (*(unsigned char *)(a1 + 72) & 4) != 0) {
          goto LABEL_73;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_94;
        }
        uint64_t v49 = objc_alloc_init(GEOPDCameraMetadata);
        if (!GEOPDCameraMetadataReadAllFrom((uint64_t)v49, (void *)v3, v9 & 1)) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        -[GEOPDGroundMetadataTile _addNoFlagsCameraMetadataTable:](a1, v49);
LABEL_59:

        goto LABEL_81;
      case 6:
        if (!v30) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 72) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_94;
          }
          v7 += *(unsigned __int8 *)(a1 + 72) << 28 >> 31;
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_94;
        }
        uint64_t v49 = objc_alloc_init(GEOTileCoordinate);
        if (GEOTileCoordinateReadAllFrom((uint64_t)v49, (void *)v3))
        {
          PBReaderRecallMark();
          char v36 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v49;

          --v7;
LABEL_81:
          char v15 = v50;
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_82:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_83;
          }
          continue;
        }
LABEL_93:

LABEL_94:
        char v44 = 0;
        char v15 = v50;
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
        *(unsigned char *)(a1 + 72) |= 0x10u;
        *(unsigned char *)(a1 + 72) |= 0x20u;
        *(unsigned char *)(a1 + 72) |= 2u;
        *(unsigned char *)(a1 + 72) |= 4u;
        *(unsigned char *)(a1 + 72) |= 8u;
        if (v44)
        {
LABEL_96:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_97;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_97:
            char v47 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 7:
        if (v8)
        {
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v39 = 0;
          *(unsigned char *)(a1 + 72) |= 1u;
          while (1)
          {
            uint64_t v40 = *v17;
            unint64_t v41 = *(void *)(v3 + v40);
            if (v41 == -1 || v41 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v41);
            *(void *)(v3 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if ((v42 & 0x80) == 0) {
              goto LABEL_76;
            }
            v37 += 7;
            BOOL v26 = v38++ >= 9;
            if (v26)
            {
              LODWORD(v39) = 0;
              goto LABEL_78;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_76:
          if (*(unsigned char *)(v3 + *v18)) {
            LODWORD(v39) = 0;
          }
LABEL_78:
          *(_DWORD *)(a1 + 68) = v39;
        }
        else
        {
LABEL_73:
          char v43 = PBReaderSkipValueWithTag();
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v50;
          if ((v43 & 1) == 0)
          {
LABEL_92:
            char v44 = 0;
            goto LABEL_95;
          }
        }
        goto LABEL_82;
      default:
        int v35 = PBReaderSkipValueWithTag();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v50;
        if (!v35) {
          goto LABEL_92;
        }
        goto LABEL_82;
    }
  }
}

void sub_1895F8CE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895F8E80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895F9024(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895F91BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895F9C24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGroundMetadataTileReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDGroundMetadataTileReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 56) = [v6 position];
      *(_DWORD *)(a1 + 60) = [v6 length];
      unint64_t Specified = GEOPDGroundMetadataTileReadSpecified(a1, (unint64_t)v6, GEOPDGroundMetadataTileReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_1895F9DA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895FA3B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895FA9B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895FB18C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1895FB614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1895FC034(_Unwind_Exception *a1)
{
  for (uint64_t i = 168; i != -32; i -= 40)

  MEMORY[0x18C11F580](v2, 0x20C40960023A9);
  __cxa_guard_abort(&qword_1EB29F788);

  _Unwind_Resume(a1);
}

void *std::vector<_RoundingInfo>::vector[abi:ne180100](void *a1, uint64_t a2, unint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    if (a3 >= 0x666666666666667) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v5 = 5 * a3;
    id v6 = (char *)operator new(40 * a3);
    uint64_t v7 = 0;
    *a1 = v6;
    a1[1] = v6;
    a1[2] = &v6[8 * v5];
    uint64_t v8 = a2 + 8 * v5;
    do
    {
      uint64_t v9 = a2 + v7;
      uint64_t v10 = &v6[v7];
      *(void *)&v6[v7] = *(void *)(a2 + v7);
      *((void *)v10 + 1) = *(id *)(a2 + v7 + 8);
      uint64_t v11 = *(void *)(a2 + v7 + 32);
      *((_OWORD *)v10 + 1) = *(_OWORD *)(a2 + v7 + 16);
      *((void *)v10 + 4) = v11;
      v7 += 40;
    }
    while (v9 + 40 != v8);
    a1[1] = &v6[v7];
  }
  return a1;
}

void sub_1895FC3B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_1895FC4DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::vector<_RoundingInfo>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  id v1 = *a1;
  uint64_t v2 = (id *)**a1;
  if (v2)
  {
    uint64_t v4 = (id *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        id v6 = v4 - 5;

        uint64_t v4 = v6;
      }
      while (v6 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_1895FC690(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1895FCFB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

id GEOGetGEOComposedRouteLog(void)
{
  if (qword_1EB29F798 != -1) {
    dispatch_once(&qword_1EB29F798, &__block_literal_global_1189);
  }
  v0 = (void *)_MergedGlobals_205;

  return v0;
}

{
  void *v0;
  uint64_t vars8;

  if (qword_1EB29FD78 != -1) {
    dispatch_once(&qword_1EB29FD78, &__block_literal_global_333);
  }
  v0 = (void *)_MergedGlobals_256;

  return v0;
}

{
  void *v0;
  uint64_t vars8;

  if (qword_1EB29FFD0 != -1) {
    dispatch_once(&qword_1EB29FFD0, &__block_literal_global_136);
  }
  v0 = (void *)_MergedGlobals_278;

  return v0;
}

{
  void *v0;
  uint64_t vars8;

  if (qword_1EB2A0388 != -1) {
    dispatch_once(&qword_1EB2A0388, &__block_literal_global_171);
  }
  v0 = (void *)_MergedGlobals_310;

  return v0;
}

void sub_1895FD674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1895FE220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1895FE4FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1895FE594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1895FE850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1895FEAA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1895FED78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1895FEFDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1895FF5E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1895FF9E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1895FFB40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1895FFCF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  a9.super_class = (Class)GEOComposedRoute;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1895FFDB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1895FFE5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1895FFFA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189600050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1896000B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189600120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1896001B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189600218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1896003CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189600518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189600678(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189600774(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896007F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189600854(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896009DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189600B9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189600D68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189600E28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189600F00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189600F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18960107C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18960124C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896013AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_189601478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_189601680(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189601844(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189601F58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18960202C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189602284(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189602454(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18960262C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189602778(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189602868(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189602920(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189602D6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18960304C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Unwind_Resume(a1);
}

void sub_189603160(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189603334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1896033DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189603478(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896035C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189603768(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189603A44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189603B9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189603C94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189603D7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189603E18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189603F0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896041A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896043D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18960446C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189604A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a41, 8);
  _Block_object_dispose((const void *)(v43 - 256), 8);
  _Block_object_dispose((const void *)(v43 - 224), 8);
  _Block_object_dispose((const void *)(v43 - 192), 8);

  _Unwind_Resume(a1);
}

void sub_189604F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_1896054EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896058C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id a32)
{
  _Block_object_dispose(&a18, 8);
  std::vector<-[GEOComposedRoute roadFeaturesForRouteCoordinate:distanceAhead:handler:]::FeatureWithEndPoints>::~vector[abi:ne180100](v33);
  _Block_object_dispose(&a27, 8);

  _Unwind_Resume(a1);
}

__n128 __Block_byref_object_copy__99(__n128 *a1, __n128 *a2)
{
  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  __n128 result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void **__Block_byref_object_dispose__100(uint64_t a1)
{
  return std::vector<-[GEOComposedRoute roadFeaturesForRouteCoordinate:distanceAhead:handler:]::FeatureWithEndPoints>::~vector[abi:ne180100]((void **)(a1 + 48));
}

void sub_189605B28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_189605E58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18960605C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1896066FC(_Unwind_Exception *a1)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(a1);
}

void sub_189606A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_189606BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_189606DAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189606FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_18960723C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189607314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_189607460(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18960751C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_189607634(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189607700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189607824(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189607934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_189607AA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_189607F24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1896080D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18960818C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189608254(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896082F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18960836C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896083F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18960866C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896087A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896088B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189608A1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189608B18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189608C0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189608E80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189608F80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189609128(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18960948C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1896097B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_18960AEB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_18960B89C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18960BB48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_18960BE84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18960C4F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL25GEOGetGEOComposedRouteLogv_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOComposedRoute");
  id v1 = (void *)_MergedGlobals_205;
  _MergedGlobals_205 = (uint64_t)v0;
}

void sub_18960D728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_18960DB8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_18960DD6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18960E1BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_18960E820(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_18960EA38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18960F4D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18960F5FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18960F678(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18960F87C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18960FBB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18960FCAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18960FE20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18961005C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896101E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896103BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18961053C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18961077C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896109F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id GEOGetGEORouteMatcherLog(void)
{
  if (qword_1E9117EB8 != -1) {
    dispatch_once(&qword_1E9117EB8, &__block_literal_global_95);
  }
  os_log_t v0 = (void *)_MergedGlobals_91;

  return v0;
}

void sub_189610E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,id a42)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a37, 8);

  _Unwind_Resume(a1);
}

void sub_189610FAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189611318(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18961168C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_189611790(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189611CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_18961205C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189612118(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896122E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1896125D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896127E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL24GEOGetGEORouteMatcherLogv_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEORouteMatcher");
  uint64_t v1 = (void *)_MergedGlobals_91;
  _MergedGlobals_91 = (uint64_t)v0;
}

void sub_1896138E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
}

void sub_1896146A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1896148A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_189614B20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  _Unwind_Resume(a1);
}

void sub_189614D30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189614F10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18961507C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896151E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189615350(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896154BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189615B88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189615CF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOAttributionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOAttributionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189616AD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAttributionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2) {
            goto LABEL_62;
          }
          goto LABEL_59;
        case 2u:
          if (v14 == 2) {
            goto LABEL_59;
          }
          goto LABEL_62;
        case 3u:
          if (v14 == 2) {
            goto LABEL_59;
          }
          goto LABEL_62;
        case 4u:
          if (v14 == 2) {
            goto LABEL_59;
          }
          goto LABEL_62;
        case 5u:
          if (v14 == 2) {
            goto LABEL_59;
          }
          goto LABEL_62;
        case 6u:
          if (v14 == 2) {
            goto LABEL_59;
          }
          goto LABEL_62;
        case 7u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOResourceIsValid(a1)) {
            goto LABEL_62;
          }
          goto LABEL_38;
        case 8u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOTileSetRegionIsValid(a1)) {
            goto LABEL_62;
          }
LABEL_38:
          PBReaderRecallMark();
          continue;
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_55;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_60;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v22 = 0;
          break;
        case 0xBu:
          if (v14 == 2) {
            goto LABEL_59;
          }
          goto LABEL_62;
        case 0xCu:
          if (v14 == 2) {
            goto LABEL_59;
          }
          goto LABEL_62;
        default:
LABEL_59:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_62:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v23 = *v2;
        unint64_t v24 = *(void *)&a1[v23];
        if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v25 = v24 + 1;
        int v26 = *(char *)(*(void *)&a1[*v5] + v24);
        *(void *)&a1[v23] = v25;
        if (v26 < 0)
        {
          BOOL v21 = v22++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_60;
      }
LABEL_55:
      a1[*v4] = 1;
LABEL_60:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOResourceIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_92;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_88;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_89;
          }
        case 2u:
          if (v14 == 2) {
            goto LABEL_30;
          }
          goto LABEL_92;
        case 3u:
          if (v14 == 2) {
            goto LABEL_30;
          }
          goto LABEL_92;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOTileSetRegionIsValid(a1)) {
            goto LABEL_92;
          }
          goto LABEL_39;
        case 5u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOResourceFilterIsValid(a1)) {
            goto LABEL_92;
          }
LABEL_39:
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_92;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            unint64_t v24 = *(void *)&a1[v23];
            if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
              goto LABEL_88;
            }
            unint64_t v25 = v24 + 1;
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_89;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_92;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            unint64_t v29 = *(void *)&a1[v28];
            if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
              goto LABEL_88;
            }
            unint64_t v30 = v29 + 1;
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_89;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_92;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            unint64_t v34 = *(void *)&a1[v33];
            if (v34 == -1 || v34 >= *(void *)&a1[*v3]) {
              goto LABEL_88;
            }
            unint64_t v35 = v34 + 1;
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_89;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_92;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            unint64_t v39 = *(void *)&a1[v38];
            if (v39 == -1 || v39 >= *(void *)&a1[*v3]) {
              goto LABEL_88;
            }
            unint64_t v40 = v39 + 1;
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v21 = v37++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_89;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_92;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            unint64_t v44 = *(void *)&a1[v43];
            if (v44 == -1 || v44 >= *(void *)&a1[*v3]) {
              goto LABEL_88;
            }
            unint64_t v45 = v44 + 1;
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v21 = v42++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_89;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_92;
          }
          unsigned int v47 = 0;
          break;
        default:
LABEL_30:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_92:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v48 = *v2;
        unint64_t v49 = *(void *)&a1[v48];
        if (v49 == -1 || v49 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v50 = v49 + 1;
        int v51 = *(char *)(*(void *)&a1[*v5] + v49);
        *(void *)&a1[v48] = v50;
        if (v51 < 0)
        {
          BOOL v21 = v47++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_89;
      }
LABEL_88:
      a1[*v4] = 1;
LABEL_89:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v52 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v52;
}

void sub_1896176F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAttributionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  BOOL v2 = (*(_WORD *)(a1 + 140) & 0x3FF8) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 128));
  return v2;
}

void sub_189617D70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18961844C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOCoverageExceptionDescription(unsigned int *a1)
{
  BOOL v2 = NSString;
  id v3 = _GEOCoverageExceptionDictionaryRepresentation(a1);
  uint64_t v4 = [v2 stringWithFormat:@"GEOCoverageException<%p> %@", a1, v3];

  return v4;
}

id _GEOCoverageExceptionDictionaryRepresentation(unsigned int *a1)
{
  BOOL v2 = [MEMORY[0x1E4F1CA60] dictionary];
  char v3 = *((unsigned char *)a1 + 20);
  if (v3)
  {
    char v6 = [NSNumber numberWithUnsignedInt:*a1];
    [v2 setObject:v6 forKey:@"maxX"];

    char v3 = *((unsigned char *)a1 + 20);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a1[5] & 2) == 0)
  {
    goto LABEL_3;
  }
  unsigned int v7 = [NSNumber numberWithUnsignedInt:a1[1]];
  [v2 setObject:v7 forKey:@"maxY"];

  char v3 = *((unsigned char *)a1 + 20);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  unint64_t v8 = [NSNumber numberWithUnsignedInt:a1[2]];
  [v2 setObject:v8 forKey:@"minX"];

  char v3 = *((unsigned char *)a1 + 20);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  uint64_t v9 = [NSNumber numberWithUnsignedInt:a1[3]];
  [v2 setObject:v9 forKey:@"minY"];

  if ((a1[5] & 0x10) != 0)
  {
LABEL_6:
    uint64_t v4 = [NSNumber numberWithUnsignedInt:a1[4]];
    [v2 setObject:v4 forKey:@"zoom"];
  }
LABEL_7:

  return v2;
}

void _GEOCoverageExceptionFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  id v8 = a1;
  char v3 = [v8 objectForKeyedSubscript:@"minX"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 20) |= 4u;
    *(_DWORD *)(a2 + 8) = [v3 unsignedIntValue];
  }

  uint64_t v4 = [v8 objectForKeyedSubscript:@"minY"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 20) |= 8u;
    *(_DWORD *)(a2 + 12) = [v4 unsignedIntValue];
  }

  uint64_t v5 = [v8 objectForKeyedSubscript:@"maxX"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 20) |= 1u;
    *(_DWORD *)a2 = [v5 unsignedIntValue];
  }

  char v6 = [v8 objectForKeyedSubscript:@"maxY"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 20) |= 2u;
    *(_DWORD *)(a2 + 4) = [v6 unsignedIntValue];
  }

  unsigned int v7 = [v8 objectForKeyedSubscript:@"zoom"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 20) |= 0x10u;
    *(_DWORD *)(a2 + 16) = [v7 unsignedIntValue];
  }
}

BOOL GEOCoverageExceptionReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOCoverageExceptionReadAllFrom(a1, a2);
}

BOOL GEOCoverageExceptionReadAllFrom(uint64_t a1, uint64_t a2)
{
  char v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    unint64_t v49 = (_DWORD *)(a1 + 16);
    unsigned int v7 = (_DWORD *)(a1 + 4);
    id v8 = (_DWORD *)(a1 + 12);
    uint64_t v9 = (_DWORD *)(a1 + 8);
    unint64_t v10 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        uint64_t v14 = *v3;
        unint64_t v15 = *(void *)(a2 + v14);
        if (v15 == -1 || v15 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v16 = *(unsigned char *)(*(void *)(a2 + *v10) + v15);
        *(void *)(a2 + v14) = v15 + 1;
        v13 |= (unint64_t)(v16 & 0x7F) << v11;
        if ((v16 & 0x80) == 0) {
          goto LABEL_12;
        }
        v11 += 7;
        if (v12++ >= 9)
        {
          unint64_t v13 = 0;
          int v18 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v18 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v13 = 0;
      }
LABEL_14:
      if (v18 || (v13 & 7) == 4) {
        break;
      }
      switch((v13 >> 3))
      {
        case 1u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 20) |= 4u;
          while (1)
          {
            uint64_t v23 = *v3;
            unint64_t v24 = *(void *)(a2 + v23);
            if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
            {
              unsigned int v27 = v9;
              goto LABEL_61;
            }
            char v25 = *(unsigned char *)(*(void *)(a2 + *v10) + v24);
            *(void *)(a2 + v23) = v24 + 1;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v20 += 7;
            BOOL v26 = v21++ > 8;
            if (v26)
            {
              LODWORD(v22) = 0;
              unsigned int v27 = v9;
              goto LABEL_64;
            }
          }
          unsigned int v27 = v9;
          goto LABEL_62;
        case 2u:
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 20) |= 8u;
          while (2)
          {
            uint64_t v30 = *v3;
            unint64_t v31 = *(void *)(a2 + v30);
            if (v31 == -1 || v31 >= *(void *)(a2 + *v4))
            {
              unsigned int v27 = v8;
              goto LABEL_61;
            }
            char v32 = *(unsigned char *)(*(void *)(a2 + *v10) + v31);
            *(void *)(a2 + v30) = v31 + 1;
            v22 |= (unint64_t)(v32 & 0x7F) << v28;
            if (v32 < 0)
            {
              v28 += 7;
              BOOL v26 = v29++ > 8;
              if (v26)
              {
                LODWORD(v22) = 0;
                unsigned int v27 = v8;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          unsigned int v27 = v8;
          goto LABEL_62;
        case 3u:
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              unsigned int v27 = (_DWORD *)a1;
              goto LABEL_61;
            }
            char v37 = *(unsigned char *)(*(void *)(a2 + *v10) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v22 |= (unint64_t)(v37 & 0x7F) << v33;
            if (v37 < 0)
            {
              v33 += 7;
              BOOL v26 = v34++ > 8;
              if (v26)
              {
                LODWORD(v22) = 0;
                unsigned int v27 = (_DWORD *)a1;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          unsigned int v27 = (_DWORD *)a1;
          goto LABEL_62;
        case 4u:
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (2)
          {
            uint64_t v40 = *v3;
            unint64_t v41 = *(void *)(a2 + v40);
            if (v41 == -1 || v41 >= *(void *)(a2 + *v4))
            {
              unsigned int v27 = v7;
              goto LABEL_61;
            }
            char v42 = *(unsigned char *)(*(void *)(a2 + *v10) + v41);
            *(void *)(a2 + v40) = v41 + 1;
            v22 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v38 += 7;
              BOOL v26 = v39++ > 8;
              if (v26)
              {
                LODWORD(v22) = 0;
                unsigned int v27 = v7;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          unsigned int v27 = v7;
          goto LABEL_62;
        case 5u:
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 20) |= 0x10u;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
          return 0;
      }
      while (1)
      {
        uint64_t v45 = *v3;
        unint64_t v46 = *(void *)(a2 + v45);
        if (v46 == -1 || v46 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v47 = *(unsigned char *)(*(void *)(a2 + *v10) + v46);
        *(void *)(a2 + v45) = v46 + 1;
        v22 |= (unint64_t)(v47 & 0x7F) << v43;
        if ((v47 & 0x80) == 0)
        {
          unsigned int v27 = v49;
          goto LABEL_62;
        }
        v43 += 7;
        BOOL v26 = v44++ > 8;
        if (v26)
        {
          LODWORD(v22) = 0;
          unsigned int v27 = v49;
          goto LABEL_64;
        }
      }
      unsigned int v27 = v49;
LABEL_61:
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_62:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v22) = 0;
      }
LABEL_64:
      *unsigned int v27 = v22;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t GEOCoverageExceptionWriteTo(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 20);
  if ((v2 & 4) != 0)
  {
    __n128 result = PBDataWriterWriteUint32Field();
    char v2 = *(unsigned char *)(v1 + 20);
    if ((v2 & 8) == 0)
    {
LABEL_3:
      if ((v2 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 20) & 8) == 0)
  {
    goto LABEL_3;
  }
  __n128 result = PBDataWriterWriteUint32Field();
  char v2 = *(unsigned char *)(v1 + 20);
  if ((v2 & 1) == 0)
  {
LABEL_4:
    if ((v2 & 2) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    __n128 result = PBDataWriterWriteUint32Field();
    if ((*(unsigned char *)(v1 + 20) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  __n128 result = PBDataWriterWriteUint32Field();
  char v2 = *(unsigned char *)(v1 + 20);
  if ((v2 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v2 & 0x10) == 0) {
    return result;
  }
LABEL_11:

  return PBDataWriterWriteUint32Field();
}

BOOL GEOCoverageExceptionEquals(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t GEOCoverageExceptionHash()
{
  return PBHashBytes();
}

BOOL GEOCoverageExceptionIsValid(void *a1)
{
  v4[3] = [a1 position];
  v4[4] = [a1 length];
  memset(v4, 0, 24);
  BOOL AllFrom = GEOCoverageExceptionReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

BOOL GEOCoverageExtentReadAllFrom(uint64_t a1, void *a2)
{
  char v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v17 = 0;
            unsigned int v18 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 60) |= 4u;
            while (1)
            {
              uint64_t v20 = *v4;
              unint64_t v21 = *(void *)&v3[v20];
              if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
                break;
              }
              char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
              *(void *)&v3[v20] = v21 + 1;
              v19 |= (unint64_t)(v22 & 0x7F) << v17;
              if ((v22 & 0x80) == 0) {
                goto LABEL_63;
              }
              v17 += 7;
              BOOL v14 = v18++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_65;
              }
            }
            v3[*v6] = 1;
LABEL_63:
            if (v3[*v6]) {
              LODWORD(v19) = 0;
            }
LABEL_65:
            uint64_t v45 = 48;
            goto LABEL_82;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 60) |= 8u;
            while (2)
            {
              uint64_t v27 = *v4;
              unint64_t v28 = *(void *)&v3[v27];
              if (v28 == -1 || v28 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v29 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
                *(void *)&v3[v27] = v28 + 1;
                v19 |= (unint64_t)(v29 & 0x7F) << v25;
                if (v29 < 0)
                {
                  v25 += 7;
                  BOOL v14 = v26++ >= 9;
                  if (v14)
                  {
                    LODWORD(v19) = 0;
                    goto LABEL_69;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v19) = 0;
            }
LABEL_69:
            uint64_t v45 = 52;
            goto LABEL_82;
          case 3u:
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 60) |= 1u;
            while (2)
            {
              uint64_t v32 = *v4;
              unint64_t v33 = *(void *)&v3[v32];
              if (v33 == -1 || v33 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v33);
                *(void *)&v3[v32] = v33 + 1;
                v19 |= (unint64_t)(v34 & 0x7F) << v30;
                if (v34 < 0)
                {
                  v30 += 7;
                  BOOL v14 = v31++ >= 9;
                  if (v14)
                  {
                    LODWORD(v19) = 0;
                    goto LABEL_73;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v19) = 0;
            }
LABEL_73:
            uint64_t v45 = 40;
            goto LABEL_82;
          case 4u:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 60) |= 2u;
            while (2)
            {
              uint64_t v37 = *v4;
              unint64_t v38 = *(void *)&v3[v37];
              if (v38 == -1 || v38 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v38);
                *(void *)&v3[v37] = v38 + 1;
                v19 |= (unint64_t)(v39 & 0x7F) << v35;
                if (v39 < 0)
                {
                  v35 += 7;
                  BOOL v14 = v36++ >= 9;
                  if (v14)
                  {
                    LODWORD(v19) = 0;
                    goto LABEL_77;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v19) = 0;
            }
LABEL_77:
            uint64_t v45 = 44;
            goto LABEL_82;
          case 5u:
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 60) |= 0x10u;
            break;
          case 6u:
            if (!PBReaderPlaceMark()) {
              goto LABEL_85;
            }
            -[GEOCoverageExtent _reserveCoverageExceptions:](a1, 1uLL);
            if (!GEOCoverageExceptionReadAllFrom(*(void *)(a1 + 16) + 24 * *(void *)(a1 + 24), (uint64_t)v3)) {
              goto LABEL_85;
            }
            PBReaderRecallMark();
            ++*(void *)(a1 + 24);
            continue;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v23 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unint64_t v24 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v23;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_85;
            }
            continue;
        }
        while (1)
        {
          uint64_t v42 = *v4;
          unint64_t v43 = *(void *)&v3[v42];
          if (v43 == -1 || v43 >= *(void *)&v3[*v5]) {
            break;
          }
          char v44 = *(unsigned char *)(*(void *)&v3[*v7] + v43);
          *(void *)&v3[v42] = v43 + 1;
          v19 |= (unint64_t)(v44 & 0x7F) << v40;
          if ((v44 & 0x80) == 0) {
            goto LABEL_79;
          }
          v40 += 7;
          BOOL v14 = v41++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_81;
          }
        }
        v3[*v6] = 1;
LABEL_79:
        if (v3[*v6]) {
          LODWORD(v19) = 0;
        }
LABEL_81:
        uint64_t v45 = 56;
LABEL_82:
        *(_DWORD *)(a1 + v45) = v19;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v46 = v3[*v6] == 0;
  }
  else
  {
LABEL_85:
    BOOL v46 = 0;
  }
  objc_sync_exit(v3);

  return v46;
}

void sub_18961A398(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCoverageExtentReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOCoverageExtentReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18961A414(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCoverageExtentIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            unint64_t v24 = *(void *)&a1[v23];
            if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            unint64_t v25 = v24 + 1;
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            unint64_t v29 = *(void *)&a1[v28];
            if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            unint64_t v30 = v29 + 1;
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            unint64_t v34 = *(void *)&a1[v33];
            if (v34 == -1 || v34 >= *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            unint64_t v35 = v34 + 1;
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v37 = 0;
          break;
        case 6u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOCoverageExceptionIsValid(a1)) {
            goto LABEL_69;
          }
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_69:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v38 = *v2;
        unint64_t v39 = *(void *)&a1[v38];
        if (v39 == -1 || v39 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v40 = v39 + 1;
        int v41 = *(char *)(*(void *)&a1[*v5] + v39);
        *(void *)&a1[v38] = v40;
        if (v41 < 0)
        {
          BOOL v21 = v37++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_66;
      }
LABEL_61:
      a1[*v4] = 1;
LABEL_66:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v42 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v42;
}

BOOL GEODataSetDescriptionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEODataSetDescriptionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18961B5B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODataSetDescriptionIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          BOOL v22 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          unint64_t v18 = *(void *)&a1[v17];
          if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v19 = v18 + 1;
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v22;
}

unint64_t GEODataSetURLOverrideReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 152));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 148);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 144)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  char v11 = (const float *)(a1 + 160);
  uint32x4_t v12 = (uint32x4_t)vld1q_dup_f32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A6322E0), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A6322F0), v13)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A6322C0), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A6322D0), v13))));
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v17 = v14 > 0xB;
        char v56 = v17 & ~(_BYTE)v10 | v9;
        char v57 = v17 | v10 | v56;
        if (((v17 | v10) | v8)) {
          unint64_t v18 = 0;
        }
        else {
          unint64_t v18 = a3;
        }
        char v58 = (v18 == 0) | v17 | v10;
        char v59 = v17 | v10;
        unint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        int v20 = (int *)MEMORY[0x1E4F940C8];
        BOOL v21 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v14;
LABEL_7:
        uint64_t v15 = v9;
LABEL_8:
        uint64_t v16 = v10;
LABEL_9:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v20)) {
      goto LABEL_137;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v19;
      unint64_t v26 = *(void *)(v3 + v25);
      if (v26 == -1 || v26 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v21) + v26);
      *(void *)(v3 + v25) = v26 + 1;
      v24 |= (unint64_t)(v27 & 0x7F) << v22;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v22 += 7;
      BOOL v28 = v23++ >= 9;
      if (v28)
      {
        unint64_t v24 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v24 = 0;
    }
LABEL_26:
    if (v29 || (v24 & 7) == 4)
    {
LABEL_137:
      int v55 = 1;
      goto LABEL_138;
    }
    unint64_t v31 = v24 >> 3;
    BOOL v32 = v59;
    if ((v58 & 1) == 0)
    {
      uint64_t v33 = v18;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_98;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(_DWORD *)(a1 + 160) |= 1u;
        while (1)
        {
          uint64_t v40 = *v19;
          unint64_t v41 = *(void *)(v3 + v40);
          if (v41 == -1 || v41 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v21) + v41);
          *(void *)(v3 + v40) = v41 + 1;
          v39 |= (unint64_t)(v42 & 0x7F) << v37;
          if ((v42 & 0x80) == 0) {
            goto LABEL_101;
          }
          v37 += 7;
          BOOL v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_103;
          }
        }
        *(unsigned char *)(v3 + *v20) = 1;
LABEL_101:
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v39) = 0;
        }
LABEL_103:
        *(_DWORD *)(a1 + 156) = v39;
        goto LABEL_136;
      case 2:
        if (!v32) {
          goto LABEL_98;
        }
        if ((*(unsigned char *)(a1 + 160) & 0x80) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 64;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_166;
        }
        int v50 = (int)(*(_DWORD *)(a1 + 160) << 24) >> 31;
        goto LABEL_134;
      case 3:
        if (!v32) {
          goto LABEL_98;
        }
        if ((*(unsigned char *)(a1 + 161) & 2) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 80;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_166;
        }
        int v50 = (int)(*(_DWORD *)(a1 + 160) << 22) >> 31;
        goto LABEL_134;
      case 4:
        if (!v32) {
          goto LABEL_98;
        }
        if ((*(unsigned char *)(a1 + 160) & 0x20) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 48;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_166;
        }
        int v50 = (int)(*(_DWORD *)(a1 + 160) << 26) >> 31;
        goto LABEL_134;
      case 5:
        if (!v32) {
          goto LABEL_98;
        }
        if ((*(unsigned char *)(a1 + 161) & 0x80) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 128;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_166;
        }
        int v50 = (int)(*(_DWORD *)(a1 + 160) << 16) >> 31;
        goto LABEL_134;
      case 6:
        if (!v32) {
          goto LABEL_98;
        }
        if ((*(unsigned char *)(a1 + 160) & 4) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 24;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_166;
        }
        int v50 = (int)(*(_DWORD *)(a1 + 160) << 29) >> 31;
        goto LABEL_134;
      case 7:
        if (!v32) {
          goto LABEL_98;
        }
        if ((*(unsigned char *)(a1 + 160) & 8) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 32;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_166;
        }
        int v50 = (int)(*(_DWORD *)(a1 + 160) << 28) >> 31;
        goto LABEL_134;
      case 8:
        if (!v32) {
          goto LABEL_98;
        }
        if ((*(unsigned char *)(a1 + 161) & 0x40) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 120;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_166;
        }
        int v50 = (int)(*(_DWORD *)(a1 + 160) << 17) >> 31;
        goto LABEL_134;
      case 9:
        if (!v32) {
          goto LABEL_98;
        }
        if ((*(unsigned char *)(a1 + 161) & 0x20) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 112;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_166;
        }
        int v50 = (int)(*(_DWORD *)(a1 + 160) << 18) >> 31;
        goto LABEL_134;
      case 10:
        if (!v32) {
          goto LABEL_98;
        }
        if ((*(unsigned char *)(a1 + 161) & 8) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 96;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_166;
        }
        int v50 = (int)(*(_DWORD *)(a1 + 160) << 20) >> 31;
        goto LABEL_134;
      case 11:
        if (!v32) {
          goto LABEL_98;
        }
        if ((*(unsigned char *)(a1 + 160) & 0x10) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 40;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_166;
        }
        int v50 = (int)(*(_DWORD *)(a1 + 160) << 27) >> 31;
        goto LABEL_134;
      case 12:
        if (!v32) {
          goto LABEL_98;
        }
        if ((*(unsigned char *)(a1 + 161) & 1) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 72;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_166;
        }
        int v50 = (int)(*(_DWORD *)(a1 + 160) << 23) >> 31;
        goto LABEL_134;
      case 13:
        if (!v32) {
          goto LABEL_98;
        }
        if ((*(unsigned char *)(a1 + 161) & 0x10) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 104;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_166;
        }
        int v50 = (int)(*(_DWORD *)(a1 + 160) << 19) >> 31;
        goto LABEL_134;
      case 14:
        if (!v32) {
          goto LABEL_98;
        }
        if ((*(unsigned char *)(a1 + 160) & 0x40) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 56;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_166;
        }
        int v50 = (int)(*(_DWORD *)(a1 + 160) << 25) >> 31;
        goto LABEL_134;
      case 15:
        if (!v32) {
          goto LABEL_98;
        }
        if ((*(unsigned char *)(a1 + 161) & 4) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 88;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_166;
        }
        int v50 = (int)(*(_DWORD *)(a1 + 160) << 21) >> 31;
        goto LABEL_134;
      case 16:
        if (!v32) {
          goto LABEL_98;
        }
        if ((*(unsigned char *)(a1 + 162) & 1) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 136;
LABEL_97:
          uint64_t v48 = *(void **)(a1 + v47);
          *(void *)(a1 + v47) = v46;

          --v7;
LABEL_135:
          int v20 = (int *)MEMORY[0x1E4F940C8];
          BOOL v21 = (int *)MEMORY[0x1E4F940B8];
LABEL_136:
          if (!(v57 & 1 | (v7 != 0))) {
            goto LABEL_137;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          int v50 = (int)(*(_DWORD *)(a1 + 160) << 15) >> 31;
LABEL_134:
          v7 += v50;
          goto LABEL_135;
        }
LABEL_166:
        int v55 = 0;
        int v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_138:
        if (v56) {
LABEL_139:
        }
          *(_DWORD *)(a1 + 160) |= 2u;
        if (v59 & 1 | ((v55 & 1) == 0))
        {
          *(_DWORD *)(a1 + 160) |= 0x80u;
          *(_DWORD *)(a1 + 160) |= 0x200u;
          *(_DWORD *)(a1 + 160) |= 0x20u;
          *(_DWORD *)(a1 + 160) |= 0x8000u;
          *(_DWORD *)(a1 + 160) |= 4u;
          *(_DWORD *)(a1 + 160) |= 8u;
          *(_DWORD *)(a1 + 160) |= 0x4000u;
          *(_DWORD *)(a1 + 160) |= 0x2000u;
          *(_DWORD *)(a1 + 160) |= 0x800u;
          *(_DWORD *)(a1 + 160) |= 0x10u;
          *(_DWORD *)(a1 + 160) |= 0x100u;
          *(_DWORD *)(a1 + 160) |= 0x1000u;
          *(_DWORD *)(a1 + 160) |= 0x40u;
          *(_DWORD *)(a1 + 160) |= 0x400u;
          *(_DWORD *)(a1 + 160) |= 0x10000u;
        }
        else if (v18)
        {
          while (1)
          {
            int v52 = *v18++;
            int v51 = 128;
            switch(v52)
            {
              case 0:
                goto LABEL_160;
              case 2:
                goto LABEL_158;
              case 3:
                int v51 = 512;
                goto LABEL_158;
              case 4:
                int v51 = 32;
                goto LABEL_158;
              case 5:
                int v51 = 0x8000;
                goto LABEL_158;
              case 6:
                int v51 = 4;
                goto LABEL_158;
              case 7:
                int v51 = 8;
                goto LABEL_158;
              case 8:
                int v51 = 0x4000;
                goto LABEL_158;
              case 9:
                int v51 = 0x2000;
                goto LABEL_158;
              case 10:
                int v51 = 2048;
                goto LABEL_158;
              case 11:
                int v51 = 16;
                goto LABEL_158;
              case 12:
                int v51 = 256;
                goto LABEL_158;
              case 13:
                int v51 = 4096;
                goto LABEL_158;
              case 14:
                int v51 = 64;
                goto LABEL_158;
              case 15:
                int v51 = 1024;
                goto LABEL_158;
              case 16:
                int v51 = 0x10000;
LABEL_158:
                *(_DWORD *)(a1 + 160) |= v51;
                break;
              default:
                continue;
            }
          }
        }
LABEL_160:
        if (v55) {
          unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v59)
        {
          char v53 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v56 & 1) == 0 || (*(unsigned char *)(a1 + 160) & 2) != 0)
        {
LABEL_98:
          char v49 = PBReaderSkipValueWithTag();
          BOOL v21 = (int *)MEMORY[0x1E4F940B8];
          int v20 = (int *)MEMORY[0x1E4F940C8];
          if ((v49 & 1) == 0)
          {
            int v55 = 0;
            goto LABEL_138;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v44 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v43;
          }
          int v45 = PBUnknownFieldAdd();
          int v20 = (int *)MEMORY[0x1E4F940C8];
          BOOL v21 = (int *)MEMORY[0x1E4F940B8];
          if (!v45)
          {
            int v55 = 0;
            goto LABEL_139;
          }
        }
        goto LABEL_136;
    }
  }
}

void sub_18961D46C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18961D580(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODataSetURLOverrideReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 148))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEODataSetURLOverrideReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 152));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 144) = [v8 position];
  *(_DWORD *)(a1 + 148) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEODataSetURLOverrideReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEODataSetURLOverrideReadAllFrom_initialTag;
  }
  unint64_t Specified = GEODataSetURLOverrideReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 152));
  return Specified;
}

void sub_18961D7EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18961DB54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18961DE74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODisplayStringReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEODisplayStringReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18961EA5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODisplayStringIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEOMuninBucketReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOMuninBucketReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18961F930(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMuninBucketIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_41;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_41;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 5) {
        break;
      }
      if (v16 == 4)
      {
        if (v14 != 2) {
          goto LABEL_43;
        }
      }
      else if (v16 == 3)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_43;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 == -1 || v19 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v20 = v19 + 1;
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_40;
        }
LABEL_37:
        a1[*v4] = 1;
        goto LABEL_40;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_43:
        BOOL v28 = 0;
        goto LABEL_42;
      }
LABEL_40:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_41;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_43;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      unint64_t v25 = *(void *)&a1[v24];
      if (v25 == -1 || v25 >= *(void *)&a1[*v3]) {
        goto LABEL_37;
      }
      unint64_t v26 = v25 + 1;
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_40;
    }
  }
LABEL_41:
  BOOL v28 = a1[*v4] == 0;
LABEL_42:
  PBReaderRecallMark();
  return v28;
}

BOOL GEOMuninVersionReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          unsigned int v23 = objc_alloc_init(GEOCoverageExtent);
          if (!GEOCoverageExtentReadAllFrom((uint64_t)v23, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addCoverage:", v23, 0, 0);
        }
        else if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_36;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            LODWORD(v19) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v19;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v24 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v25 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v24;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v26 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    BOOL v26 = 0;
  }
  objc_sync_exit(v3);

  return v26;
}

void sub_189620BB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMuninVersionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOMuninVersionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189620C18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMuninVersionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOCoverageExtentIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          unint64_t v18 = *(void *)&a1[v17];
          if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v19 = v18 + 1;
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

BOOL GEOOfflineMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOOfflineMetadataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189621BA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOOfflineMetadataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v13 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v15 = 0;
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0)
          {
            BOOL v20 = v15++ > 8;
            if (!v20) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v26 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v21 = 0;
    while (1)
    {
      uint64_t v22 = *v2;
      unint64_t v23 = *(void *)&a1[v22];
      if (v23 == -1 || v23 >= *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      unint64_t v24 = v23 + 1;
      int v25 = *(char *)(*(void *)&a1[*v5] + v23);
      *(void *)&a1[v22] = v24;
      if (v25 < 0)
      {
        BOOL v20 = v21++ > 8;
        if (!v20) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v26 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v26;
}

void sub_189622474(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEORegionalResourceReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 96)), (uint16x4_t)0xFFFCFFFAFFF9FFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 96) >> 3) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        int v17 = v16 & ~v11 | v9;
        int v18 = v16 | v11;
        if (((v16 | v11) | v8)) {
          int v19 = 0;
        }
        else {
          int v19 = a3;
        }
        BOOL v20 = v7 != 0;
        unsigned int v21 = (int *)MEMORY[0x1E4F940E8];
        int v22 = 1;
        unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_109;
        }
        char v67 = v16 & ~(_BYTE)v11 | v9;
        int v69 = v20 | v18 | v17;
        char v70 = (v19 == 0) | v18;
        unint64_t v24 = (int *)MEMORY[0x1E4F940B8];
        char v68 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v23)) {
      goto LABEL_107;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v21;
      unint64_t v29 = *(void *)(v3 + v28);
      if (v29 == -1 || v29 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v29 + 1;
      v27 |= (unint64_t)(v30 & 0x7F) << v25;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v31 = v26++ >= 9;
      if (v31)
      {
        unint64_t v27 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    if (v32 || (v27 & 7) == 4)
    {
LABEL_107:
      int v22 = 1;
      goto LABEL_108;
    }
    unint64_t v34 = v27 >> 3;
    BOOL v35 = v18;
    if ((v70 & 1) == 0)
    {
      BOOL v36 = v19;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_90;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 96) |= 1u;
        while (1)
        {
          uint64_t v43 = *v21;
          unint64_t v44 = *(void *)(v3 + v43);
          if (v44 == -1 || v44 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v24) + v44);
          *(void *)(v3 + v43) = v44 + 1;
          v42 |= (unint64_t)(v45 & 0x7F) << v40;
          if ((v45 & 0x80) == 0) {
            goto LABEL_93;
          }
          v40 += 7;
          BOOL v31 = v41++ >= 9;
          if (v31)
          {
            LODWORD(v42) = 0;
            goto LABEL_95;
          }
        }
        *(unsigned char *)(v3 + *v23) = 1;
LABEL_93:
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v42) = 0;
        }
LABEL_95:
        uint64_t v61 = 84;
        goto LABEL_104;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_90;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 96) |= 2u;
        while (2)
        {
          uint64_t v51 = *v21;
          unint64_t v52 = *(void *)(v3 + v51);
          if (v52 == -1 || v52 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v24) + v52);
            *(void *)(v3 + v51) = v52 + 1;
            v42 |= (unint64_t)(v53 & 0x7F) << v49;
            if (v53 < 0)
            {
              v49 += 7;
              BOOL v31 = v50++ >= 9;
              if (v31)
              {
                LODWORD(v42) = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v42) = 0;
        }
LABEL_99:
        uint64_t v61 = 88;
        goto LABEL_104;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_90;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 96) |= 4u;
        while (2)
        {
          uint64_t v56 = *v21;
          unint64_t v57 = *(void *)(v3 + v56);
          if (v57 == -1 || v57 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v24) + v57);
            *(void *)(v3 + v56) = v57 + 1;
            v42 |= (unint64_t)(v58 & 0x7F) << v54;
            if (v58 < 0)
            {
              v54 += 7;
              BOOL v31 = v55++ >= 9;
              if (v31)
              {
                LODWORD(v42) = 0;
                goto LABEL_103;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v42) = 0;
        }
LABEL_103:
        uint64_t v61 = 92;
LABEL_104:
        *(_DWORD *)(a1 + v61) = v42;
        goto LABEL_105;
      case 4:
        if (!v35 || (*(_WORD *)(a1 + 96) & 0x80) != 0) {
          goto LABEL_90;
        }
        PBReaderReadString();
        char v59 = (GEOAttribution *)objc_claimAutoreleasedReturnValue();
        if (v59) {
          -[GEORegionalResource _addNoFlagsIcon:](a1, v59);
        }
        goto LABEL_88;
      case 5:
        goto LABEL_53;
      case 6:
        if (!v35 || (*(_WORD *)(a1 + 96) & 0x20) != 0) {
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_127;
        }
        char v59 = objc_alloc_init(GEOAttribution);
        if (GEOAttributionReadAllFrom((uint64_t)v59, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEORegionalResource _addNoFlagsAttribution:](a1, v59);
LABEL_88:

LABEL_89:
          LOBYTE(v18) = v68;
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_105:
          if ((v69 & 1) == 0) {
            goto LABEL_107;
          }
LABEL_106:
          if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v6)) {
            goto LABEL_107;
          }
          continue;
        }

LABEL_127:
        int v22 = 0;
        LOBYTE(v18) = v68;
        unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_108:
        LOBYTE(v17) = v67;
LABEL_109:
        if (v17) {
LABEL_110:
        }
          *(_WORD *)(a1 + 96) |= 8u;
        if (v18 & 1 | ((v22 & 1) == 0))
        {
          *(_WORD *)(a1 + 96) |= 0x80u;
          *(_WORD *)(a1 + 96) |= 0x20u;
          *(_WORD *)(a1 + 96) |= 0x40u;
          *(_WORD *)(a1 + 96) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            int v63 = *v19++;
            int v62 = v63;
            __int16 v64 = 128;
            switch(v63)
            {
              case 0:
                goto LABEL_120;
              case 1:
              case 2:
              case 3:
              case 5:
                continue;
              case 4:
                goto LABEL_119;
              case 6:
                __int16 v64 = 32;
                goto LABEL_119;
              case 7:
                __int16 v64 = 64;
                goto LABEL_119;
              default:
                if (v62 != 29) {
                  continue;
                }
                __int16 v64 = 16;
LABEL_119:
                *(_WORD *)(a1 + 96) |= v64;
                break;
            }
          }
        }
LABEL_120:
        if (v22)
        {
          uint64_t v3 = *(unsigned char *)(v3 + *v23) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_124:
          BOOL v65 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          uint64_t v3 = 0;
          if (v18) {
            goto LABEL_124;
          }
        }
        return v3;
      case 7:
        if (!v35 || (*(_WORD *)(a1 + 96) & 0x40) != 0) {
          goto LABEL_90;
        }
        PBReaderReadString();
        char v59 = (GEOAttribution *)objc_claimAutoreleasedReturnValue();
        if (v59) {
          -[GEORegionalResource _addNoFlagsIconChecksum:](a1, v59);
        }
        goto LABEL_88;
      default:
        if (v34 == 29)
        {
          if (v35 && (*(_WORD *)(a1 + 96) & 0x10) == 0)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_127;
            }
            -[GEORegionalResource _reserveTileRanges:](a1, 1uLL);
            if (!GEOTileSetRegionReadAllFrom((_DWORD *)(*(void *)(a1 + 24) + 24 * *(void *)(a1 + 32)), v3)) {
              goto LABEL_127;
            }
            PBReaderRecallMark();
            ++*(void *)(a1 + 32);
            goto LABEL_89;
          }
LABEL_90:
          int v60 = PBReaderSkipValueWithTag();
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          LOBYTE(v18) = v68;
          if ((v60 & v69 & 1) == 0)
          {
            int v22 = v60;
            goto LABEL_108;
          }
          goto LABEL_106;
        }
LABEL_53:
        if ((v67 & 1) == 0 || (*(_WORD *)(a1 + 96) & 8) != 0) {
          goto LABEL_90;
        }
        if (!*(void *)(a1 + 16))
        {
          id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          uint64_t v47 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v46;
        }
        int v48 = PBUnknownFieldAdd();
        LOBYTE(v18) = v68;
        unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        if (!v48)
        {
          int v22 = 0;
          goto LABEL_110;
        }
        goto LABEL_105;
    }
  }
}

void sub_189622F70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896230B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896238DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORegionalResourceCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 48);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

uint64_t GEORegionalResourceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORegionalResourceReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORegionalResourceReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORegionalResourceReadAllFrom_initialTag;
  }
  uint64_t Specified = GEORegionalResourceReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORegionalResourceCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189623C4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189624074(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896244C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEORegionalResourceIndexDescription(unsigned int *a1)
{
  uint64_t v2 = NSString;
  uint64_t v3 = _GEORegionalResourceIndexDictionaryRepresentation(a1);
  uint64_t v4 = [v2 stringWithFormat:@"GEORegionalResourceIndex<%p> %@", a1, v3];

  return v4;
}

id _GEORegionalResourceIndexDictionaryRepresentation(unsigned int *a1)
{
  uint64_t v2 = [MEMORY[0x1E4F1CA60] dictionary];
  char v3 = *((unsigned char *)a1 + 12);
  if (v3)
  {
    long long v6 = [NSNumber numberWithUnsignedInt:*a1];
    [v2 setObject:v6 forKey:@"attributionIndex"];

    char v3 = *((unsigned char *)a1 + 12);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((a1[3] & 2) == 0)
  {
    goto LABEL_3;
  }
  long long v7 = [NSNumber numberWithUnsignedInt:a1[1]];
  [v2 setObject:v7 forKey:@"iconIndex"];

  if ((a1[3] & 4) != 0)
  {
LABEL_4:
    uint64_t v4 = [NSNumber numberWithUnsignedInt:a1[2]];
    [v2 setObject:v4 forKey:@"regionalResourceIndex"];
  }
LABEL_5:

  return v2;
}

void _GEORegionalResourceIndexFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  id v6 = a1;
  char v3 = [v6 objectForKeyedSubscript:@"regionalResourceIndex"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 12) |= 4u;
    *(_DWORD *)(a2 + 8) = [v3 unsignedIntValue];
  }

  uint64_t v4 = [v6 objectForKeyedSubscript:@"iconIndex"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 12) |= 2u;
    *(_DWORD *)(a2 + 4) = [v4 unsignedIntValue];
  }

  uint64_t v5 = [v6 objectForKeyedSubscript:@"attributionIndex"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 12) |= 1u;
    *(_DWORD *)a2 = [v5 unsignedIntValue];
  }
}

BOOL GEORegionalResourceIndexReadFrom(uint64_t a1, uint64_t a2)
{
  return GEORegionalResourceIndexReadAllFrom(a1, a2);
}

BOOL GEORegionalResourceIndexReadAllFrom(uint64_t a1, uint64_t a2)
{
  char v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    long long v7 = (_DWORD *)(a1 + 4);
    id v8 = (_DWORD *)(a1 + 8);
    long long v9 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v10 = 0;
      unsigned int v11 = 0;
      unint64_t v12 = 0;
      while (1)
      {
        uint64_t v13 = *v3;
        unint64_t v14 = *(void *)(a2 + v13);
        if (v14 == -1 || v14 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v9) + v14);
        *(void *)(a2 + v13) = v14 + 1;
        v12 |= (unint64_t)(v15 & 0x7F) << v10;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v10 += 7;
        if (v11++ >= 9)
        {
          unint64_t v12 = 0;
          int v17 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v17 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v12 = 0;
      }
LABEL_14:
      if (v17 || (v12 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v19 = v12 >> 3;
      if ((v12 >> 3) == 3)
      {
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 12) |= 1u;
        while (1)
        {
          uint64_t v30 = *v3;
          unint64_t v31 = *(void *)(a2 + v30);
          if (v31 == -1 || v31 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v32 = *(unsigned char *)(*(void *)(a2 + *v9) + v31);
          *(void *)(a2 + v30) = v31 + 1;
          v22 |= (unint64_t)(v32 & 0x7F) << v28;
          if ((v32 & 0x80) == 0)
          {
            unint64_t v27 = (_DWORD *)a1;
            goto LABEL_48;
          }
          v28 += 7;
          BOOL v26 = v29++ > 8;
          if (v26)
          {
            LODWORD(v22) = 0;
            unint64_t v27 = (_DWORD *)a1;
            goto LABEL_50;
          }
        }
        unint64_t v27 = (_DWORD *)a1;
LABEL_47:
        *(unsigned char *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if (v19 == 2) {
        break;
      }
      if (v19 == 1)
      {
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 12) |= 4u;
        while (1)
        {
          uint64_t v23 = *v3;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
          {
            unint64_t v27 = v8;
            goto LABEL_47;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v9) + v24);
          *(void *)(a2 + v23) = v24 + 1;
          v22 |= (unint64_t)(v25 & 0x7F) << v20;
          if ((v25 & 0x80) == 0) {
            break;
          }
          v20 += 7;
          BOOL v26 = v21++ > 8;
          if (v26)
          {
            LODWORD(v22) = 0;
            unint64_t v27 = v8;
            goto LABEL_50;
          }
        }
        unint64_t v27 = v8;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_51:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v33 = 0;
    unsigned int v34 = 0;
    uint64_t v22 = 0;
    *(unsigned char *)(a1 + 12) |= 2u;
    while (1)
    {
      uint64_t v35 = *v3;
      unint64_t v36 = *(void *)(a2 + v35);
      if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
      {
        unint64_t v27 = v7;
        goto LABEL_47;
      }
      char v37 = *(unsigned char *)(*(void *)(a2 + *v9) + v36);
      *(void *)(a2 + v35) = v36 + 1;
      v22 |= (unint64_t)(v37 & 0x7F) << v33;
      if ((v37 & 0x80) == 0) {
        break;
      }
      v33 += 7;
      BOOL v26 = v34++ > 8;
      if (v26)
      {
        LODWORD(v22) = 0;
        unint64_t v27 = v7;
        goto LABEL_50;
      }
    }
    unint64_t v27 = v7;
LABEL_48:
    if (*(unsigned char *)(a2 + *v5)) {
      LODWORD(v22) = 0;
    }
LABEL_50:
    *unint64_t v27 = v22;
    goto LABEL_51;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t GEORegionalResourceIndexWriteTo(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 12);
  if ((v2 & 4) == 0)
  {
    if ((*(unsigned char *)(result + 12) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __n128 result = PBDataWriterWriteUint32Field();
    if ((*(unsigned char *)(v1 + 12) & 1) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  __n128 result = PBDataWriterWriteUint32Field();
  char v2 = *(unsigned char *)(v1 + 12);
  if ((v2 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v2 & 1) == 0) {
    return result;
  }
LABEL_7:

  return PBDataWriterWriteUint32Field();
}

BOOL GEORegionalResourceIndexEquals(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t GEORegionalResourceIndexHash()
{
  return PBHashBytes();
}

BOOL GEORegionalResourceIndexIsValid(void *a1)
{
  v4[2] = [a1 position];
  v4[3] = [a1 length];
  v4[0] = 0;
  v4[1] = 0;
  BOOL AllFrom = GEORegionalResourceIndexReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

void sub_1896252B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOResourceReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOResourceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189626DA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOResourceFilterIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_59;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_59;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_61;
          }
LABEL_38:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v26 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v27 = *v2;
              unint64_t v28 = *(void *)&a1[v27];
              if (v28 == -1 || v28 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v29 = v28 + 1;
              int v30 = *(char *)(*(void *)&a1[*v5] + v28);
              *(void *)&a1[v27] = v29;
              if (v30 < 0)
              {
                BOOL v12 = v26++ >= 9;
                if (!v12) {
                  continue;
                }
              }
              goto LABEL_38;
            }
            a1[*v4] = 1;
          }
LABEL_57:
          PBReaderRecallMark();
          goto LABEL_58;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_61;
        }
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0)
          {
            unsigned int v20 = v14++;
            if (v20 <= 8) {
              continue;
            }
          }
          goto LABEL_58;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_58;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_61;
      }
LABEL_58:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_59;
      }
    }
    if (v14 == 2)
    {
      if (!PBReaderPlaceMark())
      {
LABEL_61:
        PBReaderRecallMark();
        return 0;
      }
LABEL_48:
      while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
      {
        unsigned int v31 = a1[*v4];
        if (a1[*v4]) {
          break;
        }
        while (1)
        {
          uint64_t v32 = *v2;
          unint64_t v33 = *(void *)&a1[v32];
          if (v33 == -1 || v33 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v34 = v33 + 1;
          int v35 = *(char *)(*(void *)&a1[*v5] + v33);
          *(void *)&a1[v32] = v34;
          if (v35 < 0)
          {
            BOOL v12 = v31++ >= 9;
            if (!v12) {
              continue;
            }
          }
          goto LABEL_48;
        }
        a1[*v4] = 1;
      }
      goto LABEL_57;
    }
    if ((v8 & 7) != 0) {
      goto LABEL_61;
    }
    while (1)
    {
      uint64_t v21 = *v2;
      unint64_t v22 = *(void *)&a1[v21];
      if (v22 == -1 || v22 >= *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      unint64_t v23 = v22 + 1;
      int v24 = *(char *)(*(void *)&a1[*v5] + v22);
      *(void *)&a1[v21] = v23;
      if (v24 < 0)
      {
        unsigned int v25 = v14++;
        if (v25 <= 8) {
          continue;
        }
      }
      goto LABEL_58;
    }
  }
LABEL_59:
  BOOL v36 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v36;
}

uint64_t _GEOResourceIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  if ((*(_WORD *)(a1 + 112) & 0x1F00) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 112) & 0x800) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 64);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOResourceFilterIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOResourceIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOResourceIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1896278CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOResourceFilterReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOResourceFilterReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896289F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOResourceFilterIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  BOOL v2 = (*(unsigned char *)(a1 + 84) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_189628DA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896294F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896298C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189629C90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962A05C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962A428(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962A7F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962ABC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962AF88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962B354(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962B4C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962B63C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962B7B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962B924(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962BA98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962BC0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962BD80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962BEF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962C2C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962C68C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962CA58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962CE24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962D1EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962D35C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962D4D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962D644(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962D7B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962D92C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962DAA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962DC10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962DD80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962E14C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962E2C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962E434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962E5A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962E714(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962E888(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962E9F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962EE90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962F25C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962F690(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962FA5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962FBD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962FD44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18962FEB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18963002C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896301A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189630314(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189630488(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896305F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18963076C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189630B38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189630F6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189631338(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189631704(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189636878(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189636954(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOResourcesCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v132 = *MEMORY[0x1E4F143B8];
  long long v115 = 0u;
  long long v116 = 0u;
  long long v117 = 0u;
  long long v118 = 0u;
  id v2 = a1[53];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v115 objects:v131 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v116;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v116 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v115 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v115 objects:v131 count:16];
    }
    while (v4);
  }

  long long v113 = 0u;
  long long v114 = 0u;
  long long v111 = 0u;
  long long v112 = 0u;
  id v7 = a1[54];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v111 objects:v130 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v112;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v112 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v111 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v111 objects:v130 count:16];
    }
    while (v9);
  }

  long long v109 = 0u;
  long long v110 = 0u;
  long long v107 = 0u;
  long long v108 = 0u;
  id v12 = a1[41];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v107 objects:v129 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v108;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v108 != v15) {
          objc_enumerationMutation(v12);
        }
        -[GEORegionalResource readAll:](*(void *)(*((void *)&v107 + 1) + 8 * v16++), 1);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v107 objects:v129 count:16];
    }
    while (v14);
  }

  long long v105 = 0u;
  long long v106 = 0u;
  long long v103 = 0u;
  long long v104 = 0u;
  id v17 = a1[8];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v103 objects:v128 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v104;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v104 != v20) {
          objc_enumerationMutation(v17);
        }
        [*(id *)(*((void *)&v103 + 1) + 8 * v21++) readAll:1];
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v103 objects:v128 count:16];
    }
    while (v19);
  }

  [a1[56] readAll:1];
  long long v101 = 0u;
  long long v102 = 0u;
  long long v99 = 0u;
  long long v100 = 0u;
  id v22 = a1[27];
  uint64_t v23 = [v22 countByEnumeratingWithState:&v99 objects:v127 count:16];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)v100;
    do
    {
      uint64_t v26 = 0;
      do
      {
        if (*(void *)v100 != v25) {
          objc_enumerationMutation(v22);
        }
        [*(id *)(*((void *)&v99 + 1) + 8 * v26++) readAll:1];
      }
      while (v24 != v26);
      uint64_t v24 = [v22 countByEnumeratingWithState:&v99 objects:v127 count:16];
    }
    while (v24);
  }

  long long v97 = 0u;
  long long v98 = 0u;
  long long v95 = 0u;
  long long v96 = 0u;
  id v27 = a1[44];
  uint64_t v28 = [v27 countByEnumeratingWithState:&v95 objects:v126 count:16];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = *(void *)v96;
    do
    {
      uint64_t v31 = 0;
      do
      {
        if (*(void *)v96 != v30) {
          objc_enumerationMutation(v27);
        }
        [*(id *)(*((void *)&v95 + 1) + 8 * v31++) readAll:1];
      }
      while (v29 != v31);
      uint64_t v29 = [v27 countByEnumeratingWithState:&v95 objects:v126 count:16];
    }
    while (v29);
  }

  long long v93 = 0u;
  long long v94 = 0u;
  long long v91 = 0u;
  long long v92 = 0u;
  id v32 = a1[18];
  uint64_t v33 = [v32 countByEnumeratingWithState:&v91 objects:v125 count:16];
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = *(void *)v92;
    do
    {
      uint64_t v36 = 0;
      do
      {
        if (*(void *)v92 != v35) {
          objc_enumerationMutation(v32);
        }
        [*(id *)(*((void *)&v91 + 1) + 8 * v36++) readAll:1];
      }
      while (v34 != v36);
      uint64_t v34 = [v32 countByEnumeratingWithState:&v91 objects:v125 count:16];
    }
    while (v34);
  }

  long long v89 = 0u;
  long long v90 = 0u;
  long long v87 = 0u;
  long long v88 = 0u;
  id v37 = a1[17];
  uint64_t v38 = [v37 countByEnumeratingWithState:&v87 objects:v124 count:16];
  if (v38)
  {
    uint64_t v39 = v38;
    uint64_t v40 = *(void *)v88;
    do
    {
      uint64_t v41 = 0;
      do
      {
        if (*(void *)v88 != v40) {
          objc_enumerationMutation(v37);
        }
        -[GEODataSetURLOverride readAll:](*(void *)(*((void *)&v87 + 1) + 8 * v41++), 1);
      }
      while (v39 != v41);
      uint64_t v39 = [v37 countByEnumeratingWithState:&v87 objects:v124 count:16];
    }
    while (v39);
  }

  long long v85 = 0u;
  long long v86 = 0u;
  long long v83 = 0u;
  long long v84 = 0u;
  id v42 = a1[32];
  uint64_t v43 = [v42 countByEnumeratingWithState:&v83 objects:v123 count:16];
  if (v43)
  {
    uint64_t v44 = v43;
    uint64_t v45 = *(void *)v84;
    do
    {
      uint64_t v46 = 0;
      do
      {
        if (*(void *)v84 != v45) {
          objc_enumerationMutation(v42);
        }
        [*(id *)(*((void *)&v83 + 1) + 8 * v46++) readAll:1];
      }
      while (v44 != v46);
      uint64_t v44 = [v42 countByEnumeratingWithState:&v83 objects:v123 count:16];
    }
    while (v44);
  }

  long long v81 = 0u;
  long long v82 = 0u;
  long long v79 = 0u;
  long long v80 = 0u;
  id v47 = a1[55];
  uint64_t v48 = [v47 countByEnumeratingWithState:&v79 objects:v122 count:16];
  if (v48)
  {
    uint64_t v49 = v48;
    uint64_t v50 = *(void *)v80;
    do
    {
      uint64_t v51 = 0;
      do
      {
        if (*(void *)v80 != v50) {
          objc_enumerationMutation(v47);
        }
        [*(id *)(*((void *)&v79 + 1) + 8 * v51++) readAll:1];
      }
      while (v49 != v51);
      uint64_t v49 = [v47 countByEnumeratingWithState:&v79 objects:v122 count:16];
    }
    while (v49);
  }

  long long v77 = 0u;
  long long v78 = 0u;
  long long v75 = 0u;
  long long v76 = 0u;
  id v52 = a1[31];
  uint64_t v53 = [v52 countByEnumeratingWithState:&v75 objects:v121 count:16];
  if (v53)
  {
    uint64_t v54 = v53;
    uint64_t v55 = *(void *)v76;
    do
    {
      uint64_t v56 = 0;
      do
      {
        if (*(void *)v76 != v55) {
          objc_enumerationMutation(v52);
        }
        [*(id *)(*((void *)&v75 + 1) + 8 * v56++) readAll:1];
      }
      while (v54 != v56);
      uint64_t v54 = [v52 countByEnumeratingWithState:&v75 objects:v121 count:16];
    }
    while (v54);
  }

  long long v73 = 0u;
  long long v74 = 0u;
  long long v71 = 0u;
  long long v72 = 0u;
  id v57 = a1[21];
  uint64_t v58 = [v57 countByEnumeratingWithState:&v71 objects:v120 count:16];
  if (v58)
  {
    uint64_t v59 = v58;
    uint64_t v60 = *(void *)v72;
    do
    {
      uint64_t v61 = 0;
      do
      {
        if (*(void *)v72 != v60) {
          objc_enumerationMutation(v57);
        }
        [*(id *)(*((void *)&v71 + 1) + 8 * v61++) readAll:1];
      }
      while (v59 != v61);
      uint64_t v59 = [v57 countByEnumeratingWithState:&v71 objects:v120 count:16];
    }
    while (v59);
  }

  long long v69 = 0u;
  long long v70 = 0u;
  long long v67 = 0u;
  long long v68 = 0u;
  id v62 = a1[33];
  uint64_t v63 = [v62 countByEnumeratingWithState:&v67 objects:v119 count:16];
  if (v63)
  {
    uint64_t v64 = v63;
    uint64_t v65 = *(void *)v68;
    do
    {
      uint64_t v66 = 0;
      do
      {
        if (*(void *)v68 != v65) {
          objc_enumerationMutation(v62);
        }
        objc_msgSend(*(id *)(*((void *)&v67 + 1) + 8 * v66++), "readAll:", 1, (void)v67);
      }
      while (v64 != v66);
      uint64_t v64 = [v62 countByEnumeratingWithState:&v67 objects:v119 count:16];
    }
    while (v64);
  }
}

unint64_t GEOResourcesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOResourcesReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896371E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOResourcesIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_291:
    BOOL v62 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v62;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_291;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      unint64_t v10 = *(void *)&a1[v9];
      if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
        break;
      }
      char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v10 + 1;
      v8 |= (unint64_t)(v11 & 0x7F) << v6;
      if ((v11 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v12 = v7++ >= 9;
      if (v12)
      {
        unint64_t v8 = 0;
        int v13 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v13 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v14 = v8 & 7;
    if (v13 || v14 == 4) {
      goto LABEL_291;
    }
    switch((v8 >> 3))
    {
      case 1u:
        if (v14 != 2 || !PBReaderPlaceMark() || (GEOTileGroupIsValid(a1) & 1) == 0) {
          goto LABEL_293;
        }
        goto LABEL_283;
      case 2u:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOTileSetIsValid(a1)) {
          goto LABEL_293;
        }
        goto LABEL_283;
      case 3u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 4u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 5u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 6u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 8u:
        if (v14 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_293;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_38:
        if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
          goto LABEL_286;
        }
        char v16 = 0;
        unsigned int v17 = 0;
        unint64_t v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          unint64_t v20 = *(void *)&a1[v19];
          if (v20 == -1 || v20 >= *(void *)&a1[*v3]) {
            break;
          }
          char v21 = *(unsigned char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v20 + 1;
          v18 |= (unint64_t)(v21 & 0x7F) << v16;
          if ((v21 & 0x80) == 0) {
            goto LABEL_48;
          }
          v16 += 7;
          BOOL v12 = v17++ >= 9;
          if (v12)
          {
            unint64_t v18 = 0;
            int v22 = a1[*v4];
            goto LABEL_50;
          }
        }
        a1[*v4] = 1;
LABEL_48:
        int v22 = a1[*v4];
        if (a1[*v4]) {
          unint64_t v18 = 0;
        }
LABEL_50:
        int v23 = v18 & 7;
        if (v22 || v23 == 4)
        {
LABEL_286:
          int v60 = a1[*v4];
          PBReaderRecallMark();
          if (v60) {
            goto LABEL_293;
          }
LABEL_283:
          PBReaderRecallMark();
LABEL_284:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_291;
          }
          continue;
        }
        switch((v18 >> 3))
        {
          case 1u:
            if ((v18 & 7) != 0) {
              goto LABEL_292;
            }
            unsigned int v25 = 0;
            while (1)
            {
              uint64_t v26 = *v2;
              unint64_t v27 = *(void *)&a1[v26];
              if (v27 == -1 || v27 >= *(void *)&a1[*v3]) {
                goto LABEL_85;
              }
              unint64_t v28 = v27 + 1;
              int v29 = *(char *)(*(void *)&a1[*v5] + v27);
              *(void *)&a1[v26] = v28;
              if (v29 < 0)
              {
                BOOL v30 = v25++ > 8;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_38;
            }
          case 2u:
            if ((v18 & 7) != 0) {
              goto LABEL_292;
            }
            unsigned int v31 = 0;
            while (1)
            {
              uint64_t v32 = *v2;
              unint64_t v33 = *(void *)&a1[v32];
              if (v33 == -1 || v33 >= *(void *)&a1[*v3]) {
                goto LABEL_85;
              }
              unint64_t v34 = v33 + 1;
              int v35 = *(char *)(*(void *)&a1[*v5] + v33);
              *(void *)&a1[v32] = v34;
              if (v35 < 0)
              {
                BOOL v30 = v31++ > 8;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_38;
            }
          case 3u:
            if ((v18 & 7) != 0) {
              goto LABEL_292;
            }
            unsigned int v36 = 0;
            do
            {
              uint64_t v37 = *v2;
              unint64_t v38 = *(void *)&a1[v37];
              if (v38 == -1 || v38 >= *(void *)&a1[*v3])
              {
LABEL_85:
                a1[*v4] = 1;
                goto LABEL_38;
              }
              unint64_t v39 = v38 + 1;
              int v40 = *(char *)(*(void *)&a1[*v5] + v38);
              *(void *)&a1[v37] = v39;
              if ((v40 & 0x80000000) == 0) {
                break;
              }
              BOOL v30 = v36++ > 8;
            }
            while (!v30);
            goto LABEL_38;
          case 4u:
            if (v23 != 2) {
              goto LABEL_292;
            }
            goto LABEL_93;
          case 5u:
            goto LABEL_93;
          case 6u:
            if (v23 != 2 || !PBReaderPlaceMark() || !GEOAttributionIsValid(a1)) {
              goto LABEL_292;
            }
            goto LABEL_91;
          case 7u:
            if (v23 != 2) {
              goto LABEL_292;
            }
            goto LABEL_93;
          default:
            if ((v18 >> 3) != 29)
            {
LABEL_93:
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_292;
              }
              goto LABEL_38;
            }
            if (v23 == 2 && PBReaderPlaceMark() && GEOTileSetRegionIsValid(a1))
            {
LABEL_91:
              PBReaderRecallMark();
              goto LABEL_38;
            }
LABEL_292:
            PBReaderRecallMark();
            break;
        }
LABEL_293:
        PBReaderRecallMark();
        return 0;
      case 9u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0xBu:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOAttributionIsValid(a1)) {
          goto LABEL_293;
        }
        goto LABEL_283;
      case 0x1Eu:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x1Fu:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x21u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x25u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x26u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x28u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x29u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x2Bu:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x2Cu:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x2Du:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x2Eu:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x2Fu:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x30u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x31u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x32u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x33u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x34u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x35u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x36u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x37u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x3Du:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x3Eu:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x40u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x41u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x42u:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOVersionManifestIsValid(a1)) {
          goto LABEL_293;
        }
        goto LABEL_283;
      case 0x43u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x44u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x45u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x46u:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1)) {
          goto LABEL_293;
        }
        goto LABEL_283;
      case 0x47u:
        if ((v8 & 7) != 0) {
          goto LABEL_293;
        }
        unsigned int v41 = 0;
        while (1)
        {
          uint64_t v42 = *v2;
          unint64_t v43 = *(void *)&a1[v42];
          if (v43 == -1 || v43 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v44 = v43 + 1;
          int v45 = *(char *)(*(void *)&a1[*v5] + v43);
          *(void *)&a1[v42] = v44;
          if (v45 < 0)
          {
            BOOL v30 = v41++ > 8;
            if (!v30) {
              continue;
            }
          }
          goto LABEL_284;
        }
        a1[*v4] = 1;
        goto LABEL_284;
      case 0x48u:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOResourceIsValid(a1)) {
          goto LABEL_293;
        }
        goto LABEL_283;
      case 0x49u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x4Au:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEODataSetDescriptionIsValid(a1)) {
          goto LABEL_293;
        }
        goto LABEL_283;
      case 0x4Bu:
        if (v14 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_293;
        }
        [a1 position];
        [a1 length];
LABEL_184:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v46 = 0;
          unsigned int v47 = 0;
          unint64_t v48 = 0;
          while (2)
          {
            uint64_t v49 = *v2;
            unint64_t v50 = *(void *)&a1[v49];
            if (v50 == -1 || v50 >= *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)&a1[*v5] + v50);
              *(void *)&a1[v49] = v50 + 1;
              v48 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                BOOL v12 = v47++ >= 9;
                if (v12)
                {
                  unint64_t v48 = 0;
                  int v52 = a1[*v4];
                  goto LABEL_196;
                }
                continue;
              }
            }
            break;
          }
          int v52 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v48 = 0;
          }
LABEL_196:
          int v53 = v48 & 7;
          if (v52) {
            BOOL v54 = 1;
          }
          else {
            BOOL v54 = v53 == 4;
          }
          if (!v54)
          {
            switch((v48 >> 3))
            {
              case 1u:
                if ((v48 & 7) != 0) {
                  goto LABEL_292;
                }
                unsigned int v55 = 0;
                break;
              case 2u:
                if (v53 == 2) {
                  goto LABEL_240;
                }
                goto LABEL_292;
              case 3u:
                if (v53 == 2) {
                  goto LABEL_240;
                }
                goto LABEL_292;
              case 4u:
                if (v53 == 2) {
                  goto LABEL_240;
                }
                goto LABEL_292;
              case 5u:
                if (v53 == 2) {
                  goto LABEL_240;
                }
                goto LABEL_292;
              case 6u:
                if (v53 == 2) {
                  goto LABEL_240;
                }
                goto LABEL_292;
              case 7u:
                if (v53 == 2) {
                  goto LABEL_240;
                }
                goto LABEL_292;
              case 8u:
                if (v53 == 2) {
                  goto LABEL_240;
                }
                goto LABEL_292;
              case 9u:
                if (v53 == 2) {
                  goto LABEL_240;
                }
                goto LABEL_292;
              case 0xAu:
                if (v53 == 2) {
                  goto LABEL_240;
                }
                goto LABEL_292;
              case 0xBu:
                if (v53 == 2) {
                  goto LABEL_240;
                }
                goto LABEL_292;
              case 0xCu:
                if (v53 == 2) {
                  goto LABEL_240;
                }
                goto LABEL_292;
              case 0xDu:
                if (v53 == 2) {
                  goto LABEL_240;
                }
                goto LABEL_292;
              case 0xEu:
                if (v53 == 2) {
                  goto LABEL_240;
                }
                goto LABEL_292;
              case 0xFu:
                if (v53 == 2) {
                  goto LABEL_240;
                }
                goto LABEL_292;
              case 0x10u:
                if (v53 != 2) {
                  goto LABEL_292;
                }
LABEL_240:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_292;
                }
                continue;
              default:
                if (!PBReaderSkipValueWithTag()) {
                  goto LABEL_292;
                }
                continue;
            }
            do
            {
              uint64_t v56 = *v2;
              unint64_t v57 = *(void *)&a1[v56];
              if (v57 == -1 || v57 >= *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_184;
              }
              unint64_t v58 = v57 + 1;
              int v59 = *(char *)(*(void *)&a1[*v5] + v57);
              *(void *)&a1[v56] = v58;
              if ((v59 & 0x80000000) == 0) {
                break;
              }
              BOOL v30 = v55++ > 8;
            }
            while (!v30);
            continue;
          }
          break;
        }
        int v61 = a1[*v4];
        PBReaderRecallMark();
        if (!v61) {
          goto LABEL_283;
        }
        goto LABEL_293;
      case 0x4Du:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x4Eu:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x4Fu:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x50u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x51u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x52u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x53u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x55u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x58u:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x59u:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOMuninVersionIsValid(a1)) {
          goto LABEL_293;
        }
        goto LABEL_283;
      case 0x5Bu:
        if (v14 == 2) {
          goto LABEL_266;
        }
        goto LABEL_293;
      case 0x5Cu:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOURLInfoSetIsValid(a1)) {
          goto LABEL_293;
        }
        goto LABEL_283;
      case 0x5Du:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOMuninBucketIsValid(a1)) {
          goto LABEL_293;
        }
        goto LABEL_283;
      case 0x5Eu:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEODisplayStringIsValid(a1)) {
          goto LABEL_293;
        }
        goto LABEL_283;
      case 0x5Fu:
        if (v14 == 2 && PBReaderPlaceMark() && GEOOfflineMetadataIsValid(a1)) {
          goto LABEL_283;
        }
        goto LABEL_293;
      default:
LABEL_266:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_293;
        }
        goto LABEL_284;
    }
  }
}

uint64_t GEOTileGroupIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
    char v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_182;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v2;
        unint64_t v11 = *(void *)&a1[v10];
        if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v11 + 1;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        BOOL v13 = v8++ >= 9;
        if (v13)
        {
          unint64_t v9 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v15 = v9 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_182;
      }
      switch((v9 >> 3))
      {
        case 1u:
          if (v5 || (v9 & 7) != 0) {
            goto LABEL_190;
          }
          unsigned int v17 = 0;
          do
          {
            uint64_t v18 = *v2;
            unint64_t v19 = *(void *)&a1[v18];
            if (v19 == -1 || v19 >= *(void *)&a1[*v3])
            {
              int v5 = 1;
              a1[*v4] = 1;
              goto LABEL_108;
            }
            unint64_t v20 = v19 + 1;
            int v21 = *(char *)(*(void *)&a1[*v6] + v19);
            *(void *)&a1[v18] = v20;
            int v5 = 1;
            if ((v21 & 0x80000000) == 0) {
              break;
            }
            BOOL v22 = v17++ > 8;
          }
          while (!v22);
          goto LABEL_108;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVersionedTileSetIsValid(a1)) {
            goto LABEL_190;
          }
          goto LABEL_83;
        case 3u:
          if (v15 != 2)
          {
            if ((v9 & 7) != 0) {
              goto LABEL_190;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              unint64_t v24 = *(void *)&a1[v23];
              if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
                goto LABEL_107;
              }
              unint64_t v25 = v24 + 1;
              int v26 = *(char *)(*(void *)&a1[*v6] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                unsigned int v27 = v15++;
                if (v27 <= 8) {
                  continue;
                }
              }
              goto LABEL_108;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_190;
          }
LABEL_112:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v68 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v69 = *v2;
              unint64_t v70 = *(void *)&a1[v69];
              if (v70 == -1 || v70 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v71 = v70 + 1;
              int v72 = *(char *)(*(void *)&a1[*v6] + v70);
              *(void *)&a1[v69] = v71;
              if (v72 < 0)
              {
                BOOL v13 = v68++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_112;
            }
            a1[*v4] = 1;
          }
          goto LABEL_83;
        case 4u:
          if (v15 != 2)
          {
            if ((v9 & 7) != 0) {
              goto LABEL_190;
            }
            while (1)
            {
              uint64_t v28 = *v2;
              unint64_t v29 = *(void *)&a1[v28];
              if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
                goto LABEL_107;
              }
              unint64_t v30 = v29 + 1;
              int v31 = *(char *)(*(void *)&a1[*v6] + v29);
              *(void *)&a1[v28] = v30;
              if (v31 < 0)
              {
                unsigned int v32 = v15++;
                if (v32 <= 8) {
                  continue;
                }
              }
              goto LABEL_108;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_190;
          }
LABEL_122:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v73 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v74 = *v2;
              unint64_t v75 = *(void *)&a1[v74];
              if (v75 == -1 || v75 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v76 = v75 + 1;
              int v77 = *(char *)(*(void *)&a1[*v6] + v75);
              *(void *)&a1[v74] = v76;
              if (v77 < 0)
              {
                BOOL v13 = v73++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_122;
            }
            a1[*v4] = 1;
          }
          goto LABEL_83;
        case 5u:
          if (v15 != 2)
          {
            if ((v9 & 7) != 0) {
              goto LABEL_190;
            }
            while (1)
            {
              uint64_t v33 = *v2;
              unint64_t v34 = *(void *)&a1[v33];
              if (v34 == -1 || v34 >= *(void *)&a1[*v3]) {
                goto LABEL_107;
              }
              unint64_t v35 = v34 + 1;
              int v36 = *(char *)(*(void *)&a1[*v6] + v34);
              *(void *)&a1[v33] = v35;
              if (v36 < 0)
              {
                unsigned int v37 = v15++;
                if (v37 <= 8) {
                  continue;
                }
              }
              goto LABEL_108;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_190;
          }
LABEL_132:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v78 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v79 = *v2;
              unint64_t v80 = *(void *)&a1[v79];
              if (v80 == -1 || v80 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v81 = v80 + 1;
              int v82 = *(char *)(*(void *)&a1[*v6] + v80);
              *(void *)&a1[v79] = v81;
              if (v82 < 0)
              {
                BOOL v13 = v78++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_132;
            }
            a1[*v4] = 1;
          }
          goto LABEL_83;
        case 6u:
          if (v15 != 2)
          {
            if ((v9 & 7) != 0) {
              goto LABEL_190;
            }
            while (1)
            {
              uint64_t v38 = *v2;
              unint64_t v39 = *(void *)&a1[v38];
              if (v39 == -1 || v39 >= *(void *)&a1[*v3]) {
                goto LABEL_107;
              }
              unint64_t v40 = v39 + 1;
              int v41 = *(char *)(*(void *)&a1[*v6] + v39);
              *(void *)&a1[v38] = v40;
              if (v41 < 0)
              {
                unsigned int v42 = v15++;
                if (v42 <= 8) {
                  continue;
                }
              }
              goto LABEL_108;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_190;
          }
LABEL_142:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v83 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v84 = *v2;
              unint64_t v85 = *(void *)&a1[v84];
              if (v85 == -1 || v85 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v86 = v85 + 1;
              int v87 = *(char *)(*(void *)&a1[*v6] + v85);
              *(void *)&a1[v84] = v86;
              if (v87 < 0)
              {
                BOOL v13 = v83++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_142;
            }
            a1[*v4] = 1;
          }
          goto LABEL_83;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORegionalResourceIndexIsValid(a1)) {
            goto LABEL_190;
          }
          goto LABEL_83;
        case 8u:
          if (v15 != 2)
          {
            if ((v9 & 7) != 0) {
              goto LABEL_190;
            }
            while (1)
            {
              uint64_t v43 = *v2;
              unint64_t v44 = *(void *)&a1[v43];
              if (v44 == -1 || v44 >= *(void *)&a1[*v3]) {
                goto LABEL_107;
              }
              unint64_t v45 = v44 + 1;
              int v46 = *(char *)(*(void *)&a1[*v6] + v44);
              *(void *)&a1[v43] = v45;
              if (v46 < 0)
              {
                unsigned int v47 = v15++;
                if (v47 <= 8) {
                  continue;
                }
              }
              goto LABEL_108;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_190;
          }
LABEL_152:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v88 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v89 = *v2;
              unint64_t v90 = *(void *)&a1[v89];
              if (v90 == -1 || v90 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v91 = v90 + 1;
              int v92 = *(char *)(*(void *)&a1[*v6] + v90);
              *(void *)&a1[v89] = v91;
              if (v92 < 0)
              {
                BOOL v13 = v88++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_152;
            }
            a1[*v4] = 1;
          }
          goto LABEL_83;
        case 0xAu:
          if (v15 != 2)
          {
            if ((v9 & 7) != 0) {
              goto LABEL_190;
            }
            while (1)
            {
              uint64_t v48 = *v2;
              unint64_t v49 = *(void *)&a1[v48];
              if (v49 == -1 || v49 >= *(void *)&a1[*v3]) {
                goto LABEL_107;
              }
              unint64_t v50 = v49 + 1;
              int v51 = *(char *)(*(void *)&a1[*v6] + v49);
              *(void *)&a1[v48] = v50;
              if (v51 < 0)
              {
                unsigned int v52 = v15++;
                if (v52 <= 8) {
                  continue;
                }
              }
              goto LABEL_108;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_190;
          }
LABEL_162:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v93 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v94 = *v2;
              unint64_t v95 = *(void *)&a1[v94];
              if (v95 == -1 || v95 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v96 = v95 + 1;
              int v97 = *(char *)(*(void *)&a1[*v6] + v95);
              *(void *)&a1[v94] = v96;
              if (v97 < 0)
              {
                BOOL v13 = v93++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_162;
            }
            a1[*v4] = 1;
          }
          goto LABEL_83;
        case 0xBu:
          if (v15 == 2 && PBReaderPlaceMark() && GEOTileSetRegionIsValid(a1)) {
            goto LABEL_83;
          }
          goto LABEL_190;
        case 0xCu:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_190:
              PBReaderRecallMark();
              return 0;
            }
LABEL_172:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v98 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v99 = *v2;
                unint64_t v100 = *(void *)&a1[v99];
                if (v100 == -1 || v100 >= *(void *)&a1[*v3]) {
                  break;
                }
                unint64_t v101 = v100 + 1;
                int v102 = *(char *)(*(void *)&a1[*v6] + v100);
                *(void *)&a1[v99] = v101;
                if (v102 < 0)
                {
                  BOOL v13 = v98++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_172;
              }
              a1[*v4] = 1;
            }
LABEL_83:
            PBReaderRecallMark();
          }
          else
          {
            if ((v9 & 7) != 0) {
              goto LABEL_190;
            }
            while (1)
            {
              uint64_t v53 = *v2;
              unint64_t v54 = *(void *)&a1[v53];
              if (v54 == -1 || v54 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v55 = v54 + 1;
              int v56 = *(char *)(*(void *)&a1[*v6] + v54);
              *(void *)&a1[v53] = v55;
              if (v56 < 0)
              {
                unsigned int v57 = v15++;
                if (v57 <= 8) {
                  continue;
                }
              }
              goto LABEL_108;
            }
LABEL_107:
            a1[*v4] = 1;
          }
LABEL_108:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_182;
          }
          break;
        case 0xEu:
          if ((v9 & 7) != 0) {
            goto LABEL_190;
          }
          unsigned int v58 = 0;
          while (1)
          {
            uint64_t v59 = *v2;
            unint64_t v60 = *(void *)&a1[v59];
            if (v60 == -1 || v60 >= *(void *)&a1[*v3]) {
              goto LABEL_107;
            }
            unint64_t v61 = v60 + 1;
            int v62 = *(char *)(*(void *)&a1[*v6] + v60);
            *(void *)&a1[v59] = v61;
            if (v62 < 0)
            {
              BOOL v22 = v58++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_108;
          }
        case 0xFu:
          if ((v9 & 7) != 0) {
            goto LABEL_190;
          }
          unsigned int v63 = 0;
          while (1)
          {
            uint64_t v64 = *v2;
            unint64_t v65 = *(void *)&a1[v64];
            if (v65 == -1 || v65 >= *(void *)&a1[*v3]) {
              goto LABEL_107;
            }
            unint64_t v66 = v65 + 1;
            int v67 = *(char *)(*(void *)&a1[*v6] + v65);
            *(void *)&a1[v64] = v66;
            if (v67 < 0)
            {
              BOOL v22 = v63++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_108;
          }
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_190;
          }
          goto LABEL_108;
      }
    }
  }
  int v5 = 0;
LABEL_182:
  if (a1[*v4]) {
    BOOL v103 = 1;
  }
  else {
    BOOL v103 = v5 == 0;
  }
  uint64_t v104 = !v103;
  PBReaderRecallMark();
  return v104;
}

BOOL GEOVersionManifestIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark())
        {
LABEL_61:
          PBReaderRecallMark();
          return 0;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_22:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v16 = 0;
          unsigned int v17 = 0;
          unint64_t v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            unint64_t v20 = *(void *)&a1[v19];
            if (v20 == -1 || v20 >= *(void *)&a1[*v3]) {
              break;
            }
            char v21 = *(unsigned char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v20 + 1;
            v18 |= (unint64_t)(v21 & 0x7F) << v16;
            if ((v21 & 0x80) == 0) {
              goto LABEL_32;
            }
            v16 += 7;
            BOOL v12 = v17++ >= 9;
            if (v12)
            {
              unint64_t v18 = 0;
              int v22 = a1[*v4];
              goto LABEL_34;
            }
          }
          a1[*v4] = 1;
LABEL_32:
          int v22 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v18 = 0;
          }
LABEL_34:
          int v23 = v18 & 7;
          if (v22 || v23 == 4) {
            break;
          }
          if ((v18 >> 3) == 2)
          {
            if ((v18 & 7) != 0) {
              goto LABEL_60;
            }
            unsigned int v25 = 0;
            while (1)
            {
              uint64_t v26 = *v2;
              unint64_t v27 = *(void *)&a1[v26];
              if (v27 == -1 || v27 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v28 = v27 + 1;
              int v29 = *(char *)(*(void *)&a1[*v5] + v27);
              *(void *)&a1[v26] = v28;
              if (v29 < 0 && v25++ <= 8) {
                continue;
              }
              goto LABEL_22;
            }
            a1[*v4] = 1;
          }
          else if ((v18 >> 3) == 1)
          {
            if (v23 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_60:
              PBReaderRecallMark();
              goto LABEL_61;
            }
          }
          else if (!PBReaderSkipValueWithTag())
          {
            goto LABEL_60;
          }
        }
        int v31 = a1[*v4];
        PBReaderRecallMark();
        if (v31) {
          goto LABEL_61;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_61;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOURLInfoSetIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_37;
          }
          unsigned int v16 = 0;
          do
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_23;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if ((v20 & 0x80000000) == 0) {
              break;
            }
          }
          while (v16++ <= 8);
          goto LABEL_23;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
        case 0xDu:
        case 0xEu:
        case 0xFu:
        case 0x10u:
        case 0x11u:
        case 0x12u:
        case 0x13u:
        case 0x14u:
        case 0x15u:
        case 0x16u:
        case 0x17u:
        case 0x18u:
        case 0x19u:
        case 0x1Au:
        case 0x1Bu:
        case 0x1Cu:
        case 0x1Du:
        case 0x1Eu:
        case 0x1Fu:
        case 0x20u:
        case 0x21u:
        case 0x22u:
        case 0x23u:
        case 0x24u:
        case 0x25u:
        case 0x26u:
        case 0x27u:
        case 0x28u:
        case 0x29u:
        case 0x2Au:
        case 0x2Bu:
        case 0x2Cu:
        case 0x2Du:
        case 0x2Eu:
        case 0x2Fu:
        case 0x30u:
        case 0x31u:
        case 0x32u:
        case 0x33u:
        case 0x34u:
        case 0x35u:
        case 0x36u:
        case 0x37u:
        case 0x38u:
        case 0x39u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOURLInfoIsValid(a1)) {
            goto LABEL_37;
          }
          PBReaderRecallMark();
          goto LABEL_23;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_37:
            PBReaderRecallMark();
            return 0;
          }
LABEL_23:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_36;
          }
          break;
      }
    }
  }
LABEL_36:
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

os_unfair_lock_s *GEOResourcesIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOResourcesIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 122);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18963BFE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18963D3D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOTileGroupReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (a2)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 272));
    char v6 = (int *)MEMORY[0x1E4F940E0];
    *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 268);
    [(id)v3 seekToOffset:*(unsigned int *)(a1 + 264)];
    uint64_t v7 = 0;
    char v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint16x4_t v12 = (uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 288));
    unsigned int v13 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16(v12, (uint16x4_t)0xFFFCFFF6FFF5FFF7), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 288) >> 6) & 1)+ ((*(_WORD *)(a1 + 288) >> 7) & 1)+ ((*(_WORD *)(a1 + 288) >> 12) & 1))+ (unsigned __int16)vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16(v12, (uint16x4_t)0xFFFEFFF8FFFBFFFDLL), (int8x8_t)0x1000100010001));
    while (2)
    {
      uint64_t v14 = 1;
      uint64_t v15 = 1;
      uint64_t v16 = 1;
      switch(a3[v7])
      {
        case -4:
          ++v13;
          goto LABEL_8;
        case -3:
          char v8 = 1;
          goto LABEL_7;
        case -2:
          uint64_t v15 = v10;
          goto LABEL_10;
        case -1:
          goto LABEL_10;
        case 0:
          BOOL v17 = v13 > 7;
          int v18 = v17 & ~v11 | v9;
          int v19 = v17 | v11;
          int v20 = (int *)MEMORY[0x1E4F940E8];
          if (((v17 | v11) | v8)) {
            char v21 = 0;
          }
          else {
            char v21 = a3;
          }
          int v152 = 1;
          if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
            goto LABEL_269;
          }
          char v151 = v17 & ~(_BYTE)v11 | v9;
          int v154 = (v7 != 0) | v19 | v18;
          char v155 = (v21 == 0) | v19;
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          int v23 = (int *)MEMORY[0x1E4F940B8];
          char v153 = v17 | v11;
          break;
        default:
          ++v13;
LABEL_7:
          uint64_t v14 = v9;
LABEL_8:
          uint64_t v15 = v10;
          uint64_t v16 = v11;
LABEL_10:
          ++v7;
          uint64_t v9 = v14;
          uint64_t v10 = v15;
          uint64_t v11 = v16;
          continue;
      }
      break;
    }
    while (!*(unsigned char *)(v3 + *v22))
    {
      char v24 = 0;
      unsigned int v25 = 0;
      unint64_t v26 = 0;
      while (1)
      {
        uint64_t v27 = *v20;
        unint64_t v28 = *(void *)(v3 + v27);
        if (v28 == -1 || v28 >= *(void *)(v3 + *v6)) {
          break;
        }
        char v29 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
        *(void *)(v3 + v27) = v28 + 1;
        v26 |= (unint64_t)(v29 & 0x7F) << v24;
        if ((v29 & 0x80) == 0) {
          goto LABEL_25;
        }
        v24 += 7;
        BOOL v30 = v25++ >= 9;
        if (v30)
        {
          unint64_t v26 = 0;
          int v31 = *(unsigned __int8 *)(v3 + *v22);
          goto LABEL_27;
        }
      }
      *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
      int v31 = *(unsigned __int8 *)(v3 + *v22);
      if (*(unsigned char *)(v3 + *v22)) {
        unint64_t v26 = 0;
      }
LABEL_27:
      int v32 = v26 & 7;
      if (v31 || v32 == 4) {
        break;
      }
      unint64_t v34 = v26 >> 3;
      BOOL v35 = v19;
      if ((v155 & 1) == 0)
      {
        int v36 = v21;
        do
        {
          int v38 = *v36++;
          int v37 = v38;
          BOOL v35 = v38 != 0;
          if (v38) {
            BOOL v39 = v37 == v34;
          }
          else {
            BOOL v39 = 1;
          }
        }
        while (!v39);
      }
      switch((int)v34)
      {
        case 1:
          if ((v8 & 1) == 0) {
            goto LABEL_197;
          }
          char v40 = 0;
          unsigned int v41 = 0;
          uint64_t v42 = 0;
          int v23 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v43 = *v20;
            unint64_t v44 = *(void *)(v3 + v43);
            if (v44 == -1 || v44 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v45 = *(unsigned char *)(*(void *)(v3 + *v23) + v44);
            *(void *)(v3 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if ((v45 & 0x80) == 0) {
              goto LABEL_200;
            }
            v40 += 7;
            BOOL v30 = v41++ >= 9;
            if (v30)
            {
              LODWORD(v42) = 0;
              goto LABEL_202;
            }
          }
          *(unsigned char *)(v3 + *v22) = 1;
LABEL_200:
          if (*(unsigned char *)(v3 + *v22)) {
            LODWORD(v42) = 0;
          }
LABEL_202:
          uint64_t v103 = 276;
          goto LABEL_211;
        case 2:
          if (!v35 || (*(_WORD *)(a1 + 288) & 0x800) != 0) {
            goto LABEL_197;
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_291;
          }
          -[GEOTileGroup _reserveTileSets:](a1, 1uLL);
          if (!GEOVersionedTileSetReadAllFrom((_DWORD *)(*(void *)(a1 + 216) + 8 * *(void *)(a1 + 224)), v3)) {
            goto LABEL_291;
          }
          PBReaderRecallMark();
          uint64_t v46 = 224;
          goto LABEL_164;
        case 3:
          if (!v35 || (*(_WORD *)(a1 + 288) & 0x200) != 0) {
            goto LABEL_197;
          }
          if (v32 != 2)
          {
            char v104 = 0;
            unsigned int v105 = 0;
            uint64_t v106 = 0;
            int v23 = (int *)MEMORY[0x1E4F940B8];
            while (1)
            {
              uint64_t v107 = *v20;
              unint64_t v108 = *(void *)(v3 + v107);
              if (v108 == -1 || v108 >= *(void *)(v3 + *v6)) {
                goto LABEL_261;
              }
              char v109 = *(unsigned char *)(*(void *)(v3 + *v23) + v108);
              *(void *)(v3 + v107) = v108 + 1;
              v106 |= (unint64_t)(v109 & 0x7F) << v104;
              if (v109 < 0)
              {
                v104 += 7;
                BOOL v30 = v105++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_262;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_291;
          }
          int v23 = (int *)MEMORY[0x1E4F940B8];
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v22)) {
              break;
            }
            char v47 = 0;
            unsigned int v48 = 0;
            uint64_t v49 = 0;
            while (1)
            {
              uint64_t v50 = *v20;
              unint64_t v51 = *(void *)(v3 + v50);
              if (v51 == -1 || v51 >= *(void *)(v3 + *v6)) {
                break;
              }
              char v52 = *(unsigned char *)(*(void *)(v3 + *v23) + v51);
              *(void *)(v3 + v50) = v51 + 1;
              v49 |= (unint64_t)(v52 & 0x7F) << v47;
              if (v52 < 0)
              {
                v47 += 7;
                BOOL v30 = v48++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_66;
            }
            *(unsigned char *)(v3 + *v22) = 1;
LABEL_66:
            PBRepeatedUInt32Add();
          }
          goto LABEL_180;
        case 4:
          if (!v35 || (*(_WORD *)(a1 + 288) & 0x400) != 0) {
            goto LABEL_197;
          }
          if (v32 != 2)
          {
            char v110 = 0;
            unsigned int v111 = 0;
            uint64_t v112 = 0;
            int v23 = (int *)MEMORY[0x1E4F940B8];
            while (1)
            {
              uint64_t v113 = *v20;
              unint64_t v114 = *(void *)(v3 + v113);
              if (v114 == -1 || v114 >= *(void *)(v3 + *v6)) {
                goto LABEL_261;
              }
              char v115 = *(unsigned char *)(*(void *)(v3 + *v23) + v114);
              *(void *)(v3 + v113) = v114 + 1;
              v112 |= (unint64_t)(v115 & 0x7F) << v110;
              if (v115 < 0)
              {
                v110 += 7;
                BOOL v30 = v111++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_262;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_291;
          }
          int v23 = (int *)MEMORY[0x1E4F940B8];
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v22)) {
              break;
            }
            char v53 = 0;
            unsigned int v54 = 0;
            uint64_t v55 = 0;
            while (1)
            {
              uint64_t v56 = *v20;
              unint64_t v57 = *(void *)(v3 + v56);
              if (v57 == -1 || v57 >= *(void *)(v3 + *v6)) {
                break;
              }
              char v58 = *(unsigned char *)(*(void *)(v3 + *v23) + v57);
              *(void *)(v3 + v56) = v57 + 1;
              v55 |= (unint64_t)(v58 & 0x7F) << v53;
              if (v58 < 0)
              {
                v53 += 7;
                BOOL v30 = v54++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_82;
            }
            *(unsigned char *)(v3 + *v22) = 1;
LABEL_82:
            PBRepeatedUInt32Add();
          }
          goto LABEL_180;
        case 5:
          if (!v35 || (*(_WORD *)(a1 + 288) & 0x10) != 0) {
            goto LABEL_197;
          }
          if (v32 != 2)
          {
            char v116 = 0;
            unsigned int v117 = 0;
            uint64_t v118 = 0;
            int v23 = (int *)MEMORY[0x1E4F940B8];
            while (1)
            {
              uint64_t v119 = *v20;
              unint64_t v120 = *(void *)(v3 + v119);
              if (v120 == -1 || v120 >= *(void *)(v3 + *v6)) {
                goto LABEL_261;
              }
              char v121 = *(unsigned char *)(*(void *)(v3 + *v23) + v120);
              *(void *)(v3 + v119) = v120 + 1;
              v118 |= (unint64_t)(v121 & 0x7F) << v116;
              if (v121 < 0)
              {
                v116 += 7;
                BOOL v30 = v117++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_262;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_291;
          }
          int v23 = (int *)MEMORY[0x1E4F940B8];
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v22)) {
              break;
            }
            char v59 = 0;
            unsigned int v60 = 0;
            uint64_t v61 = 0;
            while (1)
            {
              uint64_t v62 = *v20;
              unint64_t v63 = *(void *)(v3 + v62);
              if (v63 == -1 || v63 >= *(void *)(v3 + *v6)) {
                break;
              }
              char v64 = *(unsigned char *)(*(void *)(v3 + *v23) + v63);
              *(void *)(v3 + v62) = v63 + 1;
              v61 |= (unint64_t)(v64 & 0x7F) << v59;
              if (v64 < 0)
              {
                v59 += 7;
                BOOL v30 = v60++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_98;
            }
            *(unsigned char *)(v3 + *v22) = 1;
LABEL_98:
            PBRepeatedUInt32Add();
          }
          goto LABEL_180;
        case 6:
          if (!v35 || (*(_WORD *)(a1 + 288) & 0x40) != 0) {
            goto LABEL_197;
          }
          if (v32 != 2)
          {
            char v122 = 0;
            unsigned int v123 = 0;
            uint64_t v124 = 0;
            int v23 = (int *)MEMORY[0x1E4F940B8];
            while (1)
            {
              uint64_t v125 = *v20;
              unint64_t v126 = *(void *)(v3 + v125);
              if (v126 == -1 || v126 >= *(void *)(v3 + *v6)) {
                goto LABEL_261;
              }
              char v127 = *(unsigned char *)(*(void *)(v3 + *v23) + v126);
              *(void *)(v3 + v125) = v126 + 1;
              v124 |= (unint64_t)(v127 & 0x7F) << v122;
              if (v127 < 0)
              {
                v122 += 7;
                BOOL v30 = v123++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_262;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_291;
          }
          int v23 = (int *)MEMORY[0x1E4F940B8];
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v22)) {
              break;
            }
            char v65 = 0;
            unsigned int v66 = 0;
            uint64_t v67 = 0;
            while (1)
            {
              uint64_t v68 = *v20;
              unint64_t v69 = *(void *)(v3 + v68);
              if (v69 == -1 || v69 >= *(void *)(v3 + *v6)) {
                break;
              }
              char v70 = *(unsigned char *)(*(void *)(v3 + *v23) + v69);
              *(void *)(v3 + v68) = v69 + 1;
              v67 |= (unint64_t)(v70 & 0x7F) << v65;
              if (v70 < 0)
              {
                v65 += 7;
                BOOL v30 = v66++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_114;
            }
            *(unsigned char *)(v3 + *v22) = 1;
LABEL_114:
            PBRepeatedUInt32Add();
          }
          goto LABEL_180;
        case 7:
          if (!v35 || (*(_WORD *)(a1 + 288) & 0x80) != 0) {
            goto LABEL_197;
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_291;
          }
          -[GEOTileGroup _reserveRegionalResourceIndexs:](a1, 1uLL);
          if (!GEORegionalResourceIndexReadAllFrom(*(void *)(a1 + 120) + 16 * *(void *)(a1 + 128), v3)) {
            goto LABEL_291;
          }
          PBReaderRecallMark();
          uint64_t v46 = 128;
          goto LABEL_164;
        case 8:
          if (!v35 || (*(_WORD *)(a1 + 288) & 0x1000) != 0) {
            goto LABEL_197;
          }
          if (v32 != 2)
          {
            char v128 = 0;
            unsigned int v129 = 0;
            uint64_t v130 = 0;
            int v23 = (int *)MEMORY[0x1E4F940B8];
            while (1)
            {
              uint64_t v131 = *v20;
              unint64_t v132 = *(void *)(v3 + v131);
              if (v132 == -1 || v132 >= *(void *)(v3 + *v6)) {
                goto LABEL_261;
              }
              char v133 = *(unsigned char *)(*(void *)(v3 + *v23) + v132);
              *(void *)(v3 + v131) = v132 + 1;
              v130 |= (unint64_t)(v133 & 0x7F) << v128;
              if (v133 < 0)
              {
                v128 += 7;
                BOOL v30 = v129++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_262;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_291;
          }
          int v23 = (int *)MEMORY[0x1E4F940B8];
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v22)) {
              break;
            }
            char v71 = 0;
            unsigned int v72 = 0;
            uint64_t v73 = 0;
            while (1)
            {
              uint64_t v74 = *v20;
              unint64_t v75 = *(void *)(v3 + v74);
              if (v75 == -1 || v75 >= *(void *)(v3 + *v6)) {
                break;
              }
              char v76 = *(unsigned char *)(*(void *)(v3 + *v23) + v75);
              *(void *)(v3 + v74) = v75 + 1;
              v73 |= (unint64_t)(v76 & 0x7F) << v71;
              if (v76 < 0)
              {
                v71 += 7;
                BOOL v30 = v72++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_135;
            }
            *(unsigned char *)(v3 + *v22) = 1;
LABEL_135:
            PBRepeatedUInt32Add();
          }
          goto LABEL_180;
        case 10:
          if (!v35 || (*(_WORD *)(a1 + 288) & 8) != 0) {
            goto LABEL_197;
          }
          if (v32 != 2)
          {
            char v134 = 0;
            unsigned int v135 = 0;
            uint64_t v136 = 0;
            int v23 = (int *)MEMORY[0x1E4F940B8];
            while (1)
            {
              uint64_t v137 = *v20;
              unint64_t v138 = *(void *)(v3 + v137);
              if (v138 == -1 || v138 >= *(void *)(v3 + *v6)) {
                goto LABEL_261;
              }
              char v139 = *(unsigned char *)(*(void *)(v3 + *v23) + v138);
              *(void *)(v3 + v137) = v138 + 1;
              v136 |= (unint64_t)(v139 & 0x7F) << v134;
              if (v139 < 0)
              {
                v134 += 7;
                BOOL v30 = v135++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_262;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_291;
          }
          int v23 = (int *)MEMORY[0x1E4F940B8];
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v22)) {
              break;
            }
            char v80 = 0;
            unsigned int v81 = 0;
            uint64_t v82 = 0;
            while (1)
            {
              uint64_t v83 = *v20;
              unint64_t v84 = *(void *)(v3 + v83);
              if (v84 == -1 || v84 >= *(void *)(v3 + *v6)) {
                break;
              }
              char v85 = *(unsigned char *)(*(void *)(v3 + *v23) + v84);
              *(void *)(v3 + v83) = v84 + 1;
              v82 |= (unint64_t)(v85 & 0x7F) << v80;
              if (v85 < 0)
              {
                v80 += 7;
                BOOL v30 = v81++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_157;
            }
            *(unsigned char *)(v3 + *v22) = 1;
LABEL_157:
            PBRepeatedUInt32Add();
          }
          goto LABEL_180;
        case 11:
          if (!v35 || (*(_WORD *)(a1 + 288) & 0x20) != 0) {
            goto LABEL_197;
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_291;
          }
          -[GEOTileGroup _reserveHybridUnavailableRegions:](a1, 1uLL);
          if (!GEOTileSetRegionReadAllFrom((_DWORD *)(*(void *)(a1 + 72) + 24 * *(void *)(a1 + 80)), v3)) {
            goto LABEL_291;
          }
          PBReaderRecallMark();
          uint64_t v46 = 80;
LABEL_164:
          ++*(void *)(a1 + v46);
          LOBYTE(v19) = v153;
          int v23 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_264;
        case 12:
          if (!v35 || (*(_WORD *)(a1 + 288) & 0x100) != 0) {
            goto LABEL_197;
          }
          if (v32 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_291:
              int v152 = 0;
              LOBYTE(v19) = v153;
              goto LABEL_268;
            }
            int v23 = (int *)MEMORY[0x1E4F940B8];
            while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6))
            {
              if (*(unsigned char *)(v3 + *v22)) {
                break;
              }
              char v86 = 0;
              unsigned int v87 = 0;
              uint64_t v88 = 0;
              while (1)
              {
                uint64_t v89 = *v20;
                unint64_t v90 = *(void *)(v3 + v89);
                if (v90 == -1 || v90 >= *(void *)(v3 + *v6)) {
                  break;
                }
                char v91 = *(unsigned char *)(*(void *)(v3 + *v23) + v90);
                *(void *)(v3 + v89) = v90 + 1;
                v88 |= (unint64_t)(v91 & 0x7F) << v86;
                if (v91 < 0)
                {
                  v86 += 7;
                  BOOL v30 = v87++ >= 9;
                  if (!v30) {
                    continue;
                  }
                }
                goto LABEL_179;
              }
              *(unsigned char *)(v3 + *v22) = 1;
LABEL_179:
              PBRepeatedUInt32Add();
            }
LABEL_180:
            PBReaderRecallMark();
          }
          else
          {
            char v140 = 0;
            unsigned int v141 = 0;
            uint64_t v142 = 0;
            int v23 = (int *)MEMORY[0x1E4F940B8];
            while (1)
            {
              uint64_t v143 = *v20;
              unint64_t v144 = *(void *)(v3 + v143);
              if (v144 == -1 || v144 >= *(void *)(v3 + *v6)) {
                break;
              }
              char v145 = *(unsigned char *)(*(void *)(v3 + *v23) + v144);
              *(void *)(v3 + v143) = v144 + 1;
              v142 |= (unint64_t)(v145 & 0x7F) << v140;
              if (v145 < 0)
              {
                v140 += 7;
                BOOL v30 = v141++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_262;
            }
LABEL_261:
            *(unsigned char *)(v3 + *v22) = 1;
LABEL_262:
            PBRepeatedUInt32Add();
          }
          LOBYTE(v19) = v153;
LABEL_264:
          if ((v154 & 1) == 0) {
            goto LABEL_266;
          }
LABEL_265:
          if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_266;
          }
          break;
        case 14:
          if ((v8 & 1) == 0) {
            goto LABEL_197;
          }
          char v92 = 0;
          unsigned int v93 = 0;
          uint64_t v42 = 0;
          *(_WORD *)(a1 + 288) |= 1u;
          int v23 = (int *)MEMORY[0x1E4F940B8];
          while (2)
          {
            uint64_t v94 = *v20;
            unint64_t v95 = *(void *)(v3 + v94);
            if (v95 == -1 || v95 >= *(void *)(v3 + *v6))
            {
              *(unsigned char *)(v3 + *v22) = 1;
            }
            else
            {
              char v96 = *(unsigned char *)(*(void *)(v3 + *v23) + v95);
              *(void *)(v3 + v94) = v95 + 1;
              v42 |= (unint64_t)(v96 & 0x7F) << v92;
              if (v96 < 0)
              {
                v92 += 7;
                BOOL v30 = v93++ >= 9;
                if (v30)
                {
                  LODWORD(v42) = 0;
                  goto LABEL_206;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(v3 + *v22)) {
            LODWORD(v42) = 0;
          }
LABEL_206:
          uint64_t v103 = 280;
          goto LABEL_211;
        case 15:
          if ((v8 & 1) == 0) {
            goto LABEL_197;
          }
          char v97 = 0;
          unsigned int v98 = 0;
          uint64_t v42 = 0;
          *(_WORD *)(a1 + 288) |= 2u;
          int v23 = (int *)MEMORY[0x1E4F940B8];
          while (2)
          {
            uint64_t v99 = *v20;
            unint64_t v100 = *(void *)(v3 + v99);
            if (v100 == -1 || v100 >= *(void *)(v3 + *v6))
            {
              *(unsigned char *)(v3 + *v22) = 1;
            }
            else
            {
              char v101 = *(unsigned char *)(*(void *)(v3 + *v23) + v100);
              *(void *)(v3 + v99) = v100 + 1;
              v42 |= (unint64_t)(v101 & 0x7F) << v97;
              if (v101 < 0)
              {
                v97 += 7;
                BOOL v30 = v98++ >= 9;
                if (v30)
                {
                  LODWORD(v42) = 0;
                  goto LABEL_210;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(v3 + *v22)) {
            LODWORD(v42) = 0;
          }
LABEL_210:
          uint64_t v103 = 284;
LABEL_211:
          *(_DWORD *)(a1 + v103) = v42;
          goto LABEL_264;
        default:
          if ((v151 & 1) != 0 && (*(_WORD *)(a1 + 288) & 4) == 0)
          {
            if (!*(void *)(a1 + 16))
            {
              id v77 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unsigned int v78 = *(void **)(a1 + 16);
              *(void *)(a1 + 16) = v77;
            }
            int v79 = PBUnknownFieldAdd();
            LOBYTE(v19) = v153;
            int v23 = (int *)MEMORY[0x1E4F940B8];
            if (!v79)
            {
              int v152 = 0;
              goto LABEL_270;
            }
            goto LABEL_264;
          }
LABEL_197:
          int v102 = PBReaderSkipValueWithTag();
          LOBYTE(v19) = v153;
          int v23 = (int *)MEMORY[0x1E4F940B8];
          if ((v102 & v154 & 1) == 0)
          {
            int v150 = v102;
            goto LABEL_267;
          }
          goto LABEL_265;
      }
    }
LABEL_266:
    int v150 = 1;
LABEL_267:
    int v152 = v150;
LABEL_268:
    LOBYTE(v18) = v151;
LABEL_269:
    if (v18) {
LABEL_270:
    }
      *(_WORD *)(a1 + 288) |= 4u;
    if (v19 & 1 | ((v152 & 1) == 0))
    {
      *(_WORD *)(a1 + 288) |= 0x800u;
      *(_WORD *)(a1 + 288) |= 0x200u;
      *(_WORD *)(a1 + 288) |= 0x400u;
      *(_WORD *)(a1 + 288) |= 0x10u;
      *(_WORD *)(a1 + 288) |= 0x40u;
      *(_WORD *)(a1 + 288) |= 0x80u;
      *(_WORD *)(a1 + 288) |= 0x1000u;
      *(_WORD *)(a1 + 288) |= 8u;
      *(_WORD *)(a1 + 288) |= 0x20u;
      *(_WORD *)(a1 + 288) |= 0x100u;
    }
    else if (v21)
    {
      while (1)
      {
        int v146 = *v21++;
        __int16 v147 = 2048;
        switch(v146)
        {
          case 0:
            goto LABEL_285;
          case 2:
            goto LABEL_284;
          case 3:
            __int16 v147 = 512;
            goto LABEL_284;
          case 4:
            __int16 v147 = 1024;
            goto LABEL_284;
          case 5:
            __int16 v147 = 16;
            goto LABEL_284;
          case 6:
            __int16 v147 = 64;
            goto LABEL_284;
          case 7:
            __int16 v147 = 128;
            goto LABEL_284;
          case 8:
            __int16 v147 = 4096;
            goto LABEL_284;
          case 10:
            __int16 v147 = 8;
            goto LABEL_284;
          case 11:
            __int16 v147 = 32;
            goto LABEL_284;
          case 12:
            __int16 v147 = 256;
LABEL_284:
            *(_WORD *)(a1 + 288) |= v147;
            break;
          default:
            continue;
        }
      }
    }
LABEL_285:
    if (v152)
    {
      uint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
      if ((v19 & 1) == 0) {
        return v3;
      }
      goto LABEL_289;
    }
    uint64_t v3 = 0;
    if (v19)
    {
LABEL_289:
      v148 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_18963EDCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18963F158(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18963F4E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18963F870(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18963FBFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896400C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189640454(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896407E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189640CF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189642324(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOTileGroupReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 268))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTileGroupReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 272));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 264) = [v8 position];
  *(_DWORD *)(a1 + 268) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTileGroupReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTileGroupReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOTileGroupReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 272));
  return Specified;
}

void sub_1896424B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOTileGroupReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOTileGroupReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189642518(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVersionedTileSetIsValid(void *a1)
{
  uint64_t v5 = [a1 position];
  uint64_t v6 = [a1 length];
  BOOL v2 = GEOVersionedTileSetReadAllFrom(&v4, (uint64_t)a1);
  PBReaderRecallMark();
  return v2;
}

void sub_189642A20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOVersionedTileSetWriteTo()
{
  PBDataWriterWriteUint32Field();

  return PBDataWriterWriteUint32Field();
}

BOOL GEOTileGroupIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 272));
  BOOL v2 = (*(_WORD *)(a1 + 288) & 0x3FF8) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 272));
  return v2;
}

void sub_1896431B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189643940(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOURLInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189644144(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2) {
            goto LABEL_50;
          }
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_46;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_47;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            unint64_t v24 = *(void *)&a1[v23];
            if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
              goto LABEL_46;
            }
            unint64_t v25 = v24 + 1;
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_47;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v27 = 0;
          break;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_50:
          BOOL v32 = 0;
          goto LABEL_49;
      }
      while (1)
      {
        uint64_t v28 = *v2;
        unint64_t v29 = *(void *)&a1[v28];
        if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v30 = v29 + 1;
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v21 = v27++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_47;
      }
LABEL_46:
      a1[*v4] = 1;
LABEL_47:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v32;
}

void sub_189644E40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189645014(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189645184(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896462C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLInfoSetReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOURLInfoSetReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189649828(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18964A07C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLInfoSetIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 480));
  BOOL v2 = (*(void *)(a1 + 488) & 0x7FFFFFFFFFFFFFCLL) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 480));
  return v2;
}

void sub_18964B038(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18964BFC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVersionManifestReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOVersionManifestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18964D0E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOVersionedTileSetDescription(unsigned int *a1)
{
  BOOL v2 = NSString;
  id v3 = _GEOVersionedTileSetDictionaryRepresentation(a1);
  int v4 = [v2 stringWithFormat:@"GEOVersionedTileSet<%p> %@", a1, v3];

  return v4;
}

id _GEOVersionedTileSetDictionaryRepresentation(unsigned int *a1)
{
  BOOL v2 = [MEMORY[0x1E4F1CA60] dictionary];
  id v3 = [NSNumber numberWithUnsignedInt:*a1];
  [v2 setObject:v3 forKey:@"identifier"];

  int v4 = [NSNumber numberWithUnsignedInt:a1[1]];
  [v2 setObject:v4 forKey:@"tileSetIndex"];

  return v2;
}

void _GEOVersionedTileSetFromDictionaryRepresentation(void *a1, _DWORD *a2)
{
  id v3 = a1;
  int v4 = [v3 objectForKeyedSubscript:@"tileSetIndex"];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    a2[1] = [v4 unsignedIntValue];
  }

  id v5 = [v3 objectForKeyedSubscript:@"identifier"];

  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    *a2 = [v5 unsignedIntValue];
  }
}

BOOL GEOVersionedTileSetReadFrom(_DWORD *a1, uint64_t a2)
{
  return GEOVersionedTileSetReadAllFrom(a1, a2);
}

BOOL GEOVersionedTileSetReadAllFrom(_DWORD *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  int v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    unsigned int v7 = a1 + 1;
    unint64_t v8 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v3;
        unint64_t v13 = *(void *)(a2 + v12);
        if (v13 == -1 || v13 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v13 + 1;
        v11 |= (unint64_t)(v14 & 0x7F) << v9;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          unint64_t v11 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v16 || (v11 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v11 >> 3) == 1) {
        break;
      }
      if ((v11 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4))
          {
            unint64_t v25 = a1;
            goto LABEL_38;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v8) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            break;
          }
          v18 += 7;
          BOOL v24 = v19++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            unint64_t v25 = a1;
            goto LABEL_41;
          }
        }
        unint64_t v25 = a1;
LABEL_39:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_41:
        *unint64_t v25 = v20;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_42:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v26 = 0;
    unsigned int v27 = 0;
    uint64_t v20 = 0;
    while (1)
    {
      uint64_t v28 = *v3;
      unint64_t v29 = *(void *)(a2 + v28);
      if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(a2 + *v8) + v29);
      *(void *)(a2 + v28) = v29 + 1;
      v20 |= (unint64_t)(v30 & 0x7F) << v26;
      if ((v30 & 0x80) == 0)
      {
        unint64_t v25 = v7;
        goto LABEL_39;
      }
      v26 += 7;
      BOOL v24 = v27++ > 8;
      if (v24)
      {
        LODWORD(v20) = 0;
        unint64_t v25 = v7;
        goto LABEL_41;
      }
    }
    unint64_t v25 = v7;
LABEL_38:
    *(unsigned char *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL GEOVersionedTileSetEquals(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t GEOVersionedTileSetHash()
{
  return PBHashBytes();
}

void GEOMigrateCountryConfig(void *a1)
{
  v8[3] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  BOOL v2 = [v1 getConfigValueForKey:@"DeviceCountryCodeSourced" countryCode:0 options:0 source:0];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0 || ![v2 count])
  {
    id v3 = [v1 getConfigValueForKey:@"DeviceCountryCode" countryCode:0 options:0 source:0];
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0 && [v3 length])
    {
      v7[0] = @"cc";
      v7[1] = @"source";
      v8[0] = v3;
      v8[1] = &unk_1ED73D8A0;
      v7[2] = @"date";
      int v4 = [MEMORY[0x1E4F1C9C8] distantPast];
      v8[2] = v4;
      uint64_t v5 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v8 forKeys:v7 count:3];

      char v6 = [[_GEOCountryConfigurationInfo alloc] initWithDictionary:v5];
      if (v6)
      {
        [v1 setConfigValue:v5 forKey:@"DeviceCountryCodeSourced" options:0 synchronous:1];
        [v1 setConfigValue:0 forKey:@"DeviceCountryCode" options:0 synchronous:1];
      }
    }
    else
    {
      uint64_t v5 = (uint64_t)v2;
    }

    BOOL v2 = (void *)v5;
  }
}

void sub_18964E000(_Unwind_Exception *a1)
{
}

id geoLPRRegionsContainingPoint(void *a1, double a2, double a3)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  char v6 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v5, "count"));
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v7 = v5;
  uint64_t v8 = [v7 countByEnumeratingWithState:&v23 objects:v27 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    char v10 = 0;
    uint64_t v11 = *(void *)v24;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v24 != v11) {
          objc_enumerationMutation(v7);
        }
        unint64_t v13 = *(void **)(*((void *)&v23 + 1) + 8 * i);
        uint64_t v14 = objc_msgSend(v13, "regionBoundingBox", (void)v23);
        if (v14)
        {
          uint64_t v15 = (void *)v14;
          int v16 = [v13 regionBoundingBox];
          int v17 = [v16 isValid];

          if (v17)
          {
            char v18 = [v13 regionBoundingBox];
            unsigned int v19 = [v18 mapRegion];

            if (objc_msgSend(v19, "containsCoordinate:", a2, a3)) {
              [v6 addObject:v13];
            }

            char v10 = 1;
          }
        }
      }
      uint64_t v9 = [v7 countByEnumeratingWithState:&v23 objects:v27 count:16];
    }
    while (v9);
  }
  else
  {
    char v10 = 0;
  }

  if (([v6 count] != 0) | v10 & 1) {
    uint64_t v20 = v6;
  }
  else {
    uint64_t v20 = v7;
  }
  id v21 = v20;

  return v21;
}

id geoLPRRegionsSortedByDistanceFromPoint(void *a1, double a2, double a3)
{
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  v5[2] = __geoLPRRegionsSortedByDistanceFromPoint_block_invoke;
  v5[3] = &__block_descriptor_48_e39_q24__0__GEOLPRRegion_8__GEOLPRRegion_16l;
  *(double *)&v5[4] = a2;
  *(double *)&v5[5] = a3;
  id v3 = [a1 sortedArrayUsingComparator:v5];

  return v3;
}

uint64_t __geoLPRRegionsSortedByDistanceFromPoint_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [v5 regionBoundingBox];
  if (v7)
  {
    uint64_t v8 = [v5 regionBoundingBox];
    uint64_t v9 = [v8 isValid];
  }
  else
  {
    uint64_t v9 = 0;
  }

  uint64_t v10 = [v6 regionBoundingBox];
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    uint64_t v12 = [v6 regionBoundingBox];
    unsigned int v13 = [v12 isValid];

    int v14 = v9 & v13;
    if (v9) {
      uint64_t v15 = -1;
    }
    else {
      uint64_t v15 = v13;
    }
    if (v14 == 1)
    {
      int v16 = [v5 regionBoundingBox];
      [v16 center];
      double v19 = GEOCalculateDistanceRadius(v17, v18, *(double *)(a1 + 32), *(double *)(a1 + 40), 6367000.0);

      uint64_t v20 = [v6 regionBoundingBox];
      [v20 center];
      double v23 = GEOCalculateDistanceRadius(v21, v22, *(double *)(a1 + 32), *(double *)(a1 + 40), 6367000.0);

      if (v19 < v23) {
        uint64_t v15 = -1;
      }
      else {
        uint64_t v15 = v19 > v23;
      }
    }
  }
  else
  {
    uint64_t v15 = v9 << 63 >> 63;
  }

  return v15;
}

void sub_18965013C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189650220(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896502A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1896503AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896504E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189650620(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896506C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1896507B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189650908(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id descriptionForLaneInfos(void *a1)
{
  v47[10] = *MEMORY[0x1E4F143B8];
  id v23 = a1;
  id v1 = objc_alloc_init(MEMORY[0x1E4F28E78]);
  v46[0] = &unk_1ED73D8B8;
  v46[1] = &unk_1ED73D8E8;
  v47[0] = &unk_1ED73D8D0;
  v47[1] = &unk_1ED73D900;
  v46[2] = &unk_1ED73D918;
  v46[3] = &unk_1ED73D948;
  v47[2] = &unk_1ED73D930;
  v47[3] = &unk_1ED73D960;
  v46[4] = &unk_1ED73D900;
  v46[5] = &unk_1ED73D930;
  v47[4] = &unk_1ED73D978;
  v47[5] = &unk_1ED73D990;
  v46[6] = &unk_1ED73D978;
  v46[7] = &unk_1ED73D9C0;
  v47[6] = &unk_1ED73D9A8;
  v47[7] = &unk_1ED73D9D8;
  v46[8] = &unk_1ED73D9F0;
  v46[9] = &unk_1ED73D8D0;
  v47[8] = &unk_1ED73D9C0;
  v47[9] = &unk_1ED73DA08;
  long long v26 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v47 forKeys:v46 count:10];
  v44[0] = &unk_1ED73D8B8;
  v44[1] = &unk_1ED73D8E8;
  v45[0] = @"UL";
  v45[1] = @"SL";
  v44[2] = &unk_1ED73D918;
  v44[3] = &unk_1ED73D948;
  v45[2] = @"L";
  v45[3] = @"sL";
  v44[4] = &unk_1ED73D900;
  v44[5] = &unk_1ED73D930;
  v45[4] = @"S";
  v45[5] = @"sR";
  v44[6] = &unk_1ED73D978;
  v44[7] = &unk_1ED73D9C0;
  v45[6] = @"R";
  v45[7] = @"SR";
  v44[8] = &unk_1ED73D9F0;
  v44[9] = &unk_1ED73D8D0;
  v45[8] = @"UR";
  v45[9] = @"??";
  char v30 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v45 forKeys:v44 count:10];
  long long v40 = 0u;
  long long v41 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  obuint64_t j = v23;
  uint64_t v27 = [obj countByEnumeratingWithState:&v38 objects:v43 count:16];
  if (v27)
  {
    long long v24 = v36;
    uint64_t v25 = *(void *)v39;
    do
    {
      for (uint64_t i = 0; i != v27; ++i)
      {
        if (*(void *)v39 != v25) {
          objc_enumerationMutation(obj);
        }
        BOOL v2 = *(void **)(*((void *)&v38 + 1) + 8 * i);
        id v3 = objc_msgSend(v2, "directions", v23, v24);
        int v4 = [v3 firstObject];
        int v5 = [v4 direction];

        id v6 = [v2 directions];
        v35[0] = MEMORY[0x1E4F143A8];
        v35[1] = 3221225472;
        v36[0] = __descriptionForLaneInfos_block_invoke;
        v36[1] = &unk_1E53DE2C8;
        id v37 = v26;
        id v7 = [v6 sortedArrayUsingComparator:v35];

        long long v33 = 0u;
        long long v34 = 0u;
        long long v31 = 0u;
        long long v32 = 0u;
        id v8 = v7;
        uint64_t v9 = [v8 countByEnumeratingWithState:&v31 objects:v42 count:16];
        if (v9)
        {
          uint64_t v10 = *(void *)v32;
          do
          {
            for (uint64_t j = 0; j != v9; ++j)
            {
              if (*(void *)v32 != v10) {
                objc_enumerationMutation(v8);
              }
              uint64_t v12 = *(void **)(*((void *)&v31 + 1) + 8 * j);
              unsigned int v13 = objc_msgSend(NSNumber, "numberWithInt:", objc_msgSend(v12, "direction"));
              int v14 = [v30 objectForKeyedSubscript:v13];
              [v1 appendString:v14];

              if ([v2 isPreferredLaneForManeuver]
                && (v15 = [v12 direction], int v16 = @"*", v15 == v5)
                || [v2 isLaneForManeuver]
                && (v17 = [v12 direction], int v16 = @"'", v17 == v5))
              {
                [v1 appendString:v16];
              }
              double v18 = objc_msgSend(v8, "lastObject", v16);
              BOOL v19 = v18 == v12;

              if (!v19) {
                [v1 appendString:@"/"];
              }
            }
            uint64_t v9 = [v8 countByEnumeratingWithState:&v31 objects:v42 count:16];
          }
          while (v9);
        }

        uint64_t v20 = [obj lastObject];
        BOOL v21 = v2 == v20;

        if (!v21) {
          [v1 appendString:@" | "];
        }
      }
      uint64_t v27 = [obj countByEnumeratingWithState:&v38 objects:v43 count:16];
    }
    while (v27);
  }

  return v1;
}

void sub_189650E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

uint64_t __descriptionForLaneInfos_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = *(void **)(a1 + 32);
  id v8 = objc_msgSend(NSNumber, "numberWithInt:", objc_msgSend(v5, "direction"));
  uint64_t v9 = [v7 objectForKeyedSubscript:v8];

  uint64_t v10 = *(void **)(a1 + 32);
  uint64_t v11 = objc_msgSend(NSNumber, "numberWithInt:", objc_msgSend(v6, "direction"));
  uint64_t v12 = [v10 objectForKeyedSubscript:v11];

  uint64_t v13 = [v9 compare:v12];
  return v13;
}

void sub_189651038(_Unwind_Exception *a1)
{
  id v5 = v4;

  _Unwind_Resume(a1);
}

uint64_t GEOResetGeoCodecsAllocator(geo::codec::Allocator *a1)
{
  id v1 = *(uint64_t (**)(void))(*(void *)geo::codec::Allocator::instance(a1) + 48);

  return v1();
}

void sub_18965554C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896562CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896564D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896566C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189656B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_189656D1C(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

void sub_189656F28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18965708C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18965718C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189657274(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189657744(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189657898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189657B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_189658010(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896581C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189658240(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18965845C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1896586B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189658C9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_189659644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *__p,uint64_t a39,uint64_t a40,void *a41,uint64_t a42)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1896598DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896599C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18965A0FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17, void *a18, uint64_t a19, uint64_t a20,void *a21,void *a22,void *a23)
{
  _Block_object_dispose(&STACK[0x208], 8);
  _Block_object_dispose(&STACK[0x228], 8);

  _Unwind_Resume(a1);
}

void sub_18965A300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18965A764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_18965A8B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18965AA48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18965AD0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18965AF88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  BOOL v21 = v18;

  _Unwind_Resume(a1);
}

void sub_18965B3D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t ___ZL38_GEOTransitPreloadBatchPriorityHighestv_block_invoke()
{
  uint64_t result = GEOConfigGetBOOL(GeoServicesConfig_TilePreloaderUseLowPriorityDefaults, (uint64_t)off_1E91142D8);
  if (result) {
    int v1 = 0x40000000;
  }
  else {
    int v1 = -4;
  }
  _MergedGlobals_169 = v1;
  return result;
}

uint64_t ___ZL38_GEOTransitPreloadBatchPriorityDefaultv_block_invoke()
{
  uint64_t result = GEOConfigGetBOOL(GeoServicesConfig_TilePreloaderUseLowPriorityDefaults, (uint64_t)off_1E91142D8);
  if (result) {
    int v1 = 0x3FFFFFFF;
  }
  else {
    int v1 = 2147483646;
  }
  dword_1EB29DCDC = v1;
  return result;
}

void sub_18965C654(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCellConnectionQualityReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 144));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 140);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 136)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unint64_t v11 = *(unsigned __int16 *)(a1 + 368);
  *(int32x2_t *)v12.i8 = vzip1_s32((int32x2_t)(v11 >> 4), (int32x2_t)(v11 >> 3));
  v12.u64[1] = (unint64_t)vzip1_s32((int32x2_t)(v11 >> 6), (int32x2_t)(v11 >> 5));
  *(int32x2_t *)v13.i8 = vzip1_s32((int32x2_t)(v11 >> 9), (int32x2_t)(v11 >> 8));
  v13.u64[1] = (unint64_t)vzip1_s32((int32x2_t)(v11 >> 7), (int32x2_t)(v11 >> 11));
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  unsigned int v15 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8(v12, v14), (int32x4_t)vandq_s8(v13, v14)))
      + ((v11 >> 10) & 1)
      + ((v11 >> 12) & 1);
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v16 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        char v18 = v10 | (v15 > 7);
        if (v10 & 1 | (v15 > 7) | v8 & 1) {
          BOOL v19 = 0;
        }
        else {
          BOOL v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v21 = (v19 == 0) | v18;
        double v22 = (int *)MEMORY[0x1E4F940C8];
        id v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v15;
LABEL_6:
        uint64_t v16 = v9;
        uint64_t v17 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_883;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      unint64_t v28 = *(void *)(v3 + v27);
      if (v28 == -1 || v28 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v28 + 1;
      v26 |= (unint64_t)(v29 & 0x7F) << v24;
      if ((v29 & 0x80) == 0) {
        goto LABEL_23;
      }
      v24 += 7;
      BOOL v30 = v25++ >= 9;
      if (v30)
      {
        unint64_t v26 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_23:
    int v31 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_25:
    if (v31 || (v26 & 7) == 4)
    {
LABEL_883:
      if (v18)
      {
        *(_WORD *)(a1 + 368) |= 0x1FF8u;
        goto LABEL_904;
      }
      if (!v19)
      {
LABEL_904:
        unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        if ((v18 & 1) == 0) {
          return v3;
        }
        goto LABEL_905;
      }
      while (1)
      {
        while (1)
        {
          int v465 = *v19++;
          int v464 = v465;
          if (v465 > 65) {
            break;
          }
          switch(v464)
          {
            case '#':
              __int16 v466 = 16;
              goto LABEL_902;
            case '$':
              __int16 v466 = 64;
              goto LABEL_902;
            case '%':
              __int16 v466 = 32;
              goto LABEL_902;
            case '&':
              __int16 v466 = 512;
              goto LABEL_902;
            case '\'':
              __int16 v466 = 256;
              goto LABEL_902;
            case '(':
            case ')':
            case '*':
            case '+':
            case ',':
              continue;
            case '-':
              __int16 v466 = 128;
              goto LABEL_902;
            default:
              if (v464 == 11)
              {
                __int16 v466 = 8;
                goto LABEL_902;
              }
              if (!v464) {
                goto LABEL_904;
              }
              break;
          }
        }
        if (v464 == 66) {
          break;
        }
        if (v464 == 67)
        {
          __int16 v466 = 1024;
LABEL_902:
          __int16 v467 = *(_WORD *)(a1 + 368) | v466;
          *(void *)(a1 + 360) = *(void *)(a1 + 360);
          *(_WORD *)(a1 + 368) = v467;
        }
        else if (v464 == 77)
        {
          __int16 v466 = 4096;
          goto LABEL_902;
        }
      }
      __int16 v466 = 2048;
      goto LABEL_902;
    }
    unint64_t v33 = v26 >> 3;
    BOOL v34 = v18;
    if ((v21 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x4000000000uLL;
        while (2)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(v3 + *v23) + v43);
            *(void *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v30 = v40++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_598;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_598:
        uint64_t v446 = 280;
        goto LABEL_850;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x2000000000uLL;
        while (2)
        {
          uint64_t v49 = *v20;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v23) + v50);
            *(void *)(v3 + v49) = v51;
            v41 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              BOOL v30 = v48++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_602;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_602:
        uint64_t v446 = 276;
        goto LABEL_850;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x8000000uLL;
        while (2)
        {
          uint64_t v55 = *v20;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v23) + v56);
            *(void *)(v3 + v55) = v57;
            v41 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v30 = v54++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_606;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_606:
        uint64_t v446 = 236;
        goto LABEL_850;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x1000000000uLL;
        while (2)
        {
          uint64_t v61 = *v20;
          uint64_t v62 = *(void *)(v3 + v61);
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(v3 + *v23) + v62);
            *(void *)(v3 + v61) = v63;
            v41 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              BOOL v30 = v60++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_610;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_610:
        uint64_t v446 = 272;
        goto LABEL_850;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x40000000uLL;
        while (2)
        {
          uint64_t v67 = *v20;
          uint64_t v68 = *(void *)(v3 + v67);
          unint64_t v69 = v68 + 1;
          if (v68 == -1 || v69 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v70 = *(unsigned char *)(*(void *)(v3 + *v23) + v68);
            *(void *)(v3 + v67) = v69;
            v41 |= (unint64_t)(v70 & 0x7F) << v65;
            if (v70 < 0)
            {
              v65 += 7;
              BOOL v30 = v66++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_614;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_614:
        uint64_t v446 = 248;
        goto LABEL_850;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v73 = 0;
        *(void *)(a1 + 360) |= 4uLL;
        while (2)
        {
          uint64_t v74 = *v20;
          uint64_t v75 = *(void *)(v3 + v74);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(v3 + *v23) + v75);
            *(void *)(v3 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if (v77 < 0)
            {
              v71 += 7;
              BOOL v30 = v72++ >= 9;
              if (v30)
              {
                uint64_t v73 = 0;
                goto LABEL_618;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v73 = 0;
        }
LABEL_618:
        uint64_t v447 = 112;
        goto LABEL_663;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v78 = 0;
        unsigned int v79 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x4000000uLL;
        while (2)
        {
          uint64_t v80 = *v20;
          uint64_t v81 = *(void *)(v3 + v80);
          unint64_t v82 = v81 + 1;
          if (v81 == -1 || v82 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v83 = *(unsigned char *)(*(void *)(v3 + *v23) + v81);
            *(void *)(v3 + v80) = v82;
            v41 |= (unint64_t)(v83 & 0x7F) << v78;
            if (v83 < 0)
            {
              v78 += 7;
              BOOL v30 = v79++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_622;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_622:
        uint64_t v446 = 232;
        goto LABEL_850;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v84 = 0;
        unsigned int v85 = 0;
        uint64_t v86 = 0;
        *(void *)(a1 + 360) |= 0x1000000000000000uLL;
        while (2)
        {
          uint64_t v87 = *v20;
          uint64_t v88 = *(void *)(v3 + v87);
          unint64_t v89 = v88 + 1;
          if (v88 == -1 || v89 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v90 = *(unsigned char *)(*(void *)(v3 + *v23) + v88);
            *(void *)(v3 + v87) = v89;
            v86 |= (unint64_t)(v90 & 0x7F) << v84;
            if (v90 < 0)
            {
              v84 += 7;
              BOOL v30 = v85++ >= 9;
              if (v30)
              {
                uint64_t v86 = 0;
                goto LABEL_626;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v86 = 0;
        }
LABEL_626:
        BOOL v448 = v86 != 0;
        uint64_t v449 = 353;
        goto LABEL_841;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v91 = 0;
        unsigned int v92 = 0;
        uint64_t v73 = 0;
        *(void *)(a1 + 360) |= 1uLL;
        while (2)
        {
          uint64_t v93 = *v20;
          uint64_t v94 = *(void *)(v3 + v93);
          unint64_t v95 = v94 + 1;
          if (v94 == -1 || v95 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v96 = *(unsigned char *)(*(void *)(v3 + *v23) + v94);
            *(void *)(v3 + v93) = v95;
            v73 |= (unint64_t)(v96 & 0x7F) << v91;
            if (v96 < 0)
            {
              v91 += 7;
              BOOL v30 = v92++ >= 9;
              if (v30)
              {
                uint64_t v73 = 0;
                goto LABEL_630;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v73 = 0;
        }
LABEL_630:
        uint64_t v447 = 16;
        goto LABEL_663;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v97 = 0;
        unsigned int v98 = 0;
        uint64_t v73 = 0;
        *(void *)(a1 + 360) |= 2uLL;
        while (2)
        {
          uint64_t v99 = *v20;
          uint64_t v100 = *(void *)(v3 + v99);
          unint64_t v101 = v100 + 1;
          if (v100 == -1 || v101 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v102 = *(unsigned char *)(*(void *)(v3 + *v23) + v100);
            *(void *)(v3 + v99) = v101;
            v73 |= (unint64_t)(v102 & 0x7F) << v97;
            if (v102 < 0)
            {
              v97 += 7;
              BOOL v30 = v98++ >= 9;
              if (v30)
              {
                uint64_t v73 = 0;
                goto LABEL_634;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v73 = 0;
        }
LABEL_634:
        uint64_t v447 = 24;
        goto LABEL_663;
      case 11:
        if (!v34) {
          goto LABEL_593;
        }
        if ((*(_WORD *)(a1 + 368) & 8) == 0)
        {
          uint64_t v103 = PBReaderReadString();
          uint64_t v104 = 32;
          goto LABEL_514;
        }
        char v452 = PBReaderSkipValueWithTag();
        double v22 = (int *)MEMORY[0x1E4F940C8];
        char v21 = (v19 == 0) | v18;
        if ((v452 & 1) == 0) {
          goto LABEL_908;
        }
        __int16 v453 = *(_WORD *)(a1 + 368) << 12;
        goto LABEL_873;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v105 = 0;
        unsigned int v106 = 0;
        uint64_t v107 = 0;
        *(void *)(a1 + 360) |= 0x800000000000000uLL;
        while (2)
        {
          uint64_t v108 = *v20;
          uint64_t v109 = *(void *)(v3 + v108);
          unint64_t v110 = v109 + 1;
          if (v109 == -1 || v110 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v111 = *(unsigned char *)(*(void *)(v3 + *v23) + v109);
            *(void *)(v3 + v108) = v110;
            v107 |= (unint64_t)(v111 & 0x7F) << v105;
            if (v111 < 0)
            {
              v105 += 7;
              BOOL v30 = v106++ >= 9;
              if (v30)
              {
                uint64_t v107 = 0;
                goto LABEL_638;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v107 = 0;
        }
LABEL_638:
        BOOL v448 = v107 != 0;
        uint64_t v449 = 352;
        goto LABEL_841;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        *(void *)(a1 + 360) |= 0x20000000uLL;
        uint64_t v112 = *v20;
        unint64_t v113 = *(void *)(v3 + v112);
        if (v113 <= 0xFFFFFFFFFFFFFFFBLL && v113 + 4 <= *(void *)(v3 + *v6))
        {
          int v114 = *(_DWORD *)(*(void *)(v3 + *v23) + v113);
          *(void *)(v3 + v112) = v113 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v22) = 1;
          int v114 = 0;
        }
        uint64_t v463 = 244;
        goto LABEL_882;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        *(void *)(a1 + 360) |= 0x10000000000uLL;
        uint64_t v115 = *v20;
        unint64_t v116 = *(void *)(v3 + v115);
        if (v116 <= 0xFFFFFFFFFFFFFFFBLL && v116 + 4 <= *(void *)(v3 + *v6))
        {
          int v114 = *(_DWORD *)(*(void *)(v3 + *v23) + v116);
          *(void *)(v3 + v115) = v116 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v22) = 1;
          int v114 = 0;
        }
        uint64_t v463 = 288;
        goto LABEL_882;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        *(void *)(a1 + 360) |= 0x10000000uLL;
        uint64_t v117 = *v20;
        unint64_t v118 = *(void *)(v3 + v117);
        if (v118 <= 0xFFFFFFFFFFFFFFFBLL && v118 + 4 <= *(void *)(v3 + *v6))
        {
          int v114 = *(_DWORD *)(*(void *)(v3 + *v23) + v118);
          *(void *)(v3 + v117) = v118 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v22) = 1;
          int v114 = 0;
        }
        uint64_t v463 = 240;
        goto LABEL_882;
      case 16:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        *(void *)(a1 + 360) |= 0x8000000000uLL;
        uint64_t v119 = *v20;
        unint64_t v120 = *(void *)(v3 + v119);
        if (v120 <= 0xFFFFFFFFFFFFFFFBLL && v120 + 4 <= *(void *)(v3 + *v6))
        {
          int v114 = *(_DWORD *)(*(void *)(v3 + *v23) + v120);
          *(void *)(v3 + v119) = v120 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v22) = 1;
          int v114 = 0;
        }
        uint64_t v463 = 284;
LABEL_882:
        *(_DWORD *)(a1 + v463) = v114;
        goto LABEL_851;
      case 17:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v121 = 0;
        unsigned int v122 = 0;
        uint64_t v123 = 0;
        *(void *)(a1 + 360) |= 0x4000000000000000uLL;
        while (2)
        {
          uint64_t v124 = *v20;
          uint64_t v125 = *(void *)(v3 + v124);
          unint64_t v126 = v125 + 1;
          if (v125 == -1 || v126 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v127 = *(unsigned char *)(*(void *)(v3 + *v23) + v125);
            *(void *)(v3 + v124) = v126;
            v123 |= (unint64_t)(v127 & 0x7F) << v121;
            if (v127 < 0)
            {
              v121 += 7;
              BOOL v30 = v122++ >= 9;
              if (v30)
              {
                uint64_t v123 = 0;
                goto LABEL_642;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v123 = 0;
        }
LABEL_642:
        BOOL v448 = v123 != 0;
        uint64_t v449 = 355;
        goto LABEL_841;
      case 18:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v128 = 0;
        unsigned int v129 = 0;
        uint64_t v130 = 0;
        *(void *)(a1 + 360) |= 0x2000000000000000uLL;
        while (2)
        {
          uint64_t v131 = *v20;
          uint64_t v132 = *(void *)(v3 + v131);
          unint64_t v133 = v132 + 1;
          if (v132 == -1 || v133 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v134 = *(unsigned char *)(*(void *)(v3 + *v23) + v132);
            *(void *)(v3 + v131) = v133;
            v130 |= (unint64_t)(v134 & 0x7F) << v128;
            if (v134 < 0)
            {
              v128 += 7;
              BOOL v30 = v129++ >= 9;
              if (v30)
              {
                uint64_t v130 = 0;
                goto LABEL_646;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v130 = 0;
        }
LABEL_646:
        BOOL v448 = v130 != 0;
        uint64_t v449 = 354;
        goto LABEL_841;
      case 19:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v135 = 0;
        unsigned int v136 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x800000000uLL;
        while (2)
        {
          uint64_t v137 = *v20;
          uint64_t v138 = *(void *)(v3 + v137);
          unint64_t v139 = v138 + 1;
          if (v138 == -1 || v139 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v140 = *(unsigned char *)(*(void *)(v3 + *v23) + v138);
            *(void *)(v3 + v137) = v139;
            v41 |= (unint64_t)(v140 & 0x7F) << v135;
            if (v140 < 0)
            {
              v135 += 7;
              BOOL v30 = v136++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_650;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_650:
        uint64_t v446 = 268;
        goto LABEL_850;
      case 20:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v141 = 0;
        unsigned int v142 = 0;
        uint64_t v143 = 0;
        *(void *)(a1 + 360) |= 8uLL;
        while (2)
        {
          uint64_t v144 = *v20;
          uint64_t v145 = *(void *)(v3 + v144);
          unint64_t v146 = v145 + 1;
          if (v145 == -1 || v146 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v147 = *(unsigned char *)(*(void *)(v3 + *v23) + v145);
            *(void *)(v3 + v144) = v146;
            v143 |= (unint64_t)(v147 & 0x7F) << v141;
            if (v147 < 0)
            {
              v141 += 7;
              BOOL v30 = v142++ >= 9;
              if (v30)
              {
                uint64_t v143 = 0;
                goto LABEL_654;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v143 = 0;
        }
LABEL_654:
        uint64_t v73 = -(v143 & 1) ^ (v143 >> 1);
        uint64_t v447 = 120;
        goto LABEL_663;
      case 21:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v148 = 0;
        unsigned int v149 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x8000000000000uLL;
        while (2)
        {
          uint64_t v150 = *v20;
          uint64_t v151 = *(void *)(v3 + v150);
          unint64_t v152 = v151 + 1;
          if (v151 == -1 || v152 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v153 = *(unsigned char *)(*(void *)(v3 + *v23) + v151);
            *(void *)(v3 + v150) = v152;
            v41 |= (unint64_t)(v153 & 0x7F) << v148;
            if (v153 < 0)
            {
              v148 += 7;
              BOOL v30 = v149++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_658;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_658:
        uint64_t v446 = 332;
        goto LABEL_850;
      case 22:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v154 = 0;
        unsigned int v155 = 0;
        uint64_t v156 = 0;
        *(void *)(a1 + 360) |= 0x10uLL;
        while (2)
        {
          uint64_t v157 = *v20;
          uint64_t v158 = *(void *)(v3 + v157);
          unint64_t v159 = v158 + 1;
          if (v158 == -1 || v159 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v160 = *(unsigned char *)(*(void *)(v3 + *v23) + v158);
            *(void *)(v3 + v157) = v159;
            v156 |= (unint64_t)(v160 & 0x7F) << v154;
            if (v160 < 0)
            {
              v154 += 7;
              BOOL v30 = v155++ >= 9;
              if (v30)
              {
                uint64_t v156 = 0;
                goto LABEL_662;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v156 = 0;
        }
LABEL_662:
        uint64_t v73 = -(v156 & 1) ^ (v156 >> 1);
        uint64_t v447 = 128;
LABEL_663:
        *(void *)(a1 + v447) = v73;
        goto LABEL_851;
      case 23:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v161 = 0;
        unsigned int v162 = 0;
        uint64_t v163 = 0;
        *(void *)(a1 + 360) |= 0x8000000000000000;
        while (2)
        {
          uint64_t v164 = *v20;
          uint64_t v165 = *(void *)(v3 + v164);
          unint64_t v166 = v165 + 1;
          if (v165 == -1 || v166 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v167 = *(unsigned char *)(*(void *)(v3 + *v23) + v165);
            *(void *)(v3 + v164) = v166;
            v163 |= (unint64_t)(v167 & 0x7F) << v161;
            if (v167 < 0)
            {
              v161 += 7;
              BOOL v30 = v162++ >= 9;
              if (v30)
              {
                uint64_t v163 = 0;
                goto LABEL_667;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v163 = 0;
        }
LABEL_667:
        BOOL v448 = v163 != 0;
        uint64_t v449 = 356;
        goto LABEL_841;
      case 24:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v168 = 0;
        unsigned int v169 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x2000000000000uLL;
        while (2)
        {
          uint64_t v170 = *v20;
          uint64_t v171 = *(void *)(v3 + v170);
          unint64_t v172 = v171 + 1;
          if (v171 == -1 || v172 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v173 = *(unsigned char *)(*(void *)(v3 + *v23) + v171);
            *(void *)(v3 + v170) = v172;
            v41 |= (unint64_t)(v173 & 0x7F) << v168;
            if (v173 < 0)
            {
              v168 += 7;
              BOOL v30 = v169++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_671;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_671:
        uint64_t v446 = 324;
        goto LABEL_850;
      case 25:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v174 = 0;
        unsigned int v175 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x200000000000uLL;
        while (2)
        {
          uint64_t v176 = *v20;
          uint64_t v177 = *(void *)(v3 + v176);
          unint64_t v178 = v177 + 1;
          if (v177 == -1 || v178 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v179 = *(unsigned char *)(*(void *)(v3 + *v23) + v177);
            *(void *)(v3 + v176) = v178;
            v41 |= (unint64_t)(v179 & 0x7F) << v174;
            if (v179 < 0)
            {
              v174 += 7;
              BOOL v30 = v175++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_675;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_675:
        uint64_t v446 = 308;
        goto LABEL_850;
      case 26:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v180 = 0;
        unsigned int v181 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x10000000000000uLL;
        while (2)
        {
          uint64_t v182 = *v20;
          uint64_t v183 = *(void *)(v3 + v182);
          unint64_t v184 = v183 + 1;
          if (v183 == -1 || v184 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v185 = *(unsigned char *)(*(void *)(v3 + *v23) + v183);
            *(void *)(v3 + v182) = v184;
            v41 |= (unint64_t)(v185 & 0x7F) << v180;
            if (v185 < 0)
            {
              v180 += 7;
              BOOL v30 = v181++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_679;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_679:
        uint64_t v446 = 336;
        goto LABEL_850;
      case 27:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v186 = 0;
        unsigned int v187 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x1000000000000uLL;
        while (2)
        {
          uint64_t v188 = *v20;
          uint64_t v189 = *(void *)(v3 + v188);
          unint64_t v190 = v189 + 1;
          if (v189 == -1 || v190 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v191 = *(unsigned char *)(*(void *)(v3 + *v23) + v189);
            *(void *)(v3 + v188) = v190;
            v41 |= (unint64_t)(v191 & 0x7F) << v186;
            if (v191 < 0)
            {
              v186 += 7;
              BOOL v30 = v187++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_683;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_683:
        uint64_t v446 = 320;
        goto LABEL_850;
      case 28:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v192 = 0;
        unsigned int v193 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x800000000000uLL;
        while (2)
        {
          uint64_t v194 = *v20;
          uint64_t v195 = *(void *)(v3 + v194);
          unint64_t v196 = v195 + 1;
          if (v195 == -1 || v196 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v197 = *(unsigned char *)(*(void *)(v3 + *v23) + v195);
            *(void *)(v3 + v194) = v196;
            v41 |= (unint64_t)(v197 & 0x7F) << v192;
            if (v197 < 0)
            {
              v192 += 7;
              BOOL v30 = v193++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_687;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_687:
        uint64_t v446 = 316;
        goto LABEL_850;
      case 29:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v198 = 0;
        unsigned int v199 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x40000000000uLL;
        while (2)
        {
          uint64_t v200 = *v20;
          uint64_t v201 = *(void *)(v3 + v200);
          unint64_t v202 = v201 + 1;
          if (v201 == -1 || v202 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v203 = *(unsigned char *)(*(void *)(v3 + *v23) + v201);
            *(void *)(v3 + v200) = v202;
            v41 |= (unint64_t)(v203 & 0x7F) << v198;
            if (v203 < 0)
            {
              v198 += 7;
              BOOL v30 = v199++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_691;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_691:
        uint64_t v446 = 296;
        goto LABEL_850;
      case 30:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v204 = 0;
        unsigned int v205 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x4000000000000uLL;
        while (2)
        {
          uint64_t v206 = *v20;
          uint64_t v207 = *(void *)(v3 + v206);
          unint64_t v208 = v207 + 1;
          if (v207 == -1 || v208 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v209 = *(unsigned char *)(*(void *)(v3 + *v23) + v207);
            *(void *)(v3 + v206) = v208;
            v41 |= (unint64_t)(v209 & 0x7F) << v204;
            if (v209 < 0)
            {
              v204 += 7;
              BOOL v30 = v205++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_695;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_695:
        uint64_t v446 = 328;
        goto LABEL_850;
      case 31:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v210 = 0;
        unsigned int v211 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x20000000000uLL;
        while (2)
        {
          uint64_t v212 = *v20;
          uint64_t v213 = *(void *)(v3 + v212);
          unint64_t v214 = v213 + 1;
          if (v213 == -1 || v214 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v215 = *(unsigned char *)(*(void *)(v3 + *v23) + v213);
            *(void *)(v3 + v212) = v214;
            v41 |= (unint64_t)(v215 & 0x7F) << v210;
            if (v215 < 0)
            {
              v210 += 7;
              BOOL v30 = v211++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_699;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_699:
        uint64_t v446 = 292;
        goto LABEL_850;
      case 32:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v216 = 0;
        unsigned int v217 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x100000000000uLL;
        while (2)
        {
          uint64_t v218 = *v20;
          uint64_t v219 = *(void *)(v3 + v218);
          unint64_t v220 = v219 + 1;
          if (v219 == -1 || v220 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v221 = *(unsigned char *)(*(void *)(v3 + *v23) + v219);
            *(void *)(v3 + v218) = v220;
            v41 |= (unint64_t)(v221 & 0x7F) << v216;
            if (v221 < 0)
            {
              v216 += 7;
              BOOL v30 = v217++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_703;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_703:
        uint64_t v446 = 304;
        goto LABEL_850;
      case 33:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v222 = 0;
        unsigned int v223 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x80000000000uLL;
        while (2)
        {
          uint64_t v224 = *v20;
          uint64_t v225 = *(void *)(v3 + v224);
          unint64_t v226 = v225 + 1;
          if (v225 == -1 || v226 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v227 = *(unsigned char *)(*(void *)(v3 + *v23) + v225);
            *(void *)(v3 + v224) = v226;
            v41 |= (unint64_t)(v227 & 0x7F) << v222;
            if (v227 < 0)
            {
              v222 += 7;
              BOOL v30 = v223++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_707;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_707:
        uint64_t v446 = 300;
        goto LABEL_850;
      case 34:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v228 = 0;
        unsigned int v229 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x400000000000uLL;
        while (2)
        {
          uint64_t v230 = *v20;
          uint64_t v231 = *(void *)(v3 + v230);
          unint64_t v232 = v231 + 1;
          if (v231 == -1 || v232 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v233 = *(unsigned char *)(*(void *)(v3 + *v23) + v231);
            *(void *)(v3 + v230) = v232;
            v41 |= (unint64_t)(v233 & 0x7F) << v228;
            if (v233 < 0)
            {
              v228 += 7;
              BOOL v30 = v229++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_711;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_711:
        uint64_t v446 = 312;
        goto LABEL_850;
      case 35:
        if (!v34) {
          goto LABEL_593;
        }
        if ((*(_WORD *)(a1 + 368) & 0x10) == 0)
        {
          uint64_t v103 = PBReaderReadString();
          uint64_t v104 = 40;
          goto LABEL_514;
        }
        char v454 = PBReaderSkipValueWithTag();
        double v22 = (int *)MEMORY[0x1E4F940C8];
        char v21 = (v19 == 0) | v18;
        if ((v454 & 1) == 0) {
          goto LABEL_908;
        }
        __int16 v453 = *(_WORD *)(a1 + 368) << 11;
        goto LABEL_873;
      case 36:
        if (!v34) {
          goto LABEL_593;
        }
        if ((*(_WORD *)(a1 + 368) & 0x40) == 0)
        {
          uint64_t v103 = PBReaderReadString();
          uint64_t v104 = 56;
          goto LABEL_514;
        }
        char v455 = PBReaderSkipValueWithTag();
        double v22 = (int *)MEMORY[0x1E4F940C8];
        char v21 = (v19 == 0) | v18;
        if ((v455 & 1) == 0) {
          goto LABEL_908;
        }
        __int16 v453 = *(_WORD *)(a1 + 368) << 9;
        goto LABEL_873;
      case 37:
        if (!v34) {
          goto LABEL_593;
        }
        if ((*(_WORD *)(a1 + 368) & 0x20) == 0)
        {
          uint64_t v103 = PBReaderReadString();
          uint64_t v104 = 48;
          goto LABEL_514;
        }
        char v456 = PBReaderSkipValueWithTag();
        double v22 = (int *)MEMORY[0x1E4F940C8];
        char v21 = (v19 == 0) | v18;
        if ((v456 & 1) == 0) {
          goto LABEL_908;
        }
        __int16 v453 = *(_WORD *)(a1 + 368) << 10;
        goto LABEL_873;
      case 38:
        if (!v34) {
          goto LABEL_593;
        }
        if ((*(_WORD *)(a1 + 368) & 0x200) == 0)
        {
          uint64_t v103 = PBReaderReadString();
          uint64_t v104 = 80;
          goto LABEL_514;
        }
        char v457 = PBReaderSkipValueWithTag();
        double v22 = (int *)MEMORY[0x1E4F940C8];
        char v21 = (v19 == 0) | v18;
        if ((v457 & 1) == 0) {
          goto LABEL_908;
        }
        __int16 v453 = *(_WORD *)(a1 + 368) << 6;
        goto LABEL_873;
      case 39:
        if (!v34) {
          goto LABEL_593;
        }
        if ((*(_WORD *)(a1 + 368) & 0x100) == 0)
        {
          uint64_t v103 = PBReaderReadString();
          uint64_t v104 = 72;
          goto LABEL_514;
        }
        char v458 = PBReaderSkipValueWithTag();
        double v22 = (int *)MEMORY[0x1E4F940C8];
        char v21 = (v19 == 0) | v18;
        if ((v458 & 1) == 0) {
          goto LABEL_908;
        }
        __int16 v453 = *(_WORD *)(a1 + 368) << 7;
        goto LABEL_873;
      case 40:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v234 = 0;
        unsigned int v235 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x2000000uLL;
        while (2)
        {
          uint64_t v236 = *v20;
          uint64_t v237 = *(void *)(v3 + v236);
          unint64_t v238 = v237 + 1;
          if (v237 == -1 || v238 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v239 = *(unsigned char *)(*(void *)(v3 + *v23) + v237);
            *(void *)(v3 + v236) = v238;
            v41 |= (unint64_t)(v239 & 0x7F) << v234;
            if (v239 < 0)
            {
              v234 += 7;
              BOOL v30 = v235++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_715;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_715:
        uint64_t v446 = 228;
        goto LABEL_850;
      case 41:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v240 = 0;
        unsigned int v241 = 0;
        uint64_t v242 = 0;
        *(void *)(a1 + 360) |= 0x400000000000000uLL;
        while (2)
        {
          uint64_t v243 = *v20;
          uint64_t v244 = *(void *)(v3 + v243);
          unint64_t v245 = v244 + 1;
          if (v244 == -1 || v245 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v246 = *(unsigned char *)(*(void *)(v3 + *v23) + v244);
            *(void *)(v3 + v243) = v245;
            v242 |= (unint64_t)(v246 & 0x7F) << v240;
            if (v246 < 0)
            {
              v240 += 7;
              BOOL v30 = v241++ >= 9;
              if (v30)
              {
                uint64_t v242 = 0;
                goto LABEL_719;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v242 = 0;
        }
LABEL_719:
        BOOL v448 = v242 != 0;
        uint64_t v449 = 351;
        goto LABEL_841;
      case 42:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v247 = 0;
        unsigned int v248 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x8000uLL;
        while (2)
        {
          uint64_t v249 = *v20;
          uint64_t v250 = *(void *)(v3 + v249);
          unint64_t v251 = v250 + 1;
          if (v250 == -1 || v251 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v252 = *(unsigned char *)(*(void *)(v3 + *v23) + v250);
            *(void *)(v3 + v249) = v251;
            v41 |= (unint64_t)(v252 & 0x7F) << v247;
            if (v252 < 0)
            {
              v247 += 7;
              BOOL v30 = v248++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_723;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_723:
        uint64_t v446 = 188;
        goto LABEL_850;
      case 43:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v253 = 0;
        unsigned int v254 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x20uLL;
        while (2)
        {
          uint64_t v255 = *v20;
          uint64_t v256 = *(void *)(v3 + v255);
          unint64_t v257 = v256 + 1;
          if (v256 == -1 || v257 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v258 = *(unsigned char *)(*(void *)(v3 + *v23) + v256);
            *(void *)(v3 + v255) = v257;
            v41 |= (unint64_t)(v258 & 0x7F) << v253;
            if (v258 < 0)
            {
              v253 += 7;
              BOOL v30 = v254++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_727;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_727:
        uint64_t v446 = 148;
        goto LABEL_850;
      case 44:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v259 = 0;
        unsigned int v260 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x40uLL;
        while (2)
        {
          uint64_t v261 = *v20;
          uint64_t v262 = *(void *)(v3 + v261);
          unint64_t v263 = v262 + 1;
          if (v262 == -1 || v263 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v264 = *(unsigned char *)(*(void *)(v3 + *v23) + v262);
            *(void *)(v3 + v261) = v263;
            v41 |= (unint64_t)(v264 & 0x7F) << v259;
            if (v264 < 0)
            {
              v259 += 7;
              BOOL v30 = v260++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_731;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_731:
        uint64_t v446 = 152;
        goto LABEL_850;
      case 45:
        if (!v34) {
          goto LABEL_593;
        }
        if ((*(_WORD *)(a1 + 368) & 0x80) == 0)
        {
          uint64_t v103 = PBReaderReadString();
          uint64_t v104 = 64;
          goto LABEL_514;
        }
        char v459 = PBReaderSkipValueWithTag();
        double v22 = (int *)MEMORY[0x1E4F940C8];
        char v21 = (v19 == 0) | v18;
        if ((v459 & 1) == 0) {
          goto LABEL_908;
        }
        __int16 v453 = *(_WORD *)(a1 + 368) << 8;
        goto LABEL_873;
      case 46:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v265 = 0;
        unsigned int v266 = 0;
        uint64_t v267 = 0;
        *(void *)(a1 + 360) |= 0x400uLL;
        while (2)
        {
          uint64_t v268 = *v20;
          uint64_t v269 = *(void *)(v3 + v268);
          unint64_t v270 = v269 + 1;
          if (v269 == -1 || v270 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v271 = *(unsigned char *)(*(void *)(v3 + *v23) + v269);
            *(void *)(v3 + v268) = v270;
            v267 |= (unint64_t)(v271 & 0x7F) << v265;
            if (v271 < 0)
            {
              v265 += 7;
              BOOL v30 = v266++ >= 9;
              if (v30)
              {
                LODWORD(v267) = 0;
                goto LABEL_735;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v267) = 0;
        }
LABEL_735:
        int v450 = -(v267 & 1) ^ ((int)v267 >> 1);
        uint64_t v451 = 168;
        goto LABEL_756;
      case 47:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v272 = 0;
        unsigned int v273 = 0;
        uint64_t v274 = 0;
        *(void *)(a1 + 360) |= 0x1000uLL;
        while (2)
        {
          uint64_t v275 = *v20;
          uint64_t v276 = *(void *)(v3 + v275);
          unint64_t v277 = v276 + 1;
          if (v276 == -1 || v277 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v278 = *(unsigned char *)(*(void *)(v3 + *v23) + v276);
            *(void *)(v3 + v275) = v277;
            v274 |= (unint64_t)(v278 & 0x7F) << v272;
            if (v278 < 0)
            {
              v272 += 7;
              BOOL v30 = v273++ >= 9;
              if (v30)
              {
                LODWORD(v274) = 0;
                goto LABEL_739;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v274) = 0;
        }
LABEL_739:
        int v450 = -(v274 & 1) ^ ((int)v274 >> 1);
        uint64_t v451 = 176;
        goto LABEL_756;
      case 48:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v279 = 0;
        unsigned int v280 = 0;
        uint64_t v281 = 0;
        *(void *)(a1 + 360) |= 0x800uLL;
        while (2)
        {
          uint64_t v282 = *v20;
          uint64_t v283 = *(void *)(v3 + v282);
          unint64_t v284 = v283 + 1;
          if (v283 == -1 || v284 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v285 = *(unsigned char *)(*(void *)(v3 + *v23) + v283);
            *(void *)(v3 + v282) = v284;
            v281 |= (unint64_t)(v285 & 0x7F) << v279;
            if (v285 < 0)
            {
              v279 += 7;
              BOOL v30 = v280++ >= 9;
              if (v30)
              {
                LODWORD(v281) = 0;
                goto LABEL_743;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v281) = 0;
        }
LABEL_743:
        int v450 = -(v281 & 1) ^ ((int)v281 >> 1);
        uint64_t v451 = 172;
        goto LABEL_756;
      case 49:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v286 = 0;
        unsigned int v287 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 360) |= 0x10000uLL;
        while (2)
        {
          uint64_t v289 = *v20;
          uint64_t v290 = *(void *)(v3 + v289);
          unint64_t v291 = v290 + 1;
          if (v290 == -1 || v291 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v292 = *(unsigned char *)(*(void *)(v3 + *v23) + v290);
            *(void *)(v3 + v289) = v291;
            v288 |= (unint64_t)(v292 & 0x7F) << v286;
            if (v292 < 0)
            {
              v286 += 7;
              BOOL v30 = v287++ >= 9;
              if (v30)
              {
                LODWORD(v288) = 0;
                goto LABEL_747;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v288) = 0;
        }
LABEL_747:
        int v450 = -(v288 & 1) ^ ((int)v288 >> 1);
        uint64_t v451 = 192;
        goto LABEL_756;
      case 50:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v293 = 0;
        unsigned int v294 = 0;
        uint64_t v295 = 0;
        *(void *)(a1 + 360) |= 0x20000uLL;
        while (2)
        {
          uint64_t v296 = *v20;
          uint64_t v297 = *(void *)(v3 + v296);
          unint64_t v298 = v297 + 1;
          if (v297 == -1 || v298 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v299 = *(unsigned char *)(*(void *)(v3 + *v23) + v297);
            *(void *)(v3 + v296) = v298;
            v295 |= (unint64_t)(v299 & 0x7F) << v293;
            if (v299 < 0)
            {
              v293 += 7;
              BOOL v30 = v294++ >= 9;
              if (v30)
              {
                LODWORD(v295) = 0;
                goto LABEL_751;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v295) = 0;
        }
LABEL_751:
        int v450 = -(v295 & 1) ^ ((int)v295 >> 1);
        uint64_t v451 = 196;
        goto LABEL_756;
      case 51:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v300 = 0;
        unsigned int v301 = 0;
        uint64_t v302 = 0;
        *(void *)(a1 + 360) |= 0x40000uLL;
        while (2)
        {
          uint64_t v303 = *v20;
          uint64_t v304 = *(void *)(v3 + v303);
          unint64_t v305 = v304 + 1;
          if (v304 == -1 || v305 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v306 = *(unsigned char *)(*(void *)(v3 + *v23) + v304);
            *(void *)(v3 + v303) = v305;
            v302 |= (unint64_t)(v306 & 0x7F) << v300;
            if (v306 < 0)
            {
              v300 += 7;
              BOOL v30 = v301++ >= 9;
              if (v30)
              {
                LODWORD(v302) = 0;
                goto LABEL_755;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v302) = 0;
        }
LABEL_755:
        int v450 = -(v302 & 1) ^ ((int)v302 >> 1);
        uint64_t v451 = 200;
LABEL_756:
        *(_DWORD *)(a1 + v451) = v450;
        goto LABEL_851;
      case 52:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v307 = 0;
        unsigned int v308 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x100uLL;
        while (2)
        {
          uint64_t v309 = *v20;
          uint64_t v310 = *(void *)(v3 + v309);
          unint64_t v311 = v310 + 1;
          if (v310 == -1 || v311 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v312 = *(unsigned char *)(*(void *)(v3 + *v23) + v310);
            *(void *)(v3 + v309) = v311;
            v41 |= (unint64_t)(v312 & 0x7F) << v307;
            if (v312 < 0)
            {
              v307 += 7;
              BOOL v30 = v308++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_760;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_760:
        uint64_t v446 = 160;
        goto LABEL_850;
      case 53:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v313 = 0;
        unsigned int v314 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x400000uLL;
        while (2)
        {
          uint64_t v315 = *v20;
          uint64_t v316 = *(void *)(v3 + v315);
          unint64_t v317 = v316 + 1;
          if (v316 == -1 || v317 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v318 = *(unsigned char *)(*(void *)(v3 + *v23) + v316);
            *(void *)(v3 + v315) = v317;
            v41 |= (unint64_t)(v318 & 0x7F) << v313;
            if (v318 < 0)
            {
              v313 += 7;
              BOOL v30 = v314++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_764;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_764:
        uint64_t v446 = 216;
        goto LABEL_850;
      case 54:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v319 = 0;
        unsigned int v320 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x80000uLL;
        while (2)
        {
          uint64_t v321 = *v20;
          uint64_t v322 = *(void *)(v3 + v321);
          unint64_t v323 = v322 + 1;
          if (v322 == -1 || v323 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v324 = *(unsigned char *)(*(void *)(v3 + *v23) + v322);
            *(void *)(v3 + v321) = v323;
            v41 |= (unint64_t)(v324 & 0x7F) << v319;
            if (v324 < 0)
            {
              v319 += 7;
              BOOL v30 = v320++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_768;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_768:
        uint64_t v446 = 204;
        goto LABEL_850;
      case 55:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v325 = 0;
        unsigned int v326 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x100000uLL;
        while (2)
        {
          uint64_t v327 = *v20;
          uint64_t v328 = *(void *)(v3 + v327);
          unint64_t v329 = v328 + 1;
          if (v328 == -1 || v329 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v330 = *(unsigned char *)(*(void *)(v3 + *v23) + v328);
            *(void *)(v3 + v327) = v329;
            v41 |= (unint64_t)(v330 & 0x7F) << v325;
            if (v330 < 0)
            {
              v325 += 7;
              BOOL v30 = v326++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_772;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_772:
        uint64_t v446 = 208;
        goto LABEL_850;
      case 56:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v331 = 0;
        unsigned int v332 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x800000uLL;
        while (2)
        {
          uint64_t v333 = *v20;
          uint64_t v334 = *(void *)(v3 + v333);
          unint64_t v335 = v334 + 1;
          if (v334 == -1 || v335 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v336 = *(unsigned char *)(*(void *)(v3 + *v23) + v334);
            *(void *)(v3 + v333) = v335;
            v41 |= (unint64_t)(v336 & 0x7F) << v331;
            if (v336 < 0)
            {
              v331 += 7;
              BOOL v30 = v332++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_776;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_776:
        uint64_t v446 = 220;
        goto LABEL_850;
      case 57:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v337 = 0;
        unsigned int v338 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x1000000uLL;
        while (2)
        {
          uint64_t v339 = *v20;
          uint64_t v340 = *(void *)(v3 + v339);
          unint64_t v341 = v340 + 1;
          if (v340 == -1 || v341 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v342 = *(unsigned char *)(*(void *)(v3 + *v23) + v340);
            *(void *)(v3 + v339) = v341;
            v41 |= (unint64_t)(v342 & 0x7F) << v337;
            if (v342 < 0)
            {
              v337 += 7;
              BOOL v30 = v338++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_780;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_780:
        uint64_t v446 = 224;
        goto LABEL_850;
      case 58:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v343 = 0;
        unsigned int v344 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x80uLL;
        while (2)
        {
          uint64_t v345 = *v20;
          uint64_t v346 = *(void *)(v3 + v345);
          unint64_t v347 = v346 + 1;
          if (v346 == -1 || v347 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v348 = *(unsigned char *)(*(void *)(v3 + *v23) + v346);
            *(void *)(v3 + v345) = v347;
            v41 |= (unint64_t)(v348 & 0x7F) << v343;
            if (v348 < 0)
            {
              v343 += 7;
              BOOL v30 = v344++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_784;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_784:
        uint64_t v446 = 156;
        goto LABEL_850;
      case 59:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v349 = 0;
        unsigned int v350 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x2000uLL;
        while (2)
        {
          uint64_t v351 = *v20;
          uint64_t v352 = *(void *)(v3 + v351);
          unint64_t v353 = v352 + 1;
          if (v352 == -1 || v353 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v354 = *(unsigned char *)(*(void *)(v3 + *v23) + v352);
            *(void *)(v3 + v351) = v353;
            v41 |= (unint64_t)(v354 & 0x7F) << v349;
            if (v354 < 0)
            {
              v349 += 7;
              BOOL v30 = v350++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_788;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_788:
        uint64_t v446 = 180;
        goto LABEL_850;
      case 60:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v355 = 0;
        unsigned int v356 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x4000uLL;
        while (2)
        {
          uint64_t v357 = *v20;
          uint64_t v358 = *(void *)(v3 + v357);
          unint64_t v359 = v358 + 1;
          if (v358 == -1 || v359 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v360 = *(unsigned char *)(*(void *)(v3 + *v23) + v358);
            *(void *)(v3 + v357) = v359;
            v41 |= (unint64_t)(v360 & 0x7F) << v355;
            if (v360 < 0)
            {
              v355 += 7;
              BOOL v30 = v356++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_792;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_792:
        uint64_t v446 = 184;
        goto LABEL_850;
      case 61:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v361 = 0;
        unsigned int v362 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x200uLL;
        while (2)
        {
          uint64_t v363 = *v20;
          uint64_t v364 = *(void *)(v3 + v363);
          unint64_t v365 = v364 + 1;
          if (v364 == -1 || v365 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v366 = *(unsigned char *)(*(void *)(v3 + *v23) + v364);
            *(void *)(v3 + v363) = v365;
            v41 |= (unint64_t)(v366 & 0x7F) << v361;
            if (v366 < 0)
            {
              v361 += 7;
              BOOL v30 = v362++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_796;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_796:
        uint64_t v446 = 164;
        goto LABEL_850;
      case 62:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v367 = 0;
        unsigned int v368 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x200000uLL;
        while (2)
        {
          uint64_t v369 = *v20;
          uint64_t v370 = *(void *)(v3 + v369);
          unint64_t v371 = v370 + 1;
          if (v370 == -1 || v371 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v372 = *(unsigned char *)(*(void *)(v3 + *v23) + v370);
            *(void *)(v3 + v369) = v371;
            v41 |= (unint64_t)(v372 & 0x7F) << v367;
            if (v372 < 0)
            {
              v367 += 7;
              BOOL v30 = v368++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_800;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_800:
        uint64_t v446 = 212;
        goto LABEL_850;
      case 63:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v373 = 0;
        unsigned int v374 = 0;
        uint64_t v375 = 0;
        *(void *)(a1 + 360) |= 0x200000000000000uLL;
        while (2)
        {
          uint64_t v376 = *v20;
          uint64_t v377 = *(void *)(v3 + v376);
          unint64_t v378 = v377 + 1;
          if (v377 == -1 || v378 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v379 = *(unsigned char *)(*(void *)(v3 + *v23) + v377);
            *(void *)(v3 + v376) = v378;
            v375 |= (unint64_t)(v379 & 0x7F) << v373;
            if (v379 < 0)
            {
              v373 += 7;
              BOOL v30 = v374++ >= 9;
              if (v30)
              {
                uint64_t v375 = 0;
                goto LABEL_804;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v375 = 0;
        }
LABEL_804:
        BOOL v448 = v375 != 0;
        uint64_t v449 = 350;
        goto LABEL_841;
      case 64:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v380 = 0;
        unsigned int v381 = 0;
        uint64_t v382 = 0;
        *(void *)(a1 + 360) |= 0x100000000000000uLL;
        while (2)
        {
          uint64_t v383 = *v20;
          uint64_t v384 = *(void *)(v3 + v383);
          unint64_t v385 = v384 + 1;
          if (v384 == -1 || v385 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v386 = *(unsigned char *)(*(void *)(v3 + *v23) + v384);
            *(void *)(v3 + v383) = v385;
            v382 |= (unint64_t)(v386 & 0x7F) << v380;
            if (v386 < 0)
            {
              v380 += 7;
              BOOL v30 = v381++ >= 9;
              if (v30)
              {
                uint64_t v382 = 0;
                goto LABEL_808;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v382 = 0;
        }
LABEL_808:
        BOOL v448 = v382 != 0;
        uint64_t v449 = 349;
        goto LABEL_841;
      case 65:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v387 = 0;
        unsigned int v388 = 0;
        uint64_t v389 = 0;
        *(void *)(a1 + 360) |= 0x80000000000000uLL;
        while (2)
        {
          uint64_t v390 = *v20;
          uint64_t v391 = *(void *)(v3 + v390);
          unint64_t v392 = v391 + 1;
          if (v391 == -1 || v392 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v393 = *(unsigned char *)(*(void *)(v3 + *v23) + v391);
            *(void *)(v3 + v390) = v392;
            v389 |= (unint64_t)(v393 & 0x7F) << v387;
            if (v393 < 0)
            {
              v387 += 7;
              BOOL v30 = v388++ >= 9;
              if (v30)
              {
                uint64_t v389 = 0;
                goto LABEL_812;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v389 = 0;
        }
LABEL_812:
        BOOL v448 = v389 != 0;
        uint64_t v449 = 348;
        goto LABEL_841;
      case 66:
        if (!v34) {
          goto LABEL_593;
        }
        if ((*(_WORD *)(a1 + 368) & 0x800) == 0)
        {
          uint64_t v103 = PBReaderReadString();
          uint64_t v104 = 96;
          goto LABEL_514;
        }
        char v460 = PBReaderSkipValueWithTag();
        double v22 = (int *)MEMORY[0x1E4F940C8];
        char v21 = (v19 == 0) | v18;
        if ((v460 & 1) == 0) {
          goto LABEL_908;
        }
        __int16 v453 = 16 * *(_WORD *)(a1 + 368);
        goto LABEL_873;
      case 67:
        if (!v34) {
          goto LABEL_593;
        }
        if ((*(_WORD *)(a1 + 368) & 0x400) == 0)
        {
          uint64_t v103 = PBReaderReadString();
          uint64_t v104 = 88;
LABEL_514:
          v394 = *(void **)(a1 + v104);
          *(void *)(a1 + v104) = v103;
          goto LABEL_515;
        }
        char v461 = PBReaderSkipValueWithTag();
        double v22 = (int *)MEMORY[0x1E4F940C8];
        char v21 = (v19 == 0) | v18;
        if ((v461 & 1) == 0) {
          goto LABEL_908;
        }
        __int16 v453 = 32 * *(_WORD *)(a1 + 368);
        goto LABEL_873;
      case 68:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v395 = 0;
        unsigned int v396 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x200000000uLL;
        while (2)
        {
          uint64_t v397 = *v20;
          uint64_t v398 = *(void *)(v3 + v397);
          unint64_t v399 = v398 + 1;
          if (v398 == -1 || v399 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v400 = *(unsigned char *)(*(void *)(v3 + *v23) + v398);
            *(void *)(v3 + v397) = v399;
            v41 |= (unint64_t)(v400 & 0x7F) << v395;
            if (v400 < 0)
            {
              v395 += 7;
              BOOL v30 = v396++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_816;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_816:
        uint64_t v446 = 260;
        goto LABEL_850;
      case 69:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v401 = 0;
        unsigned int v402 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x100000000uLL;
        while (2)
        {
          uint64_t v403 = *v20;
          uint64_t v404 = *(void *)(v3 + v403);
          unint64_t v405 = v404 + 1;
          if (v404 == -1 || v405 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v406 = *(unsigned char *)(*(void *)(v3 + *v23) + v404);
            *(void *)(v3 + v403) = v405;
            v41 |= (unint64_t)(v406 & 0x7F) << v401;
            if (v406 < 0)
            {
              v401 += 7;
              BOOL v30 = v402++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_820;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_820:
        uint64_t v446 = 256;
        goto LABEL_850;
      case 70:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v407 = 0;
        unsigned int v408 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x400000000uLL;
        while (2)
        {
          uint64_t v409 = *v20;
          unint64_t v410 = *(void *)(v3 + v409);
          if (v410 == -1 || v410 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v411 = *(unsigned char *)(*(void *)(v3 + *v23) + v410);
            *(void *)(v3 + v409) = v410 + 1;
            v41 |= (unint64_t)(v411 & 0x7F) << v407;
            if (v411 < 0)
            {
              v407 += 7;
              BOOL v30 = v408++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_824;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_824:
        uint64_t v446 = 264;
        goto LABEL_850;
      case 71:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v412 = 0;
        unsigned int v413 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x80000000uLL;
        while (2)
        {
          uint64_t v414 = *v20;
          unint64_t v415 = *(void *)(v3 + v414);
          if (v415 == -1 || v415 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v416 = *(unsigned char *)(*(void *)(v3 + *v23) + v415);
            *(void *)(v3 + v414) = v415 + 1;
            v41 |= (unint64_t)(v416 & 0x7F) << v412;
            if (v416 < 0)
            {
              v412 += 7;
              BOOL v30 = v413++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_828;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_828:
        uint64_t v446 = 252;
        goto LABEL_850;
      case 72:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v417 = 0;
        unsigned int v418 = 0;
        uint64_t v419 = 0;
        *(_WORD *)(a1 + 368) |= 1u;
        while (2)
        {
          uint64_t v420 = *v20;
          unint64_t v421 = *(void *)(v3 + v420);
          if (v421 == -1 || v421 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v422 = *(unsigned char *)(*(void *)(v3 + *v23) + v421);
            *(void *)(v3 + v420) = v421 + 1;
            v419 |= (unint64_t)(v422 & 0x7F) << v417;
            if (v422 < 0)
            {
              v417 += 7;
              BOOL v30 = v418++ >= 9;
              if (v30)
              {
                uint64_t v419 = 0;
                goto LABEL_832;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v419 = 0;
        }
LABEL_832:
        BOOL v448 = v419 != 0;
        uint64_t v449 = 357;
        goto LABEL_841;
      case 73:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v423 = 0;
        unsigned int v424 = 0;
        uint64_t v425 = 0;
        *(_WORD *)(a1 + 368) |= 4u;
        while (2)
        {
          uint64_t v426 = *v20;
          unint64_t v427 = *(void *)(v3 + v426);
          if (v427 == -1 || v427 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v428 = *(unsigned char *)(*(void *)(v3 + *v23) + v427);
            *(void *)(v3 + v426) = v427 + 1;
            v425 |= (unint64_t)(v428 & 0x7F) << v423;
            if (v428 < 0)
            {
              v423 += 7;
              BOOL v30 = v424++ >= 9;
              if (v30)
              {
                uint64_t v425 = 0;
                goto LABEL_836;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v425 = 0;
        }
LABEL_836:
        BOOL v448 = v425 != 0;
        uint64_t v449 = 359;
        goto LABEL_841;
      case 74:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v429 = 0;
        unsigned int v430 = 0;
        uint64_t v431 = 0;
        *(_WORD *)(a1 + 368) |= 2u;
        while (2)
        {
          uint64_t v432 = *v20;
          unint64_t v433 = *(void *)(v3 + v432);
          if (v433 == -1 || v433 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v434 = *(unsigned char *)(*(void *)(v3 + *v23) + v433);
            *(void *)(v3 + v432) = v433 + 1;
            v431 |= (unint64_t)(v434 & 0x7F) << v429;
            if (v434 < 0)
            {
              v429 += 7;
              BOOL v30 = v430++ >= 9;
              if (v30)
              {
                uint64_t v431 = 0;
                goto LABEL_840;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v431 = 0;
        }
LABEL_840:
        BOOL v448 = v431 != 0;
        uint64_t v449 = 358;
LABEL_841:
        *(unsigned char *)(a1 + v449) = v448;
        goto LABEL_851;
      case 75:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v435 = 0;
        unsigned int v436 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x40000000000000uLL;
        while (2)
        {
          uint64_t v437 = *v20;
          unint64_t v438 = *(void *)(v3 + v437);
          if (v438 == -1 || v438 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v439 = *(unsigned char *)(*(void *)(v3 + *v23) + v438);
            *(void *)(v3 + v437) = v438 + 1;
            v41 |= (unint64_t)(v439 & 0x7F) << v435;
            if (v439 < 0)
            {
              v435 += 7;
              BOOL v30 = v436++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_845;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_845:
        uint64_t v446 = 344;
        goto LABEL_850;
      case 76:
        if ((v8 & 1) == 0) {
          goto LABEL_593;
        }
        char v440 = 0;
        unsigned int v441 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 360) |= 0x20000000000000uLL;
        while (2)
        {
          uint64_t v442 = *v20;
          unint64_t v443 = *(void *)(v3 + v442);
          if (v443 == -1 || v443 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v444 = *(unsigned char *)(*(void *)(v3 + *v23) + v443);
            *(void *)(v3 + v442) = v443 + 1;
            v41 |= (unint64_t)(v444 & 0x7F) << v440;
            if (v444 < 0)
            {
              v440 += 7;
              BOOL v30 = v441++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_849;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v41) = 0;
        }
LABEL_849:
        uint64_t v446 = 340;
LABEL_850:
        *(_DWORD *)(a1 + v446) = v41;
        goto LABEL_851;
      case 77:
        if (!v34)
        {
LABEL_593:
          char v445 = PBReaderSkipValueWithTag();
          char v21 = (v19 == 0) | v18;
          double v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v445 & 1) == 0) {
            goto LABEL_908;
          }
          goto LABEL_851;
        }
        if ((*(_WORD *)(a1 + 368) & 0x1000) != 0)
        {
          char v462 = PBReaderSkipValueWithTag();
          double v22 = (int *)MEMORY[0x1E4F940C8];
          char v21 = (v19 == 0) | v18;
          if ((v462 & 1) == 0) {
            goto LABEL_908;
          }
          __int16 v453 = 8 * *(_WORD *)(a1 + 368);
LABEL_873:
          v7 += (uint64_t)v453 >> 15;
LABEL_851:
          if (!(v18 & 1 | (v7 != 0))) {
            goto LABEL_883;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_908;
        }
        v470 = objc_alloc_init(GEOLocation);
        if (GEOLocationReadAllFrom((uint64_t)v470, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v394 = *(void **)(a1 + 104);
          *(void *)(a1 + 104) = v470;
LABEL_515:

          --v7;
          double v22 = (int *)MEMORY[0x1E4F940C8];
          char v21 = (v19 == 0) | v18;
          goto LABEL_851;
        }

LABEL_908:
        unint64_t v3 = 0;
        *(_WORD *)(a1 + 368) |= 0x1FF8u;
        if (v18)
        {
LABEL_905:
          v468 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        int v46 = PBReaderSkipValueWithTag();
        char v21 = (v19 == 0) | v18;
        double v22 = (int *)MEMORY[0x1E4F940C8];
        if (!v46) {
          goto LABEL_908;
        }
        goto LABEL_851;
    }
  }
}

void sub_189660EAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189661024(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18966119C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189661310(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189661488(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896618D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189662588(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189662700(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189662D64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189665F54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCellConnectionQualityReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 140))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOCellConnectionQualityReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 144));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 136) = [v8 position];
  *(_DWORD *)(a1 + 140) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOCellConnectionQualityReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOCellConnectionQualityReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOCellConnectionQualityReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 104) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 144));
  return Specified;
}

void sub_1896660FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCellConnectionQualityReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOCellConnectionQualityReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189666160(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCellConnectionQualityIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v26 = v37++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v26 = v42++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            uint64_t v49 = *(void *)&a1[v48];
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v26 = v47++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v52 = 0;
          while (1)
          {
            uint64_t v53 = *v2;
            uint64_t v54 = *(void *)&a1[v53];
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v56 = *(char *)(*(void *)&a1[*v5] + v54);
            *(void *)&a1[v53] = v55;
            if (v56 < 0)
            {
              BOOL v26 = v52++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v57 = 0;
          while (1)
          {
            uint64_t v58 = *v2;
            uint64_t v59 = *(void *)&a1[v58];
            unint64_t v60 = v59 + 1;
            if (v59 == -1 || v60 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v61 = *(char *)(*(void *)&a1[*v5] + v59);
            *(void *)&a1[v58] = v60;
            if (v61 < 0)
            {
              BOOL v26 = v57++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v62 = 0;
          while (1)
          {
            uint64_t v63 = *v2;
            uint64_t v64 = *(void *)&a1[v63];
            unint64_t v65 = v64 + 1;
            if (v64 == -1 || v65 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v66 = *(char *)(*(void *)&a1[*v5] + v64);
            *(void *)&a1[v63] = v65;
            if (v66 < 0)
            {
              BOOL v26 = v62++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v67 = 0;
          while (1)
          {
            uint64_t v68 = *v2;
            uint64_t v69 = *(void *)&a1[v68];
            unint64_t v70 = v69 + 1;
            if (v69 == -1 || v70 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v71 = *(char *)(*(void *)&a1[*v5] + v69);
            *(void *)&a1[v68] = v70;
            if (v71 < 0)
            {
              BOOL v26 = v67++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0xBu:
          if (v16 == 2) {
            goto LABEL_472;
          }
          goto LABEL_556;
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v72 = 0;
          while (1)
          {
            uint64_t v73 = *v2;
            uint64_t v74 = *(void *)&a1[v73];
            unint64_t v75 = v74 + 1;
            if (v74 == -1 || v75 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v76 = *(char *)(*(void *)&a1[*v5] + v74);
            *(void *)&a1[v73] = v75;
            if (v76 < 0)
            {
              BOOL v26 = v72++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0xDu:
        case 0xEu:
        case 0xFu:
        case 0x10u:
          if (v16 != 5) {
            goto LABEL_556;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFFBLL) {
            goto LABEL_547;
          }
          unint64_t v20 = v19 + 4;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_547;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 0x11u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v77 = 0;
          while (1)
          {
            uint64_t v78 = *v2;
            uint64_t v79 = *(void *)&a1[v78];
            unint64_t v80 = v79 + 1;
            if (v79 == -1 || v80 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v81 = *(char *)(*(void *)&a1[*v5] + v79);
            *(void *)&a1[v78] = v80;
            if (v81 < 0)
            {
              BOOL v26 = v77++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v82 = 0;
          while (1)
          {
            uint64_t v83 = *v2;
            uint64_t v84 = *(void *)&a1[v83];
            unint64_t v85 = v84 + 1;
            if (v84 == -1 || v85 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v86 = *(char *)(*(void *)&a1[*v5] + v84);
            *(void *)&a1[v83] = v85;
            if (v86 < 0)
            {
              BOOL v26 = v82++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x13u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v87 = 0;
          while (1)
          {
            uint64_t v88 = *v2;
            uint64_t v89 = *(void *)&a1[v88];
            unint64_t v90 = v89 + 1;
            if (v89 == -1 || v90 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v91 = *(char *)(*(void *)&a1[*v5] + v89);
            *(void *)&a1[v88] = v90;
            if (v91 < 0)
            {
              BOOL v26 = v87++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x14u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v92 = 0;
          while (1)
          {
            uint64_t v93 = *v2;
            uint64_t v94 = *(void *)&a1[v93];
            unint64_t v95 = v94 + 1;
            if (v94 == -1 || v95 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v96 = *(char *)(*(void *)&a1[*v5] + v94);
            *(void *)&a1[v93] = v95;
            if (v96 < 0)
            {
              BOOL v26 = v92++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x15u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v97 = 0;
          while (1)
          {
            uint64_t v98 = *v2;
            uint64_t v99 = *(void *)&a1[v98];
            unint64_t v100 = v99 + 1;
            if (v99 == -1 || v100 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v101 = *(char *)(*(void *)&a1[*v5] + v99);
            *(void *)&a1[v98] = v100;
            if (v101 < 0)
            {
              BOOL v26 = v97++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x16u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v102 = 0;
          while (1)
          {
            uint64_t v103 = *v2;
            uint64_t v104 = *(void *)&a1[v103];
            unint64_t v105 = v104 + 1;
            if (v104 == -1 || v105 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v106 = *(char *)(*(void *)&a1[*v5] + v104);
            *(void *)&a1[v103] = v105;
            if (v106 < 0)
            {
              BOOL v26 = v102++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x17u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v107 = 0;
          while (1)
          {
            uint64_t v108 = *v2;
            uint64_t v109 = *(void *)&a1[v108];
            unint64_t v110 = v109 + 1;
            if (v109 == -1 || v110 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v111 = *(char *)(*(void *)&a1[*v5] + v109);
            *(void *)&a1[v108] = v110;
            if (v111 < 0)
            {
              BOOL v26 = v107++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x18u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v112 = 0;
          while (1)
          {
            uint64_t v113 = *v2;
            uint64_t v114 = *(void *)&a1[v113];
            unint64_t v115 = v114 + 1;
            if (v114 == -1 || v115 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v116 = *(char *)(*(void *)&a1[*v5] + v114);
            *(void *)&a1[v113] = v115;
            if (v116 < 0)
            {
              BOOL v26 = v112++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x19u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v117 = 0;
          while (1)
          {
            uint64_t v118 = *v2;
            uint64_t v119 = *(void *)&a1[v118];
            unint64_t v120 = v119 + 1;
            if (v119 == -1 || v120 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v121 = *(char *)(*(void *)&a1[*v5] + v119);
            *(void *)&a1[v118] = v120;
            if (v121 < 0)
            {
              BOOL v26 = v117++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x1Au:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v122 = 0;
          while (1)
          {
            uint64_t v123 = *v2;
            uint64_t v124 = *(void *)&a1[v123];
            unint64_t v125 = v124 + 1;
            if (v124 == -1 || v125 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v126 = *(char *)(*(void *)&a1[*v5] + v124);
            *(void *)&a1[v123] = v125;
            if (v126 < 0)
            {
              BOOL v26 = v122++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x1Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v127 = 0;
          while (1)
          {
            uint64_t v128 = *v2;
            uint64_t v129 = *(void *)&a1[v128];
            unint64_t v130 = v129 + 1;
            if (v129 == -1 || v130 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v131 = *(char *)(*(void *)&a1[*v5] + v129);
            *(void *)&a1[v128] = v130;
            if (v131 < 0)
            {
              BOOL v26 = v127++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x1Cu:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v132 = 0;
          while (1)
          {
            uint64_t v133 = *v2;
            uint64_t v134 = *(void *)&a1[v133];
            unint64_t v135 = v134 + 1;
            if (v134 == -1 || v135 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v136 = *(char *)(*(void *)&a1[*v5] + v134);
            *(void *)&a1[v133] = v135;
            if (v136 < 0)
            {
              BOOL v26 = v132++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x1Du:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v137 = 0;
          while (1)
          {
            uint64_t v138 = *v2;
            uint64_t v139 = *(void *)&a1[v138];
            unint64_t v140 = v139 + 1;
            if (v139 == -1 || v140 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v141 = *(char *)(*(void *)&a1[*v5] + v139);
            *(void *)&a1[v138] = v140;
            if (v141 < 0)
            {
              BOOL v26 = v137++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x1Eu:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v142 = 0;
          while (1)
          {
            uint64_t v143 = *v2;
            uint64_t v144 = *(void *)&a1[v143];
            unint64_t v145 = v144 + 1;
            if (v144 == -1 || v145 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v146 = *(char *)(*(void *)&a1[*v5] + v144);
            *(void *)&a1[v143] = v145;
            if (v146 < 0)
            {
              BOOL v26 = v142++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x1Fu:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v147 = 0;
          while (1)
          {
            uint64_t v148 = *v2;
            uint64_t v149 = *(void *)&a1[v148];
            unint64_t v150 = v149 + 1;
            if (v149 == -1 || v150 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v151 = *(char *)(*(void *)&a1[*v5] + v149);
            *(void *)&a1[v148] = v150;
            if (v151 < 0)
            {
              BOOL v26 = v147++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x20u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v152 = 0;
          while (1)
          {
            uint64_t v153 = *v2;
            uint64_t v154 = *(void *)&a1[v153];
            unint64_t v155 = v154 + 1;
            if (v154 == -1 || v155 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v156 = *(char *)(*(void *)&a1[*v5] + v154);
            *(void *)&a1[v153] = v155;
            if (v156 < 0)
            {
              BOOL v26 = v152++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x21u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v157 = 0;
          while (1)
          {
            uint64_t v158 = *v2;
            uint64_t v159 = *(void *)&a1[v158];
            unint64_t v160 = v159 + 1;
            if (v159 == -1 || v160 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v161 = *(char *)(*(void *)&a1[*v5] + v159);
            *(void *)&a1[v158] = v160;
            if (v161 < 0)
            {
              BOOL v26 = v157++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x22u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v162 = 0;
          while (1)
          {
            uint64_t v163 = *v2;
            uint64_t v164 = *(void *)&a1[v163];
            unint64_t v165 = v164 + 1;
            if (v164 == -1 || v165 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v166 = *(char *)(*(void *)&a1[*v5] + v164);
            *(void *)&a1[v163] = v165;
            if (v166 < 0)
            {
              BOOL v26 = v162++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x23u:
          if (v16 == 2) {
            goto LABEL_472;
          }
          goto LABEL_556;
        case 0x24u:
          if (v16 == 2) {
            goto LABEL_472;
          }
          goto LABEL_556;
        case 0x25u:
          if (v16 == 2) {
            goto LABEL_472;
          }
          goto LABEL_556;
        case 0x26u:
          if (v16 == 2) {
            goto LABEL_472;
          }
          goto LABEL_556;
        case 0x27u:
          if (v16 == 2) {
            goto LABEL_472;
          }
          goto LABEL_556;
        case 0x28u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v167 = 0;
          while (1)
          {
            uint64_t v168 = *v2;
            uint64_t v169 = *(void *)&a1[v168];
            unint64_t v170 = v169 + 1;
            if (v169 == -1 || v170 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v171 = *(char *)(*(void *)&a1[*v5] + v169);
            *(void *)&a1[v168] = v170;
            if (v171 < 0)
            {
              BOOL v26 = v167++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x29u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v172 = 0;
          while (1)
          {
            uint64_t v173 = *v2;
            uint64_t v174 = *(void *)&a1[v173];
            unint64_t v175 = v174 + 1;
            if (v174 == -1 || v175 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v176 = *(char *)(*(void *)&a1[*v5] + v174);
            *(void *)&a1[v173] = v175;
            if (v176 < 0)
            {
              BOOL v26 = v172++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x2Au:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v177 = 0;
          while (1)
          {
            uint64_t v178 = *v2;
            uint64_t v179 = *(void *)&a1[v178];
            unint64_t v180 = v179 + 1;
            if (v179 == -1 || v180 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v181 = *(char *)(*(void *)&a1[*v5] + v179);
            *(void *)&a1[v178] = v180;
            if (v181 < 0)
            {
              BOOL v26 = v177++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x2Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v182 = 0;
          while (1)
          {
            uint64_t v183 = *v2;
            uint64_t v184 = *(void *)&a1[v183];
            unint64_t v185 = v184 + 1;
            if (v184 == -1 || v185 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v186 = *(char *)(*(void *)&a1[*v5] + v184);
            *(void *)&a1[v183] = v185;
            if (v186 < 0)
            {
              BOOL v26 = v182++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x2Cu:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v187 = 0;
          while (1)
          {
            uint64_t v188 = *v2;
            uint64_t v189 = *(void *)&a1[v188];
            unint64_t v190 = v189 + 1;
            if (v189 == -1 || v190 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v191 = *(char *)(*(void *)&a1[*v5] + v189);
            *(void *)&a1[v188] = v190;
            if (v191 < 0)
            {
              BOOL v26 = v187++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x2Du:
          if (v16 == 2) {
            goto LABEL_472;
          }
          goto LABEL_556;
        case 0x2Eu:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v192 = 0;
          while (1)
          {
            uint64_t v193 = *v2;
            uint64_t v194 = *(void *)&a1[v193];
            unint64_t v195 = v194 + 1;
            if (v194 == -1 || v195 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v196 = *(char *)(*(void *)&a1[*v5] + v194);
            *(void *)&a1[v193] = v195;
            if (v196 < 0)
            {
              BOOL v26 = v192++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x2Fu:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v197 = 0;
          while (1)
          {
            uint64_t v198 = *v2;
            uint64_t v199 = *(void *)&a1[v198];
            unint64_t v200 = v199 + 1;
            if (v199 == -1 || v200 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v201 = *(char *)(*(void *)&a1[*v5] + v199);
            *(void *)&a1[v198] = v200;
            if (v201 < 0)
            {
              BOOL v26 = v197++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x30u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v202 = 0;
          while (1)
          {
            uint64_t v203 = *v2;
            uint64_t v204 = *(void *)&a1[v203];
            unint64_t v205 = v204 + 1;
            if (v204 == -1 || v205 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v206 = *(char *)(*(void *)&a1[*v5] + v204);
            *(void *)&a1[v203] = v205;
            if (v206 < 0)
            {
              BOOL v26 = v202++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x31u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v207 = 0;
          while (1)
          {
            uint64_t v208 = *v2;
            uint64_t v209 = *(void *)&a1[v208];
            unint64_t v210 = v209 + 1;
            if (v209 == -1 || v210 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v211 = *(char *)(*(void *)&a1[*v5] + v209);
            *(void *)&a1[v208] = v210;
            if (v211 < 0)
            {
              BOOL v26 = v207++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x32u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v212 = 0;
          while (1)
          {
            uint64_t v213 = *v2;
            uint64_t v214 = *(void *)&a1[v213];
            unint64_t v215 = v214 + 1;
            if (v214 == -1 || v215 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v216 = *(char *)(*(void *)&a1[*v5] + v214);
            *(void *)&a1[v213] = v215;
            if (v216 < 0)
            {
              BOOL v26 = v212++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x33u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v217 = 0;
          while (1)
          {
            uint64_t v218 = *v2;
            uint64_t v219 = *(void *)&a1[v218];
            unint64_t v220 = v219 + 1;
            if (v219 == -1 || v220 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v221 = *(char *)(*(void *)&a1[*v5] + v219);
            *(void *)&a1[v218] = v220;
            if (v221 < 0)
            {
              BOOL v26 = v217++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x34u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v222 = 0;
          while (1)
          {
            uint64_t v223 = *v2;
            uint64_t v224 = *(void *)&a1[v223];
            unint64_t v225 = v224 + 1;
            if (v224 == -1 || v225 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v226 = *(char *)(*(void *)&a1[*v5] + v224);
            *(void *)&a1[v223] = v225;
            if (v226 < 0)
            {
              BOOL v26 = v222++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x35u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v227 = 0;
          while (1)
          {
            uint64_t v228 = *v2;
            uint64_t v229 = *(void *)&a1[v228];
            unint64_t v230 = v229 + 1;
            if (v229 == -1 || v230 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v231 = *(char *)(*(void *)&a1[*v5] + v229);
            *(void *)&a1[v228] = v230;
            if (v231 < 0)
            {
              BOOL v26 = v227++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x36u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v232 = 0;
          while (1)
          {
            uint64_t v233 = *v2;
            uint64_t v234 = *(void *)&a1[v233];
            unint64_t v235 = v234 + 1;
            if (v234 == -1 || v235 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v236 = *(char *)(*(void *)&a1[*v5] + v234);
            *(void *)&a1[v233] = v235;
            if (v236 < 0)
            {
              BOOL v26 = v232++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x37u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v237 = 0;
          while (1)
          {
            uint64_t v238 = *v2;
            uint64_t v239 = *(void *)&a1[v238];
            unint64_t v240 = v239 + 1;
            if (v239 == -1 || v240 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v241 = *(char *)(*(void *)&a1[*v5] + v239);
            *(void *)&a1[v238] = v240;
            if (v241 < 0)
            {
              BOOL v26 = v237++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x38u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v242 = 0;
          while (1)
          {
            uint64_t v243 = *v2;
            uint64_t v244 = *(void *)&a1[v243];
            unint64_t v245 = v244 + 1;
            if (v244 == -1 || v245 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v246 = *(char *)(*(void *)&a1[*v5] + v244);
            *(void *)&a1[v243] = v245;
            if (v246 < 0)
            {
              BOOL v26 = v242++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x39u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v247 = 0;
          while (1)
          {
            uint64_t v248 = *v2;
            uint64_t v249 = *(void *)&a1[v248];
            unint64_t v250 = v249 + 1;
            if (v249 == -1 || v250 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v251 = *(char *)(*(void *)&a1[*v5] + v249);
            *(void *)&a1[v248] = v250;
            if (v251 < 0)
            {
              BOOL v26 = v247++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x3Au:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v252 = 0;
          while (1)
          {
            uint64_t v253 = *v2;
            uint64_t v254 = *(void *)&a1[v253];
            unint64_t v255 = v254 + 1;
            if (v254 == -1 || v255 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v256 = *(char *)(*(void *)&a1[*v5] + v254);
            *(void *)&a1[v253] = v255;
            if (v256 < 0)
            {
              BOOL v26 = v252++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x3Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v257 = 0;
          while (1)
          {
            uint64_t v258 = *v2;
            uint64_t v259 = *(void *)&a1[v258];
            unint64_t v260 = v259 + 1;
            if (v259 == -1 || v260 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v261 = *(char *)(*(void *)&a1[*v5] + v259);
            *(void *)&a1[v258] = v260;
            if (v261 < 0)
            {
              BOOL v26 = v257++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x3Cu:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v262 = 0;
          while (1)
          {
            uint64_t v263 = *v2;
            uint64_t v264 = *(void *)&a1[v263];
            unint64_t v265 = v264 + 1;
            if (v264 == -1 || v265 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v266 = *(char *)(*(void *)&a1[*v5] + v264);
            *(void *)&a1[v263] = v265;
            if (v266 < 0)
            {
              BOOL v26 = v262++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x3Du:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v267 = 0;
          while (1)
          {
            uint64_t v268 = *v2;
            uint64_t v269 = *(void *)&a1[v268];
            unint64_t v270 = v269 + 1;
            if (v269 == -1 || v270 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v271 = *(char *)(*(void *)&a1[*v5] + v269);
            *(void *)&a1[v268] = v270;
            if (v271 < 0)
            {
              BOOL v26 = v267++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x3Eu:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v272 = 0;
          while (1)
          {
            uint64_t v273 = *v2;
            uint64_t v274 = *(void *)&a1[v273];
            unint64_t v275 = v274 + 1;
            if (v274 == -1 || v275 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v276 = *(char *)(*(void *)&a1[*v5] + v274);
            *(void *)&a1[v273] = v275;
            if (v276 < 0)
            {
              BOOL v26 = v272++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x3Fu:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v277 = 0;
          while (1)
          {
            uint64_t v278 = *v2;
            uint64_t v279 = *(void *)&a1[v278];
            unint64_t v280 = v279 + 1;
            if (v279 == -1 || v280 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v281 = *(char *)(*(void *)&a1[*v5] + v279);
            *(void *)&a1[v278] = v280;
            if (v281 < 0)
            {
              BOOL v26 = v277++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x40u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v282 = 0;
          while (1)
          {
            uint64_t v283 = *v2;
            uint64_t v284 = *(void *)&a1[v283];
            unint64_t v285 = v284 + 1;
            if (v284 == -1 || v285 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v286 = *(char *)(*(void *)&a1[*v5] + v284);
            *(void *)&a1[v283] = v285;
            if (v286 < 0)
            {
              BOOL v26 = v282++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x41u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v287 = 0;
          while (1)
          {
            uint64_t v288 = *v2;
            uint64_t v289 = *(void *)&a1[v288];
            unint64_t v290 = v289 + 1;
            if (v289 == -1 || v290 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v291 = *(char *)(*(void *)&a1[*v5] + v289);
            *(void *)&a1[v288] = v290;
            if (v291 < 0)
            {
              BOOL v26 = v287++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x42u:
          if (v16 == 2) {
            goto LABEL_472;
          }
          goto LABEL_556;
        case 0x43u:
          if (v16 == 2) {
            goto LABEL_472;
          }
          goto LABEL_556;
        case 0x44u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v292 = 0;
          while (1)
          {
            uint64_t v293 = *v2;
            uint64_t v294 = *(void *)&a1[v293];
            unint64_t v295 = v294 + 1;
            if (v294 == -1 || v295 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v296 = *(char *)(*(void *)&a1[*v5] + v294);
            *(void *)&a1[v293] = v295;
            if (v296 < 0)
            {
              BOOL v26 = v292++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x45u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v297 = 0;
          while (1)
          {
            uint64_t v298 = *v2;
            uint64_t v299 = *(void *)&a1[v298];
            unint64_t v300 = v299 + 1;
            if (v299 == -1 || v300 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v301 = *(char *)(*(void *)&a1[*v5] + v299);
            *(void *)&a1[v298] = v300;
            if (v301 < 0)
            {
              BOOL v26 = v297++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x46u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v302 = 0;
          while (1)
          {
            uint64_t v303 = *v2;
            uint64_t v304 = *(void *)&a1[v303];
            unint64_t v305 = v304 + 1;
            if (v304 == -1 || v305 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v306 = *(char *)(*(void *)&a1[*v5] + v304);
            *(void *)&a1[v303] = v305;
            if (v306 < 0)
            {
              BOOL v26 = v302++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x47u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v307 = 0;
          while (1)
          {
            uint64_t v308 = *v2;
            uint64_t v309 = *(void *)&a1[v308];
            unint64_t v310 = v309 + 1;
            if (v309 == -1 || v310 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v311 = *(char *)(*(void *)&a1[*v5] + v309);
            *(void *)&a1[v308] = v310;
            if (v311 < 0)
            {
              BOOL v26 = v307++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x48u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v312 = 0;
          while (1)
          {
            uint64_t v313 = *v2;
            uint64_t v314 = *(void *)&a1[v313];
            unint64_t v315 = v314 + 1;
            if (v314 == -1 || v315 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v316 = *(char *)(*(void *)&a1[*v5] + v314);
            *(void *)&a1[v313] = v315;
            if (v316 < 0)
            {
              BOOL v26 = v312++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x49u:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v317 = 0;
          while (1)
          {
            uint64_t v318 = *v2;
            uint64_t v319 = *(void *)&a1[v318];
            unint64_t v320 = v319 + 1;
            if (v319 == -1 || v320 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v321 = *(char *)(*(void *)&a1[*v5] + v319);
            *(void *)&a1[v318] = v320;
            if (v321 < 0)
            {
              BOOL v26 = v317++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x4Au:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v322 = 0;
          while (1)
          {
            uint64_t v323 = *v2;
            uint64_t v324 = *(void *)&a1[v323];
            unint64_t v325 = v324 + 1;
            if (v324 == -1 || v325 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v326 = *(char *)(*(void *)&a1[*v5] + v324);
            *(void *)&a1[v323] = v325;
            if (v326 < 0)
            {
              BOOL v26 = v322++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x4Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v327 = 0;
          while (1)
          {
            uint64_t v328 = *v2;
            uint64_t v329 = *(void *)&a1[v328];
            unint64_t v330 = v329 + 1;
            if (v329 == -1 || v330 > *(void *)&a1[*v3]) {
              goto LABEL_546;
            }
            int v331 = *(char *)(*(void *)&a1[*v5] + v329);
            *(void *)&a1[v328] = v330;
            if (v331 < 0)
            {
              BOOL v26 = v327++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_548;
          }
        case 0x4Cu:
          if ((v8 & 7) != 0) {
            goto LABEL_556;
          }
          unsigned int v332 = 0;
          break;
        case 0x4Du:
          if (v16 != 2 || !PBReaderPlaceMark() || (GEOLocationIsValid(a1) & 1) == 0) {
            goto LABEL_556;
          }
          PBReaderRecallMark();
          continue;
        default:
LABEL_472:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_556:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v333 = *v2;
        uint64_t v334 = *(void *)&a1[v333];
        unint64_t v335 = v334 + 1;
        if (v334 == -1 || v335 > *(void *)&a1[*v3]) {
          break;
        }
        int v336 = *(char *)(*(void *)&a1[*v5] + v334);
        *(void *)&a1[v333] = v335;
        if (v336 < 0)
        {
          BOOL v26 = v332++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_548;
      }
LABEL_546:
      uint64_t v14 = *v4;
LABEL_547:
      a1[v14] = 1;
LABEL_548:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v337 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v337;
}

void sub_18966860C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOCellConnectionQualityIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 144));
  if ((*(_WORD *)(a1 + 368) & 0x2FF8) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 368) & 0x1000) == 0) {
    return 0;
  }
  id v3 = *(os_unfair_lock_s **)(a1 + 104);

  return GEOLocationIsDirty(v3);
}

os_unfair_lock_s *GEOCellConnectionQualityIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    int v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOCellConnectionQualityIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 36);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOCellConnectionQualityClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasLocation]
    && ([a1 location],
        id v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    unsigned int v7 = [a1 location];
    unint64_t v8 = (_DWORD *)[v7 copy];

    GEOLocationClearSensitiveFields(v8);
    [a1 setLocation:v8];
  }
  else
  {
    unint64_t v8 = [a1 location];
    [v8 clearSensitiveFields:a2];
  }
}

void *GEOCellConnectionQualityHasSensitiveFields(void *result)
{
  if (result)
  {
    int v1 = [result location];
    uint64_t HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_18966A3B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOGetGEOBatchSpatialLookupLog()
{
  if (qword_1E9117EC8 != -1) {
    dispatch_once(&qword_1E9117EC8, &__block_literal_global_45);
  }
  os_log_t v0 = (void *)_MergedGlobals_433;

  return v0;
}

void __GEOGetGEOBatchSpatialLookupLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOBatchSpatialLookup");
  int v1 = (void *)_MergedGlobals_433;
  _MergedGlobals_433 = (uint64_t)v0;
}

id GEOGetGEOPublisherViewLookupLog()
{
  if (qword_1E9117ED8 != -1) {
    dispatch_once(&qword_1E9117ED8, &__block_literal_global_8);
  }
  os_log_t v0 = (void *)qword_1E9117ED0;

  return v0;
}

void __GEOGetGEOPublisherViewLookupLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOPublisherViewLookup");
  int v1 = (void *)qword_1E9117ED0;
  qword_1E9117ED0 = (uint64_t)v0;
}

void __GEOGetGEOGuideHomeViewLookupLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOGuideHomeViewLookup");
  int v1 = (void *)qword_1E9117EE0;
  qword_1E9117EE0 = (uint64_t)v0;
}

id GEOGetGEOCitySelectorViewLookupLog()
{
  if (qword_1E9117EF8 != -1) {
    dispatch_once(&qword_1E9117EF8, &__block_literal_global_17);
  }
  os_log_t v0 = (void *)qword_1E9117EF0;

  return v0;
}

void __GEOGetGEOCitySelectorViewLookupLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOCitySelectorViewLookup");
  int v1 = (void *)qword_1E9117EF0;
  qword_1E9117EF0 = (uint64_t)v0;
}

uint64_t GEOTerritoryLookupIsEnabled()
{
  return _dispatcherSupportsService(6);
}

void sub_18966F86C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189672894(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 216), 8);
  _Unwind_Resume(a1);
}

void sub_18967359C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

_GEOPlaceSearchCompletionItem *GEOCompletionItemFromSerializedAutocompleteEntry(void *a1)
{
  id v1 = a1;
  BOOL v2 = [[GEOPDAutocompleteEntry alloc] initWithData:v1];

  if (v2)
  {
    id v3 = [_GEOPlaceSearchCompletionItem alloc];
    int v4 = +[GEOMapService sharedService];
    id v5 = [v4 defaultTraits];
    char v6 = [(_GEOPlaceSearchCompletionItem *)v3 initWithEntry:v2 traits:v5 entryListIndex:0 entryIndex:0 mapItems:MEMORY[0x1E4F1CBF0] collections:MEMORY[0x1E4F1CBF0] publishers:MEMORY[0x1E4F1CBF0]];
  }
  else
  {
    char v6 = 0;
  }

  return v6;
}

void sub_189676FB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
}

void sub_18967BD98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __GEOGetTerritoryLookupLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "TerritoryLookup");
  id v1 = (void *)qword_1E9117F00;
  qword_1E9117F00 = (uint64_t)v0;
}

uint64_t GEORouteHypothesizerDelayerCompare(void *a1, void *a2)
{
  if (a1 == a2) {
    return 0;
  }
  if (!a1) {
    return -1;
  }
  if (!a2) {
    return 1;
  }
  id v3 = a1;
  id v4 = a2;
  id v5 = [v3 plannedDestination];
  char v6 = [v5 arrivalDate];
  unsigned int v7 = [v4 plannedDestination];
  unint64_t v8 = [v7 arrivalDate];
  uint64_t v9 = [v6 compare:v8];

  if ((unint64_t)(v9 + 1) >= 3)
  {
    id v11 = objc_alloc(MEMORY[0x1E4F1CA00]);
    char v12 = NSString;
    int8x16_t v13 = [v3 plannedDestination];
    uint64_t v14 = [v13 arrivalDate];
    int v15 = [v4 plannedDestination];
    int v16 = [v15 arrivalDate];
    uint64_t v17 = [v12 stringWithFormat:@"Comparing %@ to %@ returned an invalid NSComparisonResult (%ld)", v14, v16, v9];
    id v18 = (id)[v11 initWithName:@"Unexpected comparison result" reason:v17 userInfo:0];

    objc_exception_throw(v18);
  }

  return v9;
}

void sub_1896808A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189680A8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189680DC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189680EB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189680FAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896810C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18968187C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,void *a21)
{
  _Block_object_dispose((const void *)(v24 - 240), 8);
  _Block_object_dispose((const void *)(v24 - 192), 8);

  _Unwind_Resume(a1);
}

void sub_189681B08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_189681C54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189681D40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189681E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  _Unwind_Resume(a1);
}

void sub_189682054(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189682320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id a27)
{
  _Block_object_dispose(&a22, 8);
  _Unwind_Resume(a1);
}

void sub_189682594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189682924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_189682C44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18968426C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189684480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_18968462C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896846A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189684AA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189684BAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189684C30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189684CD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896850A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

id GEOGetGEORouteBuilderLog(void)
{
  if (qword_1EB29F7F0 != -1) {
    dispatch_once(&qword_1EB29F7F0, &__block_literal_global_48);
  }
  os_log_t v0 = (void *)_MergedGlobals_209;

  return v0;
}

void sub_1896855AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, void *a17, uint64_t a18, void *a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_189685880(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189685A54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189685D3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189685FCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL24GEOGetGEORouteBuilderLogv_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEORouteBuilder");
  id v1 = (void *)_MergedGlobals_209;
  _MergedGlobals_209 = (uint64_t)v0;
}

void sub_189686308(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_189686D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va2, a9);
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v15 = va_arg(va2, void);
  uint64_t v17 = va_arg(va2, void);
  uint64_t v18 = va_arg(va2, void);
  uint64_t v19 = va_arg(va2, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va2, 8);
  _Unwind_Resume(a1);
}

void sub_18968811C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896893B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id GEOGetProactiveTileDownloadLog()
{
  if (qword_1EB29F818 != -1) {
    dispatch_once(&qword_1EB29F818, &__block_literal_global_49);
  }
  os_log_t v0 = (void *)_MergedGlobals_211;

  return v0;
}

void __GEOGetProactiveTileDownloadLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "ProactiveTileDownload");
  id v1 = (void *)_MergedGlobals_211;
  _MergedGlobals_211 = (uint64_t)v0;
}

void sub_189689950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18968A39C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

void sub_18968CAA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionCyclingStepReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 112)), (uint16x4_t)0xFFF6FFF8FFF7FFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 112) >> 7) & 1)+ ((*(_WORD *)(a1 + 112) >> 6) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        char v83 = (v16 == 0) | v15;
        uint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v82 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_142;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_142:
      if (v15)
      {
        char v76 = 1;
        goto LABEL_156;
      }
      if (v16)
      {
        while (1)
        {
          int v78 = *v16++;
          __int16 v77 = 512;
          switch(v78)
          {
            case 0:
              goto LABEL_157;
            case 6:
              goto LABEL_151;
            case 9:
              __int16 v77 = 32;
              goto LABEL_151;
            case 10:
              __int16 v77 = 256;
              goto LABEL_151;
            case 11:
              __int16 v77 = 1024;
              goto LABEL_151;
            case 13:
              __int16 v77 = 128;
              goto LABEL_151;
            case 15:
              __int16 v77 = 64;
LABEL_151:
              *(_WORD *)(a1 + 112) |= v77;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_157;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v83 & 1) == 0)
    {
      unsigned int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_110;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 112) |= 4u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_113;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_115;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_113:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_115:
        uint64_t v74 = 100;
        goto LABEL_132;
      case 6:
        if (!v31) {
          goto LABEL_110;
        }
        if ((*(_WORD *)(a1 + 112) & 0x200) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          unint64_t v45 = *(void **)(a1 + 64);
          *(void *)(a1 + 64) = v44;
          goto LABEL_109;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_155;
        }
        __int16 v75 = *(_WORD *)(a1 + 112) << 6;
        goto LABEL_139;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_110;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 112) |= 8u;
        while (2)
        {
          uint64_t v49 = *v17;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v19) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v27 = v47++ >= 9;
              if (v27)
              {
                LODWORD(v48) = 0;
                goto LABEL_119;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v48) = 0;
        }
LABEL_119:
        *(_DWORD *)(a1 + 104) = -(v48 & 1) ^ ((int)v48 >> 1);
        goto LABEL_141;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_110;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 112) |= 2u;
        while (2)
        {
          uint64_t v55 = *v17;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v19) + v56);
            *(void *)(v3 + v55) = v57;
            v38 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v27 = v54++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_123;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_123:
        uint64_t v74 = 96;
        goto LABEL_132;
      case 9:
        if (!v31 || (*(_WORD *)(a1 + 112) & 0x20) != 0) {
          goto LABEL_110;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_155;
        }
        -[GEOCompanionCyclingStep _reserveJunctionElements:](a1, 1uLL);
        if ((GEOJunctionElementReadAllFrom(*(void *)(a1 + 16) + 16 * *(void *)(a1 + 24), v3) & 1) == 0) {
          goto LABEL_155;
        }
        PBReaderRecallMark();
        ++*(void *)(a1 + 24);
        goto LABEL_140;
      case 10:
        if (!v31 || (*(_WORD *)(a1 + 112) & 0x100) != 0) {
          goto LABEL_110;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_155;
        }
        int v81 = objc_alloc_init(GEONameInfoList);
        if (!GEONameInfoListReadAllFrom(v81, (void *)v3, v9 & 1)) {
          goto LABEL_154;
        }
        PBReaderRecallMark();
        -[GEOCompanionCyclingStep _addNoFlagsManeuverName:](a1, v81);
        goto LABEL_81;
      case 11:
        if (!v31 || (*(_WORD *)(a1 + 112) & 0x400) != 0) {
          goto LABEL_110;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_155;
        }
        int v81 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v81, (void *)v3, v9 & 1)) {
          goto LABEL_154;
        }
        PBReaderRecallMark();
        -[GEOCompanionCyclingStep _addNoFlagsSignpost:](a1, v81);
LABEL_81:

        goto LABEL_140;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_110;
        }
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v61 = 0;
        *(_WORD *)(a1 + 112) |= 0x10u;
        while (2)
        {
          uint64_t v62 = *v17;
          uint64_t v63 = *(void *)(v3 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(v3 + *v19) + v63);
            *(void *)(v3 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              BOOL v27 = v60++ >= 9;
              if (v27)
              {
                uint64_t v61 = 0;
                goto LABEL_127;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v61 = 0;
        }
LABEL_127:
        *(unsigned char *)(a1 + 108) = v61 != 0;
        goto LABEL_141;
      case 13:
        if (!v31) {
          goto LABEL_110;
        }
        if ((*(_WORD *)(a1 + 112) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_155;
          }
          __int16 v75 = *(_WORD *)(a1 + 112) << 8;
          goto LABEL_139;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_155;
        }
        int v81 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v81, (void *)v3, v9 & 1)) {
          goto LABEL_154;
        }
        PBReaderRecallMark();
        uint64_t v66 = 48;
        goto LABEL_108;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_110;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 112) |= 1u;
        while (2)
        {
          uint64_t v69 = *v17;
          uint64_t v70 = *(void *)(v3 + v69);
          unint64_t v71 = v70 + 1;
          if (v70 == -1 || v71 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(v3 + *v19) + v70);
            *(void *)(v3 + v69) = v71;
            v38 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              BOOL v27 = v68++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_131;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_131:
        uint64_t v74 = 92;
LABEL_132:
        *(_DWORD *)(a1 + v74) = v38;
        goto LABEL_141;
      case 15:
        if (!v31)
        {
LABEL_110:
          char v73 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v82;
          if ((v73 & 1) == 0)
          {
LABEL_153:
            char v76 = 0;
            goto LABEL_156;
          }
LABEL_141:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_142;
          }
          continue;
        }
        if ((*(_WORD *)(a1 + 112) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_155;
          }
          __int16 v75 = *(_WORD *)(a1 + 112) << 9;
LABEL_139:
          v7 += v75 >> 15;
LABEL_140:
          char v15 = v82;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_141;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_155;
        }
        int v81 = objc_alloc_init(GEOPBTransitArtwork);
        if (GEOPBTransitArtworkReadAllFrom((uint64_t)v81, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v66 = 40;
LABEL_108:
          unint64_t v45 = *(void **)(a1 + v66);
          *(void *)(a1 + v66) = v81;
LABEL_109:

          --v7;
          goto LABEL_140;
        }
LABEL_154:

LABEL_155:
        char v76 = 0;
        char v15 = v82;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_156:
        *(_WORD *)(a1 + 112) |= 0x200u;
        *(_WORD *)(a1 + 112) |= 0x20u;
        *(_WORD *)(a1 + 112) |= 0x100u;
        *(_WORD *)(a1 + 112) |= 0x400u;
        *(_WORD *)(a1 + 112) |= 0x80u;
        *(_WORD *)(a1 + 112) |= 0x40u;
        if (v76)
        {
LABEL_157:
          uint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_158;
          }
        }
        else
        {
          uint64_t v3 = 0;
          if (v15)
          {
LABEL_158:
            uint64_t v79 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v43 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v82;
        if (!v43) {
          goto LABEL_153;
        }
        goto LABEL_141;
    }
  }
}

void sub_18968D950(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18968DE1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18968E1E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18968E61C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18968E930(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896903F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionCyclingStepCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v2 = a1[7];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v4);
  }

  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = a1[9];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * v11++), "readAll:", 1, (void)v13);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v9);
  }

  [a1[6] readAll:1];
  return [a1[5] readAll:1];
}

uint64_t GEOCompanionCyclingStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOCompanionCyclingStepReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOCompanionCyclingStepReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOCompanionCyclingStepReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOCompanionCyclingStepReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOCompanionCyclingStepCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_18969074C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionCyclingStepReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOCompanionCyclingStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896907B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionCyclingStepIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_81;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_79;
          }
        case 6u:
          if (v15 == 2) {
            goto LABEL_32;
          }
          goto LABEL_81;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_81;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_79;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_81;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_79;
          }
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOJunctionElementIsValid(a1)) {
            goto LABEL_81;
          }
          goto LABEL_78;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoListIsValid(a1)) {
            goto LABEL_81;
          }
          goto LABEL_78;
        case 0xBu:
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1)) {
            goto LABEL_81;
          }
          goto LABEL_78;
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_81;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_79;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_81;
          }
          unsigned int v38 = 0;
          break;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_81;
          }
LABEL_78:
          PBReaderRecallMark();
          continue;
        default:
LABEL_32:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_81:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v39 = *v2;
        uint64_t v40 = *(void *)&a1[v39];
        unint64_t v41 = v40 + 1;
        if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
          break;
        }
        int v42 = *(char *)(*(void *)&a1[*v5] + v40);
        *(void *)&a1[v39] = v41;
        if (v42 < 0)
        {
          BOOL v22 = v38++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_79;
      }
LABEL_74:
      a1[*v4] = 1;
LABEL_79:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

void sub_189691004(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionCyclingStepIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  __int16 v2 = *(_WORD *)(a1 + 112);
  if ((v2 & 0xF20) != 0) {
    return 1;
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEONameInfoIsDirty(*(void *)(a1 + 48))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 112);
  }
  if ((v2 & 0x40) == 0) {
    goto LABEL_10;
  }
  if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
    return 1;
  }
  __int16 v2 = *(_WORD *)(a1 + 112);
LABEL_10:
  if ((v2 & 0x400) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 72);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEONameInfoIsDirty(*(void *)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_22;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_22:

  return v3;
}

os_unfair_lock_s *GEOCompanionCyclingStepIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOCompanionCyclingStepIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1896918D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896931F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionDriveStepReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (HIBYTE(*(unsigned __int16 *)(a1 + 128)) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 128)), (uint16x4_t)0xFFF4FFF6FFF5FFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 128) >> 9) & 1)+ ((*(_WORD *)(a1 + 128) >> 6) & 1)+ ((*(_WORD *)(a1 + 128) >> 7) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 5;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          long long v16 = 0;
        }
        else {
          long long v16 = a3;
        }
        char v83 = (v16 == 0) | v15;
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v82 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_156;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_156:
      if (v15)
      {
        char v76 = 1;
        goto LABEL_171;
      }
      if (v16)
      {
        while (1)
        {
          int v77 = *v16++;
          __int16 v78 = 2048;
          switch(v77)
          {
            case 0:
              goto LABEL_172;
            case 6:
              goto LABEL_167;
            case 9:
              __int16 v78 = 32;
              goto LABEL_167;
            case 10:
              __int16 v78 = 1024;
              goto LABEL_167;
            case 11:
              __int16 v78 = 4096;
              goto LABEL_167;
            case 13:
              __int16 v78 = 512;
              goto LABEL_167;
            case 15:
              __int16 v78 = 64;
              goto LABEL_167;
            case 16:
              __int16 v78 = 128;
              goto LABEL_167;
            case 17:
              __int16 v78 = 256;
LABEL_167:
              *(_WORD *)(a1 + 128) |= v78;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_172;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v83 & 1) == 0)
    {
      int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_120;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 128) |= 4u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_123;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_125;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_123:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_125:
        uint64_t v74 = 116;
        goto LABEL_142;
      case 6:
        if (!v31) {
          goto LABEL_120;
        }
        if ((*(_WORD *)(a1 + 128) & 0x800) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          unint64_t v45 = *(void **)(a1 + 80);
          *(void *)(a1 + 80) = v44;
          goto LABEL_119;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_170;
        }
        __int16 v75 = 16 * *(_WORD *)(a1 + 128);
        goto LABEL_153;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_120;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 128) |= 8u;
        while (2)
        {
          uint64_t v49 = *v17;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v19) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v27 = v47++ >= 9;
              if (v27)
              {
                LODWORD(v48) = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v48) = 0;
        }
LABEL_129:
        *(_DWORD *)(a1 + 120) = -(v48 & 1) ^ ((int)v48 >> 1);
        goto LABEL_155;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_120;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 128) |= 2u;
        while (2)
        {
          uint64_t v55 = *v17;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v19) + v56);
            *(void *)(v3 + v55) = v57;
            v38 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v27 = v54++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_133:
        uint64_t v74 = 112;
        goto LABEL_142;
      case 9:
        if (!v31 || (*(_WORD *)(a1 + 128) & 0x20) != 0) {
          goto LABEL_120;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_170;
        }
        -[GEOCompanionDriveStep _reserveJunctionElements:](a1, 1uLL);
        if ((GEOJunctionElementReadAllFrom(*(void *)(a1 + 16) + 16 * *(void *)(a1 + 24), v3) & 1) == 0) {
          goto LABEL_170;
        }
        PBReaderRecallMark();
        ++*(void *)(a1 + 24);
        goto LABEL_154;
      case 10:
        if (!v31 || (*(_WORD *)(a1 + 128) & 0x400) != 0) {
          goto LABEL_120;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_170;
        }
        int v81 = objc_alloc_init(GEONameInfoList);
        if (!GEONameInfoListReadAllFrom(v81, (void *)v3, v9 & 1)) {
          goto LABEL_169;
        }
        PBReaderRecallMark();
        -[GEOCompanionDriveStep _addNoFlagsManeuverName:](a1, v81);
        goto LABEL_81;
      case 11:
        if (!v31 || (*(_WORD *)(a1 + 128) & 0x1000) != 0) {
          goto LABEL_120;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_170;
        }
        int v81 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v81, (void *)v3, v9 & 1)) {
          goto LABEL_169;
        }
        PBReaderRecallMark();
        -[GEOCompanionDriveStep _addNoFlagsSignpost:](a1, v81);
LABEL_81:

        goto LABEL_154;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_120;
        }
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v61 = 0;
        *(_WORD *)(a1 + 128) |= 0x10u;
        while (2)
        {
          uint64_t v62 = *v17;
          uint64_t v63 = *(void *)(v3 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(v3 + *v19) + v63);
            *(void *)(v3 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              BOOL v27 = v60++ >= 9;
              if (v27)
              {
                uint64_t v61 = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v61 = 0;
        }
LABEL_137:
        *(unsigned char *)(a1 + 124) = v61 != 0;
        goto LABEL_155;
      case 13:
        if (!v31) {
          goto LABEL_120;
        }
        if ((*(_WORD *)(a1 + 128) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_170;
          }
          __int16 v75 = *(_WORD *)(a1 + 128) << 6;
          goto LABEL_153;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_170;
        }
        int v81 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v81, (void *)v3, v9 & 1)) {
          goto LABEL_169;
        }
        PBReaderRecallMark();
        uint64_t v66 = 64;
        goto LABEL_118;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_120;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 128) |= 1u;
        while (2)
        {
          uint64_t v69 = *v17;
          uint64_t v70 = *(void *)(v3 + v69);
          unint64_t v71 = v70 + 1;
          if (v70 == -1 || v71 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(v3 + *v19) + v70);
            *(void *)(v3 + v69) = v71;
            v38 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              BOOL v27 = v68++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_141:
        uint64_t v74 = 108;
LABEL_142:
        *(_DWORD *)(a1 + v74) = v38;
        goto LABEL_155;
      case 15:
        if (!v31) {
          goto LABEL_120;
        }
        if ((*(_WORD *)(a1 + 128) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_170;
          }
          __int16 v75 = *(_WORD *)(a1 + 128) << 9;
          goto LABEL_153;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_170;
        }
        int v81 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v81, (void *)v3, v9 & 1)) {
          goto LABEL_169;
        }
        PBReaderRecallMark();
        uint64_t v66 = 40;
        goto LABEL_118;
      case 16:
        if (!v31) {
          goto LABEL_120;
        }
        if ((*(_WORD *)(a1 + 128) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_170;
          }
          __int16 v75 = *(_WORD *)(a1 + 128) << 8;
          goto LABEL_153;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_170;
        }
        int v81 = objc_alloc_init(GEOEVChargeInfo);
        if (!GEOEVChargeInfoReadAllFrom((uint64_t)v81, (void *)v3)) {
          goto LABEL_169;
        }
        PBReaderRecallMark();
        uint64_t v66 = 48;
        goto LABEL_118;
      case 17:
        if (!v31)
        {
LABEL_120:
          char v73 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v82;
          if ((v73 & 1) == 0)
          {
LABEL_168:
            char v76 = 0;
            goto LABEL_171;
          }
LABEL_155:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_156;
          }
          continue;
        }
        if ((*(_WORD *)(a1 + 128) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_170;
          }
          __int16 v75 = *(_WORD *)(a1 + 128) << 7;
LABEL_153:
          v7 += v75 >> 15;
LABEL_154:
          char v15 = v82;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_155;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_170;
        }
        int v81 = objc_alloc_init(GEOEVStepInfo);
        if (GEOEVStepInfoReadAllFrom((uint64_t)v81, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v66 = 56;
LABEL_118:
          unint64_t v45 = *(void **)(a1 + v66);
          *(void *)(a1 + v66) = v81;
LABEL_119:

          --v7;
          goto LABEL_154;
        }
LABEL_169:

LABEL_170:
        char v76 = 0;
        char v15 = v82;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_171:
        *(_WORD *)(a1 + 128) |= 0x800u;
        *(_WORD *)(a1 + 128) |= 0x20u;
        *(_WORD *)(a1 + 128) |= 0x400u;
        *(_WORD *)(a1 + 128) |= 0x1000u;
        *(_WORD *)(a1 + 128) |= 0x200u;
        *(_WORD *)(a1 + 128) |= 0x40u;
        *(_WORD *)(a1 + 128) |= 0x80u;
        *(_WORD *)(a1 + 128) |= 0x100u;
        if (v76)
        {
LABEL_172:
          uint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_173;
          }
        }
        else
        {
          uint64_t v3 = 0;
          if (v15)
          {
LABEL_173:
            uint64_t v79 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v43 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v82;
        if (!v43) {
          goto LABEL_168;
        }
        goto LABEL_155;
    }
  }
}

void sub_189694204(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896946D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189694A94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189694ED0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896951E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189695354(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896954C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896970F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionDriveStepCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v2 = a1[9];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v4);
  }

  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = a1[11];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * v11++), "readAll:", 1, (void)v13);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v9);
  }

  [a1[8] readAll:1];
  [a1[5] readAll:1];
  [a1[6] readAll:1];
  return [a1[7] readAll:1];
}

uint64_t GEOCompanionDriveStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOCompanionDriveStepReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOCompanionDriveStepReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOCompanionDriveStepReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOCompanionDriveStepReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOCompanionDriveStepCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_189697470(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionDriveStepReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOCompanionDriveStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896974D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionDriveStepIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_89;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 6u:
          if (v15 == 2) {
            goto LABEL_32;
          }
          goto LABEL_89;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_89;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_89;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOJunctionElementIsValid(a1)) {
            goto LABEL_89;
          }
          goto LABEL_86;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoListIsValid(a1)) {
            goto LABEL_89;
          }
          goto LABEL_86;
        case 0xBu:
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1)) {
            goto LABEL_89;
          }
          goto LABEL_86;
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_89;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_89;
          }
          unsigned int v38 = 0;
          break;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_89;
          }
          goto LABEL_86;
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOEVChargeInfoIsValid(a1)) {
            goto LABEL_89;
          }
          goto LABEL_86;
        case 0x11u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOEVStepInfoIsValid(a1)) {
            goto LABEL_89;
          }
LABEL_86:
          PBReaderRecallMark();
          continue;
        default:
LABEL_32:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_89:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v39 = *v2;
        uint64_t v40 = *(void *)&a1[v39];
        unint64_t v41 = v40 + 1;
        if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
          break;
        }
        int v42 = *(char *)(*(void *)&a1[*v5] + v40);
        *(void *)&a1[v39] = v41;
        if (v42 < 0)
        {
          BOOL v22 = v38++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_87;
      }
LABEL_74:
      a1[*v4] = 1;
LABEL_87:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

void sub_189697DC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionDriveStepIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  __int16 v2 = *(_WORD *)(a1 + 128);
  if ((v2 & 0x3C20) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 128) & 0x200) != 0)
  {
    if (GEONameInfoIsDirty(*(void *)(a1 + 64))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 128);
  }
  if ((v2 & 0x40) == 0) {
    goto LABEL_10;
  }
  if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
    return 1;
  }
  __int16 v2 = *(_WORD *)(a1 + 128);
LABEL_10:
  if ((v2 & 0x180) != 0) {
    return 1;
  }
  if ((v2 & 0x1000) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 88);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEONameInfoIsDirty(*(void *)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_23;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_23:

  return v3;
}

os_unfair_lock_s *GEOCompanionDriveStepIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOCompanionDriveStepIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189698710(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18969A2B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionFerryStepReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 84)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFBFFFEFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 2);
        if ((v14 | v8)) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        LODWORD(v16) = v14;
        char v59 = (v15 == 0) | v14;
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_92;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_92:
      if (v16)
      {
        char v53 = 1;
        goto LABEL_104;
      }
      if (v15)
      {
        while (1)
        {
          int v54 = *v15++;
          char v55 = 4;
          switch(v54)
          {
            case 9:
              goto LABEL_99;
            case 10:
              char v55 = 16;
              goto LABEL_99;
            case 11:
              char v55 = 32;
              goto LABEL_99;
            case 12:
              char v55 = 8;
LABEL_99:
              *(unsigned char *)(a1 + 84) |= v55;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_105;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v59 & 1) == 0)
    {
      int v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_77;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 84) |= 2u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_80;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_82;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_80:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_82:
        uint64_t v52 = 80;
        goto LABEL_87;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_77;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 84) |= 1u;
        while (2)
        {
          uint64_t v46 = *v17;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v19) + v47);
            *(void *)(v3 + v46) = v48;
            v38 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              BOOL v27 = v45++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_86:
        uint64_t v52 = 76;
LABEL_87:
        *(_DWORD *)(a1 + v52) = v38;
        goto LABEL_91;
      case 9:
        if (!v31 || (*(unsigned char *)(a1 + 84) & 4) != 0) {
          goto LABEL_77;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_101;
        }
        -[GEOCompanionFerryStep _reserveJunctionElements:](a1, 1uLL);
        if ((GEOJunctionElementReadAllFrom(*(void *)(a1 + 16) + 16 * *(void *)(a1 + 24), v3) & 1) == 0) {
          goto LABEL_101;
        }
        PBReaderRecallMark();
        ++*(void *)(a1 + 24);
        goto LABEL_90;
      case 10:
        if (!v31 || (*(unsigned char *)(a1 + 84) & 0x10) != 0) {
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        int v58 = (int)v16;
        long long v16 = objc_alloc_init(GEONameInfoList);
        if (!GEONameInfoListReadAllFrom(v16, (void *)v3, v9 & 1)) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        -[GEOCompanionFerryStep _addNoFlagsManeuverName:](a1, v16);
        goto LABEL_70;
      case 11:
        if (!v31 || (*(unsigned char *)(a1 + 84) & 0x20) != 0) {
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        int v58 = (int)v16;
        long long v16 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        -[GEOCompanionFerryStep _addNoFlagsSignpost:](a1, v16);
LABEL_70:

        goto LABEL_76;
      case 12:
        if (!v31)
        {
LABEL_77:
          char v51 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v51 & 1) == 0)
          {
LABEL_100:
            char v53 = 0;
            goto LABEL_104;
          }
LABEL_91:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_92;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_101:
            char v53 = 0;
            goto LABEL_103;
          }
          v7 += *(unsigned __int8 *)(a1 + 84) << 28 >> 31;
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        int v58 = (int)v16;
        long long v16 = objc_alloc_init(GEOPBTransitArtwork);
        if (GEOPBTransitArtworkReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v50 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v16;

          --v7;
LABEL_76:
          LODWORD(v16) = v58;
LABEL_90:
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_91;
        }
LABEL_102:

        char v53 = 0;
        LOBYTE(v16) = v58;
LABEL_103:
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_104:
        *(unsigned char *)(a1 + 84) |= 4u;
        *(unsigned char *)(a1 + 84) |= 0x10u;
        *(unsigned char *)(a1 + 84) |= 0x20u;
        *(unsigned char *)(a1 + 84) |= 8u;
        if (v53)
        {
LABEL_105:
          uint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_106;
          }
        }
        else
        {
          uint64_t v3 = 0;
          if (v16)
          {
LABEL_106:
            uint64_t v56 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v43 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v43) {
          goto LABEL_100;
        }
        goto LABEL_91;
    }
  }
}

void sub_18969AF38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18969B2FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18969B6C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18969CE10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionFerryStepCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v2 = a1[6];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v4);
  }

  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = a1[7];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * v11++), "readAll:", 1, (void)v13);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v9);
  }

  return [a1[5] readAll:1];
}

uint64_t GEOCompanionFerryStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOCompanionFerryStepReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOCompanionFerryStepReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOCompanionFerryStepReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOCompanionFerryStepReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOCompanionFerryStepCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18969D154(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionFerryStepReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOCompanionFerryStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18969D1B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionFerryStepIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_37;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v23 = 0;
          break;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOJunctionElementIsValid(a1)) {
            goto LABEL_56;
          }
          goto LABEL_53;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoListIsValid(a1)) {
            goto LABEL_56;
          }
          goto LABEL_53;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1)) {
            goto LABEL_56;
          }
          goto LABEL_53;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_56;
          }
LABEL_53:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_56:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_37:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_18969D864(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionFerryStepIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v2 = *(unsigned char *)(a1 + 84);
  if ((v2 & 0x74) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 84) & 8) != 0)
  {
    if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 0x20) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 56);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEONameInfoIsDirty(*(void *)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_19;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_19:

  return v3;
}

os_unfair_lock_s *GEOCompanionFerryStepIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOCompanionFerryStepIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18969DFB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18969F64C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionGenericStepReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 80) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 80) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 80) >> 3) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v8)) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        LODWORD(v16) = v14;
        char v66 = (v7 != 0) | v14;
        char v67 = (v15 == 0) | v14;
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_96;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_96:
      if (v16)
      {
        char v58 = 1;
        goto LABEL_114;
      }
      if (!v15) {
        goto LABEL_115;
      }
      while (1)
      {
        while (1)
        {
          int v60 = *v15++;
          int v59 = v60;
          BOOL v61 = v60 == 9;
          if (v60 <= 9) {
            break;
          }
          if (v59 == 10)
          {
            char v62 = 16;
LABEL_107:
            *(unsigned char *)(a1 + 80) |= v62;
          }
          else if (v59 == 11)
          {
            char v62 = 32;
            goto LABEL_107;
          }
        }
        if (v61)
        {
          char v62 = 8;
          goto LABEL_107;
        }
        if (!v59) {
          goto LABEL_115;
        }
      }
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v67 & 1) == 0)
    {
      int v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_80;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 80) |= 2u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_83;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_85;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_83:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_85:
        uint64_t v57 = 72;
        goto LABEL_94;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_80;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 80) |= 1u;
        while (2)
        {
          uint64_t v46 = *v17;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v19) + v47);
            *(void *)(v3 + v46) = v48;
            v38 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              BOOL v27 = v45++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_89:
        uint64_t v57 = 68;
        goto LABEL_94;
      case 9:
        if (!v31 || (*(unsigned char *)(a1 + 80) & 8) != 0) {
          goto LABEL_80;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_111;
        }
        -[GEOCompanionGenericStep _reserveJunctionElements:](a1, 1uLL);
        if ((GEOJunctionElementReadAllFrom(*(void *)(a1 + 16) + 16 * *(void *)(a1 + 24), v3) & 1) == 0) {
          goto LABEL_111;
        }
        PBReaderRecallMark();
        ++*(void *)(a1 + 24);
        goto LABEL_71;
      case 10:
        if (!v31 || (*(unsigned char *)(a1 + 80) & 0x10) != 0) {
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_111;
        }
        int v65 = (int)v16;
        long long v16 = objc_alloc_init(GEONameInfoList);
        if (!GEONameInfoListReadAllFrom(v16, (void *)v3, v9 & 1)) {
          goto LABEL_112;
        }
        PBReaderRecallMark();
        -[GEOCompanionGenericStep _addNoFlagsManeuverName:](a1, v16);
        goto LABEL_70;
      case 11:
        if (!v31 || (*(unsigned char *)(a1 + 80) & 0x20) != 0) {
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
        {
LABEL_111:
          char v58 = 0;
          goto LABEL_113;
        }
        int v65 = (int)v16;
        long long v16 = objc_alloc_init(GEONameInfo);
        if (GEONameInfoReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOCompanionGenericStep _addNoFlagsSignpost:](a1, v16);
LABEL_70:

          LODWORD(v16) = v65;
LABEL_71:
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
          if ((v66 & 1) == 0) {
            goto LABEL_96;
          }
          continue;
        }
LABEL_112:

        char v58 = 0;
        LOBYTE(v16) = v65;
LABEL_113:
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_114:
        *(unsigned char *)(a1 + 80) |= 0x10u;
        *(unsigned char *)(a1 + 80) |= 0x20u;
        *(unsigned char *)(a1 + 80) |= 8u;
        if (v58)
        {
LABEL_115:
          uint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_116;
          }
        }
        else
        {
          uint64_t v3 = 0;
          if (v16)
          {
LABEL_116:
            uint64_t v63 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 12:
        if (v8)
        {
          char v50 = 0;
          unsigned int v51 = 0;
          uint64_t v38 = 0;
          *(unsigned char *)(a1 + 80) |= 4u;
          while (1)
          {
            uint64_t v52 = *v17;
            uint64_t v53 = *(void *)(v3 + v52);
            unint64_t v54 = v53 + 1;
            if (v53 == -1 || v54 > *(void *)(v3 + *v6)) {
              break;
            }
            char v55 = *(unsigned char *)(*(void *)(v3 + *v19) + v53);
            *(void *)(v3 + v52) = v54;
            v38 |= (unint64_t)(v55 & 0x7F) << v50;
            if ((v55 & 0x80) == 0) {
              goto LABEL_91;
            }
            v50 += 7;
            BOOL v27 = v51++ >= 9;
            if (v27)
            {
              LODWORD(v38) = 0;
              goto LABEL_93;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_91:
          if (*(unsigned char *)(v3 + *v18)) {
            LODWORD(v38) = 0;
          }
LABEL_93:
          uint64_t v57 = 76;
LABEL_94:
          *(_DWORD *)(a1 + v57) = v38;
        }
        else
        {
LABEL_80:
          char v56 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v56 & 1) == 0)
          {
LABEL_110:
            char v58 = 0;
            goto LABEL_114;
          }
        }
        goto LABEL_95;
      default:
        int v43 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v43) {
          goto LABEL_110;
        }
        goto LABEL_95;
    }
  }
}

void sub_1896A0174(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A06DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A24B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOCompanionGenericStepCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 40);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 48);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

uint64_t GEOCompanionGenericStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOCompanionGenericStepReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOCompanionGenericStepReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOCompanionGenericStepReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOCompanionGenericStepReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOCompanionGenericStepCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1896A27E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionGenericStepReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOCompanionGenericStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896A2848(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionGenericStepIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_60;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_60;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOJunctionElementIsValid(a1)) {
            goto LABEL_60;
          }
          goto LABEL_48;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoListIsValid(a1)) {
            goto LABEL_60;
          }
          goto LABEL_48;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1)) {
            goto LABEL_60;
          }
LABEL_48:
          PBReaderRecallMark();
          continue;
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_60;
          }
          unsigned int v28 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_60:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_58;
      }
LABEL_57:
      a1[*v4] = 1;
LABEL_58:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_1896A2F28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionGenericStepIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 80) & 0x78) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_1896A353C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionRouteContextReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 11)
        {
          *(unsigned char *)(a1 + 24) |= 1u;
          uint64_t v26 = *v4;
          unint64_t v27 = *(void *)&v3[v26];
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v28 = *(void *)(*(void *)&v3[*v7] + v27);
            *(void *)&v3[v26] = v27 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v28 = 0;
          }
          *(void *)(a1 + 8) = v28;
        }
        else
        {
          if (v18 == 10)
          {
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 24) |= 4u;
            while (1)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
                break;
              }
              char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v33;
              v21 |= (unint64_t)(v34 & 0x7F) << v29;
              if ((v34 & 0x80) == 0) {
                goto LABEL_46;
              }
              v29 += 7;
              BOOL v15 = v30++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_48;
              }
            }
            v3[*v6] = 1;
LABEL_46:
            if (v3[*v6]) {
              LODWORD(v21) = 0;
            }
LABEL_48:
            uint64_t v35 = 20;
          }
          else
          {
            if (v18 != 4)
            {
              if (!PBReaderSkipValueWithTag()) {
                goto LABEL_54;
              }
              continue;
            }
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 24) |= 2u;
            while (1)
            {
              uint64_t v22 = *v4;
              uint64_t v23 = *(void *)&v3[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
              *(void *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_42;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_44;
              }
            }
            v3[*v6] = 1;
LABEL_42:
            if (v3[*v6]) {
              LODWORD(v21) = 0;
            }
LABEL_44:
            uint64_t v35 = 16;
          }
          *(_DWORD *)(a1 + v35) = v21;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_54:
    BOOL v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_1896A4408(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionRouteContextReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOCompanionRouteContextReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896A446C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionRouteContextIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      unint64_t v18 = v8 >> 3;
      if ((v8 >> 3) == 11)
      {
        if (v16 != 1) {
          goto LABEL_48;
        }
        uint64_t v25 = *v2;
        unint64_t v26 = *(void *)&a1[v25];
        if (v26 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v27 = v26 + 8, v27 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v25] = v27;
        }
        else {
          a1[v14] = 1;
        }
      }
      else
      {
        if (v18 == 10)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_48;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v24 = v28++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_43;
          }
        }
        if (v18 == 4)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_48;
          }
          unsigned int v19 = 0;
          while (1)
          {
            uint64_t v20 = *v2;
            uint64_t v21 = *(void *)&a1[v20];
            unint64_t v22 = v21 + 1;
            if (v21 == -1 || v22 > *(void *)&a1[*v3]) {
              break;
            }
            int v23 = *(char *)(*(void *)&a1[*v5] + v21);
            *(void *)&a1[v20] = v22;
            if (v23 < 0)
            {
              BOOL v24 = v19++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if (!PBReaderSkipValueWithTag())
        {
LABEL_48:
          BOOL v33 = 0;
          goto LABEL_47;
        }
      }
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
LABEL_47:
  PBReaderRecallMark();
  return v33;
}

void sub_1896A4E1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionRouteDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 272));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 268);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 264)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = *(_DWORD *)(a1 + 304);
  uint32x4_t v12 = (uint32x4_t)vdupq_n_s32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A632DA0), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A632DB0), v13)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A632D80), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A632D90), v13))), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A632DC0), v13)))+ (*(_DWORD *)(a1 + 308) & 1)+ ((v11 >> 14) & 1)+ (v11 >> 31);
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v17 = v10 | (v14 > 0x11);
        if ((v17 | v8)) {
          unint64_t v18 = 0;
        }
        else {
          unint64_t v18 = a3;
        }
        BOOL v19 = v17;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_371;
        }
        char v197 = (v18 == 0) | v17;
        unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v14;
LABEL_6:
        uint64_t v15 = v9;
        uint64_t v16 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_371;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_23;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        uint64_t v31 = *v21;
        int v32 = *(unsigned __int8 *)(v3 + v31);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_23:
    uint64_t v31 = *v21;
    int v32 = *(unsigned __int8 *)(v3 + v31);
    if (*(unsigned char *)(v3 + v31)) {
      unint64_t v25 = 0;
    }
LABEL_25:
    int v33 = v25 & 7;
    if (v32 || v33 == 4)
    {
LABEL_371:
      if (v19)
      {
        *(void *)(a1 + 304) |= 0x1FFFFFC00uLL;
      }
      else if (v18)
      {
        while (1)
        {
          int v192 = *v18++;
          uint64_t v193 = 0x10000;
          switch(v192)
          {
            case 0:
              goto LABEL_398;
            case 1:
              goto LABEL_397;
            case 2:
              uint64_t v193 = 0x10000000;
              goto LABEL_397;
            case 3:
              uint64_t v193 = 1024;
              goto LABEL_397;
            case 5:
              uint64_t v193 = 0x8000000;
              goto LABEL_397;
            case 6:
              uint64_t v193 = 0x20000;
              goto LABEL_397;
            case 7:
              uint64_t v193 = 0x2000;
              goto LABEL_397;
            case 8:
              uint64_t v193 = 4096;
              goto LABEL_397;
            case 11:
              uint64_t v193 = 0x400000;
              goto LABEL_397;
            case 13:
              uint64_t v193 = 0x80000;
              goto LABEL_397;
            case 15:
              uint64_t v193 = 0x200000;
              goto LABEL_397;
            case 16:
              uint64_t v193 = 0x8000;
              goto LABEL_397;
            case 19:
              uint64_t v193 = 0x800000;
              goto LABEL_397;
            case 20:
              uint64_t v193 = 0x1000000;
              goto LABEL_397;
            case 21:
              uint64_t v193 = 0x80000000;
              goto LABEL_397;
            case 22:
              uint64_t v193 = 0x100000;
              goto LABEL_397;
            case 23:
              uint64_t v193 = 0x4000000;
              goto LABEL_397;
            case 25:
              uint64_t v193 = 0x2000000;
              goto LABEL_397;
            case 26:
              uint64_t v193 = 0x100000000;
              goto LABEL_397;
            case 28:
              uint64_t v193 = 0x40000;
              goto LABEL_397;
            case 30:
              uint64_t v193 = 0x40000000;
              goto LABEL_397;
            case 31:
              uint64_t v193 = 2048;
              goto LABEL_397;
            case 33:
              uint64_t v193 = 0x20000000;
              goto LABEL_397;
            case 34:
              uint64_t v193 = 0x4000;
LABEL_397:
              *(void *)(a1 + 304) |= v193;
              break;
            default:
              continue;
          }
        }
      }
LABEL_398:
      unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
      if (!v19) {
        return v3;
      }
LABEL_399:
      uint64_t v194 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;

      return v3;
    }
    unint64_t v35 = v25 >> 3;
    BOOL v36 = v19;
    if ((v197 & 1) == 0)
    {
      unsigned int v37 = v18;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36) {
          goto LABEL_262;
        }
        if ((*(unsigned char *)(a1 + 306) & 1) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 128;
          goto LABEL_257;
        }
        char v149 = PBReaderSkipValueWithTag();
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        if ((v149 & 1) == 0) {
          goto LABEL_403;
        }
        uint64_t v150 = *(void *)(a1 + 304) << 47;
        goto LABEL_339;
      case 2:
        if (!v36 || (*(unsigned char *)(a1 + 307) & 0x10) != 0) {
          goto LABEL_260;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_403;
        }
        BOOL v196 = v19;
        int v43 = objc_alloc_init(GEOCompanionStep);
        if (!GEOCompanionStepReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1)) {
          goto LABEL_401;
        }
        PBReaderRecallMark();
        -[GEOCompanionRouteDetails _addNoFlagsStep:](a1, v43);
        goto LABEL_144;
      case 3:
        if (!v36 || (*(unsigned char *)(a1 + 305) & 4) != 0) {
          goto LABEL_262;
        }
        BOOL v196 = v19;
        if (v33 != 2)
        {
          uint64_t v190 = *v20;
          unint64_t v191 = *(void *)(v3 + v190);
          if (v191 <= 0xFFFFFFFFFFFFFFF7 && v191 + 8 <= *(void *)(v3 + *v6)) {
            *(void *)(v3 + v190) = v191 + 8;
          }
          else {
            *(unsigned char *)(v3 + v31) = 1;
          }
          PBRepeatedDoubleAdd();
          goto LABEL_258;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_402;
        }
        while (1)
        {
          uint64_t v104 = (unint64_t *)(v3 + *v20);
          unint64_t v105 = *v104;
          unint64_t v106 = *(void *)(v3 + *v6);
          if (*v104 >= v106) {
            break;
          }
          uint64_t v107 = (int)*MEMORY[0x1E4F940C8];
          if (*(unsigned char *)(v3 + v107)) {
            break;
          }
          if (v105 > 0xFFFFFFFFFFFFFFF7 || v105 + 8 > v106) {
            *(unsigned char *)(v3 + v107) = 1;
          }
          else {
            *uint64_t v104 = v105 + 8;
          }
          PBRepeatedDoubleAdd();
        }
        goto LABEL_264;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_262;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(void *)(a1 + 304) |= 4uLL;
        while (2)
        {
          uint64_t v47 = *v20;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v22) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v30 = v45++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_268;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_268:
        uint64_t v146 = 284;
        goto LABEL_306;
      case 5:
        if (!v36) {
          goto LABEL_262;
        }
        if ((*(unsigned char *)(a1 + 307) & 8) == 0)
        {
          uint64_t v41 = PBReaderReadData();
          uint64_t v42 = 216;
          goto LABEL_257;
        }
        char v151 = PBReaderSkipValueWithTag();
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        if ((v151 & 1) == 0) {
          goto LABEL_403;
        }
        uint64_t v150 = *(void *)(a1 + 304) << 36;
        goto LABEL_339;
      case 6:
        if (!v36) {
          goto LABEL_262;
        }
        if ((*(unsigned char *)(a1 + 306) & 2) != 0)
        {
          char v160 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v160 & 1) == 0) {
            goto LABEL_403;
          }
          uint64_t v150 = *(void *)(a1 + 304) << 46;
          goto LABEL_339;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_403;
        }
        BOOL v196 = v19;
        int v43 = objc_alloc_init(GEOMapItemStorage);
        if (!GEOMapItemStorageReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1)) {
          goto LABEL_401;
        }
        PBReaderRecallMark();
        uint64_t v75 = 136;
        goto LABEL_236;
      case 7:
        if (!v36 || (*(unsigned char *)(a1 + 305) & 0x20) != 0) {
          goto LABEL_260;
        }
        BOOL v196 = v19;
        if (v33 != 2)
        {
          char v166 = 0;
          unsigned int v167 = 0;
          uint64_t v168 = 0;
          uint64_t v169 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v170 = *v20;
            uint64_t v171 = *(void *)(v3 + v170);
            unint64_t v172 = v171 + 1;
            if (v171 == -1 || v172 > *(void *)(v3 + *v6)) {
              goto LABEL_364;
            }
            char v173 = *(unsigned char *)(*(void *)(v3 + *v169) + v171);
            *(void *)(v3 + v170) = v172;
            v168 |= (unint64_t)(v173 & 0x7F) << v166;
            if (v173 < 0)
            {
              v166 += 7;
              BOOL v30 = v167++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_365;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_402;
        }
        while (1)
        {
          unsigned int v51 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_264;
          }
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v54 = 0;
          char v55 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v56 = *v20;
            uint64_t v57 = *(void *)(v3 + v56);
            unint64_t v58 = v57 + 1;
            if (v57 == -1 || v58 > *(void *)(v3 + *v6)) {
              break;
            }
            char v59 = *(unsigned char *)(*(void *)(v3 + *v55) + v57);
            *(void *)(v3 + v56) = v58;
            v54 |= (unint64_t)(v59 & 0x7F) << v52;
            if (v59 < 0)
            {
              v52 += 7;
              BOOL v30 = v53++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_70;
          }
          *(unsigned char *)(v3 + *v51) = 1;
LABEL_70:
          PBRepeatedUInt32Add();
        }
      case 8:
        if (!v36 || (*(unsigned char *)(a1 + 305) & 0x10) != 0) {
          goto LABEL_260;
        }
        BOOL v196 = v19;
        if (v33 != 2)
        {
          char v174 = 0;
          unsigned int v175 = 0;
          uint64_t v176 = 0;
          unsigned int v177 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v178 = *v20;
            uint64_t v179 = *(void *)(v3 + v178);
            unint64_t v180 = v179 + 1;
            if (v179 == -1 || v180 > *(void *)(v3 + *v6)) {
              goto LABEL_364;
            }
            char v181 = *(unsigned char *)(*(void *)(v3 + *v177) + v179);
            *(void *)(v3 + v178) = v180;
            v176 |= (unint64_t)(v181 & 0x7F) << v174;
            if (v181 < 0)
            {
              v174 += 7;
              BOOL v30 = v175++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_365;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_402;
        }
        while (1)
        {
          int v60 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_264;
          }
          char v61 = 0;
          unsigned int v62 = 0;
          uint64_t v63 = 0;
          unint64_t v64 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v65 = *v20;
            uint64_t v66 = *(void *)(v3 + v65);
            unint64_t v67 = v66 + 1;
            if (v66 == -1 || v67 > *(void *)(v3 + *v6)) {
              break;
            }
            char v68 = *(unsigned char *)(*(void *)(v3 + *v64) + v66);
            *(void *)(v3 + v65) = v67;
            v63 |= (unint64_t)(v68 & 0x7F) << v61;
            if (v68 < 0)
            {
              v61 += 7;
              BOOL v30 = v62++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_85;
          }
          *(unsigned char *)(v3 + *v60) = 1;
LABEL_85:
          PBRepeatedUInt32Add();
        }
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_262;
        }
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v46 = 0;
        *(void *)(a1 + 304) |= 2uLL;
        while (2)
        {
          uint64_t v71 = *v20;
          uint64_t v72 = *(void *)(v3 + v71);
          unint64_t v73 = v72 + 1;
          if (v72 == -1 || v73 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v74 = *(unsigned char *)(*(void *)(v3 + *v22) + v72);
            *(void *)(v3 + v71) = v73;
            v46 |= (unint64_t)(v74 & 0x7F) << v69;
            if (v74 < 0)
            {
              v69 += 7;
              BOOL v30 = v70++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_272;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_272:
        uint64_t v146 = 280;
        goto LABEL_306;
      case 11:
        if (!v36) {
          goto LABEL_262;
        }
        if ((*(unsigned char *)(a1 + 306) & 0x40) != 0)
        {
          char v152 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v152 & 1) == 0) {
            goto LABEL_403;
          }
          uint64_t v150 = *(void *)(a1 + 304) << 41;
          goto LABEL_339;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_403;
        }
        BOOL v196 = v19;
        int v43 = objc_alloc_init(GEOMapItemStorage);
        if (!GEOMapItemStorageReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1)) {
          goto LABEL_401;
        }
        PBReaderRecallMark();
        uint64_t v75 = 176;
        goto LABEL_236;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_262;
        }
        char v109 = 0;
        unsigned int v110 = 0;
        uint64_t v111 = 0;
        *(void *)(a1 + 304) |= 0x40uLL;
        while (2)
        {
          uint64_t v112 = *v20;
          uint64_t v113 = *(void *)(v3 + v112);
          unint64_t v114 = v113 + 1;
          if (v113 == -1 || v114 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v115 = *(unsigned char *)(*(void *)(v3 + *v22) + v113);
            *(void *)(v3 + v112) = v114;
            v111 |= (unint64_t)(v115 & 0x7F) << v109;
            if (v115 < 0)
            {
              v109 += 7;
              BOOL v30 = v110++ >= 9;
              if (v30)
              {
                uint64_t v111 = 0;
                goto LABEL_288;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v111 = 0;
        }
LABEL_288:
        BOOL v147 = v111 != 0;
        uint64_t v148 = 300;
        goto LABEL_301;
      case 13:
        if (!v36) {
          goto LABEL_262;
        }
        if ((*(unsigned char *)(a1 + 306) & 8) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 152;
          goto LABEL_257;
        }
        char v153 = PBReaderSkipValueWithTag();
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        if ((v153 & 1) == 0) {
          goto LABEL_403;
        }
        uint64_t v150 = *(void *)(a1 + 304) << 44;
        goto LABEL_339;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_262;
        }
        char v76 = 0;
        unsigned int v77 = 0;
        uint64_t v46 = 0;
        *(void *)(a1 + 304) |= 1uLL;
        while (2)
        {
          uint64_t v78 = *v20;
          uint64_t v79 = *(void *)(v3 + v78);
          unint64_t v80 = v79 + 1;
          if (v79 == -1 || v80 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v81 = *(unsigned char *)(*(void *)(v3 + *v22) + v79);
            *(void *)(v3 + v78) = v80;
            v46 |= (unint64_t)(v81 & 0x7F) << v76;
            if (v81 < 0)
            {
              v76 += 7;
              BOOL v30 = v77++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_276;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_276:
        uint64_t v146 = 276;
        goto LABEL_306;
      case 15:
        if (!v36) {
          goto LABEL_262;
        }
        if ((*(unsigned char *)(a1 + 306) & 0x20) != 0)
        {
          char v161 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v161 & 1) == 0) {
            goto LABEL_403;
          }
          uint64_t v150 = *(void *)(a1 + 304) << 42;
          goto LABEL_339;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_403;
        }
        BOOL v196 = v19;
        int v43 = objc_alloc_init(GEOTransitSuggestedRoute);
        if (!GEOTransitSuggestedRouteReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1)) {
          goto LABEL_401;
        }
        PBReaderRecallMark();
        uint64_t v75 = 168;
        goto LABEL_236;
      case 16:
        if (!v36) {
          goto LABEL_262;
        }
        if ((*(unsigned char *)(a1 + 305) & 0x80) != 0)
        {
          char v154 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v154 & 1) == 0) {
            goto LABEL_403;
          }
          uint64_t v150 = *(void *)(a1 + 304) << 48;
          goto LABEL_339;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_403;
        }
        BOOL v196 = v19;
        int v43 = objc_alloc_init(GEOTransitDecoderData);
        if (!GEOTransitDecoderDataReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1)) {
          goto LABEL_401;
        }
        PBReaderRecallMark();
        uint64_t v75 = 120;
        goto LABEL_236;
      case 17:
        if ((v8 & 1) == 0) {
          goto LABEL_262;
        }
        char v116 = 0;
        unsigned int v117 = 0;
        uint64_t v118 = 0;
        *(void *)(a1 + 304) |= 0x200uLL;
        while (2)
        {
          uint64_t v119 = *v20;
          uint64_t v120 = *(void *)(v3 + v119);
          unint64_t v121 = v120 + 1;
          if (v120 == -1 || v121 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v122 = *(unsigned char *)(*(void *)(v3 + *v22) + v120);
            *(void *)(v3 + v119) = v121;
            v118 |= (unint64_t)(v122 & 0x7F) << v116;
            if (v122 < 0)
            {
              v116 += 7;
              BOOL v30 = v117++ >= 9;
              if (v30)
              {
                uint64_t v118 = 0;
                goto LABEL_292;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v118 = 0;
        }
LABEL_292:
        BOOL v147 = v118 != 0;
        uint64_t v148 = 303;
        goto LABEL_301;
      case 18:
        if ((v8 & 1) == 0) {
          goto LABEL_262;
        }
        char v123 = 0;
        unsigned int v124 = 0;
        uint64_t v46 = 0;
        *(void *)(a1 + 304) |= 0x20uLL;
        while (2)
        {
          uint64_t v125 = *v20;
          uint64_t v126 = *(void *)(v3 + v125);
          unint64_t v127 = v126 + 1;
          if (v126 == -1 || v127 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v128 = *(unsigned char *)(*(void *)(v3 + *v22) + v126);
            *(void *)(v3 + v125) = v127;
            v46 |= (unint64_t)(v128 & 0x7F) << v123;
            if (v128 < 0)
            {
              v123 += 7;
              BOOL v30 = v124++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_296;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_296:
        uint64_t v146 = 296;
        goto LABEL_306;
      case 19:
        if (!v36) {
          goto LABEL_262;
        }
        if ((*(unsigned char *)(a1 + 306) & 0x80) != 0)
        {
          char v162 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v162 & 1) == 0) {
            goto LABEL_403;
          }
          uint64_t v150 = *(void *)(a1 + 304) << 40;
          goto LABEL_339;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_403;
        }
        BOOL v196 = v19;
        int v43 = objc_alloc_init(GEODirectionsRequest);
        if (!GEODirectionsRequestReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1)) {
          goto LABEL_401;
        }
        PBReaderRecallMark();
        uint64_t v75 = 184;
        goto LABEL_236;
      case 20:
        if (!v36) {
          goto LABEL_262;
        }
        if (*(unsigned char *)(a1 + 307))
        {
          char v155 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v155 & 1) == 0) {
            goto LABEL_403;
          }
          uint64_t v150 = *(void *)(a1 + 304) << 39;
          goto LABEL_339;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_403;
        }
        BOOL v196 = v19;
        int v43 = objc_alloc_init(GEODirectionsResponse);
        if (!GEODirectionsResponseReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1)) {
          goto LABEL_401;
        }
        PBReaderRecallMark();
        uint64_t v75 = 192;
        goto LABEL_236;
      case 21:
        if (!v36) {
          goto LABEL_262;
        }
        if ((*(unsigned char *)(a1 + 307) & 0x80) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 248;
          goto LABEL_257;
        }
        char v156 = PBReaderSkipValueWithTag();
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        if ((v156 & 1) == 0) {
          goto LABEL_403;
        }
        uint64_t v150 = *(void *)(a1 + 304) << 32;
        goto LABEL_339;
      case 22:
        if (!v36) {
          goto LABEL_262;
        }
        if ((*(unsigned char *)(a1 + 306) & 0x10) == 0)
        {
          uint64_t v41 = PBReaderReadData();
          uint64_t v42 = 160;
          goto LABEL_257;
        }
        char v163 = PBReaderSkipValueWithTag();
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        if ((v163 & 1) == 0) {
          goto LABEL_403;
        }
        uint64_t v150 = *(void *)(a1 + 304) << 43;
        goto LABEL_339;
      case 23:
        if (!v36 || (*(unsigned char *)(a1 + 307) & 4) != 0) {
          goto LABEL_260;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_403;
        }
        BOOL v196 = v19;
        int v43 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1)) {
          goto LABEL_401;
        }
        PBReaderRecallMark();
        -[GEOCompanionRouteDetails _addNoFlagsRouteDescriptions:](a1, v43);
        goto LABEL_144;
      case 24:
        if ((v8 & 1) == 0) {
          goto LABEL_262;
        }
        char v82 = 0;
        unsigned int v83 = 0;
        uint64_t v84 = 0;
        *(void *)(a1 + 304) |= 0x100uLL;
        while (2)
        {
          uint64_t v85 = *v20;
          uint64_t v86 = *(void *)(v3 + v85);
          unint64_t v87 = v86 + 1;
          if (v86 == -1 || v87 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v88 = *(unsigned char *)(*(void *)(v3 + *v22) + v86);
            *(void *)(v3 + v85) = v87;
            v84 |= (unint64_t)(v88 & 0x7F) << v82;
            if (v88 < 0)
            {
              v82 += 7;
              BOOL v30 = v83++ >= 9;
              if (v30)
              {
                uint64_t v84 = 0;
                goto LABEL_280;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v84 = 0;
        }
LABEL_280:
        BOOL v147 = v84 != 0;
        uint64_t v148 = 302;
        goto LABEL_301;
      case 25:
        if (!v36) {
          goto LABEL_262;
        }
        if ((*(unsigned char *)(a1 + 307) & 2) == 0)
        {
          uint64_t v41 = PBReaderReadData();
          uint64_t v42 = 200;
          goto LABEL_257;
        }
        char v157 = PBReaderSkipValueWithTag();
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        if ((v157 & 1) == 0) {
          goto LABEL_403;
        }
        uint64_t v150 = *(void *)(a1 + 304) << 38;
        goto LABEL_339;
      case 26:
        if (!v36 || (*(unsigned char *)(a1 + 308) & 1) != 0) {
          goto LABEL_260;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_403;
        }
        BOOL v196 = v19;
        int v43 = objc_alloc_init(GEOCompanionWaypoint);
        if (!GEOCompanionWaypointReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1)) {
          goto LABEL_401;
        }
        PBReaderRecallMark();
        -[GEOCompanionRouteDetails _addNoFlagsWaypoints:](a1, v43);
LABEL_144:

        goto LABEL_237;
      case 27:
        if ((v8 & 1) == 0) {
          goto LABEL_262;
        }
        char v89 = 0;
        unsigned int v90 = 0;
        uint64_t v46 = 0;
        *(void *)(a1 + 304) |= 8uLL;
        while (2)
        {
          uint64_t v91 = *v20;
          uint64_t v92 = *(void *)(v3 + v91);
          unint64_t v93 = v92 + 1;
          if (v92 == -1 || v93 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v94 = *(unsigned char *)(*(void *)(v3 + *v22) + v92);
            *(void *)(v3 + v91) = v93;
            v46 |= (unint64_t)(v94 & 0x7F) << v89;
            if (v94 < 0)
            {
              v89 += 7;
              BOOL v30 = v90++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_284;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_284:
        uint64_t v146 = 288;
        goto LABEL_306;
      case 28:
        if (!v36) {
          goto LABEL_262;
        }
        if ((*(unsigned char *)(a1 + 306) & 4) != 0)
        {
          char v164 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v164 & 1) == 0) {
            goto LABEL_403;
          }
          uint64_t v150 = *(void *)(a1 + 304) << 45;
LABEL_339:
          v7 += v150 >> 63;
          goto LABEL_340;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_403;
        }
        BOOL v196 = v19;
        int v43 = objc_alloc_init(GEOETATrafficUpdateResponse);
        if (GEOETATrafficUpdateResponseReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v75 = 144;
LABEL_236:
          uint64_t v129 = *(void **)(a1 + v75);
          *(void *)(a1 + v75) = v43;

          --v7;
LABEL_237:
          BOOL v19 = v196;
LABEL_258:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_259:
          unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
LABEL_340:
          if (!v19 && v7 == 0 || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_371;
          }
          continue;
        }
LABEL_401:

LABEL_402:
        LOBYTE(v19) = v196;
LABEL_403:
        unint64_t v3 = 0;
        *(void *)(a1 + 304) |= 0x1FFFFFC00uLL;
        if (v19) {
          goto LABEL_399;
        }
        return v3;
      case 29:
        if ((v8 & 1) == 0) {
          goto LABEL_262;
        }
        char v130 = 0;
        unsigned int v131 = 0;
        uint64_t v132 = 0;
        *(void *)(a1 + 304) |= 0x80uLL;
        while (2)
        {
          uint64_t v133 = *v20;
          uint64_t v134 = *(void *)(v3 + v133);
          unint64_t v135 = v134 + 1;
          if (v134 == -1 || v135 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v136 = *(unsigned char *)(*(void *)(v3 + *v22) + v134);
            *(void *)(v3 + v133) = v135;
            v132 |= (unint64_t)(v136 & 0x7F) << v130;
            if (v136 < 0)
            {
              v130 += 7;
              BOOL v30 = v131++ >= 9;
              if (v30)
              {
                uint64_t v132 = 0;
                goto LABEL_300;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v132 = 0;
        }
LABEL_300:
        BOOL v147 = v132 != 0;
        uint64_t v148 = 301;
LABEL_301:
        *(unsigned char *)(a1 + v148) = v147;
        goto LABEL_340;
      case 30:
        if (!v36) {
          goto LABEL_262;
        }
        if ((*(unsigned char *)(a1 + 307) & 0x40) != 0)
        {
          char v158 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v158 & 1) == 0) {
            goto LABEL_403;
          }
          uint64_t v150 = *(void *)(a1 + 304) << 33;
          goto LABEL_339;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_403;
        }
        BOOL v196 = v19;
        int v43 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v43, (void *)v3)) {
          goto LABEL_401;
        }
        PBReaderRecallMark();
        uint64_t v75 = 240;
        goto LABEL_236;
      case 31:
        if (!v36 || (*(unsigned char *)(a1 + 305) & 8) != 0)
        {
LABEL_260:
          char v144 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v144 & 1) == 0) {
            goto LABEL_403;
          }
          goto LABEL_340;
        }
        BOOL v196 = v19;
        if (v33 != 2)
        {
          char v182 = 0;
          unsigned int v183 = 0;
          uint64_t v184 = 0;
          unint64_t v185 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v186 = *v20;
            uint64_t v187 = *(void *)(v3 + v186);
            unint64_t v188 = v187 + 1;
            if (v187 == -1 || v188 > *(void *)(v3 + *v6)) {
              break;
            }
            char v189 = *(unsigned char *)(*(void *)(v3 + *v185) + v187);
            *(void *)(v3 + v186) = v188;
            v184 |= (unint64_t)(v189 & 0x7F) << v182;
            if (v189 < 0)
            {
              v182 += 7;
              BOOL v30 = v183++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_365;
          }
LABEL_364:
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_365:
          PBRepeatedUInt32Add();
          goto LABEL_258;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_402;
        }
        while (1)
        {
          unint64_t v95 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v96 = 0;
          unsigned int v97 = 0;
          uint64_t v98 = 0;
          uint64_t v99 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v100 = *v20;
            uint64_t v101 = *(void *)(v3 + v100);
            unint64_t v102 = v101 + 1;
            if (v101 == -1 || v102 > *(void *)(v3 + *v6)) {
              break;
            }
            char v103 = *(unsigned char *)(*(void *)(v3 + *v99) + v101);
            *(void *)(v3 + v100) = v102;
            v98 |= (unint64_t)(v103 & 0x7F) << v96;
            if (v103 < 0)
            {
              v96 += 7;
              BOOL v30 = v97++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_172;
          }
          *(unsigned char *)(v3 + *v95) = 1;
LABEL_172:
          PBRepeatedUInt32Add();
        }
LABEL_264:
        PBReaderRecallMark();
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v19 = v196;
        goto LABEL_259;
      case 32:
        if ((v8 & 1) == 0) {
          goto LABEL_262;
        }
        char v137 = 0;
        unsigned int v138 = 0;
        uint64_t v46 = 0;
        *(void *)(a1 + 304) |= 0x10uLL;
        while (2)
        {
          uint64_t v139 = *v20;
          uint64_t v140 = *(void *)(v3 + v139);
          unint64_t v141 = v140 + 1;
          if (v140 == -1 || v141 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v142 = *(unsigned char *)(*(void *)(v3 + *v22) + v140);
            *(void *)(v3 + v139) = v141;
            v46 |= (unint64_t)(v142 & 0x7F) << v137;
            if (v142 < 0)
            {
              v137 += 7;
              BOOL v30 = v138++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_305;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_305:
        uint64_t v146 = 292;
LABEL_306:
        *(_DWORD *)(a1 + v146) = v46;
        goto LABEL_340;
      case 33:
        if (!v36) {
          goto LABEL_262;
        }
        if ((*(unsigned char *)(a1 + 307) & 0x20) == 0)
        {
          uint64_t v41 = PBReaderReadData();
          uint64_t v42 = 232;
          goto LABEL_257;
        }
        char v159 = PBReaderSkipValueWithTag();
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        if ((v159 & 1) == 0) {
          goto LABEL_403;
        }
        uint64_t v150 = *(void *)(a1 + 304) << 34;
        goto LABEL_339;
      case 34:
        if (!v36)
        {
LABEL_262:
          char v145 = PBReaderSkipValueWithTag();
          unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v145 & 1) == 0) {
            goto LABEL_403;
          }
          goto LABEL_340;
        }
        if ((*(unsigned char *)(a1 + 305) & 0x40) == 0)
        {
          uint64_t v41 = PBReaderReadData();
          uint64_t v42 = 112;
LABEL_257:
          uint64_t v143 = *(void **)(a1 + v42);
          *(void *)(a1 + v42) = v41;

          --v7;
          goto LABEL_258;
        }
        char v165 = PBReaderSkipValueWithTag();
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        if ((v165 & 1) == 0) {
          goto LABEL_403;
        }
        uint64_t v150 = *(void *)(a1 + 304) << 49;
        goto LABEL_339;
      default:
        int v108 = PBReaderSkipValueWithTag();
        unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        if (!v108) {
          goto LABEL_403;
        }
        goto LABEL_340;
    }
  }
}

void sub_1896A6CC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A708C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A7424(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A759C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A7714(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A788C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A7C1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A80A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A828C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A8404(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A8894(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A8A0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A8B84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A8CFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A8E74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A92C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A9438(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A9880(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A9A78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896A9BF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896AA000(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896AA178(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896AC234(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionRouteDetailsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v2 = a1[28];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v26 objects:v32 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v27;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v27 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v26 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v26 objects:v32 count:16];
    }
    while (v4);
  }

  [a1[17] readAll:1];
  [a1[22] readAll:1];
  [a1[21] readAll:1];
  [a1[15] readAll:1];
  [a1[23] readAll:1];
  [a1[24] readAll:1];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v7 = a1[26];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v22 objects:v31 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v23;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v23 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v22 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v22 objects:v31 count:16];
    }
    while (v9);
  }

  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v12 = a1[32];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v18 objects:v30 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v19;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v19 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v18 + 1) + 8 * v16++), "readAll:", 1, (void)v18);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v18 objects:v30 count:16];
    }
    while (v14);
  }

  [a1[18] readAll:1];
  return [a1[30] readAll:1];
}

unint64_t GEOCompanionRouteDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 268))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOCompanionRouteDetailsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 272));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 264) = [v8 position];
  *(_DWORD *)(a1 + 268) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOCompanionRouteDetailsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOCompanionRouteDetailsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOCompanionRouteDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOCompanionRouteDetailsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 272));
  return Specified;
}

void sub_1896AC688(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionRouteDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOCompanionRouteDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896AC6EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionRouteDetailsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2) {
            goto LABEL_224;
          }
          goto LABEL_186;
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCompanionStepIsValid(a1)) {
            goto LABEL_224;
          }
          goto LABEL_165;
        case 3u:
          if (v16 == 1)
          {
            uint64_t v104 = *v2;
            unint64_t v105 = *(void *)&a1[v104];
            if (v105 > 0xFFFFFFFFFFFFFFF7 || (unint64_t v106 = v105 + 8, v106 > *(void *)&a1[*v3])) {
LABEL_182:
            }
              a1[v14] = 1;
            else {
              *(void *)&a1[v104] = v106;
            }
          }
          else
          {
            if (v16 != 2 || !PBReaderPlaceMark())
            {
LABEL_224:
              PBReaderRecallMark();
              return 0;
            }
            while (1)
            {
              long long v18 = (unint64_t *)&a1[*v2];
              unint64_t v19 = *v18;
              unint64_t v20 = *(void *)&a1[*v3];
              if (*v18 >= v20) {
                break;
              }
              uint64_t v21 = *v4;
              if (a1[v21]) {
                break;
              }
              if (v19 > 0xFFFFFFFFFFFFFFF7 || (unint64_t v22 = v19 + 8, v22 > v20)) {
                a1[v21] = 1;
              }
              else {
                unint64_t *v18 = v22;
              }
            }
LABEL_165:
            PBReaderRecallMark();
          }
LABEL_187:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_222;
          }
          break;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_224;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v28 = v23++ > 8;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_187;
          }
        case 5u:
          if (v16 == 2) {
            goto LABEL_186;
          }
          goto LABEL_224;
        case 6u:
        case 0xBu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOMapItemStorageIsValid(a1)) {
            goto LABEL_224;
          }
          goto LABEL_165;
        case 7u:
          if (v16 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_224;
            }
            while (1)
            {
              uint64_t v29 = *v2;
              uint64_t v30 = *(void *)&a1[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
                goto LABEL_181;
              }
              int v32 = *(char *)(*(void *)&a1[*v5] + v30);
              *(void *)&a1[v29] = v31;
              if (v32 < 0)
              {
                unsigned int v33 = v16++;
                if (v33 <= 8) {
                  continue;
                }
              }
              goto LABEL_187;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_224;
          }
LABEL_190:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v89 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v90 = *v2;
              uint64_t v91 = *(void *)&a1[v90];
              unint64_t v92 = v91 + 1;
              if (v91 == -1 || v92 > *(void *)&a1[*v3]) {
                break;
              }
              int v93 = *(char *)(*(void *)&a1[*v5] + v91);
              *(void *)&a1[v90] = v92;
              if (v93 < 0)
              {
                BOOL v13 = v89++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_190;
            }
            a1[*v4] = 1;
          }
          goto LABEL_165;
        case 8u:
          if (v16 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_224;
            }
            while (1)
            {
              uint64_t v34 = *v2;
              uint64_t v35 = *(void *)&a1[v34];
              unint64_t v36 = v35 + 1;
              if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
                goto LABEL_181;
              }
              int v37 = *(char *)(*(void *)&a1[*v5] + v35);
              *(void *)&a1[v34] = v36;
              if (v37 < 0)
              {
                unsigned int v38 = v16++;
                if (v38 <= 8) {
                  continue;
                }
              }
              goto LABEL_187;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_224;
          }
LABEL_200:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v94 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v95 = *v2;
              uint64_t v96 = *(void *)&a1[v95];
              unint64_t v97 = v96 + 1;
              if (v96 == -1 || v97 > *(void *)&a1[*v3]) {
                break;
              }
              int v98 = *(char *)(*(void *)&a1[*v5] + v96);
              *(void *)&a1[v95] = v97;
              if (v98 < 0)
              {
                BOOL v13 = v94++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_200;
            }
            a1[*v4] = 1;
          }
          goto LABEL_165;
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_224;
          }
          unsigned int v39 = 0;
          while (1)
          {
            uint64_t v40 = *v2;
            uint64_t v41 = *(void *)&a1[v40];
            unint64_t v42 = v41 + 1;
            if (v41 == -1 || v42 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v43 = *(char *)(*(void *)&a1[*v5] + v41);
            *(void *)&a1[v40] = v42;
            if (v43 < 0)
            {
              BOOL v28 = v39++ > 8;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_187;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_224;
          }
          unsigned int v44 = 0;
          while (1)
          {
            uint64_t v45 = *v2;
            uint64_t v46 = *(void *)&a1[v45];
            unint64_t v47 = v46 + 1;
            if (v46 == -1 || v47 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v48 = *(char *)(*(void *)&a1[*v5] + v46);
            *(void *)&a1[v45] = v47;
            if (v48 < 0)
            {
              BOOL v28 = v44++ > 8;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_187;
          }
        case 0xDu:
          if (v16 == 2) {
            goto LABEL_186;
          }
          goto LABEL_224;
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_224;
          }
          unsigned int v49 = 0;
          while (1)
          {
            uint64_t v50 = *v2;
            uint64_t v51 = *(void *)&a1[v50];
            unint64_t v52 = v51 + 1;
            if (v51 == -1 || v52 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v53 = *(char *)(*(void *)&a1[*v5] + v51);
            *(void *)&a1[v50] = v52;
            if (v53 < 0)
            {
              BOOL v28 = v49++ > 8;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_187;
          }
        case 0xFu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTransitSuggestedRouteIsValid(a1)) {
            goto LABEL_224;
          }
          goto LABEL_165;
        case 0x10u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTransitDecoderDataIsValid(a1)) {
            goto LABEL_224;
          }
          goto LABEL_165;
        case 0x11u:
          if ((v8 & 7) != 0) {
            goto LABEL_224;
          }
          unsigned int v54 = 0;
          while (1)
          {
            uint64_t v55 = *v2;
            uint64_t v56 = *(void *)&a1[v55];
            unint64_t v57 = v56 + 1;
            if (v56 == -1 || v57 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v58 = *(char *)(*(void *)&a1[*v5] + v56);
            *(void *)&a1[v55] = v57;
            if (v58 < 0)
            {
              BOOL v28 = v54++ > 8;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_187;
          }
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_224;
          }
          unsigned int v59 = 0;
          while (1)
          {
            uint64_t v60 = *v2;
            uint64_t v61 = *(void *)&a1[v60];
            unint64_t v62 = v61 + 1;
            if (v61 == -1 || v62 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v63 = *(char *)(*(void *)&a1[*v5] + v61);
            *(void *)&a1[v60] = v62;
            if (v63 < 0)
            {
              BOOL v28 = v59++ > 8;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_187;
          }
        case 0x13u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEODirectionsRequestIsValid(a1)) {
            goto LABEL_224;
          }
          goto LABEL_165;
        case 0x14u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEODirectionsResponseIsValid(a1)) {
            goto LABEL_224;
          }
          goto LABEL_165;
        case 0x15u:
          if (v16 == 2) {
            goto LABEL_186;
          }
          goto LABEL_224;
        case 0x16u:
          if (v16 == 2) {
            goto LABEL_186;
          }
          goto LABEL_224;
        case 0x17u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_224;
          }
          goto LABEL_165;
        case 0x18u:
          if ((v8 & 7) != 0) {
            goto LABEL_224;
          }
          unsigned int v64 = 0;
          while (1)
          {
            uint64_t v65 = *v2;
            uint64_t v66 = *(void *)&a1[v65];
            unint64_t v67 = v66 + 1;
            if (v66 == -1 || v67 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v68 = *(char *)(*(void *)&a1[*v5] + v66);
            *(void *)&a1[v65] = v67;
            if (v68 < 0)
            {
              BOOL v28 = v64++ > 8;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_187;
          }
        case 0x19u:
          if (v16 == 2) {
            goto LABEL_186;
          }
          goto LABEL_224;
        case 0x1Au:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCompanionWaypointIsValid(a1)) {
            goto LABEL_224;
          }
          goto LABEL_165;
        case 0x1Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_224;
          }
          unsigned int v69 = 0;
          while (1)
          {
            uint64_t v70 = *v2;
            uint64_t v71 = *(void *)&a1[v70];
            unint64_t v72 = v71 + 1;
            if (v71 == -1 || v72 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v73 = *(char *)(*(void *)&a1[*v5] + v71);
            *(void *)&a1[v70] = v72;
            if (v73 < 0)
            {
              BOOL v28 = v69++ > 8;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_187;
          }
        case 0x1Cu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOETATrafficUpdateResponseIsValid(a1)) {
            goto LABEL_224;
          }
          goto LABEL_165;
        case 0x1Du:
          if ((v8 & 7) != 0) {
            goto LABEL_224;
          }
          unsigned int v74 = 0;
          while (1)
          {
            uint64_t v75 = *v2;
            uint64_t v76 = *(void *)&a1[v75];
            unint64_t v77 = v76 + 1;
            if (v76 == -1 || v77 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v78 = *(char *)(*(void *)&a1[*v5] + v76);
            *(void *)&a1[v75] = v77;
            if (v78 < 0)
            {
              BOOL v28 = v74++ > 8;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_187;
          }
        case 0x1Eu:
          if (v16 == 2 && PBReaderPlaceMark() && GEOStyleAttributesIsValid(a1)) {
            goto LABEL_165;
          }
          goto LABEL_224;
        case 0x1Fu:
          if (v16 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_224;
            }
            while (1)
            {
              uint64_t v79 = *v2;
              uint64_t v80 = *(void *)&a1[v79];
              unint64_t v81 = v80 + 1;
              if (v80 == -1 || v81 > *(void *)&a1[*v3]) {
                break;
              }
              int v82 = *(char *)(*(void *)&a1[*v5] + v80);
              *(void *)&a1[v79] = v81;
              if (v82 < 0)
              {
                unsigned int v83 = v16++;
                if (v83 <= 8) {
                  continue;
                }
              }
              goto LABEL_187;
            }
LABEL_181:
            uint64_t v14 = *v4;
            goto LABEL_182;
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_224;
          }
LABEL_210:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v99 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v100 = *v2;
              uint64_t v101 = *(void *)&a1[v100];
              unint64_t v102 = v101 + 1;
              if (v101 == -1 || v102 > *(void *)&a1[*v3]) {
                break;
              }
              int v103 = *(char *)(*(void *)&a1[*v5] + v101);
              *(void *)&a1[v100] = v102;
              if (v103 < 0)
              {
                BOOL v13 = v99++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_210;
            }
            a1[*v4] = 1;
          }
          goto LABEL_165;
        case 0x20u:
          if ((v8 & 7) != 0) {
            goto LABEL_224;
          }
          unsigned int v84 = 0;
          while (1)
          {
            uint64_t v85 = *v2;
            uint64_t v86 = *(void *)&a1[v85];
            unint64_t v87 = v86 + 1;
            if (v86 == -1 || v87 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v88 = *(char *)(*(void *)&a1[*v5] + v86);
            *(void *)&a1[v85] = v87;
            if (v88 < 0)
            {
              BOOL v28 = v84++ > 8;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_187;
          }
        case 0x21u:
          if (v16 == 2) {
            goto LABEL_186;
          }
          goto LABEL_224;
        case 0x22u:
          if (v16 == 2) {
            goto LABEL_186;
          }
          goto LABEL_224;
        default:
LABEL_186:
          if (PBReaderSkipValueWithTag()) {
            goto LABEL_187;
          }
          goto LABEL_224;
      }
    }
  }
LABEL_222:
  BOOL v107 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v107;
}

BOOL GEOCompanionStepIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_125;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_120;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_122;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_125;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_120;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_122;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_125;
          }
          unsigned int v29 = 0;
          while (1)
          {
            uint64_t v30 = *v2;
            uint64_t v31 = *(void *)&a1[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
              goto LABEL_120;
            }
            int v33 = *(char *)(*(void *)&a1[*v5] + v31);
            *(void *)&a1[v30] = v32;
            if (v33 < 0)
            {
              BOOL v23 = v29++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_122;
          }
        case 4u:
          if (v16 == 2) {
            goto LABEL_90;
          }
          goto LABEL_125;
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCompanionDriveStepIsValid(a1)) {
            goto LABEL_125;
          }
          goto LABEL_107;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCompanionWalkStepIsValid(a1)) {
            goto LABEL_125;
          }
          goto LABEL_107;
        case 7u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCompanionFerryStepIsValid(a1)) {
            goto LABEL_125;
          }
          goto LABEL_107;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_125;
          }
          unsigned int v34 = 0;
          while (1)
          {
            uint64_t v35 = *v2;
            uint64_t v36 = *(void *)&a1[v35];
            unint64_t v37 = v36 + 1;
            if (v36 == -1 || v37 > *(void *)&a1[*v3]) {
              goto LABEL_120;
            }
            int v38 = *(char *)(*(void *)&a1[*v5] + v36);
            *(void *)&a1[v35] = v37;
            if (v38 < 0)
            {
              BOOL v23 = v34++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_122;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_125;
          }
          unsigned int v39 = 0;
          while (1)
          {
            uint64_t v40 = *v2;
            uint64_t v41 = *(void *)&a1[v40];
            unint64_t v42 = v41 + 1;
            if (v41 == -1 || v42 > *(void *)&a1[*v3]) {
              goto LABEL_120;
            }
            int v43 = *(char *)(*(void *)&a1[*v5] + v41);
            *(void *)&a1[v40] = v42;
            if (v43 < 0)
            {
              BOOL v23 = v39++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_122;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_125;
          }
          unsigned int v44 = 0;
          while (1)
          {
            uint64_t v45 = *v2;
            uint64_t v46 = *(void *)&a1[v45];
            unint64_t v47 = v46 + 1;
            if (v46 == -1 || v47 > *(void *)&a1[*v3]) {
              goto LABEL_120;
            }
            int v48 = *(char *)(*(void *)&a1[*v5] + v46);
            *(void *)&a1[v45] = v47;
            if (v48 < 0)
            {
              BOOL v23 = v44++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_122;
          }
        case 0xBu:
          if (v16 == 2) {
            goto LABEL_90;
          }
          goto LABEL_125;
        case 0xCu:
          if (v16 == 2) {
            goto LABEL_90;
          }
          goto LABEL_125;
        case 0xDu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOGuidanceEventIsValid(a1)) {
            goto LABEL_125;
          }
          goto LABEL_107;
        case 0xEu:
          if (v16 == 2) {
            goto LABEL_90;
          }
          goto LABEL_125;
        case 0xFu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCompanionGenericStepIsValid(a1)) {
            goto LABEL_125;
          }
          goto LABEL_107;
        case 0x10u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCompanionCyclingStepIsValid(a1)) {
            goto LABEL_125;
          }
          goto LABEL_107;
        case 0x11u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORoadDescriptionIsValid(a1)) {
            goto LABEL_125;
          }
          goto LABEL_107;
        case 0x12u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOStopWaypointIsValid(a1)) {
            goto LABEL_125;
          }
LABEL_107:
          PBReaderRecallMark();
          continue;
        case 0x13u:
          if (v16 != 5) {
            goto LABEL_125;
          }
          uint64_t v49 = *v2;
          unint64_t v50 = *(void *)&a1[v49];
          if (v50 > 0xFFFFFFFFFFFFFFFBLL) {
            goto LABEL_121;
          }
          unint64_t v51 = v50 + 4;
          if (v51 > *(void *)&a1[*v3]) {
            goto LABEL_121;
          }
          *(void *)&a1[v49] = v51;
          continue;
        case 0x14u:
          if ((v8 & 7) != 0) {
            goto LABEL_125;
          }
          unsigned int v52 = 0;
          break;
        default:
LABEL_90:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_125:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v53 = *v2;
        uint64_t v54 = *(void *)&a1[v53];
        unint64_t v55 = v54 + 1;
        if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
          break;
        }
        int v56 = *(char *)(*(void *)&a1[*v5] + v54);
        *(void *)&a1[v53] = v55;
        if (v56 < 0)
        {
          BOOL v23 = v52++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_122;
      }
LABEL_120:
      uint64_t v14 = *v4;
LABEL_121:
      a1[v14] = 1;
LABEL_122:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v57 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v57;
}

BOOL GEOCompanionWaypointIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOMapItemStorageIsValid(a1)) {
            goto LABEL_26;
          }
          goto LABEL_45;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWaypointTypedIsValid(a1)) {
            goto LABEL_45;
          }
LABEL_26:
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_45;
          }
          unsigned int v17 = 0;
          break;
        case 4u:
          if (v15 == 2) {
            goto LABEL_40;
          }
          goto LABEL_45;
        case 5u:
          if (v15 == 2) {
            goto LABEL_40;
          }
          goto LABEL_45;
        case 6u:
          if (v15 == 2) {
            goto LABEL_40;
          }
          goto LABEL_45;
        default:
LABEL_40:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_45:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_41;
      }
      a1[*v4] = 1;
LABEL_41:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_1896AE26C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionRouteDetailsIsDirty(uint64_t a1)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 272));
  uint64_t v2 = *(void *)(a1 + 304);
  if ((v2 & 0x218010400) != 0) {
    return 1;
  }
  if ((v2 & 0x20000) != 0)
  {
    if (GEOMapItemStorageIsDirty(*(os_unfair_lock_s **)(a1 + 136))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 304);
  }
  if ((v2 & 0x400000) != 0)
  {
    if (GEOMapItemStorageIsDirty(*(os_unfair_lock_s **)(a1 + 176))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 304);
  }
  if ((v2 & 0x83000) == 0)
  {
    if ((v2 & 0x200000) != 0)
    {
      if (GEOTransitSuggestedRouteIsDirty(*(os_unfair_lock_s **)(a1 + 168))) {
        return 1;
      }
      uint64_t v2 = *(void *)(a1 + 304);
    }
    if ((v2 & 0x8000) != 0)
    {
      if (GEOTransitDecoderDataIsDirty(*(os_unfair_lock_s **)(a1 + 120))) {
        return 1;
      }
      uint64_t v2 = *(void *)(a1 + 304);
    }
    if ((v2 & 0x800000) != 0)
    {
      if (GEODirectionsRequestIsDirty(*(os_unfair_lock_s **)(a1 + 184))) {
        return 1;
      }
      uint64_t v2 = *(void *)(a1 + 304);
    }
    if ((v2 & 0x1000000) != 0)
    {
      if (GEODirectionsResponseIsDirty(*(os_unfair_lock_s **)(a1 + 192))) {
        return 1;
      }
      uint64_t v2 = *(void *)(a1 + 304);
    }
    if ((v2 & 0x186100000) == 0)
    {
      if ((v2 & 0x40000) != 0)
      {
        if (GEOETATrafficUpdateResponseIsDirty(*(os_unfair_lock_s **)(a1 + 144))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 304);
      }
      if ((v2 & 0x60004800) == 0)
      {
        if ((v2 & 0x10000000) != 0)
        {
          long long v26 = 0u;
          long long v27 = 0u;
          long long v24 = 0u;
          long long v25 = 0u;
          id v5 = *(id *)(a1 + 224);
          uint64_t v6 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
          if (v6)
          {
            uint64_t v7 = v6;
            uint64_t v8 = *(void *)v25;
LABEL_31:
            uint64_t v9 = 0;
            while (1)
            {
              if (*(void *)v25 != v8) {
                objc_enumerationMutation(v5);
              }
              if (GEOCompanionStepIsDirty(*(os_unfair_lock_s **)(*((void *)&v24 + 1) + 8 * v9))) {
                goto LABEL_59;
              }
              if (v7 == ++v9)
              {
                uint64_t v7 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
                if (v7) {
                  goto LABEL_31;
                }
                break;
              }
            }
          }

          uint64_t v2 = *(void *)(a1 + 304);
        }
        if ((v2 & 0x4000000) != 0)
        {
          long long v22 = 0u;
          long long v23 = 0u;
          long long v20 = 0u;
          long long v21 = 0u;
          id v5 = *(id *)(a1 + 208);
          uint64_t v10 = [v5 countByEnumeratingWithState:&v20 objects:v29 count:16];
          if (v10)
          {
            uint64_t v11 = v10;
            uint64_t v12 = *(void *)v21;
LABEL_41:
            uint64_t v13 = 0;
            while (1)
            {
              if (*(void *)v21 != v12) {
                objc_enumerationMutation(v5);
              }
              if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v20 + 1) + 8 * v13))) {
                goto LABEL_59;
              }
              if (v11 == ++v13)
              {
                uint64_t v11 = [v5 countByEnumeratingWithState:&v20 objects:v29 count:16];
                if (v11) {
                  goto LABEL_41;
                }
                break;
              }
            }
          }

          uint64_t v2 = *(void *)(a1 + 304);
        }
        if ((v2 & 0x100000000) == 0) {
          return 0;
        }
        long long v18 = 0u;
        long long v19 = 0u;
        long long v16 = 0u;
        long long v17 = 0u;
        id v5 = *(id *)(a1 + 256);
        uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v28 count:16];
        if (!v3)
        {
LABEL_60:

          return v3;
        }
        uint64_t v14 = *(void *)v17;
LABEL_52:
        uint64_t v15 = 0;
        while (1)
        {
          if (*(void *)v17 != v14) {
            objc_enumerationMutation(v5);
          }
          if (GEOCompanionWaypointIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1) + 8 * v15))) {
            break;
          }
          if (v3 == ++v15)
          {
            uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v28 count:16];
            if (v3) {
              goto LABEL_52;
            }
            goto LABEL_60;
          }
        }
LABEL_59:
        uint64_t v3 = 1;
        goto LABEL_60;
      }
    }
  }
  return 1;
}

os_unfair_lock_s *GEOCompanionRouteDetailsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOCompanionRouteDetailsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 68);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOCompanionRouteDetailsClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  if (a3)
  {
    if ([a1 hasDestination]
      && ([a1 destination],
          uint64_t v6 = objc_claimAutoreleasedReturnValue(),
          int HasSensitiveFields = GEOMapItemStorageHasSensitiveFields((uint64_t)v6, a2),
          v6,
          HasSensitiveFields))
    {
      uint64_t v8 = [a1 destination];
      uint64_t v9 = (id *)[v8 copy];

      GEOMapItemStorageClearSensitiveFields(v9, a2, 0);
      [a1 setDestination:v9];
    }
    else
    {
      uint64_t v9 = [a1 destination];
      [v9 clearSensitiveFields:a2];
    }

    if ([a1 hasOrigin])
    {
      uint64_t v11 = [a1 origin];
      int v12 = GEOMapItemStorageHasSensitiveFields((uint64_t)v11, a2);

      if (v12)
      {
        uint64_t v13 = [a1 origin];
        uint64_t v14 = (id *)[v13 copy];

        GEOMapItemStorageClearSensitiveFields(v14, a2, 0);
        [a1 setOrigin:v14];

        goto LABEL_11;
      }
    }
  }
  else
  {
    uint64_t v10 = [a1 destination];
    [v10 clearSensitiveFields:a2];
  }
  uint64_t v15 = [a1 origin];
  [v15 clearSensitiveFields:a2];

  if (!a3)
  {
    long long v20 = [a1 request];
    [v20 clearSensitiveFields:a2];

    goto LABEL_19;
  }
LABEL_11:
  if ([a1 hasRequest]
    && ([a1 request],
        long long v16 = objc_claimAutoreleasedReturnValue(),
        int v17 = GEODirectionsRequestHasSensitiveFields((uint64_t)v16),
        v16,
        v17))
  {
    long long v18 = [a1 request];
    long long v19 = (id *)[v18 copy];

    GEODirectionsRequestClearSensitiveFields(v19, a2, 0);
    [a1 setRequest:v19];
  }
  else
  {
    long long v19 = [a1 request];
    [v19 clearSensitiveFields:a2];
  }

  if ([a1 hasResponse])
  {
    long long v21 = [a1 response];
    int v22 = GEODirectionsResponseHasSensitiveFields(v21);

    if (v22)
    {
      long long v23 = [a1 response];
      long long v24 = (void *)[v23 copy];

      GEODirectionsResponseClearSensitiveFields((uint64_t)v24, a2, 0);
      [a1 setResponse:v24];
      goto LABEL_20;
    }
  }
LABEL_19:
  long long v24 = [a1 response];
  [v24 clearSensitiveFields:a2];
LABEL_20:

  -[GEOCompanionRouteDetails _readWaypoints]((uint64_t)a1);
  unint64_t result = [a1[32] count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      long long v27 = [a1[32] objectAtIndexedSubscript:i];
      int v28 = v27;
      if (a3 && GEOCompanionWaypointHasSensitiveFields(v27, a2))
      {
        unsigned int v29 = (void *)[v28 copy];
        GEOCompanionWaypointClearSensitiveFields(v29, a2, 0);
        [a1[32] replaceObjectAtIndex:i withObject:v29];
      }
      else
      {
        [v28 clearSensitiveFields:a2];
      }

      unint64_t result = [a1[32] count];
    }
  }
  return result;
}

uint64_t GEOCompanionRouteDetailsHasSensitiveFields(uint64_t result, uint64_t a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  if (result)
  {
    uint64_t v3 = (void *)result;
    uint64_t v4 = [(id)result destination];
    if (!GEOMapItemStorageHasSensitiveFields((uint64_t)v4, a2))
    {
      id v5 = [v3 origin];
      if (GEOMapItemStorageHasSensitiveFields((uint64_t)v5, a2))
      {
LABEL_6:

        goto LABEL_7;
      }
      uint64_t v6 = [v3 request];
      if (GEODirectionsRequestHasSensitiveFields((uint64_t)v6))
      {

        goto LABEL_6;
      }
      uint64_t v7 = [v3 response];
      char HasSensitiveFields = GEODirectionsResponseHasSensitiveFields(v7);

      if (HasSensitiveFields) {
        return 1;
      }
      long long v15 = 0u;
      long long v16 = 0u;
      long long v13 = 0u;
      long long v14 = 0u;
      uint64_t v4 = objc_msgSend(v3, "waypoints", 0);
      uint64_t v9 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
      if (!v9)
      {
LABEL_19:

        return 0;
      }
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v14;
LABEL_13:
      uint64_t v12 = 0;
      while (1)
      {
        if (*(void *)v14 != v11) {
          objc_enumerationMutation(v4);
        }
        if (GEOCompanionWaypointHasSensitiveFields(*(void **)(*((void *)&v13 + 1) + 8 * v12), a2)) {
          break;
        }
        if (v10 == ++v12)
        {
          uint64_t v10 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
          if (v10) {
            goto LABEL_13;
          }
          goto LABEL_19;
        }
      }
    }
LABEL_7:

    return 1;
  }
  return result;
}

uint64_t GEOCompanionWaypointHasSensitiveFields(void *a1, uint64_t a2)
{
  if (!a1) {
    return 0;
  }
  uint64_t v4 = [a1 mapItem];
  if (GEOMapItemStorageHasSensitiveFields((uint64_t)v4, a2))
  {
    uint64_t v5 = 1;
  }
  else
  {
    uint64_t v6 = [a1 waypointTyped];
    uint64_t v5 = (uint64_t)GEOWaypointTypedHasSensitiveFields(v6);
  }
  return v5;
}

void GEOCompanionWaypointClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3)
  {
    if ([a1 hasMapItem]
      && ([a1 mapItem],
          uint64_t v5 = objc_claimAutoreleasedReturnValue(),
          int HasSensitiveFields = GEOMapItemStorageHasSensitiveFields((uint64_t)v5, a2),
          v5,
          HasSensitiveFields))
    {
      uint64_t v7 = [a1 mapItem];
      uint64_t v8 = (id *)[v7 copy];

      GEOMapItemStorageClearSensitiveFields(v8, a2, 0);
      [a1 setMapItem:v8];
    }
    else
    {
      uint64_t v8 = [a1 mapItem];
      [v8 clearSensitiveFields:a2];
    }

    if ([a1 hasWaypointTyped])
    {
      uint64_t v10 = [a1 waypointTyped];
      unsigned int v11 = GEOWaypointTypedHasSensitiveFields(v10);

      if (v11)
      {
        uint64_t v12 = [a1 waypointTyped];
        id v14 = (id)[v12 copy];

        long long v13 = [v14 waypointLocation];
        [v13 clearSensitiveFields:a2];

        [a1 setWaypointTyped:v14];
        goto LABEL_11;
      }
    }
  }
  else
  {
    uint64_t v9 = [a1 mapItem];
    [v9 clearSensitiveFields:a2];
  }
  id v14 = [a1 waypointTyped];
  [v14 clearSensitiveFields:a2];
LABEL_11:
}

void sub_1896AFD78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896B1614(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionRouteStatusReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  v11.i64[0] = 0x100000001;
  v11.i64[1] = 0x100000001;
  unsigned int v12 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32((uint32x4_t)vdupq_n_s32(*(_DWORD *)(a1 + 136)), (uint32x4_t)xmmword_18A632DD0), v11))+ (HIWORD(*(_DWORD *)(a1 + 136)) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v15 = v12 > 3;
        char v16 = v10 | v15;
        if (((v10 | v15) | v8)) {
          int v17 = 0;
        }
        else {
          int v17 = a3;
        }
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        long long v19 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_269;
        }
        char v158 = (v17 == 0) | v16;
        long long v20 = (int *)MEMORY[0x1E4F940B8];
        char v157 = v10 | v15;
        break;
      default:
        ++v12;
LABEL_6:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v19)) {
      goto LABEL_269;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    int v30 = v23 & 7;
    if (v29 || v30 == 4)
    {
LABEL_269:
      if (v16)
      {
        char v151 = 1;
        goto LABEL_271;
      }
      if (v17)
      {
        while (1)
        {
          int v152 = *v17++;
          int v153 = 0x20000;
          switch(v152)
          {
            case 8:
              goto LABEL_280;
            case 12:
              int v153 = 0x80000;
              goto LABEL_280;
            case 13:
              int v153 = 0x40000;
              goto LABEL_280;
            case 15:
              int v153 = 0x8000;
              goto LABEL_280;
            case 19:
              int v153 = 0x10000;
LABEL_280:
              *(_DWORD *)(a1 + 136) |= v153;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_281;
    }
    unint64_t v32 = v23 >> 3;
    BOOL v33 = v16;
    if ((v158 & 1) == 0)
    {
      unsigned int v34 = v17;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_186;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(_DWORD *)(a1 + 136) |= 0x20u;
        while (1)
        {
          uint64_t v41 = *v18;
          uint64_t v42 = *(void *)(v3 + v41);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(v3 + *v6)) {
            break;
          }
          char v44 = *(unsigned char *)(*(void *)(v3 + *v20) + v42);
          *(void *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0) {
            goto LABEL_189;
          }
          v38 += 7;
          BOOL v28 = v39++ >= 9;
          if (v28)
          {
            LODWORD(v40) = 0;
            goto LABEL_191;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_189:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v40) = 0;
        }
LABEL_191:
        uint64_t v140 = 108;
        goto LABEL_241;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_186;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v40 = 0;
        *(_DWORD *)(a1 + 136) |= 0x400u;
        while (2)
        {
          uint64_t v48 = *v18;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v20) + v49);
            *(void *)(v3 + v48) = v50;
            v40 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              BOOL v28 = v47++ >= 9;
              if (v28)
              {
                LODWORD(v40) = 0;
                goto LABEL_195;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v40) = 0;
        }
LABEL_195:
        uint64_t v140 = 128;
        goto LABEL_241;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_186;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v40 = 0;
        *(_DWORD *)(a1 + 136) |= 8u;
        while (2)
        {
          uint64_t v54 = *v18;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v20) + v55);
            *(void *)(v3 + v54) = v56;
            v40 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v28 = v53++ >= 9;
              if (v28)
              {
                LODWORD(v40) = 0;
                goto LABEL_199;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v40) = 0;
        }
LABEL_199:
        uint64_t v140 = 100;
        goto LABEL_241;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_186;
        }
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v40 = 0;
        *(_DWORD *)(a1 + 136) |= 0x10u;
        while (2)
        {
          uint64_t v60 = *v18;
          uint64_t v61 = *(void *)(v3 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(v3 + *v20) + v61);
            *(void *)(v3 + v60) = v62;
            v40 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              BOOL v28 = v59++ >= 9;
              if (v28)
              {
                LODWORD(v40) = 0;
                goto LABEL_203;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v40) = 0;
        }
LABEL_203:
        uint64_t v140 = 104;
        goto LABEL_241;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_186;
        }
        char v64 = 0;
        unsigned int v65 = 0;
        uint64_t v40 = 0;
        *(_DWORD *)(a1 + 136) |= 4u;
        while (2)
        {
          uint64_t v66 = *v18;
          uint64_t v67 = *(void *)(v3 + v66);
          unint64_t v68 = v67 + 1;
          if (v67 == -1 || v68 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(v3 + *v20) + v67);
            *(void *)(v3 + v66) = v68;
            v40 |= (unint64_t)(v69 & 0x7F) << v64;
            if (v69 < 0)
            {
              v64 += 7;
              BOOL v28 = v65++ >= 9;
              if (v28)
              {
                LODWORD(v40) = 0;
                goto LABEL_207;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v40) = 0;
        }
LABEL_207:
        uint64_t v140 = 96;
        goto LABEL_241;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_186;
        }
        char v70 = 0;
        unsigned int v71 = 0;
        uint64_t v40 = 0;
        *(_DWORD *)(a1 + 136) |= 0x80u;
        while (2)
        {
          uint64_t v72 = *v18;
          uint64_t v73 = *(void *)(v3 + v72);
          unint64_t v74 = v73 + 1;
          if (v73 == -1 || v74 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(v3 + *v20) + v73);
            *(void *)(v3 + v72) = v74;
            v40 |= (unint64_t)(v75 & 0x7F) << v70;
            if (v75 < 0)
            {
              v70 += 7;
              BOOL v28 = v71++ >= 9;
              if (v28)
              {
                LODWORD(v40) = 0;
                goto LABEL_211;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v40) = 0;
        }
LABEL_211:
        uint64_t v140 = 116;
        goto LABEL_241;
      case 8:
        if (!v33) {
          goto LABEL_186;
        }
        if ((*(unsigned char *)(a1 + 138) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_286;
          }
          int v143 = (int)(*(_DWORD *)(a1 + 136) << 14) >> 31;
          goto LABEL_250;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_286;
        }
        char v156 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v156, (void *)v3, v9 & 1)) {
          goto LABEL_285;
        }
        PBReaderRecallMark();
        uint64_t v76 = 48;
        goto LABEL_168;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_186;
        }
        char v77 = 0;
        unsigned int v78 = 0;
        uint64_t v40 = 0;
        *(_DWORD *)(a1 + 136) |= 0x100u;
        while (2)
        {
          uint64_t v79 = *v18;
          uint64_t v80 = *(void *)(v3 + v79);
          unint64_t v81 = v80 + 1;
          if (v80 == -1 || v81 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v82 = *(unsigned char *)(*(void *)(v3 + *v20) + v80);
            *(void *)(v3 + v79) = v81;
            v40 |= (unint64_t)(v82 & 0x7F) << v77;
            if (v82 < 0)
            {
              v77 += 7;
              BOOL v28 = v78++ >= 9;
              if (v28)
              {
                LODWORD(v40) = 0;
                goto LABEL_215;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v40) = 0;
        }
LABEL_215:
        uint64_t v140 = 120;
        goto LABEL_241;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_186;
        }
        *(_DWORD *)(a1 + 136) |= 0x200u;
        uint64_t v83 = *v18;
        unint64_t v84 = *(void *)(v3 + v83);
        if (v84 <= 0xFFFFFFFFFFFFFFFBLL && v84 + 4 <= *(void *)(v3 + *v6))
        {
          int v85 = *(_DWORD *)(*(void *)(v3 + *v20) + v84);
          *(void *)(v3 + v83) = v84 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          int v85 = 0;
        }
        *(_DWORD *)(a1 + 124) = v85;
        goto LABEL_252;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_186;
        }
        *(_DWORD *)(a1 + 136) |= 1u;
        uint64_t v86 = *v18;
        unint64_t v87 = *(void *)(v3 + v86);
        if (v87 <= 0xFFFFFFFFFFFFFFF7 && v87 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v88 = *(void *)(*(void *)(v3 + *v20) + v87);
          *(void *)(v3 + v86) = v87 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v88 = 0;
        }
        *(void *)(a1 + 72) = v88;
        goto LABEL_252;
      case 12:
        if (!v33) {
          goto LABEL_186;
        }
        if ((*(unsigned char *)(a1 + 138) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_286;
          }
          int v143 = (int)(*(_DWORD *)(a1 + 136) << 12) >> 31;
          goto LABEL_250;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_286;
        }
        char v156 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v156, (void *)v3)) {
          goto LABEL_285;
        }
        PBReaderRecallMark();
        uint64_t v76 = 64;
        goto LABEL_168;
      case 13:
        if (!v33) {
          goto LABEL_186;
        }
        if ((*(unsigned char *)(a1 + 138) & 4) == 0)
        {
          uint64_t v89 = PBReaderReadData();
          uint64_t v90 = *(void **)(a1 + 56);
          *(void *)(a1 + 56) = v89;
          goto LABEL_169;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_286;
        }
        int v143 = (int)(*(_DWORD *)(a1 + 136) << 13) >> 31;
        goto LABEL_250;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_186;
        }
        char v91 = 0;
        unsigned int v92 = 0;
        uint64_t v93 = 0;
        *(_DWORD *)(a1 + 136) |= 0x800u;
        while (2)
        {
          uint64_t v94 = *v18;
          uint64_t v95 = *(void *)(v3 + v94);
          unint64_t v96 = v95 + 1;
          if (v95 == -1 || v96 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v97 = *(unsigned char *)(*(void *)(v3 + *v20) + v95);
            *(void *)(v3 + v94) = v96;
            v93 |= (unint64_t)(v97 & 0x7F) << v91;
            if (v97 < 0)
            {
              v91 += 7;
              BOOL v28 = v92++ >= 9;
              if (v28)
              {
                uint64_t v93 = 0;
                goto LABEL_219;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v93 = 0;
        }
LABEL_219:
        BOOL v141 = v93 != 0;
        uint64_t v142 = 132;
        goto LABEL_236;
      case 15:
        if (!v33 || (*(unsigned char *)(a1 + 137) & 0x80) != 0) {
          goto LABEL_186;
        }
        if (v30 != 2)
        {
          char v144 = 0;
          unsigned int v145 = 0;
          uint64_t v146 = 0;
          while (1)
          {
            uint64_t v147 = *v18;
            uint64_t v148 = *(void *)(v3 + v147);
            unint64_t v149 = v148 + 1;
            if (v148 == -1 || v149 > *(void *)(v3 + *v6)) {
              break;
            }
            char v150 = *(unsigned char *)(*(void *)(v3 + *v20) + v148);
            *(void *)(v3 + v147) = v149;
            v146 |= (unint64_t)(v150 & 0x7F) << v144;
            if (v150 < 0)
            {
              v144 += 7;
              BOOL v28 = v145++ >= 9;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_268;
          }
          *(unsigned char *)(v3 + *v19) = 1;
LABEL_268:
          PBRepeatedUInt32Add();
          goto LABEL_251;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_286;
        }
        while (1)
        {
          int v98 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v99 = 0;
          unsigned int v100 = 0;
          uint64_t v101 = 0;
          while (1)
          {
            uint64_t v102 = *v18;
            uint64_t v103 = *(void *)(v3 + v102);
            unint64_t v104 = v103 + 1;
            if (v103 == -1 || v104 > *(void *)(v3 + *v6)) {
              break;
            }
            char v105 = *(unsigned char *)(*(void *)(v3 + *v20) + v103);
            *(void *)(v3 + v102) = v104;
            v101 |= (unint64_t)(v105 & 0x7F) << v99;
            if (v105 < 0)
            {
              v99 += 7;
              BOOL v28 = v100++ >= 9;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_138;
          }
          *(unsigned char *)(v3 + *v98) = 1;
LABEL_138:
          PBRepeatedUInt32Add();
        }
        PBReaderRecallMark();
        long long v19 = (int *)MEMORY[0x1E4F940C8];
        char v16 = v157;
        goto LABEL_252;
      case 16:
        if ((v8 & 1) == 0) {
          goto LABEL_186;
        }
        char v106 = 0;
        unsigned int v107 = 0;
        uint64_t v108 = 0;
        *(_DWORD *)(a1 + 136) |= 0x4000u;
        while (2)
        {
          uint64_t v109 = *v18;
          uint64_t v110 = *(void *)(v3 + v109);
          unint64_t v111 = v110 + 1;
          if (v110 == -1 || v111 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v112 = *(unsigned char *)(*(void *)(v3 + *v20) + v110);
            *(void *)(v3 + v109) = v111;
            v108 |= (unint64_t)(v112 & 0x7F) << v106;
            if (v112 < 0)
            {
              v106 += 7;
              BOOL v28 = v107++ >= 9;
              if (v28)
              {
                uint64_t v108 = 0;
                goto LABEL_223;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v108 = 0;
        }
LABEL_223:
        BOOL v141 = v108 != 0;
        uint64_t v142 = 135;
        goto LABEL_236;
      case 17:
        if ((v8 & 1) == 0) {
          goto LABEL_186;
        }
        char v113 = 0;
        unsigned int v114 = 0;
        uint64_t v40 = 0;
        *(_DWORD *)(a1 + 136) |= 0x40u;
        while (2)
        {
          uint64_t v115 = *v18;
          uint64_t v116 = *(void *)(v3 + v115);
          unint64_t v117 = v116 + 1;
          if (v116 == -1 || v117 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v118 = *(unsigned char *)(*(void *)(v3 + *v20) + v116);
            *(void *)(v3 + v115) = v117;
            v40 |= (unint64_t)(v118 & 0x7F) << v113;
            if (v118 < 0)
            {
              v113 += 7;
              BOOL v28 = v114++ >= 9;
              if (v28)
              {
                LODWORD(v40) = 0;
                goto LABEL_227;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v40) = 0;
        }
LABEL_227:
        uint64_t v140 = 112;
        goto LABEL_241;
      case 18:
        if ((v8 & 1) == 0) {
          goto LABEL_186;
        }
        char v119 = 0;
        unsigned int v120 = 0;
        uint64_t v121 = 0;
        *(_DWORD *)(a1 + 136) |= 0x1000u;
        while (2)
        {
          uint64_t v122 = *v18;
          uint64_t v123 = *(void *)(v3 + v122);
          unint64_t v124 = v123 + 1;
          if (v123 == -1 || v124 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v125 = *(unsigned char *)(*(void *)(v3 + *v20) + v123);
            *(void *)(v3 + v122) = v124;
            v121 |= (unint64_t)(v125 & 0x7F) << v119;
            if (v125 < 0)
            {
              v119 += 7;
              BOOL v28 = v120++ >= 9;
              if (v28)
              {
                uint64_t v121 = 0;
                goto LABEL_231;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v121 = 0;
        }
LABEL_231:
        BOOL v141 = v121 != 0;
        uint64_t v142 = 133;
        goto LABEL_236;
      case 19:
        if (!v33) {
          goto LABEL_186;
        }
        if (*(unsigned char *)(a1 + 138))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_286;
          }
          int v143 = (int)(*(_DWORD *)(a1 + 136) << 15) >> 31;
LABEL_250:
          v7 += v143;
LABEL_251:
          char v16 = v157;
          long long v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_252:
          if (!(v16 & 1 | (v7 != 0)) || *(void *)(v3 + *v18) >= *(void *)(v3 + *v6)) {
            goto LABEL_269;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_286;
        }
        char v156 = objc_alloc_init(GEOCompanionTransitAlightMessage);
        if (GEOCompanionTransitAlightMessageReadAllFrom((uint64_t)v156, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v76 = 40;
LABEL_168:
          uint64_t v90 = *(void **)(a1 + v76);
          *(void *)(a1 + v76) = v156;
LABEL_169:

          --v7;
          goto LABEL_251;
        }
LABEL_285:

LABEL_286:
        char v151 = 0;
        char v16 = v157;
        long long v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_271:
        *(_DWORD *)(a1 + 136) |= 0x20000u;
        *(_DWORD *)(a1 + 136) |= 0x80000u;
        *(_DWORD *)(a1 + 136) |= 0x40000u;
        *(_DWORD *)(a1 + 136) |= 0x8000u;
        *(_DWORD *)(a1 + 136) |= 0x10000u;
        if (v151)
        {
LABEL_281:
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v16) {
            goto LABEL_282;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v16 & 1) == 0) {
          return v3;
        }
LABEL_282:
        char v154 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 20:
        if ((v8 & 1) == 0) {
          goto LABEL_186;
        }
        char v126 = 0;
        unsigned int v127 = 0;
        uint64_t v128 = 0;
        *(_DWORD *)(a1 + 136) |= 0x2000u;
        while (2)
        {
          uint64_t v129 = *v18;
          uint64_t v130 = *(void *)(v3 + v129);
          unint64_t v131 = v130 + 1;
          if (v130 == -1 || v131 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v132 = *(unsigned char *)(*(void *)(v3 + *v20) + v130);
            *(void *)(v3 + v129) = v131;
            v128 |= (unint64_t)(v132 & 0x7F) << v126;
            if (v132 < 0)
            {
              v126 += 7;
              BOOL v28 = v127++ >= 9;
              if (v28)
              {
                uint64_t v128 = 0;
                goto LABEL_235;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v128 = 0;
        }
LABEL_235:
        BOOL v141 = v128 != 0;
        uint64_t v142 = 134;
LABEL_236:
        *(unsigned char *)(a1 + v142) = v141;
        goto LABEL_252;
      case 21:
        if (v8)
        {
          char v133 = 0;
          unsigned int v134 = 0;
          uint64_t v40 = 0;
          *(_DWORD *)(a1 + 136) |= 2u;
          while (1)
          {
            uint64_t v135 = *v18;
            uint64_t v136 = *(void *)(v3 + v135);
            unint64_t v137 = v136 + 1;
            if (v136 == -1 || v137 > *(void *)(v3 + *v6)) {
              break;
            }
            char v138 = *(unsigned char *)(*(void *)(v3 + *v20) + v136);
            *(void *)(v3 + v135) = v137;
            v40 |= (unint64_t)(v138 & 0x7F) << v133;
            if ((v138 & 0x80) == 0) {
              goto LABEL_238;
            }
            v133 += 7;
            BOOL v28 = v134++ >= 9;
            if (v28)
            {
              LODWORD(v40) = 0;
              goto LABEL_240;
            }
          }
          *(unsigned char *)(v3 + *v19) = 1;
LABEL_238:
          if (*(unsigned char *)(v3 + *v19)) {
            LODWORD(v40) = 0;
          }
LABEL_240:
          uint64_t v140 = 92;
LABEL_241:
          *(_DWORD *)(a1 + v140) = v40;
        }
        else
        {
LABEL_186:
          char v139 = PBReaderSkipValueWithTag();
          long long v19 = (int *)MEMORY[0x1E4F940C8];
          char v16 = v157;
          if ((v139 & 1) == 0)
          {
LABEL_284:
            char v151 = 0;
            goto LABEL_271;
          }
        }
        goto LABEL_252;
      default:
        int v45 = PBReaderSkipValueWithTag();
        long long v19 = (int *)MEMORY[0x1E4F940C8];
        char v16 = v157;
        if (!v45) {
          goto LABEL_284;
        }
        goto LABEL_252;
    }
  }
}

void sub_1896B2B84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896B2CF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896B2EEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896B4324(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896B60F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionRouteStatusReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOCompanionRouteStatusReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOCompanionRouteStatusReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOCompanionRouteStatusReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOCompanionRouteStatusReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 48) readAll:1];
    [*(id *)(a1 + 64) readAll:1];
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_1896B62C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionRouteStatusReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOCompanionRouteStatusReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896B6328(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionRouteStatusIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_153;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_155;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_153;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_155;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v29 = 0;
          while (1)
          {
            uint64_t v30 = *v2;
            uint64_t v31 = *(void *)&a1[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
              goto LABEL_153;
            }
            int v33 = *(char *)(*(void *)&a1[*v5] + v31);
            *(void *)&a1[v30] = v32;
            if (v33 < 0)
            {
              BOOL v23 = v29++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_155;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v34 = 0;
          while (1)
          {
            uint64_t v35 = *v2;
            uint64_t v36 = *(void *)&a1[v35];
            unint64_t v37 = v36 + 1;
            if (v36 == -1 || v37 > *(void *)&a1[*v3]) {
              goto LABEL_153;
            }
            int v38 = *(char *)(*(void *)&a1[*v5] + v36);
            *(void *)&a1[v35] = v37;
            if (v38 < 0)
            {
              BOOL v23 = v34++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_155;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v39 = 0;
          while (1)
          {
            uint64_t v40 = *v2;
            uint64_t v41 = *(void *)&a1[v40];
            unint64_t v42 = v41 + 1;
            if (v41 == -1 || v42 > *(void *)&a1[*v3]) {
              goto LABEL_153;
            }
            int v43 = *(char *)(*(void *)&a1[*v5] + v41);
            *(void *)&a1[v40] = v42;
            if (v43 < 0)
            {
              BOOL v23 = v39++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_155;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v44 = 0;
          while (1)
          {
            uint64_t v45 = *v2;
            uint64_t v46 = *(void *)&a1[v45];
            unint64_t v47 = v46 + 1;
            if (v46 == -1 || v47 > *(void *)&a1[*v3]) {
              goto LABEL_153;
            }
            int v48 = *(char *)(*(void *)&a1[*v5] + v46);
            *(void *)&a1[v45] = v47;
            if (v48 < 0)
            {
              BOOL v23 = v44++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_155;
          }
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1)) {
            goto LABEL_169;
          }
          goto LABEL_136;
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v49 = 0;
          while (1)
          {
            uint64_t v50 = *v2;
            uint64_t v51 = *(void *)&a1[v50];
            unint64_t v52 = v51 + 1;
            if (v51 == -1 || v52 > *(void *)&a1[*v3]) {
              goto LABEL_153;
            }
            int v53 = *(char *)(*(void *)&a1[*v5] + v51);
            *(void *)&a1[v50] = v52;
            if (v53 < 0)
            {
              BOOL v23 = v49++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_155;
          }
        case 0xAu:
          if (v16 != 5) {
            goto LABEL_169;
          }
          uint64_t v54 = *v2;
          unint64_t v55 = *(void *)&a1[v54];
          if (v55 > 0xFFFFFFFFFFFFFFFBLL) {
            goto LABEL_154;
          }
          unint64_t v56 = v55 + 4;
          goto LABEL_85;
        case 0xBu:
          if (v16 != 1) {
            goto LABEL_169;
          }
          uint64_t v54 = *v2;
          unint64_t v57 = *(void *)&a1[v54];
          if (v57 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_154;
          }
          unint64_t v56 = v57 + 8;
LABEL_85:
          if (v56 > *(void *)&a1[*v3]) {
            goto LABEL_154;
          }
          *(void *)&a1[v54] = v56;
          goto LABEL_155;
        case 0xCu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_169;
          }
          goto LABEL_136;
        case 0xDu:
          if (v16 == 2) {
            goto LABEL_92;
          }
          goto LABEL_169;
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v58 = 0;
          while (1)
          {
            uint64_t v59 = *v2;
            uint64_t v60 = *(void *)&a1[v59];
            unint64_t v61 = v60 + 1;
            if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
              goto LABEL_153;
            }
            int v62 = *(char *)(*(void *)&a1[*v5] + v60);
            *(void *)&a1[v59] = v61;
            if (v62 < 0)
            {
              BOOL v23 = v58++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_155;
          }
        case 0xFu:
          if (v16 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_169:
              PBReaderRecallMark();
              return 0;
            }
LABEL_158:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v93 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v94 = *v2;
                uint64_t v95 = *(void *)&a1[v94];
                unint64_t v96 = v95 + 1;
                if (v95 == -1 || v96 > *(void *)&a1[*v3]) {
                  break;
                }
                int v97 = *(char *)(*(void *)&a1[*v5] + v95);
                *(void *)&a1[v94] = v96;
                if (v97 < 0)
                {
                  BOOL v13 = v93++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_158;
              }
              a1[*v4] = 1;
            }
LABEL_136:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_169;
            }
            while (1)
            {
              uint64_t v63 = *v2;
              uint64_t v64 = *(void *)&a1[v63];
              unint64_t v65 = v64 + 1;
              if (v64 == -1 || v65 > *(void *)&a1[*v3]) {
                break;
              }
              int v66 = *(char *)(*(void *)&a1[*v5] + v64);
              *(void *)&a1[v63] = v65;
              if (v66 < 0)
              {
                unsigned int v67 = v16++;
                if (v67 <= 8) {
                  continue;
                }
              }
              goto LABEL_155;
            }
LABEL_153:
            uint64_t v14 = *v4;
LABEL_154:
            a1[v14] = 1;
          }
LABEL_155:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_167;
          }
          break;
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v68 = 0;
          while (1)
          {
            uint64_t v69 = *v2;
            uint64_t v70 = *(void *)&a1[v69];
            unint64_t v71 = v70 + 1;
            if (v70 == -1 || v71 > *(void *)&a1[*v3]) {
              goto LABEL_153;
            }
            int v72 = *(char *)(*(void *)&a1[*v5] + v70);
            *(void *)&a1[v69] = v71;
            if (v72 < 0)
            {
              BOOL v23 = v68++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_155;
          }
        case 0x11u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v73 = 0;
          while (1)
          {
            uint64_t v74 = *v2;
            uint64_t v75 = *(void *)&a1[v74];
            unint64_t v76 = v75 + 1;
            if (v75 == -1 || v76 > *(void *)&a1[*v3]) {
              goto LABEL_153;
            }
            int v77 = *(char *)(*(void *)&a1[*v5] + v75);
            *(void *)&a1[v74] = v76;
            if (v77 < 0)
            {
              BOOL v23 = v73++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_155;
          }
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v78 = 0;
          while (1)
          {
            uint64_t v79 = *v2;
            uint64_t v80 = *(void *)&a1[v79];
            unint64_t v81 = v80 + 1;
            if (v80 == -1 || v81 > *(void *)&a1[*v3]) {
              goto LABEL_153;
            }
            int v82 = *(char *)(*(void *)&a1[*v5] + v80);
            *(void *)&a1[v79] = v81;
            if (v82 < 0)
            {
              BOOL v23 = v78++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_155;
          }
        case 0x13u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOCompanionTransitAlightMessageIsValid(a1)) {
            goto LABEL_136;
          }
          goto LABEL_169;
        case 0x14u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v83 = 0;
          while (1)
          {
            uint64_t v84 = *v2;
            uint64_t v85 = *(void *)&a1[v84];
            unint64_t v86 = v85 + 1;
            if (v85 == -1 || v86 > *(void *)&a1[*v3]) {
              goto LABEL_153;
            }
            int v87 = *(char *)(*(void *)&a1[*v5] + v85);
            *(void *)&a1[v84] = v86;
            if (v87 < 0)
            {
              BOOL v23 = v83++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_155;
          }
        case 0x15u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v88 = 0;
          while (1)
          {
            uint64_t v89 = *v2;
            uint64_t v90 = *(void *)&a1[v89];
            unint64_t v91 = v90 + 1;
            if (v90 == -1 || v91 > *(void *)&a1[*v3]) {
              goto LABEL_153;
            }
            int v92 = *(char *)(*(void *)&a1[*v5] + v90);
            *(void *)&a1[v89] = v91;
            if (v92 < 0)
            {
              BOOL v23 = v88++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_155;
          }
        default:
LABEL_92:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_169;
          }
          goto LABEL_155;
      }
    }
  }
LABEL_167:
  BOOL v98 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v98;
}

BOOL GEOCompanionTransitAlightMessageIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_51;
          }
          goto LABEL_42;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_51;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_48;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_51;
          }
          unsigned int v23 = 0;
          break;
        case 6u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_47;
          }
          goto LABEL_51;
        case 7u:
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_51;
          }
LABEL_47:
          PBReaderRecallMark();
          continue;
        default:
LABEL_42:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_51:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_48;
      }
LABEL_41:
      a1[*v4] = 1;
LABEL_48:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_1896B7278(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionRouteStatusIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  int v2 = *(_DWORD *)(a1 + 136);
  if ((v2 & 0x100000) != 0) {
    return 1;
  }
  if ((v2 & 0x20000) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 136);
  }
  if ((v2 & 0xC8000) != 0) {
    return 1;
  }
  if ((v2 & 0x10000) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 40);

  return (uint64_t)GEOCompanionTransitAlightMessageIsDirty(v4);
}

os_unfair_lock_s *GEOCompanionRouteStatusIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOCompanionRouteStatusIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOCompanionRouteStatusClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasLocation]
    && ([a1 location],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    unsigned int v7 = [a1 location];
    unint64_t v8 = (_DWORD *)[v7 copy];

    GEOLocationClearSensitiveFields(v8);
    [a1 setLocation:v8];
  }
  else
  {
    unint64_t v8 = [a1 location];
    [v8 clearSensitiveFields:a2];
  }
}

void *GEOCompanionRouteStatusHasSensitiveFields(void *result)
{
  if (result)
  {
    id v1 = [result location];
    uint64_t HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_1896B7D00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896B8A3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionRouteUpdateReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        BOOL v16 = v14 != 0;
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        if (v14) {
          BOOL v18 = 1;
        }
        else {
          BOOL v18 = v15 == 0;
        }
        BOOL v62 = v18;
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_80;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_80:
      if (v16)
      {
        char v55 = 1;
        goto LABEL_94;
      }
      if (!v15) {
        goto LABEL_95;
      }
      while (1)
      {
        int v57 = *v15++;
        int v56 = v57;
        if (v57 == 1) {
          break;
        }
        if (v56 == 4)
        {
          char v58 = 8;
LABEL_89:
          *(unsigned char *)(a1 + 56) |= v58;
        }
        else if (!v56)
        {
          goto LABEL_95;
        }
      }
      char v58 = 4;
      goto LABEL_89;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v16;
    if (!v62)
    {
      int v33 = v15;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_62;
        }
        if ((*(unsigned char *)(a1 + 56) & 4) == 0)
        {
          uint64_t v37 = PBReaderReadData();
          int v38 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v37;

          --v9;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_91;
        }
        char v53 = 32 * *(unsigned char *)(a1 + 56);
        goto LABEL_72;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_62;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 56) |= 2u;
        while (2)
        {
          uint64_t v43 = *v17;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(v3 + *v20) + v44);
            *(void *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v28 = v41++ >= 9;
              if (v28)
              {
                LODWORD(v42) = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v42) = 0;
        }
LABEL_67:
        *(_DWORD *)(a1 + 52) = v42;
        goto LABEL_76;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_62;
        }
        *(unsigned char *)(a1 + 56) |= 1u;
        uint64_t v47 = *v17;
        unint64_t v48 = *(void *)(v3 + v47);
        if (v48 <= 0xFFFFFFFFFFFFFFF7 && v48 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v49 = *(void *)(*(void *)(v3 + *v20) + v48);
          *(void *)(v3 + v47) = v48 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v49 = 0;
        }
        *(void *)(a1 + 16) = v49;
        goto LABEL_76;
      case 4:
        if (!v32)
        {
LABEL_62:
          char v52 = PBReaderSkipValueWithTag();
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v52 & 1) == 0)
          {
LABEL_90:
            char v55 = 0;
            goto LABEL_94;
          }
LABEL_76:
          if (v9) {
            char v54 = 1;
          }
          else {
            char v54 = v16;
          }
          if ((v54 & 1) == 0) {
            goto LABEL_80;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 56) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_91:
            char v55 = 0;
            goto LABEL_93;
          }
          char v53 = 16 * *(unsigned char *)(a1 + 56);
LABEL_72:
          v9 += v53 >> 7;
          goto LABEL_73;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_91;
        }
        BOOL v61 = v16;
        uint64_t v50 = objc_alloc_init(GEOTransitRouteUpdate);
        if (GEOTransitRouteUpdateReadAllFrom((uint64_t)v50, (void *)v3, v7 & 1))
        {
          PBReaderRecallMark();
          uint64_t v51 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v50;

          --v9;
          BOOL v16 = v61;
LABEL_73:
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_76;
        }

        char v55 = 0;
        BOOL v16 = v61;
LABEL_93:
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_94:
        *(unsigned char *)(a1 + 56) |= 4u;
        *(unsigned char *)(a1 + 56) |= 8u;
        if (v55)
        {
LABEL_95:
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v16) {
            goto LABEL_96;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_96:
            uint64_t v59 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v39 = PBReaderSkipValueWithTag();
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v39) {
          goto LABEL_90;
        }
        goto LABEL_76;
    }
  }
}

void sub_1896B93B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896B99F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionRouteUpdateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOCompanionRouteUpdateReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOCompanionRouteUpdateReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOCompanionRouteUpdateReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOCompanionRouteUpdateReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1896B9B9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionRouteUpdateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOCompanionRouteUpdateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896B9C00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionRouteUpdateIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2) {
            goto LABEL_43;
          }
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_43;
          }
          unsigned int v18 = 0;
          break;
        case 3u:
          if (v16 != 1) {
            goto LABEL_43;
          }
          uint64_t v24 = *v2;
          unint64_t v25 = *(void *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_39;
          }
          unint64_t v26 = v25 + 8;
          if (v26 > *(void *)&a1[*v3]) {
            goto LABEL_39;
          }
          *(void *)&a1[v24] = v26;
          continue;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTransitRouteUpdateIsValid(a1)) {
            goto LABEL_43;
          }
          PBReaderRecallMark();
          continue;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_43:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v19 = *v2;
        uint64_t v20 = *(void *)&a1[v19];
        unint64_t v21 = v20 + 1;
        if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
          break;
        }
        int v22 = *(char *)(*(void *)&a1[*v5] + v20);
        *(void *)&a1[v19] = v21;
        if (v22 < 0 && v18++ <= 8) {
          continue;
        }
        goto LABEL_40;
      }
      uint64_t v14 = *v4;
LABEL_39:
      a1[v14] = 1;
LABEL_40:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_1896BA068(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOCompanionRouteUpdateIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 56) & 0x14) != 0) {
    return (os_unfair_lock_s *)1;
  }
  if ((*(unsigned char *)(a1 + 56) & 8) == 0) {
    return 0;
  }
  id v3 = *(os_unfair_lock_s **)(a1 + 32);

  return GEOTransitRouteUpdateIsDirty(v3);
}

os_unfair_lock_s *GEOCompanionRouteUpdateIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    updated = _GEOCompanionRouteUpdateIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return updated;
  }
  return result;
}

void sub_1896BA42C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896BAAA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionStepReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 116);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 112)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unint64_t v11 = (const float *)(a1 + 156);
  uint32x4_t v12 = (uint32x4_t)vld1q_dup_f32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A632DE0), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A632DF0), v13)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A632E00), v13)));
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v17 = v14 > 8;
        char v18 = v10 | v17;
        if (((v10 | v17) | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        char v101 = (v19 == 0) | v18;
        int v22 = (int *)MEMORY[0x1E4F940B8];
        char v100 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        uint64_t v15 = v9;
        uint64_t v16 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_212;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_23;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_23:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_25:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_212:
      if (v18)
      {
        char v94 = 1;
        goto LABEL_232;
      }
      if (v19)
      {
        while (1)
        {
          int v96 = *v19++;
          int v95 = 0x10000;
          switch(v96)
          {
            case 0:
              goto LABEL_233;
            case 4:
              goto LABEL_227;
            case 5:
              int v95 = 512;
              goto LABEL_227;
            case 6:
              int v95 = 0x80000;
              goto LABEL_227;
            case 7:
              int v95 = 1024;
              goto LABEL_227;
            case 11:
              int v95 = 0x2000;
              goto LABEL_227;
            case 12:
              int v95 = 0x4000;
              goto LABEL_227;
            case 13:
              int v95 = 4096;
              goto LABEL_227;
            case 14:
              int v95 = 0x40000;
              goto LABEL_227;
            case 15:
              int v95 = 2048;
              goto LABEL_227;
            case 16:
              int v95 = 256;
              goto LABEL_227;
            case 17:
              int v95 = 0x8000;
              goto LABEL_227;
            case 18:
              int v95 = 0x20000;
LABEL_227:
              *(_DWORD *)(a1 + 156) |= v95;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_233;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v18;
    if ((v101 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_157;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(_DWORD *)(a1 + 156) |= 0x40u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_160;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_162;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_160:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_162:
        uint64_t v92 = 148;
        goto LABEL_187;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_157;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v41 = 0;
        *(_DWORD *)(a1 + 156) |= 2u;
        while (2)
        {
          uint64_t v49 = *v20;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v22) + v50);
            *(void *)(v3 + v49) = v51;
            v41 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              BOOL v30 = v48++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_166;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_166:
        uint64_t v92 = 128;
        goto LABEL_187;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_157;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v41 = 0;
        *(_DWORD *)(a1 + 156) |= 0x80u;
        while (2)
        {
          uint64_t v55 = *v20;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v22) + v56);
            *(void *)(v3 + v55) = v57;
            v41 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v30 = v54++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_170;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_170:
        uint64_t v92 = 152;
        goto LABEL_187;
      case 4:
        if (!v34) {
          goto LABEL_157;
        }
        if ((*(unsigned char *)(a1 + 158) & 1) == 0)
        {
          uint64_t v59 = PBReaderReadString();
          uint64_t v60 = 80;
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_231;
        }
        int v93 = (int)(*(_DWORD *)(a1 + 156) << 15) >> 31;
        goto LABEL_206;
      case 5:
        if (!v34) {
          goto LABEL_157;
        }
        if ((*(unsigned char *)(a1 + 157) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_231;
          }
          int v93 = (int)(*(_DWORD *)(a1 + 156) << 22) >> 31;
          goto LABEL_206;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_231;
        }
        char v99 = objc_alloc_init(GEOCompanionDriveStep);
        if (!GEOCompanionDriveStepReadAllFrom((uint64_t)v99, (void *)v3, v9 & 1)) {
          goto LABEL_230;
        }
        PBReaderRecallMark();
        uint64_t v61 = 24;
        goto LABEL_143;
      case 6:
        if (!v34) {
          goto LABEL_157;
        }
        if ((*(unsigned char *)(a1 + 158) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_231;
          }
          int v93 = (int)(*(_DWORD *)(a1 + 156) << 12) >> 31;
          goto LABEL_206;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_231;
        }
        char v99 = objc_alloc_init(GEOCompanionWalkStep);
        if (!GEOCompanionWalkStepReadAllFrom((uint64_t)v99, (void *)v3, v9 & 1)) {
          goto LABEL_230;
        }
        PBReaderRecallMark();
        uint64_t v61 = 104;
        goto LABEL_143;
      case 7:
        if (!v34) {
          goto LABEL_157;
        }
        if ((*(unsigned char *)(a1 + 157) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_231;
          }
          int v93 = (int)(*(_DWORD *)(a1 + 156) << 21) >> 31;
          goto LABEL_206;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_231;
        }
        char v99 = objc_alloc_init(GEOCompanionFerryStep);
        if (!GEOCompanionFerryStepReadAllFrom((uint64_t)v99, (void *)v3, v9 & 1)) {
          goto LABEL_230;
        }
        PBReaderRecallMark();
        uint64_t v61 = 32;
        goto LABEL_143;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_157;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v41 = 0;
        *(_DWORD *)(a1 + 156) |= 4u;
        while (2)
        {
          uint64_t v64 = *v20;
          uint64_t v65 = *(void *)(v3 + v64);
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(v3 + *v22) + v65);
            *(void *)(v3 + v64) = v66;
            v41 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              BOOL v30 = v63++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_174;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_174:
        uint64_t v92 = 132;
        goto LABEL_187;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_157;
        }
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v41 = 0;
        *(_DWORD *)(a1 + 156) |= 0x20u;
        while (2)
        {
          uint64_t v70 = *v20;
          uint64_t v71 = *(void *)(v3 + v70);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(v3 + *v22) + v71);
            *(void *)(v3 + v70) = v72;
            v41 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              BOOL v30 = v69++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_178;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_178:
        uint64_t v92 = 144;
        goto LABEL_187;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_157;
        }
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v41 = 0;
        *(_DWORD *)(a1 + 156) |= 0x10u;
        while (2)
        {
          uint64_t v76 = *v20;
          uint64_t v77 = *(void *)(v3 + v76);
          unint64_t v78 = v77 + 1;
          if (v77 == -1 || v78 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v79 = *(unsigned char *)(*(void *)(v3 + *v22) + v77);
            *(void *)(v3 + v76) = v78;
            v41 |= (unint64_t)(v79 & 0x7F) << v74;
            if (v79 < 0)
            {
              v74 += 7;
              BOOL v30 = v75++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_182:
        uint64_t v92 = 140;
        goto LABEL_187;
      case 11:
        if (!v34 || (*(unsigned char *)(a1 + 157) & 0x20) != 0) {
          goto LABEL_157;
        }
        PBReaderReadString();
        uint64_t v80 = (GEOCompanionDriveStep *)objc_claimAutoreleasedReturnValue();
        if (!v80) {
          goto LABEL_137;
        }
        char v99 = v80;
        -[GEOCompanionStep _addNoFlagsInstructionWithAlternatives:](a1, v80);
        goto LABEL_136;
      case 12:
        if (!v34) {
          goto LABEL_157;
        }
        if ((*(unsigned char *)(a1 + 157) & 0x40) == 0)
        {
          uint64_t v59 = PBReaderReadString();
          uint64_t v60 = 64;
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_231;
        }
        int v93 = (int)(*(_DWORD *)(a1 + 156) << 17) >> 31;
        goto LABEL_206;
      case 13:
        if (!v34 || (*(unsigned char *)(a1 + 157) & 0x10) != 0) {
          goto LABEL_157;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_231;
        }
        char v99 = objc_alloc_init(GEOGuidanceEvent);
        if (!GEOGuidanceEventReadAllFrom((uint64_t)v99, (void *)v3, v9 & 1)) {
          goto LABEL_230;
        }
        PBReaderRecallMark();
        -[GEOCompanionStep _addNoFlagsGuidanceEvent:](a1, v99);
        goto LABEL_136;
      case 14:
        if (!v34) {
          goto LABEL_157;
        }
        if ((*(unsigned char *)(a1 + 158) & 4) == 0)
        {
          uint64_t v59 = PBReaderReadData();
          uint64_t v60 = 96;
LABEL_120:
          unint64_t v81 = *(void **)(a1 + v60);
          *(void *)(a1 + v60) = v59;
          goto LABEL_144;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_231;
        }
        int v93 = (int)(*(_DWORD *)(a1 + 156) << 13) >> 31;
        goto LABEL_206;
      case 15:
        if (!v34) {
          goto LABEL_157;
        }
        if ((*(unsigned char *)(a1 + 157) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_231;
          }
          int v93 = (int)(*(_DWORD *)(a1 + 156) << 20) >> 31;
          goto LABEL_206;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_231;
        }
        char v99 = objc_alloc_init(GEOCompanionGenericStep);
        if (!GEOCompanionGenericStepReadAllFrom((uint64_t)v99, (void *)v3, v9 & 1)) {
          goto LABEL_230;
        }
        PBReaderRecallMark();
        uint64_t v61 = 40;
        goto LABEL_143;
      case 16:
        if (!v34) {
          goto LABEL_157;
        }
        if (*(unsigned char *)(a1 + 157))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_231;
          }
          int v93 = (int)(*(_DWORD *)(a1 + 156) << 23) >> 31;
          goto LABEL_206;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_231;
        }
        char v99 = objc_alloc_init(GEOCompanionCyclingStep);
        if (!GEOCompanionCyclingStepReadAllFrom((uint64_t)v99, (void *)v3, v9 & 1)) {
          goto LABEL_230;
        }
        PBReaderRecallMark();
        uint64_t v61 = 16;
        goto LABEL_143;
      case 17:
        if (!v34 || (*(unsigned char *)(a1 + 157) & 0x80) != 0) {
          goto LABEL_157;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_231;
        }
        char v99 = objc_alloc_init(GEORoadDescription);
        if (!GEORoadDescriptionReadAllFrom((uint64_t)v99, (void *)v3, v9 & 1)) {
          goto LABEL_230;
        }
        PBReaderRecallMark();
        -[GEOCompanionStep _addNoFlagsRoadDescriptions:](a1, v99);
LABEL_136:
        uint64_t v80 = v99;
LABEL_137:

        goto LABEL_207;
      case 18:
        if (!v34) {
          goto LABEL_157;
        }
        if ((*(unsigned char *)(a1 + 158) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_231;
          }
          int v93 = (int)(*(_DWORD *)(a1 + 156) << 14) >> 31;
LABEL_206:
          v7 += v93;
LABEL_207:
          char v18 = v100;
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_208:
          if (!(v18 & 1 | (v7 != 0))) {
            goto LABEL_212;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_231;
        }
        char v99 = objc_alloc_init(GEOStopWaypoint);
        if (GEOStopWaypointReadAllFrom((uint64_t)v99, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v61 = 88;
LABEL_143:
          unint64_t v81 = *(void **)(a1 + v61);
          *(void *)(a1 + v61) = v99;
LABEL_144:

          --v7;
          goto LABEL_207;
        }
LABEL_230:

LABEL_231:
        char v94 = 0;
        char v18 = v100;
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_232:
        *(_DWORD *)(a1 + 156) |= 0x10000u;
        *(_DWORD *)(a1 + 156) |= 0x200u;
        *(_DWORD *)(a1 + 156) |= 0x80000u;
        *(_DWORD *)(a1 + 156) |= 0x400u;
        *(_DWORD *)(a1 + 156) |= 0x2000u;
        *(_DWORD *)(a1 + 156) |= 0x4000u;
        *(_DWORD *)(a1 + 156) |= 0x1000u;
        *(_DWORD *)(a1 + 156) |= 0x40000u;
        *(_DWORD *)(a1 + 156) |= 0x800u;
        *(_DWORD *)(a1 + 156) |= 0x100u;
        *(_DWORD *)(a1 + 156) |= 0x8000u;
        *(_DWORD *)(a1 + 156) |= 0x20000u;
        if (v94)
        {
LABEL_233:
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if (v18) {
            goto LABEL_234;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v18)
          {
LABEL_234:
            int v97 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 19:
        if ((v8 & 1) == 0) {
          goto LABEL_157;
        }
        *(_DWORD *)(a1 + 156) |= 1u;
        uint64_t v82 = *v20;
        unint64_t v83 = *(void *)(v3 + v82);
        if (v83 <= 0xFFFFFFFFFFFFFFFBLL && v83 + 4 <= *(void *)(v3 + *v6))
        {
          int v84 = *(_DWORD *)(*(void *)(v3 + *v22) + v83);
          *(void *)(v3 + v82) = v83 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          int v84 = 0;
        }
        *(_DWORD *)(a1 + 124) = v84;
        goto LABEL_208;
      case 20:
        if (v8)
        {
          char v85 = 0;
          unsigned int v86 = 0;
          uint64_t v41 = 0;
          *(_DWORD *)(a1 + 156) |= 8u;
          while (1)
          {
            uint64_t v87 = *v20;
            uint64_t v88 = *(void *)(v3 + v87);
            unint64_t v89 = v88 + 1;
            if (v88 == -1 || v89 > *(void *)(v3 + *v6)) {
              break;
            }
            char v90 = *(unsigned char *)(*(void *)(v3 + *v22) + v88);
            *(void *)(v3 + v87) = v89;
            v41 |= (unint64_t)(v90 & 0x7F) << v85;
            if ((v90 & 0x80) == 0) {
              goto LABEL_184;
            }
            v85 += 7;
            BOOL v30 = v86++ >= 9;
            if (v30)
            {
              LODWORD(v41) = 0;
              goto LABEL_186;
            }
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_184:
          if (*(unsigned char *)(v3 + *v21)) {
            LODWORD(v41) = 0;
          }
LABEL_186:
          uint64_t v92 = 136;
LABEL_187:
          *(_DWORD *)(a1 + v92) = v41;
        }
        else
        {
LABEL_157:
          char v91 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v100;
          if ((v91 & 1) == 0)
          {
LABEL_229:
            char v94 = 0;
            goto LABEL_232;
          }
        }
        goto LABEL_208;
      default:
        int v46 = PBReaderSkipValueWithTag();
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        char v18 = v100;
        if (!v46) {
          goto LABEL_229;
        }
        goto LABEL_208;
    }
  }
}

void sub_1896BBC74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896BBDEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896BBF5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896BC248(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896BC610(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896BC788(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896BCB50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896BCCC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896BCE3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896BCFB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896BD37C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896BE80C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionStepCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  [a1[3] readAll:1];
  [a1[13] readAll:1];
  [a1[4] readAll:1];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = a1[6];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v4);
  }

  [a1[5] readAll:1];
  [a1[2] readAll:1];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = a1[9];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * v11++), "readAll:", 1, (void)v13);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v9);
  }

  return [a1[11] readAll:1];
}

unint64_t GEOCompanionStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 116))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOCompanionStepReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = [v8 position];
  *(_DWORD *)(a1 + 116) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOCompanionStepReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOCompanionStepReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOCompanionStepReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOCompanionStepCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return Specified;
}

void sub_1896BEBA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionStepReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOCompanionStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896BEC0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionWalkStepIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_37;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v23 = 0;
          break;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOJunctionElementIsValid(a1)) {
            goto LABEL_56;
          }
          goto LABEL_53;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoListIsValid(a1)) {
            goto LABEL_56;
          }
          goto LABEL_53;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1)) {
            goto LABEL_56;
          }
          goto LABEL_53;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_56;
          }
LABEL_53:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_56:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_37:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_1896BF4A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionStepIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  int v2 = *(_DWORD *)(a1 + 156);
  if ((v2 & 0x110000) != 0) {
    return 1;
  }
  if ((v2 & 0x200) != 0)
  {
    if (GEOCompanionDriveStepIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x80000) != 0)
  {
    if (GEOCompanionWalkStepIsDirty(*(os_unfair_lock_s **)(a1 + 104))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x400) != 0)
  {
    if (GEOCompanionFerryStepIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x47000) != 0) {
    return 1;
  }
  if ((v2 & 0x800) != 0)
  {
    if (GEOCompanionGenericStepIsDirty(*(void *)(a1 + 40))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEOCompanionCyclingStepIsDirty(*(os_unfair_lock_s **)(a1 + 16))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x8000) != 0) {
    return 1;
  }
  if ((v2 & 0x20000) == 0) {
    goto LABEL_24;
  }
  if (GEOStopWaypointIsDirty(*(void *)(a1 + 88))) {
    return 1;
  }
  int v2 = *(_DWORD *)(a1 + 156);
LABEL_24:
  if ((v2 & 0x1000) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 48);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOGuidanceEventIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_36;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_36:

  return v3;
}

os_unfair_lock_s *GEOCompanionStepIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOCompanionStepIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 30);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1896C0138(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C0F18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionTransitAlightMessageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFBFFFCFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 2;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          long long v16 = 0;
        }
        else {
          long long v16 = a3;
        }
        char v63 = (v16 == 0) | v15;
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v62 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_97;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_97:
      if (v15)
      {
        char v56 = 1;
        goto LABEL_108;
      }
      if (v16)
      {
        while (1)
        {
          int v57 = *v16++;
          char v58 = 16;
          switch(v57)
          {
            case 0:
              goto LABEL_109;
            case 1:
              goto LABEL_104;
            case 6:
              char v58 = 4;
              goto LABEL_104;
            case 7:
              char v58 = 32;
              goto LABEL_104;
            case 8:
              char v58 = 8;
LABEL_104:
              *(unsigned char *)(a1 + 68) |= v58;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_109;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v63 & 1) == 0)
    {
      BOOL v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          int v37 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v36;
          goto LABEL_74;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_107;
        }
        char v55 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_94;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_75;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (2)
        {
          uint64_t v41 = *v17;
          uint64_t v42 = *(void *)(v3 + v41);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(v3 + *v19) + v42);
            *(void *)(v3 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              BOOL v27 = v39++ >= 9;
              if (v27)
              {
                LODWORD(v40) = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v40) = 0;
        }
LABEL_80:
        uint64_t v54 = 60;
        goto LABEL_85;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_75;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (2)
        {
          uint64_t v47 = *v17;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v19) + v48);
            *(void *)(v3 + v47) = v49;
            v40 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              BOOL v27 = v46++ >= 9;
              if (v27)
              {
                LODWORD(v40) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v40) = 0;
        }
LABEL_84:
        uint64_t v54 = 64;
LABEL_85:
        *(_DWORD *)(a1 + v54) = v40;
        goto LABEL_96;
      case 6:
        if (!v31) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_107;
          }
          char v55 = 32 * *(unsigned char *)(a1 + 68);
          goto LABEL_94;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_107;
        }
        uint64_t v61 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v61, (void *)v3, v9 & 1)) {
          goto LABEL_106;
        }
        PBReaderRecallMark();
        uint64_t v52 = 16;
        goto LABEL_73;
      case 7:
        if (!v31) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_107;
          }
          char v55 = 4 * *(unsigned char *)(a1 + 68);
          goto LABEL_94;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_107;
        }
        uint64_t v61 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v61, (void *)v3, v9 & 1)) {
          goto LABEL_106;
        }
        PBReaderRecallMark();
        uint64_t v52 = 40;
        goto LABEL_73;
      case 8:
        if (!v31)
        {
LABEL_75:
          char v53 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v62;
          if ((v53 & 1) == 0)
          {
LABEL_105:
            char v56 = 0;
            goto LABEL_108;
          }
LABEL_96:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_97;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_107;
          }
          char v55 = 16 * *(unsigned char *)(a1 + 68);
LABEL_94:
          v7 += v55 >> 7;
LABEL_95:
          char v15 = v62;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_96;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_107;
        }
        uint64_t v61 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v61, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v52 = 24;
LABEL_73:
          int v37 = *(void **)(a1 + v52);
          *(void *)(a1 + v52) = v61;
LABEL_74:

          --v7;
          goto LABEL_95;
        }
LABEL_106:

LABEL_107:
        char v56 = 0;
        char v15 = v62;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_108:
        *(unsigned char *)(a1 + 68) |= 0x10u;
        *(unsigned char *)(a1 + 68) |= 4u;
        *(unsigned char *)(a1 + 68) |= 0x20u;
        *(unsigned char *)(a1 + 68) |= 8u;
        if (v56)
        {
LABEL_109:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_110;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_110:
            uint64_t v59 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v51 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v62;
        if (!v51) {
          goto LABEL_105;
        }
        goto LABEL_96;
    }
  }
}

void sub_1896C190C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C1A78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C1BE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C22E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionTransitAlightMessageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOCompanionTransitAlightMessageReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOCompanionTransitAlightMessageReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOCompanionTransitAlightMessageReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOCompanionTransitAlightMessageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 16) readAll:1];
    [*(id *)(a1 + 40) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1896C24B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionTransitAlightMessageReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOCompanionTransitAlightMessageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896C2518(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C2718(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionTransitAlightMessageIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v2 = *(unsigned char *)(a1 + 68);
  if ((v2 & 0x50) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 68) & 4) != 0)
  {
    if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 16))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 68);
  }
  if ((v2 & 0x20) == 0) {
    goto LABEL_9;
  }
  if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
    return 1;
  }
  char v2 = *(unsigned char *)(a1 + 68);
LABEL_9:
  if ((v2 & 8) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 24);

  return (uint64_t)GEOFormattedStringIsDirty(v4);
}

os_unfair_lock_s *GEOCompanionTransitAlightMessageIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOCompanionTransitAlightMessageIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1896C2B98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C429C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionWalkStepReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 84)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFBFFFEFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 2);
        if ((v14 | v8)) {
          char v15 = 0;
        }
        else {
          char v15 = a3;
        }
        LODWORD(v16) = v14;
        char v59 = (v15 == 0) | v14;
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_92;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_92:
      if (v16)
      {
        char v53 = 1;
        goto LABEL_104;
      }
      if (v15)
      {
        while (1)
        {
          int v54 = *v15++;
          char v55 = 4;
          switch(v54)
          {
            case 9:
              goto LABEL_99;
            case 10:
              char v55 = 16;
              goto LABEL_99;
            case 11:
              char v55 = 32;
              goto LABEL_99;
            case 12:
              char v55 = 8;
LABEL_99:
              *(unsigned char *)(a1 + 84) |= v55;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_105;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v59 & 1) == 0)
    {
      BOOL v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_77;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 84) |= 2u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_80;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_82;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_80:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_82:
        uint64_t v52 = 80;
        goto LABEL_87;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_77;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 84) |= 1u;
        while (2)
        {
          uint64_t v46 = *v17;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v19) + v47);
            *(void *)(v3 + v46) = v48;
            v38 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              BOOL v27 = v45++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_86:
        uint64_t v52 = 76;
LABEL_87:
        *(_DWORD *)(a1 + v52) = v38;
        goto LABEL_91;
      case 9:
        if (!v31 || (*(unsigned char *)(a1 + 84) & 4) != 0) {
          goto LABEL_77;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_101;
        }
        -[GEOCompanionWalkStep _reserveJunctionElements:](a1, 1uLL);
        if ((GEOJunctionElementReadAllFrom(*(void *)(a1 + 16) + 16 * *(void *)(a1 + 24), v3) & 1) == 0) {
          goto LABEL_101;
        }
        PBReaderRecallMark();
        ++*(void *)(a1 + 24);
        goto LABEL_90;
      case 10:
        if (!v31 || (*(unsigned char *)(a1 + 84) & 0x10) != 0) {
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        int v58 = (int)v16;
        long long v16 = objc_alloc_init(GEONameInfoList);
        if (!GEONameInfoListReadAllFrom(v16, (void *)v3, v9 & 1)) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        -[GEOCompanionWalkStep _addNoFlagsManeuverName:](a1, v16);
        goto LABEL_70;
      case 11:
        if (!v31 || (*(unsigned char *)(a1 + 84) & 0x20) != 0) {
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        int v58 = (int)v16;
        long long v16 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        -[GEOCompanionWalkStep _addNoFlagsSignpost:](a1, v16);
LABEL_70:

        goto LABEL_76;
      case 12:
        if (!v31)
        {
LABEL_77:
          char v51 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v51 & 1) == 0)
          {
LABEL_100:
            char v53 = 0;
            goto LABEL_104;
          }
LABEL_91:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_92;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_101:
            char v53 = 0;
            goto LABEL_103;
          }
          v7 += *(unsigned __int8 *)(a1 + 84) << 28 >> 31;
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        int v58 = (int)v16;
        long long v16 = objc_alloc_init(GEOPBTransitArtwork);
        if (GEOPBTransitArtworkReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          char v50 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v16;

          --v7;
LABEL_76:
          LODWORD(v16) = v58;
LABEL_90:
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_91;
        }
LABEL_102:

        char v53 = 0;
        LOBYTE(v16) = v58;
LABEL_103:
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_104:
        *(unsigned char *)(a1 + 84) |= 4u;
        *(unsigned char *)(a1 + 84) |= 0x10u;
        *(unsigned char *)(a1 + 84) |= 0x20u;
        *(unsigned char *)(a1 + 84) |= 8u;
        if (v53)
        {
LABEL_105:
          uint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_106;
          }
        }
        else
        {
          uint64_t v3 = 0;
          if (v16)
          {
LABEL_106:
            char v56 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v43 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v43) {
          goto LABEL_100;
        }
        goto LABEL_91;
    }
  }
}

void sub_1896C4F20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C52E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C56A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C61E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionWalkStepCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v2 = a1[6];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v4);
  }

  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = a1[7];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * v11++), "readAll:", 1, (void)v13);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v9);
  }

  return [a1[5] readAll:1];
}

uint64_t GEOCompanionWalkStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOCompanionWalkStepReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOCompanionWalkStepReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOCompanionWalkStepReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOCompanionWalkStepReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOCompanionWalkStepCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1896C6528(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionWalkStepReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOCompanionWalkStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896C658C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C68F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionWalkStepIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v2 = *(unsigned char *)(a1 + 84);
  if ((v2 & 0x74) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 84) & 8) != 0)
  {
    if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 0x20) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 56);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEONameInfoIsDirty(*(void *)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_19;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_19:

  return v3;
}

os_unfair_lock_s *GEOCompanionWalkStepIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOCompanionWalkStepIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1896C704C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C7700(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionWaypointReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFEFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 72) & 8) != 0));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          long long v16 = 0;
        }
        else {
          long long v16 = a3;
        }
        char v57 = (v16 == 0) | v15;
        long long v17 = (int *)MEMORY[0x1E4F940E8];
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        long long v19 = (int *)MEMORY[0x1E4F940B8];
        char v56 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_88;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_88:
      if (v15)
      {
        char v50 = 1;
        goto LABEL_100;
      }
      if (v16)
      {
        while (1)
        {
          int v51 = *v16++;
          char v52 = 4;
          switch(v51)
          {
            case 0:
              goto LABEL_101;
            case 1:
              goto LABEL_96;
            case 2:
              char v52 = 32;
              goto LABEL_96;
            case 4:
              char v52 = 16;
              goto LABEL_96;
            case 5:
              char v52 = 2;
              goto LABEL_96;
            case 6:
              char v52 = 8;
LABEL_96:
              *(unsigned char *)(a1 + 72) |= v52;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_101;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v57 & 1) == 0)
    {
      BOOL v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 72) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_99;
          }
          char v55 = objc_alloc_init(GEOMapItemStorage);
          if (GEOMapItemStorageReadAllFrom((uint64_t)v55, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            uint64_t v36 = 24;
            goto LABEL_49;
          }
          goto LABEL_98;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_99;
        }
        char v49 = 32 * *(unsigned char *)(a1 + 72);
        goto LABEL_85;
      case 2:
        if (!v31) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_99;
          }
          char v49 = 4 * *(unsigned char *)(a1 + 72);
LABEL_85:
          v7 += v49 >> 7;
LABEL_86:
          char v15 = v56;
          long long v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_87:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_88;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_99;
        }
        char v55 = objc_alloc_init(GEOWaypointTyped);
        if (GEOWaypointTypedReadAllFrom((uint64_t)v55, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v36 = 48;
LABEL_49:
          uint64_t v38 = *(void **)(a1 + v36);
          *(void *)(a1 + v36) = v55;
LABEL_68:

          --v7;
          goto LABEL_86;
        }
LABEL_98:

LABEL_99:
        char v50 = 0;
        char v15 = v56;
        long long v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_100:
        *(unsigned char *)(a1 + 72) |= 4u;
        *(unsigned char *)(a1 + 72) |= 0x20u;
        *(unsigned char *)(a1 + 72) |= 0x10u;
        *(unsigned char *)(a1 + 72) |= 2u;
        *(unsigned char *)(a1 + 72) |= 8u;
        if (v50)
        {
LABEL_101:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_102;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_102:
            char v53 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        while (2)
        {
          uint64_t v42 = *v17;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(v3 + *v19) + v43);
            *(void *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v27 = v40++ >= 9;
              if (v27)
              {
                uint64_t v41 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v41 = 0;
        }
LABEL_74:
        *(unsigned char *)(a1 + 68) = v41 != 0;
        goto LABEL_87;
      case 4:
        if (!v31) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x10) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 40;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_99;
        }
        char v49 = 8 * *(unsigned char *)(a1 + 72);
        goto LABEL_85;
      case 5:
        if (!v31) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 72) & 2) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 16;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_99;
        }
        char v49 = *(unsigned char *)(a1 + 72) << 6;
        goto LABEL_85;
      case 6:
        if (!v31)
        {
LABEL_69:
          char v48 = PBReaderSkipValueWithTag();
          long long v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v56;
          if ((v48 & 1) == 0)
          {
LABEL_97:
            char v50 = 0;
            goto LABEL_100;
          }
          goto LABEL_87;
        }
        if ((*(unsigned char *)(a1 + 72) & 8) == 0)
        {
          uint64_t v46 = PBReaderReadData();
          uint64_t v47 = 32;
LABEL_67:
          uint64_t v38 = *(void **)(a1 + v47);
          *(void *)(a1 + v47) = v46;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_99;
        }
        char v49 = 16 * *(unsigned char *)(a1 + 72);
        goto LABEL_85;
      default:
        int v37 = PBReaderSkipValueWithTag();
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v56;
        if (!v37) {
          goto LABEL_97;
        }
        goto LABEL_87;
    }
  }
}

void sub_1896C7F94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C816C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C82DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C844C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C8B30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionWaypointReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOCompanionWaypointReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOCompanionWaypointReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOCompanionWaypointReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOCompanionWaypointReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1896C8CEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionWaypointReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOCompanionWaypointReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896C8D50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C8F4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionWaypointIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 72);
  if ((v2 & 0x40) != 0) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    if (GEOMapItemStorageIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 72);
  }
  if ((v2 & 0x20) == 0) {
    goto LABEL_8;
  }
  if (GEOWaypointTypedIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
    return 1;
  }
  unsigned int v2 = *(unsigned __int8 *)(a1 + 72);
LABEL_8:
  if ((v2 & 0x12) != 0) {
    return 1;
  }
  return (v2 >> 3) & 1;
}

os_unfair_lock_s *GEOCompanionWaypointIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOCompanionWaypointIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1896C9414(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

__CFString *_geo_urlArgumentForTransportType(int a1, uint64_t a2)
{
  switch(a1)
  {
    case 0:
      id v3 = @"d";
      uint64_t v4 = @"driving";
      goto LABEL_9;
    case 1:
      id v3 = @"r";
      uint64_t v4 = @"transit";
      goto LABEL_9;
    case 2:
      id v3 = @"w";
      uint64_t v4 = @"walking";
      goto LABEL_9;
    case 3:
      id v3 = @"c";
      uint64_t v4 = @"cycling";
LABEL_9:
      if (a2 == 1) {
        id v3 = v4;
      }
      id v5 = v3;
      break;
    default:
      id v5 = 0;
      break;
  }
  return v5;
}

__CFString *_geo_urlArgumentForMapType(int a1, uint64_t a2)
{
  switch(a1)
  {
    case 0:
      uint64_t v2 = @"m";
      id v3 = @"explore";
      goto LABEL_8;
    case 1:
      uint64_t v2 = @"k";
      id v3 = @"satellite";
      goto LABEL_8;
    case 2:
      uint64_t v4 = @"h";
      break;
    case 3:
      uint64_t v2 = @"r";
      id v3 = @"transit";
      goto LABEL_8;
    case 4:
      uint64_t v2 = @"d";
      id v3 = @"driving";
LABEL_8:
      if (a2 == 1) {
        uint64_t v2 = v3;
      }
      uint64_t v4 = v2;
      break;
    default:
      uint64_t v4 = 0;
      break;
  }

  return v4;
}

void sub_1896CE5AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionAddressReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          char v15 = 0;
        }
        else {
          char v15 = a3;
        }
        BOOL v16 = v14 != 0;
        if (v14) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = v15 == 0;
        }
        BOOL v55 = v17;
        long long v18 = (int *)MEMORY[0x1E4F940E8];
        long long v19 = (int *)MEMORY[0x1E4F940C8];
        char v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_70;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_70:
      if (v16)
      {
        char v48 = 1;
        goto LABEL_85;
      }
      if (!v15) {
        goto LABEL_86;
      }
      while (1)
      {
        int v51 = *v15++;
        int v50 = v51;
        if (v51 == 1) {
          break;
        }
        if (v50 == 3)
        {
          char v49 = 2;
LABEL_76:
          *(unsigned char *)(a1 + 52) |= v49;
        }
        else if (!v50)
        {
          goto LABEL_86;
        }
      }
      char v49 = 4;
      goto LABEL_76;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v16;
    if (!v55)
    {
      int v33 = v15;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 4)
    {
      if (v8)
      {
        *(unsigned char *)(a1 + 52) |= 1u;
        uint64_t v39 = *v18;
        unint64_t v40 = *(void *)(v3 + v39);
        if (v40 <= 0xFFFFFFFFFFFFFFF7 && v40 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v41 = *(void *)(*(void *)(v3 + *v20) + v40);
          *(void *)(v3 + v39) = v40 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v41 = 0;
        }
        *(void *)(a1 + 32) = v41;
        goto LABEL_66;
      }
      goto LABEL_56;
    }
    if (v31 != 3) {
      break;
    }
    if (v32)
    {
      if ((*(unsigned char *)(a1 + 52) & 2) == 0)
      {
        uint64_t v42 = PBReaderReadString();
        uint64_t v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;

        --v9;
        goto LABEL_63;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_82:
        char v48 = 0;
        goto LABEL_84;
      }
      char v46 = *(unsigned char *)(a1 + 52) << 6;
LABEL_62:
      v9 += v46 >> 7;
      goto LABEL_63;
    }
LABEL_56:
    char v45 = PBReaderSkipValueWithTag();
    long long v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
LABEL_81:
      char v48 = 0;
      goto LABEL_85;
    }
LABEL_66:
    if (v9) {
      char v47 = 1;
    }
    else {
      char v47 = v16;
    }
    if ((v47 & 1) == 0) {
      goto LABEL_70;
    }
  }
  if (v31 != 1)
  {
    int v44 = PBReaderSkipValueWithTag();
    long long v19 = (int *)MEMORY[0x1E4F940C8];
    if (!v44) {
      goto LABEL_81;
    }
    goto LABEL_66;
  }
  if (!v32) {
    goto LABEL_56;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_82;
    }
    char v46 = 32 * *(unsigned char *)(a1 + 52);
    goto LABEL_62;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_82;
  }
  BOOL v54 = v16;
  int v37 = objc_alloc_init(GEOLocation);
  if (GEOLocationReadAllFrom((uint64_t)v37, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    uint64_t v38 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v37;

    --v9;
    BOOL v16 = v54;
LABEL_63:
    long long v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_66;
  }

  char v48 = 0;
  BOOL v16 = v54;
LABEL_84:
  long long v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
  *(unsigned char *)(a1 + 52) |= 4u;
  *(unsigned char *)(a1 + 52) |= 2u;
  if (v48)
  {
LABEL_86:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v16) {
      goto LABEL_87;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v16)
    {
LABEL_87:
      char v52 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_1896CEC30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896CF164(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionAddressReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOAddressCorrectionAddressReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOAddressCorrectionAddressReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOAddressCorrectionAddressReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOAddressCorrectionAddressReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1896CF30C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionAddressReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOAddressCorrectionAddressReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896CF370(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionAddressIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_34;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        goto LABEL_34;
      }
      unint64_t v18 = v8 >> 3;
      if ((v8 >> 3) == 4)
      {
        if (v16 != 1) {
          goto LABEL_36;
        }
        uint64_t v19 = *v2;
        unint64_t v20 = *(void *)&a1[v19];
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v21 = v20 + 8, v21 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v19] = v21;
        }
        else {
          a1[v14] = 1;
        }
        goto LABEL_31;
      }
      if (v18 == 3) {
        break;
      }
      if (v18 != 1) {
        goto LABEL_30;
      }
      if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1))
      {
LABEL_36:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_31:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_34;
      }
    }
    if (v16 != 2) {
      goto LABEL_36;
    }
LABEL_30:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_36;
    }
    goto LABEL_31;
  }
LABEL_34:
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_1896CF744(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAddressCorrectionAddressIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOAddressCorrectionAddressIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOAddressCorrectionAddressIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOAddressCorrectionAddressClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasAddressLocation]
    && ([a1 addressLocation],
        id v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    unsigned int v7 = [a1 addressLocation];
    unint64_t v8 = (_DWORD *)[v7 copy];

    GEOLocationClearSensitiveFields(v8);
    [a1 setAddressLocation:v8];
  }
  else
  {
    unint64_t v8 = [a1 addressLocation];
    [v8 clearSensitiveFields:a2];
  }
}

void *GEOAddressCorrectionAddressHasSensitiveFields(void *result)
{
  if (result)
  {
    id v1 = [result addressLocation];
    uint64_t HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_1896CFC18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896D00A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionInitRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 48) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v64 = v15;
  int v16 = (int *)MEMORY[0x1E4F940E8];
  BOOL v17 = (int *)MEMORY[0x1E4F940C8];
  unint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_86;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_86:
      if (v13)
      {
        char v58 = 1;
        goto LABEL_97;
      }
      if (!v14) {
        goto LABEL_98;
      }
      while (1)
      {
        int v60 = *v14++;
        int v59 = v60;
        if (v60 == 1) {
          break;
        }
        if (v59 == 2)
        {
          char v61 = 4;
LABEL_95:
          *(unsigned char *)(a1 + 48) |= v61;
        }
        else if (!v59)
        {
          goto LABEL_98;
        }
      }
      char v61 = 8;
      goto LABEL_95;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v64)
    {
      unint64_t v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 48) & 8) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 24;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_103;
        }
        char v56 = 16 * *(unsigned char *)(a1 + 48);
        goto LABEL_81;
      case 2:
        if (!v30) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 48) & 4) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 16;
LABEL_49:
          uint64_t v38 = *(void **)(a1 + v36);
          *(void *)(a1 + v36) = v35;

          BOOL v17 = (int *)MEMORY[0x1E4F940C8];
          --v9;
          goto LABEL_82;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v56 = 32 * *(unsigned char *)(a1 + 48);
LABEL_81:
          v9 += v56 >> 7;
          BOOL v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_82:
          if (v9) {
            char v57 = 1;
          }
          else {
            char v57 = v13;
          }
          if ((v57 & 1) == 0) {
            goto LABEL_86;
          }
          continue;
        }
LABEL_103:
        char v58 = 0;
        BOOL v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_97:
        *(unsigned char *)(a1 + 48) |= 8u;
        *(unsigned char *)(a1 + 48) |= 4u;
        if (v58)
        {
LABEL_98:
          unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
          if (v13) {
            goto LABEL_99;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v13)
          {
LABEL_99:
            char v62 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_66;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 48) |= 2u;
        while (2)
        {
          uint64_t v42 = *v16;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(v3 + *v18) + v43);
            *(void *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v26 = v40++ >= 9;
              if (v26)
              {
                uint64_t v41 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          uint64_t v41 = 0;
        }
LABEL_71:
        BOOL v54 = v41 != 0;
        uint64_t v55 = 45;
        goto LABEL_76;
      case 4:
        if (v8)
        {
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          *(unsigned char *)(a1 + 48) |= 1u;
          while (1)
          {
            uint64_t v49 = *v16;
            uint64_t v50 = *(void *)(v3 + v49);
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)(v3 + *v6)) {
              break;
            }
            char v52 = *(unsigned char *)(*(void *)(v3 + *v18) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if ((v52 & 0x80) == 0) {
              goto LABEL_73;
            }
            v46 += 7;
            BOOL v26 = v47++ >= 9;
            if (v26)
            {
              uint64_t v48 = 0;
              goto LABEL_75;
            }
          }
          *(unsigned char *)(v3 + *v17) = 1;
LABEL_73:
          if (*(unsigned char *)(v3 + *v17)) {
            uint64_t v48 = 0;
          }
LABEL_75:
          BOOL v54 = v48 != 0;
          uint64_t v55 = 44;
LABEL_76:
          *(unsigned char *)(a1 + v55) = v54;
        }
        else
        {
LABEL_66:
          char v53 = PBReaderSkipValueWithTag();
          BOOL v17 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
LABEL_96:
            char v58 = 0;
            goto LABEL_97;
          }
        }
        goto LABEL_82;
      default:
        int v37 = PBReaderSkipValueWithTag();
        BOOL v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v37) {
          goto LABEL_96;
        }
        goto LABEL_82;
    }
  }
}

void sub_1896D079C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896D0D74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionInitRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOAddressCorrectionInitRequestReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOAddressCorrectionInitRequestReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOAddressCorrectionInitRequestReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOAddressCorrectionInitRequestReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1896D0F04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionInitRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOAddressCorrectionInitRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896D0F68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionInitRequestIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_44;
          }
          goto LABEL_22;
        case 2u:
          if (v15 == 2) {
            goto LABEL_22;
          }
          goto LABEL_44;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_40;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_41;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_22:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_44:
          BOOL v28 = 0;
          goto LABEL_43;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_41;
      }
LABEL_40:
      a1[*v4] = 1;
LABEL_41:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v28;
}

void sub_1896D13C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionInitRequestIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 48) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_1896D1728(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896D1F48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionInitResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v8)) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        LODWORD(v16) = v14;
        char v62 = (v15 == 0) | v14;
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_87;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_87:
      if (v16)
      {
        char v56 = 1;
        goto LABEL_99;
      }
      if (v15)
      {
        while (1)
        {
          int v58 = *v15++;
          char v57 = 8;
          switch(v58)
          {
            case 0:
              goto LABEL_100;
            case 2:
              goto LABEL_93;
            case 3:
              char v57 = 4;
              goto LABEL_93;
            case 5:
              char v57 = 16;
LABEL_93:
              *(unsigned char *)(a1 + 60) |= v57;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_100;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v62 & 1) == 0)
    {
      int v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_72;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_74;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_72:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_74:
        uint64_t v54 = 56;
        goto LABEL_79;
      case 2:
        if (!v31) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_96;
          }
          char v55 = 16 * *(unsigned char *)(a1 + 60);
          goto LABEL_84;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_96;
        }
        int v61 = (int)v16;
        int v16 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_97;
        }
        PBReaderRecallMark();
        unint64_t v44 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v16;

        --v7;
        goto LABEL_68;
      case 3:
        if (!v31) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_96:
            char v56 = 0;
            goto LABEL_98;
          }
          char v55 = 32 * *(unsigned char *)(a1 + 60);
LABEL_84:
          v7 += v55 >> 7;
        }
        else
        {
          uint64_t v45 = PBReaderReadString();
          char v46 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v45;

          --v7;
        }
        goto LABEL_85;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v49 = *v17;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v19) + v50);
            *(void *)(v3 + v49) = v51;
            v38 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              BOOL v27 = v48++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_78:
        uint64_t v54 = 52;
LABEL_79:
        *(_DWORD *)(a1 + v54) = v38;
        goto LABEL_86;
      case 5:
        if (!v31 || (*(unsigned char *)(a1 + 60) & 0x10) != 0)
        {
LABEL_69:
          char v53 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
LABEL_95:
            char v56 = 0;
            goto LABEL_99;
          }
LABEL_86:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_87;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_96;
        }
        int v61 = (int)v16;
        int v16 = objc_alloc_init(GEOAddressCorrectionAddress);
        if (GEOAddressCorrectionAddressReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOAddressCorrectionInitResponse _addNoFlagsAddress:](a1, v16);

LABEL_68:
          LODWORD(v16) = v61;
LABEL_85:
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_86;
        }
LABEL_97:

        char v56 = 0;
        LOBYTE(v16) = v61;
LABEL_98:
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_99:
        *(unsigned char *)(a1 + 60) |= 8u;
        *(unsigned char *)(a1 + 60) |= 4u;
        *(unsigned char *)(a1 + 60) |= 0x10u;
        if (v56)
        {
LABEL_100:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_101;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_101:
            int v59 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v43 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v43) {
          goto LABEL_95;
        }
        goto LABEL_86;
    }
  }
}

void sub_1896D27A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896D29D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896D3644(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOAddressCorrectionInitResponseCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 24) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOAddressCorrectionInitResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOAddressCorrectionInitResponseReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOAddressCorrectionInitResponseReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOAddressCorrectionInitResponseReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOAddressCorrectionInitResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOAddressCorrectionInitResponseCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1896D38F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionInitResponseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOAddressCorrectionInitResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896D3954(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionInitResponseIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_42;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_47;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1)) {
            goto LABEL_50;
          }
          goto LABEL_46;
        case 3u:
          if (v15 == 2) {
            goto LABEL_32;
          }
          goto LABEL_50;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v23 = 0;
          break;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAddressCorrectionAddressIsValid(a1)) {
            goto LABEL_50;
          }
LABEL_46:
          PBReaderRecallMark();
          continue;
        default:
LABEL_32:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_50:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_47;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_47:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_1896D3EC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAddressCorrectionInitResponseIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 60);
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 60);
  }
  if ((v2 & 0x14) != 0) {
    return 1;
  }
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 32);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOAddressCorrectionAddressIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_20;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_20:

  return v3;
}

os_unfair_lock_s *GEOAddressCorrectionInitResponseIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOAddressCorrectionInitResponseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOAddressCorrectionInitResponseClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasAddressLocation]
    && ([a1 addressLocation],
        uint64_t v6 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v6),
        v6,
        HasSensitiveFields))
  {
    long long v8 = [a1 addressLocation];
    long long v9 = (_DWORD *)[v8 copy];

    GEOLocationClearSensitiveFields(v9);
    [a1 setAddressLocation:v9];
  }
  else
  {
    long long v9 = [a1 addressLocation];
    [v9 clearSensitiveFields:a2];
  }

  -[GEOAddressCorrectionInitResponse _readAddress]((uint64_t)a1);
  unint64_t result = [a1[4] count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      char v12 = [a1[4] objectAtIndexedSubscript:i];
      uint64_t v13 = v12;
      if (a3 && GEOAddressCorrectionAddressHasSensitiveFields(v12))
      {
        int v14 = (void *)[v13 copy];
        int v15 = [v14 addressLocation];
        [v15 clearSensitiveFields:a2];

        [a1[4] replaceObjectAtIndex:i withObject:v14];
      }
      else
      {
        [v13 clearSensitiveFields:a2];
      }

      unint64_t result = [a1[4] count];
    }
  }
  return result;
}

uint64_t GEOAddressCorrectionInitResponseHasSensitiveFields(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  char v2 = [a1 addressLocation];
  char HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v2);

  if (HasSensitiveFields) {
    return 1;
  }
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v5 = objc_msgSend(a1, "address", 0);
  uint64_t v6 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v12;
    while (2)
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v12 != v8) {
          objc_enumerationMutation(v5);
        }
        if (GEOAddressCorrectionAddressHasSensitiveFields(*(void **)(*((void *)&v11 + 1) + 8 * v9)))
        {
          uint64_t v4 = 1;
          goto LABEL_15;
        }
        ++v9;
      }
      while (v7 != v9);
      uint64_t v7 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v7) {
        continue;
      }
      break;
    }
  }
  uint64_t v4 = 0;
LABEL_15:

  return v4;
}

void sub_1896D48C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896D4E90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          uint64_t v16 = 0;
        }
        else {
          uint64_t v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v46 = v17;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_58;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_25;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_58:
      if (v15)
      {
        char v41 = 1;
        goto LABEL_68;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            int v43 = *v16++;
            int v42 = v43;
            if (v43 != 1 && v42 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_69;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v15;
    if (!v46)
    {
      int v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (!v32) {
        goto LABEL_50;
      }
      if (*(unsigned char *)(a1 + 44))
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_67:
          char v41 = 0;
          goto LABEL_68;
        }
        v9 -= *(unsigned char *)(a1 + 44) & 1;
      }
      else
      {
        uint64_t v37 = PBReaderReadString();
        uint64_t v38 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v37;

        --v9;
      }
    }
    else if (!PBReaderSkipValueWithTag())
    {
      goto LABEL_67;
    }
LABEL_51:
    if (v9) {
      char v40 = 1;
    }
    else {
      char v40 = v15;
    }
    if ((v40 & 1) == 0) {
      goto LABEL_58;
    }
  }
  if (!v32 || (*(unsigned char *)(a1 + 44) & 2) != 0)
  {
LABEL_50:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_67;
    }
    goto LABEL_51;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_67;
  }
  uint64_t v39 = objc_alloc_init(GEOSignificantLocation);
  if (GEOSignificantLocationReadAllFrom((uint64_t)v39, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOAddressCorrectionResult _addNoFlagsSignificantLocation:](a1, v39);

    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_51;
  }

  char v41 = 0;
  uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_68:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v41)
  {
LABEL_69:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (!v15) {
      return v3;
    }
    goto LABEL_70;
  }
  unint64_t v3 = 0;
  if (v15)
  {
LABEL_70:
    unint64_t v44 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1896D5434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896D5CB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOAddressCorrectionResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOAddressCorrectionResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOAddressCorrectionResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOAddressCorrectionResultReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOAddressCorrectionResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOAddressCorrectionResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOAddressCorrectionResultCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1896D5F48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionResultReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOAddressCorrectionResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896D5FAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionResultIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOSignificantLocationIsValid(a1)) {
          goto LABEL_29;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOSignificantLocationIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOLocationIsValid(a1)) {
            goto LABEL_50;
          }
          goto LABEL_56;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_39;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_51;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v24 = 0;
          break;
        case 4u:
          if (v16 == 2) {
            goto LABEL_41;
          }
          goto LABEL_56;
        case 5u:
          if (v16 != 1) {
            goto LABEL_56;
          }
          uint64_t v29 = *v2;
          unint64_t v30 = *(void *)&a1[v29];
          if (v30 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_46;
          }
          unint64_t v31 = v30 + 8;
          if (v31 > *(void *)&a1[*v3]) {
            goto LABEL_46;
          }
          *(void *)&a1[v29] = v31;
          continue;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOStructuredAddressIsValid(a1)) {
            goto LABEL_56;
          }
LABEL_50:
          PBReaderRecallMark();
          continue;
        default:
LABEL_41:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_56:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v25 = *v2;
        uint64_t v26 = *(void *)&a1[v25];
        unint64_t v27 = v26 + 1;
        if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
          break;
        }
        int v28 = *(char *)(*(void *)&a1[*v5] + v26);
        *(void *)&a1[v25] = v27;
        if (v28 < 0)
        {
          BOOL v23 = v24++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_51;
      }
LABEL_39:
      uint64_t v14 = *v4;
LABEL_46:
      a1[v14] = 1;
LABEL_51:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

void sub_1896D66E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAddressCorrectionResultIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 44) & 7) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOSignificantLocationIsDirty(*(os_unfair_lock_s **)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOAddressCorrectionResultIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOAddressCorrectionResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOAddressCorrectionResultClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  -[GEOAddressCorrectionResult _readSignificantLocations](a1);
  unint64_t result = [*(id *)(a1 + 24) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      long long v8 = [*(id *)(a1 + 24) objectAtIndexedSubscript:i];
      long long v9 = v8;
      if (a3 && GEOSignificantLocationHasSensitiveFields(v8))
      {
        long long v10 = (void *)[v9 copy];
        unint64_t v11 = [v10 location];
        [v11 clearSensitiveFields:a2];

        [*(id *)(a1 + 24) replaceObjectAtIndex:i withObject:v10];
      }
      else
      {
        [v9 clearSensitiveFields:a2];
      }

      unint64_t result = [*(id *)(a1 + 24) count];
    }
  }
  return result;
}

uint64_t GEOAddressCorrectionResultHasSensitiveFields(void *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = objc_msgSend(a1, "significantLocations", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v9;
    while (2)
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v9 != v4) {
          objc_enumerationMutation(v1);
        }
        if (GEOSignificantLocationHasSensitiveFields(*(void **)(*((void *)&v8 + 1) + 8 * v5)))
        {
          uint64_t v6 = 1;
          goto LABEL_12;
        }
        ++v5;
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v6 = 0;
LABEL_12:

  return v6;
}

void *GEOSignificantLocationHasSensitiveFields(void *result)
{
  if (result)
  {
    id v1 = [result location];
    uint64_t HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void GEOSignificantLocationClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasLocation]
    && ([a1 location],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    long long v7 = [a1 location];
    long long v8 = (_DWORD *)[v7 copy];

    GEOLocationClearSensitiveFields(v8);
    [a1 setLocation:v8];
  }
  else
  {
    long long v8 = [a1 location];
    [v8 clearSensitiveFields:a2];
  }
}

void sub_1896D7008(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionTaggedLocationRequestReadAllFrom(void *a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    long long v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          uint64_t v20 = objc_alloc_init(GEOSignificantLocation);
          if (!GEOSignificantLocationReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addSignificantLocation:", v20, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v21 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v21 = 0;
  }
  objc_sync_exit(v5);

  return v21;
}

void sub_1896D79D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionTaggedLocationRequestReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOAddressCorrectionTaggedLocationRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896D7A3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionTaggedLocationRequestIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOSignificantLocationIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

unint64_t GEOAddressCorrectionTaggedLocationRequestClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result = [*(id *)(a1 + 8) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      unint64_t v8 = [*(id *)(a1 + 8) objectAtIndexedSubscript:i];
      uint64_t v9 = v8;
      if (a3 && GEOSignificantLocationHasSensitiveFields(v8))
      {
        uint64_t v10 = (void *)[v9 copy];
        unint64_t v11 = [v10 location];
        [v11 clearSensitiveFields:a2];

        [*(id *)(a1 + 8) replaceObjectAtIndex:i withObject:v10];
      }
      else
      {
        [v9 clearSensitiveFields:a2];
      }

      unint64_t result = [*(id *)(a1 + 8) count];
    }
  }
  return result;
}

uint64_t GEOAddressCorrectionTaggedLocationRequestHasSensitiveFields(void *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = objc_msgSend(a1, "significantLocations", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v9;
    while (2)
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v9 != v4) {
          objc_enumerationMutation(v1);
        }
        if (GEOSignificantLocationHasSensitiveFields(*(void **)(*((void *)&v8 + 1) + 8 * v5)))
        {
          uint64_t v6 = 1;
          goto LABEL_12;
        }
        ++v5;
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v6 = 0;
LABEL_12:

  return v6;
}

BOOL GEOAddressCorrectionTaggedLocationResponseReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)&v2[v11];
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)&v2[*v4]) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v16 = 1;
      }
      else {
        BOOL v16 = (v10 & 7) == 4;
      }
      if (v16) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v17 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v17 = 0;
  }
  objc_sync_exit(v2);

  return v17;
}

void sub_1896D8668(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionTaggedLocationResponseReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOAddressCorrectionTaggedLocationResponseReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_1896D86C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionTaggedLocationResponseIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      uint64_t v11 = *(void *)&a1[v10];
      unint64_t v12 = v11 + 1;
      if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v9 & 7) == 4;
    }
    if (v15) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v16 = 0;
      goto LABEL_22;
    }
  }
  BOOL v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

void sub_1896D8C4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionUpdateRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v8)) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        LODWORD(v16) = v14;
        char v53 = (v15 == 0) | v14;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        int v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_71;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_71:
      if (v16)
      {
        char v47 = 1;
        goto LABEL_82;
      }
      if (v15)
      {
        while (1)
        {
          int v48 = *v15++;
          char v49 = 8;
          switch(v48)
          {
            case 0:
              goto LABEL_83;
            case 2:
              goto LABEL_77;
            case 3:
              char v49 = 2;
              goto LABEL_77;
            case 4:
              char v49 = 4;
LABEL_77:
              *(unsigned char *)(a1 + 56) |= v49;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_83;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v53 & 1) == 0)
    {
      BOOL v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_61;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_64;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_66;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_64:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_66:
        *(_DWORD *)(a1 + 52) = v38;
        goto LABEL_70;
      case 2:
        if (!v31 || (*(unsigned char *)(a1 + 56) & 8) != 0) {
          goto LABEL_61;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_79;
        }
        int v52 = (int)v16;
        BOOL v16 = objc_alloc_init(GEOSignificantLocation);
        if (!GEOSignificantLocationReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_80;
        }
        PBReaderRecallMark();
        -[GEOAddressCorrectionUpdateRequest _addNoFlagsSignificantLocation:](a1, v16);
        goto LABEL_60;
      case 3:
        if (!v31) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + 56) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_79:
            char v47 = 0;
            goto LABEL_81;
          }
          v7 += *(unsigned __int8 *)(a1 + 56) << 30 >> 31;
        }
        else
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v44;

          --v7;
        }
        goto LABEL_69;
      case 4:
        if (!v31 || (*(unsigned char *)(a1 + 56) & 4) != 0)
        {
LABEL_61:
          char v46 = PBReaderSkipValueWithTag();
          int v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v46 & 1) == 0)
          {
LABEL_78:
            char v47 = 0;
            goto LABEL_82;
          }
LABEL_70:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_71;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_79;
        }
        int v52 = (int)v16;
        BOOL v16 = objc_alloc_init(GEOAddressCorrectionResult);
        if (GEOAddressCorrectionResultReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOAddressCorrectionUpdateRequest _addNoFlagsAddressResult:](a1, v16);
LABEL_60:

          LODWORD(v16) = v52;
LABEL_69:
          int v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_70;
        }
LABEL_80:

        char v47 = 0;
        LOBYTE(v16) = v52;
LABEL_81:
        int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_82:
        *(unsigned char *)(a1 + 56) |= 8u;
        *(unsigned char *)(a1 + 56) |= 2u;
        *(unsigned char *)(a1 + 56) |= 4u;
        if (v47)
        {
LABEL_83:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_84;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_84:
            uint64_t v50 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v43 = PBReaderSkipValueWithTag();
        int v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v43) {
          goto LABEL_78;
        }
        goto LABEL_70;
    }
  }
}

void sub_1896D960C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896D977C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896DA350(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOAddressCorrectionUpdateRequestCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 24);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOAddressCorrectionUpdateRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOAddressCorrectionUpdateRequestReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOAddressCorrectionUpdateRequestReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOAddressCorrectionUpdateRequestReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOAddressCorrectionUpdateRequestReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOAddressCorrectionUpdateRequestCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1896DA680(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionUpdateRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOAddressCorrectionUpdateRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896DA6E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionUpdateRequestIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_41;
          }
          unsigned int v17 = 0;
          do
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_39;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0) {
              break;
            }
          }
          while (v17++ <= 8);
          goto LABEL_39;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOSignificantLocationIsValid(a1)) {
            goto LABEL_41;
          }
          goto LABEL_37;
        case 3u:
          if (v15 == 2) {
            goto LABEL_32;
          }
          goto LABEL_41;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAddressCorrectionResultIsValid(a1)) {
            goto LABEL_41;
          }
LABEL_37:
          PBReaderRecallMark();
          goto LABEL_39;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_41:
            PBReaderRecallMark();
            return 0;
          }
LABEL_39:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_40;
          }
          break;
      }
    }
  }
LABEL_40:
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_1896DAC64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAddressCorrectionUpdateRequestIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 56) & 0x1E) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOAddressCorrectionResultIsDirty(*(os_unfair_lock_s **)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOAddressCorrectionUpdateRequestIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOAddressCorrectionUpdateRequestIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOAddressCorrectionUpdateRequestClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  -[GEOAddressCorrectionUpdateRequest _readSignificantLocations](a1);
  if ([*(id *)(a1 + 32) count])
  {
    unint64_t v6 = 0;
    do
    {
      long long v7 = [*(id *)(a1 + 32) objectAtIndexedSubscript:v6];
      long long v8 = v7;
      if (a3 && GEOSignificantLocationHasSensitiveFields(v7))
      {
        long long v9 = (void *)[v8 copy];
        long long v10 = [v9 location];
        [v10 clearSensitiveFields:a2];

        [*(id *)(a1 + 32) replaceObjectAtIndex:v6 withObject:v9];
      }
      else
      {
        [v8 clearSensitiveFields:a2];
      }

      ++v6;
    }
    while (v6 < [*(id *)(a1 + 32) count]);
  }
  -[GEOAddressCorrectionUpdateRequest _readAddressResults](a1);
  unint64_t result = [*(id *)(a1 + 24) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      long long v13 = [*(id *)(a1 + 24) objectAtIndexedSubscript:i];
      int v14 = v13;
      if (a3 && GEOAddressCorrectionResultHasSensitiveFields(v13))
      {
        int v15 = (void *)[v14 copy];
        GEOAddressCorrectionResultClearSensitiveFields((uint64_t)v15, a2, 0);
        [*(id *)(a1 + 24) replaceObjectAtIndex:i withObject:v15];
      }
      else
      {
        [v14 clearSensitiveFields:a2];
      }

      unint64_t result = [*(id *)(a1 + 24) count];
    }
  }
  return result;
}

uint64_t GEOAddressCorrectionUpdateRequestHasSensitiveFields(void *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v2 = [a1 significantLocations];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
LABEL_4:
    uint64_t v6 = 0;
    while (1)
    {
      if (*(void *)v18 != v5) {
        objc_enumerationMutation(v2);
      }
      if (GEOSignificantLocationHasSensitiveFields(*(void **)(*((void *)&v17 + 1) + 8 * v6))) {
        goto LABEL_19;
      }
      if (v4 == ++v6)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
        if (v4) {
          goto LABEL_4;
        }
        break;
      }
    }
  }

  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  uint64_t v2 = objc_msgSend(a1, "addressResults", 0);
  uint64_t v7 = [v2 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v14;
LABEL_12:
    uint64_t v10 = 0;
    while (1)
    {
      if (*(void *)v14 != v9) {
        objc_enumerationMutation(v2);
      }
      if (GEOAddressCorrectionResultHasSensitiveFields(*(void **)(*((void *)&v13 + 1) + 8 * v10))) {
        break;
      }
      if (v8 == ++v10)
      {
        uint64_t v8 = [v2 countByEnumeratingWithState:&v13 objects:v21 count:16];
        if (v8) {
          goto LABEL_12;
        }
        goto LABEL_18;
      }
    }
LABEL_19:
    uint64_t v11 = 1;
    goto LABEL_20;
  }
LABEL_18:
  uint64_t v11 = 0;
LABEL_20:

  return v11;
}

void sub_1896DB7EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionUpdateResponseReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_30;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_32:
          *(_DWORD *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_1896DC0A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionUpdateResponseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOAddressCorrectionUpdateResponseReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896DC10C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionUpdateResponseIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

void sub_1896DC718(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSignificantLocationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 68) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 3) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v8)) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        LODWORD(v16) = v14;
        char v66 = (v15 == 0) | v14;
        uint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_95;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_95:
      if (v16)
      {
        char v60 = 1;
        goto LABEL_106;
      }
      if (v15)
      {
        while (1)
        {
          int v61 = *v15++;
          char v62 = 32;
          switch(v61)
          {
            case 0:
              goto LABEL_107;
            case 1:
              goto LABEL_101;
            case 4:
              char v62 = 16;
              goto LABEL_101;
            case 6:
              char v62 = 8;
LABEL_101:
              *(unsigned char *)(a1 + 68) |= v62;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_107;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v66 & 1) == 0)
    {
      BOOL v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x20) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_103;
          }
          int v65 = (int)v16;
          unsigned int v16 = objc_alloc_init(GEOLocation);
          if (GEOLocationReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            uint64_t v36 = 40;
            goto LABEL_72;
          }
          goto LABEL_104;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_103;
        }
        char v59 = 4 * *(unsigned char *)(a1 + 68);
        goto LABEL_90;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_73;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (2)
        {
          uint64_t v41 = *v17;
          uint64_t v42 = *(void *)(v3 + v41);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(v3 + *v19) + v42);
            *(void *)(v3 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              BOOL v27 = v39++ >= 9;
              if (v27)
              {
                LODWORD(v40) = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v40) = 0;
        }
LABEL_78:
        uint64_t v58 = 60;
        goto LABEL_83;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_73;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 68) |= 4u;
        while (2)
        {
          uint64_t v47 = *v17;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v19) + v48);
            *(void *)(v3 + v47) = v49;
            v40 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              BOOL v27 = v46++ >= 9;
              if (v27)
              {
                LODWORD(v40) = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v40) = 0;
        }
LABEL_82:
        uint64_t v58 = 64;
LABEL_83:
        *(_DWORD *)(a1 + v58) = v40;
        goto LABEL_94;
      case 4:
        if (!v31) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v51 = PBReaderReadString();
          int v52 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v51;

          --v7;
          goto LABEL_91;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_103;
        }
        char v59 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_90;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_73;
        }
        *(unsigned char *)(a1 + 68) |= 1u;
        uint64_t v53 = *v17;
        unint64_t v54 = *(void *)(v3 + v53);
        if (v54 <= 0xFFFFFFFFFFFFFFF7 && v54 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v55 = *(void *)(*(void *)(v3 + *v19) + v54);
          *(void *)(v3 + v53) = v54 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v55 = 0;
        }
        *(void *)(a1 + 24) = v55;
        goto LABEL_94;
      case 6:
        if (!v31)
        {
LABEL_73:
          char v57 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v57 & 1) == 0)
          {
LABEL_102:
            char v60 = 0;
            goto LABEL_106;
          }
LABEL_94:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_95;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_103:
            char v60 = 0;
            goto LABEL_105;
          }
          char v59 = 16 * *(unsigned char *)(a1 + 68);
LABEL_90:
          v7 += v59 >> 7;
          goto LABEL_91;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_103;
        }
        int v65 = (int)v16;
        unsigned int v16 = objc_alloc_init(GEOStructuredAddress);
        if (GEOStructuredAddressReadAllFrom(v16, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v36 = 16;
LABEL_72:
          char v56 = *(void **)(a1 + v36);
          *(void *)(a1 + v36) = v16;

          --v7;
          LODWORD(v16) = v65;
LABEL_91:
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_94;
        }
LABEL_104:

        char v60 = 0;
        LOBYTE(v16) = v65;
LABEL_105:
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_106:
        *(unsigned char *)(a1 + 68) |= 0x20u;
        *(unsigned char *)(a1 + 68) |= 0x10u;
        *(unsigned char *)(a1 + 68) |= 8u;
        if (v60)
        {
LABEL_107:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_108;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_108:
            char v63 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v37 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v37) {
          goto LABEL_102;
        }
        goto LABEL_94;
    }
  }
}

void sub_1896DD0F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896DD2D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896DD988(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSignificantLocationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOSignificantLocationReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOSignificantLocationReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOSignificantLocationReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOSignificantLocationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1896DDB30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSignificantLocationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOSignificantLocationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896DDB94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896DDD98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOSignificantLocationIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x40) != 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  }
  if ((v2 & 0x10) == 0) {
    return (v2 >> 3) & 1;
  }
  return 1;
}

os_unfair_lock_s *GEOSignificantLocationIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOSignificantLocationIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1896DE228(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896DE828(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCategoryRatingReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          unsigned int v16 = 0;
        }
        else {
          unsigned int v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v46 = v17;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        char v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_60;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_25;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_60:
      if (v15)
      {
        char v41 = 1;
        goto LABEL_70;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            int v43 = *v16++;
            int v42 = v43;
            if (v43 != 1 && v42 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_71;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v15;
    if (!v46)
    {
      BOOL v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 2) {
      break;
    }
    if (v30 == 1)
    {
      if (v31)
      {
        if (*(unsigned char *)(a1 + 44))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_69;
          }
          v9 -= *(unsigned char *)(a1 + 44) & 1;
        }
        else
        {
          uint64_t v36 = PBReaderReadString();
          int v37 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v36;

          --v9;
        }
        goto LABEL_56;
      }
LABEL_50:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_69;
      }
      goto LABEL_56;
    }
    if (!PBReaderSkipValueWithTag()) {
      goto LABEL_69;
    }
LABEL_56:
    if (v9) {
      char v40 = 1;
    }
    else {
      char v40 = v15;
    }
    if ((v40 & 1) == 0) {
      goto LABEL_60;
    }
  }
  if (!v31) {
    goto LABEL_50;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_69:
      char v41 = 0;
      goto LABEL_70;
    }
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_56;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_69;
  }
  char v38 = objc_alloc_init(GEORPRatingValue);
  if (GEORPRatingValueReadAllFrom((uint64_t)v38, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    unsigned int v39 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v38;

    --v9;
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_56;
  }

  char v41 = 0;
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_70:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v41)
  {
LABEL_71:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (!v15) {
      return v3;
    }
    goto LABEL_72;
  }
  unint64_t v3 = 0;
  if (v15)
  {
LABEL_72:
    char v44 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1896DEE00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896DF23C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCategoryRatingReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPCategoryRatingReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPCategoryRatingReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPCategoryRatingReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPCategoryRatingReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1896DF3E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCategoryRatingReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPCategoryRatingReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896DF448(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCategoryRatingIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPRatingValueIsValid(a1)) {
          goto LABEL_29;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEORPRatingValueIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          unint64_t v18 = *(void *)&a1[v17];
          if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v19 = v18 + 1;
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_1896DF9F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCategoryRatingIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_1896DFC94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896E002C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPEnrichmentImageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    int v14 = 0;
  }
  else {
    int v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  unsigned int v16 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
  unint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_62;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      unint64_t v23 = *(void *)(v3 + v22);
      if (v23 == -1 || v23 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        char v40 = 1;
        goto LABEL_72;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            int v42 = *v14++;
            int v41 = v42;
            if (v42 != 1 && v41 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v41;
          }
        }
        while (v41);
      }
      goto LABEL_73;
    }
    unint64_t v28 = v21 >> 3;
    BOOL v29 = v13;
    if (!v15)
    {
      unint64_t v30 = v14;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    if (v28 != 2)
    {
      if (v28 != 1)
      {
        int v37 = PBReaderSkipValueWithTag();
        uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v37) {
          goto LABEL_70;
        }
        goto LABEL_58;
      }
      if (v29)
      {
        if ((*(unsigned char *)(a1 + 44) & 1) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 16;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_71;
        }
        v9 -= *(unsigned char *)(a1 + 44) & 1;
LABEL_57:
        uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_58:
        if (v9) {
          char v39 = 1;
        }
        else {
          char v39 = v13;
        }
        if ((v39 & 1) == 0) {
          goto LABEL_62;
        }
        continue;
      }
LABEL_51:
      char v38 = PBReaderSkipValueWithTag();
      uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
      if ((v38 & 1) == 0)
      {
LABEL_70:
        char v40 = 0;
        goto LABEL_72;
      }
      goto LABEL_58;
    }
    break;
  }
  if (!v29) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0)
  {
    uint64_t v34 = PBReaderReadString();
    uint64_t v35 = 24;
LABEL_48:
    uint64_t v36 = *(void **)(a1 + v35);
    *(void *)(a1 + v35) = v34;

    uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
    --v9;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_57;
  }
LABEL_71:
  char v40 = 0;
  uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v40)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if (!v13) {
      return v3;
    }
    goto LABEL_74;
  }
  unint64_t v3 = 0;
  if (v13)
  {
LABEL_74:
    int v43 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1896E0570(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896E0974(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPEnrichmentImageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPEnrichmentImageReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPEnrichmentImageReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPEnrichmentImageReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPEnrichmentImageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1896E0B04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPEnrichmentImageReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPEnrichmentImageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896E0B68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPEnrichmentImageIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v16 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v14 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v16 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v16;
}

void sub_1896E0EB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPEnrichmentImageIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_1896E1158(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896E14DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPImageUpdateReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -3:
        char v7 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v7)) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        LODWORD(v16) = v14;
        uint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        char v54 = (v15 == 0) | v14;
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_74;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_74:
      if (v16)
      {
        char v48 = 1;
        goto LABEL_85;
      }
      if (v15)
      {
        while (1)
        {
          int v49 = *v15++;
          char v50 = 2;
          switch(v49)
          {
            case 0:
              goto LABEL_86;
            case 1:
              goto LABEL_80;
            case 2:
              char v50 = 8;
              goto LABEL_80;
            case 4:
              char v50 = 4;
LABEL_80:
              *(unsigned char *)(a1 + 56) |= v50;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_86;
    }
    unint64_t v29 = v22 >> 3;
    BOOL v30 = (char)v16;
    if ((v54 & 1) == 0)
    {
      int v31 = v15;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30) {
          goto LABEL_59;
        }
        if ((*(unsigned char *)(a1 + 56) & 2) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 16;
          goto LABEL_45;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_82;
        }
        char v47 = *(unsigned char *)(a1 + 56) << 6;
        goto LABEL_71;
      case 2:
        if (!v30) {
          goto LABEL_59;
        }
        if ((*(unsigned char *)(a1 + 56) & 8) == 0)
        {
          uint64_t v35 = PBReaderReadData();
          uint64_t v36 = 32;
LABEL_45:
          char v38 = *(void **)(a1 + v36);
          *(void *)(a1 + v36) = v35;

          --v8;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_82;
        }
        char v47 = 16 * *(unsigned char *)(a1 + 56);
        goto LABEL_71;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_59;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (2)
        {
          uint64_t v42 = *v17;
          unint64_t v43 = *(void *)(v3 + v42);
          if (v43 == -1 || v43 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(v3 + *v19) + v43);
            *(void *)(v3 + v42) = v43 + 1;
            v41 |= (unint64_t)(v44 & 0x7F) << v39;
            if (v44 < 0)
            {
              v39 += 7;
              BOOL v26 = v40++ >= 9;
              if (v26)
              {
                LODWORD(v41) = 0;
                goto LABEL_64;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v41) = 0;
        }
LABEL_64:
        *(_DWORD *)(a1 + 52) = v41;
        goto LABEL_73;
      case 4:
        if (!v30)
        {
LABEL_59:
          char v46 = PBReaderSkipValueWithTag();
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v46 & 1) == 0)
          {
LABEL_81:
            char v48 = 0;
            goto LABEL_85;
          }
LABEL_73:
          if (!(v16 & 1 | (v8 != 0))) {
            goto LABEL_74;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 56) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_82:
            char v48 = 0;
            goto LABEL_84;
          }
          char v47 = 32 * *(unsigned char *)(a1 + 56);
LABEL_71:
          v8 += v47 >> 7;
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_82;
        }
        int v53 = (int)v16;
        BOOL v16 = objc_alloc_init(GEORPPhotoMetadata);
        if (GEORPPhotoMetadataReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          char v45 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v16;

          --v8;
          LODWORD(v16) = v53;
LABEL_72:
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_73;
        }

        char v48 = 0;
        LOBYTE(v16) = v53;
LABEL_84:
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
        *(unsigned char *)(a1 + 56) |= 2u;
        *(unsigned char *)(a1 + 56) |= 8u;
        *(unsigned char *)(a1 + 56) |= 4u;
        if (v48)
        {
LABEL_86:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_87;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_87:
            uint64_t v51 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v37 = PBReaderSkipValueWithTag();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v37) {
          goto LABEL_81;
        }
        goto LABEL_73;
    }
  }
}

void sub_1896E1C64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896E1F94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896E2640(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPImageUpdateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPImageUpdateReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPImageUpdateReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPImageUpdateReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPImageUpdateReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1896E27E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPImageUpdateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPImageUpdateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896E284C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPImageUpdateIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2) {
            goto LABEL_40;
          }
          goto LABEL_22;
        case 2u:
          if (v14 == 2) {
            goto LABEL_22;
          }
          goto LABEL_40;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_40;
          }
          unsigned int v16 = 0;
          break;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPPhotoMetadataIsValid(a1)) {
            goto LABEL_40;
          }
          PBReaderRecallMark();
          continue;
        default:
LABEL_22:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_40:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v17 = *v2;
        unint64_t v18 = *(void *)&a1[v17];
        if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v19 = v18 + 1;
        int v20 = *(char *)(*(void *)&a1[*v5] + v18);
        *(void *)&a1[v17] = v19;
        if (v20 < 0 && v16++ <= 8) {
          continue;
        }
        goto LABEL_37;
      }
      a1[*v4] = 1;
LABEL_37:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_1896E2C98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEORPImageUpdateIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 56) & 0x1A) != 0) {
    return (os_unfair_lock_s *)1;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) == 0) {
    return 0;
  }
  id v3 = *(os_unfair_lock_s **)(a1 + 24);

  return GEORPPhotoMetadataIsDirty(v3);
}

os_unfair_lock_s *GEORPImageUpdateIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    updated = _GEORPImageUpdateIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return updated;
  }
  return result;
}

void GEORPImageUpdateClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasPhotoMetadata]
    && ([a1 photoMetadata],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        unsigned int v6 = GEORPPhotoMetadataHasSensitiveFields(v5),
        v5,
        v6))
  {
    unsigned int v7 = [a1 photoMetadata];
    id v9 = (id)[v7 copy];

    unint64_t v8 = [v9 geotag];
    [v8 clearSensitiveFields:a2];

    [a1 setPhotoMetadata:v9];
  }
  else
  {
    id v9 = [a1 photoMetadata];
    [v9 clearSensitiveFields:a2];
  }
}

void *GEORPImageUpdateHasSensitiveFields(void *result)
{
  if (result)
  {
    id v1 = [result photoMetadata];
    BOOL v2 = GEORPPhotoMetadataHasSensitiveFields(v1);

    return v2;
  }
  return result;
}

void sub_1896E31C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896E3648(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiEnrichmentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  unsigned int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          unsigned int v16 = 0;
        }
        else {
          unsigned int v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v48 = v17;
        unint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        int v20 = (int *)MEMORY[0x1E4F940B8];
        unsigned int v21 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_62;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v18;
      unint64_t v26 = *(void *)(v3 + v25);
      if (v26 == -1 || v26 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v26);
      *(void *)(v3 + v25) = v26 + 1;
      v24 |= (unint64_t)(v27 & 0x7F) << v22;
      if ((v27 & 0x80) == 0) {
        goto LABEL_25;
      }
      v22 += 7;
      if (v23++ >= 9)
      {
        unint64_t v24 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v24 = 0;
    }
LABEL_27:
    if (v29 || (v24 & 7) == 4)
    {
LABEL_62:
      if (v15)
      {
        char v42 = 1;
        goto LABEL_76;
      }
      if (!v16) {
        goto LABEL_77;
      }
      while (1)
      {
        int v44 = *v16++;
        int v43 = v44;
        if (v44 == 1) {
          break;
        }
        if (v43 == 2)
        {
          char v45 = 1;
LABEL_71:
          *(unsigned char *)(a1 + v21[402]) |= v45;
        }
        else if (!v43)
        {
          goto LABEL_77;
        }
      }
      char v45 = 2;
      goto LABEL_71;
    }
    unint64_t v31 = v24 >> 3;
    BOOL v32 = v15;
    if (!v48)
    {
      int v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2) {
      break;
    }
    if (v31 != 1)
    {
      int v39 = PBReaderSkipValueWithTag();
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v39) {
        goto LABEL_72;
      }
      goto LABEL_58;
    }
    if (v32)
    {
      if ((*(unsigned char *)(a1 + v21[402]) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_73:
          char v42 = 0;
          goto LABEL_75;
        }
        v7 += *(unsigned __int8 *)(a1 + v21[402]) << 30 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_73;
        }
        int v37 = objc_alloc_init(GEORPScorecard);
        if (!GEORPScorecardReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1)) {
          goto LABEL_74;
        }
        PBReaderRecallMark();
        char v38 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v37;

        --v7;
LABEL_50:
        unsigned int v21 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
      }
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_58;
    }
LABEL_53:
    char v40 = PBReaderSkipValueWithTag();
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v40 & 1) == 0)
    {
LABEL_72:
      char v42 = 0;
      goto LABEL_76;
    }
LABEL_58:
    if (v7) {
      char v41 = 1;
    }
    else {
      char v41 = v15;
    }
    if ((v41 & 1) == 0) {
      goto LABEL_62;
    }
  }
  if (!v32 || (*(unsigned char *)(a1 + v21[402]) & 1) != 0) {
    goto LABEL_53;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_73;
  }
  int v37 = objc_alloc_init(GEORPEnrichmentImage);
  if (GEORPEnrichmentImageReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEORPPoiEnrichment _addNoFlagsImage:](a1, v37);

    goto LABEL_50;
  }
LABEL_74:

  char v42 = 0;
  unsigned int v21 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
LABEL_75:
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_76:
  *(unsigned char *)(a1 + v21[402]) |= 2u;
  *(unsigned char *)(a1 + v21[402]) |= 1u;
  if (v42)
  {
LABEL_77:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v15) {
      goto LABEL_78;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v15)
    {
LABEL_78:
      char v46 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_1896E3C40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896E44F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPPoiEnrichmentCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 24) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 16);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEORPPoiEnrichmentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPPoiEnrichmentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORPPoiEnrichmentReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORPPoiEnrichmentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPPoiEnrichmentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPPoiEnrichmentCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1896E47A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiEnrichmentReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPPoiEnrichmentReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896E4804(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiEnrichmentIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPScorecardIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEORPEnrichmentImageIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEORPScorecardIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPCategoryRatingIsValid(a1)) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
      }
      else if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 == -1 || v19 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v20 = v19 + 1;
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_38;
        }
        a1[*v4] = 1;
      }
      else if (v16 == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        PBReaderRecallMark();
        return 0;
      }
LABEL_38:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_1896E4E78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPoiEnrichmentIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v2 = *(unsigned char *)(a1 + 44);
  if ((v2 & 4) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) != 0)
  {
    if (GEORPScorecardIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 44);
  }
  return v2 & 1;
}

os_unfair_lock_s *GEORPPoiEnrichmentIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPPoiEnrichmentIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1896E5294(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896E56DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiEnrichmentPlaceContextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 76)), (uint16x4_t)0xFFFFFFFBFFFEFFFCLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 76) & 1)+ ((*(unsigned char *)(a1 + 76) & 8) != 0));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 3);
        if ((v14 | v8)) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        LODWORD(v16) = v14;
        char v49 = (v15 == 0) | v14;
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_82;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_82:
      if (v16)
      {
        char v43 = 1;
        goto LABEL_96;
      }
      if (v15)
      {
        while (1)
        {
          int v44 = *v15++;
          char v45 = 16;
          switch(v44)
          {
            case 0:
              goto LABEL_97;
            case 1:
              goto LABEL_91;
            case 2:
              char v45 = 1;
              goto LABEL_91;
            case 3:
              char v45 = 4;
              goto LABEL_91;
            case 4:
              char v45 = 32;
              goto LABEL_91;
            case 5:
              char v45 = 2;
              goto LABEL_91;
            case 6:
              char v45 = 8;
LABEL_91:
              *(unsigned char *)(a1 + 76) |= v45;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_97;
    }
    unint64_t v29 = v22 >> 3;
    BOOL v30 = (char)v16;
    if ((v49 & 1) == 0)
    {
      unint64_t v31 = v15;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_93;
          }
          int v48 = (int)v16;
          unint64_t v16 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v16, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v35 = 48;
            goto LABEL_67;
          }
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_93;
        }
        char v42 = 8 * *(unsigned char *)(a1 + 76);
        goto LABEL_79;
      case 2:
        if (!v30 || (*(unsigned char *)(a1 + 76) & 1) != 0) {
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_93;
        }
        int v48 = (int)v16;
        unint64_t v16 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        -[GEORPPoiEnrichmentPlaceContext _addNoFlagsEntityName:](a1, v16);
        goto LABEL_61;
      case 3:
        if (!v30) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 76) & 4) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 32;
          goto LABEL_55;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_93;
        }
        char v42 = 32 * *(unsigned char *)(a1 + 76);
        goto LABEL_79;
      case 4:
        if (!v30) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 56;
LABEL_55:
          int v39 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          --v7;
          goto LABEL_80;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_93;
        }
        char v42 = 4 * *(unsigned char *)(a1 + 76);
        goto LABEL_79;
      case 5:
        if (!v30 || (*(unsigned char *)(a1 + 76) & 2) != 0) {
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_93;
        }
        int v48 = (int)v16;
        unint64_t v16 = objc_alloc_init(GEOPDLocalizedAddress);
        if (!GEOPDLocalizedAddressReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        -[GEORPPoiEnrichmentPlaceContext _addNoFlagsLocalizedAddress:](a1, v16);
LABEL_61:

        goto LABEL_68;
      case 6:
        if (!v30)
        {
LABEL_69:
          char v41 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v41 & 1) == 0)
          {
LABEL_92:
            char v43 = 0;
            goto LABEL_96;
          }
LABEL_81:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_82;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 76) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_93:
            char v43 = 0;
            goto LABEL_95;
          }
          char v42 = 16 * *(unsigned char *)(a1 + 76);
LABEL_79:
          v7 += v42 >> 7;
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_93;
        }
        int v48 = (int)v16;
        unint64_t v16 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v16, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v35 = 40;
LABEL_67:
          char v40 = *(void **)(a1 + v35);
          *(void *)(a1 + v35) = v16;

          --v7;
LABEL_68:
          LODWORD(v16) = v48;
LABEL_80:
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_81;
        }
LABEL_94:

        char v43 = 0;
        LOBYTE(v16) = v48;
LABEL_95:
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_96:
        *(unsigned char *)(a1 + 76) |= 0x10u;
        *(unsigned char *)(a1 + 76) |= 1u;
        *(unsigned char *)(a1 + 76) |= 4u;
        *(unsigned char *)(a1 + 76) |= 0x20u;
        *(unsigned char *)(a1 + 76) |= 2u;
        *(unsigned char *)(a1 + 76) |= 8u;
        if (v43)
        {
LABEL_97:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_98;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_98:
            char v46 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v36 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v36) {
          goto LABEL_92;
        }
        goto LABEL_81;
    }
  }
}

void sub_1896E5F70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896E6334(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896E64A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896E660C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896E69D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896E74C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPoiEnrichmentPlaceContextCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  [a1[6] readAll:1];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = a1[2];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v4);
  }

  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = a1[3];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOPDLocalizedAddress readAll:](*(void *)(*((void *)&v13 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v9);
  }

  return objc_msgSend(a1[5], "readAll:", 1, (void)v13);
}

unint64_t GEORPPoiEnrichmentPlaceContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPPoiEnrichmentPlaceContextReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPPoiEnrichmentPlaceContextReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPPoiEnrichmentPlaceContextReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPPoiEnrichmentPlaceContextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPPoiEnrichmentPlaceContextCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1896E7818(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiEnrichmentPlaceContextReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPPoiEnrichmentPlaceContextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896E787C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiEnrichmentPlaceContextIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_39;
          }
          goto LABEL_42;
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1)) {
            goto LABEL_42;
          }
          goto LABEL_39;
        case 3u:
          if (v14 == 2) {
            goto LABEL_30;
          }
          goto LABEL_42;
        case 4u:
          if (v14 == 2) {
            goto LABEL_30;
          }
          goto LABEL_42;
        case 5u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDLocalizedAddressIsValid(a1)) {
            goto LABEL_42;
          }
          goto LABEL_39;
        case 6u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_42;
          }
LABEL_39:
          PBReaderRecallMark();
          goto LABEL_40;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_42:
            PBReaderRecallMark();
            return 0;
          }
LABEL_40:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_41;
          }
          break;
      }
    }
  }
LABEL_41:
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_1896E7E44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPoiEnrichmentPlaceContextIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  if ((*(unsigned char *)(a1 + 76) & 0x7F) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 76) & 2) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDLocalizedAddressIsDirty(*(os_unfair_lock_s **)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEORPPoiEnrichmentPlaceContextIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPPoiEnrichmentPlaceContextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1896E8558(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896E8D60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiEnrichmentUpdateReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFAFFFCFFFFLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 80) & 0x20) != 0)+ ((*(unsigned char *)(a1 + 80) & 8) != 0));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          BOOL v16 = 0;
        }
        else {
          BOOL v16 = a3;
        }
        char v54 = (v16 == 0) | v15;
        long long v17 = (int *)MEMORY[0x1E4F940E8];
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        long long v19 = (int *)MEMORY[0x1E4F940B8];
        char v53 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_96;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_96:
      if (v15)
      {
        char v47 = 1;
        goto LABEL_109;
      }
      if (v16)
      {
        while (1)
        {
          int v48 = *v16++;
          char v49 = 16;
          switch(v48)
          {
            case 0:
              goto LABEL_110;
            case 2:
              goto LABEL_105;
            case 3:
              char v49 = 2;
              goto LABEL_105;
            case 4:
              char v49 = 64;
              goto LABEL_105;
            case 5:
              char v49 = 4;
              goto LABEL_105;
            case 6:
              char v49 = 32;
              goto LABEL_105;
            case 7:
              char v49 = 8;
LABEL_105:
              *(unsigned char *)(a1 + 80) |= v49;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_110;
    }
    unint64_t v29 = v22 >> 3;
    BOOL v30 = v15;
    if ((v54 & 1) == 0)
    {
      unint64_t v31 = v16;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_79;
        }
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        *(unsigned char *)(a1 + 80) |= 1u;
        while (1)
        {
          uint64_t v38 = *v17;
          unint64_t v39 = *(void *)(v3 + v38);
          if (v39 == -1 || v39 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v40 = *(unsigned char *)(*(void *)(v3 + *v19) + v39);
          *(void *)(v3 + v38) = v39 + 1;
          v37 |= (unint64_t)(v40 & 0x7F) << v35;
          if ((v40 & 0x80) == 0) {
            goto LABEL_82;
          }
          v35 += 7;
          BOOL v26 = v36++ >= 9;
          if (v26)
          {
            LODWORD(v37) = 0;
            goto LABEL_84;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_82:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v37) = 0;
        }
LABEL_84:
        *(_DWORD *)(a1 + 76) = v37;
        goto LABEL_95;
      case 2:
        if (!v30) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_108;
          }
          char v46 = 8 * *(unsigned char *)(a1 + 80);
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_108;
        }
        int v52 = objc_alloc_init(GEOPDPlace);
        if (!GEOPDPlaceReadAllFrom((uint64_t)v52, (void *)v3, v9 & 1)) {
          goto LABEL_107;
        }
        PBReaderRecallMark();
        uint64_t v42 = 40;
        goto LABEL_78;
      case 3:
        if (!v30 || (*(unsigned char *)(a1 + 80) & 2) != 0) {
          goto LABEL_79;
        }
        PBReaderReadString();
        char v43 = (GEOPDPlace *)objc_claimAutoreleasedReturnValue();
        if (!v43) {
          goto LABEL_67;
        }
        int v52 = v43;
        -[GEORPPoiEnrichmentUpdate _addNoFlagsImageId:](a1, v43);
        goto LABEL_66;
      case 4:
        if (!v30) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_108;
          }
          char v46 = 2 * *(unsigned char *)(a1 + 80);
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_108;
        }
        int v52 = objc_alloc_init(GEORPScorecard);
        if (!GEORPScorecardReadAllFrom((uint64_t)v52, (void *)v3, v9 & 1)) {
          goto LABEL_107;
        }
        PBReaderRecallMark();
        uint64_t v42 = 56;
        goto LABEL_78;
      case 5:
        if (!v30 || (*(unsigned char *)(a1 + 80) & 4) != 0) {
          goto LABEL_79;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_108;
        }
        int v52 = objc_alloc_init(GEORPImageUpdate);
        if (!GEORPImageUpdateReadAllFrom((uint64_t)v52, (void *)v3, v9 & 1)) {
          goto LABEL_107;
        }
        PBReaderRecallMark();
        -[GEORPPoiEnrichmentUpdate _addNoFlagsImageUpdate:](a1, v52);
LABEL_66:
        char v43 = v52;
LABEL_67:

        goto LABEL_94;
      case 6:
        if (!v30) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_108;
          }
          char v46 = 4 * *(unsigned char *)(a1 + 80);
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_108;
        }
        int v52 = objc_alloc_init(GEORPScorecardUpdate);
        if (!GEORPScorecardUpdateReadAllFrom((uint64_t)v52, (void *)v3, v9 & 1)) {
          goto LABEL_107;
        }
        PBReaderRecallMark();
        uint64_t v42 = 48;
        goto LABEL_78;
      case 7:
        if (!v30)
        {
LABEL_79:
          char v45 = PBReaderSkipValueWithTag();
          long long v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v53;
          if ((v45 & 1) == 0)
          {
LABEL_106:
            char v47 = 0;
            goto LABEL_109;
          }
LABEL_95:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_96;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 80) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_108;
          }
          char v46 = 16 * *(unsigned char *)(a1 + 80);
LABEL_93:
          v7 += v46 >> 7;
LABEL_94:
          char v15 = v53;
          long long v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_108;
        }
        int v52 = objc_alloc_init(GEORPPoiEnrichmentPlaceContext);
        if (GEORPPoiEnrichmentPlaceContextReadAllFrom((uint64_t)v52, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v42 = 32;
LABEL_78:
          int v44 = *(void **)(a1 + v42);
          *(void *)(a1 + v42) = v52;

          --v7;
          goto LABEL_94;
        }
LABEL_107:

LABEL_108:
        char v47 = 0;
        char v15 = v53;
        long long v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_109:
        *(unsigned char *)(a1 + 80) |= 0x10u;
        *(unsigned char *)(a1 + 80) |= 2u;
        *(unsigned char *)(a1 + 80) |= 0x40u;
        *(unsigned char *)(a1 + 80) |= 4u;
        *(unsigned char *)(a1 + 80) |= 0x20u;
        *(unsigned char *)(a1 + 80) |= 8u;
        if (v47)
        {
LABEL_110:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_111;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_111:
            char v50 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v41 = PBReaderSkipValueWithTag();
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v53;
        if (!v41) {
          goto LABEL_106;
        }
        goto LABEL_95;
    }
  }
}

void sub_1896E96E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896E9AA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896E9C0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896E9FCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896EA138(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896EACB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPoiEnrichmentUpdateCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  [a1[5] readAll:1];
  [a1[7] readAll:1];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v2 = a1[3];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  [a1[6] readAll:1];
  return [a1[4] readAll:1];
}

unint64_t GEORPPoiEnrichmentUpdateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPPoiEnrichmentUpdateReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORPPoiEnrichmentUpdateReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORPPoiEnrichmentUpdateReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPPoiEnrichmentUpdateReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPPoiEnrichmentUpdateCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1896EAF9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiEnrichmentUpdateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPPoiEnrichmentUpdateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896EB000(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiEnrichmentUpdateIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v16 = 0;
          do
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_50;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if ((v20 & 0x80000000) == 0) {
              break;
            }
          }
          while (v16++ <= 8);
          goto LABEL_50;
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1)) {
            goto LABEL_54;
          }
          goto LABEL_49;
        case 3u:
          if (v14 == 2) {
            goto LABEL_32;
          }
          goto LABEL_54;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPScorecardIsValid(a1)) {
            goto LABEL_54;
          }
          goto LABEL_49;
        case 5u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPImageUpdateIsValid(a1)) {
            goto LABEL_54;
          }
          goto LABEL_49;
        case 6u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPScorecardUpdateIsValid(a1)) {
            goto LABEL_54;
          }
          goto LABEL_49;
        case 7u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPPoiEnrichmentPlaceContextIsValid(a1)) {
            goto LABEL_54;
          }
LABEL_49:
          PBReaderRecallMark();
          goto LABEL_50;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_54:
            PBReaderRecallMark();
            return 0;
          }
LABEL_50:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_53;
          }
          break;
      }
    }
  }
LABEL_53:
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

BOOL GEORPScorecardUpdateIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          unint64_t v18 = *(void *)&a1[v17];
          if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v19 = v18 + 1;
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPScorecardIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_1896EB8A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPoiEnrichmentUpdateIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  int v2 = *(char *)(a1 + 80);
  if (v2 < 0) {
    return 1;
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 80);
  }
  if ((v2 & 2) != 0) {
    return 1;
  }
  if ((v2 & 0x40) == 0) {
    goto LABEL_9;
  }
  if (GEORPScorecardIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
    return 1;
  }
  LOBYTE(v2) = *(unsigned char *)(a1 + 80);
LABEL_9:
  if ((v2 & 0x24) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEORPPoiEnrichmentPlaceContextIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 80);
  }
  if ((v2 & 4) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 24);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEORPImageUpdateIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_27;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_27:

  return v3;
}

os_unfair_lock_s *GEORPPoiEnrichmentUpdateIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPPoiEnrichmentUpdateIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEORPPoiEnrichmentUpdateClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  -[GEORPPoiEnrichmentUpdate _readImageUpdates](a1);
  unint64_t result = [*(id *)(a1 + 24) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      long long v8 = [*(id *)(a1 + 24) objectAtIndexedSubscript:i];
      long long v9 = v8;
      if (a3 && GEORPImageUpdateHasSensitiveFields(v8))
      {
        long long v10 = (void *)[v9 copy];
        long long v11 = [v10 photoMetadata];
        [v11 clearSensitiveFields:a2];

        [*(id *)(a1 + 24) replaceObjectAtIndex:i withObject:v10];
      }
      else
      {
        [v9 clearSensitiveFields:a2];
      }

      unint64_t result = [*(id *)(a1 + 24) count];
    }
  }
  return result;
}

uint64_t GEORPPoiEnrichmentUpdateHasSensitiveFields(void *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = objc_msgSend(a1, "imageUpdates", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v9;
    while (2)
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v9 != v4) {
          objc_enumerationMutation(v1);
        }
        if (GEORPImageUpdateHasSensitiveFields(*(void **)(*((void *)&v8 + 1) + 8 * v5)))
        {
          uint64_t v6 = 1;
          goto LABEL_12;
        }
        ++v5;
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v6 = 0;
LABEL_12:

  return v6;
}

void sub_1896EC388(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRatingValueReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    long long v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          unint64_t v14 = *(void *)&v5[v13];
          if (v14 == -1 || v14 >= *(void *)&v5[*v7]) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v16 = v11++ >= 9;
          if (v16)
          {
            unint64_t v12 = 0;
            int v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v17 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v17 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v24 = *v6;
            unint64_t v25 = *(void *)&v5[v24];
            if (v25 == -1 || v25 >= *(void *)&v5[*v7]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v25);
            *(void *)&v5[v24] = v25 + 1;
            v23 |= (unint64_t)(v26 & 0x7F) << v21;
            if ((v26 & 0x80) == 0) {
              goto LABEL_34;
            }
            v21 += 7;
            BOOL v16 = v22++ >= 9;
            if (v16)
            {
              LODWORD(v23) = 0;
              goto LABEL_36;
            }
          }
          v5[*v8] = 1;
LABEL_34:
          if (v5[*v8]) {
            LODWORD(v23) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 16) = -(v23 & 1) ^ ((int)v23 >> 1);
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_40;
          }
          unint64_t v19 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v19, v5, a3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          int v20 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v27 = v5[*v8] == 0;
  }
  else
  {
LABEL_40:
    BOOL v27 = 0;
  }
  objc_sync_exit(v5);

  return v27;
}

void sub_1896ECF64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRatingValueReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPRatingValueReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896ECFC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896ED518(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPScorecardReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          char v15 = 0;
        }
        else {
          char v15 = a3;
        }
        BOOL v16 = v14 != 0;
        if (v14) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = v15 == 0;
        }
        BOOL v55 = v17;
        unint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_73;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v27 = v22++ >= 9;
      if (v27)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_73:
      if (v16)
      {
        char v48 = 1;
        goto LABEL_88;
      }
      if (!v15) {
        goto LABEL_89;
      }
      while (1)
      {
        int v51 = *v15++;
        int v50 = v51;
        if (v51 == 1) {
          break;
        }
        if (v50 == 3)
        {
          char v49 = 2;
LABEL_79:
          *(unsigned char *)(a1 + 48) |= v49;
        }
        else if (!v50)
        {
          goto LABEL_89;
        }
      }
      char v49 = 4;
      goto LABEL_79;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v16;
    if (!v55)
    {
      int v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 3) {
      break;
    }
    if (v30 == 2)
    {
      if (v8)
      {
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        while (1)
        {
          uint64_t v42 = *v18;
          unint64_t v43 = *(void *)(v3 + v42);
          if (v43 == -1 || v43 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v44 = *(unsigned char *)(*(void *)(v3 + *v20) + v43);
          *(void *)(v3 + v42) = v43 + 1;
          v41 |= (unint64_t)(v44 & 0x7F) << v39;
          if ((v44 & 0x80) == 0) {
            goto LABEL_63;
          }
          v39 += 7;
          BOOL v27 = v40++ >= 9;
          if (v27)
          {
            uint64_t v41 = 0;
            goto LABEL_65;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_63:
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v41 = 0;
        }
LABEL_65:
        *(unsigned char *)(a1 + 44) = v41 != 0;
        goto LABEL_69;
      }
    }
    else
    {
      if (v30 != 1)
      {
        int v45 = PBReaderSkipValueWithTag();
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v45) {
          goto LABEL_84;
        }
        goto LABEL_69;
      }
      if (v31)
      {
        if ((*(unsigned char *)(a1 + 48) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_85:
            char v48 = 0;
            goto LABEL_87;
          }
          v9 += *(unsigned __int8 *)(a1 + 48) << 29 >> 31;
        }
        else
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v36;

          --v9;
        }
        goto LABEL_68;
      }
    }
LABEL_60:
    char v46 = PBReaderSkipValueWithTag();
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v46 & 1) == 0)
    {
LABEL_84:
      char v48 = 0;
      goto LABEL_88;
    }
LABEL_69:
    if (v9) {
      char v47 = 1;
    }
    else {
      char v47 = v16;
    }
    if ((v47 & 1) == 0) {
      goto LABEL_73;
    }
  }
  if (!v31 || (*(unsigned char *)(a1 + 48) & 2) != 0) {
    goto LABEL_60;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_85;
  }
  BOOL v54 = v16;
  uint64_t v38 = objc_alloc_init(GEORPCategoryRating);
  if (GEORPCategoryRatingReadAllFrom((uint64_t)v38, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEORPScorecard _addNoFlagsCategoryRatings:](a1, v38);

    BOOL v16 = v54;
LABEL_68:
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_69;
  }

  char v48 = 0;
  BOOL v16 = v54;
LABEL_87:
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_88:
  *(unsigned char *)(a1 + 48) |= 4u;
  *(unsigned char *)(a1 + 48) |= 2u;
  if (v48)
  {
LABEL_89:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v16) {
      goto LABEL_90;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v16)
    {
LABEL_90:
      int v52 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_1896EDC28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896EE564(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPScorecardCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 16);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEORPScorecardReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPScorecardReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORPScorecardReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORPScorecardReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPScorecardReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPScorecardCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1896EE7F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPScorecardReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPScorecardReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896EE858(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896EEAA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPScorecardIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 48) & 0xE) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 48) & 2) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 16);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEORPCategoryRatingIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEORPScorecardIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPScorecardIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1896EEFF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPScorecardUpdateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    long long v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    long long v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          unint64_t v14 = *(void *)&v5[v13];
          if (v14 == -1 || v14 >= *(void *)&v5[*v7]) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v16 = v11++ >= 9;
          if (v16)
          {
            unint64_t v12 = 0;
            int v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v17 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v17 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v24 = *v6;
            unint64_t v25 = *(void *)&v5[v24];
            if (v25 == -1 || v25 >= *(void *)&v5[*v7]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v25);
            *(void *)&v5[v24] = v25 + 1;
            v23 |= (unint64_t)(v26 & 0x7F) << v21;
            if ((v26 & 0x80) == 0) {
              goto LABEL_34;
            }
            v21 += 7;
            BOOL v16 = v22++ >= 9;
            if (v16)
            {
              LODWORD(v23) = 0;
              goto LABEL_36;
            }
          }
          v5[*v8] = 1;
LABEL_34:
          if (v5[*v8]) {
            LODWORD(v23) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 16) = v23;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_40;
          }
          unint64_t v19 = objc_alloc_init(GEORPScorecard);
          if (!GEORPScorecardReadAllFrom((uint64_t)v19, v5, a3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          int v20 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v27 = v5[*v8] == 0;
  }
  else
  {
LABEL_40:
    BOOL v27 = 0;
  }
  objc_sync_exit(v5);

  return v27;
}

void sub_1896EFB58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPScorecardUpdateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPScorecardUpdateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896EFBBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896F0244(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void *GEOBitstreamInitializeReader(void *result, uint64_t a2, uint64_t a3)
{
  result[1] = a3;
  result[2] = 0;
  *unint64_t result = a2;
  return result;
}

void GEOBitstreamFree(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

uint64_t GEOBitstreamReset(uint64_t result)
{
  *(void *)(result + 16) = 0;
  return result;
}

void sub_1896F2614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t GEOAllPossibleFilterScales()
{
  return [MEMORY[0x1E4F1CAD0] setWithArray:&unk_1ED73ED58];
}

id GEOActiveResourceFiltersPath(void *a1)
{
  id v1 = GEOResourceCachesDirectory(a1);
  uint64_t v2 = [v1 stringByAppendingPathComponent:@"ResourceFilters.pbd"];

  return v2;
}

void sub_1896F4618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1896F46D0(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1896F49B8(_Unwind_Exception *a1, void *a2, uint64_t a3, ...)
{
  va_start(va, a3);

  maps::path_codec::geo3::RoutingPathLeg::~RoutingPathLeg((maps::path_codec::geo3::RoutingPathLeg *)va);
  _Unwind_Resume(a1);
}

id _GEOGetSharedTileDB()
{
  if (qword_1EB29F838 != -1) {
    dispatch_once(&qword_1EB29F838, &__block_literal_global_52);
  }
  os_log_t v0 = (void *)_MergedGlobals_213;

  return v0;
}

void sub_1896F537C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAPPlaceCardModuleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 64) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 64) >> 2) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  BOOL v12 = (v7 & 1 | v10) != 0;
  if (((v7 & 1 | v10) != 0) | v8 & 1) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = a3;
  }
  unint64_t v14 = (int *)MEMORY[0x1E4F940E8];
  char v15 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6))
  {
LABEL_95:
    if (v12)
    {
      char v62 = 1;
      goto LABEL_97;
    }
    if (!v13) {
      goto LABEL_107;
    }
    while (1)
    {
      int v64 = *v13++;
      int v63 = v64;
      if (v64 == 2) {
        goto LABEL_106;
      }
      if (v63 == 3)
      {
        LOBYTE(v63) = 4;
LABEL_106:
        *(unsigned char *)(a1 + 64) |= v63;
      }
      else if (!v63)
      {
        goto LABEL_107;
      }
    }
  }
  if (v13) {
    BOOL v16 = (v7 & 1 | v10) != 0;
  }
  else {
    BOOL v16 = 1;
  }
  BOOL v67 = v16;
  int v17 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    if (*(unsigned char *)(v3 + *v15)) {
      goto LABEL_95;
    }
    char v18 = 0;
    unsigned int v19 = 0;
    unint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = *v14;
      uint64_t v22 = *(void *)(v3 + v21);
      unint64_t v23 = v22 + 1;
      if (v22 == -1 || v23 > *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v17) + v22);
      *(void *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0) {
        goto LABEL_27;
      }
      v18 += 7;
      BOOL v25 = v19++ >= 9;
      if (v25)
      {
        unint64_t v20 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_27:
    int v26 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v20 = 0;
    }
LABEL_29:
    int v27 = v20 & 7;
    if (v26 || v27 == 4) {
      goto LABEL_95;
    }
    unint64_t v29 = v20 >> 3;
    BOOL v30 = v12;
    if (!v67)
    {
      BOOL v31 = v13;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 != 3)
    {
      if (v29 == 2)
      {
        if (v30 && (*(unsigned char *)(a1 + 64) & 2) == 0)
        {
          if (v27 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_111;
            }
            while (1)
            {
              char v44 = (int *)MEMORY[0x1E4F940C8];
              if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
                break;
              }
              char v45 = 0;
              unsigned int v46 = 0;
              uint64_t v47 = 0;
              while (1)
              {
                uint64_t v48 = *v14;
                uint64_t v49 = *(void *)(v3 + v48);
                unint64_t v50 = v49 + 1;
                if (v49 == -1 || v50 > *(void *)(v3 + *v6)) {
                  break;
                }
                char v51 = *(unsigned char *)(*(void *)(v3 + *v17) + v49);
                *(void *)(v3 + v48) = v50;
                v47 |= (unint64_t)(v51 & 0x7F) << v45;
                if (v51 < 0)
                {
                  v45 += 7;
                  BOOL v25 = v46++ >= 9;
                  if (!v25) {
                    continue;
                  }
                }
                goto LABEL_68;
              }
              *(unsigned char *)(v3 + *v44) = 1;
LABEL_68:
              PBRepeatedInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v54 = 0;
            unsigned int v55 = 0;
            uint64_t v56 = 0;
            while (1)
            {
              uint64_t v57 = *v14;
              uint64_t v58 = *(void *)(v3 + v57);
              unint64_t v59 = v58 + 1;
              if (v58 == -1 || v59 > *(void *)(v3 + *v6)) {
                break;
              }
              char v60 = *(unsigned char *)(*(void *)(v3 + *v17) + v58);
              *(void *)(v3 + v57) = v59;
              v56 |= (unint64_t)(v60 & 0x7F) << v54;
              if (v60 < 0)
              {
                v54 += 7;
                BOOL v25 = v55++ >= 9;
                if (!v25) {
                  continue;
                }
              }
              goto LABEL_88;
            }
            *(unsigned char *)(v3 + *v15) = 1;
LABEL_88:
            PBRepeatedInt32Add();
          }
          goto LABEL_89;
        }
      }
      else
      {
        if (v29 != 1)
        {
          int v52 = PBReaderSkipValueWithTag();
          char v15 = (int *)MEMORY[0x1E4F940C8];
          if (!v52) {
            goto LABEL_110;
          }
          goto LABEL_90;
        }
        if (v8)
        {
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          *(unsigned char *)(a1 + 64) |= 1u;
          while (1)
          {
            uint64_t v38 = *v14;
            uint64_t v39 = *(void *)(v3 + v38);
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)(v3 + *v6)) {
              break;
            }
            char v41 = *(unsigned char *)(*(void *)(v3 + *v17) + v39);
            *(void *)(v3 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if ((v41 & 0x80) == 0) {
              goto LABEL_74;
            }
            v35 += 7;
            BOOL v25 = v36++ >= 9;
            if (v25)
            {
              LODWORD(v37) = 0;
              goto LABEL_76;
            }
          }
          *(unsigned char *)(v3 + *v15) = 1;
LABEL_74:
          if (*(unsigned char *)(v3 + *v15)) {
            LODWORD(v37) = 0;
          }
LABEL_76:
          *(_DWORD *)(a1 + 60) = v37;
          goto LABEL_90;
        }
      }
      goto LABEL_71;
    }
    if (v30) {
      break;
    }
LABEL_71:
    char v53 = PBReaderSkipValueWithTag();
    char v15 = (int *)MEMORY[0x1E4F940C8];
    if ((v53 & 1) == 0)
    {
LABEL_110:
      char v62 = 0;
      goto LABEL_97;
    }
LABEL_90:
    if (v9) {
      int v61 = 1;
    }
    else {
      int v61 = v12;
    }
    if (v61 != 1 || *(void *)(v3 + *v14) >= *(void *)(v3 + *v6)) {
      goto LABEL_95;
    }
  }
  if ((*(unsigned char *)(a1 + 64) & 4) == 0)
  {
    uint64_t v42 = PBReaderReadString();
    unint64_t v43 = *(void **)(a1 + 40);
    *(void *)(a1 + 40) = v42;

    char v15 = (int *)MEMORY[0x1E4F940C8];
    --v9;
    goto LABEL_90;
  }
  if (PBReaderSkipValueWithTag())
  {
    v9 += *(unsigned __int8 *)(a1 + 64) << 29 >> 31;
LABEL_89:
    char v15 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_90;
  }
LABEL_111:
  char v62 = 0;
  char v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_97:
  *(unsigned char *)(a1 + 64) |= 2u;
  *(unsigned char *)(a1 + 64) |= 4u;
  if (v62)
  {
LABEL_107:
    unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
    if (v12) {
      goto LABEL_108;
    }
    return v3;
  }
  unint64_t v3 = 0;
  if (!v12) {
    return v3;
  }
LABEL_108:
  int v65 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = 0;

  return v3;
}

void sub_1896F5F58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896F6CAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAPPlaceCardModuleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOAPPlaceCardModuleReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOAPPlaceCardModuleReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOAPPlaceCardModuleReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOAPPlaceCardModuleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1896F6E3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAPPlaceCardModuleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOAPPlaceCardModuleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896F6EA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAPPlaceCardModuleIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_53;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_53;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 != 2)
      {
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_55;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0 && v18++ <= 8) {
              continue;
            }
            goto LABEL_52;
          }
LABEL_40:
          a1[*v4] = 1;
          goto LABEL_52;
        }
        goto LABEL_38;
      }
      if (v15 != 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_55;
        }
        while (1)
        {
          uint64_t v24 = *v2;
          uint64_t v25 = *(void *)&a1[v24];
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
            goto LABEL_40;
          }
          int v27 = *(char *)(*(void *)&a1[*v5] + v25);
          *(void *)&a1[v24] = v26;
          if (v27 < 0)
          {
            unsigned int v28 = v15++;
            if (v28 <= 8) {
              continue;
            }
          }
          goto LABEL_52;
        }
      }
      if (!PBReaderPlaceMark())
      {
LABEL_55:
        PBReaderRecallMark();
        return 0;
      }
LABEL_42:
      while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
      {
        unsigned int v29 = a1[*v4];
        if (a1[*v4]) {
          break;
        }
        while (1)
        {
          uint64_t v30 = *v2;
          uint64_t v31 = *(void *)&a1[v30];
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
            break;
          }
          int v33 = *(char *)(*(void *)&a1[*v5] + v31);
          *(void *)&a1[v30] = v32;
          if (v33 < 0)
          {
            BOOL v13 = v29++ >= 9;
            if (!v13) {
              continue;
            }
          }
          goto LABEL_42;
        }
        a1[*v4] = 1;
      }
      PBReaderRecallMark();
LABEL_52:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_53;
      }
    }
    if (v15 != 2) {
      goto LABEL_55;
    }
LABEL_38:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_55;
    }
    goto LABEL_52;
  }
LABEL_53:
  BOOL v34 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v34;
}

void sub_1896F737C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAPPlaceCardModuleIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 64) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1896F76BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAPSessionDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOAPSessionDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896F84C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAPSessionDataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSessionIDIsValid(a1)) {
            goto LABEL_67;
          }
          PBReaderRecallMark();
          continue;
        case 2u:
        case 4u:
        case 7u:
          if (v16 != 1) {
            goto LABEL_67;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_63;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_63;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_67;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_64;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_67;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_64;
          }
        case 6u:
          if (v16 == 2) {
            goto LABEL_44;
          }
          goto LABEL_67;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_67;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_64;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_67;
          }
          unsigned int v37 = 0;
          break;
        default:
LABEL_44:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_67:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v38 = *v2;
        uint64_t v39 = *(void *)&a1[v38];
        unint64_t v40 = v39 + 1;
        if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
          break;
        }
        int v41 = *(char *)(*(void *)&a1[*v5] + v39);
        *(void *)&a1[v38] = v40;
        if (v41 < 0)
        {
          BOOL v26 = v37++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_64;
      }
LABEL_62:
      uint64_t v14 = *v4;
LABEL_63:
      a1[v14] = 1;
LABEL_64:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v42 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v42;
}

void sub_1896F93BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896FA3AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896FA4EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896FA8E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896FAA20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896FC08C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896FC210(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1896FC2D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896FC5A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896FC65C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896FCA6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896FCB90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1896FCF18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double geo::Geocentric<double>::toCoordinate3D<geo::Degrees,double>(double *a1, float64x2_t *a2)
{
  long double v3 = *a1;
  long double v4 = a1[1];
  long double v5 = a1[2];
  double v6 = sqrt(v4 * v4 + v3 * v3);
  double v7 = atan2(v5, v6 * 0.996647189);
  long double v13 = atan2(v4, v3);
  __double2 v8 = __sincos_stret(v7);
  double v12 = atan2(v5 + v8.__sinval * (v8.__sinval * v8.__sinval) * 6378137.0 * 0.00669437999 / 0.996647189, v6 + v8.__cosval * (v8.__cosval * -42697.6727) * v8.__cosval);
  __double2 v9 = __sincos_stret(v12);
  double result = v6 / v9.__cosval - 6378137.0 / sqrt(v9.__sinval * -0.00669437999 * v9.__sinval + 1.0);
  v11.f64[0] = v12;
  v11.f64[1] = v13;
  *a2 = vmulq_f64(vmulq_f64(v11, (float64x2_t)vdupq_n_s64(0x3FD45F306DC9C883uLL)), (float64x2_t)vdupq_n_s64(0x4066800000000000uLL));
  a2[1].f64[0] = result;
  return result;
}

void *_getConfigStoreStringKeysForStateCapture()
{
  return &unk_1ED73ED88;
}

void sub_1896FDB44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896FDFE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void __GEOGetRequestCountPowerLoggerLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "RequestCountPowerLogger");
  id v1 = (void *)qword_1EB29F850;
  qword_1EB29F850 = (uint64_t)v0;
}

void sub_1896FEA88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896FEF58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1896FF2E4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1896FF4CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896FF730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896FFD78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __GEOGetSubscriptionsDownloadManagerLog_block_invoke_0()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "SubscriptionsDownloadManager");
  uint64_t v1 = (void *)_MergedGlobals_215;
  _MergedGlobals_215 = (uint64_t)v0;
}

void sub_1897005E0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_189700A54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAnnouncementReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  double v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int16 *)(a1 + 108) >> 10) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 108)), (uint16x4_t)0xFFFCFFFBFFF7FFF5), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 108) >> 7) & 1)+ ((*(_WORD *)(a1 + 108) >> 6) & 1)+ (HIBYTE(*(_WORD *)(a1 + 108)) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 5;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        char v71 = (v16 == 0) | v15;
        unint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v70 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_140;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_140:
      if (v15)
      {
        char v64 = 1;
        goto LABEL_155;
      }
      if (v16)
      {
        while (1)
        {
          int v65 = *v16++;
          __int16 v66 = 512;
          switch(v65)
          {
            case 0:
              goto LABEL_156;
            case 2:
              goto LABEL_151;
            case 3:
              __int16 v66 = 2048;
              goto LABEL_151;
            case 4:
              __int16 v66 = 32;
              goto LABEL_151;
            case 5:
              __int16 v66 = 16;
              goto LABEL_151;
            case 6:
              __int16 v66 = 128;
              goto LABEL_151;
            case 7:
              __int16 v66 = 64;
              goto LABEL_151;
            case 10:
              __int16 v66 = 256;
              goto LABEL_151;
            case 11:
              __int16 v66 = 1024;
LABEL_151:
              *(_WORD *)(a1 + 108) |= v66;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_156;
    }
    unint64_t v29 = v22 >> 3;
    BOOL v30 = v15;
    if ((v71 & 1) == 0)
    {
      int v31 = v16;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_102;
        }
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        *(_WORD *)(a1 + 108) |= 1u;
        while (1)
        {
          uint64_t v38 = *v17;
          unint64_t v39 = *(void *)(v3 + v38);
          if (v39 == -1 || v39 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v40 = *(unsigned char *)(*(void *)(v3 + *v19) + v39);
          *(void *)(v3 + v38) = v39 + 1;
          v37 |= (unint64_t)(v40 & 0x7F) << v35;
          if ((v40 & 0x80) == 0) {
            goto LABEL_105;
          }
          v35 += 7;
          BOOL v26 = v36++ >= 9;
          if (v26)
          {
            LODWORD(v37) = 0;
            goto LABEL_107;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_105:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v37) = 0;
        }
LABEL_107:
        uint64_t v62 = 92;
        goto LABEL_120;
      case 2:
        if (!v30) {
          goto LABEL_102;
        }
        if ((*(_WORD *)(a1 + 108) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_154;
          }
          __int16 v63 = *(_WORD *)(a1 + 108) << 6;
          goto LABEL_137;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_154;
        }
        unsigned int v69 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v69, (void *)v3)) {
          goto LABEL_153;
        }
        PBReaderRecallMark();
        uint64_t v42 = 56;
        goto LABEL_88;
      case 3:
        if (!v30) {
          goto LABEL_102;
        }
        if ((*(_WORD *)(a1 + 108) & 0x800) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 72;
          goto LABEL_92;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_154;
        }
        __int16 v63 = 16 * *(_WORD *)(a1 + 108);
        goto LABEL_137;
      case 4:
        if (!v30) {
          goto LABEL_102;
        }
        if ((*(_WORD *)(a1 + 108) & 0x20) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 24;
          goto LABEL_92;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_154;
        }
        __int16 v63 = *(_WORD *)(a1 + 108) << 10;
        goto LABEL_137;
      case 5:
        if (!v30) {
          goto LABEL_102;
        }
        if ((*(_WORD *)(a1 + 108) & 0x10) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 16;
          goto LABEL_92;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_154;
        }
        __int16 v63 = *(_WORD *)(a1 + 108) << 11;
        goto LABEL_137;
      case 6:
        if (!v30) {
          goto LABEL_102;
        }
        if ((*(_WORD *)(a1 + 108) & 0x80) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 40;
          goto LABEL_92;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_154;
        }
        __int16 v63 = *(_WORD *)(a1 + 108) << 8;
        goto LABEL_137;
      case 7:
        if (!v30) {
          goto LABEL_102;
        }
        if ((*(_WORD *)(a1 + 108) & 0x40) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 32;
          goto LABEL_92;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_154;
        }
        __int16 v63 = *(_WORD *)(a1 + 108) << 9;
        goto LABEL_137;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_102;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v37 = 0;
        *(_WORD *)(a1 + 108) |= 4u;
        while (2)
        {
          uint64_t v47 = *v17;
          unint64_t v48 = *(void *)(v3 + v47);
          if (v48 == -1 || v48 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v19) + v48);
            *(void *)(v3 + v47) = v48 + 1;
            v37 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              BOOL v26 = v46++ >= 9;
              if (v26)
              {
                LODWORD(v37) = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v37) = 0;
        }
LABEL_111:
        uint64_t v62 = 100;
        goto LABEL_120;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_102;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v37 = 0;
        *(_WORD *)(a1 + 108) |= 8u;
        while (2)
        {
          uint64_t v52 = *v17;
          unint64_t v53 = *(void *)(v3 + v52);
          if (v53 == -1 || v53 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v19) + v53);
            *(void *)(v3 + v52) = v53 + 1;
            v37 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              BOOL v26 = v51++ >= 9;
              if (v26)
              {
                LODWORD(v37) = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v37) = 0;
        }
LABEL_115:
        uint64_t v62 = 104;
        goto LABEL_120;
      case 10:
        if (!v30) {
          goto LABEL_102;
        }
        if ((*(_WORD *)(a1 + 108) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_154;
          }
          __int16 v63 = *(_WORD *)(a1 + 108) << 7;
LABEL_137:
          v7 += v63 >> 15;
LABEL_138:
          char v15 = v70;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_139:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_140;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_154;
        }
        unsigned int v69 = objc_alloc_init(GEOPDFlyover);
        if (GEOPDFlyoverReadAllFrom((uint64_t)v69, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v42 = 48;
LABEL_88:
          unsigned int v55 = *(void **)(a1 + v42);
          *(void *)(a1 + v42) = v69;
LABEL_93:

          --v7;
          goto LABEL_138;
        }
LABEL_153:

LABEL_154:
        char v64 = 0;
        char v15 = v70;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_155:
        *(_WORD *)(a1 + 108) |= 0x200u;
        *(_WORD *)(a1 + 108) |= 0x800u;
        *(_WORD *)(a1 + 108) |= 0x20u;
        *(_WORD *)(a1 + 108) |= 0x10u;
        *(_WORD *)(a1 + 108) |= 0x80u;
        *(_WORD *)(a1 + 108) |= 0x40u;
        *(_WORD *)(a1 + 108) |= 0x100u;
        *(_WORD *)(a1 + 108) |= 0x400u;
        if (v64)
        {
LABEL_156:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_157;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_157:
            BOOL v67 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 11:
        if (!v30) {
          goto LABEL_102;
        }
        if ((*(_WORD *)(a1 + 108) & 0x400) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 64;
LABEL_92:
          unsigned int v55 = *(void **)(a1 + v44);
          *(void *)(a1 + v44) = v43;
          goto LABEL_93;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_154;
        }
        __int16 v63 = 32 * *(_WORD *)(a1 + 108);
        goto LABEL_137;
      case 12:
        if (v8)
        {
          char v56 = 0;
          unsigned int v57 = 0;
          uint64_t v37 = 0;
          *(_WORD *)(a1 + 108) |= 2u;
          while (1)
          {
            uint64_t v58 = *v17;
            unint64_t v59 = *(void *)(v3 + v58);
            if (v59 == -1 || v59 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v60 = *(unsigned char *)(*(void *)(v3 + *v19) + v59);
            *(void *)(v3 + v58) = v59 + 1;
            v37 |= (unint64_t)(v60 & 0x7F) << v56;
            if ((v60 & 0x80) == 0) {
              goto LABEL_117;
            }
            v56 += 7;
            BOOL v26 = v57++ >= 9;
            if (v26)
            {
              LODWORD(v37) = 0;
              goto LABEL_119;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_117:
          if (*(unsigned char *)(v3 + *v18)) {
            LODWORD(v37) = 0;
          }
LABEL_119:
          uint64_t v62 = 96;
LABEL_120:
          *(_DWORD *)(a1 + v62) = v37;
        }
        else
        {
LABEL_102:
          char v61 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v70;
          if ((v61 & 1) == 0)
          {
LABEL_152:
            char v64 = 0;
            goto LABEL_155;
          }
        }
        goto LABEL_139;
      default:
        int v41 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v70;
        if (!v41) {
          goto LABEL_152;
        }
        goto LABEL_139;
    }
  }
}

void sub_18970168C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897017F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189701968(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189701AD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189701C44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189701FE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189702158(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189702F44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAnnouncementReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOAnnouncementReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOAnnouncementReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOAnnouncementReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOAnnouncementReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 56) readAll:1];
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_189703100(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAnnouncementReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOAnnouncementReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189703164(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAnnouncementIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  long double v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    long double v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_76;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_72;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_73;
          }
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1)) {
            goto LABEL_76;
          }
          goto LABEL_60;
        case 3u:
          if (v14 == 2) {
            goto LABEL_62;
          }
          goto LABEL_76;
        case 4u:
          if (v14 == 2) {
            goto LABEL_62;
          }
          goto LABEL_76;
        case 5u:
          if (v14 == 2) {
            goto LABEL_62;
          }
          goto LABEL_76;
        case 6u:
          if (v14 == 2) {
            goto LABEL_62;
          }
          goto LABEL_76;
        case 7u:
          if (v14 == 2) {
            goto LABEL_62;
          }
          goto LABEL_76;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_76;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            unint64_t v24 = *(void *)&a1[v23];
            if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
              goto LABEL_72;
            }
            unint64_t v25 = v24 + 1;
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_73;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_76;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            unint64_t v29 = *(void *)&a1[v28];
            if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
              goto LABEL_72;
            }
            unint64_t v30 = v29 + 1;
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_73;
          }
        case 0xAu:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDFlyoverIsValid(a1)) {
            goto LABEL_76;
          }
LABEL_60:
          PBReaderRecallMark();
          continue;
        case 0xBu:
          if (v14 == 2) {
            goto LABEL_62;
          }
          goto LABEL_76;
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_76;
          }
          unsigned int v32 = 0;
          break;
        default:
LABEL_62:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_76:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        unint64_t v34 = *(void *)&a1[v33];
        if (v34 == -1 || v34 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v35 = v34 + 1;
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v21 = v32++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_73;
      }
LABEL_72:
      a1[*v4] = 1;
LABEL_73:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

void sub_189703834(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAnnouncementIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 108);
  if ((v2 & 0x1AF0) != 0) {
    return 1;
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEOPDFlyoverIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 108);
  }
  return (v2 >> 10) & 1;
}

os_unfair_lock_s *GEOAnnouncementIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOAnnouncementIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189703E1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189704644(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAvailableAnnouncementsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          unsigned int v16 = 0;
        }
        else {
          unsigned int v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v45 = v17;
        unint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_58;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_25;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_58:
      if (v15)
      {
        char v40 = 1;
        goto LABEL_68;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            int v42 = *v16++;
            int v41 = v42;
            if (v42 != 1 && v41 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v41;
          }
        }
        while (v41);
      }
      goto LABEL_69;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v15;
    if (!v45)
    {
      unsigned int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 != 2) {
      break;
    }
    if (!v31) {
      goto LABEL_50;
    }
    if ((*(unsigned char *)(a1 + 44) & 2) != 0)
    {
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_67:
        char v40 = 0;
        goto LABEL_68;
      }
      v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    }
    else
    {
      uint64_t v37 = PBReaderReadString();
      uint64_t v38 = *(void **)(a1 + 24);
      *(void *)(a1 + 24) = v37;

      --v9;
    }
LABEL_51:
    if (v9) {
      char v39 = 1;
    }
    else {
      char v39 = v15;
    }
    if ((v39 & 1) == 0) {
      goto LABEL_58;
    }
  }
  if (v30 != 1)
  {
    if (!PBReaderSkipValueWithTag()) {
      goto LABEL_67;
    }
    goto LABEL_51;
  }
  if (!v31 || (*(unsigned char *)(a1 + 44) & 1) != 0)
  {
LABEL_50:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_67;
    }
    goto LABEL_51;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_67;
  }
  int v36 = objc_alloc_init(GEOAnnouncement);
  if (GEOAnnouncementReadAllFrom((uint64_t)v36, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOAvailableAnnouncements _addNoFlagsAnnouncement:](a1, v36);

    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_51;
  }

  char v40 = 0;
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_68:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v40)
  {
LABEL_69:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (!v15) {
      return v3;
    }
    goto LABEL_70;
  }
  unint64_t v3 = 0;
  if (v15)
  {
LABEL_70:
    uint64_t v43 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189704E44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18970546C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOAvailableAnnouncementsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 16);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOAvailableAnnouncementsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOAvailableAnnouncementsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOAvailableAnnouncementsReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOAvailableAnnouncementsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOAvailableAnnouncementsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOAvailableAnnouncementsCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189705700(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAvailableAnnouncementsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOAvailableAnnouncementsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189705764(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAvailableAnnouncementsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) != 1) {
        goto LABEL_25;
      }
      if (v14 != 2 || !PBReaderPlaceMark() || !GEOAnnouncementIsValid(a1))
      {
LABEL_28:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v14 != 2) {
      goto LABEL_28;
    }
LABEL_25:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_28;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_189705B80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAvailableAnnouncementsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189706058(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOStringForTimestamp(void *a1, void *a2, void *a3, double a4)
{
  uint64_t v7 = qword_1EB29DE00;
  id v8 = a3;
  id v9 = a2;
  id v10 = a1;
  if (v7 != -1) {
    dispatch_once(&qword_1EB29DE00, &__block_literal_global_102_1);
  }
  [(id)_MergedGlobals_3 setLocale:v9];

  [(id)_MergedGlobals_3 setTimeZone:v8];
  [(id)_MergedGlobals_3 setLocalizedDateFormatFromTemplate:v10];

  char v11 = (void *)_MergedGlobals_3;
  uint64_t v12 = [MEMORY[0x1E4F1C9C8] dateWithTimeIntervalSinceReferenceDate:a4];
  int v13 = [v11 stringFromDate:v12];

  return v13;
}

void __GEOStringForTimestamp_block_invoke()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F28C10]);
  id v1 = (void *)_MergedGlobals_3;
  _MergedGlobals_3 = (uint64_t)v0;
}

id GEOGetGEONavigationProxyLog()
{
  if (qword_1EB29F898 != -1) {
    dispatch_once(&qword_1EB29F898, &__block_literal_global_58);
  }
  id v0 = (void *)_MergedGlobals_217;

  return v0;
}

void sub_18970897C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void __GEOGetGEONavigationProxyLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEONavigationProxy");
  id v1 = (void *)_MergedGlobals_217;
  _MergedGlobals_217 = (uint64_t)v0;
}

uint64_t __CoreAnalyticsLibraryCore_block_invoke(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  CoreAnalyticsLibraryCore_frameworkLibrary = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getAnalyticsSendEventLazySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)CoreAnalyticsLibrary();
  uint64_t result = dlsym(v2, "AnalyticsSendEventLazy");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getAnalyticsSendEventLazySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

BOOL GEOSetETagOnExtendedAttribute(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  if ([v5 length] && objc_msgSend(v6, "length"))
  {
    uint64_t v7 = [v6 dataUsingEncoding:4];
    id v8 = v5;
    id v9 = (const char *)[v8 fileSystemRepresentation];
    id v10 = v7;
    int v11 = setxattr(v9, "com.apple.GeoServices.ETAG", (const void *)[v10 bytes], objc_msgSend(v10, "length"), 0, 0);
    BOOL v12 = v11 == 0;
    if (a3 && v11)
    {
      int v13 = (void *)MEMORY[0x1E4F28C58];
      uint64_t v14 = *MEMORY[0x1E4F28798];
      uint64_t v15 = *__error();
      BOOL v16 = [MEMORY[0x1E4F1C9E8] dictionaryWithObject:v8 forKey:*MEMORY[0x1E4F28328]];
      *a3 = [v13 errorWithDomain:v14 code:v15 userInfo:v16];
    }
  }
  else
  {
    BOOL v12 = 0;
  }

  return v12;
}

id GEOCalculateSHA1ForFile(void *a1)
{
  id v1 = (objc_class *)MEMORY[0x1E4F1C9B8];
  id v2 = a1;
  id v3 = (void *)[[v1 alloc] initWithContentsOfFile:v2 options:1 error:0];

  uint64_t v4 = objc_msgSend(v3, "_geo_SHA1Hash");

  return v4;
}

uint64_t geo::ZilchMapModel::ZilchMapModel(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  *(void *)a1 = &unk_1ED5137B0;
  uint64_t v7 = +[GEOMapAccess map];
  *(void *)(a1 + 24) = 850045863;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(void *)(a1 + 80) = 0;
  if (v7)
  {
    id v8 = [v5 requestQueue];
    [*(id *)(a1 + 8) setCallbackQueue:v8];

    id v9 = [v5 mapAccessRestrictions];
    [*(id *)(a1 + 8) setRestrictions:v9];

    [*(id *)(a1 + 8) setTileErrorHandler:v6];
  }
  else
  {
    id v10 = [MEMORY[0x1E4F28C58] GEOErrorWithCode:-213];
    v6[2](v6, 0, v10);
  }
  return a1;
}

void sub_1897098F4(_Unwind_Exception *a1)
{
  id v6 = v5;

  std::mutex::~mutex(v4);
  _Unwind_Resume(a1);
}

void geo::ZilchMapModel::~ZilchMapModel(geo::ZilchMapModel *this)
{
  uint64_t v2 = (void *)*((void *)this + 1);
  *(void *)this = &unk_1ED5137B0;
  *((void *)this + 1) = 0;

  std::mutex::~mutex((std::mutex *)((char *)this + 24));
}

{
  uint64_t vars8;

  geo::ZilchMapModel::~ZilchMapModel(this);

  JUMPOUT(0x18C11F580);
}

void geo::ZilchMapModel::finishCurrentSearch(geo::ZilchMapModel *this)
{
  uint64_t v2 = *((void *)this + 2);
  dispatch_semaphore_wait(*(dispatch_semaphore_t *)(v2 + 24), 0xFFFFFFFFFFFFFFFFLL);
  dispatch_semaphore_wait(*(dispatch_semaphore_t *)(v2 + 32), 0xFFFFFFFFFFFFFFFFLL);
  std::mutex::lock((std::mutex *)((char *)this + 24));
  uint64_t v3 = *((void *)this + 2);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + 2) = 0;

  std::mutex::unlock((std::mutex *)((char *)this + 24));
}

void geo::ZilchMapModel::findRoads(uint64_t a1)
{
  uint64_t v2 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  if (*(void *)(a1 + 8)) {
    operator new();
  }

  std::mutex::unlock(v2);
}

void sub_189709BD0(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F580](v1, 0x81C402FCC0CB6);
  _Unwind_Resume(a1);
}

void geo::ZilchMapModel::getRoad()
{
}

void sub_189709F7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void geo::ZilchMapModel::getJunction(uint64_t a1)
{
  uint64_t v2 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  if (*(void *)(a1 + 8)) {
    operator new();
  }

  std::mutex::unlock(v2);
}

void sub_18970A170(_Unwind_Exception *a1)
{
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  MEMORY[0x18C11F580](v1, 0x81C402FCC0CB6);
  _Unwind_Resume(a1);
}

uint64_t geo::ZilchMapModel::flipRoadOrientation(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 32))();
}

void geo::ZilchMapModel::cancel(geo::ZilchMapModel *this)
{
  uint64_t v2 = (std::mutex *)((char *)this + 24);
  std::mutex::lock((std::mutex *)((char *)this + 24));
  uint64_t v3 = (dispatch_semaphore_t *)*((void *)this + 2);
  if (v3) {
    geo::ZilchMapModelSearch::cancel(v3);
  }
  uint64_t v4 = (void *)*((void *)this + 1);
  *((void *)this + 1) = 0;

  std::mutex::unlock(v2);
}

void geo::ZilchMapModelSearch::cancel(dispatch_semaphore_t *this)
{
  dispatch_semaphore_wait(this[3], 0xFFFFFFFFFFFFFFFFLL);
  uint64_t v2 = this[2];
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = ___ZN3geo19ZilchMapModelSearch6cancelEv_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = this;
  dispatch_async(v2, block);
}

void geo::ZilchMapModel::finish(id *this)
{
  uint64_t v2 = (std::mutex *)(this + 3);
  std::mutex::lock((std::mutex *)(this + 3));
  [this[1] setTileErrorHandler:0];
  id v3 = this[1];
  this[1] = 0;

  std::mutex::unlock(v2);
}

geo::ZilchMapModelSearch *geo::ZilchMapModelSearch::ZilchMapModelSearch(geo::ZilchMapModelSearch *this, GEOMapAccess *a2)
{
  id v3 = a2;
  *(void *)this = &unk_1ED513918;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = [(GEOMapAccess *)v3 callbackQueue];
  *((void *)this + 3) = dispatch_semaphore_create(0);
  *((void *)this + 4) = dispatch_semaphore_create(0);

  return this;
}

void sub_18970A37C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

intptr_t ___ZN3geo20ZilchFindRoadsSearchC2EP12GEOMapAccessjRKN5zilch14GeoCoordinatesEPNSt3__16vectorINS7_10shared_ptrINS_7MapEdgeEEENS7_9allocatorISB_EEEE_block_invoke(uint64_t a1, double a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  LODWORD(a2) = *(_DWORD *)(a1 + 64);
  double v5 = (double)*(unint64_t *)&a2;
  int v16 = zilch::GeoCoordinates::y(*(zilch::GeoCoordinates **)(a1 + 48));
  double v7 = zilch::Latitude::toDegrees((zilch::Latitude *)&v16, v6);
  int v15 = zilch::GeoCoordinates::x(*(zilch::GeoCoordinates **)(a1 + 48));
  double v9 = zilch::Longitude::toDegrees((zilch::Longitude *)&v15, v8);
  v13[4] = v4;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = ___ZN3geo20ZilchFindRoadsSearchC2EP12GEOMapAccessjRKN5zilch14GeoCoordinatesEPNSt3__16vectorINS7_10shared_ptrINS_7MapEdgeEEENS7_9allocatorISB_EEEE_block_invoke_2;
  v14[3] = &__block_descriptor_40_e66_v24__0_shared_ptr_geo::MapEdge____MapEdge_____shared_weak_count__8l;
  v14[4] = *(void *)(a1 + 56);
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = ___ZN3geo20ZilchFindRoadsSearchC2EP12GEOMapAccessjRKN5zilch14GeoCoordinatesEPNSt3__16vectorINS7_10shared_ptrINS_7MapEdgeEEENS7_9allocatorISB_EEEE_block_invoke_3;
  v13[3] = &__block_descriptor_40_e23_v16__0__GEOMapRequest_8l;
  uint64_t v10 = objc_msgSend(v3, "findRoadEdgesWithin:of:edgeHandler:completionHandler:", v14, v13, v5, v7, v9);
  int v11 = *(void **)(v4 + 8);
  *(void *)(v4 + 8) = v10;

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(v4 + 24));
}

void **___ZN3geo20ZilchFindRoadsSearchC2EP12GEOMapAccessjRKN5zilch14GeoCoordinatesEPNSt3__16vectorINS7_10shared_ptrINS_7MapEdgeEEENS7_9allocatorISB_EEEE_block_invoke_2(uint64_t a1, long long *a2)
{
  return std::vector<std::shared_ptr<geo::MapEdge>>::push_back[abi:ne180100](*(uint64_t **)(a1 + 32), a2);
}

void **std::vector<std::shared_ptr<geo::MapEdge>>::push_back[abi:ne180100](uint64_t *a1, long long *a2)
{
  unint64_t v6 = a1[2];
  uint64_t result = (void **)(a1 + 2);
  unint64_t v5 = v6;
  double v7 = *(result - 1);
  if ((unint64_t)v7 >= v6)
  {
    uint64_t v10 = ((uint64_t)v7 - *a1) >> 4;
    unint64_t v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 60) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v12 = v5 - *a1;
    if (v12 >> 3 > v11) {
      unint64_t v11 = v12 >> 3;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    v18[4] = result;
    uint64_t v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>((uint64_t)result, v13);
    int v15 = &v14[16 * v10];
    v18[0] = v14;
    v18[1] = v15;
    v18[3] = &v14[16 * v16];
    long long v17 = *a2;
    *(_OWORD *)int v15 = *a2;
    if (*((void *)&v17 + 1)) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v17 + 1) + 8), 1uLL, memory_order_relaxed);
    }
    v18[2] = v15 + 16;
    std::vector<std::shared_ptr<geo::MapEdge>>::__swap_out_circular_buffer(a1, v18);
    double v9 = (void *)a1[1];
    uint64_t result = std::__split_buffer<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>::~__split_buffer(v18);
  }
  else
  {
    *double v7 = *(void *)a2;
    uint64_t v8 = *((void *)a2 + 1);
    v7[1] = v8;
    if (v8) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
    }
    double v9 = v7 + 2;
    a1[1] = (uint64_t)(v7 + 2);
  }
  a1[1] = (uint64_t)v9;
  return result;
}

void sub_18970A5D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

intptr_t ___ZN3geo20ZilchFindRoadsSearchC2EP12GEOMapAccessjRKN5zilch14GeoCoordinatesEPNSt3__16vectorINS7_10shared_ptrINS_7MapEdgeEEENS7_9allocatorISB_EEEE_block_invoke_3(uint64_t a1, GEOMapRequest *a2)
{
  return geo::ZilchMapModelSearch::completed(*(geo::ZilchMapModelSearch **)(a1 + 32), a2);
}

intptr_t geo::ZilchMapModelSearch::completed(geo::ZilchMapModelSearch *this, GEOMapRequest *a2)
{
  id v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 1) = 0;
  }
  uint64_t v4 = *((void *)this + 4);

  return dispatch_semaphore_signal(v4);
}

void geo::ZilchFindRoadsSearch::~ZilchFindRoadsSearch(id *this)
{
  geo::ZilchMapModelSearch::~ZilchMapModelSearch(this);

  JUMPOUT(0x18C11F580);
}

void geo::ZilchMapModelSearch::~ZilchMapModelSearch(id *this)
{
  geo::ZilchMapModelSearch::~ZilchMapModelSearch(this);

  JUMPOUT(0x18C11F580);
}

{
  *this = &unk_1ED513918;
}

uint64_t std::vector<std::shared_ptr<geo::MapEdge>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::shared_ptr<geo::MapEdge>>,std::reverse_iterator<std::shared_ptr<geo::MapEdge>*>,std::reverse_iterator<std::shared_ptr<geo::MapEdge>*>,std::reverse_iterator<std::shared_ptr<geo::MapEdge>*>>((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::shared_ptr<geo::MapEdge>>,std::reverse_iterator<std::shared_ptr<geo::MapEdge>*>,std::reverse_iterator<std::shared_ptr<geo::MapEdge>*>,std::reverse_iterator<std::shared_ptr<geo::MapEdge>*>>(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v8 = (_OWORD *)(a7 - 16);
    do
    {
      long long v9 = *((_OWORD *)a3 - 1);
      a3 -= 2;
      *uint64_t v8 = v9;
      *a3 = 0;
      a3[1] = 0;
      *((void *)&v15 + 1) = v8;
      v7 -= 16;
      --v8;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<geo::MapEdge>>,std::reverse_iterator<std::shared_ptr<geo::MapEdge>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return v10;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<geo::MapEdge>>,std::reverse_iterator<std::shared_ptr<geo::MapEdge>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>,std::reverse_iterator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

intptr_t ___ZN3geo23ZilchFindJunctionSearchC2EP12GEOMapAccessNSt3__110shared_ptrINS_7MapEdgeEEEPN5zilch16AbstractMapModelIS6_E8JunctionE_block_invoke(void *a1)
{
  uint64_t v3 = a1[5];
  uint64_t v2 = a1[6];
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v4 = *(std::__shared_weak_count **)(v2 + 32);
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    double v6 = *(double *)(v5 + 8);
    double v7 = *(double *)(v5 + 16);
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  else
  {
    double v6 = *(double *)(v5 + 8);
    double v7 = *(double *)(v5 + 16);
  }
  uint64_t v8 = (zilch::Latitude *)zilch::Longitude::fromDegrees((zilch::Longitude *)v4, v7);
  unsigned int v9 = v8;
  unsigned int v10 = zilch::Latitude::fromDegrees(v8, v6);
  v11.var0 = v9;
  v12.var0 = v10;
  zilch::GeoCoordinates::GeoCoordinates((uint64_t)&v22, v11, v12);
  uint64_t v13 = a1[8];
  uint64_t v14 = v22;
  *(_DWORD *)(v13 + 8) = v23;
  *(void *)uint64_t v13 = v14;
  uint64_t v15 = a1[6];
  uint64_t v16 = a1[4];
  v20[4] = v3;
  v21[0] = MEMORY[0x1E4F143A8];
  v21[1] = 3221225472;
  v21[2] = ___ZN3geo23ZilchFindJunctionSearchC2EP12GEOMapAccessNSt3__110shared_ptrINS_7MapEdgeEEEPN5zilch16AbstractMapModelIS6_E8JunctionE_block_invoke_2;
  v21[3] = &__block_descriptor_40_e66_v24__0_shared_ptr_geo::MapEdge____MapEdge_____shared_weak_count__8l;
  v21[4] = a1[8];
  v20[0] = MEMORY[0x1E4F143A8];
  v20[1] = 3221225472;
  v20[2] = ___ZN3geo23ZilchFindJunctionSearchC2EP12GEOMapAccessNSt3__110shared_ptrINS_7MapEdgeEEEPN5zilch16AbstractMapModelIS6_E8JunctionE_block_invoke_3;
  v20[3] = &__block_descriptor_40_e23_v16__0__GEOMapRequest_8l;
  uint64_t v17 = (*(void (**)(uint64_t, uint64_t, void *, void *))(*(void *)v15 + 96))(v15, v16, v21, v20);
  unint64_t v18 = *(void **)(v3 + 8);
  *(void *)(v3 + 8) = v17;

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(v3 + 24));
}

void **___ZN3geo23ZilchFindJunctionSearchC2EP12GEOMapAccessNSt3__110shared_ptrINS_7MapEdgeEEEPN5zilch16AbstractMapModelIS6_E8JunctionE_block_invoke_2(uint64_t a1, long long *a2)
{
  return std::vector<std::shared_ptr<geo::MapEdge>>::push_back[abi:ne180100]((uint64_t *)(*(void *)(a1 + 32) + 16), a2);
}

intptr_t ___ZN3geo23ZilchFindJunctionSearchC2EP12GEOMapAccessNSt3__110shared_ptrINS_7MapEdgeEEEPN5zilch16AbstractMapModelIS6_E8JunctionE_block_invoke_3(uint64_t a1, GEOMapRequest *a2)
{
  return geo::ZilchMapModelSearch::completed(*(geo::ZilchMapModelSearch **)(a1 + 32), a2);
}

uint64_t __copy_helper_block_ea8_48c40_ZTSNSt3__110shared_ptrIN3geo7MapEdgeEEE(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 56);
  *(void *)(result + 48) = *(void *)(a2 + 48);
  *(void *)(result + 56) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void __destroy_helper_block_ea8_48c40_ZTSNSt3__110shared_ptrIN3geo7MapEdgeEEE(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 56);
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
}

void geo::ZilchFindJunctionSearch::~ZilchFindJunctionSearch(id *this)
{
  geo::ZilchMapModelSearch::~ZilchMapModelSearch(this);

  JUMPOUT(0x18C11F580);
}

intptr_t ___ZN3geo19ZilchMapModelSearch6cancelEv_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  [*(id *)(v1 + 8) cancel];
  uint64_t v2 = *(void **)(v1 + 8);
  *(void *)(v1 + 8) = 0;

  uint64_t v3 = *(NSObject **)(v1 + 32);

  return dispatch_semaphore_signal(v3);
}

void std::shared_ptr<std::vector<zilch::GeoCoordinates>>::shared_ptr[abi:ne180100]<std::vector<zilch::GeoCoordinates>,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_18970AAEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  a10 = 0;
  if (v10) {
    std::default_delete<zilch::MessageData>::operator()[abi:ne180100]((uint64_t)&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

void std::__shared_ptr_pointer<std::vector<zilch::GeoCoordinates> *,std::shared_ptr<std::vector<zilch::GeoCoordinates>>::__shared_ptr_default_delete<std::vector<zilch::GeoCoordinates>,std::vector<zilch::GeoCoordinates>>,std::allocator<std::vector<zilch::GeoCoordinates>>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x18C11F580);
}

void std::__shared_ptr_pointer<std::vector<zilch::GeoCoordinates> *,std::shared_ptr<std::vector<zilch::GeoCoordinates>>::__shared_ptr_default_delete<std::vector<zilch::GeoCoordinates>,std::vector<zilch::GeoCoordinates>>,std::allocator<std::vector<zilch::GeoCoordinates>>>::__on_zero_shared(uint64_t a1)
{
}

uint64_t std::__shared_ptr_pointer<std::vector<zilch::GeoCoordinates> *,std::shared_ptr<std::vector<zilch::GeoCoordinates>>::__shared_ptr_default_delete<std::vector<zilch::GeoCoordinates>,std::vector<zilch::GeoCoordinates>>,std::allocator<std::vector<zilch::GeoCoordinates>>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

BOOL GEORouteHypothesisRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    double v6 = (int *)MEMORY[0x1E4F940E8];
    double v7 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      while (!v5[*v8])
      {
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        switch((v12 >> 3))
        {
          case 1u:
            *(unsigned char *)(a1 + 36) |= 1u;
            uint64_t v20 = *v6;
            unint64_t v21 = *(void *)&v5[v20];
            if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(void *)&v5[*v7])
            {
              uint64_t v22 = *(void *)(*(void *)&v5[*v9] + v21);
              *(void *)&v5[v20] = v21 + 8;
            }
            else
            {
              v5[*v8] = 1;
              uint64_t v22 = 0;
            }
            uint64_t v34 = 8;
            goto LABEL_46;
          case 2u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_50;
            }
            int v23 = objc_alloc_init(GEOMapItemStorage);
            if (!GEOMapItemStorageReadAllFrom((uint64_t)v23, v5, a3))
            {

              goto LABEL_50;
            }
            PBReaderRecallMark();
            uint64_t v24 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v23;

LABEL_47:
            if (*(void *)&v5[*v6] >= *(void *)&v5[*v7]) {
              goto LABEL_48;
            }
            break;
          case 3u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            *(unsigned char *)(a1 + 36) |= 4u;
            while (2)
            {
              uint64_t v28 = *v6;
              uint64_t v29 = *(void *)&v5[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v31 = *(unsigned char *)(*(void *)&v5[*v9] + v29);
                *(void *)&v5[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  BOOL v17 = v26++ >= 9;
                  if (v17)
                  {
                    LODWORD(v27) = 0;
                    goto LABEL_41;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v27) = 0;
            }
LABEL_41:
            *(_DWORD *)(a1 + 32) = v27;
            goto LABEL_47;
          case 4u:
            *(unsigned char *)(a1 + 36) |= 2u;
            uint64_t v32 = *v6;
            unint64_t v33 = *(void *)&v5[v32];
            if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(void *)&v5[*v7])
            {
              uint64_t v22 = *(void *)(*(void *)&v5[*v9] + v33);
              *(void *)&v5[v32] = v33 + 8;
            }
            else
            {
              v5[*v8] = 1;
              uint64_t v22 = 0;
            }
            uint64_t v34 = 24;
LABEL_46:
            *(void *)(a1 + v34) = v22;
            goto LABEL_47;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_50;
            }
            goto LABEL_47;
        }
      }
    }
LABEL_48:
    BOOL v35 = v5[*v8] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v5);

  return v35;
}

void sub_18970B70C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteHypothesisRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORouteHypothesisRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18970B780(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteHypothesisRequestIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 4u:
          if (v16 != 1) {
            goto LABEL_42;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_38;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_38;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOMapItemStorageIsValid(a1)) {
            goto LABEL_42;
          }
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_42;
          }
          unsigned int v21 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_42:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v22 = *v2;
        uint64_t v23 = *(void *)&a1[v22];
        unint64_t v24 = v23 + 1;
        if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
          break;
        }
        int v25 = *(char *)(*(void *)&a1[*v5] + v23);
        *(void *)&a1[v22] = v24;
        if (v25 < 0 && v21++ <= 8) {
          continue;
        }
        goto LABEL_39;
      }
      uint64_t v14 = *v4;
LABEL_38:
      a1[v14] = 1;
LABEL_39:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void GEORouteHypothesisRequestClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasDestinationLocation]
    && ([a1 destinationLocation],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOMapItemStorageHasSensitiveFields((uint64_t)v5, a2),
        v5,
        HasSensitiveFields))
  {
    unsigned int v7 = [a1 destinationLocation];
    unint64_t v8 = (id *)[v7 copy];

    GEOMapItemStorageClearSensitiveFields(v8, a2, 0);
    [a1 setDestinationLocation:v8];
  }
  else
  {
    unint64_t v8 = [a1 destinationLocation];
    [v8 clearSensitiveFields:a2];
  }
}

void *GEORouteHypothesisRequestHasSensitiveFields(void *result, uint64_t a2)
{
  if (result)
  {
    id v3 = [result destinationLocation];
    uint64_t HasSensitiveFields = GEOMapItemStorageHasSensitiveFields((uint64_t)v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_18970C30C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteHypothesisResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        BOOL v16 = v14 != 0;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        if (v14) {
          BOOL v18 = 1;
        }
        else {
          BOOL v18 = v15 == 0;
        }
        BOOL v54 = v18;
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_73;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_73:
      if (v16)
      {
        char v47 = 1;
        goto LABEL_88;
      }
      if (!v15) {
        goto LABEL_89;
      }
      while (1)
      {
        int v50 = *v15++;
        int v49 = v50;
        if (v50 == 1) {
          break;
        }
        if (v49 == 2)
        {
          char v48 = 4;
LABEL_79:
          *(unsigned char *)(a1 + 52) |= v48;
        }
        else if (!v49)
        {
          goto LABEL_89;
        }
      }
      char v48 = 2;
      goto LABEL_79;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v16;
    if (!v54)
    {
      unint64_t v33 = v15;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3)
    {
      if (v8)
      {
        *(unsigned char *)(a1 + 52) |= 1u;
        uint64_t v39 = *v17;
        unint64_t v40 = *(void *)(v3 + v39);
        if (v40 <= 0xFFFFFFFFFFFFFFF7 && v40 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v41 = *(void *)(*(void *)(v3 + *v20) + v40);
          *(void *)(v3 + v39) = v40 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v41 = 0;
        }
        *(void *)(a1 + 32) = v41;
        goto LABEL_69;
      }
      goto LABEL_59;
    }
    if (v31 == 2) {
      break;
    }
    if (v31 != 1)
    {
      int v43 = PBReaderSkipValueWithTag();
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v43) {
        goto LABEL_84;
      }
      goto LABEL_69;
    }
    if (v32)
    {
      if ((*(unsigned char *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_85;
        }
        BOOL v53 = v16;
        uint64_t v37 = objc_alloc_init(GEODirectionsResponse);
        if (!GEODirectionsResponseReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1)) {
          goto LABEL_86;
        }
        PBReaderRecallMark();
        uint64_t v38 = 16;
LABEL_56:
        int v42 = *(void **)(a1 + v38);
        *(void *)(a1 + v38) = v37;

        --v7;
        BOOL v16 = v53;
LABEL_66:
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_69;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_85;
      }
      char v45 = *(unsigned char *)(a1 + 52) << 6;
LABEL_65:
      v7 += v45 >> 7;
      goto LABEL_66;
    }
LABEL_59:
    char v44 = PBReaderSkipValueWithTag();
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v44 & 1) == 0)
    {
LABEL_84:
      char v47 = 0;
      goto LABEL_88;
    }
LABEL_69:
    if (v7) {
      char v46 = 1;
    }
    else {
      char v46 = v16;
    }
    if ((v46 & 1) == 0) {
      goto LABEL_73;
    }
  }
  if (!v32) {
    goto LABEL_59;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_85:
      char v47 = 0;
      goto LABEL_87;
    }
    char v45 = 32 * *(unsigned char *)(a1 + 52);
    goto LABEL_65;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_85;
  }
  BOOL v53 = v16;
  uint64_t v37 = objc_alloc_init(GEOETAResponse);
  if (GEOETAResponseReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    uint64_t v38 = 24;
    goto LABEL_56;
  }
LABEL_86:

  char v47 = 0;
  BOOL v16 = v53;
LABEL_87:
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_88:
  *(unsigned char *)(a1 + 52) |= 2u;
  *(unsigned char *)(a1 + 52) |= 4u;
  if (v47)
  {
LABEL_89:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v16) {
      goto LABEL_90;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v16)
    {
LABEL_90:
      unsigned int v51 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_18970C9BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18970CF48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteHypothesisResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORouteHypothesisResponseReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORouteHypothesisResponseReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORouteHypothesisResponseReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORouteHypothesisResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 16) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18970D104(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteHypothesisResponseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORouteHypothesisResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18970D168(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteHypothesisResponseIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      unint64_t v18 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v16 != 1) {
          goto LABEL_38;
        }
        uint64_t v19 = *v2;
        unint64_t v20 = *(void *)&a1[v19];
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v21 = v20 + 8, v21 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v19] = v21;
        }
        else {
          a1[v14] = 1;
        }
      }
      else
      {
        if (v18 == 2)
        {
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOETAResponseIsValid(a1))
          {
LABEL_38:
            PBReaderRecallMark();
            return 0;
          }
          goto LABEL_32;
        }
        if (v18 == 1)
        {
          if (v16 != 2 || !PBReaderPlaceMark() || !GEODirectionsResponseIsValid(a1)) {
            goto LABEL_38;
          }
LABEL_32:
          PBReaderRecallMark();
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_38;
        }
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_18970D550(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteHypothesisResponseIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if (GEODirectionsResponseIsDirty(*(os_unfair_lock_s **)(a1 + 16))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 52);
  }
  if ((v2 & 4) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 24);

  return (uint64_t)GEOETAResponseIsDirty(v4);
}

os_unfair_lock_s *GEORouteHypothesisResponseIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORouteHypothesisResponseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEORouteHypothesisResponseClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3)
  {
    if ([a1 hasDirectionsResponse]
      && ([a1 directionsResponse],
          uint64_t v5 = objc_claimAutoreleasedReturnValue(),
          int HasSensitiveFields = GEODirectionsResponseHasSensitiveFields(v5),
          v5,
          HasSensitiveFields))
    {
      unsigned int v7 = [a1 directionsResponse];
      unint64_t v8 = (void *)[v7 copy];

      GEODirectionsResponseClearSensitiveFields((uint64_t)v8, a2, 0);
      [a1 setDirectionsResponse:v8];
    }
    else
    {
      unint64_t v8 = [a1 directionsResponse];
      [v8 clearSensitiveFields:a2];
    }

    if ([a1 hasEtaResponse])
    {
      uint64_t v10 = [a1 etaResponse];
      int v11 = GEOETAResponseHasSensitiveFields((uint64_t)v10);

      if (v11)
      {
        char v12 = [a1 etaResponse];
        uint64_t v13 = (id *)[v12 copy];

        GEOETAResponseClearSensitiveFields(v13, a2, 0);
        [a1 setEtaResponse:v13];
        goto LABEL_11;
      }
    }
  }
  else
  {
    uint64_t v9 = [a1 directionsResponse];
    [v9 clearSensitiveFields:a2];
  }
  uint64_t v13 = [a1 etaResponse];
  [v13 clearSensitiveFields:a2];
LABEL_11:
}

uint64_t GEORouteHypothesisResponseHasSensitiveFields(void *a1)
{
  if (!a1) {
    return 0;
  }
  char v2 = [a1 directionsResponse];
  if (GEODirectionsResponseHasSensitiveFields(v2))
  {
    uint64_t HasSensitiveFields = 1;
  }
  else
  {
    uint64_t v4 = [a1 etaResponse];
    uint64_t HasSensitiveFields = GEOETAResponseHasSensitiveFields((uint64_t)v4);
  }
  return HasSensitiveFields;
}

void sub_18970DB58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18970E92C(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x268], 8);
  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Unwind_Resume(a1);
}

void sub_18970EB90(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id GEOGetKeyBagLog()
{
  if (qword_1EB29F8D8 != -1) {
    dispatch_once(&qword_1EB29F8D8, &__block_literal_global_42);
  }
  os_log_t v0 = (void *)qword_1EB29F8D0;

  return v0;
}

void __GEOGetKeyBagLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "KeyBag");
  uint64_t v1 = (void *)qword_1EB29F8D0;
  qword_1EB29F8D0 = (uint64_t)v0;
}

void sub_18971098C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBCompanionSubscriptionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFFBFFF9FFFAFFF8), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 92) >> 4) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v82 = v17;
        char v83 = v7;
        char v84 = v18 | v17;
        if ((v18 | v7)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v85 = (v19 == 0) | v18;
        BOOL v86 = v18;
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_123;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_123:
      int v80 = 1;
      goto LABEL_124;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v86;
    if ((v85 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 92) & 0x40) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 48;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_141;
        }
        __int16 v75 = *(_WORD *)(a1 + 92) << 9;
        goto LABEL_120;
      case 2:
        if (!v34) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 92) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_141;
          }
          __int16 v75 = *(_WORD *)(a1 + 92) << 7;
LABEL_120:
          v8 += v75 >> 15;
          goto LABEL_121;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_141;
        }
        char v44 = objc_alloc_init(GEOMapRegion);
        if (GEOMapRegionReadAllFrom((uint64_t)v44, (void *)v3))
        {
          PBReaderRecallMark();
          char v45 = *(void **)(a1 + 64);
          *(void *)(a1 + 64) = v44;
LABEL_76:

          --v8;
LABEL_121:
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_122:
          if (!(v84 & 1 | (v8 != 0))) {
            goto LABEL_123;
          }
          continue;
        }

LABEL_141:
        int v80 = 0;
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_124:
        unint64_t v81 = &OBJC_IVAR___GEOPDSPunchInResultHints__name;
        if (v82) {
LABEL_125:
        }
          *(_WORD *)(a1 + v81[954]) |= 0x10u;
        if (v86 || (v80 & 1) == 0)
        {
          *(_WORD *)(a1 + v81[954]) |= 0x40u;
          *(_WORD *)(a1 + v81[954]) |= 0x100u;
          *(_WORD *)(a1 + v81[954]) |= 0x80u;
          *(_WORD *)(a1 + v81[954]) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            int v76 = *v19++;
            __int16 v77 = 64;
            switch(v76)
            {
              case 0:
                goto LABEL_134;
              case 1:
                goto LABEL_133;
              case 2:
                __int16 v77 = 256;
                goto LABEL_133;
              case 5:
                __int16 v77 = 128;
                goto LABEL_133;
              case 6:
                __int16 v77 = 32;
LABEL_133:
                *(_WORD *)(a1 + v81[954]) |= v77;
                break;
              default:
                continue;
            }
          }
        }
LABEL_134:
        if (v80) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v86)
        {
          unint64_t v78 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if ((v83 & 1) == 0) {
          goto LABEL_93;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 92) |= 1u;
        while (2)
        {
          uint64_t v49 = *v20;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v22) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v30 = v47++ >= 9;
              if (v30)
              {
                uint64_t v48 = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v48 = 0;
        }
LABEL_98:
        uint64_t v74 = 24;
        goto LABEL_111;
      case 4:
        if ((v83 & 1) == 0) {
          goto LABEL_93;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        *(_WORD *)(a1 + 92) |= 4u;
        while (2)
        {
          uint64_t v56 = *v20;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v22) + v57);
            *(void *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v30 = v54++ >= 9;
              if (v30)
              {
                LODWORD(v55) = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v55) = 0;
        }
LABEL_102:
        *(_DWORD *)(a1 + 84) = v55;
        goto LABEL_122;
      case 5:
        if (!v34) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 92) & 0x80) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 56;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_141;
        }
        __int16 v75 = *(_WORD *)(a1 + 92) << 8;
        goto LABEL_120;
      case 6:
        if (!v34) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 92) & 0x20) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 32;
LABEL_75:
          char v45 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
          goto LABEL_76;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_141;
        }
        __int16 v75 = *(_WORD *)(a1 + 92) << 10;
        goto LABEL_120;
      case 7:
        if ((v83 & 1) == 0) {
          goto LABEL_93;
        }
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v62 = 0;
        *(_WORD *)(a1 + 92) |= 8u;
        while (2)
        {
          uint64_t v63 = *v20;
          uint64_t v64 = *(void *)(v3 + v63);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(v3 + *v22) + v64);
            *(void *)(v3 + v63) = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              BOOL v30 = v61++ >= 9;
              if (v30)
              {
                uint64_t v62 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v62 = 0;
        }
LABEL_106:
        *(unsigned char *)(a1 + 88) = v62 != 0;
        goto LABEL_122;
      case 8:
        if ((v83 & 1) == 0) {
          goto LABEL_93;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 92) |= 2u;
        while (2)
        {
          uint64_t v69 = *v20;
          uint64_t v70 = *(void *)(v3 + v69);
          unint64_t v71 = v70 + 1;
          if (v70 == -1 || v71 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(v3 + *v22) + v70);
            *(void *)(v3 + v69) = v71;
            v48 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              BOOL v30 = v68++ >= 9;
              if (v30)
              {
                uint64_t v48 = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v48 = 0;
        }
LABEL_110:
        uint64_t v74 = 40;
LABEL_111:
        *(void *)(a1 + v74) = v48;
        goto LABEL_122;
      default:
        if ((v82 & 1) == 0 || (*(_WORD *)(a1 + 92) & 0x10) != 0)
        {
LABEL_93:
          char v73 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v73 & 1) == 0)
          {
            int v80 = 0;
            goto LABEL_124;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v80 = 0;
            unint64_t v81 = &OBJC_IVAR___GEOPDSPunchInResultHints__name;
            goto LABEL_125;
          }
        }
        goto LABEL_122;
    }
  }
}

void sub_1897114A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897116F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189711864(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189712330(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBCompanionSubscriptionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBCompanionSubscriptionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPBCompanionSubscriptionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPBCompanionSubscriptionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPBCompanionSubscriptionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 64) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1897124D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBCompanionSubscriptionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPBCompanionSubscriptionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18971253C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBCompanionSubscriptionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_66;
          }
          goto LABEL_44;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1)) {
            goto LABEL_66;
          }
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 5u:
          if (v15 == 2) {
            goto LABEL_44;
          }
          goto LABEL_66;
        case 6u:
          if (v15 == 2) {
            goto LABEL_44;
          }
          goto LABEL_66;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v33 = 0;
          break;
        default:
LABEL_44:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_66:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v34 = *v2;
        uint64_t v35 = *(void *)&a1[v34];
        unint64_t v36 = v35 + 1;
        if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
          break;
        }
        int v37 = *(char *)(*(void *)&a1[*v5] + v35);
        *(void *)&a1[v34] = v36;
        if (v37 < 0)
        {
          BOOL v22 = v33++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_63;
      }
LABEL_62:
      a1[*v4] = 1;
LABEL_63:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

void sub_189712B4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBCompanionSubscriptionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  BOOL v2 = (*(_WORD *)(a1 + 92) & 0x3E0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_189713000(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189713518(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897137EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBCompanionSubscriptionsInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v6 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v15 = v11 != 0;
        char v16 = v15 & ~(_BYTE)v10 | v8;
        unsigned __int8 v17 = v15 | v10;
        char v62 = v16;
        char v63 = v17 | v16;
        if ((v17 | v6)) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = a3;
        }
        uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        char v64 = (v18 == 0) | v17;
        BOOL v65 = v17;
        int v21 = (int *)MEMORY[0x1E4F940B8];
        BOOL v22 = (int *)MEMORY[0x1E4F940E0];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v8;
LABEL_8:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_10:
        ++v7;
        uint64_t v8 = v12;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v22) || *(unsigned char *)(v3 + *v20)) {
      goto LABEL_83;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v19;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v22)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v21) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_83:
      int v60 = 1;
      goto LABEL_84;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v65;
    if ((v64 & 1) == 0)
    {
      uint64_t v35 = v18;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if ((int)v33 > 2)
    {
      if (v33 == 3)
      {
        if (v6)
        {
          *(unsigned char *)(a1 + 64) |= 1u;
          uint64_t v48 = *v19;
          unint64_t v49 = *(void *)(v3 + v48);
          if (v49 <= 0xFFFFFFFFFFFFFFF7 && v49 + 8 <= *(void *)(v3 + *v22))
          {
            uint64_t v50 = *(void *)(*(void *)(v3 + *v21) + v49);
            *(void *)(v3 + v48) = v49 + 8;
          }
          else
          {
            *(unsigned char *)(v3 + *v20) = 1;
            uint64_t v50 = 0;
          }
          *(void *)(a1 + 32) = v50;
          goto LABEL_72;
        }
        goto LABEL_71;
      }
      if (v33 == 100)
      {
        if (v6)
        {
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v43 = 0;
          *(unsigned char *)(a1 + 64) |= 2u;
          while (1)
          {
            uint64_t v44 = *v19;
            uint64_t v45 = *(void *)(v3 + v44);
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)(v3 + *v22)) {
              break;
            }
            char v47 = *(unsigned char *)(*(void *)(v3 + *v21) + v45);
            *(void *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if ((v47 & 0x80) == 0) {
              goto LABEL_75;
            }
            v41 += 7;
            BOOL v30 = v42++ >= 9;
            if (v30)
            {
              uint64_t v43 = 0;
              goto LABEL_77;
            }
          }
          *(unsigned char *)(v3 + *v20) = 1;
LABEL_75:
          if (*(unsigned char *)(v3 + *v20)) {
            uint64_t v43 = 0;
          }
LABEL_77:
          *(unsigned char *)(a1 + 60) = v43 != 0;
          goto LABEL_72;
        }
        goto LABEL_71;
      }
LABEL_65:
      if ((v62 & 1) != 0 && (*(unsigned char *)(a1 + 64) & 4) == 0)
      {
        if (!*(void *)(a1 + 16))
        {
          id v51 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          char v52 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v51;
        }
        int v53 = PBUnknownFieldAdd();
        unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940E0];
        if (!v53)
        {
          int v60 = 0;
          unsigned int v61 = &OBJC_IVAR___GEOPDSPunchInResultHints__name;
          goto LABEL_85;
        }
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    if (v33 == 1) {
      break;
    }
    if (v33 != 2) {
      goto LABEL_65;
    }
    if (v34)
    {
      if ((*(unsigned char *)(a1 + 64) & 0x10) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_104;
        }
        v7 += *(unsigned __int8 *)(a1 + 64) << 27 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_104;
        }
        uint64_t v39 = objc_alloc_init(GEOPBOfflineTileMetadata);
        if (!GEOPBOfflineTileMetadataReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_103;
        }
        PBReaderRecallMark();
        uint64_t v40 = *(void **)(a1 + 40);
        *(void *)(a1 + 40) = v39;

        --v7;
      }
      goto LABEL_80;
    }
LABEL_71:
    char v54 = PBReaderSkipValueWithTag();
    BOOL v22 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
    if ((v54 & 1) == 0)
    {
      int v60 = 0;
      goto LABEL_84;
    }
LABEL_72:
    if (!(v63 & 1 | (v7 != 0))) {
      goto LABEL_83;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 64) & 8) != 0) {
    goto LABEL_71;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_104;
  }
  uint64_t v39 = objc_alloc_init(GEOPBCompanionSubscription);
  if (GEOPBCompanionSubscriptionReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEOPBCompanionSubscriptionsInfo _addNoFlagsLoadedSubscription:](a1, v39);

LABEL_80:
    unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
    BOOL v22 = (int *)MEMORY[0x1E4F940E0];
    goto LABEL_72;
  }
LABEL_103:

LABEL_104:
  int v60 = 0;
  unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_84:
  unsigned int v61 = &OBJC_IVAR___GEOPDSPunchInResultHints__name;
  if ((v62 & 1) == 0) {
    goto LABEL_86;
  }
LABEL_85:
  *(unsigned char *)(a1 + v61[968]) |= 4u;
LABEL_86:
  if (v65 || (v60 & 1) == 0)
  {
    *(unsigned char *)(a1 + v61[968]) |= 8u;
    *(unsigned char *)(a1 + v61[968]) |= 0x10u;
    goto LABEL_96;
  }
  if (v18)
  {
    while (1)
    {
      int v57 = *v18++;
      int v56 = v57;
      if (v57 == 1) {
        break;
      }
      if (v56 == 2)
      {
        char v55 = 16;
LABEL_92:
        *(unsigned char *)(a1 + v61[968]) |= v55;
      }
      else if (!v56)
      {
        goto LABEL_96;
      }
    }
    char v55 = 8;
    goto LABEL_92;
  }
LABEL_96:
  if (v60) {
    unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v65)
  {
    unint64_t v58 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189714274(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189714CD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPBCompanionSubscriptionsInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPBCompanionSubscriptionsInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBCompanionSubscriptionsInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPBCompanionSubscriptionsInfoReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPBCompanionSubscriptionsInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPBCompanionSubscriptionsInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPBCompanionSubscriptionsInfoCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189714F6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBCompanionSubscriptionsInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPBCompanionSubscriptionsInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189714FD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBCompanionSubscriptionsInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        goto LABEL_48;
      }
      unint64_t v18 = v8 >> 3;
      if ((int)(v8 >> 3) <= 2) {
        break;
      }
      if (v18 != 3)
      {
        if (v18 == 100)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v19 = 0;
          while (1)
          {
            uint64_t v20 = *v2;
            uint64_t v21 = *(void *)&a1[v20];
            unint64_t v22 = v21 + 1;
            if (v21 == -1 || v22 > *(void *)&a1[*v3]) {
              break;
            }
            int v23 = *(char *)(*(void *)&a1[*v5] + v21);
            *(void *)&a1[v20] = v22;
            if (v23 < 0 && v19++ <= 8) {
              continue;
            }
            goto LABEL_47;
          }
          uint64_t v14 = *v4;
LABEL_46:
          a1[v14] = 1;
          goto LABEL_47;
        }
LABEL_43:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_50;
        }
        goto LABEL_47;
      }
      if (v16 != 1) {
        goto LABEL_50;
      }
      uint64_t v25 = *v2;
      unint64_t v26 = *(void *)&a1[v25];
      if (v26 > 0xFFFFFFFFFFFFFFF7) {
        goto LABEL_46;
      }
      unint64_t v27 = v26 + 8;
      if (v27 > *(void *)&a1[*v3]) {
        goto LABEL_46;
      }
      *(void *)&a1[v25] = v27;
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if (v18 == 1)
    {
      if (v16 != 2 || !PBReaderPlaceMark() || !GEOPBCompanionSubscriptionIsValid(a1))
      {
LABEL_50:
        PBReaderRecallMark();
        return 0;
      }
      goto LABEL_38;
    }
    if (v18 == 2)
    {
      if (v16 != 2 || !PBReaderPlaceMark() || !GEOPBOfflineTileMetadataIsValid(a1)) {
        goto LABEL_50;
      }
LABEL_38:
      PBReaderRecallMark();
      goto LABEL_47;
    }
    goto LABEL_43;
  }
LABEL_48:
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_189715500(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBCompanionSubscriptionsInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 64) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189715A98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189715F2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189716418(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPBOfflineDataConfigurationReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 108)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFBFFFDFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 1;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v70 = v18;
        char v71 = v19 | v18;
        if ((v19 | v9)) {
          uint64_t v20 = 0;
        }
        else {
          uint64_t v20 = a3;
        }
        char v72 = (v20 == 0) | v19;
        BOOL v73 = v19;
        uint64_t v21 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        int v23 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        unsigned int v24 = (int *)MEMORY[0x1E4F940B8];
        uint64_t v25 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_92;
    }
    char v26 = 0;
    unsigned int v27 = 0;
    unint64_t v28 = 0;
    while (1)
    {
      uint64_t v29 = *v21;
      uint64_t v30 = *(void *)(v3 + v29);
      unint64_t v31 = v30 + 1;
      if (v30 == -1 || v31 > *(void *)(v3 + *v7)) {
        break;
      }
      char v32 = *(unsigned char *)(*(void *)(v3 + *v24) + v30);
      *(void *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0) {
        goto LABEL_25;
      }
      v26 += 7;
      BOOL v33 = v27++ >= 9;
      if (v33)
      {
        unint64_t v28 = 0;
        int v34 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v34 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v28 = 0;
    }
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_92:
      int v68 = 1;
      goto LABEL_93;
    }
    unint64_t v36 = v28 >> 3;
    BOOL v37 = v73;
    if ((v72 & 1) == 0)
    {
      BOOL v38 = v20;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37 || (*(unsigned char *)(a1 + 108) & 8) != 0) {
          goto LABEL_76;
        }
        unsigned int v42 = v23;
        if (!PBReaderPlaceMark()) {
          goto LABEL_111;
        }
        -[GEOPBOfflineDataConfiguration _reserveActiveVersions:](a1, 1uLL);
        if ((GEOPBOfflineDataLayerVersionReadAllFrom(*(void *)(a1 + 24) + 24 * *(void *)(a1 + v42[580]), v3) & 1) == 0) {
          goto LABEL_111;
        }
        PBReaderRecallMark();
        ++*(void *)(a1 + v42[580]);
        unint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
        int v23 = v42;
        goto LABEL_90;
      case 2:
        if ((v9 & 1) == 0) {
          goto LABEL_76;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(unsigned char *)(a1 + 108) |= 1u;
        while (2)
        {
          uint64_t v49 = *v21;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v24) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v33 = v47++ >= 9;
              if (v33)
              {
                uint64_t v48 = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v48 = 0;
        }
LABEL_81:
        uint64_t v63 = 72;
        goto LABEL_86;
      case 3:
        if (!v37 || (*(unsigned char *)(a1 + 108) & 0x10) != 0) {
          goto LABEL_76;
        }
        int v53 = v25;
        if (!PBReaderPlaceMark()) {
          goto LABEL_111;
        }
        -[GEOPBOfflineDataConfiguration _reserveLatestAvailableVersions:](a1, 1uLL);
        if ((GEOPBOfflineDataLayerVersionReadAllFrom(*(void *)(a1 + 48) + 24 * *(void *)(a1 + v53[584]), v3) & 1) == 0) {
          goto LABEL_111;
        }
        PBReaderRecallMark();
        ++*(void *)(a1 + v53[584]);
        unint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
        int v23 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        uint64_t v25 = v53;
        goto LABEL_91;
      case 4:
        if ((v9 & 1) == 0) {
          goto LABEL_76;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v48 = 0;
        *(unsigned char *)(a1 + 108) |= 2u;
        while (2)
        {
          uint64_t v56 = *v21;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v24) + v57);
            *(void *)(v3 + v56) = v58;
            v48 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              BOOL v33 = v55++ >= 9;
              if (v33)
              {
                uint64_t v48 = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v48 = 0;
        }
LABEL_85:
        uint64_t v63 = 80;
LABEL_86:
        *(void *)(a1 + v63) = v48;
        goto LABEL_91;
      case 5:
        if (!v37) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 108) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_111;
          }
          v8 += *(unsigned __int8 *)(a1 + 108) << 26 >> 31;
          goto LABEL_89;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_111;
        }
        int v60 = objc_alloc_init(GEOPBOfflineTileMetadata);
        if (GEOPBOfflineTileMetadataReadAllFrom((uint64_t)v60, (void *)v3))
        {
          PBReaderRecallMark();
          unsigned int v61 = *(void **)(a1 + 88);
          *(void *)(a1 + 88) = v60;

          --v8;
LABEL_89:
          unint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          int v23 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
LABEL_90:
          uint64_t v25 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
          goto LABEL_91;
        }

LABEL_111:
        int v68 = 0;
        uint64_t v69 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        unint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_94:
        if (v70) {
LABEL_95:
        }
          *(unsigned char *)(a1 + v69[578]) |= 4u;
        if (v73 || (v68 & 1) == 0)
        {
          *(unsigned char *)(a1 + v69[578]) |= 8u;
          *(unsigned char *)(a1 + v69[578]) |= 0x10u;
          *(unsigned char *)(a1 + v69[578]) |= 0x20u;
        }
        else if (v20)
        {
          while (1)
          {
            int v65 = *v20++;
            char v64 = 8;
            switch(v65)
            {
              case 0:
                goto LABEL_104;
              case 1:
                goto LABEL_102;
              case 3:
                char v64 = 16;
                goto LABEL_102;
              case 5:
                char v64 = 32;
LABEL_102:
                *(unsigned char *)(a1 + v69[578]) |= v64;
                break;
              default:
                continue;
            }
          }
        }
LABEL_104:
        if (v68) {
          uint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          uint64_t v3 = 0;
        }
        if (v73)
        {
          char v66 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v70 & 1) == 0 || (*(unsigned char *)(a1 + 108) & 4) != 0)
        {
LABEL_76:
          char v62 = PBReaderSkipValueWithTag();
          uint64_t v25 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
          int v23 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          unint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v62 & 1) == 0)
          {
            int v68 = 0;
LABEL_93:
            uint64_t v69 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_94;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v44 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v43;
          }
          int v45 = PBUnknownFieldAdd();
          unint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          int v23 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
          uint64_t v25 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
          if (!v45)
          {
            int v68 = 0;
            uint64_t v69 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_95;
          }
        }
LABEL_91:
        if (!(v71 & 1 | (v8 != 0))) {
          goto LABEL_92;
        }
        continue;
    }
  }
}

void sub_189716F50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189717230(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971783C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPBOfflineDataConfigurationReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBOfflineDataConfigurationReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 96) = [v6 position];
      *(_DWORD *)(a1 + 100) = [v6 length];
      uint64_t Specified = GEOPBOfflineDataConfigurationReadSpecified(a1, (uint64_t)v6, (int *)&GEOPBOfflineDataConfigurationReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189717A90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189717D10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189717F44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActiveResourceFilterReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOActiveResourceFilterReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18971925C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActiveResourceFilterIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 1) {
            goto LABEL_48;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_42;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_42;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_48;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_45;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_48;
          }
          unsigned int v27 = 0;
          break;
        case 4u:
          if (v16 == 2 && (PBReaderSkipValueWithTag() & 1) != 0) {
            continue;
          }
          goto LABEL_48;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_48:
          BOOL v32 = 0;
          goto LABEL_47;
      }
      while (1)
      {
        uint64_t v28 = *v2;
        uint64_t v29 = *(void *)&a1[v28];
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
          break;
        }
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v26 = v27++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_45;
      }
LABEL_41:
      uint64_t v14 = *v4;
LABEL_42:
      a1[v14] = 1;
LABEL_45:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
LABEL_47:
  PBReaderRecallMark();
  return v32;
}

BOOL GEOActiveResourceFiltersReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v18 = objc_alloc_init(GEOActiveResourceFilter);
          if (!GEOActiveResourceFilterReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addFilter:", v18, 0, 0);
        }
        else
        {
          if (!a1[1])
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v20 = (void *)a1[1];
            a1[1] = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18971A390(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActiveResourceFiltersReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOActiveResourceFiltersReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18971A3F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActiveResourceFiltersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOActiveResourceFilterIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_18971B340(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971B92C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971BCFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971C0CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971C248(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971C3C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971C540(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971C6BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971C838(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971C9B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971CB30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971CCAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971CE28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971CFA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971D120(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971D29C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971D418(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971D594(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971D710(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971D88C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971DBD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971DD50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971DF30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971E300(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971E6D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971EAA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971EE70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971F240(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971F610(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971F9E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971FDB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189720188(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189720558(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897206D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189720850(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897209CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189720E24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897212B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189721434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189722328(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897224A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189722620(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18972279C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189722918(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189722A94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189722C10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189722D90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189722F04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189723080(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897234A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18972361C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189723BA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOActiveTileGroupReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOActiveTileGroupReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18972914C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOActiveTileGroupIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
LABEL_294:
    if (a1[*v4]) {
      BOOL v74 = 1;
    }
    else {
      BOOL v74 = v5 == 0;
    }
    uint64_t v75 = !v74;
    PBReaderRecallMark();
    return v75;
  }
  int v5 = 0;
  char v6 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_294;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    unint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      uint64_t v11 = *(void *)&a1[v10];
      unint64_t v12 = v11 + 1;
      if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
      *(void *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      BOOL v14 = v8++ >= 9;
      if (v14)
      {
        unint64_t v9 = 0;
        int v15 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v15 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v9 = 0;
    }
LABEL_14:
    int v16 = v9 & 7;
    if (v15 || v16 == 4) {
      goto LABEL_294;
    }
    switch((v9 >> 3))
    {
      case 1u:
        if (v5 || (v9 & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v18 = 0;
        do
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3])
          {
            int v5 = 1;
            a1[*v4] = 1;
            goto LABEL_270;
          }
          int v22 = *(char *)(*(void *)&a1[*v6] + v20);
          *(void *)&a1[v19] = v21;
          int v5 = 1;
          if ((v22 & 0x80000000) == 0) {
            break;
          }
          BOOL v23 = v18++ > 8;
        }
        while (!v23);
        goto LABEL_270;
      case 2u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOActiveTileSetIsValid(a1)) {
          goto LABEL_301;
        }
        goto LABEL_269;
      case 3u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 4u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 6u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOAttributionIsValid(a1)) {
          goto LABEL_301;
        }
        goto LABEL_269;
      case 7u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEORegionalResourceTileIsValid(a1)) {
          goto LABEL_301;
        }
        goto LABEL_269;
      case 8u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEORegionalResourceRegionIsValid(a1)) {
          goto LABEL_301;
        }
        goto LABEL_269;
      case 9u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0xBu:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0xFu:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x10u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x12u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x13u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x15u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x16u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x17u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x18u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x19u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x1Au:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x1Bu:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x1Cu:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x1Du:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x23u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x24u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x26u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x27u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x28u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOVersionManifestIsValid(a1)) {
          goto LABEL_301;
        }
        goto LABEL_269;
      case 0x29u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x2Au:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x2Bu:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x2Cu:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x2Du:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x2Eu:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x2Fu:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x30u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x31u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x32u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x33u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x34u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x35u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x36u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1)) {
          goto LABEL_301;
        }
        goto LABEL_269;
      case 0x37u:
        if ((v9 & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v24 = 0;
        while (1)
        {
          uint64_t v25 = *v2;
          uint64_t v26 = *(void *)&a1[v25];
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
            goto LABEL_166;
          }
          int v28 = *(char *)(*(void *)&a1[*v6] + v26);
          *(void *)&a1[v25] = v27;
          if (v28 < 0)
          {
            BOOL v23 = v24++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_270;
        }
      case 0x38u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOTileSetRegionIsValid(a1)) {
          goto LABEL_301;
        }
        goto LABEL_269;
      case 0x39u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x44u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x45u:
      case 0x62u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOResourceIsValid(a1)) {
          goto LABEL_301;
        }
        goto LABEL_269;
      case 0x46u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEORegionalResourceSetIsValid(a1)) {
          goto LABEL_301;
        }
        goto LABEL_269;
      case 0x47u:
        if ((v9 & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v29 = 0;
        while (1)
        {
          uint64_t v30 = *v2;
          uint64_t v31 = *(void *)&a1[v30];
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
            goto LABEL_166;
          }
          int v33 = *(char *)(*(void *)&a1[*v6] + v31);
          *(void *)&a1[v30] = v32;
          if (v33 < 0)
          {
            BOOL v23 = v29++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_270;
        }
      case 0x48u:
        if (v16 != 2)
        {
          if ((v9 & 7) != 0) {
            goto LABEL_301;
          }
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_166;
            }
            int v37 = *(char *)(*(void *)&a1[*v6] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              unsigned int v38 = v16++;
              if (v38 <= 8) {
                continue;
              }
            }
            goto LABEL_270;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_301;
        }
LABEL_274:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v64 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v65 = *v2;
            uint64_t v66 = *(void *)&a1[v65];
            unint64_t v67 = v66 + 1;
            if (v66 == -1 || v67 > *(void *)&a1[*v3]) {
              break;
            }
            int v68 = *(char *)(*(void *)&a1[*v6] + v66);
            *(void *)&a1[v65] = v67;
            if (v68 < 0)
            {
              BOOL v14 = v64++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_274;
          }
          a1[*v4] = 1;
        }
        goto LABEL_269;
      case 0x49u:
        if (v16 != 2)
        {
          if ((v9 & 7) != 0) {
            goto LABEL_301;
          }
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              break;
            }
            int v42 = *(char *)(*(void *)&a1[*v6] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              unsigned int v43 = v16++;
              if (v43 <= 8) {
                continue;
              }
            }
            goto LABEL_270;
          }
LABEL_166:
          a1[*v4] = 1;
          goto LABEL_270;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_301;
        }
LABEL_284:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v69 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v70 = *v2;
            uint64_t v71 = *(void *)&a1[v70];
            unint64_t v72 = v71 + 1;
            if (v71 == -1 || v72 > *(void *)&a1[*v3]) {
              break;
            }
            int v73 = *(char *)(*(void *)&a1[*v6] + v71);
            *(void *)&a1[v70] = v72;
            if (v73 < 0)
            {
              BOOL v14 = v69++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_284;
          }
          a1[*v4] = 1;
        }
        goto LABEL_269;
      case 0x4Au:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOStaleResourceIsValid(a1)) {
          goto LABEL_301;
        }
        goto LABEL_269;
      case 0x4Bu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEODataSetDescriptionIsValid(a1)) {
          goto LABEL_301;
        }
        goto LABEL_269;
      case 0x4Eu:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x4Fu:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x50u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x51u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x53u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x54u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x55u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x57u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x5Bu:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x5Du:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x5Eu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOURLInfoSetIsValid(a1)) {
          goto LABEL_301;
        }
        goto LABEL_269;
      case 0x5Fu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOMuninBucketIsValid(a1)) {
          goto LABEL_301;
        }
        goto LABEL_269;
      case 0x60u:
        if (v16 == 2) {
          goto LABEL_204;
        }
        goto LABEL_301;
      case 0x61u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEODisplayStringIsValid(a1)) {
          goto LABEL_301;
        }
        goto LABEL_269;
      case 0x63u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOOfflineMetadataIsValid(a1)) {
          goto LABEL_301;
        }
        goto LABEL_269;
      case 0x64u:
        if (v16 != 2 || !PBReaderPlaceMark() || *(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
          goto LABEL_301;
        }
        char v44 = 0;
        char v45 = 0;
        while (2)
        {
          if (a1[*v4]) {
            goto LABEL_267;
          }
          char v46 = 0;
          unsigned int v47 = 0;
          unint64_t v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              break;
            }
            char v52 = *(unsigned char *)(*(void *)&a1[*v6] + v50);
            *(void *)&a1[v49] = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if ((v52 & 0x80) == 0) {
              goto LABEL_227;
            }
            v46 += 7;
            BOOL v14 = v47++ >= 9;
            if (v14)
            {
              unint64_t v48 = 0;
              int v53 = a1[*v4];
              goto LABEL_229;
            }
          }
          a1[*v4] = 1;
LABEL_227:
          int v53 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v48 = 0;
          }
LABEL_229:
          if (v53) {
            goto LABEL_267;
          }
          int v54 = v48 & 7;
          if ((v48 >> 3) == 2)
          {
            if (v54 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_301;
            }
            char v45 = 1;
          }
          else if ((v48 >> 3) == 1)
          {
            if (v54 != 2) {
              goto LABEL_301;
            }
            char v44 = 1;
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_301;
            }
          }
          else if (!PBReaderSkipValueWithTag())
          {
            goto LABEL_301;
          }
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_267;
          }
          continue;
        }
      case 0x65u:
        if (v16 != 2 || !PBReaderPlaceMark() || *(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
          goto LABEL_301;
        }
        char v44 = 0;
        char v45 = 0;
LABEL_245:
        if (a1[*v4]) {
          goto LABEL_267;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        unint64_t v57 = 0;
        while (1)
        {
          uint64_t v58 = *v2;
          uint64_t v59 = *(void *)&a1[v58];
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)&a1[*v3]) {
            break;
          }
          char v61 = *(unsigned char *)(*(void *)&a1[*v6] + v59);
          *(void *)&a1[v58] = v60;
          v57 |= (unint64_t)(v61 & 0x7F) << v55;
          if ((v61 & 0x80) == 0) {
            goto LABEL_254;
          }
          v55 += 7;
          BOOL v14 = v56++ >= 9;
          if (v14)
          {
            unint64_t v57 = 0;
            int v62 = a1[*v4];
            goto LABEL_256;
          }
        }
        a1[*v4] = 1;
LABEL_254:
        int v62 = a1[*v4];
        if (a1[*v4]) {
          unint64_t v57 = 0;
        }
LABEL_256:
        if (v62)
        {
LABEL_267:
          if ((v44 & 1) == 0 || (v45 & 1) == 0) {
            goto LABEL_301;
          }
LABEL_269:
          PBReaderRecallMark();
LABEL_270:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_294;
          }
          continue;
        }
        int v63 = v57 & 7;
        if ((v57 >> 3) != 2)
        {
          if ((v57 >> 3) == 1)
          {
            if (v63 != 2) {
              goto LABEL_301;
            }
            char v44 = 1;
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_301;
            }
          }
          else if (!PBReaderSkipValueWithTag())
          {
            goto LABEL_301;
          }
LABEL_266:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_267;
          }
          goto LABEL_245;
        }
        if (v63 == 2 && (PBReaderSkipValueWithTag() & 1) != 0)
        {
          char v45 = 1;
          goto LABEL_266;
        }
LABEL_301:
        PBReaderRecallMark();
        return 0;
      default:
LABEL_204:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_301;
        }
        goto LABEL_270;
    }
  }
}

BOOL GEOActiveTileSetIsValid(char *a1)
{
  uint64_t v80 = *MEMORY[0x1E4F143B8];
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v78 = 0;
  uint64_t v79 = 0;
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v75 = 0;
  }
  else
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_144;
          }
          goto LABEL_98;
        case 3u:
          unint64_t v17 = 0;
          BOOL v18 = 1;
          while (1)
          {
            int v19 = *((_DWORD *)&v78 + v17);
            if (!v19) {
              break;
            }
            if (v19 != 3)
            {
              BOOL v18 = v17++ < 3;
              if (v17 != 4) {
                continue;
              }
            }
            goto LABEL_144;
          }
          *((_DWORD *)&v78 + v17) = 3;
          if (!v18 || v15) {
            goto LABEL_144;
          }
          unsigned int v55 = 0;
          while (1)
          {
            uint64_t v56 = *v2;
            uint64_t v57 = *(void *)&a1[v56];
            unint64_t v58 = v57 + 1;
            if (v57 == -1 || v58 > *(void *)&a1[*v3]) {
              goto LABEL_136;
            }
            int v59 = *(char *)(*(void *)&a1[*v5] + v57);
            *(void *)&a1[v56] = v58;
            if (v59 < 0)
            {
              BOOL v34 = v55++ > 8;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_137;
          }
        case 4u:
          unint64_t v20 = 0;
          BOOL v21 = 1;
          while (1)
          {
            int v22 = *((_DWORD *)&v78 + v20);
            if (!v22) {
              break;
            }
            if (v22 != 4)
            {
              BOOL v21 = v20++ < 3;
              if (v20 != 4) {
                continue;
              }
            }
            goto LABEL_144;
          }
          *((_DWORD *)&v78 + v20) = 4;
          if (!v21 || v15) {
            goto LABEL_144;
          }
          unsigned int v60 = 0;
          while (1)
          {
            uint64_t v61 = *v2;
            uint64_t v62 = *(void *)&a1[v61];
            unint64_t v63 = v62 + 1;
            if (v62 == -1 || v63 > *(void *)&a1[*v3]) {
              goto LABEL_136;
            }
            int v64 = *(char *)(*(void *)&a1[*v5] + v62);
            *(void *)&a1[v61] = v63;
            if (v64 < 0)
            {
              BOOL v34 = v60++ > 8;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_137;
          }
        case 5u:
          unint64_t v23 = 0;
          BOOL v24 = 1;
          while (1)
          {
            int v25 = *((_DWORD *)&v78 + v23);
            if (!v25) {
              break;
            }
            if (v25 != 5)
            {
              BOOL v24 = v23++ < 3;
              if (v23 != 4) {
                continue;
              }
            }
            goto LABEL_144;
          }
          *((_DWORD *)&v78 + v23) = 5;
          if (!v24 || v15) {
            goto LABEL_144;
          }
          unsigned int v65 = 0;
          while (1)
          {
            uint64_t v66 = *v2;
            uint64_t v67 = *(void *)&a1[v66];
            unint64_t v68 = v67 + 1;
            if (v67 == -1 || v68 > *(void *)&a1[*v3]) {
              goto LABEL_136;
            }
            int v69 = *(char *)(*(void *)&a1[*v5] + v67);
            *(void *)&a1[v66] = v68;
            if (v69 < 0)
            {
              BOOL v34 = v65++ > 8;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_137;
          }
        case 6u:
          unint64_t v26 = 0;
          BOOL v27 = 1;
          while (1)
          {
            int v28 = *((_DWORD *)&v78 + v26);
            if (!v28) {
              break;
            }
            if (v28 != 6)
            {
              BOOL v27 = v26++ < 3;
              if (v26 != 4) {
                continue;
              }
            }
            goto LABEL_144;
          }
          *((_DWORD *)&v78 + v26) = 6;
          if (!v27 || v15)
          {
LABEL_144:
            PBReaderRecallMark();
            return 0;
          }
          unsigned int v70 = 0;
          while (1)
          {
            uint64_t v71 = *v2;
            uint64_t v72 = *(void *)&a1[v71];
            unint64_t v73 = v72 + 1;
            if (v72 == -1 || v73 > *(void *)&a1[*v3]) {
              break;
            }
            int v74 = *(char *)(*(void *)&a1[*v5] + v72);
            *(void *)&a1[v71] = v73;
            if (v74 < 0)
            {
              BOOL v34 = v70++ > 8;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_137;
          }
LABEL_136:
          a1[*v4] = 1;
LABEL_137:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_138;
          }
          break;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_144;
          }
          unsigned int v29 = 0;
          while (1)
          {
            uint64_t v30 = *v2;
            uint64_t v31 = *(void *)&a1[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
              goto LABEL_136;
            }
            int v33 = *(char *)(*(void *)&a1[*v5] + v31);
            *(void *)&a1[v30] = v32;
            if (v33 < 0)
            {
              BOOL v34 = v29++ > 8;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_137;
          }
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTileSetRegionIsValid(a1)) {
            goto LABEL_144;
          }
          goto LABEL_72;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOSentinelTileIsValid(a1)) {
            goto LABEL_144;
          }
          goto LABEL_72;
        case 0xAu:
          if (v15 == 2) {
            goto LABEL_98;
          }
          goto LABEL_144;
        case 0xBu:
          if (v15 == 2) {
            goto LABEL_98;
          }
          goto LABEL_144;
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_144;
          }
          unsigned int v35 = 0;
          while (1)
          {
            uint64_t v36 = *v2;
            uint64_t v37 = *(void *)&a1[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&a1[*v3]) {
              goto LABEL_136;
            }
            int v39 = *(char *)(*(void *)&a1[*v5] + v37);
            *(void *)&a1[v36] = v38;
            if (v39 < 0)
            {
              BOOL v34 = v35++ > 8;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_137;
          }
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOCountryRegionTupleIsValid(a1)) {
            goto LABEL_144;
          }
LABEL_72:
          PBReaderRecallMark();
          goto LABEL_137;
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_144;
          }
          unsigned int v40 = 0;
          while (1)
          {
            uint64_t v41 = *v2;
            uint64_t v42 = *(void *)&a1[v41];
            unint64_t v43 = v42 + 1;
            if (v42 == -1 || v43 > *(void *)&a1[*v3]) {
              goto LABEL_136;
            }
            int v44 = *(char *)(*(void *)&a1[*v5] + v42);
            *(void *)&a1[v41] = v43;
            if (v44 < 0)
            {
              BOOL v34 = v40++ > 8;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_137;
          }
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_144;
          }
          unsigned int v45 = 0;
          while (1)
          {
            uint64_t v46 = *v2;
            uint64_t v47 = *(void *)&a1[v46];
            unint64_t v48 = v47 + 1;
            if (v47 == -1 || v48 > *(void *)&a1[*v3]) {
              goto LABEL_136;
            }
            int v49 = *(char *)(*(void *)&a1[*v5] + v47);
            *(void *)&a1[v46] = v48;
            if (v49 < 0)
            {
              BOOL v34 = v45++ > 8;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_137;
          }
        case 0x11u:
          if ((v8 & 7) != 0) {
            goto LABEL_144;
          }
          unsigned int v50 = 0;
          while (1)
          {
            uint64_t v51 = *v2;
            uint64_t v52 = *(void *)&a1[v51];
            unint64_t v53 = v52 + 1;
            if (v52 == -1 || v53 > *(void *)&a1[*v3]) {
              goto LABEL_136;
            }
            int v54 = *(char *)(*(void *)&a1[*v5] + v52);
            *(void *)&a1[v51] = v53;
            if (v54 < 0)
            {
              BOOL v34 = v50++ > 8;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_137;
          }
        case 0x12u:
          if (v15 == 2) {
            goto LABEL_98;
          }
          goto LABEL_144;
        default:
LABEL_98:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_144;
          }
          goto LABEL_137;
      }
    }
LABEL_138:
    BOOL v75 = HIDWORD(v79) != 0;
  }
  if (a1[*v4]) {
    BOOL v76 = 0;
  }
  else {
    BOOL v76 = v75;
  }
  PBReaderRecallMark();
  return v76;
}

BOOL GEORegionalResourceTileIsValid(char *a1)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  [a1 position];
  [a1 length];
  BOOL v2 = 0;
  int v40 = 0;
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v39 = 0;
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  int v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    char v6 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v5])
    {
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v3;
        uint64_t v11 = *(void *)&a1[v10];
        unint64_t v12 = v11 + 1;
        if (v11 == -1 || v12 > *(void *)&a1[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        if (v8++ >= 9)
        {
          unint64_t v9 = 0;
          int v15 = a1[*v5];
          goto LABEL_14;
        }
      }
      a1[*v5] = 1;
LABEL_12:
      int v15 = a1[*v5];
      if (a1[*v5]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v16 = v9 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v9 >> 3))
      {
        case 1u:
          uint64_t v18 = v39;
          if (v39)
          {
            if (v39 == 1) {
              goto LABEL_84;
            }
            if (HIDWORD(v39))
            {
              if (HIDWORD(v39) == 1 || v40) {
                goto LABEL_84;
              }
              uint64_t v18 = 2;
            }
            else
            {
              uint64_t v18 = 1;
            }
          }
          *((_DWORD *)&v39 + v18) = 1;
          if (v16) {
            goto LABEL_84;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v3;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v4]) {
              goto LABEL_77;
            }
            int v25 = *(char *)(*(void *)&a1[*v6] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_78;
          }
        case 2u:
          uint64_t v19 = v39;
          if (!v39) {
            goto LABEL_60;
          }
          if (v39 == 2) {
            goto LABEL_84;
          }
          if (HIDWORD(v39))
          {
            if (HIDWORD(v39) == 2 || v40) {
              goto LABEL_84;
            }
            uint64_t v19 = 2;
          }
          else
          {
            uint64_t v19 = 1;
          }
LABEL_60:
          *((_DWORD *)&v39 + v19) = 2;
          if (v16) {
            goto LABEL_84;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v3;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v4]) {
              goto LABEL_77;
            }
            int v31 = *(char *)(*(void *)&a1[*v6] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_78;
          }
        case 3u:
          uint64_t v20 = v39;
          if (!v39) {
            goto LABEL_69;
          }
          if (v39 == 3) {
            goto LABEL_84;
          }
          if (HIDWORD(v39))
          {
            if (HIDWORD(v39) == 3 || v40)
            {
LABEL_84:
              PBReaderRecallMark();
              return 0;
            }
            uint64_t v20 = 2;
          }
          else
          {
            uint64_t v20 = 1;
          }
LABEL_69:
          *((_DWORD *)&v39 + v20) = 3;
          if (v16) {
            goto LABEL_84;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v3;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v4]) {
              break;
            }
            int v36 = *(char *)(*(void *)&a1[*v6] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_78;
          }
LABEL_77:
          a1[*v5] = 1;
LABEL_78:
          if (*(void *)&a1[*v3] >= *(void *)&a1[*v4]) {
            goto LABEL_79;
          }
          break;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORegionalResourceTileIsValid(a1)) {
            goto LABEL_84;
          }
          goto LABEL_46;
        case 5u:
          if (v16 == 2) {
            goto LABEL_48;
          }
          goto LABEL_84;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOAttributionIsValid(a1)) {
            goto LABEL_84;
          }
LABEL_46:
          PBReaderRecallMark();
          goto LABEL_78;
        case 7u:
          if (v16 == 2) {
            goto LABEL_48;
          }
          goto LABEL_84;
        default:
LABEL_48:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_84;
          }
          goto LABEL_78;
      }
    }
LABEL_79:
    BOOL v2 = v40 != 0;
  }
  if (a1[*v5]) {
    BOOL v37 = 0;
  }
  else {
    BOOL v37 = v2;
  }
  PBReaderRecallMark();
  return v37;
}

BOOL GEORegionalResourceRegionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOTileSetRegionIsValid(a1)) {
            goto LABEL_28;
          }
          goto LABEL_33;
        case 2u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_33;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAttributionIsValid(a1)) {
            goto LABEL_33;
          }
LABEL_28:
          PBReaderRecallMark();
          goto LABEL_31;
        case 4u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_33;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_33:
            PBReaderRecallMark();
            return 0;
          }
LABEL_31:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_32;
          }
          break;
      }
    }
  }
LABEL_32:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORegionalResourceSetIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTileSetRegionIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOResourceIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOStaleResourceIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      unint64_t v18 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v16 != 1) {
          goto LABEL_34;
        }
        uint64_t v19 = *v2;
        unint64_t v20 = *(void *)&a1[v19];
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v21 = v20 + 8, v21 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v19] = v21;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if (v18 == 2 || v18 == 1)
      {
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOResourceIsValid(a1))
        {
LABEL_34:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_34;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_18972C89C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOActiveTileGroupIsDirty(uint64_t a1)
{
  uint64_t v76 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 616));
  uint64_t v2 = *(void *)(a1 + 632);
  if (v2 & 0xFFF7EFE7FD3FFFF8 | *(unsigned char *)(a1 + 640) & 0x7D) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 640) & 2) == 0)
  {
LABEL_5:
    if ((v2 & 0x8101802C00000) != 0) {
      return 1;
    }
    if (v2 < 0)
    {
      long long v66 = 0u;
      long long v67 = 0u;
      long long v64 = 0u;
      long long v65 = 0u;
      id v5 = *(id *)(a1 + 552);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v64 objects:v75 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v65;
LABEL_11:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v65 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEOActiveTileSetIsDirty(*(void *)(*((void *)&v64 + 1) + 8 * v9))) {
            goto LABEL_89;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v64 objects:v75 count:16];
            if (v7) {
              goto LABEL_11;
            }
            break;
          }
        }
      }

      uint64_t v2 = *(void *)(a1 + 632);
    }
    if ((v2 & 0x1000) != 0)
    {
      long long v62 = 0u;
      long long v63 = 0u;
      long long v60 = 0u;
      long long v61 = 0u;
      id v5 = *(id *)(a1 + 144);
      uint64_t v10 = [v5 countByEnumeratingWithState:&v60 objects:v74 count:16];
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = *(void *)v61;
LABEL_21:
        uint64_t v13 = 0;
        while (1)
        {
          if (*(void *)v61 != v12) {
            objc_enumerationMutation(v5);
          }
          if (GEOAttributionIsDirty(*(void *)(*((void *)&v60 + 1) + 8 * v13))) {
            goto LABEL_89;
          }
          if (v11 == ++v13)
          {
            uint64_t v11 = [v5 countByEnumeratingWithState:&v60 objects:v74 count:16];
            if (v11) {
              goto LABEL_21;
            }
            break;
          }
        }
      }

      uint64_t v2 = *(void *)(a1 + 632);
    }
    if ((v2 & 0x400000000000) != 0)
    {
      long long v58 = 0u;
      long long v59 = 0u;
      long long v56 = 0u;
      long long v57 = 0u;
      id v5 = *(id *)(a1 + 416);
      uint64_t v14 = [v5 countByEnumeratingWithState:&v56 objects:v73 count:16];
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v16 = *(void *)v57;
LABEL_31:
        uint64_t v17 = 0;
        while (1)
        {
          if (*(void *)v57 != v16) {
            objc_enumerationMutation(v5);
          }
          if (GEORegionalResourceTileIsDirty(*(os_unfair_lock_s **)(*((void *)&v56 + 1) + 8 * v17))) {
            goto LABEL_89;
          }
          if (v15 == ++v17)
          {
            uint64_t v15 = [v5 countByEnumeratingWithState:&v56 objects:v73 count:16];
            if (v15) {
              goto LABEL_31;
            }
            break;
          }
        }
      }

      uint64_t v2 = *(void *)(a1 + 632);
    }
    if ((v2 & 0x200000000000) != 0)
    {
      long long v54 = 0u;
      long long v55 = 0u;
      long long v52 = 0u;
      long long v53 = 0u;
      id v5 = *(id *)(a1 + 408);
      uint64_t v18 = [v5 countByEnumeratingWithState:&v52 objects:v72 count:16];
      if (v18)
      {
        uint64_t v19 = v18;
        uint64_t v20 = *(void *)v53;
LABEL_41:
        uint64_t v21 = 0;
        while (1)
        {
          if (*(void *)v53 != v20) {
            objc_enumerationMutation(v5);
          }
          if (GEORegionalResourceRegionIsDirty(*(void *)(*((void *)&v52 + 1) + 8 * v21))) {
            goto LABEL_89;
          }
          if (v19 == ++v21)
          {
            uint64_t v19 = [v5 countByEnumeratingWithState:&v52 objects:v72 count:16];
            if (v19) {
              goto LABEL_41;
            }
            break;
          }
        }
      }

      uint64_t v2 = *(void *)(a1 + 632);
    }
    if ((v2 & 0x80) != 0)
    {
      long long v50 = 0u;
      long long v51 = 0u;
      long long v48 = 0u;
      long long v49 = 0u;
      id v5 = *(id *)(a1 + 104);
      uint64_t v22 = [v5 countByEnumeratingWithState:&v48 objects:v71 count:16];
      if (v22)
      {
        uint64_t v23 = v22;
        uint64_t v24 = *(void *)v49;
LABEL_51:
        uint64_t v25 = 0;
        while (1)
        {
          if (*(void *)v49 != v24) {
            objc_enumerationMutation(v5);
          }
          if (GEOResourceIsDirty(*(os_unfair_lock_s **)(*((void *)&v48 + 1) + 8 * v25))) {
            goto LABEL_89;
          }
          if (v23 == ++v25)
          {
            uint64_t v23 = [v5 countByEnumeratingWithState:&v48 objects:v71 count:16];
            if (v23) {
              goto LABEL_51;
            }
            break;
          }
        }
      }

      uint64_t v2 = *(void *)(a1 + 632);
    }
    if ((v2 & 0x1000000000000) != 0)
    {
      long long v46 = 0u;
      long long v47 = 0u;
      long long v44 = 0u;
      long long v45 = 0u;
      id v5 = *(id *)(a1 + 432);
      uint64_t v26 = [v5 countByEnumeratingWithState:&v44 objects:v70 count:16];
      if (v26)
      {
        uint64_t v27 = v26;
        uint64_t v28 = *(void *)v45;
LABEL_61:
        uint64_t v29 = 0;
        while (1)
        {
          if (*(void *)v45 != v28) {
            objc_enumerationMutation(v5);
          }
          if (GEORegionalResourceSetIsDirty(*(os_unfair_lock_s **)(*((void *)&v44 + 1) + 8 * v29))) {
            goto LABEL_89;
          }
          if (v27 == ++v29)
          {
            uint64_t v27 = [v5 countByEnumeratingWithState:&v44 objects:v70 count:16];
            if (v27) {
              goto LABEL_61;
            }
            break;
          }
        }
      }

      uint64_t v2 = *(void *)(a1 + 632);
    }
    if ((v2 & 0x400000000000000) != 0)
    {
      long long v42 = 0u;
      long long v43 = 0u;
      long long v40 = 0u;
      long long v41 = 0u;
      id v5 = *(id *)(a1 + 512);
      uint64_t v30 = [v5 countByEnumeratingWithState:&v40 objects:v69 count:16];
      if (v30)
      {
        uint64_t v31 = v30;
        uint64_t v32 = *(void *)v41;
LABEL_71:
        uint64_t v33 = 0;
        while (1)
        {
          if (*(void *)v41 != v32) {
            objc_enumerationMutation(v5);
          }
          if (GEOStaleResourceIsDirty(*(os_unfair_lock_s **)(*((void *)&v40 + 1) + 8 * v33))) {
            goto LABEL_89;
          }
          if (v31 == ++v33)
          {
            uint64_t v31 = [v5 countByEnumeratingWithState:&v40 objects:v69 count:16];
            if (v31) {
              goto LABEL_71;
            }
            break;
          }
        }
      }

      uint64_t v2 = *(void *)(a1 + 632);
    }
    if ((v2 & 0x2000000) == 0) {
      return 0;
    }
    long long v38 = 0u;
    long long v39 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    id v5 = *(id *)(a1 + 248);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v36 objects:v68 count:16];
    if (!v3)
    {
LABEL_90:

      return v3;
    }
    uint64_t v34 = *(void *)v37;
LABEL_82:
    uint64_t v35 = 0;
    while (1)
    {
      if (*(void *)v37 != v34) {
        objc_enumerationMutation(v5);
      }
      if (GEOResourceIsDirty(*(os_unfair_lock_s **)(*((void *)&v36 + 1) + 8 * v35))) {
        break;
      }
      if (v3 == ++v35)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v36 objects:v68 count:16];
        if (v3) {
          goto LABEL_82;
        }
        goto LABEL_90;
      }
    }
LABEL_89:
    uint64_t v3 = 1;
    goto LABEL_90;
  }
  if (!GEOURLInfoSetIsDirty(*(void *)(a1 + 568)))
  {
    uint64_t v2 = *(void *)(a1 + 632);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOActiveTileGroupIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOActiveTileGroupIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 154);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18972F958(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189731ECC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActiveTileGroupReservedReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_189732C58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActiveTileGroupReservedReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOActiveTileGroupReservedReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189732CBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActiveTileGroupReservedIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

void sub_1897353D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189735714(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189735C64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897363D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOActiveTileSetReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOActiveTileSetReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189739038(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSentinelTileIsValid(char *a1)
{
  v34[1] = *MEMORY[0x1E4F143B8];
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  v34[0] = 0;
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v31 = 0;
  }
  else
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        uint64_t v21 = 0;
        char v22 = 1;
        while (1)
        {
          char v23 = v22;
          int v24 = *((_DWORD *)v34 + v21);
          if (!v24) {
            break;
          }
          if (v24 != 1)
          {
            char v22 = 0;
            uint64_t v21 = 1;
            if (v23) {
              continue;
            }
          }
          goto LABEL_49;
        }
        *((_DWORD *)v34 + v21) = 1;
        if (v15)
        {
LABEL_49:
          PBReaderRecallMark();
          return 0;
        }
        unsigned int v25 = 0;
        while (1)
        {
          uint64_t v26 = *v2;
          uint64_t v27 = *(void *)&a1[v26];
          unint64_t v28 = v27 + 1;
          if (v27 == -1 || v28 > *(void *)&a1[*v3]) {
            break;
          }
          int v29 = *(char *)(*(void *)&a1[*v5] + v27);
          *(void *)&a1[v26] = v28;
          if (v29 < 0 && v25++ <= 8) {
            continue;
          }
          goto LABEL_33;
        }
        a1[*v4] = 1;
      }
      else
      {
        if ((v8 >> 3) == 2)
        {
          uint64_t v17 = 0;
          char v18 = 1;
          while (1)
          {
            char v19 = v18;
            int v20 = *((_DWORD *)v34 + v17);
            if (!v20) {
              break;
            }
            if (v20 != 2)
            {
              char v18 = 0;
              uint64_t v17 = 1;
              if (v19) {
                continue;
              }
            }
            goto LABEL_49;
          }
          *((_DWORD *)v34 + v17) = 2;
          if (v15 != 2) {
            goto LABEL_49;
          }
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_49;
        }
      }
LABEL_33:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
    BOOL v31 = HIDWORD(v34[0]) != 0;
  }
  if (a1[*v4]) {
    BOOL v32 = 0;
  }
  else {
    BOOL v32 = v31;
  }
  PBReaderRecallMark();
  return v32;
}

void sub_189739890(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActiveTileSetIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  BOOL v2 = (*(_WORD *)(a1 + 144) & 0x3FC0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return v2;
}

void sub_18973A228(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973A930(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODownloadMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 68) >> 3) & 1)
      + (*(unsigned char *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v55 = v15 | v8;
        char v56 = v16 | v15 | v8;
        if ((v16 | v9)) {
          uint64_t v17 = 0;
        }
        else {
          uint64_t v17 = a3;
        }
        char v57 = (v17 == 0) | v16;
        BOOL v58 = v16;
        char v18 = (int *)MEMORY[0x1E4F940E8];
        char v19 = (int *)MEMORY[0x1E4F940C8];
        int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_69;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        uint64_t v29 = *v19;
        int v30 = *(unsigned __int8 *)(v3 + v29);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    uint64_t v29 = *v19;
    int v30 = *(unsigned __int8 *)(v3 + v29);
    if (*(unsigned char *)(v3 + v29)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v30 || (v23 & 7) == 4)
    {
LABEL_69:
      int v53 = 1;
      goto LABEL_70;
    }
    unint64_t v32 = v23 >> 3;
    BOOL v33 = v58;
    if ((v57 & 1) == 0)
    {
      uint64_t v34 = v17;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v9 & 1) == 0) {
          goto LABEL_57;
        }
        uint64_t v38 = *v18;
        unint64_t v39 = *(void *)(v3 + v38);
        if (v39 <= 0xFFFFFFFFFFFFFFF7 && v39 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v40 = *(void *)(*(void *)(v3 + *v20) + v39);
          *(void *)(v3 + v38) = v39 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + v29) = 1;
          uint64_t v40 = 0;
        }
        *(void *)(a1 + 40) = v40;
        goto LABEL_68;
      case 2:
        if (!v33) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 32;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_85;
        }
        char v48 = 32 * *(unsigned char *)(a1 + 68);
        goto LABEL_65;
      case 3:
        if (!v33) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 48;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_85;
        }
        char v48 = 16 * *(unsigned char *)(a1 + 68);
        goto LABEL_65;
      case 4:
        if (!v33) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 24;
LABEL_56:
          long long v46 = *(void **)(a1 + v45);
          *(void *)(a1 + v45) = v44;

          char v19 = (int *)MEMORY[0x1E4F940C8];
          --v10;
LABEL_68:
          if (!(v56 & 1 | (v10 != 0))) {
            goto LABEL_69;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v48 = *(unsigned char *)(a1 + 68) << 6;
LABEL_65:
          v10 += v48 >> 7;
          char v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_68;
        }
LABEL_85:
        int v53 = 0;
        char v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_70:
        long long v54 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        if (v55) {
LABEL_71:
        }
          *(unsigned char *)(a1 + v54[71]) |= 1u;
        if (v58 || (v53 & 1) == 0)
        {
          *(unsigned char *)(a1 + v54[71]) |= 4u;
          *(unsigned char *)(a1 + v54[71]) |= 8u;
          *(unsigned char *)(a1 + v54[71]) |= 2u;
        }
        else if (v17)
        {
          while (1)
          {
            int v49 = *v17++;
            char v50 = 4;
            switch(v49)
            {
              case 0:
                goto LABEL_79;
              case 2:
                goto LABEL_78;
              case 3:
                char v50 = 8;
                goto LABEL_78;
              case 4:
                char v50 = 2;
LABEL_78:
                *(unsigned char *)(a1 + v54[71]) |= v50;
                break;
              default:
                continue;
            }
          }
        }
LABEL_79:
        if (v53) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v58)
        {
          long long v51 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v55 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_57:
          char v47 = PBReaderSkipValueWithTag();
          char v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v47 & 1) == 0)
          {
            int v53 = 0;
            goto LABEL_70;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            long long v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          char v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v53 = 0;
            long long v54 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_71;
          }
        }
        goto LABEL_68;
    }
  }
}

unint64_t GEODownloadMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEODownloadMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEODownloadMetadataReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEODownloadMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEODownloadMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18973B994(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODownloadMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEODownloadMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18973B9F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEODownloadMetadataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
    char v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_36;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v2;
        uint64_t v11 = *(void *)&a1[v10];
        unint64_t v12 = v11 + 1;
        if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        if (v8++ >= 9)
        {
          unint64_t v9 = 0;
          uint64_t v15 = *v4;
          int v16 = a1[v15];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v15 = *v4;
      int v16 = a1[v15];
      if (a1[v15]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v17 = v9 & 7;
      if (v16 || v17 == 4) {
        goto LABEL_36;
      }
      switch((v9 >> 3))
      {
        case 1u:
          uint64_t v19 = 0;
          if (!v5 && v17 == 1)
          {
            uint64_t v20 = *v2;
            unint64_t v21 = *(void *)&a1[v20];
            if (v21 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v22 = v21 + 8, v22 <= *(void *)&a1[*v3]))
            {
              *(void *)&a1[v20] = v22;
              int v5 = 1;
            }
            else
            {
              int v5 = 1;
              a1[v15] = 1;
            }
            goto LABEL_32;
          }
          goto LABEL_42;
        case 2u:
          if (v17 != 2) {
            goto LABEL_43;
          }
          goto LABEL_31;
        case 3u:
          if (v17 == 2) {
            goto LABEL_31;
          }
          goto LABEL_43;
        case 4u:
          if (v17 != 2) {
            goto LABEL_43;
          }
LABEL_31:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_43:
            uint64_t v19 = 0;
            goto LABEL_42;
          }
LABEL_32:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_36;
          }
          break;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_43;
          }
          goto LABEL_32;
      }
    }
  }
  int v5 = 0;
LABEL_36:
  if (a1[*v4]) {
    BOOL v23 = 1;
  }
  else {
    BOOL v23 = v5 == 0;
  }
  uint64_t v19 = !v23;
LABEL_42:
  PBReaderRecallMark();
  return v19;
}

BOOL GEODownloadMetadataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_18973C12C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973C39C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEORegionalResourceRegionReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (a2)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
    char v6 = (int *)MEMORY[0x1E4F940E0];
    *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
    [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
    uint64_t v7 = 0;
    char v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFDFFFEFFFFFFFCLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 84) & 1));
    while (2)
    {
      uint64_t v13 = 1;
      uint64_t v14 = 1;
      uint64_t v15 = 1;
      switch(a3[v7])
      {
        case -4:
          ++v12;
          goto LABEL_8;
        case -3:
          char v8 = 1;
          goto LABEL_7;
        case -2:
          uint64_t v14 = v10;
          goto LABEL_10;
        case -1:
          goto LABEL_10;
        case 0:
          BOOL v16 = v12 > 2;
          int v17 = v16 & ~v11 | v9;
          int v18 = v16 | v11;
          if (((v16 | v11) | v8)) {
            uint64_t v19 = 0;
          }
          else {
            uint64_t v19 = a3;
          }
          uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          BOOL v21 = v7 != 0;
          int v22 = 1;
          if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
            goto LABEL_70;
          }
          char v49 = v17;
          int v50 = v21 | v18 | v17;
          BOOL v23 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
          break;
        default:
          ++v12;
LABEL_7:
          uint64_t v13 = v9;
LABEL_8:
          uint64_t v14 = v10;
          uint64_t v15 = v11;
LABEL_10:
          ++v7;
          uint64_t v9 = v13;
          uint64_t v10 = v14;
          uint64_t v11 = v15;
          continue;
      }
      break;
    }
    while (!*(unsigned char *)(v3 + *v23))
    {
      char v25 = 0;
      unsigned int v26 = 0;
      unint64_t v27 = 0;
      while (1)
      {
        uint64_t v28 = *v20;
        uint64_t v29 = *(void *)(v3 + v28);
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
          break;
        }
        char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
        *(void *)(v3 + v28) = v30;
        v27 |= (unint64_t)(v31 & 0x7F) << v25;
        if ((v31 & 0x80) == 0) {
          goto LABEL_25;
        }
        v25 += 7;
        if (v26++ >= 9)
        {
          unint64_t v27 = 0;
          int v33 = *(unsigned __int8 *)(v3 + *v23);
          goto LABEL_27;
        }
      }
      *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
      int v33 = *(unsigned __int8 *)(v3 + *v23);
      if (*(unsigned char *)(v3 + *v23)) {
        unint64_t v27 = 0;
      }
LABEL_27:
      if (v33 || (v27 & 7) == 4) {
        break;
      }
      unint64_t v35 = v27 >> 3;
      BOOL v36 = v18;
      if (!((v19 == 0) | v18 & 1))
      {
        BOOL v37 = v19;
        do
        {
          int v39 = *v37++;
          int v38 = v39;
          BOOL v36 = v39 != 0;
          if (v39) {
            BOOL v40 = v38 == v35;
          }
          else {
            BOOL v40 = 1;
          }
        }
        while (!v40);
      }
      switch((int)v35)
      {
        case 1:
          if (!v36 || (*(unsigned char *)(a1 + 84) & 2) != 0) {
            goto LABEL_66;
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_88;
          }
          -[GEORegionalResourceRegion _reserveTileRanges:](a1, 1uLL);
          if (!GEOTileSetRegionReadAllFrom((_DWORD *)(*(void *)(a1 + 24) + 24 * *(void *)(a1 + 32)), v3)) {
            goto LABEL_88;
          }
          PBReaderRecallMark();
          ++*(void *)(a1 + 32);
          goto LABEL_64;
        case 2:
          if (!v36 || (*(unsigned char *)(a1 + 84) & 0x10) != 0) {
            goto LABEL_66;
          }
          PBReaderReadString();
          int v43 = (GEOAttribution *)objc_claimAutoreleasedReturnValue();
          if (v43) {
            -[GEORegionalResourceRegion _addNoFlagsIcon:](a1, v43);
          }
          goto LABEL_63;
        case 3:
          if (!v36 || (*(unsigned char *)(a1 + 84) & 4) != 0) {
            goto LABEL_66;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_88;
          }
          int v43 = objc_alloc_init(GEOAttribution);
          if (!GEOAttributionReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1))
          {

LABEL_88:
            int v22 = 0;
            goto LABEL_69;
          }
          PBReaderRecallMark();
          -[GEORegionalResourceRegion _addNoFlagsAttribution:](a1, v43);
LABEL_63:

          goto LABEL_64;
        case 4:
          if (!v36 || (*(unsigned char *)(a1 + 84) & 8) != 0) {
            goto LABEL_66;
          }
          PBReaderReadString();
          int v43 = (GEOAttribution *)objc_claimAutoreleasedReturnValue();
          if (v43) {
            -[GEORegionalResourceRegion _addNoFlagsIconChecksum:](a1, v43);
          }
          goto LABEL_63;
        default:
          if (v49 & 1) == 0 || (*(unsigned char *)(a1 + 84))
          {
LABEL_66:
            int v44 = PBReaderSkipValueWithTag();
            if ((v44 & v50 & 1) == 0)
            {
              int v22 = v44;
              goto LABEL_69;
            }
          }
          else
          {
            if (!*(void *)(a1 + 16))
            {
              id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              long long v42 = *(void **)(a1 + 16);
              *(void *)(a1 + 16) = v41;
            }
            if (!PBUnknownFieldAdd())
            {
              int v22 = 0;
              goto LABEL_71;
            }
LABEL_64:
            if ((v50 & 1) == 0) {
              goto LABEL_68;
            }
          }
          BOOL v23 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_68;
          }
          break;
      }
    }
LABEL_68:
    int v22 = 1;
LABEL_69:
    LOBYTE(v17) = v49;
LABEL_70:
    if (v17) {
LABEL_71:
    }
      *(unsigned char *)(a1 + 84) |= 1u;
    if (v18 & 1 | ((v22 & 1) == 0))
    {
      *(unsigned char *)(a1 + 84) |= 2u;
      *(unsigned char *)(a1 + 84) |= 0x10u;
      *(unsigned char *)(a1 + 84) |= 4u;
      *(unsigned char *)(a1 + 84) |= 8u;
    }
    else if (v19)
    {
      while (1)
      {
        int v45 = *v19++;
        char v46 = 2;
        switch(v45)
        {
          case 0:
            goto LABEL_80;
          case 1:
            goto LABEL_79;
          case 2:
            char v46 = 16;
            goto LABEL_79;
          case 3:
            char v46 = 4;
            goto LABEL_79;
          case 4:
            char v46 = 8;
LABEL_79:
            *(unsigned char *)(a1 + 84) |= v46;
            break;
          default:
            continue;
        }
      }
    }
LABEL_80:
    if (v22)
    {
      uint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
      if ((v18 & 1) == 0) {
        return v3;
      }
      goto LABEL_84;
    }
    uint64_t v3 = 0;
    if (v18)
    {
LABEL_84:
      char v47 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_18973CF14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973D2D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973D69C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973E440(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORegionalResourceRegionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 48);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

uint64_t GEORegionalResourceRegionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORegionalResourceRegionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORegionalResourceRegionReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORegionalResourceRegionReadAllFrom_initialTag;
  }
  uint64_t Specified = GEORegionalResourceRegionReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORegionalResourceRegionCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_18973E6D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEORegionalResourceRegionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEORegionalResourceRegionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18973E738(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973EB00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORegionalResourceRegionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  BOOL v2 = (*(unsigned char *)(a1 + 84) & 0x3E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_18973F124(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973F618(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEORegionalResourceSetReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEORegionalResourceSetReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189740514(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189740794(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORegionalResourceSetIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  if ((*(unsigned char *)(a1 + 68) & 0xE) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 68) & 4) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 48);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOResourceIsDirty(*(os_unfair_lock_s **)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEORegionalResourceSetIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORegionalResourceSetIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189740CE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189741044(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189741428(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORegionalResourceTileReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (a2)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
    long long v6 = (int *)MEMORY[0x1E4F940E0];
    *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
    [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
    uint64_t v7 = 0;
    char v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 80)), (uint16x4_t)0xFFFDFFFFFFFEFFFCLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 80) & 1));
    while (2)
    {
      uint64_t v13 = 1;
      uint64_t v14 = 1;
      uint64_t v15 = 1;
      switch(a3[v7])
      {
        case -4:
          ++v12;
          goto LABEL_8;
        case -3:
          char v8 = 1;
          goto LABEL_7;
        case -2:
          uint64_t v14 = v10;
          goto LABEL_10;
        case -1:
          goto LABEL_10;
        case 0:
          BOOL v16 = v12 > 2;
          int v17 = v16 & ~v11 | v9;
          int v18 = v16 | v11;
          if (((v16 | v11) | v8)) {
            uint64_t v19 = 0;
          }
          else {
            uint64_t v19 = a3;
          }
          uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          BOOL v21 = v7 != 0;
          int v22 = 1;
          if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
            goto LABEL_107;
          }
          char v68 = v16 & ~(_BYTE)v11 | v9;
          int v70 = v21 | v18 | v17;
          char v71 = (v19 == 0) | v18;
          BOOL v23 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
          char v69 = v16 | v11;
          break;
        default:
          ++v12;
LABEL_7:
          uint64_t v13 = v9;
LABEL_8:
          uint64_t v14 = v10;
          uint64_t v15 = v11;
LABEL_10:
          ++v7;
          uint64_t v9 = v13;
          uint64_t v10 = v14;
          uint64_t v11 = v15;
          continue;
      }
      break;
    }
    while (!*(unsigned char *)(v3 + *v23))
    {
      char v25 = 0;
      unsigned int v26 = 0;
      unint64_t v27 = 0;
      while (1)
      {
        uint64_t v28 = *v20;
        uint64_t v29 = *(void *)(v3 + v28);
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
          break;
        }
        char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
        *(void *)(v3 + v28) = v30;
        v27 |= (unint64_t)(v31 & 0x7F) << v25;
        if ((v31 & 0x80) == 0) {
          goto LABEL_25;
        }
        v25 += 7;
        BOOL v32 = v26++ >= 9;
        if (v32)
        {
          unint64_t v27 = 0;
          int v33 = *(unsigned __int8 *)(v3 + *v23);
          goto LABEL_27;
        }
      }
      *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
      int v33 = *(unsigned __int8 *)(v3 + *v23);
      if (*(unsigned char *)(v3 + *v23)) {
        unint64_t v27 = 0;
      }
LABEL_27:
      if (v33 || (v27 & 7) == 4) {
        break;
      }
      unint64_t v35 = v27 >> 3;
      BOOL v36 = v18;
      if ((v71 & 1) == 0)
      {
        BOOL v37 = v19;
        do
        {
          int v39 = *v37++;
          int v38 = v39;
          BOOL v36 = v39 != 0;
          if (v39) {
            BOOL v40 = v38 == v35;
          }
          else {
            BOOL v40 = 1;
          }
        }
        while (!v40);
      }
      switch((int)v35)
      {
        case 1:
          if ((v8 & 1) == 0) {
            goto LABEL_88;
          }
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v43 = 0;
          while (1)
          {
            uint64_t v44 = *v20;
            uint64_t v45 = *(void *)(v3 + v44);
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)(v3 + *v6)) {
              break;
            }
            char v47 = *(unsigned char *)(*(void *)(v3 + *v24) + v45);
            *(void *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if ((v47 & 0x80) == 0) {
              goto LABEL_91;
            }
            v41 += 7;
            BOOL v32 = v42++ >= 9;
            if (v32)
            {
              LODWORD(v43) = 0;
              goto LABEL_93;
            }
          }
          *(unsigned char *)(v3 + *v23) = 1;
LABEL_91:
          if (*(unsigned char *)(v3 + *v23)) {
            LODWORD(v43) = 0;
          }
LABEL_93:
          uint64_t v63 = 68;
          goto LABEL_102;
        case 2:
          if ((v8 & 1) == 0) {
            goto LABEL_88;
          }
          char v50 = 0;
          unsigned int v51 = 0;
          uint64_t v43 = 0;
          while (2)
          {
            uint64_t v52 = *v20;
            uint64_t v53 = *(void *)(v3 + v52);
            unint64_t v54 = v53 + 1;
            if (v53 == -1 || v54 > *(void *)(v3 + *v6))
            {
              *(unsigned char *)(v3 + *v23) = 1;
            }
            else
            {
              char v55 = *(unsigned char *)(*(void *)(v3 + *v24) + v53);
              *(void *)(v3 + v52) = v54;
              v43 |= (unint64_t)(v55 & 0x7F) << v50;
              if (v55 < 0)
              {
                v50 += 7;
                BOOL v32 = v51++ >= 9;
                if (v32)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_97;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(v3 + *v23)) {
            LODWORD(v43) = 0;
          }
LABEL_97:
          uint64_t v63 = 72;
          goto LABEL_102;
        case 3:
          if ((v8 & 1) == 0) {
            goto LABEL_88;
          }
          char v56 = 0;
          unsigned int v57 = 0;
          uint64_t v43 = 0;
          while (2)
          {
            uint64_t v58 = *v20;
            uint64_t v59 = *(void *)(v3 + v58);
            unint64_t v60 = v59 + 1;
            if (v59 == -1 || v60 > *(void *)(v3 + *v6))
            {
              *(unsigned char *)(v3 + *v23) = 1;
            }
            else
            {
              char v61 = *(unsigned char *)(*(void *)(v3 + *v24) + v59);
              *(void *)(v3 + v58) = v60;
              v43 |= (unint64_t)(v61 & 0x7F) << v56;
              if (v61 < 0)
              {
                v56 += 7;
                BOOL v32 = v57++ >= 9;
                if (v32)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_101;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(v3 + *v23)) {
            LODWORD(v43) = 0;
          }
LABEL_101:
          uint64_t v63 = 76;
LABEL_102:
          *(_DWORD *)(a1 + v63) = v43;
          goto LABEL_103;
        case 4:
          if (!v36 || (*(unsigned char *)(a1 + 80) & 4) != 0) {
            goto LABEL_88;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_124;
          }
          long long v62 = objc_alloc_init(GEORegionalResourceTile);
          if (!GEORegionalResourceTileReadAllFrom()) {
            goto LABEL_123;
          }
          PBReaderRecallMark();
          -[GEORegionalResourceTile _addNoFlagsChildren:](a1, v62);
          goto LABEL_87;
        case 5:
          if (!v36 || (*(unsigned char *)(a1 + 80) & 0x10) != 0) {
            goto LABEL_88;
          }
          PBReaderReadString();
          long long v62 = (GEORegionalResourceTile *)objc_claimAutoreleasedReturnValue();
          if (v62) {
            -[GEORegionalResourceTile _addNoFlagsIcon:](a1, v62);
          }
          goto LABEL_87;
        case 6:
          if (!v36 || (*(unsigned char *)(a1 + 80) & 2) != 0) {
            goto LABEL_88;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_124;
          }
          long long v62 = objc_alloc_init(GEOAttribution);
          if (!GEOAttributionReadAllFrom((uint64_t)v62, (void *)v3, v10 & 1))
          {
LABEL_123:

LABEL_124:
            int v22 = 0;
            LOBYTE(v18) = v69;
            goto LABEL_106;
          }
          PBReaderRecallMark();
          -[GEORegionalResourceTile _addNoFlagsAttribution:](a1, v62);
LABEL_87:

          LOBYTE(v18) = v69;
          BOOL v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_103:
          if ((v70 & 1) == 0) {
            goto LABEL_105;
          }
LABEL_104:
          if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_105;
          }
          break;
        case 7:
          if (!v36 || (*(unsigned char *)(a1 + 80) & 8) != 0) {
            goto LABEL_88;
          }
          PBReaderReadString();
          long long v62 = (GEORegionalResourceTile *)objc_claimAutoreleasedReturnValue();
          if (v62) {
            -[GEORegionalResourceTile _addNoFlagsIconChecksum:](a1, v62);
          }
          goto LABEL_87;
        default:
          if (v68 & 1) == 0 || (*(unsigned char *)(a1 + 80))
          {
LABEL_88:
            int v22 = PBReaderSkipValueWithTag();
            BOOL v23 = (int *)MEMORY[0x1E4F940C8];
            LOBYTE(v18) = v69;
            if ((v22 & v70 & 1) == 0) {
              goto LABEL_106;
            }
            goto LABEL_104;
          }
          if (!*(void *)(a1 + 16))
          {
            id v48 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v49 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v48;
          }
          int v22 = PBUnknownFieldAdd();
          LOBYTE(v18) = v69;
          BOOL v23 = (int *)MEMORY[0x1E4F940C8];
          if (!v22) {
            goto LABEL_108;
          }
          goto LABEL_103;
      }
    }
LABEL_105:
    int v22 = 1;
LABEL_106:
    LOBYTE(v17) = v68;
LABEL_107:
    if (v17) {
LABEL_108:
    }
      *(unsigned char *)(a1 + 80) |= 1u;
    if (v18 & 1 | ((v22 & 1) == 0))
    {
      *(unsigned char *)(a1 + 80) |= 4u;
      *(unsigned char *)(a1 + 80) |= 0x10u;
      *(unsigned char *)(a1 + 80) |= 2u;
      *(unsigned char *)(a1 + 80) |= 8u;
    }
    else if (v19)
    {
      while (1)
      {
        int v64 = *v19++;
        char v65 = 4;
        switch(v64)
        {
          case 0:
            goto LABEL_117;
          case 4:
            goto LABEL_116;
          case 5:
            char v65 = 16;
            goto LABEL_116;
          case 6:
            char v65 = 2;
            goto LABEL_116;
          case 7:
            char v65 = 8;
LABEL_116:
            *(unsigned char *)(a1 + 80) |= v65;
            break;
          default:
            continue;
        }
      }
    }
LABEL_117:
    if (v22)
    {
      unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
      if ((v18 & 1) == 0) {
        return v3;
      }
      goto LABEL_121;
    }
    unint64_t v3 = 0;
    if (v18)
    {
LABEL_121:
      long long v66 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_18974203C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189742400(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897427C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189743760(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORegionalResourceTileCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 24);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEORegionalResourceTileReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORegionalResourceTileReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORegionalResourceTileReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORegionalResourceTileReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORegionalResourceTileReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORegionalResourceTileCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189743A90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORegionalResourceTileReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORegionalResourceTileReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189743AF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189743F24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORegionalResourceTileIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  if ((*(unsigned char *)(a1 + 80) & 0x3E) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 80) & 2) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOAttributionIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEORegionalResourceTileIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORegionalResourceTileIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189744750(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189744D0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897451E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897455AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORegionalResourceTileDataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEORegionalResourceTileDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORegionalResourceTileDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189746240(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORegionalResourceTileDataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_31;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_31;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 != 2)
      {
        if (v17 == 1 && v15 != 2) {
          goto LABEL_32;
        }
        goto LABEL_29;
      }
      if (v15 != 2 || !PBReaderPlaceMark() || !GEOAttributionIsValid(a1))
      {
LABEL_32:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_30:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_31;
      }
    }
    if (v15 != 2) {
      goto LABEL_32;
    }
LABEL_29:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_32;
    }
    goto LABEL_30;
  }
LABEL_31:
  BOOL v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

BOOL GEORegionalResourceTileDataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1897469E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189746E30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOResourceManifestDownloadReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v7)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_66;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_66:
      int v51 = 1;
      goto LABEL_67;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      unint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_57;
      }
      if ((*(unsigned char *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_85;
        }
        int v39 = objc_alloc_init(GEOResources);
        if (!GEOResourcesReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_84;
        }
        PBReaderRecallMark();
        uint64_t v40 = 32;
LABEL_50:
        char v41 = *(void **)(a1 + v40);
        *(void *)(a1 + v40) = v39;

        --v8;
LABEL_64:
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_85;
      }
      char v46 = 32 * *(unsigned char *)(a1 + 52);
LABEL_63:
      v8 += v46 >> 7;
      goto LABEL_64;
    }
    if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_57:
      char v45 = PBReaderSkipValueWithTag();
      BOOL v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v45 & 1) == 0)
      {
        int v51 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v44 = PBUnknownFieldAdd();
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v44)
    {
      int v51 = 0;
      uint64_t v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v54 & 1 | (v8 != 0))) {
      goto LABEL_66;
    }
  }
  if (!v34) {
    goto LABEL_57;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_85;
    }
    char v46 = *(unsigned char *)(a1 + 52) << 6;
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_85;
  }
  int v39 = objc_alloc_init(GEODownloadMetadata);
  if (GEODownloadMetadataReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = 24;
    goto LABEL_50;
  }
LABEL_84:

LABEL_85:
  int v51 = 0;
  BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_67:
  uint64_t v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
  if ((v53 & 1) == 0) {
    goto LABEL_69;
  }
LABEL_68:
  *(unsigned char *)(a1 + v52[124]) |= 1u;
LABEL_69:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[124]) |= 4u;
    *(unsigned char *)(a1 + v52[124]) |= 2u;
    goto LABEL_78;
  }
  if (v19)
  {
    while (1)
    {
      int v48 = *v19++;
      int v47 = v48;
      if (v48 == 1) {
        break;
      }
      if (v47 == 2)
      {
LABEL_74:
        *(unsigned char *)(a1 + v52[124]) |= v47;
      }
      else if (!v47)
      {
        goto LABEL_78;
      }
    }
    LOBYTE(v47) = 4;
    goto LABEL_74;
  }
LABEL_78:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    char v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

unint64_t GEOResourceManifestDownloadReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOResourceManifestDownloadReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOResourceManifestDownloadReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOResourceManifestDownloadReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOResourceManifestDownloadReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189747C1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOResourceManifestDownloadReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOResourceManifestDownloadReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189747C80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOResourceManifestDownloadIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
  }
  else
  {
    int v5 = 0;
    char v6 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v2;
        uint64_t v11 = *(void *)&a1[v10];
        unint64_t v12 = v11 + 1;
        if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        if (v8++ >= 9)
        {
          unint64_t v9 = 0;
          int v15 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v15 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v16 = v9 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v9 >> 3) == 2)
      {
        if (v5 || v16 != 2 || !PBReaderPlaceMark() || !GEODownloadMetadataIsValid(a1))
        {
LABEL_40:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
        int v5 = 2;
      }
      else if ((v9 >> 3) == 1)
      {
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOResourcesIsValid(a1)) {
          goto LABEL_40;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_40;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  if (a1[*v4]) {
    BOOL v18 = 1;
  }
  else {
    BOOL v18 = v5 == 0;
  }
  uint64_t v19 = !v18;
  PBReaderRecallMark();
  return v19;
}

BOOL _GEOResourceManifestDownloadIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if (GEOResourcesIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 52);
  }
  if ((v2 & 2) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 24);

  return GEODownloadMetadataIsDirty(v4);
}

os_unfair_lock_s *GEOResourceManifestDownloadIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOResourceManifestDownloadIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189748350(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSentinelTileReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOSentinelTileReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189748A70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189748FD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStaleResourceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v6 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v15 = v11 != 0;
        char v16 = v15 & ~(_BYTE)v10 | v8;
        unsigned __int8 v17 = v15 | v10;
        char v57 = v16;
        char v58 = v17 | v16;
        if ((v17 | v6)) {
          BOOL v18 = 0;
        }
        else {
          BOOL v18 = a3;
        }
        char v59 = (v18 == 0) | v17;
        BOOL v60 = v17;
        uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        BOOL v21 = (int *)MEMORY[0x1E4F940B8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940E0];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v8;
LABEL_8:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_10:
        ++v7;
        uint64_t v8 = v12;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v22) || *(unsigned char *)(v3 + *v20)) {
      goto LABEL_73;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v19;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v22)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v21) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_73:
      int v55 = 1;
      goto LABEL_74;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v60;
    if ((v59 & 1) == 0)
    {
      unint64_t v35 = v18;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if ((v6 & 1) == 0) {
        goto LABEL_62;
      }
      *(unsigned char *)(a1 + 60) |= 1u;
      uint64_t v41 = *v19;
      unint64_t v42 = *(void *)(v3 + v41);
      if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(void *)(v3 + *v22))
      {
        uint64_t v43 = *(void *)(*(void *)(v3 + *v21) + v42);
        *(void *)(v3 + v41) = v42 + 8;
      }
      else
      {
        *(unsigned char *)(v3 + *v20) = 1;
        uint64_t v43 = 0;
      }
      *(void *)(a1 + 40) = v43;
      goto LABEL_72;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_62;
      }
      if ((*(unsigned char *)(a1 + 60) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_93;
        }
        int v39 = objc_alloc_init(GEOResource);
        if (!GEOResourceReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1)) {
          goto LABEL_92;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
LABEL_55:
        int v44 = *(void **)(a1 + v40);
        *(void *)(a1 + v40) = v39;

        --v7;
LABEL_69:
        uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940E0];
        goto LABEL_72;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_93;
      }
      char v49 = 32 * *(unsigned char *)(a1 + 60);
LABEL_68:
      v7 += v49 >> 7;
      goto LABEL_69;
    }
    if ((v57 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 2) != 0)
    {
LABEL_62:
      char v48 = PBReaderSkipValueWithTag();
      uint64_t v22 = (int *)MEMORY[0x1E4F940E0];
      uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
      if ((v48 & 1) == 0)
      {
        int v55 = 0;
        goto LABEL_74;
      }
      goto LABEL_72;
    }
    if (!*(void *)(a1 + 16))
    {
      id v45 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      char v46 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v45;
    }
    int v47 = PBUnknownFieldAdd();
    uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v22 = (int *)MEMORY[0x1E4F940E0];
    if (!v47)
    {
      int v55 = 0;
      BOOL v56 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
      goto LABEL_75;
    }
LABEL_72:
    if (!(v58 & 1 | (v7 != 0))) {
      goto LABEL_73;
    }
  }
  if (!v34) {
    goto LABEL_62;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_93;
    }
    char v49 = 16 * *(unsigned char *)(a1 + 60);
    goto LABEL_68;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_93;
  }
  int v39 = objc_alloc_init(GEOResource);
  if (GEOResourceReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = 32;
    goto LABEL_55;
  }
LABEL_92:

LABEL_93:
  int v55 = 0;
  uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_74:
  BOOL v56 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
  if ((v57 & 1) == 0) {
    goto LABEL_76;
  }
LABEL_75:
  *(unsigned char *)(a1 + v56[135]) |= 2u;
LABEL_76:
  if (v60 || (v55 & 1) == 0)
  {
    *(unsigned char *)(a1 + v56[135]) |= 4u;
    *(unsigned char *)(a1 + v56[135]) |= 8u;
    goto LABEL_86;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        int v51 = *v18++;
        int v50 = v51;
        if (v51 == 1) {
          break;
        }
        if (v50 == 2)
        {
          char v52 = 8;
          goto LABEL_85;
        }
        if (!v50) {
          goto LABEL_86;
        }
      }
      char v52 = 4;
LABEL_85:
      *(unsigned char *)(a1 + v56[135]) |= v52;
      continue;
    }
  }
LABEL_86:
  if (v55) {
    unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v60)
  {
    char v53 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18974975C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189749E98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStaleResourceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOStaleResourceReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOStaleResourceReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOStaleResourceReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOStaleResourceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18974A054(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStaleResourceReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOStaleResourceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18974A0B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974A27C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOStaleResourceIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v2 = *(unsigned char *)(a1 + 60);
  if ((v2 & 0x10) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 4) != 0)
  {
    if (GEOResourceIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 60);
  }
  if ((v2 & 8) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 32);

  return (uint64_t)GEOResourceIsDirty(v4);
}

os_unfair_lock_s *GEOStaleResourceIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOStaleResourceIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18974A628(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974A99C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974C01C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
}

uint64_t __AppleMediaServicesLibraryCore_block_invoke(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  AppleMediaServicesLibraryCore_frameworkLibrary = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t BackgroundSystemTasksLibraryCore()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = 0;
  id v3 = &v2;
  uint64_t v4 = 0x2020000000;
  uint64_t v0 = BackgroundSystemTasksLibraryCore_frameworkLibrary;
  uint64_t v5 = BackgroundSystemTasksLibraryCore_frameworkLibrary;
  if (!BackgroundSystemTasksLibraryCore_frameworkLibrary)
  {
    long long v6 = __const__block__paths_0;
    long long v7 = *(_OWORD *)&off_1E53DFEE8;
    v3[3] = _sl_dlopen();
    BackgroundSystemTasksLibraryCore_frameworkLibrary = v3[3];
    uint64_t v0 = v3[3];
  }
  _Block_object_dispose(&v2, 8);
  return v0;
}

void sub_18974D0A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __BackgroundSystemTasksLibraryCore_block_invoke(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  BackgroundSystemTasksLibraryCore_frameworkLibrary = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t BackgroundSystemTasksLibrary()
{
  uint64_t v0 = BackgroundSystemTasksLibraryCore();
  if (!v0)
  {
    uint64_t v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

id getBGSystemTaskSchedulerClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getBGSystemTaskSchedulerClass_softClass;
  uint64_t v7 = getBGSystemTaskSchedulerClass_softClass;
  if (!getBGSystemTaskSchedulerClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getBGSystemTaskSchedulerClass_block_invoke;
    v3[3] = &unk_1E53DB3C8;
    v3[4] = &v4;
    __getBGSystemTaskSchedulerClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_18974D274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getBGSystemTaskSchedulerClass_block_invoke(uint64_t a1)
{
  BackgroundSystemTasksLibrary();
  Class result = objc_getClass("BGSystemTaskScheduler");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getBGSystemTaskSchedulerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)getBGNonRepeatingSystemTaskRequestClass(v3);
  }
  return result;
}

id getBGNonRepeatingSystemTaskRequestClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getBGNonRepeatingSystemTaskRequestClass_softClass;
  uint64_t v7 = getBGNonRepeatingSystemTaskRequestClass_softClass;
  if (!getBGNonRepeatingSystemTaskRequestClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getBGNonRepeatingSystemTaskRequestClass_block_invoke;
    v3[3] = &unk_1E53DB3C8;
    v3[4] = &v4;
    __getBGNonRepeatingSystemTaskRequestClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_18974D3C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getBGNonRepeatingSystemTaskRequestClass_block_invoke(uint64_t a1)
{
  BackgroundSystemTasksLibrary();
  Class result = objc_getClass("BGNonRepeatingSystemTaskRequest");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getBGNonRepeatingSystemTaskRequestClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)getBGRepeatingSystemTaskRequestClass(v3);
  }
  return result;
}

id getBGRepeatingSystemTaskRequestClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getBGRepeatingSystemTaskRequestClass_softClass;
  uint64_t v7 = getBGRepeatingSystemTaskRequestClass_softClass;
  if (!getBGRepeatingSystemTaskRequestClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getBGRepeatingSystemTaskRequestClass_block_invoke;
    v3[3] = &unk_1E53DB3C8;
    v3[4] = &v4;
    __getBGRepeatingSystemTaskRequestClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_18974D51C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

GEOARGuidance *__getBGRepeatingSystemTaskRequestClass_block_invoke(uint64_t a1)
{
  BackgroundSystemTasksLibrary();
  Class result = (GEOARGuidance *)objc_getClass("BGRepeatingSystemTaskRequest");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getBGRepeatingSystemTaskRequestClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = (GEOARGuidance *)abort_report_np();
    return [(GEOARGuidance *)v3 init];
  }
  return result;
}

void sub_18974D8C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOARGuidanceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFDFFFCFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 1;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v61 = v18;
        char v62 = v19 | v18;
        if ((v19 | v9)) {
          uint64_t v20 = 0;
        }
        else {
          uint64_t v20 = a3;
        }
        BOOL v21 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        char v63 = (v20 == 0) | v19;
        BOOL v64 = v19;
        char v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_80;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_80:
      int v59 = 1;
      goto LABEL_81;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v64;
    if ((v63 & 1) == 0)
    {
      int v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v9 & 1) == 0) {
          goto LABEL_67;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (1)
        {
          uint64_t v43 = *v21;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v7)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v23) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_70;
          }
          v40 += 7;
          BOOL v31 = v41++ >= 9;
          if (v31)
          {
            LODWORD(v42) = 0;
            goto LABEL_72;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_70:
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v42) = 0;
        }
LABEL_72:
        *(_DWORD *)(a1 + 60) = v42;
        goto LABEL_79;
      case 2:
        if (!v35) {
          goto LABEL_67;
        }
        if ((*(unsigned char *)(a1 + 64) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_97;
          }
          char v54 = 8 * *(unsigned char *)(a1 + 64);
LABEL_77:
          v8 += v54 >> 7;
          goto LABEL_78;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        int v50 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          int v51 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v50;
LABEL_61:

          --v8;
LABEL_78:
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_79:
          if (!(v62 & 1 | (v8 != 0))) {
            goto LABEL_80;
          }
          continue;
        }
LABEL_96:

LABEL_97:
        int v59 = 0;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_81:
        BOOL v60 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        if (v61) {
LABEL_82:
        }
          *(unsigned char *)(a1 + v60[150]) |= 2u;
        if (v64 || (v59 & 1) == 0)
        {
          *(unsigned char *)(a1 + v60[150]) |= 0x10u;
          *(unsigned char *)(a1 + v60[150]) |= 4u;
          *(unsigned char *)(a1 + v60[150]) |= 8u;
        }
        else if (v20)
        {
          while (1)
          {
            int v55 = *v20++;
            char v56 = 16;
            switch(v55)
            {
              case 0:
                goto LABEL_90;
              case 2:
                goto LABEL_89;
              case 3:
                char v56 = 4;
                goto LABEL_89;
              case 4:
                char v56 = 8;
LABEL_89:
                *(unsigned char *)(a1 + v60[150]) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_90:
        if (v59) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v64)
        {
          char v57 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if (!v35) {
          goto LABEL_67;
        }
        if ((*(unsigned char *)(a1 + 64) & 4) == 0)
        {
          uint64_t v52 = PBReaderReadString();
          int v51 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v52;
          goto LABEL_61;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_97;
        }
        char v54 = 32 * *(unsigned char *)(a1 + 64);
        goto LABEL_77;
      case 4:
        if (!v35 || (*(unsigned char *)(a1 + 64) & 8) != 0) {
          goto LABEL_67;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        int v50 = objc_alloc_init(GEORouteLegRange);
        if (!GEORouteLegRangeReadAllFrom((uint64_t)v50, (void *)v3)) {
          goto LABEL_96;
        }
        PBReaderRecallMark();
        -[GEOARGuidance _addNoFlagsGapRange:](a1, v50);

        goto LABEL_78;
      default:
        if ((v61 & 1) == 0 || (*(unsigned char *)(a1 + 64) & 2) != 0)
        {
LABEL_67:
          char v53 = PBReaderSkipValueWithTag();
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v59 = 0;
            goto LABEL_81;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v48 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v47;
          }
          int v49 = PBUnknownFieldAdd();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v49)
          {
            int v59 = 0;
            BOOL v60 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_82;
          }
        }
        goto LABEL_79;
    }
  }
}

void sub_18974E134(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974E2A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974EEF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOARGuidanceCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 40) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOARGuidanceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOARGuidanceReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOARGuidanceReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOARGuidanceReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOARGuidanceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOARGuidanceCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18974F1A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOARGuidanceReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOARGuidanceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18974F208(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARGuidanceIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_41;
          }
          unsigned int v17 = 0;
          do
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_39;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0) {
              break;
            }
          }
          while (v17++ <= 8);
          goto LABEL_39;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_41;
          }
          goto LABEL_37;
        case 3u:
          if (v15 == 2) {
            goto LABEL_32;
          }
          goto LABEL_41;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteLegRangeIsValid(a1)) {
            goto LABEL_41;
          }
LABEL_37:
          PBReaderRecallMark();
          goto LABEL_39;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_41:
            PBReaderRecallMark();
            return 0;
          }
LABEL_39:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_40;
          }
          break;
      }
    }
  }
LABEL_40:
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORouteLegRangeIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 18) {
        break;
      }
      if ((v8 >> 3) == 17)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_18974F96C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOARGuidanceIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 64);
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 64);
  }
  if ((v2 & 4) == 0) {
    return (v2 >> 3) & 1;
  }
  return 1;
}

os_unfair_lock_s *GEOARGuidanceIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOARGuidanceIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18974FE40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18975023C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARInfoReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v18 = objc_alloc_init(GEOPDOrientedBoundingBox);
          if (!GEOPDOrientedBoundingBoxReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addStorefrontFaceGeometry:", v18, 0, 0);
        }
        else
        {
          if (!a1[1])
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v20 = (void *)a1[1];
            a1[1] = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189750D50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARInfoReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOARInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189750DB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDOrientedBoundingBoxIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1897516FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAdvisoriesInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFEFFFAFFFBFFFFLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 84) & 1)+ ((*(unsigned char *)(a1 + 84) & 0x10) != 0)+ ((*(unsigned char *)(a1 + 84) & 8) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        int v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_88;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_88:
      int v51 = 1;
      goto LABEL_89;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 0x20) != 0) {
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_108;
        }
        BOOL v39 = objc_alloc_init(GEOAdvisoryNotice);
        if (!GEOAdvisoryNoticeReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_107;
        }
        PBReaderRecallMark();
        -[GEOAdvisoriesInfo _addNoFlagsNoticeAdvisory:](a1, v39);
        goto LABEL_76;
      case 2:
        if (!v34) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 84) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_108;
          }
          char v46 = *(unsigned char *)(a1 + 84) << 6;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_108;
        }
        BOOL v39 = objc_alloc_init(GEOClickableAdvisory);
        if (!GEOClickableAdvisoryReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_107;
        }
        PBReaderRecallMark();
        uint64_t v43 = 24;
        goto LABEL_65;
      case 3:
        if (!v34) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_108;
          }
          char v46 = 2 * *(unsigned char *)(a1 + 84);
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_108;
        }
        BOOL v39 = objc_alloc_init(GEOAdvisoryNotice);
        if (!GEOAdvisoryNoticeReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_107;
        }
        PBReaderRecallMark();
        uint64_t v43 = 64;
        goto LABEL_65;
      case 4:
        if (!v34) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 84) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_108;
          }
          char v46 = 32 * *(unsigned char *)(a1 + 84);
LABEL_85:
          v7 += v46 >> 7;
LABEL_86:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_87:
          if (!(v54 & 1 | (v7 != 0))) {
            goto LABEL_88;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_108;
        }
        BOOL v39 = objc_alloc_init(GEOAdvisoryNotice);
        if (GEOAdvisoryNoticeReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v43 = 32;
LABEL_65:
          uint64_t v44 = *(void **)(a1 + v43);
          *(void *)(a1 + v43) = v39;

          --v7;
          goto LABEL_86;
        }
LABEL_107:

LABEL_108:
        int v51 = 0;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_89:
        uint64_t v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        if (v53) {
LABEL_90:
        }
          *(unsigned char *)(a1 + v52[161]) |= 1u;
        if (v56 || (v51 & 1) == 0)
        {
          *(unsigned char *)(a1 + v52[161]) |= 0x20u;
          *(unsigned char *)(a1 + v52[161]) |= 2u;
          *(unsigned char *)(a1 + v52[161]) |= 0x40u;
          *(unsigned char *)(a1 + v52[161]) |= 4u;
          *(unsigned char *)(a1 + v52[161]) |= 0x10u;
          *(unsigned char *)(a1 + v52[161]) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            int v47 = *v19++;
            char v48 = 32;
            switch(v47)
            {
              case 0:
                goto LABEL_101;
              case 1:
                goto LABEL_100;
              case 2:
                char v48 = 2;
                goto LABEL_100;
              case 3:
                char v48 = 64;
                goto LABEL_100;
              case 4:
                char v48 = 4;
                goto LABEL_100;
              case 5:
                char v48 = 16;
                goto LABEL_100;
              case 6:
                char v48 = 8;
LABEL_100:
                *(unsigned char *)(a1 + v52[161]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_101:
        if (v51) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v56)
        {
          int v49 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 0x10) != 0) {
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_108;
        }
        BOOL v39 = objc_alloc_init(GEOAdvisoryNotice);
        if (!GEOAdvisoryNoticeReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_107;
        }
        PBReaderRecallMark();
        -[GEOAdvisoriesInfo _addNoFlagsIncidentAdvisory:](a1, v39);
        goto LABEL_76;
      case 6:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 8) != 0) {
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_108;
        }
        BOOL v39 = objc_alloc_init(GEOAdvisoryNotice);
        if (!GEOAdvisoryNoticeReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_107;
        }
        PBReaderRecallMark();
        -[GEOAdvisoriesInfo _addNoFlagsGenericAdvisory:](a1, v39);
LABEL_76:

        goto LABEL_86;
      default:
        if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 84))
        {
LABEL_77:
          char v45 = PBReaderSkipValueWithTag();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v45 & 1) == 0)
          {
            int v51 = 0;
            goto LABEL_89;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v41 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v40;
          }
          int v42 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v42)
          {
            int v51 = 0;
            uint64_t v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_90;
          }
        }
        goto LABEL_87;
    }
  }
}

void sub_189752300(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18975246C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897525D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189752740(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189752B08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189753BDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOAdvisoriesInfoCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v2 = a1[7];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v26;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v26 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v25 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v4);
  }

  [a1[3] readAll:1];
  [a1[8] readAll:1];
  [a1[4] readAll:1];
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v7 = a1[6];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v22;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v21 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
    }
    while (v9);
  }

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v12 = a1[5];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v18;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v18 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v17 + 1) + 8 * v16++), "readAll:", 1, (void)v17);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
    }
    while (v14);
  }
}

unint64_t GEOAdvisoriesInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOAdvisoriesInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOAdvisoriesInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOAdvisoriesInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOAdvisoriesInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOAdvisoriesInfoCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189753FD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAdvisoriesInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOAdvisoriesInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189754038(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAdvisoriesInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_31:
    BOOL v17 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v17;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_31;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      if (v7++ >= 9)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4) {
      goto LABEL_31;
    }
    switch((v8 >> 3))
    {
      case 1u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOAdvisoryNoticeIsValid(a1)) {
          goto LABEL_30;
        }
        goto LABEL_22;
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOClickableAdvisoryIsValid(a1)) {
          goto LABEL_30;
        }
LABEL_22:
        PBReaderRecallMark();
        goto LABEL_23;
      default:
        if (PBReaderSkipValueWithTag())
        {
LABEL_23:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_31;
          }
          continue;
        }
LABEL_30:
        PBReaderRecallMark();
        return 0;
    }
  }
}

BOOL GEOAdvisoryNoticeIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 6u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOFormattedStringIsValid(a1)) {
            goto LABEL_49;
          }
          goto LABEL_76;
        case 2u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_76:
              PBReaderRecallMark();
              return 0;
            }
LABEL_65:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v33 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v34 = *v2;
                uint64_t v35 = *(void *)&a1[v34];
                unint64_t v36 = v35 + 1;
                if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
                  break;
                }
                int v37 = *(char *)(*(void *)&a1[*v5] + v35);
                *(void *)&a1[v34] = v36;
                if (v37 < 0)
                {
                  BOOL v13 = v33++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_65;
              }
              a1[*v4] = 1;
            }
LABEL_49:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_76;
            }
            while (1)
            {
              uint64_t v17 = *v2;
              uint64_t v18 = *(void *)&a1[v17];
              unint64_t v19 = v18 + 1;
              if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
                break;
              }
              int v20 = *(char *)(*(void *)&a1[*v5] + v18);
              *(void *)&a1[v17] = v19;
              if (v20 < 0)
              {
                unsigned int v21 = v15++;
                if (v21 <= 8) {
                  continue;
                }
              }
              goto LABEL_62;
            }
LABEL_61:
            a1[*v4] = 1;
          }
LABEL_62:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_74;
          }
          break;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAdvisoryCardIsValid(a1)) {
            goto LABEL_76;
          }
          goto LABEL_49;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_76;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v27 = v22++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAdvisoryItemIsValid(a1)) {
            goto LABEL_76;
          }
          goto LABEL_49;
        case 7u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_49;
          }
          goto LABEL_76;
        case 8u:
          if (v15 == 2) {
            goto LABEL_51;
          }
          goto LABEL_76;
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_76;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v27 = v28++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_62;
          }
        default:
LABEL_51:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_76;
          }
          goto LABEL_62;
      }
    }
  }
LABEL_74:
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOClickableAdvisoryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_47;
          }
LABEL_34:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v22 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              uint64_t v24 = *(void *)&a1[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                break;
              }
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                BOOL v13 = v22++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_34;
            }
            a1[*v4] = 1;
          }
          goto LABEL_23;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_47;
        }
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            unsigned int v21 = v15++;
            if (v21 <= 8) {
              continue;
            }
          }
          goto LABEL_44;
        }
        a1[*v4] = 1;
      }
      else
      {
        if ((v8 >> 3) == 1)
        {
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
          {
LABEL_47:
            PBReaderRecallMark();
            return 0;
          }
LABEL_23:
          PBReaderRecallMark();
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_47;
        }
      }
LABEL_44:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_189754D04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAdvisoriesInfoIsDirty(uint64_t a1)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v2 = *(unsigned char *)(a1 + 84);
  if ((v2 & 0xA0) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 84) & 2) != 0)
  {
    if (GEOClickableAdvisoryIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEOAdvisoryNoticeIsDirty(*(os_unfair_lock_s **)(a1 + 64))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 4) != 0)
  {
    if (GEOAdvisoryNoticeIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 0x18) == 0)
  {
    if ((v2 & 0x20) != 0)
    {
      long long v26 = 0u;
      long long v27 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      id v5 = *(id *)(a1 + 56);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v25;
LABEL_17:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v25 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEOAdvisoryNoticeIsDirty(*(os_unfair_lock_s **)(*((void *)&v24 + 1) + 8 * v9))) {
            goto LABEL_45;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
            if (v7) {
              goto LABEL_17;
            }
            break;
          }
        }
      }

      char v2 = *(unsigned char *)(a1 + 84);
    }
    if ((v2 & 0x10) != 0)
    {
      long long v22 = 0u;
      long long v23 = 0u;
      long long v20 = 0u;
      long long v21 = 0u;
      id v5 = *(id *)(a1 + 48);
      uint64_t v10 = [v5 countByEnumeratingWithState:&v20 objects:v29 count:16];
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = *(void *)v21;
LABEL_27:
        uint64_t v13 = 0;
        while (1)
        {
          if (*(void *)v21 != v12) {
            objc_enumerationMutation(v5);
          }
          if (GEOAdvisoryNoticeIsDirty(*(os_unfair_lock_s **)(*((void *)&v20 + 1) + 8 * v13))) {
            goto LABEL_45;
          }
          if (v11 == ++v13)
          {
            uint64_t v11 = [v5 countByEnumeratingWithState:&v20 objects:v29 count:16];
            if (v11) {
              goto LABEL_27;
            }
            break;
          }
        }
      }

      char v2 = *(unsigned char *)(a1 + 84);
    }
    if ((v2 & 8) == 0) {
      return 0;
    }
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v5 = *(id *)(a1 + 40);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v28 count:16];
    if (!v3)
    {
LABEL_46:

      return v3;
    }
    uint64_t v14 = *(void *)v17;
LABEL_38:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(void *)v17 != v14) {
        objc_enumerationMutation(v5);
      }
      if (GEOAdvisoryNoticeIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1) + 8 * v15))) {
        break;
      }
      if (v3 == ++v15)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v28 count:16];
        if (v3) {
          goto LABEL_38;
        }
        goto LABEL_46;
      }
    }
LABEL_45:
    uint64_t v3 = 1;
    goto LABEL_46;
  }
  return 1;
}

os_unfair_lock_s *GEOAdvisoriesInfoIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOAdvisoriesInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897558E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189755E50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18975634C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAdvisoryCardReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFCFFFEFFFAFFFDLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 84) & 1)+ ((*(unsigned char *)(a1 + 84) & 0x20) != 0)+ ((*(unsigned char *)(a1 + 84) & 2) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        long long v20 = (int *)MEMORY[0x1E4F940E8];
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        long long v21 = (int *)MEMORY[0x1E4F940C8];
        long long v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_93;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_93:
      int v51 = 1;
      goto LABEL_94;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      uint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x40) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_113;
          }
          BOOL v39 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = 64;
            goto LABEL_75;
          }
          goto LABEL_112;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_113;
        }
        char v46 = 2 * *(unsigned char *)(a1 + 84);
        goto LABEL_90;
      case 2:
        if (!v34) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_113;
          }
          char v46 = 16 * *(unsigned char *)(a1 + 84);
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_113;
        }
        BOOL v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_112;
        }
        PBReaderRecallMark();
        uint64_t v40 = 40;
        goto LABEL_75;
      case 3:
        if (!v34) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 84) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_113;
          }
          char v46 = 32 * *(unsigned char *)(a1 + 84);
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_113;
        }
        BOOL v39 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_112;
        }
        PBReaderRecallMark();
        uint64_t v40 = 32;
        goto LABEL_75;
      case 4:
        if (!v34) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_113;
          }
          char v46 = 8 * *(unsigned char *)(a1 + 84);
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_113;
        }
        BOOL v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_112;
        }
        PBReaderRecallMark();
        uint64_t v40 = 48;
        goto LABEL_75;
      case 5:
        if (!v34) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_113;
          }
          char v46 = 4 * *(unsigned char *)(a1 + 84);
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_113;
        }
        BOOL v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_112;
        }
        PBReaderRecallMark();
        uint64_t v40 = 56;
        goto LABEL_75;
      case 6:
        if (!v34) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 84) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_113;
          }
          char v46 = *(unsigned char *)(a1 + 84) << 6;
LABEL_90:
          v7 += v46 >> 7;
LABEL_91:
          long long v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_92:
          if (!(v54 & 1 | (v7 != 0))) {
            goto LABEL_93;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_113;
        }
        BOOL v39 = objc_alloc_init(GEOAdvisoryCardAction);
        if (GEOAdvisoryCardActionReadAllFrom((uint64_t)v39, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v40 = 24;
LABEL_75:
          uint64_t v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
          goto LABEL_91;
        }
LABEL_112:

LABEL_113:
        int v51 = 0;
        long long v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_94:
        uint64_t v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        if (v53) {
LABEL_95:
        }
          *(unsigned char *)(a1 + v52[173]) |= 1u;
        if (v56 || (v51 & 1) == 0)
        {
          *(unsigned char *)(a1 + v52[173]) |= 0x40u;
          *(unsigned char *)(a1 + v52[173]) |= 8u;
          *(unsigned char *)(a1 + v52[173]) |= 4u;
          *(unsigned char *)(a1 + v52[173]) |= 0x10u;
          *(unsigned char *)(a1 + v52[173]) |= 0x20u;
          *(unsigned char *)(a1 + v52[173]) |= 2u;
        }
        else if (v19)
        {
          while (1)
          {
            int v47 = *v19++;
            char v48 = 64;
            switch(v47)
            {
              case 0:
                goto LABEL_106;
              case 1:
                goto LABEL_105;
              case 2:
                char v48 = 8;
                goto LABEL_105;
              case 3:
                char v48 = 4;
                goto LABEL_105;
              case 4:
                char v48 = 16;
                goto LABEL_105;
              case 5:
                char v48 = 32;
                goto LABEL_105;
              case 6:
                char v48 = 2;
LABEL_105:
                *(unsigned char *)(a1 + v52[173]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_106:
        if (v51) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v56)
        {
          int v49 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 84))
        {
LABEL_76:
          char v45 = PBReaderSkipValueWithTag();
          long long v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v45 & 1) == 0)
          {
            int v51 = 0;
            goto LABEL_94;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          long long v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v51 = 0;
            uint64_t v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_95;
          }
        }
        goto LABEL_92;
    }
  }
}

void sub_189756D58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189756EC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189757034(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897571A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189757314(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189757C4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAdvisoryCardCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 64) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 56) readAll:1];
  char v2 = *(void **)(a1 + 24);

  return [v2 readAll:1];
}

unint64_t GEOAdvisoryCardReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOAdvisoryCardReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOAdvisoryCardReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOAdvisoryCardReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOAdvisoryCardReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOAdvisoryCardCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189757E7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAdvisoryCardReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOAdvisoryCardReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189757EE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAdvisoryCardIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_35:
    BOOL v17 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v17;
  }
  id v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_35;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      if (v7++ >= 9)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4) {
      goto LABEL_35;
    }
    switch((v8 >> 3))
    {
      case 1u:
      case 2u:
      case 4u:
      case 5u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
          goto LABEL_34;
        }
        goto LABEL_22;
      case 3u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
          goto LABEL_34;
        }
        goto LABEL_22;
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOAdvisoryCardActionIsValid(a1)) {
          goto LABEL_34;
        }
LABEL_22:
        PBReaderRecallMark();
        goto LABEL_23;
      default:
        if (PBReaderSkipValueWithTag())
        {
LABEL_23:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_35;
          }
          continue;
        }
LABEL_34:
        PBReaderRecallMark();
        return 0;
    }
  }
}

BOOL GEOPBTransitArtworkIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_51;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_59;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_51;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_59;
          }
        case 0xAu:
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitShieldIsValid(a1)) {
            goto LABEL_61;
          }
          goto LABEL_58;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitIconIsValid(a1)) {
            goto LABEL_61;
          }
          goto LABEL_58;
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v28 = 0;
          break;
        case 0xEu:
          if (v15 == 2) {
            goto LABEL_53;
          }
          goto LABEL_61;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOSFSymbolIsValid(a1)) {
            goto LABEL_61;
          }
LABEL_58:
          PBReaderRecallMark();
          continue;
        default:
LABEL_53:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_61:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_59;
      }
LABEL_51:
      a1[*v4] = 1;
LABEL_59:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOAdvisoryCardActionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_189758910(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAdvisoryCardIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  if (*(char *)(a1 + 84) < 0) {
    return 1;
  }
  unsigned int v2 = *(unsigned __int8 *)(a1 + 84);
  if ((v2 & 0x40) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 64))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 84);
  }
  if ((v2 & 8) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 84);
  }
  if ((v2 & 4) != 0)
  {
    if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 84);
  }
  if ((v2 & 0x10) == 0) {
    goto LABEL_14;
  }
  if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
    return 1;
  }
  unsigned int v2 = *(unsigned __int8 *)(a1 + 84);
LABEL_14:
  if ((v2 & 0x20) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 84);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOAdvisoryCardIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOAdvisoryCardIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189758DE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897591E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAdvisoryCardActionReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          uint64_t v25 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v25, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          unint64_t v26 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_36;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v28 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v27;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_189759D4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAdvisoryCardActionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOAdvisoryCardActionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189759DB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18975A404(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAdvisoryItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v67 = v17;
        char v68 = v9;
        char v69 = v18 | v17;
        if ((v18 | v9)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        char v70 = (v19 == 0) | v18;
        BOOL v71 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
  {
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4) {
      break;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v71;
    if ((v70 & 1) == 0)
    {
      uint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) != 0)
        {
          if (PBReaderSkipValueWithTag())
          {
            v10 += *(unsigned __int8 *)(a1 + 60) << 28 >> 31;
            goto LABEL_84;
          }
        }
        else if (PBReaderPlaceMark())
        {
          BOOL v39 = objc_alloc_init(GEOAdvisoryCard);
          if (GEOAdvisoryCardReadAllFrom((uint64_t)v39, (void *)v3, v7 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = *(void **)(a1 + 24);
            *(void *)(a1 + 24) = v39;

            --v10;
            goto LABEL_84;
          }
        }
        int v65 = 0;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_87;
      case 2:
        if ((v68 & 1) == 0) {
          goto LABEL_71;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v47 = *v20;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v22) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v30 = v45++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_76:
        uint64_t v59 = 52;
        goto LABEL_81;
      case 3:
        if ((v68 & 1) == 0) {
          goto LABEL_71;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v46 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v53 = *v20;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v22) + v54);
            *(void *)(v3 + v53) = v55;
            v46 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              BOOL v30 = v52++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_80:
        uint64_t v59 = 56;
LABEL_81:
        *(_DWORD *)(a1 + v59) = v46;
        goto LABEL_85;
      case 4:
        if (!v34 || (*(unsigned char *)(a1 + 60) & 0x10) != 0) {
          goto LABEL_71;
        }
        char v57 = PBReaderReadString();
        if (v57) {
          -[GEOAdvisoryItem _addNoFlagsAnalyticsMessageValue:](a1, v57);
        }

LABEL_84:
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_85;
      default:
        if ((v67 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_71:
          char v58 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v58 & 1) == 0)
          {
            int v65 = 0;
            goto LABEL_87;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v65 = 0;
            long long v66 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_88;
          }
        }
LABEL_85:
        if (!(v69 & 1 | (v10 != 0))) {
          goto LABEL_86;
        }
        break;
    }
  }
LABEL_86:
  int v65 = 1;
LABEL_87:
  long long v66 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
  if (v67) {
LABEL_88:
  }
    *(unsigned char *)(a1 + v66[189]) |= 4u;
  if (!v71 && (v65 & 1) != 0)
  {
    if (!v19) {
      goto LABEL_99;
    }
    while (1)
    {
      int v61 = *v19++;
      int v60 = v61;
      if (v61 == 1) {
        break;
      }
      if (v60 == 4)
      {
        char v62 = 16;
LABEL_98:
        *(unsigned char *)(a1 + v66[189]) |= v62;
      }
      else if (!v60)
      {
        goto LABEL_99;
      }
    }
    char v62 = 8;
    goto LABEL_98;
  }
  *(unsigned char *)(a1 + v66[189]) |= 8u;
  *(unsigned char *)(a1 + v66[189]) |= 0x10u;
LABEL_99:
  if (v65) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v71)
  {
    char v63 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18975AD20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18975B7FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAdvisoryItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOAdvisoryItemReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOAdvisoryItemReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOAdvisoryItemReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOAdvisoryItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18975B9A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAdvisoryItemReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOAdvisoryItemReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18975BA08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAdvisoryItemIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAdvisoryCardIsValid(a1)) {
            goto LABEL_45;
          }
          PBReaderRecallMark();
          continue;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_45;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_39;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_42;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_45;
          }
          unsigned int v23 = 0;
          break;
        case 4u:
          if (v15 == 2) {
            goto LABEL_41;
          }
          goto LABEL_45;
        default:
LABEL_41:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_45:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_42;
      }
LABEL_39:
      a1[*v4] = 1;
LABEL_42:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_18975BF44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAdvisoryItemIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 60);
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEOAdvisoryCardIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 60);
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOAdvisoryItemIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOAdvisoryItemIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18975C474(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18975C890(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18975CB98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAdvisoryNoticeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int16 *)(a1 + 116) >> 2) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 116)), (uint16x4_t)0xFFFBFFFCFFF7FFFDLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 116) >> 7) & 1)+ (HIBYTE(*(_WORD *)(a1 + 116)) & 1)+ ((*(_WORD *)(a1 + 116) >> 6) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 4;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        char v18 = v16 | v11;
        if (((v16 | v11) | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v90 = 1;
        int v21 = (int *)MEMORY[0x1E4F940C8];
        char v22 = v17;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_143;
        }
        char v88 = v17;
        char v91 = v18 | v17;
        char v92 = (v19 == 0) | v18;
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        char v89 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_141;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_141:
      int v90 = 1;
      goto LABEL_142;
    }
    unint64_t v35 = v26 >> 3;
    BOOL v36 = v18;
    if ((v92 & 1) == 0)
    {
      int v37 = v19;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36) {
          goto LABEL_110;
        }
        if ((*(_WORD *)(a1 + 116) & 0x200) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_162;
          }
          id v41 = objc_alloc_init(GEOFormattedString);
          int AllFrom = GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1);
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if (AllFrom)
          {
            PBReaderRecallMark();
            uint64_t v43 = 88;
            goto LABEL_95;
          }
          goto LABEL_163;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_162;
        }
        __int16 v76 = *(_WORD *)(a1 + 116) << 6;
        goto LABEL_126;
      case 2:
        if (!v36 || (*(_WORD *)(a1 + 116) & 8) != 0) {
          goto LABEL_110;
        }
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_162;
          }
          int v21 = (int *)MEMORY[0x1E4F940C8];
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v21)) {
              break;
            }
            char v47 = 0;
            unsigned int v48 = 0;
            uint64_t v49 = 0;
            char v50 = (int *)MEMORY[0x1E4F940B8];
            while (1)
            {
              uint64_t v51 = *v20;
              uint64_t v52 = *(void *)(v3 + v51);
              unint64_t v53 = v52 + 1;
              if (v52 == -1 || v53 > *(void *)(v3 + *v6)) {
                break;
              }
              char v54 = *(unsigned char *)(*(void *)(v3 + *v50) + v52);
              *(void *)(v3 + v51) = v53;
              v49 |= (unint64_t)(v54 & 0x7F) << v47;
              if (v54 < 0)
              {
                v47 += 7;
                BOOL v31 = v48++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_64;
            }
            *(unsigned char *)(v3 + *v21) = 1;
LABEL_64:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v77 = 0;
          unsigned int v78 = 0;
          uint64_t v79 = 0;
          int v21 = (int *)MEMORY[0x1E4F940C8];
          while (1)
          {
            uint64_t v80 = *v20;
            uint64_t v81 = *(void *)(v3 + v80);
            unint64_t v82 = v81 + 1;
            if (v81 == -1 || v82 > *(void *)(v3 + *v6)) {
              break;
            }
            char v83 = *(unsigned char *)(*(void *)(v3 + *v23) + v81);
            *(void *)(v3 + v80) = v82;
            v79 |= (unint64_t)(v83 & 0x7F) << v77;
            if (v83 < 0)
            {
              v77 += 7;
              BOOL v31 = v78++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_140;
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_140:
          PBRepeatedUInt32Add();
        }
        goto LABEL_96;
      case 3:
        if (!v36 || (*(_WORD *)(a1 + 116) & 0x10) != 0) {
          goto LABEL_110;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_162;
        }
        id v41 = objc_alloc_init(GEOAdvisoryCard);
        int v55 = GEOAdvisoryCardReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1);
        int v21 = (int *)MEMORY[0x1E4F940C8];
        if (!v55) {
          goto LABEL_163;
        }
        PBReaderRecallMark();
        -[GEOAdvisoryNotice _addNoFlagsAdvisoryCard:](a1, v41);
        goto LABEL_84;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_110;
        }
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v58 = 0;
        *(_WORD *)(a1 + 116) |= 2u;
        int v21 = (int *)MEMORY[0x1E4F940C8];
        while (2)
        {
          uint64_t v59 = *v20;
          uint64_t v60 = *(void *)(v3 + v59);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(v3 + *v23) + v60);
            *(void *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              BOOL v31 = v57++ >= 9;
              if (v31)
              {
                uint64_t v58 = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v58 = 0;
        }
LABEL_115:
        *(unsigned char *)(a1 + 112) = v58 != 0;
        goto LABEL_129;
      case 5:
        if (!v36 || (*(_WORD *)(a1 + 116) & 0x20) != 0) {
          goto LABEL_110;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_162;
        }
        id v41 = objc_alloc_init(GEOAdvisoryItem);
        int v63 = GEOAdvisoryItemReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1);
        int v21 = (int *)MEMORY[0x1E4F940C8];
        if (!v63) {
          goto LABEL_163;
        }
        PBReaderRecallMark();
        -[GEOAdvisoryNotice _addNoFlagsAdvisoryItem:](a1, v41);
LABEL_84:

        goto LABEL_96;
      case 6:
        if (!v36) {
          goto LABEL_110;
        }
        if ((*(_WORD *)(a1 + 116) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_162;
          }
          __int16 v76 = *(_WORD *)(a1 + 116) << 8;
          goto LABEL_126;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_162;
        }
        id v41 = objc_alloc_init(GEOFormattedString);
        int v64 = GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1);
        int v21 = (int *)MEMORY[0x1E4F940C8];
        if (!v64) {
          goto LABEL_163;
        }
        PBReaderRecallMark();
        uint64_t v43 = 72;
        goto LABEL_95;
      case 7:
        if (!v36) {
          goto LABEL_110;
        }
        if ((*(_WORD *)(a1 + 116) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_162:
            int v90 = 0;
            char v18 = v89;
            int v21 = (int *)MEMORY[0x1E4F940C8];
            goto LABEL_142;
          }
          __int16 v76 = *(_WORD *)(a1 + 116) << 7;
LABEL_126:
          v7 += v76 >> 15;
LABEL_127:
          char v18 = v89;
          int v21 = (int *)MEMORY[0x1E4F940C8];
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_162;
          }
          id v41 = objc_alloc_init(GEOPBTransitArtwork);
          int v65 = GEOPBTransitArtworkReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1);
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v65)
          {
LABEL_163:

            int v90 = 0;
            char v18 = v89;
            goto LABEL_142;
          }
          PBReaderRecallMark();
          uint64_t v43 = 80;
LABEL_95:
          long long v66 = *(void **)(a1 + v43);
          *(void *)(a1 + v43) = v41;

          --v7;
LABEL_96:
          char v18 = v89;
        }
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        goto LABEL_129;
      case 8:
        if (!v36 || (*(_WORD *)(a1 + 116) & 0x40) != 0) {
          goto LABEL_110;
        }
        char v67 = PBReaderReadString();
        if (v67) {
          -[GEOAdvisoryNotice _addNoFlagsAnalyticsMessageValue:](a1, v67);
        }

        goto LABEL_127;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_110;
        }
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v70 = 0;
        *(_WORD *)(a1 + 116) |= 1u;
        int v21 = (int *)MEMORY[0x1E4F940C8];
        while (2)
        {
          uint64_t v71 = *v20;
          uint64_t v72 = *(void *)(v3 + v71);
          unint64_t v73 = v72 + 1;
          if (v72 == -1 || v73 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v74 = *(unsigned char *)(*(void *)(v3 + *v23) + v72);
            *(void *)(v3 + v71) = v73;
            v70 |= (unint64_t)(v74 & 0x7F) << v68;
            if (v74 < 0)
            {
              v68 += 7;
              BOOL v31 = v69++ >= 9;
              if (v31)
              {
                LODWORD(v70) = 0;
                goto LABEL_119;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v70) = 0;
        }
LABEL_119:
        *(_DWORD *)(a1 + 108) = v70;
        goto LABEL_129;
      default:
        if ((v88 & 1) != 0 && (*(_WORD *)(a1 + 116) & 4) == 0)
        {
          if (!*(void *)(a1 + 16))
          {
            id v44 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v45 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v44;
          }
          int v46 = PBUnknownFieldAdd();
          char v18 = v89;
          int v21 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v46)
          {
            int v90 = 0;
            goto LABEL_144;
          }
LABEL_129:
          if (!(v91 & 1 | (v7 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_141;
          }
          continue;
        }
LABEL_110:
        char v75 = PBReaderSkipValueWithTag();
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        char v18 = v89;
        int v21 = (int *)MEMORY[0x1E4F940C8];
        if (v75) {
          goto LABEL_129;
        }
        int v90 = 0;
LABEL_142:
        char v22 = v88;
LABEL_143:
        if (v22) {
LABEL_144:
        }
          *(_WORD *)(a1 + 116) |= 4u;
        if (v18 & 1 | ((v90 & 1) == 0))
        {
          *(_WORD *)(a1 + 116) |= 0x200u;
          *(_WORD *)(a1 + 116) |= 8u;
          *(_WORD *)(a1 + 116) |= 0x10u;
          *(_WORD *)(a1 + 116) |= 0x20u;
          *(_WORD *)(a1 + 116) |= 0x80u;
          *(_WORD *)(a1 + 116) |= 0x100u;
          *(_WORD *)(a1 + 116) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            int v84 = *v19++;
            __int16 v85 = 512;
            switch(v84)
            {
              case 0:
                goto LABEL_156;
              case 1:
                goto LABEL_155;
              case 2:
                __int16 v85 = 8;
                goto LABEL_155;
              case 3:
                __int16 v85 = 16;
                goto LABEL_155;
              case 5:
                __int16 v85 = 32;
                goto LABEL_155;
              case 6:
                __int16 v85 = 128;
                goto LABEL_155;
              case 7:
                __int16 v85 = 256;
                goto LABEL_155;
              case 8:
                __int16 v85 = 64;
LABEL_155:
                *(_WORD *)(a1 + 116) |= v85;
                break;
              default:
                continue;
            }
          }
        }
LABEL_156:
        if (v90)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_160:
          BOOL v86 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_160;
          }
        }
        return v3;
    }
  }
}

void sub_18975D93C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18975DCC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18975E08C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18975E4C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18975E638(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18975E7A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18975FC54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAdvisoryNoticeCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  [a1[11] readAll:1];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = a1[6];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v4);
  }

  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = a1[7];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * v11++), "readAll:", 1, (void)v13);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v9);
  }

  [a1[9] readAll:1];
  return [a1[10] readAll:1];
}

unint64_t GEOAdvisoryNoticeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOAdvisoryNoticeReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOAdvisoryNoticeReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOAdvisoryNoticeReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOAdvisoryNoticeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOAdvisoryNoticeCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_18975FFC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAdvisoryNoticeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOAdvisoryNoticeReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189760024(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189760450(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAdvisoryNoticeIsDirty(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  __int16 v2 = *(_WORD *)(a1 + 116);
  if ((v2 & 0x400) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 116) & 0x200) == 0)
  {
LABEL_5:
    if ((v2 & 0x38) != 0) {
      return 1;
    }
    if ((v2 & 0x80) != 0)
    {
      if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
        return 1;
      }
      __int16 v2 = *(_WORD *)(a1 + 116);
    }
    if ((v2 & 0x100) != 0)
    {
      if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 80))) {
        return 1;
      }
      __int16 v2 = *(_WORD *)(a1 + 116);
    }
    if ((v2 & 0x40) != 0) {
      return 1;
    }
    if ((v2 & 0x10) != 0)
    {
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      id v5 = *(id *)(a1 + 48);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v17;
LABEL_18:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v17 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEOAdvisoryCardIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1) + 8 * v9))) {
            goto LABEL_36;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
            if (v7) {
              goto LABEL_18;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 116);
    }
    if ((v2 & 0x20) == 0) {
      return 0;
    }
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v5 = *(id *)(a1 + 56);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
    if (!v3)
    {
LABEL_37:

      return v3;
    }
    uint64_t v10 = *(void *)v13;
LABEL_29:
    uint64_t v11 = 0;
    while (1)
    {
      if (*(void *)v13 != v10) {
        objc_enumerationMutation(v5);
      }
      if (GEOAdvisoryItemIsDirty(*(os_unfair_lock_s **)(*((void *)&v12 + 1) + 8 * v11))) {
        break;
      }
      if (v3 == ++v11)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
        if (v3) {
          goto LABEL_29;
        }
        goto LABEL_37;
      }
    }
LABEL_36:
    uint64_t v3 = 1;
    goto LABEL_37;
  }
  if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 88)) & 1) == 0)
  {
    __int16 v2 = *(_WORD *)(a1 + 116);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOAdvisoryNoticeIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOAdvisoryNoticeIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189760FC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897616EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189761B50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAlertReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFEFFFDFFFCFFFFLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v55 = v17;
        char v56 = v18 | v17;
        if ((v18 | v8)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        char v57 = (v19 == 0) | v18;
        BOOL v58 = v18;
        long long v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_77;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_77:
      int v53 = 1;
      goto LABEL_78;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v58;
    if ((v57 & 1) == 0)
    {
      unint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_64;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 48;
          goto LABEL_51;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_97;
        }
        char v48 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_74;
      case 2:
        if (!v34) {
          goto LABEL_64;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 24;
LABEL_51:
          id v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_97;
        }
        char v48 = *(unsigned char *)(a1 + 68) << 6;
        goto LABEL_74;
      case 3:
        if (!v34) {
          goto LABEL_64;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_97;
          }
          char v48 = 16 * *(unsigned char *)(a1 + 68);
          goto LABEL_74;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        unsigned int v45 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1)) {
          goto LABEL_96;
        }
        PBReaderRecallMark();
        uint64_t v46 = 40;
        goto LABEL_62;
      case 4:
        if (!v34) {
          goto LABEL_64;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_97;
          }
          char v48 = 32 * *(unsigned char *)(a1 + 68);
LABEL_74:
          v7 += v48 >> 7;
LABEL_75:
          int v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        unsigned int v45 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v46 = 32;
LABEL_62:
          id v44 = *(void **)(a1 + v46);
          *(void *)(a1 + v46) = v45;
LABEL_63:

          --v7;
          goto LABEL_75;
        }
LABEL_96:

LABEL_97:
        int v53 = 0;
        char v54 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_79:
        if (v55) {
LABEL_80:
        }
          *(unsigned char *)(a1 + v54[597]) |= 1u;
        if (v58 || (v53 & 1) == 0)
        {
          *(unsigned char *)(a1 + v54[597]) |= 0x10u;
          *(unsigned char *)(a1 + v54[597]) |= 2u;
          *(unsigned char *)(a1 + v54[597]) |= 8u;
          *(unsigned char *)(a1 + v54[597]) |= 4u;
        }
        else if (v19)
        {
          while (1)
          {
            int v50 = *v19++;
            char v49 = 16;
            switch(v50)
            {
              case 0:
                goto LABEL_90;
              case 1:
                goto LABEL_88;
              case 2:
                char v49 = 2;
                goto LABEL_88;
              case 3:
                char v49 = 8;
                goto LABEL_88;
              case 4:
                char v49 = 4;
LABEL_88:
                *(unsigned char *)(a1 + v54[597]) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_90:
        if (v53) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v58)
        {
          uint64_t v51 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v55 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_64:
          char v47 = PBReaderSkipValueWithTag();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v47 & 1) == 0)
          {
            int v53 = 0;
LABEL_78:
            char v54 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_79;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v53 = 0;
            char v54 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_80;
          }
        }
LABEL_76:
        if (!(v56 & 1 | (v7 != 0))) {
          goto LABEL_77;
        }
        continue;
    }
  }
}

void sub_1897623B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18976254C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897626E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189762BB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAlertReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOAlertReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOAlertReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOAlertReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOAlertReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 40) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189763040(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAlertIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_29;
          }
          goto LABEL_26;
        case 2u:
          if (v15 == 2) {
            goto LABEL_26;
          }
          goto LABEL_29;
        case 3u:
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_29;
          }
          PBReaderRecallMark();
          goto LABEL_27;
        default:
LABEL_26:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_29:
            PBReaderRecallMark();
            return 0;
          }
LABEL_27:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_28;
          }
          break;
      }
    }
  }
LABEL_28:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189763434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAlertIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v2 = *(unsigned char *)(a1 + 68);
  if ((v2 & 0x32) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 68) & 8) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 68);
  }
  if ((v2 & 4) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 32);

  return (uint64_t)GEOFormattedStringIsDirty(v4);
}

os_unfair_lock_s *GEOAlertIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOAlertIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897636E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189763C64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAlertNonRecommendedRouteTextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        long long v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_79;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_79:
      int v51 = 1;
      goto LABEL_80;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      unint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_97;
          }
          uint64_t v39 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = 32;
            goto LABEL_65;
          }
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_97;
        }
        char v46 = 32 * *(unsigned char *)(a1 + 68);
        goto LABEL_76;
      case 2:
        if (!v34) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_97;
          }
          char v46 = 16 * *(unsigned char *)(a1 + 68);
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_96;
        }
        PBReaderRecallMark();
        uint64_t v40 = 40;
        goto LABEL_65;
      case 3:
        if (!v34) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_97;
          }
          char v46 = 8 * *(unsigned char *)(a1 + 68);
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        uint64_t v39 = objc_alloc_init(GEOPlaceFormattedString);
        if (!GEOPlaceFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_96;
        }
        PBReaderRecallMark();
        uint64_t v40 = 48;
        goto LABEL_65;
      case 4:
        if (!v34) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_97;
          }
          char v46 = *(unsigned char *)(a1 + 68) << 6;
LABEL_76:
          v7 += v46 >> 7;
LABEL_77:
          int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_78:
          if (!(v54 & 1 | (v7 != 0))) {
            goto LABEL_79;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        uint64_t v39 = objc_alloc_init(GEOPlaceFormattedString);
        if (GEOPlaceFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v40 = 24;
LABEL_65:
          id v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
          goto LABEL_77;
        }
LABEL_96:

LABEL_97:
        int v51 = 0;
        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_80:
        uint64_t v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        if (v53) {
LABEL_81:
        }
          *(unsigned char *)(a1 + v52[216]) |= 1u;
        if (v56 || (v51 & 1) == 0)
        {
          *(unsigned char *)(a1 + v52[216]) |= 4u;
          *(unsigned char *)(a1 + v52[216]) |= 8u;
          *(unsigned char *)(a1 + v52[216]) |= 0x10u;
          *(unsigned char *)(a1 + v52[216]) |= 2u;
        }
        else if (v19)
        {
          while (1)
          {
            int v47 = *v19++;
            char v48 = 4;
            switch(v47)
            {
              case 0:
                goto LABEL_90;
              case 1:
                goto LABEL_89;
              case 2:
                char v48 = 8;
                goto LABEL_89;
              case 3:
                char v48 = 16;
                goto LABEL_89;
              case 4:
                char v48 = 2;
LABEL_89:
                *(unsigned char *)(a1 + v52[216]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_90:
        if (v51) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v56)
        {
          char v49 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_66:
          char v45 = PBReaderSkipValueWithTag();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v45 & 1) == 0)
          {
            int v51 = 0;
            goto LABEL_80;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v51 = 0;
            uint64_t v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_81;
          }
        }
        goto LABEL_78;
    }
  }
}

void sub_1897644FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18976466C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897647D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189764FA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAlertNonRecommendedRouteTextCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  char v2 = *(void **)(a1 + 24);

  return [v2 readAll:1];
}

unint64_t GEOAlertNonRecommendedRouteTextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOAlertNonRecommendedRouteTextReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOAlertNonRecommendedRouteTextReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOAlertNonRecommendedRouteTextReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOAlertNonRecommendedRouteTextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOAlertNonRecommendedRouteTextCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1897651B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAlertNonRecommendedRouteTextReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOAlertNonRecommendedRouteTextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189765214(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAlertNonRecommendedRouteTextIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!a1[*v4])
      {
        char v6 = 0;
        unsigned int v7 = 0;
        unint64_t v8 = 0;
        while (1)
        {
          uint64_t v9 = *v2;
          uint64_t v10 = *(void *)&a1[v9];
          unint64_t v11 = v10 + 1;
          if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
            break;
          }
          char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
          *(void *)&a1[v9] = v11;
          v8 |= (unint64_t)(v12 & 0x7F) << v6;
          if ((v12 & 0x80) == 0) {
            goto LABEL_12;
          }
          v6 += 7;
          if (v7++ >= 9)
          {
            unint64_t v8 = 0;
            int v14 = a1[*v4];
            goto LABEL_14;
          }
        }
        a1[*v4] = 1;
LABEL_12:
        int v14 = a1[*v4];
        if (a1[*v4]) {
          unint64_t v8 = 0;
        }
LABEL_14:
        int v15 = v8 & 7;
        if (v14) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = v15 == 4;
        }
        if (!v16)
        {
          switch((v8 >> 3))
          {
            case 1u:
            case 2u:
              if (v15 == 2 && PBReaderPlaceMark() && GEOFormattedStringIsValid(a1)) {
                goto LABEL_26;
              }
              goto LABEL_30;
            case 3u:
            case 4u:
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOPlaceFormattedStringIsValid(a1)) {
                goto LABEL_30;
              }
LABEL_26:
              PBReaderRecallMark();
LABEL_28:
              if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
                break;
              }
              continue;
            default:
              if (PBReaderSkipValueWithTag()) {
                goto LABEL_28;
              }
LABEL_30:
              PBReaderRecallMark();
              return 0;
          }
        }
      }
      break;
    }
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPlaceFormattedStringIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_27:
    BOOL v17 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v17;
  }
  id v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_27;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      if (v7++ >= 9)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4) {
      goto LABEL_27;
    }
    switch((v8 >> 3))
    {
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
          goto LABEL_26;
        }
        PBReaderRecallMark();
        goto LABEL_23;
      default:
        if (PBReaderSkipValueWithTag())
        {
LABEL_23:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_27;
          }
          continue;
        }
LABEL_26:
        PBReaderRecallMark();
        return 0;
    }
  }
}

void sub_189765824(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAlertNonRecommendedRouteTextIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v2 = *(unsigned char *)(a1 + 68);
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 68) & 4) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 68);
  }
  if ((v2 & 8) == 0) {
    goto LABEL_8;
  }
  if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
    return 1;
  }
  char v2 = *(unsigned char *)(a1 + 68);
LABEL_8:
  if ((v2 & 0x10) != 0)
  {
    if (GEOPlaceFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 68);
  }
  if ((v2 & 2) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 24);

  return (uint64_t)GEOPlaceFormattedStringIsDirty(v4);
}

os_unfair_lock_s *GEOAlertNonRecommendedRouteTextIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOAlertNonRecommendedRouteTextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189765C20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189765F60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897662D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOArrivalParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  char v12 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
  int v13 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 != 0;
        int v18 = v17 & ~v11 | v9;
        int v19 = v17 | v11;
        if (((v17 | v11) | v7)) {
          long long v20 = 0;
        }
        else {
          long long v20 = a3;
        }
        int v21 = (int *)MEMORY[0x1E4F940E8];
        BOOL v22 = v8 != 0;
        int v23 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_88;
        }
        char v64 = v17 & ~(_BYTE)v11 | v9;
        int v66 = v22 | v19 | v18;
        char v67 = (v20 == 0) | v19;
        unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v25 = (int *)MEMORY[0x1E4F940B8];
        char v65 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v9;
LABEL_8:
        uint64_t v15 = v10;
        uint64_t v16 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v14;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  while (!*(unsigned char *)(v3 + *v24))
  {
    char v26 = 0;
    unsigned int v27 = 0;
    unint64_t v28 = 0;
    while (1)
    {
      uint64_t v29 = *v21;
      uint64_t v30 = *(void *)(v3 + v29);
      unint64_t v31 = v30 + 1;
      if (v30 == -1 || v31 > *(void *)(v3 + *v6)) {
        break;
      }
      char v32 = *(unsigned char *)(*(void *)(v3 + *v25) + v30);
      *(void *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0) {
        goto LABEL_25;
      }
      v26 += 7;
      BOOL v33 = v27++ >= 9;
      if (v33)
      {
        unint64_t v28 = 0;
        int v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v24) = 1;
LABEL_25:
    int v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(unsigned char *)(v3 + *v24)) {
      unint64_t v28 = 0;
    }
LABEL_27:
    if (v34 || (v28 & 7) == 4) {
      break;
    }
    unint64_t v36 = v28 >> 3;
    BOOL v37 = v19;
    if ((v67 & 1) == 0)
    {
      BOOL v38 = v20;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v7 & 1) == 0) {
          goto LABEL_72;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (1)
        {
          uint64_t v45 = *v21;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
            break;
          }
          char v48 = *(unsigned char *)(*(void *)(v3 + *v25) + v46);
          *(void *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0) {
            goto LABEL_75;
          }
          v42 += 7;
          BOOL v33 = v43++ >= 9;
          if (v33)
          {
            LODWORD(v44) = 0;
            goto LABEL_77;
          }
        }
        *(unsigned char *)(v3 + *v24) = 1;
LABEL_75:
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v44) = 0;
        }
LABEL_77:
        uint64_t v58 = 56;
        goto LABEL_82;
      case 2:
        if (!v37 || (*(unsigned char *)(a1 + 60) & 0x10) != 0) {
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_107;
        }
        char v49 = objc_alloc_init(GEOArrivalPoint);
        if (!GEOArrivalPointReadAllFrom((uint64_t)v49, (void *)v3)) {
          goto LABEL_106;
        }
        PBReaderRecallMark();
        -[GEOArrivalParameters _addNoFlagsArrivalPoints:](a1, v49);
        goto LABEL_63;
      case 4:
        if (!v37 || (*(unsigned char *)(a1 + 60) & 8) != 0) {
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_107;
        }
        char v49 = objc_alloc_init(GEOArrivalRegion);
        if (!GEOArrivalRegionReadAllFrom((uint64_t)v49, (void *)v3))
        {
LABEL_106:

LABEL_107:
          int v23 = 0;
          char v12 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
          LOBYTE(v19) = v65;
          goto LABEL_87;
        }
        PBReaderRecallMark();
        -[GEOArrivalParameters _addNoFlagsArrivalMapRegions:](a1, v49);
LABEL_63:

        LOBYTE(v19) = v65;
        unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_83;
      case 5:
        if ((v7 & 1) == 0) {
          goto LABEL_72;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v54 = *v21;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v25) + v55);
            *(void *)(v3 + v54) = v56;
            v44 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v33 = v53++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v44) = 0;
        }
LABEL_81:
        uint64_t v58 = 52;
LABEL_82:
        *(_DWORD *)(a1 + v58) = v44;
        goto LABEL_83;
      default:
        if ((v64 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_72:
          int v23 = PBReaderSkipValueWithTag();
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
          LOBYTE(v19) = v65;
          if ((v23 & v66 & 1) == 0) {
            goto LABEL_86;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v50 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v51 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v50;
          }
          int v23 = PBUnknownFieldAdd();
          LOBYTE(v19) = v65;
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
          if (!v23)
          {
            char v12 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_89;
          }
LABEL_83:
          if ((v66 & 1) == 0) {
            goto LABEL_85;
          }
        }
        if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v6)) {
          goto LABEL_85;
        }
        break;
    }
  }
LABEL_85:
  int v23 = 1;
LABEL_86:
  char v12 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
LABEL_87:
  LOBYTE(v18) = v64;
LABEL_88:
  if (v18) {
LABEL_89:
  }
    *(unsigned char *)(a1 + v12[605]) |= 4u;
  if (!(v19 & 1 | ((v23 & 1) == 0)))
  {
    if (!v20) {
      goto LABEL_100;
    }
    while (1)
    {
      int v61 = *v20++;
      int v60 = v61;
      if (v61 == 2) {
        break;
      }
      if (v60 == 4)
      {
        char v59 = 8;
LABEL_96:
        *(unsigned char *)(a1 + v12[605]) |= v59;
      }
      else if (!v60)
      {
        goto LABEL_100;
      }
    }
    char v59 = 16;
    goto LABEL_96;
  }
  *(unsigned char *)(a1 + v12[605]) |= 0x10u;
  *(unsigned char *)(a1 + v12[605]) |= 8u;
LABEL_100:
  if (v23)
  {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
    if ((v19 & 1) == 0) {
      return v3;
    }
    goto LABEL_104;
  }
  unint64_t v3 = 0;
  if (v19)
  {
LABEL_104:
    char v62 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189766D78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189767B5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOArrivalParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 24);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOArrivalParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOArrivalParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOArrivalParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOArrivalParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOArrivalParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOArrivalParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189767E88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOArrivalParametersReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOArrivalParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189767EEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOArrivalParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_49;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_46;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOArrivalPointIsValid(a1)) {
            goto LABEL_49;
          }
          goto LABEL_36;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOArrivalRegionIsValid(a1)) {
            goto LABEL_49;
          }
LABEL_36:
          PBReaderRecallMark();
          continue;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_49;
          }
          unsigned int v23 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_49:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_46;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_46:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOArrivalPointIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOArrivalRegionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1)) {
            goto LABEL_53;
          }
          PBReaderRecallMark();
          continue;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v28 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_49:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_1897689F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOArrivalParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189769120(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897695C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOArrivalPointReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_36;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            LODWORD(v22) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          uint64_t v18 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          uint64_t v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v28 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v27;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_18976A050(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOArrivalPointReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOArrivalPointReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18976A0B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOArrivalRegionReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_64;
            }
            uint64_t v18 = objc_alloc_init(GEOMapRegion);
            if (GEOMapRegionReadAllFrom((uint64_t)v18, v3))
            {
              PBReaderRecallMark();
              uint64_t v19 = *(void **)(a1 + 16);
              *(void *)(a1 + 16) = v18;

              continue;
            }

            goto LABEL_64;
          case 2u:
            char v22 = 0;
            unsigned int v23 = 0;
            uint64_t v24 = 0;
            *(unsigned char *)(a1 + 36) |= 1u;
            while (2)
            {
              uint64_t v25 = *v4;
              uint64_t v26 = *(void *)&v3[v25];
              unint64_t v27 = v26 + 1;
              if (v26 == -1 || v27 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v28 = *(unsigned char *)(*(void *)&v3[*v7] + v26);
                *(void *)&v3[v25] = v27;
                v24 |= (unint64_t)(v28 & 0x7F) << v22;
                if (v28 < 0)
                {
                  v22 += 7;
                  BOOL v15 = v23++ >= 9;
                  if (v15)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_51;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v24) = 0;
            }
LABEL_51:
            uint64_t v41 = 24;
            goto LABEL_60;
          case 3u:
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v24 = 0;
            *(unsigned char *)(a1 + 36) |= 2u;
            while (2)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
                *(void *)&v3[v31] = v33;
                v24 |= (unint64_t)(v34 & 0x7F) << v29;
                if (v34 < 0)
                {
                  v29 += 7;
                  BOOL v15 = v30++ >= 9;
                  if (v15)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v24) = 0;
            }
LABEL_55:
            uint64_t v41 = 28;
            goto LABEL_60;
          case 4u:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v24 = 0;
            *(unsigned char *)(a1 + 36) |= 4u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unsigned int v21 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v20;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_64;
            }
            continue;
        }
        while (1)
        {
          uint64_t v37 = *v4;
          uint64_t v38 = *(void *)&v3[v37];
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)&v3[*v5]) {
            break;
          }
          char v40 = *(unsigned char *)(*(void *)&v3[*v7] + v38);
          *(void *)&v3[v37] = v39;
          v24 |= (unint64_t)(v40 & 0x7F) << v35;
          if ((v40 & 0x80) == 0) {
            goto LABEL_57;
          }
          v35 += 7;
          BOOL v15 = v36++ >= 9;
          if (v15)
          {
            LODWORD(v24) = 0;
            goto LABEL_59;
          }
        }
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6]) {
          LODWORD(v24) = 0;
        }
LABEL_59:
        uint64_t v41 = 32;
LABEL_60:
        *(_DWORD *)(a1 + v41) = v24;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_64:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_18976B448(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOArrivalRegionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOArrivalRegionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18976B4BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAttributeReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              uint64_t v26 = &OBJC_IVAR___GEOAttribute__key;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              uint64_t v26 = &OBJC_IVAR___GEOAttribute__key;
              goto LABEL_44;
            }
          }
          uint64_t v26 = &OBJC_IVAR___GEOAttribute__key;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          char v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 2u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          uint64_t v26 = &OBJC_IVAR___GEOAttribute__value;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          uint64_t v26 = &OBJC_IVAR___GEOAttribute__value;
          goto LABEL_44;
        }
      }
      uint64_t v26 = &OBJC_IVAR___GEOAttribute__value;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_18976C57C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAttributeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOAttributeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18976C5E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAttributeIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_18976D058(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAutomobileOptionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOAutomobileOptionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18976D948(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAutomobileOptionsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_43;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_43;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v28 = 0;
          break;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOUserPreferencesIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_53;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVehicleSpecificationsIsValid(a1)) {
            goto LABEL_57;
          }
LABEL_53:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_43:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOUserPreferencesIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOEVChargingPreferenceIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
        }
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_46;
        }
      }
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEOVehicleSpecificationsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOLPRInfoIsValid(a1)) {
            goto LABEL_30;
          }
          goto LABEL_45;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOEVInfoIsValid(a1)) {
            goto LABEL_45;
          }
          goto LABEL_30;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVehicleInfoIsValid(a1)) {
            goto LABEL_45;
          }
LABEL_30:
          PBReaderRecallMark();
          continue;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_45;
          }
          unsigned int v17 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_45:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_42;
      }
      a1[*v4] = 1;
LABEL_42:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

os_unfair_lock_s *GEOAutomobileOptionsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL v2 = _GEOAutomobileOptionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return v2;
  }
  return result;
}

void sub_18976E790(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCameraInputReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v18 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addEventPosition:", v18, 0, 0);
        }
        else
        {
          if (!a1[1])
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v20 = (void *)a1[1];
            a1[1] = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18976F184(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCameraInputReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOCameraInputReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18976F1E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCameraInputIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOChargerPlugReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_59;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_59;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 2u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              unint64_t v27 = &OBJC_IVAR___GEOChargerPlug__maximumVoltage;
              goto LABEL_51;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              unint64_t v27 = &OBJC_IVAR___GEOChargerPlug__maximumVoltage;
              goto LABEL_53;
            }
          }
          unint64_t v27 = &OBJC_IVAR___GEOChargerPlug__maximumVoltage;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if (v18 == 2) {
          break;
        }
        if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 4u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              unint64_t v27 = &OBJC_IVAR___GEOChargerPlug__type;
              goto LABEL_50;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              unint64_t v27 = &OBJC_IVAR___GEOChargerPlug__type;
              goto LABEL_53;
            }
          }
          unint64_t v27 = &OBJC_IVAR___GEOChargerPlug__type;
          goto LABEL_51;
        }
        if (!*(void *)(a1 + 8))
        {
          id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          uint64_t v41 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v40;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_60;
        }
LABEL_54:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_59;
        }
      }
      char v34 = 0;
      unsigned int v35 = 0;
      uint64_t v21 = 0;
      *(unsigned char *)(a1 + 28) |= 1u;
      while (1)
      {
        uint64_t v36 = *v4;
        uint64_t v37 = *(void *)&v3[v36];
        unint64_t v38 = v37 + 1;
        if (v37 == -1 || v38 > *(void *)&v3[*v5])
        {
          unint64_t v27 = &OBJC_IVAR___GEOChargerPlug__maximumPower;
          goto LABEL_50;
        }
        char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
        *(void *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0) {
          break;
        }
        v34 += 7;
        BOOL v26 = v35++ > 8;
        if (v26)
        {
          LODWORD(v21) = 0;
          unint64_t v27 = &OBJC_IVAR___GEOChargerPlug__maximumPower;
          goto LABEL_53;
        }
      }
      unint64_t v27 = &OBJC_IVAR___GEOChargerPlug__maximumPower;
LABEL_51:
      if (v3[*v6]) {
        LODWORD(v21) = 0;
      }
LABEL_53:
      *(_DWORD *)(a1 + *v27) = v21;
      goto LABEL_54;
    }
LABEL_59:
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_189770944(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargerPlugReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOChargerPlugReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897709A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargerPlugIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_189771330(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOChargerPlugsInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 != 0;
        int v15 = v14 & ~v10 | v9;
        int v16 = v14 | v10;
        if (((v14 | v10) | v7)) {
          unsigned int v17 = 0;
        }
        else {
          unsigned int v17 = a3;
        }
        BOOL v18 = v8 != 0;
        uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        int v20 = 1;
        int v21 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_61;
        }
        char v49 = v15;
        int v50 = v18 | v16 | v15;
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v9;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_59;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v19;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_24;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_24:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_26:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_59:
      int v20 = 1;
      goto LABEL_60;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v16;
    if (!((v17 == 0) | v16 & 1))
    {
      unsigned int v35 = v17;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34 && (*(unsigned char *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_81;
        }
        char v39 = objc_alloc_init(GEOChargerPlug);
        if (!GEOChargerPlugReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_80;
        }
        PBReaderRecallMark();
        -[GEOChargerPlugsInfo _addNoFlagsSuggestedChargerPlug:](a1, v39);
LABEL_49:

        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_55:
        if ((v50 & 1) == 0) {
          goto LABEL_59;
        }
        goto LABEL_58;
      }
    }
    else if ((v49 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v41 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v40;
      }
      int v42 = PBUnknownFieldAdd();
      int v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v42)
      {
        int v20 = 0;
        goto LABEL_62;
      }
      goto LABEL_55;
    }
LABEL_57:
    int v43 = PBReaderSkipValueWithTag();
    int v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v43 & v50 & 1) == 0)
    {
      int v20 = v43;
      goto LABEL_60;
    }
LABEL_58:
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v6)) {
      goto LABEL_59;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 52) & 4) != 0) {
    goto LABEL_57;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_81;
  }
  char v39 = objc_alloc_init(GEOChargerPlug);
  if (GEOChargerPlugReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOChargerPlugsInfo _addNoFlagsSupportedChargerPlug:](a1, v39);
    goto LABEL_49;
  }
LABEL_80:

LABEL_81:
  int v20 = 0;
  int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_60:
  LOBYTE(v15) = v49;
LABEL_61:
  if (v15) {
LABEL_62:
  }
    *(unsigned char *)(a1 + 52) |= 1u;
  if (v16 & 1 | ((v20 & 1) == 0))
  {
    *(unsigned char *)(a1 + 52) |= 2u;
    *(unsigned char *)(a1 + 52) |= 4u;
    goto LABEL_73;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        int v45 = *v17++;
        int v44 = v45;
        if (v45 == 1) {
          break;
        }
        if (v44 == 2)
        {
          char v46 = 4;
          goto LABEL_72;
        }
        if (!v44) {
          goto LABEL_73;
        }
      }
      char v46 = 2;
LABEL_72:
      *(unsigned char *)(a1 + 52) |= v46;
      continue;
    }
  }
LABEL_73:
  if (v20)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
    if ((v16 & 1) == 0) {
      return v3;
    }
LABEL_77:
    unint64_t v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v16) {
      goto LABEL_77;
    }
  }
  return v3;
}

void sub_189771C14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189772820(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOChargerPlugsInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 32);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOChargerPlugsInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOChargerPlugsInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOChargerPlugsInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOChargerPlugsInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOChargerPlugsInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOChargerPlugsInfoCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189772B50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOChargerPlugsInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOChargerPlugsInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189772BB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargerPlugsInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOChargerPlugIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_18977304C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargerPlugsInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1897734EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189773874(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189773CB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOClickableAdvisoryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1)
      + (*(unsigned char *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v7;
        char v18 = v16 | v11;
        if (((v16 | v11) | v8)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        int v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = 1;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_86;
        }
        char v65 = v17;
        char v66 = v18 | v17;
        char v68 = (v19 == 0) | v18;
        char v23 = (int *)MEMORY[0x1E4F940B8];
        char v67 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_84;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_84:
      int v21 = 1;
      goto LABEL_85;
    }
    unint64_t v35 = v26 >> 3;
    BOOL v36 = v18;
    if ((v68 & 1) == 0)
    {
      int v37 = v19;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    if (v35 == 2)
    {
      if (v36 && (*(unsigned char *)(a1 + 68) & 2) == 0)
      {
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_105;
          }
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v22)) {
              break;
            }
            char v43 = 0;
            unsigned int v44 = 0;
            uint64_t v45 = 0;
            while (1)
            {
              uint64_t v46 = *v20;
              uint64_t v47 = *(void *)(v3 + v46);
              unint64_t v48 = v47 + 1;
              if (v47 == -1 || v48 > *(void *)(v3 + *v6)) {
                break;
              }
              char v49 = *(unsigned char *)(*(void *)(v3 + *v23) + v47);
              *(void *)(v3 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                BOOL v31 = v44++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_59;
            }
            *(unsigned char *)(v3 + *v22) = 1;
LABEL_59:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v54 = 0;
          unsigned int v55 = 0;
          uint64_t v56 = 0;
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          while (1)
          {
            uint64_t v57 = *v20;
            uint64_t v58 = *(void *)(v3 + v57);
            unint64_t v59 = v58 + 1;
            if (v58 == -1 || v59 > *(void *)(v3 + *v6)) {
              break;
            }
            char v60 = *(unsigned char *)(*(void *)(v3 + *v23) + v58);
            *(void *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              BOOL v31 = v55++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_82;
          }
          *(unsigned char *)(v3 + *v22) = 1;
LABEL_82:
          PBRepeatedUInt32Add();
        }
        char v18 = v67;
        goto LABEL_68;
      }
      goto LABEL_67;
    }
    if (v35 == 1) {
      break;
    }
    if (v65 & 1) == 0 || (*(unsigned char *)(a1 + 68)) {
      goto LABEL_67;
    }
    if (!*(void *)(a1 + 16))
    {
      id v50 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      int v51 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v50;
    }
    int v52 = PBUnknownFieldAdd();
    char v18 = v67;
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    if (!v52)
    {
      int v21 = 0;
      goto LABEL_87;
    }
LABEL_68:
    if (!(v66 & 1 | (v9 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
      goto LABEL_84;
    }
  }
  if (!v36)
  {
LABEL_67:
    char v53 = PBReaderSkipValueWithTag();
    char v18 = v67;
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    if ((v53 & 1) == 0)
    {
      int v21 = 0;
      goto LABEL_85;
    }
    goto LABEL_68;
  }
  if ((*(unsigned char *)(a1 + 68) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_105;
    }
    v9 += *(unsigned __int8 *)(a1 + 68) << 29 >> 31;
    goto LABEL_73;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_105;
  }
  uint64_t v41 = objc_alloc_init(GEOFormattedString);
  if (GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    int v42 = *(void **)(a1 + 48);
    *(void *)(a1 + 48) = v41;

    --v9;
LABEL_73:
    char v18 = v67;
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_68;
  }

LABEL_105:
  int v21 = 0;
  char v18 = v67;
  uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
  char v17 = v65;
LABEL_86:
  if (v17) {
LABEL_87:
  }
    *(unsigned char *)(a1 + 68) |= 1u;
  if (v18 & 1 | ((v21 & 1) == 0))
  {
    *(unsigned char *)(a1 + 68) |= 4u;
    *(unsigned char *)(a1 + 68) |= 2u;
    goto LABEL_97;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v62 = *v19++;
        int v61 = v62;
        if (v62 == 1) {
          break;
        }
        if (v61 == 2) {
          goto LABEL_96;
        }
        if (!v61) {
          goto LABEL_97;
        }
      }
      LOBYTE(v61) = 4;
LABEL_96:
      *(unsigned char *)(a1 + 68) |= v61;
      continue;
    }
  }
LABEL_97:
  if (v21)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
    if ((v18 & 1) == 0) {
      return v3;
    }
LABEL_101:
    int v63 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v18) {
      goto LABEL_101;
    }
  }
  return v3;
}

void sub_1897744F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189774E30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOClickableAdvisoryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOClickableAdvisoryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOClickableAdvisoryReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOClickableAdvisoryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOClickableAdvisoryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189774FD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOClickableAdvisoryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOClickableAdvisoryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18977503C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897751F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOClickableAdvisoryIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOClickableAdvisoryIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOClickableAdvisoryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189775534(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897757B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOClientFeedbackInfoReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = PBReaderReadData();
          if (v18) {
            [a1 addDisplayedBannerEventInfo:v18];
          }
        }
        else
        {
          if (!a1[1])
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v20 = (void *)a1[1];
            a1[1] = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_28;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_28:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1897761B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOClientFeedbackInfoReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOClientFeedbackInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189776214(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOClientFeedbackInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOCommonOptionsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 8u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__includeTravelTimeAggressive;
                goto LABEL_80;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                break;
              }
              v18 += 7;
              BOOL v25 = v19++ > 8;
              if (v25)
              {
                uint64_t v20 = 0;
                unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__includeTravelTimeAggressive;
                goto LABEL_83;
              }
            }
            unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__includeTravelTimeAggressive;
            goto LABEL_81;
          case 2u:
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 0x20u;
            while (2)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__includeTravelTimeEstimate;
                goto LABEL_80;
              }
              char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v33;
              v20 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                BOOL v25 = v30++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__includeTravelTimeEstimate;
                  goto LABEL_83;
                }
                continue;
              }
              break;
            }
            unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__includeTravelTimeEstimate;
            goto LABEL_81;
          case 3u:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 0x10u;
            while (2)
            {
              uint64_t v37 = *v4;
              uint64_t v38 = *(void *)&v3[v37];
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__includeTravelTimeConservative;
                goto LABEL_80;
              }
              char v40 = *(unsigned char *)(*(void *)&v3[*v7] + v38);
              *(void *)&v3[v37] = v39;
              v20 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                BOOL v25 = v36++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__includeTravelTimeConservative;
                  goto LABEL_83;
                }
                continue;
              }
              break;
            }
            unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__includeTravelTimeConservative;
            goto LABEL_81;
          case 4u:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 1u;
            while (2)
            {
              uint64_t v43 = *v4;
              uint64_t v44 = *(void *)&v3[v43];
              unint64_t v45 = v44 + 1;
              if (v44 == -1 || v45 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__excludeGuidance;
                goto LABEL_80;
              }
              char v46 = *(unsigned char *)(*(void *)&v3[*v7] + v44);
              *(void *)&v3[v43] = v45;
              v20 |= (unint64_t)(v46 & 0x7F) << v41;
              if (v46 < 0)
              {
                v41 += 7;
                BOOL v25 = v42++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__excludeGuidance;
                  goto LABEL_83;
                }
                continue;
              }
              break;
            }
            unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__excludeGuidance;
            goto LABEL_81;
          case 5u:
            char v47 = 0;
            unsigned int v48 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 4u;
            while (2)
            {
              uint64_t v49 = *v4;
              uint64_t v50 = *(void *)&v3[v49];
              unint64_t v51 = v50 + 1;
              if (v50 == -1 || v51 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__includeSummaryForPredictedDestination;
                goto LABEL_80;
              }
              char v52 = *(unsigned char *)(*(void *)&v3[*v7] + v50);
              *(void *)&v3[v49] = v51;
              v20 |= (unint64_t)(v52 & 0x7F) << v47;
              if (v52 < 0)
              {
                v47 += 7;
                BOOL v25 = v48++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__includeSummaryForPredictedDestination;
                  goto LABEL_83;
                }
                continue;
              }
              break;
            }
            unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__includeSummaryForPredictedDestination;
            goto LABEL_81;
          case 6u:
            char v53 = 0;
            unsigned int v54 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 2u;
            while (2)
            {
              uint64_t v55 = *v4;
              uint64_t v56 = *(void *)&v3[v55];
              unint64_t v57 = v56 + 1;
              if (v56 == -1 || v57 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__includeSnapScoreMetadataDebug;
                goto LABEL_80;
              }
              char v58 = *(unsigned char *)(*(void *)&v3[*v7] + v56);
              *(void *)&v3[v55] = v57;
              v20 |= (unint64_t)(v58 & 0x7F) << v53;
              if (v58 < 0)
              {
                v53 += 7;
                BOOL v25 = v54++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__includeSnapScoreMetadataDebug;
                  goto LABEL_83;
                }
                continue;
              }
              break;
            }
            unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__includeSnapScoreMetadataDebug;
            goto LABEL_81;
          case 7u:
            char v59 = 0;
            unsigned int v60 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 0x40u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              uint64_t v28 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v27;
            }
            if ((PBUnknownFieldAdd() & 1) == 0) {
              goto LABEL_94;
            }
            continue;
        }
        while (1)
        {
          uint64_t v61 = *v4;
          uint64_t v62 = *(void *)&v3[v61];
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)&v3[*v5]) {
            break;
          }
          char v64 = *(unsigned char *)(*(void *)&v3[*v7] + v62);
          *(void *)&v3[v61] = v63;
          v20 |= (unint64_t)(v64 & 0x7F) << v59;
          if ((v64 & 0x80) == 0)
          {
            unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__supportsArMode;
            goto LABEL_81;
          }
          v59 += 7;
          BOOL v25 = v60++ > 8;
          if (v25)
          {
            uint64_t v20 = 0;
            unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__supportsArMode;
            goto LABEL_83;
          }
        }
        unint64_t v26 = &OBJC_IVAR___GEOCommonOptions__supportsArMode;
LABEL_80:
        v3[*v6] = 1;
LABEL_81:
        if (v3[*v6]) {
          uint64_t v20 = 0;
        }
LABEL_83:
        *(unsigned char *)(a1 + *v26) = v20 != 0;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v65 = v3[*v6] == 0;
  }
  else
  {
LABEL_94:
    BOOL v65 = 0;
  }
  objc_sync_exit(v3);

  return v65;
}

void sub_189777BBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCommonOptionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOCommonOptionsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189777C3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCommonOptionsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_81;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_77;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_78;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_81;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_77;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_78;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_81;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_77;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_78;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_81;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_77;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v21 = v37++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_78;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_81;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_77;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_78;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_81;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_77;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v21 = v42++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_78;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_81;
          }
          unsigned int v47 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_81:
          BOOL v52 = 0;
          goto LABEL_80;
      }
      while (1)
      {
        uint64_t v48 = *v2;
        uint64_t v49 = *(void *)&a1[v48];
        unint64_t v50 = v49 + 1;
        if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
          break;
        }
        int v51 = *(char *)(*(void *)&a1[*v5] + v49);
        *(void *)&a1[v48] = v50;
        if (v51 < 0)
        {
          BOOL v21 = v47++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_78;
      }
LABEL_77:
      a1[*v4] = 1;
LABEL_78:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v52 = a1[*v4] == 0;
LABEL_80:
  PBReaderRecallMark();
  return v52;
}

BOOL GEOCommonResponseAttributesReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1897791CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCommonResponseAttributesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOCommonResponseAttributesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189779230(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCommonResponseAttributesIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOConditionReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_55;
          }
          int v26 = objc_alloc_init(GEOCondition);
          if (!GEOConditionReadAllFrom(v26, v3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addCondition:", v26, 0, 0);
        }
        else
        {
          if (v18 == 2)
          {
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (1)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
                break;
              }
              char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
              *(void *)&v3[v29] = v31;
              v21 |= (unint64_t)(v32 & 0x7F) << v27;
              if ((v32 & 0x80) == 0) {
                goto LABEL_48;
              }
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_50;
              }
            }
            v3[*v6] = 1;
LABEL_48:
            if (v3[*v6]) {
              LODWORD(v21) = 0;
            }
LABEL_50:
            uint64_t v35 = 24;
            goto LABEL_51;
          }
          if (v18 == 1)
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            while (1)
            {
              uint64_t v22 = *v4;
              uint64_t v23 = *(void *)&v3[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
              *(void *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_44;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_46;
              }
            }
            v3[*v6] = 1;
LABEL_44:
            if (v3[*v6]) {
              LODWORD(v21) = 0;
            }
LABEL_46:
            uint64_t v35 = 28;
LABEL_51:
            *(_DWORD *)(a1 + v35) = v21;
            continue;
          }
          if (!*(void *)(a1 + 8))
          {
            id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v34 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v33;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_55;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_55:
    BOOL v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_18977A668(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOConditionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOConditionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18977A6CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOConditionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOConditionIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
        }
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_46;
        }
      }
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

void sub_18977B37C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOConditionalFormattedStringReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v7)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_66;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_66:
      int v51 = 1;
      goto LABEL_67;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      uint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_57;
      }
      if ((*(unsigned char *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_85;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom()) {
          goto LABEL_84;
        }
        PBReaderRecallMark();
        uint64_t v40 = 32;
LABEL_50:
        int v41 = *(void **)(a1 + v40);
        *(void *)(a1 + v40) = v39;

        --v8;
LABEL_64:
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_85;
      }
      char v46 = 32 * *(unsigned char *)(a1 + 52);
LABEL_63:
      v8 += v46 >> 7;
      goto LABEL_64;
    }
    if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_57:
      char v45 = PBReaderSkipValueWithTag();
      unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v45 & 1) == 0)
      {
        int v51 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v44 = PBUnknownFieldAdd();
    unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v44)
    {
      int v51 = 0;
      BOOL v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v54 & 1 | (v8 != 0))) {
      goto LABEL_66;
    }
  }
  if (!v34) {
    goto LABEL_57;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_85;
    }
    char v46 = *(unsigned char *)(a1 + 52) << 6;
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_85;
  }
  uint64_t v39 = objc_alloc_init(GEOCondition);
  if (GEOConditionReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v40 = 24;
    goto LABEL_50;
  }
LABEL_84:

LABEL_85:
  int v51 = 0;
  unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_67:
  BOOL v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
  if ((v53 & 1) == 0) {
    goto LABEL_69;
  }
LABEL_68:
  *(unsigned char *)(a1 + v52[298]) |= 1u;
LABEL_69:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[298]) |= 4u;
    *(unsigned char *)(a1 + v52[298]) |= 2u;
    goto LABEL_78;
  }
  if (v19)
  {
    while (1)
    {
      int v48 = *v19++;
      int v47 = v48;
      if (v48 == 1) {
        break;
      }
      if (v47 == 2)
      {
LABEL_74:
        *(unsigned char *)(a1 + v52[298]) |= v47;
      }
      else if (!v47)
      {
        goto LABEL_78;
      }
    }
    LOBYTE(v47) = 4;
    goto LABEL_74;
  }
LABEL_78:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    uint64_t v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18977BA4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18977C0AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOConditionalFormattedStringReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOConditionalFormattedStringReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOConditionalFormattedStringReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOConditionalFormattedStringReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOConditionalFormattedStringReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18977C268(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOConditionalFormattedStringReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOConditionalFormattedStringReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18977C2CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOConditionalFormattedStringIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOConditionIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_18977C660(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOConditionalFormattedStringIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    if (GEOFormattedStringIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOConditionalFormattedStringIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOConditionalFormattedStringIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18977C978(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18977CBF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18977CF20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCountdownDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 108)), (uint16x4_t)0xFFFCFFFFFFFEFFFDLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 108) & 1)+ ((*(unsigned char *)(a1 + 108) & 0x20) != 0));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v14 & ~(_BYTE)v10 | v9;
        char v16 = v14 | v10;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        if (((v14 | v10) | v8)) {
          unsigned __int8 v18 = 0;
        }
        else {
          unsigned __int8 v18 = a3;
        }
        int v19 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_117;
        }
        char v80 = v15;
        char v81 = v16 | v15;
        char v83 = (v18 == 0) | v16;
        uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v21 = (int *)MEMORY[0x1E4F940B8];
        char v82 = v14 | v10;
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v9;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v20)) {
      goto LABEL_115;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v17;
      uint64_t v26 = *(void *)(v3 + v25);
      unint64_t v27 = v26 + 1;
      if (v26 == -1 || v27 > *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v21) + v26);
      *(void *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0) {
        goto LABEL_24;
      }
      v22 += 7;
      BOOL v29 = v23++ >= 9;
      if (v29)
      {
        unint64_t v24 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_24:
    int v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v24 = 0;
    }
LABEL_26:
    int v31 = v24 & 7;
    if (v30 || v31 == 4)
    {
LABEL_115:
      int v19 = 1;
      goto LABEL_116;
    }
    unint64_t v33 = v24 >> 3;
    BOOL v34 = v16;
    if ((v83 & 1) == 0)
    {
      uint64_t v35 = v18;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34 || (*(unsigned char *)(a1 + 108) & 4) != 0) {
          goto LABEL_86;
        }
        if (v31 != 2)
        {
          char v62 = 0;
          unsigned int v63 = 0;
          uint64_t v64 = 0;
          while (1)
          {
            uint64_t v65 = *v17;
            uint64_t v66 = *(void *)(v3 + v65);
            unint64_t v67 = v66 + 1;
            if (v66 == -1 || v67 > *(void *)(v3 + *v6)) {
              break;
            }
            char v68 = *(unsigned char *)(*(void *)(v3 + *v21) + v66);
            *(void *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              BOOL v29 = v63++ >= 9;
              if (!v29) {
                continue;
              }
            }
            goto LABEL_109;
          }
          *(unsigned char *)(v3 + *v20) = 1;
LABEL_109:
          PBRepeatedUInt32Add();
          goto LABEL_112;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_134;
        }
        while (*(void *)(v3 + *v17) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v20))
        {
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          while (1)
          {
            uint64_t v42 = *v17;
            uint64_t v43 = *(void *)(v3 + v42);
            unint64_t v44 = v43 + 1;
            if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
              break;
            }
            char v45 = *(unsigned char *)(*(void *)(v3 + *v21) + v43);
            *(void *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v29 = v40++ >= 9;
              if (!v29) {
                continue;
              }
            }
            goto LABEL_52;
          }
          *(unsigned char *)(v3 + *v20) = 1;
LABEL_52:
          PBRepeatedUInt32Add();
        }
        goto LABEL_93;
      case 2:
        if (!v34 || (*(unsigned char *)(a1 + 108) & 8) != 0) {
          goto LABEL_86;
        }
        char v46 = PBReaderReadString();
        if (v46) {
          -[GEOCountdownData _addNoFlagsAlternateFormatString:](a1, v46);
        }

        goto LABEL_112;
      case 4:
        if (!v34 || (*(unsigned char *)(a1 + 108) & 2) != 0) {
          goto LABEL_86;
        }
        if (v31 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_134;
          }
          while (*(void *)(v3 + *v17) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v20))
          {
            char v50 = 0;
            unsigned int v51 = 0;
            uint64_t v52 = 0;
            while (1)
            {
              uint64_t v53 = *v17;
              uint64_t v54 = *(void *)(v3 + v53);
              unint64_t v55 = v54 + 1;
              if (v54 == -1 || v55 > *(void *)(v3 + *v6)) {
                break;
              }
              char v56 = *(unsigned char *)(*(void *)(v3 + *v21) + v54);
              *(void *)(v3 + v53) = v55;
              v52 |= (unint64_t)(v56 & 0x7F) << v50;
              if (v56 < 0)
              {
                v50 += 7;
                BOOL v29 = v51++ >= 9;
                if (!v29) {
                  continue;
                }
              }
              goto LABEL_78;
            }
            *(unsigned char *)(v3 + *v20) = 1;
LABEL_78:
            PBRepeatedInt32Add();
          }
LABEL_93:
          PBReaderRecallMark();
        }
        else
        {
          char v69 = 0;
          unsigned int v70 = 0;
          uint64_t v71 = 0;
          while (1)
          {
            uint64_t v72 = *v17;
            uint64_t v73 = *(void *)(v3 + v72);
            unint64_t v74 = v73 + 1;
            if (v73 == -1 || v74 > *(void *)(v3 + *v6)) {
              break;
            }
            char v75 = *(unsigned char *)(*(void *)(v3 + *v21) + v73);
            *(void *)(v3 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              BOOL v29 = v70++ >= 9;
              if (!v29) {
                continue;
              }
            }
            goto LABEL_111;
          }
          *(unsigned char *)(v3 + *v20) = 1;
LABEL_111:
          PBRepeatedInt32Add();
        }
        goto LABEL_112;
      case 5:
        if (!v34) {
          goto LABEL_86;
        }
        if ((*(unsigned char *)(a1 + 108) & 0x10) == 0)
        {
          uint64_t v57 = PBReaderReadString();
          uint64_t v58 = 80;
          goto LABEL_85;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_134;
        }
        char v61 = 8 * *(unsigned char *)(a1 + 108);
        goto LABEL_92;
      case 6:
        if (!v34) {
          goto LABEL_86;
        }
        if ((*(unsigned char *)(a1 + 108) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_134:
            int v19 = 0;
            char v16 = v82;
            if ((v80 & 1) == 0) {
              goto LABEL_119;
            }
LABEL_118:
            *(unsigned char *)(a1 + 108) |= 1u;
            goto LABEL_119;
          }
          char v61 = 4 * *(unsigned char *)(a1 + 108);
LABEL_92:
          v7 += v61 >> 7;
        }
        else
        {
          uint64_t v57 = PBReaderReadString();
          uint64_t v58 = 88;
LABEL_85:
          char v59 = *(void **)(a1 + v58);
          *(void *)(a1 + v58) = v57;

          --v7;
        }
LABEL_112:
        char v16 = v82;
        goto LABEL_113;
      default:
        if ((v80 & 1) != 0 && (*(unsigned char *)(a1 + 108) & 1) == 0)
        {
          if (!*(void *)(a1 + 16))
          {
            id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v48 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v47;
          }
          int v49 = PBUnknownFieldAdd();
          char v16 = v82;
          if (!v49)
          {
            int v19 = 0;
            goto LABEL_118;
          }
LABEL_113:
          if (!(v81 & 1 | (v7 != 0)) || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_115;
          }
          continue;
        }
LABEL_86:
        char v60 = PBReaderSkipValueWithTag();
        char v16 = v82;
        if (v60) {
          goto LABEL_113;
        }
        int v19 = 0;
LABEL_116:
        char v15 = v80;
LABEL_117:
        if (v15) {
          goto LABEL_118;
        }
LABEL_119:
        if (v16 & 1 | ((v19 & 1) == 0))
        {
          *(unsigned char *)(a1 + 108) |= 4u;
          *(unsigned char *)(a1 + 108) |= 8u;
          *(unsigned char *)(a1 + 108) |= 2u;
          *(unsigned char *)(a1 + 108) |= 0x10u;
          *(unsigned char *)(a1 + 108) |= 0x20u;
        }
        else if (v18)
        {
          while (1)
          {
            int v76 = *v18++;
            char v77 = 4;
            switch(v76)
            {
              case 0:
                goto LABEL_128;
              case 1:
                goto LABEL_127;
              case 2:
                char v77 = 8;
                goto LABEL_127;
              case 4:
                char v77 = 2;
                goto LABEL_127;
              case 5:
                char v77 = 16;
                goto LABEL_127;
              case 6:
                char v77 = 32;
LABEL_127:
                *(unsigned char *)(a1 + 108) |= v77;
                break;
              default:
                continue;
            }
          }
        }
LABEL_128:
        if (v19)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v16 & 1) == 0) {
            return v3;
          }
LABEL_132:
          unsigned int v78 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v16) {
            goto LABEL_132;
          }
        }
        return v3;
    }
  }
}

void sub_18977DBF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18977DFB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18977E444(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18977E5B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18977F0AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCountdownDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOCountdownDataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOCountdownDataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOCountdownDataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOCountdownDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_18977F23C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCountdownDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOCountdownDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18977F2A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCountdownDataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_65;
            }
            while (1)
            {
LABEL_43:
              if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
                goto LABEL_62;
              }
              unsigned int v27 = a1[*v4];
              if (a1[*v4]) {
                goto LABEL_62;
              }
              while (1)
              {
                uint64_t v28 = *v2;
                uint64_t v29 = *(void *)&a1[v28];
                unint64_t v30 = v29 + 1;
                if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
                  break;
                }
                int v31 = *(char *)(*(void *)&a1[*v5] + v29);
                *(void *)&a1[v28] = v30;
                if (v31 < 0)
                {
                  BOOL v13 = v27++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_43;
              }
              a1[*v4] = 1;
            }
          }
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              unsigned int v21 = v15++;
              if (v21 <= 8) {
                continue;
              }
            }
            goto LABEL_39;
          }
        case 2u:
          if (v15 == 2) {
            goto LABEL_38;
          }
          goto LABEL_65;
        case 4u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_65:
              PBReaderRecallMark();
              return 0;
            }
LABEL_53:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v32 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v33 = *v2;
                uint64_t v34 = *(void *)&a1[v33];
                unint64_t v35 = v34 + 1;
                if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
                  break;
                }
                int v36 = *(char *)(*(void *)&a1[*v5] + v34);
                *(void *)&a1[v33] = v35;
                if (v36 < 0)
                {
                  BOOL v13 = v32++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_53;
              }
              a1[*v4] = 1;
            }
LABEL_62:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_65;
            }
            while (1)
            {
              uint64_t v22 = *v2;
              uint64_t v23 = *(void *)&a1[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
                break;
              }
              int v25 = *(char *)(*(void *)&a1[*v5] + v23);
              *(void *)&a1[v22] = v24;
              if (v25 < 0)
              {
                unsigned int v26 = v15++;
                if (v26 <= 8) {
                  continue;
                }
              }
              goto LABEL_39;
            }
LABEL_41:
            a1[*v4] = 1;
          }
LABEL_39:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_63;
          }
          break;
        case 5u:
          if (v15 == 2) {
            goto LABEL_38;
          }
          goto LABEL_65;
        case 6u:
          if (v15 == 2) {
            goto LABEL_38;
          }
          goto LABEL_65;
        default:
LABEL_38:
          if (PBReaderSkipValueWithTag()) {
            goto LABEL_39;
          }
          goto LABEL_65;
      }
    }
  }
LABEL_63:
  BOOL v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

void sub_18977F964(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCountdownDataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  BOOL v2 = (*(unsigned char *)(a1 + 108) & 0x7E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return v2;
}

void sub_18977FE40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189780258(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897804A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCyclingOptionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v10 | v9;
        unsigned __int8 v16 = v14 | v10;
        char v51 = v15;
        char v52 = v16 | v15;
        if ((v16 | v7)) {
          uint64_t v17 = 0;
        }
        else {
          uint64_t v17 = a3;
        }
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        char v53 = (v17 == 0) | v16;
        BOOL v54 = v16;
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v9;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_65;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_65:
      int v50 = 1;
      goto LABEL_66;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v54;
    if ((v53 & 1) == 0)
    {
      uint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (!v32) {
        goto LABEL_56;
      }
      if ((*(unsigned char *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_85;
        }
        BOOL v37 = objc_alloc_init(GEOCyclingUserPreferences);
        if (!GEOCyclingUserPreferencesReadAllFrom((uint64_t)v37, (void *)v3)) {
          goto LABEL_84;
        }
        PBReaderRecallMark();
        uint64_t v38 = 24;
LABEL_49:
        char v39 = *(void **)(a1 + v38);
        *(void *)(a1 + v38) = v37;

        --v8;
LABEL_63:
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_64;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_85;
      }
      char v44 = *(unsigned char *)(a1 + 52) << 6;
LABEL_62:
      v8 += v44 >> 7;
      goto LABEL_63;
    }
    if (v51 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_56:
      char v43 = PBReaderSkipValueWithTag();
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if ((v43 & 1) == 0)
      {
        int v50 = 0;
        goto LABEL_66;
      }
      goto LABEL_64;
    }
    if (!*(void *)(a1 + 16))
    {
      id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v41 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v40;
    }
    int v42 = PBUnknownFieldAdd();
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if (!v42)
    {
      int v50 = 0;
      goto LABEL_67;
    }
LABEL_64:
    if (!(v52 & 1 | (v8 != 0))) {
      goto LABEL_65;
    }
  }
  if (!v32) {
    goto LABEL_56;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_85;
    }
    char v44 = 32 * *(unsigned char *)(a1 + 52);
    goto LABEL_62;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_85;
  }
  BOOL v37 = objc_alloc_init(GEOCyclingVehicleSpecifications);
  if (GEOCyclingVehicleSpecificationsReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v38 = 32;
    goto LABEL_49;
  }
LABEL_84:

LABEL_85:
  int v50 = 0;
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
  if ((v51 & 1) == 0) {
    goto LABEL_68;
  }
LABEL_67:
  *(unsigned char *)(a1 + 52) |= 1u;
LABEL_68:
  if (v54 || (v50 & 1) == 0)
  {
    *(unsigned char *)(a1 + 52) |= 2u;
    *(unsigned char *)(a1 + 52) |= 4u;
    goto LABEL_78;
  }
  if (v17)
  {
    while (1)
    {
      int v47 = *v17++;
      int v46 = v47;
      if (v47 == 1) {
        break;
      }
      if (v46 == 2)
      {
        char v45 = 4;
LABEL_74:
        *(unsigned char *)(a1 + 52) |= v45;
      }
      else if (!v46)
      {
        goto LABEL_78;
      }
    }
    char v45 = 2;
    goto LABEL_74;
  }
LABEL_78:
  if (v50) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v54)
  {
    int v48 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189780B24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCyclingOptionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOCyclingOptionsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOCyclingOptionsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOCyclingOptionsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOCyclingOptionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189781244(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCyclingOptionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOCyclingOptionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897812A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCyclingOptionsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOCyclingUserPreferencesIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOCyclingVehicleSpecificationsIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOCyclingUserPreferencesIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOCyclingVehicleSpecificationsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOCyclingOptionsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189781BE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189781E64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCyclingUserPreferencesReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_59;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_59;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              int v27 = &OBJC_IVAR___GEOCyclingUserPreferences__avoidBusyRoads;
              goto LABEL_51;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              uint64_t v21 = 0;
              int v27 = &OBJC_IVAR___GEOCyclingUserPreferences__avoidBusyRoads;
              goto LABEL_53;
            }
          }
          int v27 = &OBJC_IVAR___GEOCyclingUserPreferences__avoidBusyRoads;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if (v18 == 2) {
          break;
        }
        if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 4u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              int v27 = &OBJC_IVAR___GEOCyclingUserPreferences__avoidStairs;
              goto LABEL_50;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              uint64_t v21 = 0;
              int v27 = &OBJC_IVAR___GEOCyclingUserPreferences__avoidStairs;
              goto LABEL_53;
            }
          }
          int v27 = &OBJC_IVAR___GEOCyclingUserPreferences__avoidStairs;
          goto LABEL_51;
        }
        if (!*(void *)(a1 + 8))
        {
          id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          uint64_t v41 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v40;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_60;
        }
LABEL_54:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_59;
        }
      }
      char v34 = 0;
      unsigned int v35 = 0;
      uint64_t v21 = 0;
      *(unsigned char *)(a1 + 20) |= 2u;
      while (1)
      {
        uint64_t v36 = *v4;
        uint64_t v37 = *(void *)&v3[v36];
        unint64_t v38 = v37 + 1;
        if (v37 == -1 || v38 > *(void *)&v3[*v5])
        {
          int v27 = &OBJC_IVAR___GEOCyclingUserPreferences__avoidHills;
          goto LABEL_50;
        }
        char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
        *(void *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0) {
          break;
        }
        v34 += 7;
        BOOL v26 = v35++ > 8;
        if (v26)
        {
          uint64_t v21 = 0;
          int v27 = &OBJC_IVAR___GEOCyclingUserPreferences__avoidHills;
          goto LABEL_53;
        }
      }
      int v27 = &OBJC_IVAR___GEOCyclingUserPreferences__avoidHills;
LABEL_51:
      if (v3[*v6]) {
        uint64_t v21 = 0;
      }
LABEL_53:
      *(unsigned char *)(a1 + *v27) = v21 != 0;
      goto LABEL_54;
    }
LABEL_59:
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_18978297C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCyclingUserPreferencesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOCyclingUserPreferencesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897829E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCyclingVehicleSpecificationsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_34:
          *(unsigned char *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18978353C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCyclingVehicleSpecificationsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOCyclingVehicleSpecificationsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897835A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189783F34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODirectionsRequestFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v66 = v15 | v8;
        char v67 = v16 | v15 | v8;
        if ((v16 | v9)) {
          uint64_t v17 = 0;
        }
        else {
          uint64_t v17 = a3;
        }
        char v18 = (int *)MEMORY[0x1E4F940E8];
        char v68 = (v17 == 0) | v16;
        BOOL v69 = v16;
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_83;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_83:
      int v64 = 1;
      goto LABEL_84;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v69;
    if ((v68 & 1) == 0)
    {
      char v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v9 & 1) == 0) {
          goto LABEL_66;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (1)
        {
          uint64_t v40 = *v18;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v20) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_69;
          }
          v37 += 7;
          BOOL v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_71;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_69:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_71:
        uint64_t v57 = 52;
        goto LABEL_76;
      case 2:
        if ((v9 & 1) == 0) {
          goto LABEL_66;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v49 = *v18;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v20) + v50);
            *(void *)(v3 + v49) = v51;
            v39 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              BOOL v28 = v48++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_75:
        uint64_t v57 = 56;
LABEL_76:
        *(_DWORD *)(a1 + v57) = v39;
        goto LABEL_82;
      case 3:
        if (!v32) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v53 = PBReaderReadString();
          uint64_t v54 = 24;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_103;
        }
        char v58 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_81;
      case 4:
        if (!v32) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) == 0)
        {
          uint64_t v53 = PBReaderReadString();
          uint64_t v54 = 32;
LABEL_65:
          unint64_t v55 = *(void **)(a1 + v54);
          *(void *)(a1 + v54) = v53;

          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          --v10;
          goto LABEL_82;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v58 = 8 * *(unsigned char *)(a1 + 60);
LABEL_81:
          v10 += v58 >> 7;
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_82;
        }
LABEL_103:
        int v64 = 0;
        uint64_t v65 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
        if (v66) {
LABEL_86:
        }
          *(unsigned char *)(a1 + v65[612]) |= 4u;
        if (v69 || (v64 & 1) == 0)
        {
          *(unsigned char *)(a1 + v65[612]) |= 8u;
          *(unsigned char *)(a1 + v65[612]) |= 0x10u;
          goto LABEL_97;
        }
        if (v17)
        {
          while (1)
          {
            int v61 = *v17++;
            int v60 = v61;
            if (v61 == 3) {
              break;
            }
            if (v60 == 4)
            {
              char v59 = 16;
LABEL_93:
              *(unsigned char *)(a1 + v65[612]) |= v59;
            }
            else if (!v60)
            {
              goto LABEL_97;
            }
          }
          char v59 = 8;
          goto LABEL_93;
        }
LABEL_97:
        if (v64) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v69)
        {
          char v62 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v66 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_66:
          char v56 = PBReaderSkipValueWithTag();
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v56 & 1) == 0)
          {
            int v64 = 0;
LABEL_84:
            uint64_t v65 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_85;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v44 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v45 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v44;
          }
          int v46 = PBUnknownFieldAdd();
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v46)
          {
            int v64 = 0;
            uint64_t v65 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_86;
          }
        }
LABEL_82:
        if (!(v67 & 1 | (v10 != 0))) {
          goto LABEL_83;
        }
        continue;
    }
  }
}

void sub_18978473C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189785108(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODirectionsRequestFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEODirectionsRequestFeedbackReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEODirectionsRequestFeedbackReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEODirectionsRequestFeedbackReadAllFrom_initialTag;
  }
  unint64_t Specified = GEODirectionsRequestFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189785294(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODirectionsRequestFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEODirectionsRequestFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897852F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODirectionsRequestFeedbackIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_43;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_35;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_40;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_43;
          }
          unsigned int v23 = 0;
          break;
        case 3u:
          if (v15 == 2) {
            goto LABEL_39;
          }
          goto LABEL_43;
        case 4u:
          if (v15 == 2) {
            goto LABEL_39;
          }
          goto LABEL_43;
        default:
LABEL_39:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_43:
          BOOL v28 = 0;
          goto LABEL_42;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_40;
      }
LABEL_35:
      a1[*v4] = 1;
LABEL_40:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
LABEL_42:
  PBReaderRecallMark();
  return v28;
}

void sub_189785778(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODirectionsRequestFeedbackIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189785AFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189785E50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897860F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODrivingWalkingInstructionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFDFFFEFFFBFFFCLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 84) & 1)+ ((*(unsigned char *)(a1 + 84) & 2) != 0)+ ((*(unsigned char *)(a1 + 84) & 0x40) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_88;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_88:
      int v51 = 1;
      goto LABEL_89;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x20) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_109;
          }
          uint64_t v39 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = 56;
            goto LABEL_76;
          }
          goto LABEL_108;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_109;
        }
        char v46 = 4 * *(unsigned char *)(a1 + 84);
        goto LABEL_85;
      case 2:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 0x10) != 0) {
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_109;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_108;
        }
        PBReaderRecallMark();
        -[GEODrivingWalkingInstruction _addNoFlagsNormalCommand:](a1, v39);
        goto LABEL_59;
      case 3:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 4) != 0) {
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_109;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_108;
        }
        PBReaderRecallMark();
        -[GEODrivingWalkingInstruction _addNoFlagsContinueCommand:](a1, v39);
        goto LABEL_59;
      case 4:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 8) != 0) {
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_109;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_108;
        }
        PBReaderRecallMark();
        -[GEODrivingWalkingInstruction _addNoFlagsMergeCommand:](a1, v39);
LABEL_59:

        goto LABEL_86;
      case 6:
        if (!v34) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 84) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_109;
          }
          char v46 = *(unsigned char *)(a1 + 84) << 6;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_109;
        }
        uint64_t v39 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_108;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
        goto LABEL_76;
      case 7:
        if (!v34) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_109;
          }
          char v46 = 2 * *(unsigned char *)(a1 + 84);
LABEL_85:
          v7 += v46 >> 7;
LABEL_86:
          int v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_109;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v40 = 64;
LABEL_76:
          id v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
          goto LABEL_86;
        }
LABEL_108:

LABEL_109:
        int v51 = 0;
        char v52 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_90:
        if (v53) {
LABEL_91:
        }
          *(unsigned char *)(a1 + v52[614]) |= 1u;
        if (v56 || (v51 & 1) == 0)
        {
          *(unsigned char *)(a1 + v52[614]) |= 0x20u;
          *(unsigned char *)(a1 + v52[614]) |= 0x10u;
          *(unsigned char *)(a1 + v52[614]) |= 4u;
          *(unsigned char *)(a1 + v52[614]) |= 8u;
          *(unsigned char *)(a1 + v52[614]) |= 2u;
          *(unsigned char *)(a1 + v52[614]) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            int v47 = *v19++;
            char v48 = 32;
            switch(v47)
            {
              case 0:
                goto LABEL_102;
              case 1:
                goto LABEL_101;
              case 2:
                char v48 = 16;
                goto LABEL_101;
              case 3:
                char v48 = 4;
                goto LABEL_101;
              case 4:
                char v48 = 8;
                goto LABEL_101;
              case 6:
                char v48 = 2;
                goto LABEL_101;
              case 7:
                char v48 = 64;
LABEL_101:
                *(unsigned char *)(a1 + v52[614]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_102:
        if (v51) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v56)
        {
          uint64_t v49 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 84))
        {
LABEL_77:
          char v45 = PBReaderSkipValueWithTag();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v45 & 1) == 0)
          {
            int v51 = 0;
LABEL_89:
            char v52 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_90;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v51 = 0;
            char v52 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_91;
          }
        }
LABEL_87:
        if (!(v54 & 1 | (v7 != 0))) {
          goto LABEL_88;
        }
        continue;
    }
  }
}

void sub_189786ACC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189786CF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189786F24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189787918(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189787A10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEODrivingWalkingInstructionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  [a1[7] readAll:1];
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v2 = a1[6];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v26 objects:v32 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v27;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v27 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v26 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v26 objects:v32 count:16];
    }
    while (v4);
  }

  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v7 = a1[4];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v22 objects:v31 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v23;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v23 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v22 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v22 objects:v31 count:16];
    }
    while (v9);
  }

  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v12 = a1[5];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v18 objects:v30 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v19;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v19 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v18 + 1) + 8 * v16++), "readAll:", 1, (void)v18);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v18 objects:v30 count:16];
    }
    while (v14);
  }

  [a1[3] readAll:1];
  return [a1[8] readAll:1];
}

unint64_t GEODrivingWalkingInstructionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEODrivingWalkingInstructionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEODrivingWalkingInstructionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEODrivingWalkingInstructionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEODrivingWalkingInstructionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEODrivingWalkingInstructionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189788418(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODrivingWalkingInstructionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_31:
    BOOL v17 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v17;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_31;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      if (v7++ >= 9)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4) {
      goto LABEL_31;
    }
    switch((v8 >> 3))
    {
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 7u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
          goto LABEL_30;
        }
        goto LABEL_22;
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
          goto LABEL_30;
        }
LABEL_22:
        PBReaderRecallMark();
        goto LABEL_23;
      default:
        if (PBReaderSkipValueWithTag())
        {
LABEL_23:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_31;
          }
          continue;
        }
LABEL_30:
        PBReaderRecallMark();
        return 0;
    }
  }
}

void sub_1897889EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEODrivingWalkingInstructionIsDirty(uint64_t a1)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  int v2 = *(char *)(a1 + 84);
  if (v2 < 0) {
    return 1;
  }
  if ((v2 & 0x20) == 0)
  {
LABEL_5:
    if ((v2 & 0x1C) != 0) {
      return 1;
    }
    if ((v2 & 2) != 0)
    {
      if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
        return 1;
      }
      LOBYTE(v2) = *(unsigned char *)(a1 + 84);
    }
    if ((v2 & 0x40) != 0)
    {
      if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 64))) {
        return 1;
      }
      LOBYTE(v2) = *(unsigned char *)(a1 + 84);
    }
    if ((v2 & 0x10) != 0)
    {
      long long v26 = 0u;
      long long v27 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      id v5 = *(id *)(a1 + 48);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v25;
LABEL_17:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v25 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v24 + 1) + 8 * v9))) {
            goto LABEL_45;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
            if (v7) {
              goto LABEL_17;
            }
            break;
          }
        }
      }

      LOBYTE(v2) = *(unsigned char *)(a1 + 84);
    }
    if ((v2 & 4) != 0)
    {
      long long v22 = 0u;
      long long v23 = 0u;
      long long v20 = 0u;
      long long v21 = 0u;
      id v5 = *(id *)(a1 + 32);
      uint64_t v10 = [v5 countByEnumeratingWithState:&v20 objects:v29 count:16];
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = *(void *)v21;
LABEL_27:
        uint64_t v13 = 0;
        while (1)
        {
          if (*(void *)v21 != v12) {
            objc_enumerationMutation(v5);
          }
          if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v20 + 1) + 8 * v13))) {
            goto LABEL_45;
          }
          if (v11 == ++v13)
          {
            uint64_t v11 = [v5 countByEnumeratingWithState:&v20 objects:v29 count:16];
            if (v11) {
              goto LABEL_27;
            }
            break;
          }
        }
      }

      LOBYTE(v2) = *(unsigned char *)(a1 + 84);
    }
    if ((v2 & 8) == 0) {
      return 0;
    }
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v5 = *(id *)(a1 + 40);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v28 count:16];
    if (!v3)
    {
LABEL_46:

      return v3;
    }
    uint64_t v14 = *(void *)v17;
LABEL_38:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(void *)v17 != v14) {
        objc_enumerationMutation(v5);
      }
      if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1) + 8 * v15))) {
        break;
      }
      if (v3 == ++v15)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v28 count:16];
        if (v3) {
          goto LABEL_38;
        }
        goto LABEL_46;
      }
    }
LABEL_45:
    uint64_t v3 = 1;
    goto LABEL_46;
  }
  if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) == 0)
  {
    LOBYTE(v2) = *(unsigned char *)(a1 + 84);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEODrivingWalkingInstructionIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEODrivingWalkingInstructionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189789128(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189789B14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODrivingWalkingSpokenInstructionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFCFFFAFFFELL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 80) & 8) != 0)+ ((*(unsigned char *)(a1 + 80) & 2) != 0));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 3;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v61 = v18;
        char v62 = v19 | v18;
        if ((v19 | v9)) {
          long long v20 = 0;
        }
        else {
          long long v20 = a3;
        }
        char v63 = (v20 == 0) | v19;
        BOOL v64 = v19;
        long long v21 = (int *)MEMORY[0x1E4F940E8];
        long long v22 = (int *)MEMORY[0x1E4F940C8];
        long long v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_96;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_96:
      int v59 = 1;
      goto LABEL_97;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v64;
    if ((v63 & 1) == 0)
    {
      int v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x40) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_116;
          }
          uint64_t v40 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
          {
            PBReaderRecallMark();
            uint64_t v41 = 56;
            goto LABEL_65;
          }
          goto LABEL_115;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_116;
        }
        char v54 = 2 * *(unsigned char *)(a1 + 80);
        goto LABEL_93;
      case 2:
        if (!v35) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_116;
          }
          char v54 = 32 * *(unsigned char *)(a1 + 80);
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_116;
        }
        uint64_t v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_115;
        }
        PBReaderRecallMark();
        uint64_t v41 = 24;
        goto LABEL_65;
      case 3:
        if (!v35) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_116;
          }
          char v54 = 8 * *(unsigned char *)(a1 + 80);
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_116;
        }
        uint64_t v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_115;
        }
        PBReaderRecallMark();
        uint64_t v41 = 40;
        goto LABEL_65;
      case 4:
        if (!v35) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_116;
          }
          char v54 = 4 * *(unsigned char *)(a1 + 80);
LABEL_93:
          v8 += v54 >> 7;
LABEL_94:
          long long v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_95:
          if (!(v62 & 1 | (v8 != 0))) {
            goto LABEL_96;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_116;
        }
        uint64_t v40 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v41 = 48;
LABEL_65:
          char v45 = *(void **)(a1 + v41);
          *(void *)(a1 + v41) = v40;

          --v8;
          goto LABEL_94;
        }
LABEL_115:

LABEL_116:
        int v59 = 0;
        long long v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_97:
        int v60 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        if (v61) {
LABEL_98:
        }
          *(unsigned char *)(a1 + v60[344]) |= 2u;
        if (v64 || (v59 & 1) == 0)
        {
          *(unsigned char *)(a1 + v60[344]) |= 0x40u;
          *(unsigned char *)(a1 + v60[344]) |= 4u;
          *(unsigned char *)(a1 + v60[344]) |= 0x10u;
          *(unsigned char *)(a1 + v60[344]) |= 0x20u;
          *(unsigned char *)(a1 + v60[344]) |= 8u;
        }
        else if (v20)
        {
          while (1)
          {
            int v56 = *v20++;
            char v55 = 64;
            switch(v56)
            {
              case 0:
                goto LABEL_109;
              case 1:
                goto LABEL_107;
              case 2:
                char v55 = 4;
                goto LABEL_107;
              case 3:
                char v55 = 16;
                goto LABEL_107;
              case 4:
                char v55 = 32;
                goto LABEL_107;
              case 5:
                char v55 = 8;
LABEL_107:
                *(unsigned char *)(a1 + v60[344]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_109:
        if (v59) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v64)
        {
          uint64_t v57 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
        if (!v35 || (*(unsigned char *)(a1 + 80) & 8) != 0) {
          goto LABEL_79;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_116;
        }
        uint64_t v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_115;
        }
        PBReaderRecallMark();
        -[GEODrivingWalkingSpokenInstruction _addNoFlagsExecutionStage:](a1, v40);

        goto LABEL_94;
      case 6:
        if ((v9 & 1) == 0) {
          goto LABEL_79;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(unsigned char *)(a1 + 80) |= 1u;
        while (2)
        {
          uint64_t v49 = *v21;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v23) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v31 = v47++ >= 9;
              if (v31)
              {
                LODWORD(v48) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v48) = 0;
        }
LABEL_84:
        *(_DWORD *)(a1 + 76) = v48;
        goto LABEL_95;
      default:
        if ((v61 & 1) == 0 || (*(unsigned char *)(a1 + 80) & 2) != 0)
        {
LABEL_79:
          char v53 = PBReaderSkipValueWithTag();
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          long long v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v59 = 0;
            goto LABEL_97;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v43 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v42;
          }
          int v44 = PBUnknownFieldAdd();
          long long v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v44)
          {
            int v59 = 0;
            int v60 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_98;
          }
        }
        goto LABEL_95;
    }
  }
}

void sub_18978A520(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18978A690(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18978A800(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18978A970(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18978B7A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEODrivingWalkingSpokenInstructionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [a1[7] readAll:1];
  [a1[3] readAll:1];
  [a1[5] readAll:1];
  [a1[6] readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = a1[4];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEODrivingWalkingSpokenInstructionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEODrivingWalkingSpokenInstructionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEODrivingWalkingSpokenInstructionReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEODrivingWalkingSpokenInstructionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEODrivingWalkingSpokenInstructionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEODrivingWalkingSpokenInstructionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18978BA80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODrivingWalkingSpokenInstructionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEODrivingWalkingSpokenInstructionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18978BAE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODrivingWalkingSpokenInstructionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_37;
          }
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_37;
          }
          unsigned int v17 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_37:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_23;
      }
      a1[*v4] = 1;
LABEL_23:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_18978BFFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEODrivingWalkingSpokenInstructionIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  if (*(char *)(a1 + 80) < 0) {
    return 1;
  }
  unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
  if ((v2 & 0x40) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
  }
  if ((v2 & 4) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
  }
  if ((v2 & 0x10) == 0) {
    goto LABEL_11;
  }
  if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
    return 1;
  }
  unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
LABEL_11:
  if ((v2 & 0x20) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
  }
  return (v2 >> 3) & 1;
}

os_unfair_lock_s *GEODrivingWalkingSpokenInstructionIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEODrivingWalkingSpokenInstructionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18978C5A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18978CA7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOETARouteIncidentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v25 = *v6;
            uint64_t v26 = *(void *)&v5[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&v5[*v7]) {
              break;
            }
            char v28 = *(unsigned char *)(*(void *)&v5[*v9] + v26);
            *(void *)&v5[v25] = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if ((v28 & 0x80) == 0) {
              goto LABEL_36;
            }
            v22 += 7;
            BOOL v17 = v23++ >= 9;
            if (v17)
            {
              LODWORD(v24) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            LODWORD(v24) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v24;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          unint64_t v20 = objc_alloc_init(GEORouteIncident);
          if (!GEORouteIncidentReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          int v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v29 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v30 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v29;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_18978D524(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOETARouteIncidentReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOETARouteIncidentReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18978D588(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOETARouteIncidentIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteIncidentIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORouteIncidentIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1)) {
            goto LABEL_111;
          }
          goto LABEL_115;
        case 2u:
          if (v16 == 2) {
            goto LABEL_96;
          }
          goto LABEL_115;
        case 3u:
          if (v16 == 2) {
            goto LABEL_96;
          }
          goto LABEL_115;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_115;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_106;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_112;
          }
        case 5u:
          if (v16 == 2) {
            goto LABEL_96;
          }
          goto LABEL_115;
        case 6u:
          if (v16 == 2) {
            goto LABEL_96;
          }
          goto LABEL_115;
        case 7u:
        case 8u:
        case 9u:
          if (v16 != 1) {
            goto LABEL_115;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_107;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_107;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_115;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_106;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_112;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_115;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_106;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_112;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_115;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_106;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v26 = v37++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_112;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_115;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_106;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v26 = v42++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_112;
          }
        case 0xEu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORestrictionInfoIsValid(a1)) {
            goto LABEL_115;
          }
          goto LABEL_111;
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_115;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            uint64_t v49 = *(void *)&a1[v48];
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
              goto LABEL_106;
            }
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v26 = v47++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_112;
          }
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_115;
          }
          unsigned int v52 = 0;
          while (1)
          {
            uint64_t v53 = *v2;
            uint64_t v54 = *(void *)&a1[v53];
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
              goto LABEL_106;
            }
            int v56 = *(char *)(*(void *)&a1[*v5] + v54);
            *(void *)&a1[v53] = v55;
            if (v56 < 0)
            {
              BOOL v26 = v52++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_112;
          }
        case 0x11u:
          if (v16 == 2) {
            goto LABEL_96;
          }
          goto LABEL_115;
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_115;
          }
          unsigned int v57 = 0;
          break;
        case 0x13u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_115;
          }
LABEL_111:
          PBReaderRecallMark();
          continue;
        default:
LABEL_96:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_115:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v58 = *v2;
        uint64_t v59 = *(void *)&a1[v58];
        unint64_t v60 = v59 + 1;
        if (v59 == -1 || v60 > *(void *)&a1[*v3]) {
          break;
        }
        int v61 = *(char *)(*(void *)&a1[*v5] + v59);
        *(void *)&a1[v58] = v60;
        if (v61 < 0)
        {
          BOOL v26 = v57++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_112;
      }
LABEL_106:
      uint64_t v14 = *v4;
LABEL_107:
      a1[v14] = 1;
LABEL_112:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v62 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v62;
}

BOOL GEOEVChargeInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 36) |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_49;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_51;
              }
            }
            v3[*v6] = 1;
LABEL_49:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_51:
            uint64_t v42 = 24;
            goto LABEL_60;
          case 2u:
            *(unsigned char *)(a1 + 36) |= 1u;
            uint64_t v27 = *v4;
            unint64_t v28 = *(void *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v29 = *(void *)(*(void *)&v3[*v7] + v28);
              *(void *)&v3[v27] = v28 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v29 = 0;
            }
            *(void *)(a1 + 16) = v29;
            continue;
          case 3u:
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 36) |= 8u;
            while (2)
            {
              uint64_t v32 = *v4;
              uint64_t v33 = *(void *)&v3[v32];
              unint64_t v34 = v33 + 1;
              if (v33 == -1 || v34 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v35 = *(unsigned char *)(*(void *)&v3[*v7] + v33);
                *(void *)&v3[v32] = v34;
                v20 |= (unint64_t)(v35 & 0x7F) << v30;
                if (v35 < 0)
                {
                  v30 += 7;
                  BOOL v15 = v31++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_55:
            uint64_t v42 = 32;
            goto LABEL_60;
          case 4u:
            char v36 = 0;
            unsigned int v37 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 36) |= 4u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              BOOL v26 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v25;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_65;
            }
            continue;
        }
        while (1)
        {
          uint64_t v38 = *v4;
          uint64_t v39 = *(void *)&v3[v38];
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)&v3[*v5]) {
            break;
          }
          char v41 = *(unsigned char *)(*(void *)&v3[*v7] + v39);
          *(void *)&v3[v38] = v40;
          v20 |= (unint64_t)(v41 & 0x7F) << v36;
          if ((v41 & 0x80) == 0) {
            goto LABEL_57;
          }
          v36 += 7;
          BOOL v15 = v37++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_59;
          }
        }
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_59:
        uint64_t v42 = 28;
LABEL_60:
        *(_DWORD *)(a1 + v42) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v43 = v3[*v6] == 0;
  }
  else
  {
LABEL_65:
    BOOL v43 = 0;
  }
  objc_sync_exit(v3);

  return v43;
}

void sub_18978EE4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVChargeInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOEVChargeInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18978EEC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVChargeInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_51;
          }
        case 2u:
          if (v16 != 1) {
            goto LABEL_54;
          }
          uint64_t v24 = *v2;
          unint64_t v25 = *(void *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_50;
          }
          unint64_t v26 = v25 + 8;
          if (v26 > *(void *)&a1[*v3]) {
            goto LABEL_50;
          }
          *(void *)&a1[v24] = v26;
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v23 = v27++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_51;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_54:
          BOOL v37 = 0;
          goto LABEL_53;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v23 = v32++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_51;
      }
LABEL_49:
      uint64_t v14 = *v4;
LABEL_50:
      a1[v14] = 1;
LABEL_51:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
LABEL_53:
  PBReaderRecallMark();
  return v37;
}

BOOL GEOEVChargingInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      while (!v5[*v8])
      {
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        switch((v12 >> 3))
        {
          case 1u:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 36) |= 4u;
            while (1)
            {
              uint64_t v23 = *v6;
              uint64_t v24 = *(void *)&v5[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
              *(void *)&v5[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_49;
              }
              v20 += 7;
              BOOL v17 = v21++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_51;
              }
            }
            v5[*v8] = 1;
LABEL_49:
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_51:
            uint64_t v43 = 32;
            goto LABEL_60;
          case 2u:
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 36) |= 2u;
            while (2)
            {
              uint64_t v31 = *v6;
              uint64_t v32 = *(void *)&v5[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v34 = *(unsigned char *)(*(void *)&v5[*v9] + v32);
                *(void *)&v5[v31] = v33;
                v22 |= (unint64_t)(v34 & 0x7F) << v29;
                if (v34 < 0)
                {
                  v29 += 7;
                  BOOL v17 = v30++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_55:
            uint64_t v43 = 28;
            goto LABEL_60;
          case 3u:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 36) |= 1u;
            while (2)
            {
              uint64_t v37 = *v6;
              uint64_t v38 = *(void *)&v5[v37];
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)&v5[*v9] + v38);
                *(void *)&v5[v37] = v39;
                v22 |= (unint64_t)(v40 & 0x7F) << v35;
                if (v40 < 0)
                {
                  v35 += 7;
                  BOOL v17 = v36++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_59;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_59:
            uint64_t v43 = 24;
LABEL_60:
            *(_DWORD *)(a1 + v43) = v22;
            goto LABEL_61;
          case 4u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_64;
            }
            char v41 = objc_alloc_init(GEOChargerPlugsInfo);
            if (!GEOChargerPlugsInfoReadAllFrom((uint64_t)v41, v5, a3))
            {

              goto LABEL_64;
            }
            PBReaderRecallMark();
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;

LABEL_61:
            if (*(void *)&v5[*v6] >= *(void *)&v5[*v7]) {
              goto LABEL_62;
            }
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              uint64_t v28 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v27;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_64;
            }
            goto LABEL_61;
        }
      }
    }
LABEL_62:
    BOOL v44 = v5[*v8] == 0;
  }
  else
  {
LABEL_64:
    BOOL v44 = 0;
  }
  objc_sync_exit(v5);

  return v44;
}

void sub_18979046C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVChargingInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOEVChargingInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897904E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVChargingInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v28 = 0;
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOChargerPlugsInfoIsValid(a1)) {
            goto LABEL_53;
          }
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOEVChargingPreferenceReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_36;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            LODWORD(v22) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          uint64_t v18 = objc_alloc_init(GEOPreferenceEntity);
          if (!GEOPreferenceEntityReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          uint64_t v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v28 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v27;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_18979186C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVChargingPreferenceReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOEVChargingPreferenceReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897918D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVChargingPreferenceIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPreferenceEntityIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPreferenceEntityIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_189792468(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOEVInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 112)), (uint16x4_t)0xFFF6FFF2FFF4FFF5) & 0xFFC1FFC1FFC1FFC1))+ ((*(_WORD *)(a1 + 112) >> 13) & 1)+ ((*(_WORD *)(a1 + 112) >> 9) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 | v11;
        char v109 = v16 & ~(_BYTE)v11 | v9;
        char v110 = v8;
        char v112 = v16 | v11 | v109;
        if (((v16 | v11) | v8)) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = a3;
        }
        unint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        char v113 = (v18 == 0) | v17;
        int v20 = (int *)MEMORY[0x1E4F940C8];
        BOOL v21 = (int *)MEMORY[0x1E4F940B8];
        char v111 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v20)) {
      goto LABEL_188;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v19;
      uint64_t v26 = *(void *)(v3 + v25);
      unint64_t v27 = v26 + 1;
      if (v26 == -1 || v27 > *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v21) + v26);
      *(void *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0) {
        goto LABEL_25;
      }
      v22 += 7;
      BOOL v29 = v23++ >= 9;
      if (v29)
      {
        unint64_t v24 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_25:
    int v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v24 = 0;
    }
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_188:
      int v108 = 1;
      goto LABEL_189;
    }
    unint64_t v32 = v24 >> 3;
    BOOL v33 = v17;
    if ((v113 & 1) == 0)
    {
      char v34 = v18;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v110 & 1) == 0) {
          goto LABEL_136;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 112) |= 4u;
        while (1)
        {
          uint64_t v41 = *v19;
          uint64_t v42 = *(void *)(v3 + v41);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(v3 + *v6)) {
            break;
          }
          char v44 = *(unsigned char *)(*(void *)(v3 + *v21) + v42);
          *(void *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0) {
            goto LABEL_139;
          }
          v38 += 7;
          BOOL v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_141;
          }
        }
        *(unsigned char *)(v3 + *v20) = 1;
LABEL_139:
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v40) = 0;
        }
LABEL_141:
        uint64_t v102 = 84;
        goto LABEL_174;
      case 3:
        if ((v110 & 1) == 0) {
          goto LABEL_136;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 112) |= 0x40u;
        while (2)
        {
          uint64_t v50 = *v19;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v21) + v51);
            *(void *)(v3 + v50) = v52;
            v40 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              BOOL v29 = v49++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v40) = 0;
        }
LABEL_145:
        uint64_t v102 = 100;
        goto LABEL_174;
      case 4:
        if (!v33) {
          goto LABEL_136;
        }
        if ((*(_WORD *)(a1 + 112) & 0x1000) == 0)
        {
          uint64_t v54 = PBReaderReadString();
          uint64_t v55 = 40;
          goto LABEL_134;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_207;
        }
        __int16 v103 = 8 * *(_WORD *)(a1 + 112);
        goto LABEL_185;
      case 5:
        if (!v33) {
          goto LABEL_136;
        }
        if ((*(_WORD *)(a1 + 112) & 0x800) == 0)
        {
          uint64_t v54 = PBReaderReadString();
          uint64_t v55 = 32;
          goto LABEL_134;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_207;
        }
        __int16 v103 = 16 * *(_WORD *)(a1 + 112);
        goto LABEL_185;
      case 6:
        if ((v110 & 1) == 0) {
          goto LABEL_136;
        }
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 112) |= 2u;
        while (2)
        {
          uint64_t v58 = *v19;
          uint64_t v59 = *(void *)(v3 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(v3 + *v21) + v59);
            *(void *)(v3 + v58) = v60;
            v40 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              BOOL v29 = v57++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v40) = 0;
        }
LABEL_149:
        uint64_t v102 = 80;
        goto LABEL_174;
      case 7:
        if ((v110 & 1) == 0) {
          goto LABEL_136;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 112) |= 0x20u;
        while (2)
        {
          uint64_t v64 = *v19;
          uint64_t v65 = *(void *)(v3 + v64);
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(v3 + *v21) + v65);
            *(void *)(v3 + v64) = v66;
            v40 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              BOOL v29 = v63++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v40) = 0;
        }
LABEL_153:
        uint64_t v102 = 96;
        goto LABEL_174;
      case 8:
        if ((v110 & 1) == 0) {
          goto LABEL_136;
        }
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v70 = 0;
        *(_WORD *)(a1 + 112) |= 0x100u;
        while (2)
        {
          uint64_t v71 = *v19;
          uint64_t v72 = *(void *)(v3 + v71);
          unint64_t v73 = v72 + 1;
          if (v72 == -1 || v73 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v74 = *(unsigned char *)(*(void *)(v3 + *v21) + v72);
            *(void *)(v3 + v71) = v73;
            v70 |= (unint64_t)(v74 & 0x7F) << v68;
            if (v74 < 0)
            {
              v68 += 7;
              BOOL v29 = v69++ >= 9;
              if (v29)
              {
                uint64_t v70 = 0;
                goto LABEL_157;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          uint64_t v70 = 0;
        }
LABEL_157:
        *(unsigned char *)(a1 + 108) = v70 != 0;
        goto LABEL_187;
      case 9:
        if ((v110 & 1) == 0) {
          goto LABEL_136;
        }
        char v75 = 0;
        unsigned int v76 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 112) |= 0x80u;
        while (2)
        {
          uint64_t v77 = *v19;
          uint64_t v78 = *(void *)(v3 + v77);
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v80 = *(unsigned char *)(*(void *)(v3 + *v21) + v78);
            *(void *)(v3 + v77) = v79;
            v40 |= (unint64_t)(v80 & 0x7F) << v75;
            if (v80 < 0)
            {
              v75 += 7;
              BOOL v29 = v76++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_161;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v40) = 0;
        }
LABEL_161:
        uint64_t v102 = 104;
        goto LABEL_174;
      case 10:
        if (!v33) {
          goto LABEL_136;
        }
        if ((*(_WORD *)(a1 + 112) & 0x4000) == 0)
        {
          uint64_t v54 = PBReaderReadString();
          uint64_t v55 = 56;
          goto LABEL_134;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_207;
        }
        __int16 v103 = 2 * *(_WORD *)(a1 + 112);
        goto LABEL_185;
      case 11:
        if (!v33) {
          goto LABEL_136;
        }
        if ((*(_WORD *)(a1 + 112) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_207;
          }
          __int16 v103 = 32 * *(_WORD *)(a1 + 112);
LABEL_185:
          v7 += v103 >> 15;
          goto LABEL_186;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_207;
        }
        char v81 = objc_alloc_init(GEOChargerPlugsInfo);
        if (GEOChargerPlugsInfoReadAllFrom((uint64_t)v81, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          char v82 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v81;
LABEL_135:

          --v7;
LABEL_186:
          char v17 = v111;
          int v20 = (int *)MEMORY[0x1E4F940C8];
          BOOL v21 = (int *)MEMORY[0x1E4F940B8];
LABEL_187:
          if (!(v112 & 1 | (v7 != 0))) {
            goto LABEL_188;
          }
          continue;
        }

LABEL_207:
        int v108 = 0;
        char v17 = v111;
        int v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_189:
        if (v109) {
LABEL_190:
        }
          *(_WORD *)(a1 + 112) |= 0x200u;
        if (v17 & 1 | ((v108 & 1) == 0))
        {
          *(_WORD *)(a1 + 112) |= 0x1000u;
          *(_WORD *)(a1 + 112) |= 0x800u;
          *(_WORD *)(a1 + 112) |= 0x4000u;
          *(_WORD *)(a1 + 112) |= 0x400u;
          *(_WORD *)(a1 + 112) |= 0x2000u;
        }
        else if (v18)
        {
          while (1)
          {
            int v104 = *v18++;
            __int16 v105 = 4096;
            switch(v104)
            {
              case 4:
                goto LABEL_199;
              case 5:
                __int16 v105 = 2048;
                goto LABEL_199;
              case 10:
                __int16 v105 = 0x4000;
                goto LABEL_199;
              case 11:
                __int16 v105 = 1024;
                goto LABEL_199;
              case 15:
                __int16 v105 = 0x2000;
LABEL_199:
                *(_WORD *)(a1 + 112) |= v105;
                break;
              default:
                continue;
            }
          }
        }
        if (v108)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
          if ((v17 & 1) == 0) {
            return v3;
          }
LABEL_204:
          char v106 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v17) {
            goto LABEL_204;
          }
        }
        return v3;
      case 12:
        if ((v110 & 1) == 0) {
          goto LABEL_136;
        }
        char v83 = 0;
        unsigned int v84 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 112) |= 8u;
        while (2)
        {
          uint64_t v85 = *v19;
          uint64_t v86 = *(void *)(v3 + v85);
          unint64_t v87 = v86 + 1;
          if (v86 == -1 || v87 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v88 = *(unsigned char *)(*(void *)(v3 + *v21) + v86);
            *(void *)(v3 + v85) = v87;
            v40 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              BOOL v29 = v84++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v40) = 0;
        }
LABEL_165:
        uint64_t v102 = 88;
        goto LABEL_174;
      case 13:
        if ((v110 & 1) == 0) {
          goto LABEL_136;
        }
        char v89 = 0;
        unsigned int v90 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 112) |= 0x10u;
        while (2)
        {
          uint64_t v91 = *v19;
          uint64_t v92 = *(void *)(v3 + v91);
          unint64_t v93 = v92 + 1;
          if (v92 == -1 || v93 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v94 = *(unsigned char *)(*(void *)(v3 + *v21) + v92);
            *(void *)(v3 + v91) = v93;
            v40 |= (unint64_t)(v94 & 0x7F) << v89;
            if (v94 < 0)
            {
              v89 += 7;
              BOOL v29 = v90++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_169;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v40) = 0;
        }
LABEL_169:
        uint64_t v102 = 92;
        goto LABEL_174;
      case 14:
        if ((v110 & 1) == 0) {
          goto LABEL_136;
        }
        char v95 = 0;
        unsigned int v96 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 112) |= 1u;
        while (2)
        {
          uint64_t v97 = *v19;
          uint64_t v98 = *(void *)(v3 + v97);
          unint64_t v99 = v98 + 1;
          if (v98 == -1 || v99 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v100 = *(unsigned char *)(*(void *)(v3 + *v21) + v98);
            *(void *)(v3 + v97) = v99;
            v40 |= (unint64_t)(v100 & 0x7F) << v95;
            if (v100 < 0)
            {
              v95 += 7;
              BOOL v29 = v96++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_173;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v40) = 0;
        }
LABEL_173:
        uint64_t v102 = 76;
LABEL_174:
        *(_DWORD *)(a1 + v102) = v40;
        goto LABEL_187;
      case 15:
        if (!v33) {
          goto LABEL_136;
        }
        if ((*(_WORD *)(a1 + 112) & 0x2000) == 0)
        {
          uint64_t v54 = PBReaderReadString();
          uint64_t v55 = 48;
LABEL_134:
          char v82 = *(void **)(a1 + v55);
          *(void *)(a1 + v55) = v54;
          goto LABEL_135;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_207;
        }
        __int16 v103 = 4 * *(_WORD *)(a1 + 112);
        goto LABEL_185;
      default:
        if ((v109 & 1) == 0 || (*(_WORD *)(a1 + 112) & 0x200) != 0)
        {
LABEL_136:
          char v101 = PBReaderSkipValueWithTag();
          BOOL v21 = (int *)MEMORY[0x1E4F940B8];
          int v20 = (int *)MEMORY[0x1E4F940C8];
          char v17 = v111;
          if ((v101 & 1) == 0)
          {
            int v108 = 0;
            goto LABEL_189;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v45 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v46 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v45;
          }
          int v47 = PBUnknownFieldAdd();
          char v17 = v111;
          int v20 = (int *)MEMORY[0x1E4F940C8];
          BOOL v21 = (int *)MEMORY[0x1E4F940B8];
          if (!v47)
          {
            int v108 = 0;
            goto LABEL_190;
          }
        }
        goto LABEL_187;
    }
  }
}

void sub_1897933A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897936EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189793858(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189793B20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189794980(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOEVInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOEVInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOEVInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOEVInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOEVInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189794B28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOEVInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOEVInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189794B8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_107;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_101;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_104;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_107;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_101;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_104;
          }
        case 4u:
          if (v15 == 2) {
            goto LABEL_103;
          }
          goto LABEL_107;
        case 5u:
          if (v15 == 2) {
            goto LABEL_103;
          }
          goto LABEL_107;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_107;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_101;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_104;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_107;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_101;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_104;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_107;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_101;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_104;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_107;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_101;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_104;
          }
        case 0xAu:
          if (v15 == 2) {
            goto LABEL_103;
          }
          goto LABEL_107;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOChargerPlugsInfoIsValid(a1)) {
            goto LABEL_107;
          }
          PBReaderRecallMark();
          continue;
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_107;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_101;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_104;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_107;
          }
          unsigned int v53 = 0;
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              goto LABEL_101;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              BOOL v22 = v53++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_104;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_107;
          }
          unsigned int v58 = 0;
          break;
        case 0xFu:
          if (v15 == 2) {
            goto LABEL_103;
          }
          goto LABEL_107;
        default:
LABEL_103:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_107:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v59 = *v2;
        uint64_t v60 = *(void *)&a1[v59];
        unint64_t v61 = v60 + 1;
        if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
          break;
        }
        int v62 = *(char *)(*(void *)&a1[*v5] + v60);
        *(void *)&a1[v59] = v61;
        if (v62 < 0)
        {
          BOOL v22 = v58++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_104;
      }
LABEL_101:
      a1[*v4] = 1;
LABEL_104:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v63 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v63;
}

void sub_189795440(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOEVInfoIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 112);
  if ((v2 & 0xD800) != 0) {
    return 1;
  }
  if ((v2 & 0x400) != 0)
  {
    if (GEOChargerPlugsInfoIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 112);
  }
  return (v2 >> 13) & 1;
}

os_unfair_lock_s *GEOEVInfoIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOEVInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189795B04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897962D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVStateInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              unint64_t v26 = &OBJC_IVAR___GEOEVStateInfo__remainingBatteryPercentage;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              unint64_t v26 = &OBJC_IVAR___GEOEVStateInfo__remainingBatteryPercentage;
              goto LABEL_44;
            }
          }
          unint64_t v26 = &OBJC_IVAR___GEOEVStateInfo__remainingBatteryPercentage;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          uint64_t v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 1u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          unint64_t v26 = &OBJC_IVAR___GEOEVStateInfo__remainingBatteryCharge;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          unint64_t v26 = &OBJC_IVAR___GEOEVStateInfo__remainingBatteryCharge;
          goto LABEL_44;
        }
      }
      unint64_t v26 = &OBJC_IVAR___GEOEVStateInfo__remainingBatteryCharge;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189796CE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVStateInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOEVStateInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189796D4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVStateInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOEVStepInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 39)
        {
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 28) |= 2u;
          while (1)
          {
            uint64_t v24 = *v4;
            uint64_t v25 = *(void *)&v3[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&v3[*v5]) {
              break;
            }
            char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v25);
            *(void *)&v3[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0) {
              goto LABEL_36;
            }
            v21 += 7;
            BOOL v15 = v22++ >= 9;
            if (v15)
            {
              LODWORD(v23) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            LODWORD(v23) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v23;
        }
        else if ((v10 >> 3) == 38)
        {
          *(unsigned char *)(a1 + 28) |= 1u;
          uint64_t v18 = *v4;
          unint64_t v19 = *(void *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
            *(void *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v20 = 0;
          }
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v28 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v29 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v28;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_43;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v30 = v3[*v6] == 0;
  }
  else
  {
LABEL_43:
    BOOL v30 = 0;
  }
  objc_sync_exit(v3);

  return v30;
}

void sub_189797C58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVStepInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOEVStepInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189797CBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVStepInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_37;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        goto LABEL_37;
      }
      if ((v8 >> 3) == 39) {
        break;
      }
      if ((v8 >> 3) == 38)
      {
        if (v16 != 1) {
          goto LABEL_39;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 > 0xFFFFFFFFFFFFFFF7) {
          goto LABEL_35;
        }
        unint64_t v20 = v19 + 8;
        if (v20 > *(void *)&a1[*v3]) {
          goto LABEL_35;
        }
        *(void *)&a1[v18] = v20;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_39:
        BOOL v27 = 0;
        goto LABEL_38;
      }
LABEL_36:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_37;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_39;
    }
    unsigned int v21 = 0;
    while (1)
    {
      uint64_t v22 = *v2;
      uint64_t v23 = *(void *)&a1[v22];
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
        break;
      }
      int v25 = *(char *)(*(void *)&a1[*v5] + v23);
      *(void *)&a1[v22] = v24;
      if (v25 < 0 && v21++ <= 8) {
        continue;
      }
      goto LABEL_36;
    }
    uint64_t v14 = *v4;
LABEL_35:
    a1[v14] = 1;
    goto LABEL_36;
  }
LABEL_37:
  BOOL v27 = a1[*v4] == 0;
LABEL_38:
  PBReaderRecallMark();
  return v27;
}

void sub_189798530(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOElevationProfileReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFAFFFBFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 76) & 4) != 0));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 2;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v68 = v18;
        char v69 = v19 | v18;
        if ((v19 | v9)) {
          unint64_t v20 = 0;
        }
        else {
          unint64_t v20 = a3;
        }
        char v70 = (v20 == 0) | v19;
        BOOL v71 = v19;
        unsigned int v21 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_101;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_101:
      int v66 = 1;
      goto LABEL_102;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v71;
    if ((v70 & 1) == 0)
    {
      unint64_t v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35 || (*(unsigned char *)(a1 + 76) & 0x20) != 0) {
          goto LABEL_83;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_119;
        }
        uint64_t v40 = objc_alloc_init(GEOPoint);
        if (!GEOPointReadAllFrom((uint64_t)v40, (void *)v3)) {
          goto LABEL_118;
        }
        PBReaderRecallMark();
        -[GEOElevationProfile _addNoFlagsPoint:](a1, v40);
        goto LABEL_76;
      case 2:
        if ((v9 & 1) == 0) {
          goto LABEL_83;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (2)
        {
          uint64_t v47 = *v21;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v23) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v31 = v45++ >= 9;
              if (v31)
              {
                LODWORD(v46) = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v46) = 0;
        }
LABEL_88:
        uint64_t v60 = 68;
        goto LABEL_93;
      case 3:
        if ((v9 & 1) == 0) {
          goto LABEL_83;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v46 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (2)
        {
          uint64_t v53 = *v21;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v23) + v54);
            *(void *)(v3 + v53) = v55;
            v46 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              BOOL v31 = v52++ >= 9;
              if (v31)
              {
                LODWORD(v46) = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v46) = 0;
        }
LABEL_92:
        uint64_t v60 = 72;
LABEL_93:
        *(_DWORD *)(a1 + v60) = v46;
        goto LABEL_100;
      case 4:
        if (!v35) {
          goto LABEL_83;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_119;
          }
          char v61 = 8 * *(unsigned char *)(a1 + 76);
          goto LABEL_98;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_119;
        }
        uint64_t v40 = objc_alloc_init(GEOMinimumVisibleElevationRange);
        if (!GEOMinimumVisibleElevationRangeReadAllFrom((uint64_t)v40, (void *)v3)) {
          goto LABEL_118;
        }
        PBReaderRecallMark();
        uint64_t v57 = 32;
        goto LABEL_82;
      case 5:
        if (!v35 || (*(unsigned char *)(a1 + 76) & 0x40) != 0) {
          goto LABEL_83;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_119;
        }
        uint64_t v40 = objc_alloc_init(GEOElevationSegmentDescription);
        if (!GEOElevationSegmentDescriptionReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_118;
        }
        PBReaderRecallMark();
        -[GEOElevationProfile _addNoFlagsSegmentDescription:](a1, v40);
LABEL_76:

        goto LABEL_99;
      case 6:
        if (!v35) {
          goto LABEL_83;
        }
        if ((*(unsigned char *)(a1 + 76) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_119;
          }
          char v61 = 16 * *(unsigned char *)(a1 + 76);
LABEL_98:
          v8 += v61 >> 7;
LABEL_99:
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_100:
          if (!(v69 & 1 | (v8 != 0))) {
            goto LABEL_101;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_119;
        }
        uint64_t v40 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v57 = 24;
LABEL_82:
          unsigned int v58 = *(void **)(a1 + v57);
          *(void *)(a1 + v57) = v40;

          --v8;
          goto LABEL_99;
        }
LABEL_118:

LABEL_119:
        int v66 = 0;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_102:
        char v67 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        if (v68) {
LABEL_103:
        }
          *(unsigned char *)(a1 + v67[404]) |= 4u;
        if (v71 || (v66 & 1) == 0)
        {
          *(unsigned char *)(a1 + v67[404]) |= 0x20u;
          *(unsigned char *)(a1 + v67[404]) |= 0x10u;
          *(unsigned char *)(a1 + v67[404]) |= 0x40u;
          *(unsigned char *)(a1 + v67[404]) |= 8u;
        }
        else if (v20)
        {
          while (1)
          {
            int v62 = *v20++;
            char v63 = 32;
            switch(v62)
            {
              case 0:
                goto LABEL_112;
              case 1:
                goto LABEL_111;
              case 4:
                char v63 = 16;
                goto LABEL_111;
              case 5:
                char v63 = 64;
                goto LABEL_111;
              case 6:
                char v63 = 8;
LABEL_111:
                *(unsigned char *)(a1 + v67[404]) |= v63;
                break;
              default:
                continue;
            }
          }
        }
LABEL_112:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v71)
        {
          uint64_t v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v68 & 1) == 0 || (*(unsigned char *)(a1 + 76) & 4) != 0)
        {
LABEL_83:
          char v59 = PBReaderSkipValueWithTag();
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v59 & 1) == 0)
          {
            int v66 = 0;
            goto LABEL_102;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v43)
          {
            int v66 = 0;
            char v67 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_103;
          }
        }
        goto LABEL_100;
    }
  }
}

void sub_189799254(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897993C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189799788(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18979A428(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOElevationProfileCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v2 = a1[5];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v4);
  }

  [a1[4] readAll:1];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = a1[6];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * v11++), "readAll:", 1, (void)v13);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v9);
  }

  return [a1[3] readAll:1];
}

unint64_t GEOElevationProfileReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOElevationProfileReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOElevationProfileReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOElevationProfileReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOElevationProfileReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOElevationProfileCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18979A780(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOElevationProfileReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOElevationProfileReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18979A7E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOElevationProfileIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPointIsValid(a1)) {
            goto LABEL_53;
          }
          goto LABEL_56;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v23 = 0;
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMinimumVisibleElevationRangeIsValid(a1)) {
            goto LABEL_56;
          }
          goto LABEL_53;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOElevationSegmentDescriptionIsValid(a1)) {
            goto LABEL_56;
          }
          goto LABEL_53;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_56;
          }
LABEL_53:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_56:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_41:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPointIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOMinimumVisibleElevationRangeIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOElevationSegmentDescriptionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
        }
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_46;
        }
      }
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

void sub_18979B544(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOElevationProfileIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 76);
  if (v2 > 0xF) {
    return (os_unfair_lock_s *)1;
  }
  if ((v2 & 8) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 24);

  return GEOFormattedStringIsDirty(v4);
}

os_unfair_lock_s *GEOElevationProfileIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    unsigned int v2 = _GEOElevationProfileIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return v2;
  }
  return result;
}

void sub_18979BB74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18979C0BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOElevationSegmentDescriptionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        unint64_t v20 = v12 >> 3;
        if ((v12 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_55;
          }
          int v28 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v28, v5, a3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          BOOL v29 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v28;
        }
        else
        {
          if (v20 == 2)
          {
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (1)
            {
              uint64_t v32 = *v6;
              uint64_t v33 = *(void *)&v5[v32];
              unint64_t v34 = v33 + 1;
              if (v33 == -1 || v34 > *(void *)&v5[*v7]) {
                break;
              }
              char v35 = *(unsigned char *)(*(void *)&v5[*v9] + v33);
              *(void *)&v5[v32] = v34;
              v23 |= (unint64_t)(v35 & 0x7F) << v30;
              if ((v35 & 0x80) == 0) {
                goto LABEL_48;
              }
              v30 += 7;
              BOOL v17 = v31++ >= 9;
              if (v17)
              {
                LODWORD(v23) = 0;
                goto LABEL_50;
              }
            }
            v5[*v8] = 1;
LABEL_48:
            if (v5[*v8]) {
              LODWORD(v23) = 0;
            }
LABEL_50:
            uint64_t v38 = 24;
            goto LABEL_51;
          }
          if (v20 == 1)
          {
            char v21 = 0;
            unsigned int v22 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            while (1)
            {
              uint64_t v24 = *v6;
              uint64_t v25 = *(void *)&v5[v24];
              unint64_t v26 = v25 + 1;
              if (v25 == -1 || v26 > *(void *)&v5[*v7]) {
                break;
              }
              char v27 = *(unsigned char *)(*(void *)&v5[*v9] + v25);
              *(void *)&v5[v24] = v26;
              v23 |= (unint64_t)(v27 & 0x7F) << v21;
              if ((v27 & 0x80) == 0) {
                goto LABEL_44;
              }
              v21 += 7;
              BOOL v17 = v22++ >= 9;
              if (v17)
              {
                LODWORD(v23) = 0;
                goto LABEL_46;
              }
            }
            v5[*v8] = 1;
LABEL_44:
            if (v5[*v8]) {
              LODWORD(v23) = 0;
            }
LABEL_46:
            uint64_t v38 = 28;
LABEL_51:
            *(_DWORD *)(a1 + v38) = v23;
            continue;
          }
          if (!*(void *)(a1 + 8))
          {
            id v36 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v37 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v36;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_55;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v39 = v5[*v8] == 0;
  }
  else
  {
LABEL_55:
    BOOL v39 = 0;
  }
  objc_sync_exit(v5);

  return v39;
}

void sub_18979CD98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOElevationSegmentDescriptionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOElevationSegmentDescriptionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18979CDFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18979D6E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOEnrouteNoticeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unint64_t v12 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
  uint64_t v13 = (const __int16 *)(a1 + 88);
  uint16x4_t v14 = (uint16x4_t)vld1_dup_s16(v13);
  int16x4_t v15 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v14, (uint16x4_t)0xFFF9FFF6FFF7FFF8), (int8x8_t)0x1000100010001);
  v15.i16[0] = vaddv_s16(v15);
  unsigned int v16 = v15.i32[0];
  while (2)
  {
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    uint64_t v19 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v16;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v18 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v20 = v16 > 1;
        char v21 = v20 | v11;
        char v99 = v20 & ~(_BYTE)v11 | v9;
        char v102 = v20 | v11 | v99;
        if (((v20 | v11) | v8)) {
          unsigned int v22 = 0;
        }
        else {
          unsigned int v22 = a3;
        }
        char v103 = (v22 == 0) | v21;
        uint64_t v23 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v25 = (int *)MEMORY[0x1E4F940B8];
        char v100 = v8;
        char v101 = v20 | v11;
        break;
      default:
        ++v16;
LABEL_7:
        uint64_t v17 = v9;
LABEL_8:
        uint64_t v18 = v10;
        uint64_t v19 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v17;
        uint64_t v10 = v18;
        uint64_t v11 = v19;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v23) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v24)) {
      goto LABEL_154;
    }
    char v26 = 0;
    unsigned int v27 = 0;
    unint64_t v28 = 0;
    while (1)
    {
      uint64_t v29 = *v23;
      uint64_t v30 = *(void *)(v3 + v29);
      unint64_t v31 = v30 + 1;
      if (v30 == -1 || v31 > *(void *)(v3 + *v6)) {
        break;
      }
      char v32 = *(unsigned char *)(*(void *)(v3 + *v25) + v30);
      *(void *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0) {
        goto LABEL_25;
      }
      v26 += 7;
      BOOL v33 = v27++ >= 9;
      if (v33)
      {
        unint64_t v28 = 0;
        int v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v24) = 1;
LABEL_25:
    int v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(unsigned char *)(v3 + *v24)) {
      unint64_t v28 = 0;
    }
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_154:
      int v98 = 1;
      goto LABEL_155;
    }
    unint64_t v36 = v28 >> 3;
    BOOL v37 = v21;
    if ((v103 & 1) == 0)
    {
      uint64_t v38 = v22;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_116;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + v12[621]) |= 0x20u;
        while (1)
        {
          uint64_t v45 = *v23;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
            break;
          }
          char v48 = *(unsigned char *)(*(void *)(v3 + *v25) + v46);
          *(void *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0) {
            goto LABEL_119;
          }
          v42 += 7;
          BOOL v33 = v43++ >= 9;
          if (v33)
          {
            LODWORD(v44) = 0;
            goto LABEL_121;
          }
        }
        *(unsigned char *)(v3 + *v24) = 1;
LABEL_119:
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v44) = 0;
        }
LABEL_121:
        uint64_t v92 = 80;
        goto LABEL_146;
      case 2:
        if (!v37) {
          goto LABEL_116;
        }
        if ((*(_WORD *)(a1 + v12[621]) & 0x200) == 0)
        {
          uint64_t v52 = PBReaderReadString();
          uint64_t v53 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v52;
          goto LABEL_90;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_171;
        }
        unint64_t v12 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        __int16 v93 = *(_WORD *)(a1 + 88) << 6;
        goto LABEL_151;
      case 3:
        if (!v37 || (*(_WORD *)(a1 + v12[621]) & 0x100) != 0) {
          goto LABEL_116;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_171;
        }
        uint64_t v54 = objc_alloc_init(GEOGuidanceEvent);
        if (!GEOGuidanceEventReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_170;
        }
        PBReaderRecallMark();
        -[GEOEnrouteNotice _addNoFlagsGuidance:](a1, v54);

        goto LABEL_91;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_116;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + v12[621]) |= 4u;
        while (2)
        {
          uint64_t v57 = *v23;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v25) + v58);
            *(void *)(v3 + v57) = v59;
            v44 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              BOOL v33 = v56++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v44) = 0;
        }
LABEL_125:
        uint64_t v92 = 68;
        goto LABEL_146;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_116;
        }
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + v12[621]) |= 8u;
        while (2)
        {
          uint64_t v63 = *v23;
          uint64_t v64 = *(void *)(v3 + v63);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(v3 + *v25) + v64);
            *(void *)(v3 + v63) = v65;
            v44 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              BOOL v33 = v62++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v44) = 0;
        }
LABEL_129:
        uint64_t v92 = 72;
        goto LABEL_146;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_116;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + v12[621]) |= 0x10u;
        while (2)
        {
          uint64_t v69 = *v23;
          uint64_t v70 = *(void *)(v3 + v69);
          unint64_t v71 = v70 + 1;
          if (v70 == -1 || v71 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(v3 + *v25) + v70);
            *(void *)(v3 + v69) = v71;
            v44 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              BOOL v33 = v68++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v44) = 0;
        }
LABEL_133:
        uint64_t v92 = 76;
        goto LABEL_146;
      case 7:
        if (!v37) {
          goto LABEL_116;
        }
        if ((*(_WORD *)(a1 + v12[621]) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_171;
          }
          unint64_t v12 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
          __int16 v93 = 32 * *(_WORD *)(a1 + 88);
LABEL_151:
          v7 += v93 >> 15;
          goto LABEL_152;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_171;
        }
        uint64_t v54 = objc_alloc_init(GEORouteAnnotation);
        if (GEORouteAnnotationReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v53 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v54;
LABEL_90:

          --v7;
LABEL_91:
          unint64_t v12 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
LABEL_152:
          char v8 = v100;
          char v21 = v101;
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_153:
          if (!(v102 & 1 | (v7 != 0))) {
            goto LABEL_154;
          }
          continue;
        }
LABEL_170:

LABEL_171:
        int v98 = 0;
        unint64_t v12 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        char v21 = v101;
        uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_155:
        if (v99) {
LABEL_156:
        }
          *(_WORD *)(a1 + v12[621]) |= 0x80u;
        if (v21 & 1 | ((v98 & 1) == 0))
        {
          *(_WORD *)(a1 + v12[621]) |= 0x200u;
          *(_WORD *)(a1 + v12[621]) |= 0x100u;
          *(_WORD *)(a1 + v12[621]) |= 0x400u;
        }
        else if (v22)
        {
          while (1)
          {
            int v94 = *v22++;
            __int16 v95 = 512;
            switch(v94)
            {
              case 0:
                goto LABEL_164;
              case 2:
                goto LABEL_163;
              case 3:
                __int16 v95 = 256;
                goto LABEL_163;
              case 7:
                __int16 v95 = 1024;
LABEL_163:
                *(_WORD *)(a1 + v12[621]) |= v95;
                break;
              default:
                continue;
            }
          }
        }
LABEL_164:
        if (v98)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v24) == 0;
          if ((v21 & 1) == 0) {
            return v3;
          }
LABEL_168:
          unsigned int v96 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v21) {
            goto LABEL_168;
          }
        }
        return v3;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_116;
        }
        char v73 = 0;
        unsigned int v74 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + v12[621]) |= 0x40u;
        while (2)
        {
          uint64_t v75 = *v23;
          uint64_t v76 = *(void *)(v3 + v75);
          unint64_t v77 = v76 + 1;
          if (v76 == -1 || v77 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v78 = *(unsigned char *)(*(void *)(v3 + *v25) + v76);
            *(void *)(v3 + v75) = v77;
            v44 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              BOOL v33 = v74++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v44) = 0;
        }
LABEL_137:
        uint64_t v92 = 84;
        goto LABEL_146;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_116;
        }
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + v12[621]) |= 1u;
        while (2)
        {
          uint64_t v81 = *v23;
          uint64_t v82 = *(void *)(v3 + v81);
          unint64_t v83 = v82 + 1;
          if (v82 == -1 || v83 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v84 = *(unsigned char *)(*(void *)(v3 + *v25) + v82);
            *(void *)(v3 + v81) = v83;
            v44 |= (unint64_t)(v84 & 0x7F) << v79;
            if (v84 < 0)
            {
              v79 += 7;
              BOOL v33 = v80++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v44) = 0;
        }
LABEL_141:
        uint64_t v92 = 60;
        goto LABEL_146;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_116;
        }
        char v85 = 0;
        unsigned int v86 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + v12[621]) |= 2u;
        while (2)
        {
          uint64_t v87 = *v23;
          uint64_t v88 = *(void *)(v3 + v87);
          unint64_t v89 = v88 + 1;
          if (v88 == -1 || v89 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v90 = *(unsigned char *)(*(void *)(v3 + *v25) + v88);
            *(void *)(v3 + v87) = v89;
            v44 |= (unint64_t)(v90 & 0x7F) << v85;
            if (v90 < 0)
            {
              v85 += 7;
              BOOL v33 = v86++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v44) = 0;
        }
LABEL_145:
        uint64_t v92 = 64;
LABEL_146:
        *(_DWORD *)(a1 + v92) = v44;
        goto LABEL_153;
      default:
        if ((v99 & 1) == 0 || (*(_WORD *)(a1 + v12[621]) & 0x80) != 0)
        {
LABEL_116:
          char v91 = PBReaderSkipValueWithTag();
          char v8 = v100;
          char v21 = v101;
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v12 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
          if ((v91 & 1) == 0)
          {
            int v98 = 0;
            goto LABEL_155;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v50 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v49;
          }
          int v51 = PBUnknownFieldAdd();
          unint64_t v12 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
          char v8 = v100;
          char v21 = v101;
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if (!v51)
          {
            int v98 = 0;
            goto LABEL_156;
          }
        }
        goto LABEL_153;
    }
  }
}

void sub_18979E38C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18979E8B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18979F814(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOEnrouteNoticeCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  return [*(id *)(a1 + 40) readAll:1];
}

unint64_t GEOEnrouteNoticeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOEnrouteNoticeReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOEnrouteNoticeReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOEnrouteNoticeReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOEnrouteNoticeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOEnrouteNoticeCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18979FABC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOEnrouteNoticeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOEnrouteNoticeReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18979FB20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEnrouteNoticeIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_86;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 2u:
          if (v15 == 2) {
            goto LABEL_28;
          }
          goto LABEL_90;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOGuidanceEventIsValid(a1)) {
            goto LABEL_90;
          }
          goto LABEL_61;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_86;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_86;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_86;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteAnnotationIsValid(a1)) {
            goto LABEL_90;
          }
LABEL_61:
          PBReaderRecallMark();
          continue;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_86;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_86;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v48 = 0;
          break;
        default:
LABEL_28:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_90:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v49 = *v2;
        uint64_t v50 = *(void *)&a1[v49];
        unint64_t v51 = v50 + 1;
        if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
          break;
        }
        int v52 = *(char *)(*(void *)&a1[*v5] + v50);
        *(void *)&a1[v49] = v51;
        if (v52 < 0)
        {
          BOOL v22 = v48++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_87;
      }
LABEL_86:
      a1[*v4] = 1;
LABEL_87:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v53 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v53;
}

BOOL GEOGuidanceEventIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_162;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_149;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_159;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_162;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_149;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_159;
          }
        case 3u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSignGuidanceIsValid(a1)) {
            goto LABEL_162;
          }
          goto LABEL_158;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSpokenGuidanceIsValid(a1)) {
            goto LABEL_162;
          }
          goto LABEL_158;
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOVisualLaneGuidanceIsValid(a1)) {
            goto LABEL_162;
          }
          goto LABEL_158;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_162;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_149;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_159;
          }
        case 8u:
        case 9u:
          if (v16 != 1) {
            goto LABEL_162;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_150;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_150;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_162;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_149;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v26 = v37++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_159;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_162;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_149;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v26 = v42++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_159;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_162;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            uint64_t v49 = *(void *)&a1[v48];
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
              goto LABEL_149;
            }
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v26 = v47++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_159;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_162;
          }
          unsigned int v52 = 0;
          while (1)
          {
            uint64_t v53 = *v2;
            uint64_t v54 = *(void *)&a1[v53];
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
              goto LABEL_149;
            }
            int v56 = *(char *)(*(void *)&a1[*v5] + v54);
            *(void *)&a1[v53] = v55;
            if (v56 < 0)
            {
              BOOL v26 = v52++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_159;
          }
        case 0xEu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOJunctionViewIsValid(a1)) {
            goto LABEL_162;
          }
          goto LABEL_158;
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_162;
          }
          unsigned int v57 = 0;
          while (1)
          {
            uint64_t v58 = *v2;
            uint64_t v59 = *(void *)&a1[v58];
            unint64_t v60 = v59 + 1;
            if (v59 == -1 || v60 > *(void *)&a1[*v3]) {
              goto LABEL_149;
            }
            int v61 = *(char *)(*(void *)&a1[*v5] + v59);
            *(void *)&a1[v58] = v60;
            if (v61 < 0)
            {
              BOOL v26 = v57++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_159;
          }
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_162;
          }
          unsigned int v62 = 0;
          while (1)
          {
            uint64_t v63 = *v2;
            uint64_t v64 = *(void *)&a1[v63];
            unint64_t v65 = v64 + 1;
            if (v64 == -1 || v65 > *(void *)&a1[*v3]) {
              goto LABEL_149;
            }
            int v66 = *(char *)(*(void *)&a1[*v5] + v64);
            *(void *)&a1[v63] = v65;
            if (v66 < 0)
            {
              BOOL v26 = v62++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_159;
          }
        case 0x11u:
          if ((v8 & 7) != 0) {
            goto LABEL_162;
          }
          unsigned int v67 = 0;
          while (1)
          {
            uint64_t v68 = *v2;
            uint64_t v69 = *(void *)&a1[v68];
            unint64_t v70 = v69 + 1;
            if (v69 == -1 || v70 > *(void *)&a1[*v3]) {
              goto LABEL_149;
            }
            int v71 = *(char *)(*(void *)&a1[*v5] + v69);
            *(void *)&a1[v68] = v70;
            if (v71 < 0)
            {
              BOOL v26 = v67++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_159;
          }
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_162;
          }
          unsigned int v72 = 0;
          while (1)
          {
            uint64_t v73 = *v2;
            uint64_t v74 = *(void *)&a1[v73];
            unint64_t v75 = v74 + 1;
            if (v74 == -1 || v75 > *(void *)&a1[*v3]) {
              goto LABEL_149;
            }
            int v76 = *(char *)(*(void *)&a1[*v5] + v74);
            *(void *)&a1[v73] = v75;
            if (v76 < 0)
            {
              BOOL v26 = v72++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_159;
          }
        case 0x13u:
          if ((v8 & 7) != 0) {
            goto LABEL_162;
          }
          unsigned int v77 = 0;
          while (1)
          {
            uint64_t v78 = *v2;
            uint64_t v79 = *(void *)&a1[v78];
            unint64_t v80 = v79 + 1;
            if (v79 == -1 || v80 > *(void *)&a1[*v3]) {
              goto LABEL_149;
            }
            int v81 = *(char *)(*(void *)&a1[*v5] + v79);
            *(void *)&a1[v78] = v80;
            if (v81 < 0)
            {
              BOOL v26 = v77++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_159;
          }
        case 0x14u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOARGuidanceIsValid(a1)) {
            goto LABEL_162;
          }
          goto LABEL_158;
        case 0x15u:
          if ((v8 & 7) != 0) {
            goto LABEL_162;
          }
          unsigned int v82 = 0;
          break;
        case 0x16u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOGuidanceImportanceModeIsValid(a1)) {
            goto LABEL_162;
          }
          goto LABEL_158;
        case 0x17u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEONavTrayGuidanceIsValid(a1)) {
            goto LABEL_162;
          }
LABEL_158:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_162:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v83 = *v2;
        uint64_t v84 = *(void *)&a1[v83];
        unint64_t v85 = v84 + 1;
        if (v84 == -1 || v85 > *(void *)&a1[*v3]) {
          break;
        }
        int v86 = *(char *)(*(void *)&a1[*v5] + v84);
        *(void *)&a1[v83] = v85;
        if (v86 < 0)
        {
          BOOL v26 = v82++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_159;
      }
LABEL_149:
      uint64_t v14 = *v4;
LABEL_150:
      a1[v14] = 1;
LABEL_159:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v87 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v87;
}