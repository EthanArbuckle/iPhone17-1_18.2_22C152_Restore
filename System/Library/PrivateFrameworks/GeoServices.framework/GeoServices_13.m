void sub_189C13340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C134D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C13668(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C13730(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C13D00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDResultRefinementCallReadAllRecursiveWithoutSynchronized(uint64_t *a1)
{
  -[GEOPDResultRefinementToggle readAll:](a1[8], 1);
  -[GEOPDResultRefinementRange readAll:](a1[6], 1);
  -[GEOPDResultRefinementMultiSelect readAll:](a1[4], 1);
  -[GEOPDResultRefinementSort readAll:](a1[7], 1);
  -[GEOPDResultRefinementGuidesHome readAll:](a1[3], 1);
  uint64_t v2 = a1[5];

  -[GEOPDResultRefinementOpenOptions readAll:](v2, 1);
}

unint64_t GEOPDResultRefinementReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDResultRefinementReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    v9 = (int *)&GEOPDResultRefinementReadAllFrom_recursiveTag;
  }
  else {
    v9 = (int *)&GEOPDResultRefinementReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDResultRefinementReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDResultRefinementCallReadAllRecursiveWithoutSynchronized((uint64_t *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189C16018(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]]) {
    goto LABEL_426;
  }
  v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_426;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v13 = v7++ >= 9;
      if (v13)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4)
    {
LABEL_426:
      BOOL v198 = a1[*v4] == 0;
      PBReaderRecallMark();
      return v198;
    }
    switch((v8 >> 3))
    {
      case 1u:
        if ((v8 & 7) != 0) {
          goto LABEL_429;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_423;
        }
        a1[*v4] = 1;
        goto LABEL_423;
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementToggleIsValid(a1)) {
          goto LABEL_429;
        }
        goto LABEL_422;
      case 3u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_429;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_36:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_421;
            }
            char v23 = 0;
            unsigned int v24 = 0;
            unint64_t v25 = 0;
            while (2)
            {
              uint64_t v26 = *v2;
              uint64_t v27 = *(void *)&a1[v26];
              unint64_t v28 = v27 + 1;
              if (v27 == -1 || v28 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v29 = *(unsigned char *)(*(void *)&a1[*v5] + v27);
                *(void *)&a1[v26] = v28;
                v25 |= (unint64_t)(v29 & 0x7F) << v23;
                if (v29 < 0)
                {
                  v23 += 7;
                  BOOL v13 = v24++ >= 9;
                  if (v13)
                  {
                    unint64_t v25 = 0;
                    int v30 = a1[*v4];
                    goto LABEL_48;
                  }
                  continue;
                }
              }
              break;
            }
            int v30 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v25 = 0;
            }
LABEL_48:
            int v31 = v25 & 7;
            if (v30) {
              BOOL v32 = 1;
            }
            else {
              BOOL v32 = v31 == 4;
            }
            if (v32) {
              goto LABEL_421;
            }
            switch((v25 >> 3))
            {
              case 1u:
                if ((v25 & 7) != 0) {
                  goto LABEL_428;
                }
                unsigned int v33 = 0;
                do
                {
                  uint64_t v34 = *v2;
                  uint64_t v35 = *(void *)&a1[v34];
                  unint64_t v36 = v35 + 1;
                  if (v35 == -1 || v36 > *(void *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_36;
                  }
                  int v37 = *(char *)(*(void *)&a1[*v5] + v35);
                  *(void *)&a1[v34] = v36;
                  if ((v37 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v22 = v33++ > 8;
                }
                while (!v22);
                continue;
              case 2u:
                if (v31 != 2) {
                  goto LABEL_428;
                }
                goto LABEL_62;
              case 3u:
                if (v31 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_428;
                }
                [a1 position];
                [a1 length];
                while (2)
                {
                  if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
                    goto LABEL_140;
                  }
                  char v38 = 0;
                  unsigned int v39 = 0;
                  unint64_t v40 = 0;
                  while (2)
                  {
                    uint64_t v41 = *v2;
                    uint64_t v42 = *(void *)&a1[v41];
                    unint64_t v43 = v42 + 1;
                    if (v42 == -1 || v43 > *(void *)&a1[*v3])
                    {
                      a1[*v4] = 1;
                    }
                    else
                    {
                      char v44 = *(unsigned char *)(*(void *)&a1[*v5] + v42);
                      *(void *)&a1[v41] = v43;
                      v40 |= (unint64_t)(v44 & 0x7F) << v38;
                      if (v44 < 0)
                      {
                        v38 += 7;
                        BOOL v13 = v39++ >= 9;
                        if (v13)
                        {
                          unint64_t v40 = 0;
                          uint64_t v45 = *v4;
                          int v46 = a1[v45];
                          goto LABEL_79;
                        }
                        continue;
                      }
                    }
                    break;
                  }
                  uint64_t v45 = *v4;
                  int v46 = a1[v45];
                  if (a1[v45]) {
                    unint64_t v40 = 0;
                  }
LABEL_79:
                  int v47 = v40 & 7;
                  if (v46) {
                    BOOL v48 = 1;
                  }
                  else {
                    BOOL v48 = v47 == 4;
                  }
                  if (!v48)
                  {
                    switch((v40 >> 3))
                    {
                      case 1u:
                      case 2u:
                        if (v47 != 2
                          || !PBReaderPlaceMark()
                          || !GEOPDResultRefinementRangeElementIsValid(a1))
                        {
                          goto LABEL_427;
                        }
                        PBReaderRecallMark();
                        break;
                      case 3u:
                      case 4u:
                      case 5u:
                        if (v47 != 1) {
                          goto LABEL_427;
                        }
                        uint64_t v49 = *v2;
                        unint64_t v50 = *(void *)&a1[v49];
                        if (v50 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v51 = v50 + 8, v51 <= *(void *)&a1[*v3])) {
                          *(void *)&a1[v49] = v51;
                        }
                        else {
                          a1[v45] = 1;
                        }
                        break;
                      default:
                        if ((PBReaderSkipValueWithTag() & 1) == 0) {
                          goto LABEL_427;
                        }
                        continue;
                    }
                    continue;
                  }
                  goto LABEL_140;
                }
              case 4u:
                if (v31 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_428;
                }
                [a1 position];
                [a1 length];
                break;
              default:
LABEL_62:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_428;
                }
                continue;
            }
            break;
          }
LABEL_98:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_140;
          }
          char v52 = 0;
          unsigned int v53 = 0;
          unint64_t v54 = 0;
          while (1)
          {
            uint64_t v55 = *v2;
            uint64_t v56 = *(void *)&a1[v55];
            unint64_t v57 = v56 + 1;
            if (v56 == -1 || v57 > *(void *)&a1[*v3]) {
              break;
            }
            char v58 = *(unsigned char *)(*(void *)&a1[*v5] + v56);
            *(void *)&a1[v55] = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if ((v58 & 0x80) == 0) {
              goto LABEL_108;
            }
            v52 += 7;
            BOOL v13 = v53++ >= 9;
            if (v13)
            {
              unint64_t v54 = 0;
              int v59 = a1[*v4];
              goto LABEL_110;
            }
          }
          a1[*v4] = 1;
LABEL_108:
          int v59 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v54 = 0;
          }
LABEL_110:
          int v60 = v54 & 7;
          if (v59 || v60 == 4)
          {
LABEL_140:
            int v73 = a1[*v4];
            PBReaderRecallMark();
            if (!v73)
            {
              PBReaderRecallMark();
              continue;
            }
            goto LABEL_428;
          }
          break;
        }
        unint64_t v62 = v54 >> 3;
        if ((v54 >> 3) == 3)
        {
          if ((v54 & 7) != 0) {
            goto LABEL_427;
          }
          unsigned int v63 = 0;
          while (1)
          {
            uint64_t v64 = *v2;
            uint64_t v65 = *(void *)&a1[v64];
            unint64_t v66 = v65 + 1;
            if (v65 == -1 || v66 > *(void *)&a1[*v3]) {
              goto LABEL_137;
            }
            int v67 = *(char *)(*(void *)&a1[*v5] + v65);
            *(void *)&a1[v64] = v66;
            if (v67 < 0)
            {
              BOOL v22 = v63++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_98;
          }
        }
        if (v62 == 2)
        {
          if ((v54 & 7) != 0) {
            goto LABEL_427;
          }
          unsigned int v68 = 0;
          while (1)
          {
            uint64_t v69 = *v2;
            uint64_t v70 = *(void *)&a1[v69];
            unint64_t v71 = v70 + 1;
            if (v70 == -1 || v71 > *(void *)&a1[*v3]) {
              break;
            }
            int v72 = *(char *)(*(void *)&a1[*v5] + v70);
            *(void *)&a1[v69] = v71;
            if (v72 < 0)
            {
              BOOL v22 = v68++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_98;
          }
LABEL_137:
          a1[*v4] = 1;
          goto LABEL_98;
        }
        if (v62 != 1)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_427;
          }
          goto LABEL_98;
        }
        if (v60 == 2 && PBReaderPlaceMark() && GEOPDResultRefinementRangeElementIsValid(a1))
        {
          PBReaderRecallMark();
          goto LABEL_98;
        }
LABEL_427:
        PBReaderRecallMark();
LABEL_428:
        PBReaderRecallMark();
LABEL_429:
        PBReaderRecallMark();
        return 0;
      case 4u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_429;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_146:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_421;
          }
          char v74 = 0;
          unsigned int v75 = 0;
          unint64_t v76 = 0;
          while (2)
          {
            uint64_t v77 = *v2;
            uint64_t v78 = *(void *)&a1[v77];
            unint64_t v79 = v78 + 1;
            if (v78 == -1 || v79 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v80 = *(unsigned char *)(*(void *)&a1[*v5] + v78);
              *(void *)&a1[v77] = v79;
              v76 |= (unint64_t)(v80 & 0x7F) << v74;
              if (v80 < 0)
              {
                v74 += 7;
                BOOL v13 = v75++ >= 9;
                if (v13)
                {
                  unint64_t v76 = 0;
                  int v81 = a1[*v4];
                  goto LABEL_158;
                }
                continue;
              }
            }
            break;
          }
          int v81 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v76 = 0;
          }
LABEL_158:
          int v82 = v76 & 7;
          if (v81) {
            BOOL v83 = 1;
          }
          else {
            BOOL v83 = v82 == 4;
          }
          if (!v83)
          {
            switch((v76 >> 3))
            {
              case 1u:
                if (v82 == 2) {
                  goto LABEL_257;
                }
                goto LABEL_428;
              case 2u:
                if (v82 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_428;
                }
                [a1 position];
                [a1 length];
LABEL_168:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
                {
                  char v84 = 0;
                  unsigned int v85 = 0;
                  unint64_t v86 = 0;
                  while (1)
                  {
                    uint64_t v87 = *v2;
                    uint64_t v88 = *(void *)&a1[v87];
                    unint64_t v89 = v88 + 1;
                    if (v88 == -1 || v89 > *(void *)&a1[*v3]) {
                      break;
                    }
                    char v90 = *(unsigned char *)(*(void *)&a1[*v5] + v88);
                    *(void *)&a1[v87] = v89;
                    v86 |= (unint64_t)(v90 & 0x7F) << v84;
                    if ((v90 & 0x80) == 0) {
                      goto LABEL_178;
                    }
                    v84 += 7;
                    BOOL v13 = v85++ >= 9;
                    if (v13)
                    {
                      unint64_t v86 = 0;
                      int v91 = a1[*v4];
                      goto LABEL_180;
                    }
                  }
                  a1[*v4] = 1;
LABEL_178:
                  int v91 = a1[*v4];
                  if (a1[*v4]) {
                    unint64_t v86 = 0;
                  }
LABEL_180:
                  int v92 = v86 & 7;
                  if (v91 || v92 == 4) {
                    break;
                  }
                  switch((v86 >> 3))
                  {
                    case 1u:
                      if (v92 == 2) {
                        goto LABEL_186;
                      }
                      goto LABEL_427;
                    case 2u:
                      if ((v86 & 7) != 0) {
                        goto LABEL_427;
                      }
                      unsigned int v94 = 0;
                      while (1)
                      {
                        uint64_t v95 = *v2;
                        uint64_t v96 = *(void *)&a1[v95];
                        unint64_t v97 = v96 + 1;
                        if (v96 == -1 || v97 > *(void *)&a1[*v3]) {
                          goto LABEL_228;
                        }
                        int v98 = *(char *)(*(void *)&a1[*v5] + v96);
                        *(void *)&a1[v95] = v97;
                        if (v98 < 0)
                        {
                          BOOL v22 = v94++ > 8;
                          if (!v22) {
                            continue;
                          }
                        }
                        goto LABEL_168;
                      }
                    case 3u:
                      if (v92 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
                        goto LABEL_427;
                      }
                      goto LABEL_203;
                    case 4u:
                      if (v92 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementMetadataIsValid(a1)) {
                        goto LABEL_427;
                      }
LABEL_203:
                      PBReaderRecallMark();
                      continue;
                    case 5u:
                      if ((v86 & 7) != 0) {
                        goto LABEL_427;
                      }
                      unsigned int v99 = 0;
                      while (1)
                      {
                        uint64_t v100 = *v2;
                        uint64_t v101 = *(void *)&a1[v100];
                        unint64_t v102 = v101 + 1;
                        if (v101 == -1 || v102 > *(void *)&a1[*v3]) {
                          goto LABEL_228;
                        }
                        int v103 = *(char *)(*(void *)&a1[*v5] + v101);
                        *(void *)&a1[v100] = v102;
                        if (v103 < 0)
                        {
                          BOOL v22 = v99++ > 8;
                          if (!v22) {
                            continue;
                          }
                        }
                        goto LABEL_168;
                      }
                    case 6u:
                      if ((v86 & 7) != 0) {
                        goto LABEL_427;
                      }
                      unsigned int v104 = 0;
                      while (1)
                      {
                        uint64_t v105 = *v2;
                        uint64_t v106 = *(void *)&a1[v105];
                        unint64_t v107 = v106 + 1;
                        if (v106 == -1 || v107 > *(void *)&a1[*v3]) {
                          goto LABEL_228;
                        }
                        int v108 = *(char *)(*(void *)&a1[*v5] + v106);
                        *(void *)&a1[v105] = v107;
                        if (v108 < 0)
                        {
                          BOOL v22 = v104++ > 8;
                          if (!v22) {
                            continue;
                          }
                        }
                        goto LABEL_168;
                      }
                    case 7u:
                      if ((v86 & 7) != 0) {
                        goto LABEL_427;
                      }
                      unsigned int v109 = 0;
                      do
                      {
                        uint64_t v110 = *v2;
                        uint64_t v111 = *(void *)&a1[v110];
                        unint64_t v112 = v111 + 1;
                        if (v111 == -1 || v112 > *(void *)&a1[*v3])
                        {
LABEL_228:
                          a1[*v4] = 1;
                          goto LABEL_168;
                        }
                        int v113 = *(char *)(*(void *)&a1[*v5] + v111);
                        *(void *)&a1[v110] = v112;
                        if ((v113 & 0x80000000) == 0) {
                          break;
                        }
                        BOOL v22 = v109++ > 8;
                      }
                      while (!v22);
                      break;
                    default:
LABEL_186:
                      if ((PBReaderSkipValueWithTag() & 1) == 0) {
                        goto LABEL_427;
                      }
                      continue;
                  }
                }
                int v129 = a1[*v4];
                PBReaderRecallMark();
                if (!v129)
                {
                  PBReaderRecallMark();
                  continue;
                }
                goto LABEL_428;
              case 3u:
                if ((v76 & 7) != 0) {
                  goto LABEL_428;
                }
                unsigned int v114 = 0;
                while (1)
                {
                  uint64_t v115 = *v2;
                  uint64_t v116 = *(void *)&a1[v115];
                  unint64_t v117 = v116 + 1;
                  if (v116 == -1 || v117 > *(void *)&a1[*v3]) {
                    goto LABEL_253;
                  }
                  int v118 = *(char *)(*(void *)&a1[*v5] + v116);
                  *(void *)&a1[v115] = v117;
                  if (v118 < 0)
                  {
                    BOOL v22 = v114++ > 8;
                    if (!v22) {
                      continue;
                    }
                  }
                  goto LABEL_146;
                }
              case 4u:
                if ((v76 & 7) != 0) {
                  goto LABEL_428;
                }
                unsigned int v119 = 0;
                while (1)
                {
                  uint64_t v120 = *v2;
                  uint64_t v121 = *(void *)&a1[v120];
                  unint64_t v122 = v121 + 1;
                  if (v121 == -1 || v122 > *(void *)&a1[*v3]) {
                    goto LABEL_253;
                  }
                  int v123 = *(char *)(*(void *)&a1[*v5] + v121);
                  *(void *)&a1[v120] = v122;
                  if (v123 < 0)
                  {
                    BOOL v22 = v119++ > 8;
                    if (!v22) {
                      continue;
                    }
                  }
                  goto LABEL_146;
                }
              case 5u:
                if ((v76 & 7) != 0) {
                  goto LABEL_428;
                }
                unsigned int v124 = 0;
                do
                {
                  uint64_t v125 = *v2;
                  uint64_t v126 = *(void *)&a1[v125];
                  unint64_t v127 = v126 + 1;
                  if (v126 == -1 || v127 > *(void *)&a1[*v3])
                  {
LABEL_253:
                    a1[*v4] = 1;
                    goto LABEL_146;
                  }
                  int v128 = *(char *)(*(void *)&a1[*v5] + v126);
                  *(void *)&a1[v125] = v127;
                  if ((v128 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v22 = v124++ > 8;
                }
                while (!v22);
                break;
              case 6u:
                if (v82 == 2) {
                  goto LABEL_257;
                }
                goto LABEL_428;
              case 7u:
                if (v82 == 2) {
                  goto LABEL_257;
                }
                goto LABEL_428;
              default:
LABEL_257:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_428;
                }
                continue;
            }
            continue;
          }
          goto LABEL_421;
        }
      case 5u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_429;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_264:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_421;
          }
          char v130 = 0;
          unsigned int v131 = 0;
          unint64_t v132 = 0;
          while (2)
          {
            uint64_t v133 = *v2;
            uint64_t v134 = *(void *)&a1[v133];
            unint64_t v135 = v134 + 1;
            if (v134 == -1 || v135 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v136 = *(unsigned char *)(*(void *)&a1[*v5] + v134);
              *(void *)&a1[v133] = v135;
              v132 |= (unint64_t)(v136 & 0x7F) << v130;
              if (v136 < 0)
              {
                v130 += 7;
                BOOL v13 = v131++ >= 9;
                if (v13)
                {
                  unint64_t v132 = 0;
                  int v137 = a1[*v4];
                  goto LABEL_276;
                }
                continue;
              }
            }
            break;
          }
          int v137 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v132 = 0;
          }
LABEL_276:
          int v138 = v132 & 7;
          if (v137) {
            BOOL v139 = 1;
          }
          else {
            BOOL v139 = v138 == 4;
          }
          if (!v139)
          {
            switch((v132 >> 3))
            {
              case 1u:
                if (v138 == 2) {
                  goto LABEL_282;
                }
                goto LABEL_428;
              case 2u:
                if (v138 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_428;
                }
                [a1 position];
                [a1 length];
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
                {
                  char v140 = 0;
                  unsigned int v141 = 0;
                  unint64_t v142 = 0;
                  while (1)
                  {
                    uint64_t v143 = *v2;
                    uint64_t v144 = *(void *)&a1[v143];
                    unint64_t v145 = v144 + 1;
                    if (v144 == -1 || v145 > *(void *)&a1[*v3]) {
                      break;
                    }
                    char v146 = *(unsigned char *)(*(void *)&a1[*v5] + v144);
                    *(void *)&a1[v143] = v145;
                    v142 |= (unint64_t)(v146 & 0x7F) << v140;
                    if ((v146 & 0x80) == 0) {
                      goto LABEL_297;
                    }
                    v140 += 7;
                    BOOL v13 = v141++ >= 9;
                    if (v13)
                    {
                      unint64_t v142 = 0;
                      int v147 = a1[*v4];
                      goto LABEL_299;
                    }
                  }
                  a1[*v4] = 1;
LABEL_297:
                  int v147 = a1[*v4];
                  if (a1[*v4]) {
                    unint64_t v142 = 0;
                  }
LABEL_299:
                  int v148 = v142 & 7;
                  if (v147) {
                    BOOL v149 = 1;
                  }
                  else {
                    BOOL v149 = v148 == 4;
                  }
                  if (!v149)
                  {
                    switch((v142 >> 3))
                    {
                      case 1u:
                        if (v148 == 2) {
                          goto LABEL_315;
                        }
                        goto LABEL_427;
                      case 2u:
                        if (v148 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
                          goto LABEL_427;
                        }
                        goto LABEL_313;
                      case 3u:
                        if (v148 != 2
                          || !PBReaderPlaceMark()
                          || !GEOPDResultRefinementMetadataIsValid(a1))
                        {
                          goto LABEL_427;
                        }
LABEL_313:
                        PBReaderRecallMark();
                        continue;
                      case 4u:
                        if (v148 == 2) {
                          goto LABEL_315;
                        }
                        goto LABEL_427;
                      default:
LABEL_315:
                        if ((PBReaderSkipValueWithTag() & 1) == 0) {
                          goto LABEL_427;
                        }
                        continue;
                    }
                  }
                  break;
                }
                int v160 = a1[*v4];
                PBReaderRecallMark();
                if (!v160)
                {
                  PBReaderRecallMark();
                  continue;
                }
                goto LABEL_428;
              case 3u:
                if ((v132 & 7) != 0) {
                  goto LABEL_428;
                }
                unsigned int v150 = 0;
                while (1)
                {
                  uint64_t v151 = *v2;
                  uint64_t v152 = *(void *)&a1[v151];
                  unint64_t v153 = v152 + 1;
                  if (v152 == -1 || v153 > *(void *)&a1[*v3]) {
                    goto LABEL_333;
                  }
                  int v154 = *(char *)(*(void *)&a1[*v5] + v152);
                  *(void *)&a1[v151] = v153;
                  if (v154 < 0)
                  {
                    BOOL v22 = v150++ > 8;
                    if (!v22) {
                      continue;
                    }
                  }
                  goto LABEL_264;
                }
              case 4u:
                if ((v132 & 7) != 0) {
                  goto LABEL_428;
                }
                unsigned int v155 = 0;
                do
                {
                  uint64_t v156 = *v2;
                  uint64_t v157 = *(void *)&a1[v156];
                  unint64_t v158 = v157 + 1;
                  if (v157 == -1 || v158 > *(void *)&a1[*v3])
                  {
LABEL_333:
                    a1[*v4] = 1;
                    goto LABEL_264;
                  }
                  int v159 = *(char *)(*(void *)&a1[*v5] + v157);
                  *(void *)&a1[v156] = v158;
                  if ((v159 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v22 = v155++ > 8;
                }
                while (!v22);
                break;
              default:
LABEL_282:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_428;
                }
                continue;
            }
            continue;
          }
          goto LABEL_421;
        }
      case 6u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOPDResultRefinementGuidesHomeIsValid(a1)) {
          goto LABEL_422;
        }
        goto LABEL_429;
      case 7u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_429;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v161 = 0;
          unsigned int v162 = 0;
          unint64_t v163 = 0;
          while (2)
          {
            uint64_t v164 = *v2;
            uint64_t v165 = *(void *)&a1[v164];
            unint64_t v166 = v165 + 1;
            if (v165 == -1 || v166 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v167 = *(unsigned char *)(*(void *)&a1[*v5] + v165);
              *(void *)&a1[v164] = v166;
              v163 |= (unint64_t)(v167 & 0x7F) << v161;
              if (v167 < 0)
              {
                v161 += 7;
                BOOL v13 = v162++ >= 9;
                if (v13)
                {
                  unint64_t v163 = 0;
                  int v168 = a1[*v4];
                  goto LABEL_355;
                }
                continue;
              }
            }
            break;
          }
          int v168 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v163 = 0;
          }
LABEL_355:
          int v169 = v163 & 7;
          if (v168) {
            BOOL v170 = 1;
          }
          else {
            BOOL v170 = v169 == 4;
          }
          if (!v170)
          {
            unint64_t v171 = v163 >> 3;
            if ((v163 >> 3) == 3)
            {
              if (v169 != 2 || !PBReaderPlaceMark()) {
                goto LABEL_428;
              }
              [a1 position];
              [a1 length];
LABEL_367:
              while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
              {
                char v172 = 0;
                unsigned int v173 = 0;
                unint64_t v174 = 0;
                while (1)
                {
                  uint64_t v175 = *v2;
                  uint64_t v176 = *(void *)&a1[v175];
                  unint64_t v177 = v176 + 1;
                  if (v176 == -1 || v177 > *(void *)&a1[*v3]) {
                    break;
                  }
                  char v178 = *(unsigned char *)(*(void *)&a1[*v5] + v176);
                  *(void *)&a1[v175] = v177;
                  v174 |= (unint64_t)(v178 & 0x7F) << v172;
                  if ((v178 & 0x80) == 0) {
                    goto LABEL_377;
                  }
                  v172 += 7;
                  BOOL v13 = v173++ >= 9;
                  if (v13)
                  {
                    unint64_t v174 = 0;
                    uint64_t v179 = *v4;
                    int v180 = a1[v179];
                    goto LABEL_379;
                  }
                }
                a1[*v4] = 1;
LABEL_377:
                uint64_t v179 = *v4;
                int v180 = a1[v179];
                if (a1[v179]) {
                  unint64_t v174 = 0;
                }
LABEL_379:
                int v181 = v174 & 7;
                if (v180 || v181 == 4) {
                  break;
                }
                switch((v174 >> 3))
                {
                  case 1u:
                    if (v181 == 2) {
                      goto LABEL_385;
                    }
                    goto LABEL_427;
                  case 2u:
                    if (v181 != 1) {
                      goto LABEL_427;
                    }
                    uint64_t v183 = *v2;
                    unint64_t v184 = *(void *)&a1[v183];
                    if (v184 > 0xFFFFFFFFFFFFFFF7) {
                      goto LABEL_412;
                    }
                    unint64_t v185 = v184 + 8;
                    if (v185 > *(void *)&a1[*v3]) {
                      goto LABEL_412;
                    }
                    *(void *)&a1[v183] = v185;
                    continue;
                  case 3u:
                    if ((v174 & 7) != 0) {
                      goto LABEL_427;
                    }
                    unsigned int v186 = 0;
                    while (1)
                    {
                      uint64_t v187 = *v2;
                      uint64_t v188 = *(void *)&a1[v187];
                      unint64_t v189 = v188 + 1;
                      if (v188 == -1 || v189 > *(void *)&a1[*v3]) {
                        goto LABEL_411;
                      }
                      int v190 = *(char *)(*(void *)&a1[*v5] + v188);
                      *(void *)&a1[v187] = v189;
                      if (v190 < 0)
                      {
                        BOOL v22 = v186++ > 8;
                        if (!v22) {
                          continue;
                        }
                      }
                      goto LABEL_367;
                    }
                  case 4u:
                    if (v181 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementMetadataIsValid(a1)) {
                      goto LABEL_427;
                    }
                    PBReaderRecallMark();
                    continue;
                  case 5u:
                    if ((v174 & 7) != 0) {
                      goto LABEL_427;
                    }
                    unsigned int v191 = 0;
                    break;
                  default:
LABEL_385:
                    if ((PBReaderSkipValueWithTag() & 1) == 0) {
                      goto LABEL_427;
                    }
                    continue;
                }
                while (1)
                {
                  uint64_t v192 = *v2;
                  uint64_t v193 = *(void *)&a1[v192];
                  unint64_t v194 = v193 + 1;
                  if (v193 == -1 || v194 > *(void *)&a1[*v3]) {
                    break;
                  }
                  int v195 = *(char *)(*(void *)&a1[*v5] + v193);
                  *(void *)&a1[v192] = v194;
                  if (v195 < 0)
                  {
                    BOOL v22 = v191++ > 8;
                    if (!v22) {
                      continue;
                    }
                  }
                  goto LABEL_367;
                }
LABEL_411:
                uint64_t v179 = *v4;
LABEL_412:
                a1[v179] = 1;
              }
              int v196 = a1[*v4];
              PBReaderRecallMark();
              if (v196) {
                goto LABEL_428;
              }
            }
            else
            {
              if (v171 != 2)
              {
                if (v171 == 1 && v169 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_428;
                }
                continue;
              }
              if (v169 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementToggleIsValid(a1)) {
                goto LABEL_428;
              }
            }
            PBReaderRecallMark();
            continue;
          }
          break;
        }
LABEL_421:
        int v197 = a1[*v4];
        PBReaderRecallMark();
        if (v197) {
          goto LABEL_429;
        }
LABEL_422:
        PBReaderRecallMark();
LABEL_423:
        if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
          goto LABEL_426;
        }
        continue;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_429;
        }
        goto LABEL_423;
    }
  }
}

BOOL GEOPDResultRefinementToggleIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_78;
          }
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_75;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementMetadataIsValid(a1)) {
            goto LABEL_78;
          }
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_75;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_75;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_75;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_75;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v43 = 0;
          break;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_78:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v44 = *v2;
        uint64_t v45 = *(void *)&a1[v44];
        unint64_t v46 = v45 + 1;
        if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
          break;
        }
        int v47 = *(char *)(*(void *)&a1[*v5] + v45);
        *(void *)&a1[v44] = v46;
        if (v47 < 0)
        {
          BOOL v22 = v43++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_75;
      }
LABEL_74:
      a1[*v4] = 1;
LABEL_75:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

BOOL GEOPDResultRefinementGuidesHomeIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v17 = 0;
          do
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_50;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0) {
              break;
            }
          }
          while (v17++ <= 8);
          goto LABEL_50;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_54;
          }
          goto LABEL_49;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1)) {
            goto LABEL_54;
          }
          goto LABEL_49;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_54;
          }
          goto LABEL_49;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDWarsawMerchantIdentifierIsValid(a1)) {
            goto LABEL_54;
          }
          goto LABEL_49;
        case 6u:
          if (v15 == 2) {
            goto LABEL_44;
          }
          goto LABEL_54;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementMetadataIsValid(a1)) {
            goto LABEL_54;
          }
LABEL_49:
          PBReaderRecallMark();
          goto LABEL_50;
        default:
LABEL_44:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_54:
            PBReaderRecallMark();
            return 0;
          }
LABEL_50:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_53;
          }
          break;
      }
    }
  }
LABEL_53:
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_189C17F98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDResultRefinementIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  __int16 v2 = *(_WORD *)(a1 + 88);
  if ((v2 & 0x100) != 0) {
    return 1;
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEOPDResultRefinementToggleIsDirty(*(os_unfair_lock_s **)(a1 + 64))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 0x20) != 0)
  {
    v3 = *(os_unfair_lock_s **)(a1 + 48);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      char IsDirty = _GEOPDResultRefinementRangeIsDirty((uint64_t)v3);
      os_unfair_lock_unlock(v3 + 14);
      if (IsDirty) {
        return 1;
      }
    }
    __int16 v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    if (v5)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v5 + 64));
      int v6 = *(_WORD *)(v5 + 80) & 0x1F0;
      os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 64));
      if (v6) {
        return 1;
      }
    }
    __int16 v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 0x40) != 0)
  {
    unsigned int v7 = *(os_unfair_lock_s **)(a1 + 56);
    if (v7)
    {
      os_unfair_lock_lock_with_options();
      char v8 = _GEOPDResultRefinementSortIsDirty((uint64_t)v7);
      os_unfair_lock_unlock(v7 + 12);
      if (v8) {
        return 1;
      }
    }
    __int16 v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 4) != 0)
  {
    if (GEOPDResultRefinementGuidesHomeIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  uint64_t v10 = *(os_unfair_lock_s **)(a1 + 40);
  if (!v10) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  uint64_t v11 = _GEOPDResultRefinementOpenOptionsIsDirty((uint64_t)v10);
  os_unfair_lock_unlock(v10 + 14);
  return v11;
}

void sub_189C18490(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementBarReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    int v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v20 = objc_alloc_init(GEOPDResultRefinement);
          if (!GEOPDResultRefinementReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDResultRefinementBar addResultRefinement:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189C19810(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C1A038(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementGroupReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        id v21 = (int *)MEMORY[0x1E4F940C8];
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_74;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_74:
      int v51 = 1;
      goto LABEL_75;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      uint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 != 3) {
      break;
    }
    if (v34)
    {
      if ((*(unsigned char *)(a1 + 60) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_93;
        }
        uint64_t v39 = objc_alloc_init(GEOPDRefinementSessionState);
        if (!GEOPDRefinementSessionStateReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_92;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
        goto LABEL_56;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_93;
      }
      char v46 = *(unsigned char *)(a1 + 60) << 6;
LABEL_71:
      v7 += v46 >> 7;
      goto LABEL_72;
    }
LABEL_63:
    char v45 = PBReaderSkipValueWithTag();
    id v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v51 = 0;
LABEL_75:
      char v52 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
      goto LABEL_76;
    }
LABEL_73:
    if (!(v54 & 1 | (v7 != 0))) {
      goto LABEL_74;
    }
  }
  if (v33 != 2)
  {
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 60) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_93;
          }
          uint64_t v39 = objc_alloc_init(GEOPDResultRefinementBar);
          if (!GEOPDResultRefinementBarReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
            goto LABEL_92;
          }
          PBReaderRecallMark();
          uint64_t v40 = 32;
LABEL_56:
          unint64_t v41 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
LABEL_72:
          id v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_93;
        }
        char v46 = 32 * *(unsigned char *)(a1 + 60);
        goto LABEL_71;
      }
    }
    else if ((v53 & 1) != 0 && (*(unsigned char *)(a1 + 60) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unsigned int v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;
      }
      int v44 = PBUnknownFieldAdd();
      id v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v44)
      {
        int v51 = 0;
        char v52 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        goto LABEL_77;
      }
      goto LABEL_73;
    }
    goto LABEL_63;
  }
  if (!v34) {
    goto LABEL_63;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_93;
    }
    char v46 = 16 * *(unsigned char *)(a1 + 60);
    goto LABEL_71;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_93;
  }
  uint64_t v39 = objc_alloc_init(GEOPDResultRefinementView);
  if (GEOPDResultRefinementViewReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = 40;
    goto LABEL_56;
  }
LABEL_92:

LABEL_93:
  int v51 = 0;
  char v52 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
  id v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_76:
  if ((v53 & 1) == 0) {
    goto LABEL_78;
  }
LABEL_77:
  *(unsigned char *)(a1 + v52[31]) |= 1u;
LABEL_78:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[31]) |= 4u;
    *(unsigned char *)(a1 + v52[31]) |= 8u;
    *(unsigned char *)(a1 + v52[31]) |= 2u;
  }
  else if (v19)
  {
    while (1)
    {
      int v48 = *v19++;
      char v47 = 4;
      switch(v48)
      {
        case 0:
          goto LABEL_86;
        case 1:
          goto LABEL_84;
        case 2:
          char v47 = 8;
          goto LABEL_84;
        case 3:
          char v47 = 2;
LABEL_84:
          *(unsigned char *)(a1 + v52[31]) |= v47;
          break;
        default:
          continue;
      }
    }
  }
LABEL_86:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    uint64_t v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189C1A820(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C1A9B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C1AE7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementGroupReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDResultRefinementGroupReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDResultRefinementGroupReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDResultRefinementGroupReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDResultRefinementGroupReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189C1B0FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C1B2AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDResultRefinementGroupIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(unsigned char *)(a1 + 60) & 0x1C) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 2) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 24);

  return GEOPDRefinementSessionStateIsDirty(v3);
}

os_unfair_lock_s *GEOPDResultRefinementGroupIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOPDResultRefinementGroupIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189C1B6D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C1BE1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementGuidesHomeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFFCFFFEFFF9FFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 3) & 1)+ ((*(_WORD *)(a1 + 88) >> 6) & 1)+ ((*(_WORD *)(a1 + 88) >> 1) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v61 = v17;
        char v62 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        id v21 = (int *)MEMORY[0x1E4F940C8];
        char v63 = (v19 == 0) | v18;
        BOOL v64 = v18;
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_104;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_104:
      int v59 = 1;
      goto LABEL_105;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v64;
    if ((v63 & 1) == 0)
    {
      uint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_83;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_86;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_88;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_86:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_88:
        *(_DWORD *)(a1 + 84) = v41;
        goto LABEL_103;
      case 2:
        if (!v34) {
          goto LABEL_83;
        }
        if ((*(_WORD *)(a1 + 88) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_125;
          }
          __int16 v54 = *(_WORD *)(a1 + 88) << 8;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_125;
        }
        uint64_t v49 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v49, (void *)v3)) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        uint64_t v50 = 64;
        goto LABEL_81;
      case 3:
        if (!v34) {
          goto LABEL_83;
        }
        if ((*(_WORD *)(a1 + 88) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_125;
          }
          __int16 v54 = *(_WORD *)(a1 + 88) << 10;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_125;
        }
        uint64_t v49 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v49, (void *)v3)) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        uint64_t v50 = 48;
        goto LABEL_81;
      case 4:
        if (!v34) {
          goto LABEL_83;
        }
        if ((*(_WORD *)(a1 + 88) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_125;
          }
          __int16 v54 = *(_WORD *)(a1 + 88) << 13;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_125;
        }
        uint64_t v49 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v49, (void *)v3)) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        uint64_t v50 = 24;
        goto LABEL_81;
      case 5:
        if (!v34) {
          goto LABEL_83;
        }
        if ((*(_WORD *)(a1 + 88) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_125;
          }
          __int16 v54 = *(_WORD *)(a1 + 88) << 11;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_125;
        }
        uint64_t v49 = objc_alloc_init(GEOPDRelatedSearchSuggestion);
        if (!GEOPDRelatedSearchSuggestionReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        uint64_t v50 = 40;
        goto LABEL_81;
      case 6:
        if (!v34) {
          goto LABEL_83;
        }
        if ((*(_WORD *)(a1 + 88) & 8) == 0)
        {
          uint64_t v51 = PBReaderReadString();
          char v52 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v51;
          goto LABEL_82;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_125;
        }
        __int16 v54 = *(_WORD *)(a1 + 88) << 12;
        goto LABEL_101;
      case 7:
        if (!v34) {
          goto LABEL_83;
        }
        if ((*(_WORD *)(a1 + 88) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_125;
          }
          __int16 v54 = *(_WORD *)(a1 + 88) << 9;
LABEL_101:
          v7 += v54 >> 15;
LABEL_102:
          id v21 = (int *)MEMORY[0x1E4F940C8];
          BOOL v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_103;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_125;
        }
        uint64_t v49 = objc_alloc_init(GEOPDResultRefinementMetadata);
        if (GEOPDResultRefinementMetadataReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v50 = 56;
LABEL_81:
          char v52 = *(void **)(a1 + v50);
          *(void *)(a1 + v50) = v49;
LABEL_82:

          --v7;
          goto LABEL_102;
        }
LABEL_124:

LABEL_125:
        int v59 = 0;
        int v60 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        id v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_106:
        if (v61) {
LABEL_107:
        }
          *(_WORD *)(a1 + v60[38]) |= 2u;
        if (v64 || (v59 & 1) == 0)
        {
          *(_WORD *)(a1 + v60[38]) |= 0x80u;
          *(_WORD *)(a1 + v60[38]) |= 0x20u;
          *(_WORD *)(a1 + v60[38]) |= 4u;
          *(_WORD *)(a1 + v60[38]) |= 0x10u;
          *(_WORD *)(a1 + v60[38]) |= 8u;
          *(_WORD *)(a1 + v60[38]) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            int v55 = *v19++;
            __int16 v56 = 128;
            switch(v55)
            {
              case 0:
                goto LABEL_118;
              case 2:
                goto LABEL_117;
              case 3:
                __int16 v56 = 32;
                goto LABEL_117;
              case 4:
                __int16 v56 = 4;
                goto LABEL_117;
              case 5:
                __int16 v56 = 16;
                goto LABEL_117;
              case 6:
                __int16 v56 = 8;
                goto LABEL_117;
              case 7:
                __int16 v56 = 64;
LABEL_117:
                *(_WORD *)(a1 + v60[38]) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_118:
        if (v59) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v64)
        {
          unint64_t v57 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v61 & 1) == 0 || (*(_WORD *)(a1 + 88) & 2) != 0)
        {
LABEL_83:
          char v53 = PBReaderSkipValueWithTag();
          BOOL v22 = (int *)MEMORY[0x1E4F940B8];
          id v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v59 = 0;
LABEL_105:
            int v60 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_106;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          id v21 = (int *)MEMORY[0x1E4F940C8];
          BOOL v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v48)
          {
            int v59 = 0;
            int v60 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_107;
          }
        }
LABEL_103:
        if (!(v62 & 1 | (v7 != 0))) {
          goto LABEL_104;
        }
        continue;
    }
  }
}

void sub_189C1C8C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C1CA08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C1D1C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C1D2B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDResultRefinementGuidesHomeCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 64) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  -[GEOPDRelatedSearchSuggestion readAll:](*(void *)(a1 + 40), 1);
  __int16 v2 = *(void **)(a1 + 56);

  return [v2 readAll:1];
}

unint64_t GEOPDResultRefinementGuidesHomeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDResultRefinementGuidesHomeReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDResultRefinementGuidesHomeReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDResultRefinementGuidesHomeReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDResultRefinementGuidesHomeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDResultRefinementGuidesHomeCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189C1D99C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C1DBD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDResultRefinementGuidesHomeIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  __int16 v2 = *(_WORD *)(a1 + 88);
  if ((v2 & 0x1A4) != 0) {
    return 1;
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEOPDRelatedSearchSuggestionIsDirty(*(void *)(a1 + 40))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 0x40) == 0) {
    return 0;
  }
  v4 = *(os_unfair_lock_s **)(a1 + 56);

  return (uint64_t)GEOPDResultRefinementMetadataIsDirty(v4);
}

os_unfair_lock_s *GEOPDResultRefinementGuidesHomeIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDResultRefinementGuidesHomeIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189C1DF10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C1E55C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v62 = v17;
        char v63 = v18 | v17;
        char v61 = v7;
        if ((v18 | v7)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v64 = (v19 == 0) | v18;
        BOOL v65 = v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        id v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_79;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_79:
      int v59 = 1;
      goto LABEL_80;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v65;
    if ((v64 & 1) == 0)
    {
      uint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if (!v34) {
        goto LABEL_66;
      }
      if ((*(unsigned char *)(a1 + 56) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_100;
        }
        id v46 = objc_alloc_init(GEOPDResultRefinementMetadataSort);
        if (!GEOPDResultRefinementMetadataSortReadAllFrom((uint64_t)v46, (void *)v3)) {
          goto LABEL_99;
        }
        PBReaderRecallMark();
        uint64_t v47 = 32;
LABEL_59:
        int v48 = *(void **)(a1 + v47);
        *(void *)(a1 + v47) = v46;

        --v8;
LABEL_77:
        id v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_78;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_100;
      }
      char v53 = 16 * *(unsigned char *)(a1 + 56);
LABEL_76:
      v8 += v53 >> 7;
      goto LABEL_77;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v61)
      {
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_69;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_71;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_69:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_71:
        *(_DWORD *)(a1 + 52) = v41;
        goto LABEL_78;
      }
    }
    else if ((v62 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v51 = PBUnknownFieldAdd();
      id v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v51)
      {
        int v59 = 0;
        int v60 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        goto LABEL_82;
      }
      goto LABEL_78;
    }
LABEL_66:
    char v52 = PBReaderSkipValueWithTag();
    id v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v52 & 1) == 0)
    {
      int v59 = 0;
LABEL_80:
      int v60 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
      goto LABEL_81;
    }
LABEL_78:
    if (!(v63 & 1 | (v8 != 0))) {
      goto LABEL_79;
    }
  }
  if (!v34) {
    goto LABEL_66;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_100;
    }
    char v53 = 32 * *(unsigned char *)(a1 + 56);
    goto LABEL_76;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_100;
  }
  id v46 = objc_alloc_init(GEOPDResultRefinementMetadataDefault);
  if (GEOPDResultRefinementMetadataDefaultReadAllFrom((uint64_t)v46, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v47 = 24;
    goto LABEL_59;
  }
LABEL_99:

LABEL_100:
  int v59 = 0;
  int v60 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
  id v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_81:
  if ((v62 & 1) == 0) {
    goto LABEL_83;
  }
LABEL_82:
  *(unsigned char *)(a1 + v60[47]) |= 2u;
LABEL_83:
  if (v65 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[47]) |= 4u;
    *(unsigned char *)(a1 + v60[47]) |= 8u;
    goto LABEL_93;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v19++;
        int v54 = v55;
        if (v55 == 2) {
          break;
        }
        if (v54 == 3)
        {
          char v56 = 8;
          goto LABEL_92;
        }
        if (!v54) {
          goto LABEL_93;
        }
      }
      char v56 = 4;
LABEL_92:
      *(unsigned char *)(a1 + v60[47]) |= v56;
      continue;
    }
  }
LABEL_93:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v65)
  {
    unint64_t v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189C1ED0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C1F4DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDResultRefinementMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDResultRefinementMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDResultRefinementMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDResultRefinementMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189C1F694(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDResultRefinementMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C1F6F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementMetadataDefaultIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_54;
          }
          goto LABEL_32;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_50;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_51;
          }
        case 3u:
          if (v15 == 2) {
            goto LABEL_32;
          }
          goto LABEL_54;
        case 4u:
          if (v15 == 2) {
            goto LABEL_32;
          }
          goto LABEL_54;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_50;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_51;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v28 = 0;
          break;
        default:
LABEL_32:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_54:
          BOOL v33 = 0;
          goto LABEL_53;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_51;
      }
LABEL_50:
      a1[*v4] = 1;
LABEL_51:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
LABEL_53:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOPDResultRefinementMetadataSortIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 2u:
          if (v15 == 2) {
            goto LABEL_28;
          }
          goto LABEL_66;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v38 = 0;
          break;
        default:
LABEL_28:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_66:
          BOOL v43 = 0;
          goto LABEL_65;
      }
      while (1)
      {
        uint64_t v39 = *v2;
        uint64_t v40 = *(void *)&a1[v39];
        unint64_t v41 = v40 + 1;
        if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
          break;
        }
        int v42 = *(char *)(*(void *)&a1[*v5] + v40);
        *(void *)&a1[v39] = v41;
        if (v42 < 0)
        {
          BOOL v22 = v38++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_63;
      }
LABEL_62:
      a1[*v4] = 1;
LABEL_63:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v43 = a1[*v4] == 0;
LABEL_65:
  PBReaderRecallMark();
  return v43;
}

void sub_189C1FF24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDResultRefinementMetadataIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 56);
  if ((v2 & 0x10) != 0) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    if (GEOPDResultRefinementMetadataDefaultIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 56);
  }
  return (v2 >> 3) & 1;
}

os_unfair_lock_s *GEOPDResultRefinementMetadataIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDResultRefinementMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189C202B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C205C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C2088C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementMetadataDefaultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFBFFFCFFFALL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v72 = v15 | v8;
        char v73 = v16 | v15 | v8;
        if ((v16 | v9)) {
          unsigned int v17 = 0;
        }
        else {
          unsigned int v17 = a3;
        }
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        char v74 = (v17 == 0) | v16;
        BOOL v75 = v16;
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_101;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_101:
      int v70 = 1;
      goto LABEL_102;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v75;
    if ((v74 & 1) == 0)
    {
      unsigned int v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x10) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 24;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_118;
        }
        char v65 = 8 * *(unsigned char *)(a1 + 72);
        goto LABEL_98;
      case 2:
        if ((v9 & 1) == 0) {
          goto LABEL_77;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        while (2)
        {
          uint64_t v45 = *v18;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v20) + v46);
            *(void *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v28 = v43++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v44) = 0;
        }
LABEL_82:
        uint64_t v64 = 60;
        goto LABEL_87;
      case 3:
        if (!v32) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x40) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 40;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_118;
        }
        char v65 = 2 * *(unsigned char *)(a1 + 72);
        goto LABEL_98;
      case 4:
        if (!v32) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x20) == 0)
        {
          uint64_t v37 = PBReaderReadData();
          uint64_t v38 = 32;
LABEL_60:
          id v49 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          --v10;
LABEL_99:
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_100;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v65 = 4 * *(unsigned char *)(a1 + 72);
LABEL_98:
          v10 += v65 >> 7;
          goto LABEL_99;
        }
LABEL_118:
        int v70 = 0;
        unint64_t v71 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_103:
        if (v72) {
LABEL_104:
        }
          *(unsigned char *)(a1 + v71[50]) |= 8u;
        if (v75 || (v70 & 1) == 0)
        {
          *(unsigned char *)(a1 + v71[50]) |= 0x10u;
          *(unsigned char *)(a1 + v71[50]) |= 0x40u;
          *(unsigned char *)(a1 + v71[50]) |= 0x20u;
        }
        else if (v17)
        {
          while (1)
          {
            int v66 = *v17++;
            char v67 = 16;
            switch(v66)
            {
              case 0:
                goto LABEL_112;
              case 1:
                goto LABEL_111;
              case 3:
                char v67 = 64;
                goto LABEL_111;
              case 4:
                char v67 = 32;
LABEL_111:
                *(unsigned char *)(a1 + v71[50]) |= v67;
                break;
              default:
                continue;
            }
          }
        }
LABEL_112:
        if (v70) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v75)
        {
          unsigned int v68 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
        if ((v9 & 1) == 0) {
          goto LABEL_77;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 72) |= 2u;
        while (2)
        {
          uint64_t v52 = *v18;
          uint64_t v53 = *(void *)(v3 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(v3 + *v20) + v53);
            *(void *)(v3 + v52) = v54;
            v44 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              BOOL v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v44) = 0;
        }
LABEL_86:
        uint64_t v64 = 64;
LABEL_87:
        *(_DWORD *)(a1 + v64) = v44;
        goto LABEL_100;
      case 6:
        if ((v9 & 1) == 0) {
          goto LABEL_77;
        }
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v58 = 0;
        *(unsigned char *)(a1 + 72) |= 4u;
        while (2)
        {
          uint64_t v59 = *v18;
          uint64_t v60 = *(void *)(v3 + v59);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(v3 + *v20) + v60);
            *(void *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              BOOL v28 = v57++ >= 9;
              if (v28)
              {
                uint64_t v58 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v58 = 0;
        }
LABEL_91:
        *(unsigned char *)(a1 + 68) = v58 != 0;
        goto LABEL_100;
      default:
        if ((v72 & 1) == 0 || (*(unsigned char *)(a1 + 72) & 8) != 0)
        {
LABEL_77:
          char v63 = PBReaderSkipValueWithTag();
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v63 & 1) == 0)
          {
            int v70 = 0;
LABEL_102:
            unint64_t v71 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_103;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v40 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v39;
          }
          int v41 = PBUnknownFieldAdd();
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v41)
          {
            int v70 = 0;
            unint64_t v71 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_104;
          }
        }
LABEL_100:
        if (!(v73 & 1 | (v10 != 0))) {
          goto LABEL_101;
        }
        continue;
    }
  }
}

void sub_189C213A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C21510(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C21F68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementMetadataDefaultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDResultRefinementMetadataDefaultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDResultRefinementMetadataDefaultReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDResultRefinementMetadataDefaultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDResultRefinementMetadataDefaultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189C220F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementMetadataDefaultReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDResultRefinementMetadataDefaultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C22158(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C22390(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementMetadataDefaultIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = *(unsigned __int8 *)(a1 + 72) > 0xFu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189C22794(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C22BD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementMetadataSortReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 40) |= 4u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_61;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_63;
              }
            }
            v3[*v6] = 1;
LABEL_61:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_63:
            uint64_t v55 = 32;
            goto LABEL_76;
          case 2u:
            uint64_t v27 = PBReaderReadString();
            BOOL v28 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v27;

            continue;
          case 3u:
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 40) |= 1u;
            while (2)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
                *(void *)&v3[v31] = v33;
                v20 |= (unint64_t)(v34 & 0x7F) << v29;
                if (v34 < 0)
                {
                  v29 += 7;
                  BOOL v15 = v30++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_67;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_67:
            uint64_t v55 = 24;
            goto LABEL_76;
          case 4u:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v37 = 0;
            *(unsigned char *)(a1 + 40) |= 0x10u;
            while (2)
            {
              uint64_t v38 = *v4;
              uint64_t v39 = *(void *)&v3[v38];
              unint64_t v40 = v39 + 1;
              if (v39 == -1 || v40 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v41 = *(unsigned char *)(*(void *)&v3[*v7] + v39);
                *(void *)&v3[v38] = v40;
                v37 |= (unint64_t)(v41 & 0x7F) << v35;
                if (v41 < 0)
                {
                  v35 += 7;
                  BOOL v15 = v36++ >= 9;
                  if (v15)
                  {
                    uint64_t v37 = 0;
                    goto LABEL_71;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v37 = 0;
            }
LABEL_71:
            BOOL v56 = v37 != 0;
            uint64_t v57 = 37;
            goto LABEL_81;
          case 5u:
            char v42 = 0;
            unsigned int v43 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 40) |= 2u;
            while (2)
            {
              uint64_t v44 = *v4;
              uint64_t v45 = *(void *)&v3[v44];
              unint64_t v46 = v45 + 1;
              if (v45 == -1 || v46 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v47 = *(unsigned char *)(*(void *)&v3[*v7] + v45);
                *(void *)&v3[v44] = v46;
                v20 |= (unint64_t)(v47 & 0x7F) << v42;
                if (v47 < 0)
                {
                  v42 += 7;
                  BOOL v15 = v43++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_75;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_75:
            uint64_t v55 = 28;
LABEL_76:
            *(_DWORD *)(a1 + v55) = v20;
            continue;
          case 6u:
            char v48 = 0;
            unsigned int v49 = 0;
            uint64_t v50 = 0;
            *(unsigned char *)(a1 + 40) |= 8u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unint64_t v26 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v25;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_84;
            }
            continue;
        }
        while (1)
        {
          uint64_t v51 = *v4;
          uint64_t v52 = *(void *)&v3[v51];
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)&v3[*v5]) {
            break;
          }
          char v54 = *(unsigned char *)(*(void *)&v3[*v7] + v52);
          *(void *)&v3[v51] = v53;
          v50 |= (unint64_t)(v54 & 0x7F) << v48;
          if ((v54 & 0x80) == 0) {
            goto LABEL_78;
          }
          v48 += 7;
          BOOL v15 = v49++ >= 9;
          if (v15)
          {
            uint64_t v50 = 0;
            goto LABEL_80;
          }
        }
        v3[*v6] = 1;
LABEL_78:
        if (v3[*v6]) {
          uint64_t v50 = 0;
        }
LABEL_80:
        BOOL v56 = v50 != 0;
        uint64_t v57 = 36;
LABEL_81:
        *(unsigned char *)(a1 + v57) = v56;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v58 = v3[*v6] == 0;
  }
  else
  {
LABEL_84:
    BOOL v58 = 0;
  }
  objc_sync_exit(v3);

  return v58;
}

void sub_189C23DE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementMetadataSortReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDResultRefinementMetadataSortReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C23E64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C2482C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementMultiSelectReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 80)), (uint16x4_t)0xFFFAFFFCFFFBFFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 80) >> 3) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v75 = v17;
        char v76 = v7;
        char v77 = v18 | v17;
        if ((v18 | v7)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        char v78 = (v19 == 0) | v18;
        BOOL v79 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
  {
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4) {
      break;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v79;
    if ((v78 & 1) == 0)
    {
      char v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_84;
        }
        if ((*(_WORD *)(a1 + 80) & 0x20) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 32;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_127;
        }
        __int16 v68 = *(_WORD *)(a1 + 80) << 10;
        goto LABEL_105;
      case 2:
        if (!v34 || (*(_WORD *)(a1 + 80) & 0x80) != 0) {
          goto LABEL_84;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_127;
        }
        uint64_t v44 = objc_alloc_init(GEOPDResultRefinementMultiSelectElement);
        if (GEOPDResultRefinementMultiSelectElementReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDResultRefinementMultiSelect _addNoFlagsMultiSelect:](a1, v44);

LABEL_106:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_107;
        }

LABEL_127:
        int v73 = 0;
        char v74 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_110:
        if (v75) {
LABEL_111:
        }
          *(_WORD *)(a1 + v74[52]) |= 8u;
        if (v79 || (v73 & 1) == 0)
        {
          *(_WORD *)(a1 + v74[52]) |= 0x20u;
          *(_WORD *)(a1 + v74[52]) |= 0x80u;
          *(_WORD *)(a1 + v74[52]) |= 0x10u;
          *(_WORD *)(a1 + v74[52]) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            int v69 = *v19++;
            __int16 v70 = 32;
            switch(v69)
            {
              case 0:
                goto LABEL_120;
              case 1:
                goto LABEL_119;
              case 2:
                __int16 v70 = 128;
                goto LABEL_119;
              case 6:
                __int16 v70 = 16;
                goto LABEL_119;
              case 7:
                __int16 v70 = 64;
LABEL_119:
                *(_WORD *)(a1 + v74[52]) |= v70;
                break;
              default:
                continue;
            }
          }
        }
LABEL_120:
        if (v73) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v79)
        {
          unint64_t v71 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if ((v76 & 1) == 0) {
          goto LABEL_84;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(_WORD *)(a1 + 80) |= 2u;
        while (2)
        {
          uint64_t v48 = *v20;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v30 = v46++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_89:
        uint64_t v67 = 72;
        goto LABEL_94;
      case 4:
        if ((v76 & 1) == 0) {
          goto LABEL_84;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v47 = 0;
        *(_WORD *)(a1 + 80) |= 1u;
        while (2)
        {
          uint64_t v54 = *v20;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v22) + v55);
            *(void *)(v3 + v54) = v56;
            v47 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v30 = v53++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_93:
        uint64_t v67 = 68;
LABEL_94:
        *(_DWORD *)(a1 + v67) = v47;
        goto LABEL_107;
      case 5:
        if ((v76 & 1) == 0) {
          goto LABEL_84;
        }
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v60 = 0;
        *(_WORD *)(a1 + 80) |= 4u;
        while (2)
        {
          uint64_t v61 = *v20;
          uint64_t v62 = *(void *)(v3 + v61);
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(v3 + *v22) + v62);
            *(void *)(v3 + v61) = v63;
            v60 |= (unint64_t)(v64 & 0x7F) << v58;
            if (v64 < 0)
            {
              v58 += 7;
              BOOL v30 = v59++ >= 9;
              if (v30)
              {
                uint64_t v60 = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v60 = 0;
        }
LABEL_98:
        *(unsigned char *)(a1 + 76) = v60 != 0;
        goto LABEL_107;
      case 6:
        if (!v34) {
          goto LABEL_84;
        }
        if ((*(_WORD *)(a1 + 80) & 0x10) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 24;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_127;
        }
        __int16 v68 = *(_WORD *)(a1 + 80) << 11;
        goto LABEL_105;
      case 7:
        if (!v34) {
          goto LABEL_84;
        }
        if ((*(_WORD *)(a1 + 80) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_127;
          }
          __int16 v68 = *(_WORD *)(a1 + 80) << 9;
LABEL_105:
          v8 += v68 >> 15;
        }
        else
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 40;
LABEL_83:
          char v65 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v8;
        }
        goto LABEL_106;
      default:
        if ((v75 & 1) == 0 || (*(_WORD *)(a1 + 80) & 8) != 0)
        {
LABEL_84:
          char v66 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v66 & 1) == 0)
          {
            int v73 = 0;
LABEL_109:
            char v74 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_110;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v73 = 0;
            char v74 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_111;
          }
        }
LABEL_107:
        if (!(v77 & 1 | (v8 != 0))) {
          goto LABEL_108;
        }
        break;
    }
  }
LABEL_108:
  int v73 = 1;
  goto LABEL_109;
}

void sub_189C25290(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C25530(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C256C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C25DB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDResultRefinementMultiSelectCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 48);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        -[GEOPDResultRefinementMultiSelectElement readAll:](*(void *)(*((void *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDResultRefinementMultiSelectReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDResultRefinementMultiSelectReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDResultRefinementMultiSelectReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDResultRefinementMultiSelectReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDResultRefinementMultiSelectReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDResultRefinementMultiSelectCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189C26120(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C263FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C26714(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C26CA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementMultiSelectElementReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (const __int16 *)(a1 + 76);
  uint16x4_t v13 = (uint16x4_t)vld1_dup_s16(v12);
  int16x4_t v14 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v13, (uint16x4_t)0xFFFCFFFAFFFBFFF9), (int8x8_t)0x1000100010001);
  v14.i16[0] = vaddv_s16(v14);
  unsigned int v15 = v14.i32[0];
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 1;
        char v20 = v19 & ~(_BYTE)v11 | v9;
        unsigned __int8 v21 = v19 | v11;
        char v84 = v20;
        char v85 = v8;
        char v86 = v21 | v20;
        if ((v21 | v8)) {
          uint64_t v22 = 0;
        }
        else {
          uint64_t v22 = a3;
        }
        char v87 = (v22 == 0) | v21;
        BOOL v88 = v21;
        char v23 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v25 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v9;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v23) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v24)) {
      goto LABEL_120;
    }
    char v26 = 0;
    unsigned int v27 = 0;
    unint64_t v28 = 0;
    while (1)
    {
      uint64_t v29 = *v23;
      uint64_t v30 = *(void *)(v3 + v29);
      unint64_t v31 = v30 + 1;
      if (v30 == -1 || v31 > *(void *)(v3 + *v6)) {
        break;
      }
      char v32 = *(unsigned char *)(*(void *)(v3 + *v25) + v30);
      *(void *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0) {
        goto LABEL_25;
      }
      v26 += 7;
      BOOL v33 = v27++ >= 9;
      if (v33)
      {
        unint64_t v28 = 0;
        int v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v24) = 1;
LABEL_25:
    int v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(unsigned char *)(v3 + *v24)) {
      unint64_t v28 = 0;
    }
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_120:
      int v82 = 1;
      goto LABEL_121;
    }
    unint64_t v36 = v28 >> 3;
    BOOL v37 = v88;
    if ((v87 & 1) == 0)
    {
      BOOL v38 = v22;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37) {
          goto LABEL_92;
        }
        if ((*(_WORD *)(a1 + 76) & 0x20) == 0)
        {
          uint64_t v42 = PBReaderReadString();
          int v43 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v42;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_138;
        }
        __int16 v77 = *(_WORD *)(a1 + 76) << 10;
        goto LABEL_117;
      case 2:
        if ((v85 & 1) == 0) {
          goto LABEL_92;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        *(_WORD *)(a1 + 76) |= 8u;
        while (2)
        {
          uint64_t v50 = *v23;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v25) + v51);
            *(void *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v33 = v48++ >= 9;
              if (v33)
              {
                uint64_t v49 = 0;
                goto LABEL_97;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v49 = 0;
        }
LABEL_97:
        *(unsigned char *)(a1 + 72) = v49 != 0;
        goto LABEL_119;
      case 3:
        if (!v37) {
          goto LABEL_92;
        }
        if ((*(_WORD *)(a1 + 76) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_138;
          }
          __int16 v77 = *(_WORD *)(a1 + 76) << 8;
          goto LABEL_117;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_138;
        }
        uint64_t v54 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v54, (void *)v3)) {
          goto LABEL_137;
        }
        PBReaderRecallMark();
        uint64_t v55 = 40;
        goto LABEL_66;
      case 4:
        if (!v37) {
          goto LABEL_92;
        }
        if ((*(_WORD *)(a1 + 76) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_138;
          }
          __int16 v77 = *(_WORD *)(a1 + 76) << 9;
LABEL_117:
          v7 += v77 >> 15;
LABEL_118:
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_119;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_138;
        }
        uint64_t v54 = objc_alloc_init(GEOPDResultRefinementMetadata);
        if (GEOPDResultRefinementMetadataReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v55 = 32;
LABEL_66:
          int v43 = *(void **)(a1 + v55);
          *(void *)(a1 + v55) = v54;
LABEL_67:

          --v7;
          goto LABEL_118;
        }
LABEL_137:

LABEL_138:
        int v82 = 0;
        BOOL v83 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_122:
        if (v84) {
LABEL_123:
        }
          *(_WORD *)(a1 + v83[63]) |= 0x10u;
        if (v88 || (v82 & 1) == 0)
        {
          *(_WORD *)(a1 + v83[63]) |= 0x20u;
          *(_WORD *)(a1 + v83[63]) |= 0x80u;
          *(_WORD *)(a1 + v83[63]) |= 0x40u;
        }
        else if (v22)
        {
          while (1)
          {
            int v78 = *v22++;
            __int16 v79 = 32;
            switch(v78)
            {
              case 0:
                goto LABEL_131;
              case 1:
                goto LABEL_130;
              case 3:
                __int16 v79 = 128;
                goto LABEL_130;
              case 4:
                __int16 v79 = 64;
LABEL_130:
                *(_WORD *)(a1 + v83[63]) |= v79;
                break;
              default:
                continue;
            }
          }
        }
LABEL_131:
        if (v82) {
          unint64_t v3 = *(unsigned char *)(v3 + *v24) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v88)
        {
          char v80 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
        if ((v85 & 1) == 0) {
          goto LABEL_92;
        }
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v58 = 0;
        *(_WORD *)(a1 + 76) |= 1u;
        while (2)
        {
          uint64_t v59 = *v23;
          uint64_t v60 = *(void *)(v3 + v59);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(v3 + *v25) + v60);
            *(void *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              BOOL v33 = v57++ >= 9;
              if (v33)
              {
                LODWORD(v58) = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v58) = 0;
        }
LABEL_101:
        uint64_t v76 = 60;
        goto LABEL_110;
      case 6:
        if ((v85 & 1) == 0) {
          goto LABEL_92;
        }
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v58 = 0;
        *(_WORD *)(a1 + 76) |= 2u;
        while (2)
        {
          uint64_t v65 = *v23;
          uint64_t v66 = *(void *)(v3 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(v3 + *v25) + v66);
            *(void *)(v3 + v65) = v67;
            v58 |= (unint64_t)(v68 & 0x7F) << v63;
            if (v68 < 0)
            {
              v63 += 7;
              BOOL v33 = v64++ >= 9;
              if (v33)
              {
                LODWORD(v58) = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v58) = 0;
        }
LABEL_105:
        uint64_t v76 = 64;
        goto LABEL_110;
      case 7:
        if ((v85 & 1) == 0) {
          goto LABEL_92;
        }
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v58 = 0;
        *(_WORD *)(a1 + 76) |= 4u;
        while (2)
        {
          uint64_t v71 = *v23;
          uint64_t v72 = *(void *)(v3 + v71);
          unint64_t v73 = v72 + 1;
          if (v72 == -1 || v73 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v74 = *(unsigned char *)(*(void *)(v3 + *v25) + v72);
            *(void *)(v3 + v71) = v73;
            v58 |= (unint64_t)(v74 & 0x7F) << v69;
            if (v74 < 0)
            {
              v69 += 7;
              BOOL v33 = v70++ >= 9;
              if (v33)
              {
                LODWORD(v58) = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v58) = 0;
        }
LABEL_109:
        uint64_t v76 = 68;
LABEL_110:
        *(_DWORD *)(a1 + v76) = v58;
        goto LABEL_119;
      default:
        if ((v84 & 1) == 0 || (*(_WORD *)(a1 + 76) & 0x10) != 0)
        {
LABEL_92:
          char v75 = PBReaderSkipValueWithTag();
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v75 & 1) == 0)
          {
            int v82 = 0;
LABEL_121:
            BOOL v83 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_122;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v44 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v45 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v44;
          }
          int v46 = PBUnknownFieldAdd();
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
          if (!v46)
          {
            int v82 = 0;
            BOOL v83 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_123;
          }
        }
LABEL_119:
        if (!(v86 & 1 | (v7 != 0))) {
          goto LABEL_120;
        }
        continue;
    }
  }
}

void sub_189C27788(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C27E50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C27F5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementMultiSelectElementReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDResultRefinementMultiSelectElementReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDResultRefinementMultiSelectElementReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDResultRefinementMultiSelectElementReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDResultRefinementMultiSelectElementReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 40) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189C281F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C2846C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C28688(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C28840(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C289D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C28E90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementOpenOptionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDResultRefinementOpenOptionsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDResultRefinementOpenOptionsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDResultRefinementOpenOptionsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDResultRefinementOpenOptionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    -[GEOPDResultRefinementToggle readAll:](*(void *)(a1 + 40), 1);
    -[GEOPDResultRefinementTime readAll:](*(void *)(a1 + 32), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189C29124(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C292D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDResultRefinementOpenOptionsIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v2 = *(unsigned char *)(a1 + 60);
  if ((v2 & 0x12) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) != 0)
  {
    if (GEOPDResultRefinementToggleIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 60);
  }
  if ((v2 & 4) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 32);
  if (!v4) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  uint64_t v5 = _GEOPDResultRefinementTimeIsDirty((uint64_t)v4);
  os_unfair_lock_unlock(v4 + 14);
  return (uint64_t)v5;
}

void sub_189C2952C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C29948(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementQueryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFEFFFCFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 1;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v59 = v18;
        char v60 = v19 | v18;
        if ((v19 | v9)) {
          char v20 = 0;
        }
        else {
          char v20 = a3;
        }
        unsigned __int8 v21 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        char v61 = (v20 == 0) | v19;
        BOOL v62 = v19;
        char v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_79;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_79:
      int v57 = 1;
      goto LABEL_80;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v62;
    if ((v61 & 1) == 0)
    {
      unint64_t v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35 || (*(unsigned char *)(a1 + 64) & 0x10) != 0) {
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_96;
        }
        int v40 = objc_alloc_init(GEOPDResultRefinement);
        if (!GEOPDResultRefinementReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_95;
        }
        PBReaderRecallMark();
        -[GEOPDResultRefinementQuery _addNoFlagsRefinement:](a1, v40);
        goto LABEL_60;
      case 2:
        if (!v35) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 64) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_96;
          }
          v8 += *(unsigned __int8 *)(a1 + 64) << 28 >> 31;
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_96;
        }
        int v40 = objc_alloc_init(GEOPDRefinementSessionState);
        if (GEOPDRefinementSessionStateReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          id v44 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v40;

          --v8;
LABEL_77:
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_78:
          if (!(v60 & 1 | (v8 != 0))) {
            goto LABEL_79;
          }
          continue;
        }
LABEL_95:

LABEL_96:
        int v57 = 0;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_80:
        uint64_t v58 = &OBJC_IVAR___GEONonTiledAssets__flags;
        if (v59) {
LABEL_81:
        }
          *(unsigned char *)(a1 + v58[343]) |= 2u;
        if (v62 || (v57 & 1) == 0)
        {
          *(unsigned char *)(a1 + v58[343]) |= 0x10u;
          *(unsigned char *)(a1 + v58[343]) |= 8u;
          *(unsigned char *)(a1 + v58[343]) |= 4u;
        }
        else if (v20)
        {
          while (1)
          {
            int v53 = *v20++;
            char v54 = 16;
            switch(v53)
            {
              case 0:
                goto LABEL_89;
              case 1:
                goto LABEL_88;
              case 2:
                char v54 = 8;
                goto LABEL_88;
              case 3:
                char v54 = 4;
LABEL_88:
                *(unsigned char *)(a1 + v58[343]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_89:
        if (v57) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v62)
        {
          uint64_t v55 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if (!v35 || (*(unsigned char *)(a1 + 64) & 4) != 0) {
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_96;
        }
        int v40 = objc_alloc_init(GEOPDResultRefinementSection);
        if (!GEOPDResultRefinementSectionReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_95;
        }
        PBReaderRecallMark();
        -[GEOPDResultRefinementQuery _addNoFlagsRefinementSection:](a1, v40);
LABEL_60:

        goto LABEL_77;
      case 4:
        if ((v9 & 1) == 0) {
          goto LABEL_69;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (2)
        {
          uint64_t v48 = *v21;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v23) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v31 = v46++ >= 9;
              if (v31)
              {
                LODWORD(v47) = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v47) = 0;
        }
LABEL_74:
        *(_DWORD *)(a1 + 60) = v47;
        goto LABEL_78;
      default:
        if ((v59 & 1) == 0 || (*(unsigned char *)(a1 + 64) & 2) != 0)
        {
LABEL_69:
          char v52 = PBReaderSkipValueWithTag();
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v52 & 1) == 0)
          {
            int v57 = 0;
            goto LABEL_80;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v43)
          {
            int v57 = 0;
            uint64_t v58 = &OBJC_IVAR___GEONonTiledAssets__flags;
            goto LABEL_81;
          }
        }
        goto LABEL_78;
    }
  }
}

void sub_189C2A418(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C2AFB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementQueryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDResultRefinementQueryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDResultRefinementQueryReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDResultRefinementQueryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDResultRefinementQueryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDResultRefinementQueryCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189C2B150(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementQueryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDResultRefinementQueryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C2B1B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementQueryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDResultRefinementIsValid(a1)) {
            goto LABEL_32;
          }
          goto LABEL_46;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDRefinementSessionStateIsValid(a1)) {
            goto LABEL_46;
          }
          goto LABEL_32;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementSectionIsValid(a1)) {
            goto LABEL_46;
          }
LABEL_32:
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v17 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_33;
      }
      a1[*v4] = 1;
LABEL_33:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

uint64_t _GEOPDResultRefinementQueryIsDirty(uint64_t a1)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v2 = *(unsigned char *)(a1 + 64);
  if ((v2 & 0x30) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 64) & 8) != 0)
  {
    if (GEOPDRefinementSessionStateIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 64);
  }
  if ((v2 & 4) == 0)
  {
    if ((v2 & 0x10) == 0) {
      return 0;
    }
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v5 = *(id *)(a1 + 40);
    uint64_t v6 = [v5 countByEnumeratingWithState:&v20 objects:v25 count:16];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)v21;
LABEL_12:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v21 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(os_unfair_lock_s **)(*((void *)&v20 + 1) + 8 * v9);
        if (v10)
        {
          os_unfair_lock_lock_with_options();
          char IsDirty = _GEOPDResultRefinementIsDirty((uint64_t)v10);
          os_unfair_lock_unlock(v10 + 20);
          if (IsDirty) {
            break;
          }
        }
        if (v7 == ++v9)
        {
          uint64_t v7 = [v5 countByEnumeratingWithState:&v20 objects:v25 count:16];
          if (v7) {
            goto LABEL_12;
          }
          goto LABEL_19;
        }
      }
    }
    else
    {
LABEL_19:

      if ((*(unsigned char *)(a1 + 64) & 4) == 0) {
        return 0;
      }
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      id v5 = *(id *)(a1 + 24);
      uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v24 count:16];
      if (!v3)
      {
LABEL_31:

        return v3;
      }
      uint64_t v12 = *(void *)v17;
LABEL_22:
      uint64_t v13 = 0;
      while (1)
      {
        if (*(void *)v17 != v12) {
          objc_enumerationMutation(v5);
        }
        uint64_t v14 = *(void *)(*((void *)&v16 + 1) + 8 * v13);
        if (v14)
        {
          os_unfair_lock_lock_with_options();
          os_unfair_lock_assert_owner((const os_unfair_lock *)(v14 + 56));
          int v15 = *(unsigned char *)(v14 + 60) & 0x1E;
          os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 56));
          if (v15) {
            break;
          }
        }
        if (v3 == ++v13)
        {
          uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v24 count:16];
          if (v3) {
            goto LABEL_22;
          }
          goto LABEL_31;
        }
      }
    }
    uint64_t v3 = 1;
    goto LABEL_31;
  }
  return 1;
}

os_unfair_lock_s *GEOPDResultRefinementQueryIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDResultRefinementQueryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189C2BE9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementRangeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v62 = v17;
        char v63 = v18 | v17;
        char v61 = v8;
        if ((v18 | v8)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        long long v20 = (int *)MEMORY[0x1E4F940E8];
        long long v21 = (int *)MEMORY[0x1E4F940C8];
        char v64 = (v19 == 0) | v18;
        BOOL v65 = v18;
        long long v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_83;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_83:
      int v59 = 1;
      goto LABEL_84;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v65;
    if ((v64 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v61 & 1) == 0) {
          goto LABEL_68;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_71;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_73;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_71:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_73:
        *(_DWORD *)(a1 + 60) = v41;
        goto LABEL_82;
      case 2:
        if (!v34) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 64) & 4) == 0)
        {
          uint64_t v49 = PBReaderReadString();
          unint64_t v50 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v49;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_101;
        }
        char v54 = 32 * *(unsigned char *)(a1 + 64);
        goto LABEL_80;
      case 3:
        if (!v34) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 64) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_101;
          }
          char v54 = 16 * *(unsigned char *)(a1 + 64);
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        char v51 = objc_alloc_init(GEOPDResultRefinementRangeContinuous);
        if (!GEOPDResultRefinementRangeContinuousReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1)) {
          goto LABEL_100;
        }
        PBReaderRecallMark();
        uint64_t v52 = 32;
        goto LABEL_66;
      case 4:
        if (!v34) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 64) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_101;
          }
          char v54 = 8 * *(unsigned char *)(a1 + 64);
LABEL_80:
          v7 += v54 >> 7;
LABEL_81:
          long long v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_82;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        char v51 = objc_alloc_init(GEOPDResultRefinementRangeDiscrete);
        if (GEOPDResultRefinementRangeDiscreteReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v52 = 40;
LABEL_66:
          unint64_t v50 = *(void **)(a1 + v52);
          *(void *)(a1 + v52) = v51;
LABEL_67:

          --v7;
          goto LABEL_81;
        }
LABEL_100:

LABEL_101:
        int v59 = 0;
        char v60 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        long long v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
        if (v62) {
LABEL_86:
        }
          *(unsigned char *)(a1 + v60[82]) |= 2u;
        if (v65 || (v59 & 1) == 0)
        {
          *(unsigned char *)(a1 + v60[82]) |= 4u;
          *(unsigned char *)(a1 + v60[82]) |= 8u;
          *(unsigned char *)(a1 + v60[82]) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            int v55 = *v19++;
            char v56 = 4;
            switch(v55)
            {
              case 0:
                goto LABEL_94;
              case 2:
                goto LABEL_93;
              case 3:
                char v56 = 8;
                goto LABEL_93;
              case 4:
                char v56 = 16;
LABEL_93:
                *(unsigned char *)(a1 + v60[82]) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_94:
        if (v59) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v65)
        {
          int v57 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v62 & 1) == 0 || (*(unsigned char *)(a1 + 64) & 2) != 0)
        {
LABEL_68:
          char v53 = PBReaderSkipValueWithTag();
          long long v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v59 = 0;
LABEL_84:
            char v60 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_85;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          long long v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v48)
          {
            int v59 = 0;
            char v60 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_86;
          }
        }
LABEL_82:
        if (!(v63 & 1 | (v7 != 0))) {
          goto LABEL_83;
        }
        continue;
    }
  }
}

void sub_189C2CB88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementRangeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDResultRefinementRangeReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDResultRefinementRangeReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDResultRefinementRangeReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDResultRefinementRangeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDResultRefinementRangeContinuous readAll:](*(void *)(a1 + 32), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189C2CE08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C2CFE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDResultRefinementRangeIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 64);
  if ((v2 & 0x24) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    uint64_t v4 = *(os_unfair_lock_s **)(a1 + 32);
    if (v4)
    {
      os_unfair_lock_lock_with_options();
      BOOL IsDirty = _GEOPDResultRefinementRangeContinuousIsDirty((uint64_t)v4);
      os_unfair_lock_unlock(v4 + 18);
      if (IsDirty) {
        return 1;
      }
      unsigned int v2 = *(unsigned __int8 *)(a1 + 64);
    }
  }
  return (v2 >> 4) & 1;
}

void sub_189C2D268(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementRangeContinuousReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = v6;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  int v13 = ((*(unsigned __int8 *)(a1 + 76) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 != 0;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v63 = v18;
        char v64 = v19 | v18;
        if ((v19 | v8)) {
          long long v20 = 0;
        }
        else {
          long long v20 = a3;
        }
        long long v21 = (int *)MEMORY[0x1E4F940E8];
        long long v22 = (int *)MEMORY[0x1E4F940C8];
        char v65 = (v20 == 0) | v19;
        BOOL v66 = v19;
        char v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v9;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_84;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      if (v25++ >= 9)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_84:
      int v61 = 1;
      goto LABEL_85;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v66;
    if ((v65 & 1) == 0)
    {
      int v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_105;
          }
          unsigned int v40 = objc_alloc_init(GEOPDResultRefinementRangeElement);
          if (GEOPDResultRefinementRangeElementReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
          {
            PBReaderRecallMark();
            uint64_t v41 = 48;
            goto LABEL_55;
          }
          goto LABEL_104;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_105;
        }
        char v54 = 4 * *(unsigned char *)(a1 + 76);
        goto LABEL_74;
      case 2:
        if (!v35) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_105;
          }
          char v54 = 8 * *(unsigned char *)(a1 + 76);
LABEL_74:
          v9 += v54 >> 7;
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_105;
        }
        unsigned int v40 = objc_alloc_init(GEOPDResultRefinementRangeElement);
        if (GEOPDResultRefinementRangeElementReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v41 = 40;
LABEL_55:
          char v45 = *(void **)(a1 + v41);
          *(void *)(a1 + v41) = v40;

          --v9;
LABEL_75:
          long long v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          goto LABEL_83;
        }
LABEL_104:

LABEL_105:
        int v61 = 0;
        char v62 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        long long v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_86:
        if (v63) {
LABEL_87:
        }
          *(unsigned char *)(a1 + v62[88]) |= 8u;
        if (v66 || (v61 & 1) == 0)
        {
          *(unsigned char *)(a1 + v62[88]) |= 0x20u;
          *(unsigned char *)(a1 + v62[88]) |= 0x10u;
          goto LABEL_98;
        }
        if (v20)
        {
          while (1)
          {
            int v58 = *v20++;
            int v57 = v58;
            if (v58 == 1) {
              break;
            }
            if (v57 == 2)
            {
              char v56 = 16;
LABEL_94:
              *(unsigned char *)(a1 + v62[88]) |= v56;
            }
            else if (!v57)
            {
              goto LABEL_98;
            }
          }
          char v56 = 32;
          goto LABEL_94;
        }
LABEL_98:
        if (v61) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v66)
        {
          int v59 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_68;
        }
        *(unsigned char *)(a1 + 76) |= 4u;
        uint64_t v46 = *v21;
        unint64_t v47 = *(void *)(v3 + v46);
        if (v47 <= 0xFFFFFFFFFFFFFFF7 && v47 + 8 <= *(void *)(v3 + *v7))
        {
          uint64_t v48 = *(void *)(*(void *)(v3 + *v23) + v47);
          *(void *)(v3 + v46) = v47 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v22) = 1;
          uint64_t v48 = 0;
        }
        uint64_t v55 = 56;
        goto LABEL_82;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_68;
        }
        *(unsigned char *)(a1 + 76) |= 2u;
        uint64_t v49 = *v21;
        unint64_t v50 = *(void *)(v3 + v49);
        if (v50 <= 0xFFFFFFFFFFFFFFF7 && v50 + 8 <= *(void *)(v3 + *v7))
        {
          uint64_t v48 = *(void *)(*(void *)(v3 + *v23) + v50);
          *(void *)(v3 + v49) = v50 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v22) = 1;
          uint64_t v48 = 0;
        }
        uint64_t v55 = 32;
        goto LABEL_82;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_68;
        }
        *(unsigned char *)(a1 + 76) |= 1u;
        uint64_t v51 = *v21;
        unint64_t v52 = *(void *)(v3 + v51);
        if (v52 <= 0xFFFFFFFFFFFFFFF7 && v52 + 8 <= *(void *)(v3 + *v7))
        {
          uint64_t v48 = *(void *)(*(void *)(v3 + *v23) + v52);
          *(void *)(v3 + v51) = v52 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v22) = 1;
          uint64_t v48 = 0;
        }
        uint64_t v55 = 24;
LABEL_82:
        *(void *)(a1 + v55) = v48;
        goto LABEL_83;
      default:
        if ((v63 & 1) == 0 || (*(unsigned char *)(a1 + 76) & 8) != 0)
        {
LABEL_68:
          char v53 = PBReaderSkipValueWithTag();
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          long long v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v61 = 0;
LABEL_85:
            char v62 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_86;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v43 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v42;
          }
          int v44 = PBUnknownFieldAdd();
          long long v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v44)
          {
            int v61 = 0;
            char v62 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_87;
          }
        }
LABEL_83:
        if (!(v64 & 1 | (v9 != 0))) {
          goto LABEL_84;
        }
        continue;
    }
  }
}

void sub_189C2E324(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C2E434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementRangeContinuousReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDResultRefinementRangeContinuousReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDResultRefinementRangeContinuousReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDResultRefinementRangeContinuousReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDResultRefinementRangeContinuousReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    -[GEOPDResultRefinementRangeElement readAll:](*(void *)(a1 + 48), 1);
    -[GEOPDResultRefinementRangeElement readAll:](*(void *)(a1 + 40), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189C2E6C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementRangeElementIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2) {
            goto LABEL_53;
          }
          goto LABEL_38;
        case 2u:
          if (v16 != 1) {
            goto LABEL_53;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_49;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_49;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_48;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 4u:
          if (v16 == 2) {
            goto LABEL_38;
          }
          goto LABEL_53;
        case 5u:
          if (v16 != 2) {
            goto LABEL_53;
          }
LABEL_38:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_53:
          BOOL v32 = 0;
          goto LABEL_52;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v27 = 0;
          break;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_53;
          }
          continue;
      }
      while (1)
      {
        uint64_t v28 = *v2;
        uint64_t v29 = *(void *)&a1[v28];
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
          break;
        }
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v26 = v27++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_48:
      uint64_t v14 = *v4;
LABEL_49:
      a1[v14] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
LABEL_52:
  PBReaderRecallMark();
  return v32;
}

void sub_189C2EBBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDResultRefinementRangeContinuousIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v2 = *(unsigned char *)(a1 + 76);
  if ((v2 & 0x40) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 76) & 0x20) != 0)
  {
    if (GEOPDResultRefinementRangeElementIsDirty(*(void *)(a1 + 48))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 76);
  }
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 40);

  return GEOPDResultRefinementRangeElementIsDirty(v4);
}

void sub_189C2EE5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementRangeDiscreteReadAllFrom(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v5[*v8]) {
          goto LABEL_53;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          goto LABEL_53;
        }
        unint64_t v20 = v12 >> 3;
        if ((v12 >> 3) == 3) {
          break;
        }
        if (v20 == 2)
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v24 = 0;
          *(unsigned char *)(a1 + 32) |= 2u;
          while (1)
          {
            uint64_t v31 = *v6;
            uint64_t v32 = *(void *)&v5[v31];
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)&v5[*v7]) {
              break;
            }
            char v34 = *(unsigned char *)(*(void *)&v5[*v9] + v32);
            *(void *)&v5[v31] = v33;
            v24 |= (unint64_t)(v34 & 0x7F) << v29;
            if ((v34 & 0x80) == 0) {
              goto LABEL_48;
            }
            v29 += 7;
            BOOL v17 = v30++ >= 9;
            if (v17)
            {
              LODWORD(v24) = 0;
              goto LABEL_50;
            }
          }
          v5[*v8] = 1;
LABEL_48:
          if (v5[*v8]) {
            LODWORD(v24) = 0;
          }
LABEL_50:
          uint64_t v37 = 28;
LABEL_51:
          *(_DWORD *)(a1 + v37) = v24;
          goto LABEL_52;
        }
        if (v20 == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_55;
          }
          unsigned int v21 = objc_alloc_init(GEOPDResultRefinementRangeElement);
          if (!GEOPDResultRefinementRangeElementReadAllFrom((uint64_t)v21, v5, a3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          -[GEOPDResultRefinementRangeDiscrete addElement:](a1, v21);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v35 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v36 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v35;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_55;
          }
        }
LABEL_52:
        if (*(void *)&v5[*v6] >= *(void *)&v5[*v7]) {
          goto LABEL_53;
        }
      }
      char v22 = 0;
      unsigned int v23 = 0;
      uint64_t v24 = 0;
      *(unsigned char *)(a1 + 32) |= 1u;
      while (1)
      {
        uint64_t v25 = *v6;
        uint64_t v26 = *(void *)&v5[v25];
        unint64_t v27 = v26 + 1;
        if (v26 == -1 || v27 > *(void *)&v5[*v7]) {
          break;
        }
        char v28 = *(unsigned char *)(*(void *)&v5[*v9] + v26);
        *(void *)&v5[v25] = v27;
        v24 |= (unint64_t)(v28 & 0x7F) << v22;
        if ((v28 & 0x80) == 0) {
          goto LABEL_44;
        }
        v22 += 7;
        BOOL v17 = v23++ >= 9;
        if (v17)
        {
          LODWORD(v24) = 0;
          goto LABEL_46;
        }
      }
      v5[*v8] = 1;
LABEL_44:
      if (v5[*v8]) {
        LODWORD(v24) = 0;
      }
LABEL_46:
      uint64_t v37 = 24;
      goto LABEL_51;
    }
LABEL_53:
    BOOL v38 = v5[*v8] == 0;
  }
  else
  {
LABEL_55:
    BOOL v38 = 0;
  }
  objc_sync_exit(v5);

  return v38;
}

void sub_189C2FB98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementRangeElementReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFAFFFCFFFBLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v68 = v15 | v8;
        char v69 = v16 | v15 | v8;
        if ((v16 | v9)) {
          BOOL v17 = 0;
        }
        else {
          BOOL v17 = a3;
        }
        int v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        char v70 = (v17 == 0) | v16;
        BOOL v71 = v16;
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_94;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_94:
      int v66 = 1;
      goto LABEL_95;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v71;
    if ((v70 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 24;
          goto LABEL_64;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        char v61 = 8 * *(unsigned char *)(a1 + 76);
        goto LABEL_89;
      case 2:
        if ((v9 & 1) == 0) {
          goto LABEL_73;
        }
        *(unsigned char *)(a1 + 76) |= 1u;
        uint64_t v42 = *v18;
        unint64_t v43 = *(void *)(v3 + v42);
        if (v43 <= 0xFFFFFFFFFFFFFFF7 && v43 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v44 = *(void *)(*(void *)(v3 + *v20) + v43);
          *(void *)(v3 + v42) = v43 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v44 = 0;
        }
        *(void *)(a1 + 48) = v44;
        goto LABEL_93;
      case 3:
        if ((v9 & 1) == 0) {
          goto LABEL_73;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 76) |= 4u;
        while (2)
        {
          uint64_t v48 = *v18;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v20) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v28 = v46++ >= 9;
              if (v28)
              {
                uint64_t v47 = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v47 = 0;
        }
LABEL_78:
        *(unsigned char *)(a1 + 72) = v47 != 0;
        goto LABEL_93;
      case 4:
        if (!v32) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 32;
          goto LABEL_64;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        char v61 = 4 * *(unsigned char *)(a1 + 76);
        goto LABEL_89;
      case 5:
        if (!v32) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x40) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 40;
LABEL_64:
          unint64_t v52 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          --v10;
LABEL_90:
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_93;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v61 = 2 * *(unsigned char *)(a1 + 76);
LABEL_89:
          v10 += v61 >> 7;
          goto LABEL_90;
        }
LABEL_111:
        int v66 = 0;
        unint64_t v67 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_96:
        if (v68) {
LABEL_97:
        }
          *(unsigned char *)(a1 + v67[95]) |= 8u;
        if (v71 || (v66 & 1) == 0)
        {
          *(unsigned char *)(a1 + v67[95]) |= 0x10u;
          *(unsigned char *)(a1 + v67[95]) |= 0x20u;
          *(unsigned char *)(a1 + v67[95]) |= 0x40u;
        }
        else if (v17)
        {
          while (1)
          {
            int v62 = *v17++;
            char v63 = 16;
            switch(v62)
            {
              case 0:
                goto LABEL_105;
              case 1:
                goto LABEL_104;
              case 4:
                char v63 = 32;
                goto LABEL_104;
              case 5:
                char v63 = 64;
LABEL_104:
                *(unsigned char *)(a1 + v67[95]) |= v63;
                break;
              default:
                continue;
            }
          }
        }
LABEL_105:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v71)
        {
          char v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 6:
        if ((v9 & 1) == 0) {
          goto LABEL_73;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (2)
        {
          uint64_t v56 = *v18;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v20) + v57);
            *(void *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v28 = v54++ >= 9;
              if (v28)
              {
                LODWORD(v55) = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v55) = 0;
        }
LABEL_82:
        *(_DWORD *)(a1 + 68) = v55;
        goto LABEL_93;
      default:
        if ((v68 & 1) == 0 || (*(unsigned char *)(a1 + 76) & 8) != 0)
        {
LABEL_73:
          char v60 = PBReaderSkipValueWithTag();
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v60 & 1) == 0)
          {
            int v66 = 0;
LABEL_95:
            unint64_t v67 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_96;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v40 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v39;
          }
          int v41 = PBUnknownFieldAdd();
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v41)
          {
            int v66 = 0;
            unint64_t v67 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_97;
          }
        }
LABEL_93:
        if (!(v69 & 1 | (v10 != 0))) {
          goto LABEL_94;
        }
        continue;
    }
  }
}

void sub_189C30DC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C30EA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementRangeElementReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDResultRefinementRangeElementReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDResultRefinementRangeElementReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDResultRefinementRangeElementReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDResultRefinementRangeElementReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189C314F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C31728(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementRangeElementIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = *(unsigned __int8 *)(a1 + 76) > 0xFu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189C319BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C31E94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C3204C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C32600(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C326F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDResultRefinementSectionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        -[GEOPDResultRefinement readAll:](*(void *)(*((void *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDResultRefinementSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDResultRefinementSectionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDResultRefinementSectionReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDResultRefinementSectionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDResultRefinementSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDResultRefinementSectionCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189C32D28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C32F84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C331F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C3354C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementSortReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v67 = v17;
        char v68 = v9;
        char v69 = v18 | v17;
        if ((v18 | v9)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v70 = (v19 == 0) | v18;
        BOOL v71 = v18;
        char v21 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
  {
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4) {
      break;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v71;
    if ((v70 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          unsigned int v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;

          --v10;
          goto LABEL_82;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_105;
        }
        v10 += *(unsigned __int8 *)(a1 + 60) << 28 >> 31;
        goto LABEL_82;
      case 2:
        if (!v34 || (*(unsigned char *)(a1 + 60) & 0x10) != 0) {
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_105;
        }
        uint64_t v44 = objc_alloc_init(GEOPDResultRefinementSortElement);
        if (GEOPDResultRefinementSortElementReadAllFrom((uint64_t)v44, (void *)v3, v7 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDResultRefinementSort _addNoFlagsSort:](a1, v44);

LABEL_82:
          char v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_83;
        }

LABEL_105:
        int v65 = 0;
        int v66 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_86:
        if (v67) {
LABEL_87:
        }
          *(unsigned char *)(a1 + v66[103]) |= 4u;
        if (v71 || (v65 & 1) == 0)
        {
          *(unsigned char *)(a1 + v66[103]) |= 8u;
          *(unsigned char *)(a1 + v66[103]) |= 0x10u;
          goto LABEL_98;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              int v61 = *v19++;
              int v60 = v61;
              if (v61 == 1) {
                break;
              }
              if (v60 == 2)
              {
                char v62 = 16;
                goto LABEL_97;
              }
              if (!v60) {
                goto LABEL_98;
              }
            }
            char v62 = 8;
LABEL_97:
            *(unsigned char *)(a1 + v66[103]) |= v62;
            continue;
          }
        }
LABEL_98:
        if (v65) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v71)
        {
          char v63 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if ((v68 & 1) == 0) {
          goto LABEL_69;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v48 = *v20;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v30 = v46++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_74:
        uint64_t v59 = 56;
        goto LABEL_79;
      case 4:
        if ((v68 & 1) == 0) {
          goto LABEL_69;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v54 = *v20;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v22) + v55);
            *(void *)(v3 + v54) = v56;
            v47 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v30 = v53++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_78:
        uint64_t v59 = 52;
LABEL_79:
        *(_DWORD *)(a1 + v59) = v47;
        goto LABEL_83;
      default:
        if ((v67 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_69:
          char v58 = PBReaderSkipValueWithTag();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v58 & 1) == 0)
          {
            int v65 = 0;
LABEL_85:
            int v66 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_86;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v65 = 0;
            int v66 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_87;
          }
        }
LABEL_83:
        if (!(v69 & 1 | (v10 != 0))) {
          goto LABEL_84;
        }
        break;
    }
  }
LABEL_84:
  int v65 = 1;
  goto LABEL_85;
}

void sub_189C33DB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C34420(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDResultRefinementSortCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        -[GEOPDResultRefinementSortElement readAll:](*(void *)(*((void *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDResultRefinementSortReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDResultRefinementSortReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDResultRefinementSortReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDResultRefinementSortReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDResultRefinementSortReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDResultRefinementSortCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189C3478C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C34A04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDResultRefinementSortIsDirty(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 60) & 0x38) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 0x10) == 0) {
    return 0;
  }
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v3 = *(id *)(a1 + 32);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v3);
        }
        long long v6 = *(os_unfair_lock_s **)(*((void *)&v9 + 1) + 8 * i);
        if (v6)
        {
          os_unfair_lock_lock_with_options();
          char IsDirty = _GEOPDResultRefinementSortElementIsDirty((uint64_t)v6);
          os_unfair_lock_unlock(v6 + 16);
          if (IsDirty)
          {
            uint64_t v2 = 1;
            goto LABEL_16;
          }
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_16:

  return v2;
}

void sub_189C34E20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C352D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementSortElementReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFFFFFDFFFEFFFCLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v55 = v17;
        char v56 = v18 | v17;
        if ((v18 | v8)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v21 = (int *)MEMORY[0x1E4F940C8];
        char v57 = (v19 == 0) | v18;
        BOOL v58 = v18;
        unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_77;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_77:
      int v53 = 1;
      goto LABEL_78;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v58;
    if ((v57 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_64;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 32;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_97;
        }
        char v48 = 32 * *(unsigned char *)(a1 + 68);
        goto LABEL_74;
      case 2:
        if (!v34) {
          goto LABEL_64;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_97;
          }
          char v48 = 8 * *(unsigned char *)(a1 + 68);
          goto LABEL_74;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        uint64_t v44 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v44, (void *)v3)) {
          goto LABEL_96;
        }
        PBReaderRecallMark();
        uint64_t v45 = 48;
        goto LABEL_58;
      case 3:
        if (!v34) {
          goto LABEL_64;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_97;
          }
          char v48 = 16 * *(unsigned char *)(a1 + 68);
LABEL_74:
          v7 += v48 >> 7;
LABEL_75:
          char v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        uint64_t v44 = objc_alloc_init(GEOPDResultRefinementMetadata);
        if (GEOPDResultRefinementMetadataReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v45 = 40;
LABEL_58:
          unsigned int v46 = *(void **)(a1 + v45);
          *(void *)(a1 + v45) = v44;
LABEL_63:

          --v7;
          goto LABEL_75;
        }
LABEL_96:

LABEL_97:
        int v53 = 0;
        uint64_t v54 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_79:
        if (v55) {
LABEL_80:
        }
          *(unsigned char *)(a1 + v54[111]) |= 1u;
        if (v58 || (v53 & 1) == 0)
        {
          *(unsigned char *)(a1 + v54[111]) |= 4u;
          *(unsigned char *)(a1 + v54[111]) |= 0x10u;
          *(unsigned char *)(a1 + v54[111]) |= 8u;
          *(unsigned char *)(a1 + v54[111]) |= 2u;
        }
        else if (v19)
        {
          while (1)
          {
            int v50 = *v19++;
            char v49 = 4;
            switch(v50)
            {
              case 0:
                goto LABEL_90;
              case 1:
                goto LABEL_88;
              case 2:
                char v49 = 16;
                goto LABEL_88;
              case 3:
                char v49 = 8;
                goto LABEL_88;
              case 4:
                char v49 = 2;
LABEL_88:
                *(unsigned char *)(a1 + v54[111]) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_90:
        if (v53) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v58)
        {
          char v51 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if (!v34) {
          goto LABEL_64;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 24;
LABEL_62:
          unsigned int v46 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_97;
        }
        char v48 = *(unsigned char *)(a1 + 68) << 6;
        goto LABEL_74;
      default:
        if (v55 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_64:
          char v47 = PBReaderSkipValueWithTag();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v47 & 1) == 0)
          {
            int v53 = 0;
LABEL_78:
            uint64_t v54 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_79;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v53 = 0;
            uint64_t v54 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_80;
          }
        }
LABEL_76:
        if (!(v56 & 1 | (v7 != 0))) {
          goto LABEL_77;
        }
        continue;
    }
  }
}

void sub_189C35B38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C3600C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C3611C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementSortElementReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDResultRefinementSortElementReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDResultRefinementSortElementReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDResultRefinementSortElementReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDResultRefinementSortElementReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 48) readAll:1];
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189C363B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C36580(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDResultRefinementSortElementIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x34) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEOPDResultRefinementMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  }
  return (v2 >> 1) & 1;
}

void sub_189C367A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C36B50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementTimeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  char v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  int v13 = ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v11])
    {
      case -4:
        ++v13;
        uint64_t v14 = v8;
        goto LABEL_8;
      case -3:
        char v10 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v8;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 != 0;
        char v18 = v17 & ~(_BYTE)v12 | v9;
        unsigned __int8 v19 = v17 | v12;
        char v74 = v18;
        char v75 = v19 | v18;
        if ((v19 | v10)) {
          unint64_t v20 = 0;
        }
        else {
          unint64_t v20 = a3;
        }
        char v21 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
        char v76 = (v20 == 0) | v19;
        BOOL v77 = v19;
        char v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v8;
        uint64_t v15 = v9;
LABEL_8:
        uint64_t v16 = v12;
LABEL_10:
        ++v11;
        uint64_t v8 = v14;
        uint64_t v9 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_94;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_94:
      int v72 = 1;
      goto LABEL_95;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v77;
    if ((v76 & 1) == 0)
    {
      int v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 64) & 0x10) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          id v41 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v40;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_115;
        }
        char v66 = 8 * *(unsigned char *)(a1 + 64);
        goto LABEL_89;
      case 2:
        if ((v10 & 1) == 0) {
          goto LABEL_74;
        }
        *(unsigned char *)(a1 + 64) |= 1u;
        uint64_t v45 = *v21;
        unint64_t v46 = *(void *)(v3 + v45);
        if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(void *)(v3 + *v7))
        {
          uint64_t v47 = *(void *)(*(void *)(v3 + *v23) + v46);
          *(void *)(v3 + v45) = v46 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v22) = 1;
          uint64_t v47 = 0;
        }
        *(void *)(a1 + 40) = v47;
        goto LABEL_93;
      case 3:
        if ((v10 & 1) == 0) {
          goto LABEL_74;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        *(unsigned char *)(a1 + 64) |= 2u;
        while (2)
        {
          uint64_t v51 = *v21;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v23) + v52);
            *(void *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v31 = v49++ >= 9;
              if (v31)
              {
                uint64_t v50 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v50 = 0;
        }
LABEL_79:
        BOOL v64 = v50 != 0;
        uint64_t v65 = 60;
        goto LABEL_84;
      case 4:
        if (!v35) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 64) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_115;
          }
          char v66 = 4 * *(unsigned char *)(a1 + 64);
LABEL_89:
          v11 += v66 >> 7;
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_115;
        }
        char v55 = objc_alloc_init(GEOPDResultRefinementMetadata);
        if (GEOPDResultRefinementMetadataReadAllFrom((uint64_t)v55, (void *)v3, v8 & 1))
        {
          PBReaderRecallMark();
          id v41 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v55;
LABEL_65:

          --v11;
LABEL_90:
          unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          goto LABEL_93;
        }

LABEL_115:
        int v72 = 0;
        unint64_t v73 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_96:
        if (v74) {
LABEL_97:
        }
          *(unsigned char *)(a1 + v73[118]) |= 8u;
        if (v77 || (v72 & 1) == 0)
        {
          *(unsigned char *)(a1 + v73[118]) |= 0x10u;
          *(unsigned char *)(a1 + v73[118]) |= 0x20u;
          goto LABEL_108;
        }
        if (v20)
        {
          while (2)
          {
            while (1)
            {
              int v68 = *v20++;
              int v67 = v68;
              if (v68 == 1) {
                break;
              }
              if (v67 == 4)
              {
                char v69 = 32;
                goto LABEL_107;
              }
              if (!v67) {
                goto LABEL_108;
              }
            }
            char v69 = 16;
LABEL_107:
            *(unsigned char *)(a1 + v73[118]) |= v69;
            continue;
          }
        }
LABEL_108:
        if (v72) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v77)
        {
          char v70 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
        if ((v10 & 1) == 0) {
          goto LABEL_74;
        }
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v58 = 0;
        *(unsigned char *)(a1 + 64) |= 4u;
        while (2)
        {
          uint64_t v59 = *v21;
          uint64_t v60 = *(void *)(v3 + v59);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(v3 + *v23) + v60);
            *(void *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              BOOL v31 = v57++ >= 9;
              if (v31)
              {
                uint64_t v58 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v58 = 0;
        }
LABEL_83:
        BOOL v64 = v58 != 0;
        uint64_t v65 = 61;
LABEL_84:
        *(unsigned char *)(a1 + v65) = v64;
        goto LABEL_93;
      default:
        if ((v74 & 1) == 0 || (*(unsigned char *)(a1 + 64) & 8) != 0)
        {
LABEL_74:
          char v63 = PBReaderSkipValueWithTag();
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v63 & 1) == 0)
          {
            int v72 = 0;
LABEL_95:
            unint64_t v73 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_96;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v43 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v42;
          }
          int v44 = PBUnknownFieldAdd();
          unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v44)
          {
            int v72 = 0;
            unint64_t v73 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_97;
          }
        }
LABEL_93:
        if (!(v75 & 1 | (v11 != 0))) {
          goto LABEL_94;
        }
        continue;
    }
  }
}

void sub_189C3747C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C379B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementTimeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDResultRefinementTimeReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)char v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDResultRefinementTimeReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDResultRefinementTimeReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDResultRefinementTimeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189C37C34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C37E38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOPDResultRefinementTimeIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(unsigned char *)(a1 + 64) & 0x50) != 0) {
    return (os_unfair_lock_s *)1;
  }
  if ((*(unsigned char *)(a1 + 64) & 0x20) == 0) {
    return 0;
  }
  unint64_t v3 = *(os_unfair_lock_s **)(a1 + 32);

  return GEOPDResultRefinementMetadataIsDirty(v3);
}

void sub_189C380B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C38548(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementToggleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
  int v13 = ((*(unsigned __int16 *)(a1 + 68) >> 7) & 1)
      + (HIBYTE(*(unsigned __int16 *)(a1 + 68)) & 1)
      + ((*(unsigned __int16 *)(a1 + 68) >> 6) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v13;
        uint64_t v14 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 != 0;
        char v18 = v17 | v11;
        char v96 = v17 & ~(_BYTE)v11 | v8;
        char v99 = v17 | v11 | v96;
        if (((v17 | v11) | v9)) {
          unsigned __int8 v19 = 0;
        }
        else {
          unsigned __int8 v19 = a3;
        }
        char v100 = (v19 == 0) | v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v21 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
        char v97 = v9;
        char v98 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v7;
        uint64_t v15 = v8;
LABEL_8:
        uint64_t v16 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v14;
        uint64_t v8 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_137;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_137:
      int v95 = 1;
      goto LABEL_138;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v18;
    if ((v100 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_102;
        }
        if ((*(_WORD *)(a1 + v12[127]) & 0x80) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;
          goto LABEL_61;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_157;
        }
        uint64_t v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        __int16 v89 = *(_WORD *)(a1 + 68) << 8;
        goto LABEL_134;
      case 2:
        if ((v9 & 1) == 0) {
          goto LABEL_102;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + v12[127]) |= 8u;
        while (2)
        {
          uint64_t v47 = *v20;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v22) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v30 = v45++ >= 9;
              if (v30)
              {
                uint64_t v46 = 0;
                goto LABEL_107;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v46 = 0;
        }
LABEL_107:
        BOOL v86 = v46 != 0;
        uint64_t v87 = 64;
        goto LABEL_129;
      case 3:
        if (!v34) {
          goto LABEL_102;
        }
        if ((*(_WORD *)(a1 + v12[127]) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_157;
          }
          uint64_t v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
          __int16 v89 = *(_WORD *)(a1 + 68) << 7;
LABEL_134:
          v10 += v89 >> 15;
          goto LABEL_135;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_157;
        }
        uint64_t v51 = objc_alloc_init(GEOPDResultRefinementMetadata);
        if (GEOPDResultRefinementMetadataReadAllFrom((uint64_t)v51, (void *)v3, v7 & 1))
        {
          PBReaderRecallMark();
          uint64_t v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v51;
LABEL_61:

          --v10;
          uint64_t v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
LABEL_135:
          char v9 = v97;
          char v18 = v98;
          char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_136:
          if (!(v99 & 1 | (v10 != 0))) {
            goto LABEL_137;
          }
          continue;
        }

LABEL_157:
        int v95 = 0;
        uint64_t v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        char v18 = v98;
        char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_138:
        if (v96) {
LABEL_139:
        }
          *(_WORD *)(a1 + v12[127]) |= 0x40u;
        if (v18 & 1 | ((v95 & 1) == 0))
        {
          *(_WORD *)(a1 + v12[127]) |= 0x80u;
          *(_WORD *)(a1 + v12[127]) |= 0x100u;
          goto LABEL_150;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              int v91 = *v19++;
              int v90 = v91;
              if (v91 == 1) {
                break;
              }
              if (v90 == 3)
              {
                __int16 v92 = 256;
                goto LABEL_149;
              }
              if (!v90) {
                goto LABEL_150;
              }
            }
            __int16 v92 = 128;
LABEL_149:
            *(_WORD *)(a1 + v12[127]) |= v92;
            continue;
          }
        }
LABEL_150:
        if (v95)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_154:
          v93 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_154;
          }
        }
        return v3;
      case 4:
        if ((v9 & 1) == 0) {
          goto LABEL_102;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        *(_WORD *)(a1 + v12[127]) |= 4u;
        while (2)
        {
          uint64_t v55 = *v20;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v22) + v56);
            *(void *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              BOOL v30 = v53++ >= 9;
              if (v30)
              {
                LODWORD(v54) = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v54) = 0;
        }
LABEL_111:
        uint64_t v88 = 60;
        goto LABEL_120;
      case 5:
        if ((v9 & 1) == 0) {
          goto LABEL_102;
        }
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v54 = 0;
        *(_WORD *)(a1 + v12[127]) |= 1u;
        while (2)
        {
          uint64_t v61 = *v20;
          uint64_t v62 = *(void *)(v3 + v61);
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(v3 + *v22) + v62);
            *(void *)(v3 + v61) = v63;
            v54 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              BOOL v30 = v60++ >= 9;
              if (v30)
              {
                LODWORD(v54) = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v54) = 0;
        }
LABEL_115:
        uint64_t v88 = 52;
        goto LABEL_120;
      case 6:
        if ((v9 & 1) == 0) {
          goto LABEL_102;
        }
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v54 = 0;
        *(_WORD *)(a1 + v12[127]) |= 2u;
        while (2)
        {
          uint64_t v67 = *v20;
          uint64_t v68 = *(void *)(v3 + v67);
          unint64_t v69 = v68 + 1;
          if (v68 == -1 || v69 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v70 = *(unsigned char *)(*(void *)(v3 + *v22) + v68);
            *(void *)(v3 + v67) = v69;
            v54 |= (unint64_t)(v70 & 0x7F) << v65;
            if (v70 < 0)
            {
              v65 += 7;
              BOOL v30 = v66++ >= 9;
              if (v30)
              {
                LODWORD(v54) = 0;
                goto LABEL_119;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v54) = 0;
        }
LABEL_119:
        uint64_t v88 = 56;
LABEL_120:
        *(_DWORD *)(a1 + v88) = v54;
        goto LABEL_136;
      case 7:
        if ((v9 & 1) == 0) {
          goto LABEL_102;
        }
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v73 = 0;
        *(_WORD *)(a1 + v12[127]) |= 0x10u;
        while (2)
        {
          uint64_t v74 = *v20;
          uint64_t v75 = *(void *)(v3 + v74);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(v3 + *v22) + v75);
            *(void *)(v3 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if (v77 < 0)
            {
              v71 += 7;
              BOOL v30 = v72++ >= 9;
              if (v30)
              {
                uint64_t v73 = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v73 = 0;
        }
LABEL_124:
        BOOL v86 = v73 != 0;
        uint64_t v87 = 65;
        goto LABEL_129;
      case 8:
        if ((v9 & 1) == 0) {
          goto LABEL_102;
        }
        char v78 = 0;
        unsigned int v79 = 0;
        uint64_t v80 = 0;
        *(_WORD *)(a1 + v12[127]) |= 0x20u;
        while (2)
        {
          uint64_t v81 = *v20;
          uint64_t v82 = *(void *)(v3 + v81);
          unint64_t v83 = v82 + 1;
          if (v82 == -1 || v83 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v84 = *(unsigned char *)(*(void *)(v3 + *v22) + v82);
            *(void *)(v3 + v81) = v83;
            v80 |= (unint64_t)(v84 & 0x7F) << v78;
            if (v84 < 0)
            {
              v78 += 7;
              BOOL v30 = v79++ >= 9;
              if (v30)
              {
                uint64_t v80 = 0;
                goto LABEL_128;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v80 = 0;
        }
LABEL_128:
        BOOL v86 = v80 != 0;
        uint64_t v87 = 66;
LABEL_129:
        *(unsigned char *)(a1 + v87) = v86;
        goto LABEL_136;
      default:
        if ((v96 & 1) == 0 || (*(_WORD *)(a1 + v12[127]) & 0x40) != 0)
        {
LABEL_102:
          char v85 = PBReaderSkipValueWithTag();
          char v9 = v97;
          char v18 = v98;
          char v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
          if ((v85 & 1) == 0)
          {
            int v95 = 0;
            goto LABEL_138;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          uint64_t v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
          char v9 = v97;
          char v18 = v98;
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v95 = 0;
            goto LABEL_139;
          }
        }
        goto LABEL_136;
    }
  }
}

void sub_189C390BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C39838(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C3A17C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOPDResultRefinementToggleIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_WORD *)(a1 + 68) & 0x280) != 0) {
    return (os_unfair_lock_s *)1;
  }
  if ((*(_WORD *)(a1 + 68) & 0x100) == 0) {
    return 0;
  }
  unint64_t v3 = *(os_unfair_lock_s **)(a1 + 32);

  return GEOPDResultRefinementMetadataIsDirty(v3);
}

os_unfair_lock_s *GEOPDResultRefinementToggleIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    unsigned int v2 = _GEOPDResultRefinementToggleIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return v2;
  }
  return result;
}

void sub_189C3A4D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementViewReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    long long v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v20 = objc_alloc_init(GEOPDResultRefinementSection);
          if (!GEOPDResultRefinementSectionReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDResultRefinementView addSection:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189C3AEF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C3B284(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRetainedSearchMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v59 = v15 | v8;
        char v60 = v16 | v15 | v8;
        if ((v16 | v9)) {
          BOOL v17 = 0;
        }
        else {
          BOOL v17 = a3;
        }
        char v61 = (v17 == 0) | v16;
        BOOL v62 = v16;
        int v18 = (int *)MEMORY[0x1E4F940E8];
        unsigned __int8 v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_73;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_73:
      int v57 = 1;
      goto LABEL_74;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v62;
    if ((v61 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3) {
      break;
    }
    if (v31 == 2)
    {
      if (v9)
      {
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (1)
        {
          uint64_t v43 = *v18;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v6)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v20) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_63;
          }
          v40 += 7;
          BOOL v28 = v41++ >= 9;
          if (v28)
          {
            LODWORD(v42) = 0;
            goto LABEL_65;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_63:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v42) = 0;
        }
LABEL_65:
        *(_DWORD *)(a1 + 52) = v42;
        goto LABEL_72;
      }
    }
    else if (v31 == 1)
    {
      if (v32)
      {
        if ((*(unsigned char *)(a1 + 56) & 4) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 24;
          goto LABEL_45;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_93;
        }
        char v51 = 32 * *(unsigned char *)(a1 + 56);
        goto LABEL_70;
      }
    }
    else if ((v59 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v48 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v47;
      }
      int v49 = PBUnknownFieldAdd();
      unsigned __int8 v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v49)
      {
        int v57 = 0;
        char v58 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        goto LABEL_76;
      }
      goto LABEL_72;
    }
LABEL_60:
    char v50 = PBReaderSkipValueWithTag();
    unsigned __int8 v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v50 & 1) == 0)
    {
      int v57 = 0;
LABEL_74:
      char v58 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
      goto LABEL_75;
    }
LABEL_72:
    if (!(v60 & 1 | (v10 != 0))) {
      goto LABEL_73;
    }
  }
  if (!v32) {
    goto LABEL_60;
  }
  if ((*(unsigned char *)(a1 + 56) & 8) == 0)
  {
    uint64_t v37 = PBReaderReadString();
    uint64_t v38 = 32;
LABEL_45:
    uint64_t v39 = *(void **)(a1 + v38);
    *(void *)(a1 + v38) = v37;

    --v10;
LABEL_71:
    unsigned __int8 v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_72;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v51 = 16 * *(unsigned char *)(a1 + 56);
LABEL_70:
    v10 += v51 >> 7;
    goto LABEL_71;
  }
LABEL_93:
  int v57 = 0;
  char v58 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
  unsigned __int8 v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_75:
  if ((v59 & 1) == 0) {
    goto LABEL_77;
  }
LABEL_76:
  *(unsigned char *)(a1 + v58[141]) |= 2u;
LABEL_77:
  if (v62 || (v57 & 1) == 0)
  {
    *(unsigned char *)(a1 + v58[141]) |= 4u;
    *(unsigned char *)(a1 + v58[141]) |= 8u;
    goto LABEL_87;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        int v53 = *v17++;
        int v52 = v53;
        if (v53 == 1) {
          break;
        }
        if (v52 == 3)
        {
          char v54 = 8;
          goto LABEL_86;
        }
        if (!v52) {
          goto LABEL_87;
        }
      }
      char v54 = 4;
LABEL_86:
      *(unsigned char *)(a1 + v58[141]) |= v54;
      continue;
    }
  }
LABEL_87:
  if (v57) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v62)
  {
    uint64_t v55 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189C3B9D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C3BE48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRetainedSearchMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDRetainedSearchMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDRetainedSearchMetadataReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDRetainedSearchMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDRetainedSearchMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189C3C2B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRetainedSearchMetadataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_38;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_38;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_40;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_37;
        }
        a1[*v4] = 1;
      }
      else
      {
        if (v17 == 1)
        {
          if (v15 != 2) {
            goto LABEL_40;
          }
          goto LABEL_24;
        }
        if (!PBReaderSkipValueWithTag())
        {
LABEL_40:
          BOOL v24 = 0;
          goto LABEL_39;
        }
      }
LABEL_37:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_38;
      }
    }
    if (v15 != 2) {
      goto LABEL_40;
    }
LABEL_24:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_40;
    }
    goto LABEL_37;
  }
LABEL_38:
  BOOL v24 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v24;
}

void sub_189C3C698(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRetainedSearchMetadataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189C3C8C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C3D10C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchEnrichmentRevisionMetadataReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189C3D9DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C3DE1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchOriginationInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
  int v13 = ((*(unsigned __int8 *)(a1 + 76) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 != 0;
        char v18 = v17 & ~(_BYTE)v11 | v7;
        char v19 = v17 | v11;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        if (((v17 | v11) | v8)) {
          uint64_t v21 = 0;
        }
        else {
          uint64_t v21 = a3;
        }
        int v84 = 1;
        char v22 = v17 & ~(_BYTE)v11 | v7;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_111;
        }
        char v82 = v18;
        char v85 = v19 | v18;
        char v86 = (v21 == 0) | v19;
        unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        char v24 = (int *)MEMORY[0x1E4F940B8];
        char v83 = v19;
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v7;
LABEL_8:
        uint64_t v15 = v10;
        uint64_t v16 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v14;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v23)) {
      goto LABEL_109;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v20;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v32 = v26++ >= 9;
      if (v32)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    int v34 = v27 & 7;
    if (v33 || v34 == 4)
    {
LABEL_109:
      int v84 = 1;
      goto LABEL_110;
    }
    unint64_t v36 = v27 >> 3;
    BOOL v37 = v19;
    if ((v86 & 1) == 0)
    {
      uint64_t v38 = v21;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + v12[150]) |= 2u;
        unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        while (1)
        {
          uint64_t v45 = *v20;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
            break;
          }
          char v48 = *(unsigned char *)(*(void *)(v3 + *v24) + v46);
          *(void *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0) {
            goto LABEL_85;
          }
          v42 += 7;
          BOOL v32 = v43++ >= 9;
          if (v32)
          {
            LODWORD(v44) = 0;
            goto LABEL_87;
          }
        }
        *(unsigned char *)(v3 + *v23) = 1;
LABEL_85:
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_87:
        uint64_t v69 = 72;
        goto LABEL_92;
      case 2:
        if (!v37) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + v12[150]) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_130;
          }
          uint64_t v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
          v9 += *(unsigned __int8 *)(a1 + 76) << 27 >> 31;
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_130;
        }
        int v52 = objc_alloc_init(GEOPDSearchOriginationRoutePlanningParameters);
        if (GEOPDSearchOriginationRoutePlanningParametersReadAllFrom((uint64_t)v52, (void *)v3))
        {
          PBReaderRecallMark();
          int v53 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v52;

          --v9;
          uint64_t v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
LABEL_95:
          char v19 = v83;
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_106:
          char v24 = (int *)MEMORY[0x1E4F940B8];
LABEL_107:
          if (!(v85 & 1 | (v9 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_109;
          }
          continue;
        }

LABEL_130:
        int v84 = 0;
        uint64_t v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        char v19 = v83;
LABEL_110:
        char v22 = v82;
LABEL_111:
        if (v22) {
LABEL_112:
        }
          *(unsigned char *)(a1 + v12[150]) |= 4u;
        if (v19 & 1 | ((v84 & 1) == 0))
        {
          *(unsigned char *)(a1 + v12[150]) |= 0x10u;
          *(unsigned char *)(a1 + v12[150]) |= 8u;
          goto LABEL_123;
        }
        if (v21)
        {
          while (1)
          {
            int v79 = *v21++;
            int v78 = v79;
            if (v79 == 2) {
              break;
            }
            if (v78 == 3)
            {
              char v77 = 8;
LABEL_119:
              *(unsigned char *)(a1 + v12[150]) |= v77;
            }
            else if (!v78)
            {
              goto LABEL_123;
            }
          }
          char v77 = 16;
          goto LABEL_119;
        }
LABEL_123:
        if (v84)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v19 & 1) == 0) {
            return v3;
          }
LABEL_127:
          uint64_t v80 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v19) {
            goto LABEL_127;
          }
        }
        return v3;
      case 3:
        if (!v37 || (*(unsigned char *)(a1 + v12[150]) & 8) != 0) {
          goto LABEL_82;
        }
        if (v34 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_130;
          }
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v23)) {
              break;
            }
            char v54 = 0;
            unsigned int v55 = 0;
            uint64_t v56 = 0;
            int v57 = (int *)MEMORY[0x1E4F940B8];
            while (1)
            {
              uint64_t v58 = *v20;
              uint64_t v59 = *(void *)(v3 + v58);
              unint64_t v60 = v59 + 1;
              if (v59 == -1 || v60 > *(void *)(v3 + *v6)) {
                break;
              }
              char v61 = *(unsigned char *)(*(void *)(v3 + *v57) + v59);
              *(void *)(v3 + v58) = v60;
              v56 |= (unint64_t)(v61 & 0x7F) << v54;
              if (v61 < 0)
              {
                v54 += 7;
                BOOL v32 = v55++ >= 9;
                if (!v32) {
                  continue;
                }
              }
              goto LABEL_72;
            }
            *(unsigned char *)(v3 + *v23) = 1;
LABEL_72:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v70 = 0;
          unsigned int v71 = 0;
          uint64_t v72 = 0;
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          while (1)
          {
            uint64_t v73 = *v20;
            uint64_t v74 = *(void *)(v3 + v73);
            unint64_t v75 = v74 + 1;
            if (v74 == -1 || v75 > *(void *)(v3 + *v6)) {
              break;
            }
            char v76 = *(unsigned char *)(*(void *)(v3 + *v24) + v74);
            *(void *)(v3 + v73) = v75;
            v72 |= (unint64_t)(v76 & 0x7F) << v70;
            if (v76 < 0)
            {
              v70 += 7;
              BOOL v32 = v71++ >= 9;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_104;
          }
          *(unsigned char *)(v3 + *v23) = 1;
LABEL_104:
          PBRepeatedInt32Add();
        }
        uint64_t v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        char v19 = v83;
        goto LABEL_106;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + v12[150]) |= 1u;
        unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        while (2)
        {
          uint64_t v64 = *v20;
          uint64_t v65 = *(void *)(v3 + v64);
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(v3 + *v24) + v65);
            *(void *)(v3 + v64) = v66;
            v44 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              BOOL v32 = v63++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_91:
        uint64_t v69 = 68;
LABEL_92:
        *(_DWORD *)(a1 + v69) = v44;
        goto LABEL_107;
      default:
        if ((v82 & 1) == 0 || (*(unsigned char *)(a1 + v12[150]) & 4) != 0)
        {
LABEL_82:
          char v68 = PBReaderSkipValueWithTag();
          char v24 = (int *)MEMORY[0x1E4F940B8];
          char v19 = v83;
          uint64_t v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          if ((v68 & 1) == 0)
          {
            int v84 = 0;
            goto LABEL_110;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v50 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v49;
          }
          int v51 = PBUnknownFieldAdd();
          uint64_t v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
          char v19 = v83;
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          char v24 = (int *)MEMORY[0x1E4F940B8];
          if (!v51)
          {
            int v84 = 0;
            goto LABEL_112;
          }
        }
        goto LABEL_107;
    }
  }
}

void sub_189C3E818(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C3EEA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchOriginationInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchOriginationInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchOriginationInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchOriginationInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchOriginationInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189C3F708(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchOriginationInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_95:
    BOOL v54 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v54;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_95;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v13 = v7++ >= 9;
      if (v13)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4) {
      goto LABEL_95;
    }
    switch((v8 >> 3))
    {
      case 1u:
        if ((v8 & 7) != 0) {
          goto LABEL_97;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            goto LABEL_80;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_94;
        }
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_97;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_32:
        if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
          goto LABEL_81;
        }
        char v23 = 0;
        unsigned int v24 = 0;
        unint64_t v25 = 0;
        while (1)
        {
          uint64_t v26 = *v2;
          uint64_t v27 = *(void *)&a1[v26];
          unint64_t v28 = v27 + 1;
          if (v27 == -1 || v28 > *(void *)&a1[*v3]) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)&a1[*v5] + v27);
          *(void *)&a1[v26] = v28;
          v25 |= (unint64_t)(v29 & 0x7F) << v23;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v23 += 7;
          BOOL v13 = v24++ >= 9;
          if (v13)
          {
            unint64_t v25 = 0;
            int v30 = a1[*v4];
            goto LABEL_44;
          }
        }
        a1[*v4] = 1;
LABEL_42:
        int v30 = a1[*v4];
        if (a1[*v4]) {
          unint64_t v25 = 0;
        }
LABEL_44:
        int v31 = v25 & 7;
        if (v30 || v31 == 4)
        {
LABEL_81:
          int v48 = a1[*v4];
          PBReaderRecallMark();
          if (v48) {
            goto LABEL_97;
          }
LABEL_93:
          PBReaderRecallMark();
LABEL_94:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_95;
          }
          continue;
        }
        if ((v25 >> 3) == 2)
        {
          if ((v25 & 7) == 0)
          {
            unsigned int v33 = 0;
            do
            {
              uint64_t v34 = *v2;
              uint64_t v35 = *(void *)&a1[v34];
              unint64_t v36 = v35 + 1;
              if (v35 == -1 || v36 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_32;
              }
              int v37 = *(char *)(*(void *)&a1[*v5] + v35);
              *(void *)&a1[v34] = v36;
              if ((v37 & 0x80000000) == 0) {
                break;
              }
              BOOL v22 = v33++ > 8;
            }
            while (!v22);
            goto LABEL_32;
          }
        }
        else
        {
          if ((v25 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_96;
            }
            goto LABEL_32;
          }
          if (v31 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1))
          {
            PBReaderRecallMark();
            goto LABEL_32;
          }
        }
LABEL_96:
        PBReaderRecallMark();
LABEL_97:
        PBReaderRecallMark();
        return 0;
      case 3u:
        if (v15 != 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              break;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              unsigned int v42 = v15++;
              if (v42 <= 8) {
                continue;
              }
            }
            goto LABEL_94;
          }
LABEL_80:
          a1[*v4] = 1;
          goto LABEL_94;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_97;
        }
LABEL_84:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v49 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v50 = *v2;
            uint64_t v51 = *(void *)&a1[v50];
            unint64_t v52 = v51 + 1;
            if (v51 == -1 || v52 > *(void *)&a1[*v3]) {
              break;
            }
            int v53 = *(char *)(*(void *)&a1[*v5] + v51);
            *(void *)&a1[v50] = v52;
            if (v53 < 0)
            {
              BOOL v13 = v49++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_84;
          }
          a1[*v4] = 1;
        }
        goto LABEL_93;
      case 4u:
        if ((v8 & 7) != 0) {
          goto LABEL_97;
        }
        unsigned int v43 = 0;
        while (1)
        {
          uint64_t v44 = *v2;
          uint64_t v45 = *(void *)&a1[v44];
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
            goto LABEL_80;
          }
          int v47 = *(char *)(*(void *)&a1[*v5] + v45);
          *(void *)&a1[v44] = v46;
          if (v47 < 0)
          {
            BOOL v22 = v43++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_94;
        }
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_97;
        }
        goto LABEL_94;
    }
  }
}

void sub_189C3FE50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchOriginationInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 76) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189C400F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchOriginationRoutePlanningParametersReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_36;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              uint64_t v22 = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            uint64_t v22 = 0;
          }
LABEL_38:
          *(unsigned char *)(a1 + 24) = v22 != 0;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          uint64_t v18 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          uint64_t v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v28 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v27;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_189C40D24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C4117C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchSectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = (const __int16 *)(a1 + 76);
  uint16x4_t v13 = (uint16x4_t)vld1_dup_s16(v12);
  int16x4_t v14 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v13, (uint16x4_t)0xFFFCFFFAFFFBFFF9), (int8x8_t)0x1000100010001);
  v14.i16[0] = vaddv_s16(v14);
  unsigned int v15 = v14.i32[0];
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 1;
        char v20 = v19 & ~(_BYTE)v11 | v9;
        unsigned __int8 v21 = v19 | v11;
        char v83 = v20;
        char v84 = v8;
        char v85 = v21 | v20;
        if ((v21 | v8)) {
          uint64_t v22 = 0;
        }
        else {
          uint64_t v22 = a3;
        }
        char v86 = (v22 == 0) | v21;
        BOOL v87 = v21;
        uint64_t v23 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v25 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v9;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v23) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v24)) {
      goto LABEL_120;
    }
    char v26 = 0;
    unsigned int v27 = 0;
    unint64_t v28 = 0;
    while (1)
    {
      uint64_t v29 = *v23;
      uint64_t v30 = *(void *)(v3 + v29);
      unint64_t v31 = v30 + 1;
      if (v30 == -1 || v31 > *(void *)(v3 + *v6)) {
        break;
      }
      char v32 = *(unsigned char *)(*(void *)(v3 + *v25) + v30);
      *(void *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0) {
        goto LABEL_25;
      }
      v26 += 7;
      BOOL v33 = v27++ >= 9;
      if (v33)
      {
        unint64_t v28 = 0;
        int v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v24) = 1;
LABEL_25:
    int v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(unsigned char *)(v3 + *v24)) {
      unint64_t v28 = 0;
    }
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_120:
      int v81 = 1;
      goto LABEL_121;
    }
    unint64_t v36 = v28 >> 3;
    BOOL v37 = v87;
    if ((v86 & 1) == 0)
    {
      uint64_t v38 = v22;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37) {
          goto LABEL_92;
        }
        if ((*(_WORD *)(a1 + 76) & 0x20) == 0)
        {
          uint64_t v42 = PBReaderReadString();
          unsigned int v43 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v42;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_138;
        }
        __int16 v76 = *(_WORD *)(a1 + 76) << 10;
        goto LABEL_117;
      case 2:
        if ((v84 & 1) == 0) {
          goto LABEL_92;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        *(_WORD *)(a1 + 76) |= 8u;
        while (2)
        {
          uint64_t v50 = *v23;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v25) + v51);
            *(void *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v33 = v48++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_97;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_97:
        uint64_t v75 = 72;
        goto LABEL_110;
      case 3:
        if (!v37) {
          goto LABEL_92;
        }
        if ((*(_WORD *)(a1 + 76) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_138;
          }
          __int16 v76 = *(_WORD *)(a1 + 76) << 8;
          goto LABEL_117;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_138;
        }
        BOOL v54 = objc_alloc_init(GEOPDSearchSectionPlace);
        if (!GEOPDSearchSectionPlaceReadAllFrom((uint64_t)v54, (void *)v3)) {
          goto LABEL_137;
        }
        PBReaderRecallMark();
        uint64_t v55 = 40;
        goto LABEL_66;
      case 4:
        if (!v37) {
          goto LABEL_92;
        }
        if ((*(_WORD *)(a1 + 76) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_138;
          }
          __int16 v76 = *(_WORD *)(a1 + 76) << 9;
LABEL_117:
          v7 += v76 >> 15;
LABEL_118:
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_119;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_138;
        }
        BOOL v54 = objc_alloc_init(GEOPDSearchSectionGuide);
        if (GEOPDSearchSectionGuideReadAllFrom((uint64_t)v54, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v55 = 32;
LABEL_66:
          unsigned int v43 = *(void **)(a1 + v55);
          *(void *)(a1 + v55) = v54;
LABEL_67:

          --v7;
          goto LABEL_118;
        }
LABEL_137:

LABEL_138:
        int v81 = 0;
        char v82 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_122:
        if (v83) {
LABEL_123:
        }
          *(_WORD *)(a1 + v82[161]) |= 0x10u;
        if (v87 || (v81 & 1) == 0)
        {
          *(_WORD *)(a1 + v82[161]) |= 0x20u;
          *(_WORD *)(a1 + v82[161]) |= 0x80u;
          *(_WORD *)(a1 + v82[161]) |= 0x40u;
        }
        else if (v22)
        {
          while (1)
          {
            int v77 = *v22++;
            __int16 v78 = 32;
            switch(v77)
            {
              case 0:
                goto LABEL_131;
              case 1:
                goto LABEL_130;
              case 3:
                __int16 v78 = 128;
                goto LABEL_130;
              case 4:
                __int16 v78 = 64;
LABEL_130:
                *(_WORD *)(a1 + v82[161]) |= v78;
                break;
              default:
                continue;
            }
          }
        }
LABEL_131:
        if (v81) {
          unint64_t v3 = *(unsigned char *)(v3 + *v24) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v87)
        {
          int v79 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
        if ((v84 & 1) == 0) {
          goto LABEL_92;
        }
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v49 = 0;
        *(_WORD *)(a1 + 76) |= 2u;
        while (2)
        {
          uint64_t v58 = *v23;
          uint64_t v59 = *(void *)(v3 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(v3 + *v25) + v59);
            *(void *)(v3 + v58) = v60;
            v49 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              BOOL v33 = v57++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_101:
        uint64_t v75 = 64;
        goto LABEL_110;
      case 6:
        if ((v84 & 1) == 0) {
          goto LABEL_92;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v49 = 0;
        *(_WORD *)(a1 + 76) |= 4u;
        while (2)
        {
          uint64_t v64 = *v23;
          uint64_t v65 = *(void *)(v3 + v64);
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(v3 + *v25) + v65);
            *(void *)(v3 + v64) = v66;
            v49 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              BOOL v33 = v63++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_105:
        uint64_t v75 = 68;
        goto LABEL_110;
      case 7:
        if ((v84 & 1) == 0) {
          goto LABEL_92;
        }
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v49 = 0;
        *(_WORD *)(a1 + 76) |= 1u;
        while (2)
        {
          uint64_t v70 = *v23;
          uint64_t v71 = *(void *)(v3 + v70);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(v3 + *v25) + v71);
            *(void *)(v3 + v70) = v72;
            v49 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              BOOL v33 = v69++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_109:
        uint64_t v75 = 60;
LABEL_110:
        *(_DWORD *)(a1 + v75) = v49;
        goto LABEL_119;
      default:
        if ((v83 & 1) == 0 || (*(_WORD *)(a1 + 76) & 0x10) != 0)
        {
LABEL_92:
          char v74 = PBReaderSkipValueWithTag();
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v74 & 1) == 0)
          {
            int v81 = 0;
LABEL_121:
            char v82 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_122;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v44 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v45 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v44;
          }
          int v46 = PBUnknownFieldAdd();
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if (!v46)
          {
            int v81 = 0;
            char v82 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_123;
          }
        }
LABEL_119:
        if (!(v85 & 1 | (v7 != 0))) {
          goto LABEL_120;
        }
        continue;
    }
  }
}

void sub_189C41C48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C41D58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C42300(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchSectionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchSectionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchSectionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189C42568(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C427C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C42CC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchSectionGuideReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDSearchSectionGuide addGuideId:](a1, v18);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v20 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189C43A34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchSectionListReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          char v20 = objc_alloc_init(GEOPDSearchSection);
          if (!GEOPDSearchSectionReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDSearchSectionList addSection:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189C44ED0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchSectionPlaceReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          int v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDSearchSectionPlace addPlaceId:](a1, v18);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v20 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189C4595C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C465E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189C46F4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void *a50)
{
  if (__p) {
    operator delete(__p);
  }
  if (a35) {
    operator delete(a35);
  }
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(a9);
  if (a26) {
    operator delete(a26);
  }
  if (a23) {
    operator delete(a23);
  }
  if (a41) {
    operator delete(a41);
  }
  if (a50) {
    operator delete(a50);
  }

  STACK[0x210] = (unint64_t)&unk_1ED512208;
  std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::destroy((uint64_t)&STACK[0x2A0], (void *)STACK[0x2A8]);

  _Unwind_Resume(a1);
}

id GEOGetGEOMapFeaturePathFinderLog(void)
{
  if (qword_1EB29FD68 != -1) {
    dispatch_once(&qword_1EB29FD68, &__block_literal_global_109);
  }
  v0 = (void *)_MergedGlobals_255;

  return v0;
}

void sub_189C4794C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *__p,uint64_t a53)
{
  unsigned int v57 = *v53;
  if (*v53)
  {
    *(void *)(a12 + 24) = v57;
    operator delete(v57);
  }
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void *maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::~Dijkstra(void *a1)
{
  BOOL v2 = (void *)a1[14];
  if (v2)
  {
    a1[15] = v2;
    operator delete(v2);
  }
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)(a1 + 9));
  unint64_t v3 = (void *)a1[5];
  if (v3)
  {
    a1[6] = v3;
    operator delete(v3);
  }
  uint64_t v4 = (void *)a1[2];
  if (v4)
  {
    a1[3] = v4;
    operator delete(v4);
  }
  return a1;
}

void GEOPathMatcherRoadNetwork::~GEOPathMatcherRoadNetwork(GEOPathMatcherRoadNetwork *this)
{
  *(void *)this = &unk_1ED512208;
  std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::destroy((uint64_t)this + 144, *((void **)this + 19));
}

void sub_189C47CF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL32GEOGetGEOMapFeaturePathFinderLogv_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOMapFeaturePathFinder");
  id v1 = (void *)_MergedGlobals_255;
  _MergedGlobals_255 = (uint64_t)v0;
}

uint64_t maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::found_target(uint64_t a1, double *a2, uint64_t a3)
{
  uint64_t v4 = *(double **)(a3 + 16);
  unint64_t v3 = *(double **)(a3 + 24);
  if (v4 == v3) {
    return 0;
  }
  for (uint64_t i = v4 + 4; ; i += 7)
  {
    uint64_t v7 = *((void *)i - 4);
    char v6 = i - 4;
    if (v7)
    {
      double v8 = *a2;
    }
    else
    {
      uint64_t v7 = *((void *)i - 3);
      double v8 = a2[1];
    }
    if (v7 == *(void *)&v8 && a2[4] <= *i) {
      break;
    }
    if (v6 + 7 == v3) {
      return 0;
    }
  }
  return 1;
}

uint64_t *maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::get_navigable_outgoing_roads(void *a1, uint64_t a2, uint64_t **a3)
{
  (*(void (**)(void))(*(void *)*a1 + 72))(*a1);
  (*(void (**)(void *__return_ptr))(*(void *)*a1 + 8))(v7);
  char v6 = v7;
  return maps::path_codec::erase_if<GEOPathMatcherRoadKey,maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::get_navigable_outgoing_roads(GEOPathMatcherRoadKey const&,std::vector<GEOPathMatcherRoadKey> &)::{lambda(GEOPathMatcherRoadKey const&)#1}>(a3, (uint64_t *)&v6);
}

uint64_t *maps::path_codec::erase_if<GEOPathMatcherRoadKey,maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::get_navigable_outgoing_roads(GEOPathMatcherRoadKey const&,std::vector<GEOPathMatcherRoadKey> &)::{lambda(GEOPathMatcherRoadKey const&)#1}>(uint64_t **a1, uint64_t *a2)
{
  result = std::remove_if[abi:ne180100]<std::__wrap_iter<GEOPathMatcherRoadKey *>,maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::get_navigable_outgoing_roads(GEOPathMatcherRoadKey const&,std::vector<GEOPathMatcherRoadKey> &)::{lambda(GEOPathMatcherRoadKey const&)#1}>(*a1, a1[1], *a2);
  if (a1[1] != result) {
    a1[1] = result;
  }
  return result;
}

uint64_t *std::remove_if[abi:ne180100]<std::__wrap_iter<GEOPathMatcherRoadKey *>,maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::get_navigable_outgoing_roads(GEOPathMatcherRoadKey const&,std::vector<GEOPathMatcherRoadKey> &)::{lambda(GEOPathMatcherRoadKey const&)#1}>(uint64_t *result, uint64_t *a2, uint64_t a3)
{
  while (1)
  {
    if (result == a2) {
      return a2;
    }
    uint64_t v3 = *result;
    if (!*result) {
      uint64_t v3 = result[1];
    }
    if (v3 == *(void *)(a3 + 8 * (*result == 0))) {
      break;
    }
    result += 4;
  }
  if (result == a2) {
    return a2;
  }
  for (uint64_t i = result + 4; i != a2; i += 4)
  {
    uint64_t v5 = *i;
    if (!*i) {
      uint64_t v5 = i[1];
    }
    if (v5 != *(void *)(a3 + 8 * (*i == 0)))
    {
      long long v6 = *((_OWORD *)i + 1);
      *(_OWORD *)result = *(_OWORD *)i;
      *((_OWORD *)result + 1) = v6;
      result += 4;
    }
  }
  return result;
}

void sub_189C48814(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOBusinessResolutionRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v47 = v17;
        int v18 = (int *)MEMORY[0x1E4F940E8];
        id v19 = (int *)MEMORY[0x1E4F940C8];
        char v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_60;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_25;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_60:
      if (v15)
      {
        char v41 = 1;
        goto LABEL_72;
      }
      if (!v16) {
        goto LABEL_73;
      }
      while (1)
      {
        int v44 = *v16++;
        int v43 = v44;
        if (v44 == 1) {
          break;
        }
        if (v43 == 2)
        {
          char v42 = 1;
LABEL_66:
          *(unsigned char *)(a1 + 44) |= v42;
        }
        else if (!v43)
        {
          goto LABEL_73;
        }
      }
      char v42 = 2;
      goto LABEL_66;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v15;
    if (!v47)
    {
      char v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 2) {
      break;
    }
    if (v30 == 1)
    {
      if (v31)
      {
        if ((*(unsigned char *)(a1 + 44) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_71;
          }
          v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
        }
        else
        {
          uint64_t v36 = PBReaderReadString();
          BOOL v37 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v36;

          --v9;
        }
        goto LABEL_56;
      }
LABEL_50:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_71;
      }
      goto LABEL_56;
    }
    if (!PBReaderSkipValueWithTag()) {
      goto LABEL_71;
    }
LABEL_56:
    if (v9) {
      char v40 = 1;
    }
    else {
      char v40 = v15;
    }
    if ((v40 & 1) == 0) {
      goto LABEL_60;
    }
  }
  if (!v31) {
    goto LABEL_50;
  }
  if (*(unsigned char *)(a1 + 44))
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_71:
      char v41 = 0;
      goto LABEL_72;
    }
    v9 -= *(unsigned char *)(a1 + 44) & 1;
    goto LABEL_56;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_71;
  }
  uint64_t v38 = objc_alloc_init(GEOLocation);
  if (GEOLocationReadAllFrom((uint64_t)v38, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    int v39 = *(void **)(a1 + 16);
    *(void *)(a1 + 16) = v38;

    --v9;
    id v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_56;
  }

  char v41 = 0;
  id v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + 44) |= 2u;
  *(unsigned char *)(a1 + 44) |= 1u;
  if (v41)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v15) {
      goto LABEL_74;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v15)
    {
LABEL_74:
      uint64_t v45 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_189C49168(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOBusinessResolutionRequestReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOBusinessResolutionRequestReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 32) = [v6 position];
      *(_DWORD *)(a1 + 36) = [v6 length];
      unint64_t Specified = GEOBusinessResolutionRequestReadSpecified(a1, (unint64_t)v6, GEOBusinessResolutionRequestReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189C492E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C49670(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C499C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C4AA70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitAccessPointReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFFCFFF9FFF8FFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 92) >> 6) & 1)+ ((*(_WORD *)(a1 + 92) >> 3) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v76 = v17;
        char v77 = v18 | v17;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v78 = (v19 == 0) | v18;
        BOOL v79 = v18;
        char v20 = (int *)MEMORY[0x1E4F940E8];
        char v21 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_118;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_118:
      int v74 = 1;
      goto LABEL_119;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v79;
    if ((v78 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_94;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(_WORD *)(a1 + 92) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_97;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            uint64_t v41 = 0;
            goto LABEL_99;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_97:
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v41 = 0;
        }
LABEL_99:
        *(void *)(a1 + 64) = v41;
        goto LABEL_117;
      case 2:
      case 3:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
        goto LABEL_56;
      case 4:
        if (!v34) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 92) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_142;
          }
          __int16 v68 = *(_WORD *)(a1 + 92) << 7;
LABEL_110:
          v7 += v68 >> 15;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_142;
        }
        char v56 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v56, (void *)v3))
        {
          PBReaderRecallMark();
          unsigned int v57 = *(void **)(a1 + 56);
          *(void *)(a1 + 56) = v56;
LABEL_93:

          --v7;
LABEL_111:
          char v21 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_117;
        }
LABEL_141:

LABEL_142:
        int v74 = 0;
        uint64_t v75 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_120:
        if (v76) {
LABEL_121:
        }
          *(_WORD *)(a1 + v75[192]) |= 8u;
        if (v79 || (v74 & 1) == 0)
        {
          *(_WORD *)(a1 + v75[192]) |= 0x100u;
          *(_WORD *)(a1 + v75[192]) |= 0x20u;
          *(_WORD *)(a1 + v75[192]) |= 0x80u;
          *(_WORD *)(a1 + v75[192]) |= 0x10u;
          *(_WORD *)(a1 + v75[192]) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            int v70 = *v19++;
            int v69 = v70;
            switch(v70)
            {
              case 13:
                __int16 v71 = 32;
                goto LABEL_134;
              case 14:
                __int16 v71 = 128;
                goto LABEL_134;
              case 15:
                __int16 v71 = 16;
                goto LABEL_134;
              case 16:
                __int16 v71 = 64;
                goto LABEL_134;
              default:
                if (v69 == 4)
                {
                  __int16 v71 = 256;
LABEL_134:
                  *(_WORD *)(a1 + v75[192]) |= v71;
                }
                else if (!v69)
                {
                  goto LABEL_135;
                }
                break;
            }
          }
        }
LABEL_135:
        if (v74) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v79)
        {
          unint64_t v72 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_94;
        }
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 92) |= 4u;
        while (2)
        {
          uint64_t v60 = *v20;
          uint64_t v61 = *(void *)(v3 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(v3 + *v22) + v61);
            *(void *)(v3 + v60) = v62;
            v48 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              BOOL v30 = v59++ >= 9;
              if (v30)
              {
                LODWORD(v48) = 0;
                goto LABEL_103;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v48) = 0;
        }
LABEL_103:
        uint64_t v67 = 88;
        goto LABEL_116;
      case 13:
        if (!v34 || (*(_WORD *)(a1 + 92) & 0x20) != 0) {
          goto LABEL_94;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_142;
        }
        char v56 = objc_alloc_init(GEOPBTransitZoomRangeString);
        if (!GEOPBTransitZoomRangeStringReadAllFrom((uint64_t)v56, (void *)v3, v10 & 1)) {
          goto LABEL_141;
        }
        PBReaderRecallMark();
        -[GEOPBTransitAccessPoint _addNoFlagsEntranceZoomName:](a1, v56);
        goto LABEL_85;
      case 14:
        if (!v34 || (*(_WORD *)(a1 + 92) & 0x80) != 0) {
          goto LABEL_94;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_142;
        }
        char v56 = objc_alloc_init(GEOPBTransitZoomRangeString);
        if (!GEOPBTransitZoomRangeStringReadAllFrom((uint64_t)v56, (void *)v3, v10 & 1)) {
          goto LABEL_141;
        }
        PBReaderRecallMark();
        -[GEOPBTransitAccessPoint _addNoFlagsExitZoomName:](a1, v56);
LABEL_85:

        goto LABEL_111;
      case 15:
        if (!v34) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 92) & 0x10) == 0)
        {
          uint64_t v64 = PBReaderReadString();
          uint64_t v65 = 24;
          goto LABEL_92;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_142;
        }
        __int16 v68 = *(_WORD *)(a1 + 92) << 11;
        goto LABEL_110;
      case 16:
        if (!v34) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 92) & 0x40) == 0)
        {
          uint64_t v64 = PBReaderReadString();
          uint64_t v65 = 40;
LABEL_92:
          unsigned int v57 = *(void **)(a1 + v65);
          *(void *)(a1 + v65) = v64;
          goto LABEL_93;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_142;
        }
        __int16 v68 = *(_WORD *)(a1 + 92) << 9;
        goto LABEL_110;
      default:
        if (v33 == 2047)
        {
          if (v8)
          {
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v48 = 0;
            *(_WORD *)(a1 + 92) |= 2u;
            while (1)
            {
              uint64_t v49 = *v20;
              uint64_t v50 = *(void *)(v3 + v49);
              unint64_t v51 = v50 + 1;
              if (v50 == -1 || v51 > *(void *)(v3 + *v6)) {
                break;
              }
              char v52 = *(unsigned char *)(*(void *)(v3 + *v22) + v50);
              *(void *)(v3 + v49) = v51;
              v48 |= (unint64_t)(v52 & 0x7F) << v46;
              if ((v52 & 0x80) == 0) {
                goto LABEL_113;
              }
              v46 += 7;
              BOOL v30 = v47++ >= 9;
              if (v30)
              {
                LODWORD(v48) = 0;
                goto LABEL_115;
              }
            }
            *(unsigned char *)(v3 + *v21) = 1;
LABEL_113:
            if (*(unsigned char *)(v3 + *v21)) {
              LODWORD(v48) = 0;
            }
LABEL_115:
            uint64_t v67 = 84;
LABEL_116:
            *(_DWORD *)(a1 + v67) = v48;
            goto LABEL_117;
          }
        }
        else
        {
LABEL_56:
          if ((v76 & 1) != 0 && (*(_WORD *)(a1 + 92) & 8) == 0)
          {
            if (!*(void *)(a1 + 16))
            {
              id v53 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              BOOL v54 = *(void **)(a1 + 16);
              *(void *)(a1 + 16) = v53;
            }
            int v55 = PBUnknownFieldAdd();
            char v21 = (int *)MEMORY[0x1E4F940C8];
            unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
            if (!v55)
            {
              int v74 = 0;
              uint64_t v75 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
              goto LABEL_121;
            }
            goto LABEL_117;
          }
        }
LABEL_94:
        char v66 = PBReaderSkipValueWithTag();
        unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
        char v21 = (int *)MEMORY[0x1E4F940C8];
        if ((v66 & 1) == 0)
        {
          int v74 = 0;
LABEL_119:
          uint64_t v75 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
          goto LABEL_120;
        }
LABEL_117:
        if (!(v77 & 1 | (v7 != 0))) {
          goto LABEL_118;
        }
        continue;
    }
  }
}

void sub_189C4BC50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C4C010(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C4C3D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C4C53C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPBTransitAccessPointCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  [a1[7] readAll:1];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = a1[4];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = a1[6];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPBTransitAccessPointReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBTransitAccessPointReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPBTransitAccessPointReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPBTransitAccessPointReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPBTransitAccessPointReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPBTransitAccessPointCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189C4CFCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitAccessPointReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPBTransitAccessPointReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C4D030(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitAccessPointIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_60;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 2u:
        case 3u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
          goto LABEL_57;
        case 4u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1)) {
            goto LABEL_44;
          }
          goto LABEL_60;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_60;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 0xDu:
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitZoomRangeStringIsValid(a1)) {
            goto LABEL_60;
          }
LABEL_44:
          PBReaderRecallMark();
          goto LABEL_58;
        case 0xFu:
          if (v15 == 2) {
            goto LABEL_57;
          }
          goto LABEL_60;
        case 0x10u:
          if (v15 == 2) {
            goto LABEL_57;
          }
          goto LABEL_60;
        default:
          if ((v8 >> 3) == 2047)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_60;
            }
            unsigned int v17 = 0;
            while (1)
            {
              uint64_t v18 = *v2;
              uint64_t v19 = *(void *)&a1[v18];
              unint64_t v20 = v19 + 1;
              if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
                break;
              }
              int v21 = *(char *)(*(void *)&a1[*v5] + v19);
              *(void *)&a1[v18] = v20;
              if (v21 < 0)
              {
                BOOL v22 = v17++ > 8;
                if (!v22) {
                  continue;
                }
              }
              goto LABEL_58;
            }
LABEL_53:
            a1[*v4] = 1;
          }
          else
          {
LABEL_57:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_60:
              PBReaderRecallMark();
              return 0;
            }
          }
LABEL_58:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_59;
          }
          break;
      }
    }
  }
LABEL_59:
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOPBTransitZoomRangeStringIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_38;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_38;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 4) {
        break;
      }
      if (v17 == 3)
      {
        if (v15 != 2) {
          goto LABEL_40;
        }
LABEL_32:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_40;
        }
        goto LABEL_37;
      }
      if (v17 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_40;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_37;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_40:
        BOOL v24 = 0;
        goto LABEL_39;
      }
LABEL_37:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_38;
      }
    }
    if (v15 != 2) {
      goto LABEL_40;
    }
    goto LABEL_32;
  }
LABEL_38:
  BOOL v24 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v24;
}

void sub_189C4D948(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitAccessPointIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  __int16 v2 = *(_WORD *)(a1 + 92);
  if ((v2 & 0x3F0) != 0) {
    return 1;
  }
  if ((v2 & 0x80) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v4 = *(id *)(a1 + 48);
  uint64_t v3 = [v4 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v5 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v4);
        }
        if (GEOPBTransitZoomRangeStringIsDirty(*(void *)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v3 = [v4 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v3;
}

os_unfair_lock_s *GEOPBTransitAccessPointIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPBTransitAccessPointIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189C4E0A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C4E83C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C4E934(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitBrandReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBTransitBrandReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 48) = [v6 position];
      *(_DWORD *)(a1 + 52) = [v6 length];
      unint64_t Specified = GEOPBTransitBrandReadSpecified(a1, (unint64_t)v6, (int *)&GEOPBTransitBrandReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189C4EB8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C4ED74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C4EF44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C4F554(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C4F980(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C50510(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitHallCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  [a1[3] readAll:1];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v2 = a1[7];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  return [a1[6] readAll:1];
}

unint64_t GEOPBTransitHallReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBTransitHallReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPBTransitHallReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPBTransitHallReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPBTransitHallReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPBTransitHallCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189C507CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitHallReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPBTransitHallReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C50830(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitHallIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_60;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_60;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_62;
          }
          goto LABEL_57;
        case 4u:
        case 5u:
          goto LABEL_59;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitZoomRangeStringIsValid(a1)) {
            goto LABEL_62;
          }
          goto LABEL_57;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
            goto LABEL_62;
          }
LABEL_57:
          PBReaderRecallMark();
          goto LABEL_60;
        case 8u:
          if (v15 == 2) {
            goto LABEL_59;
          }
          goto LABEL_62;
        default:
          if ((v8 >> 3) == 2047)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_62;
            }
            unsigned int v23 = 0;
            while (1)
            {
              uint64_t v24 = *v2;
              uint64_t v25 = *(void *)&a1[v24];
              unint64_t v26 = v25 + 1;
              if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
                break;
              }
              int v27 = *(char *)(*(void *)&a1[*v5] + v25);
              *(void *)&a1[v24] = v26;
              if (v27 < 0)
              {
                BOOL v22 = v23++ > 8;
                if (!v22) {
                  continue;
                }
              }
              goto LABEL_60;
            }
LABEL_45:
            a1[*v4] = 1;
          }
          else
          {
LABEL_59:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_62:
              PBReaderRecallMark();
              return 0;
            }
          }
LABEL_60:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_61;
          }
          break;
      }
    }
  }
LABEL_61:
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_189C50E9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitHallIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(_WORD *)(a1 + 84) & 0x1F0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_189C5144C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C51600(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C51A18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C51D9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C51F34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C520CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C52264(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C52378(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C5248C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C525A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C52EB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitIncidentIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_181:
    BOOL v95 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v95;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_181;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v13 = v7++ >= 9;
      if (v13)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4) {
      goto LABEL_181;
    }
    switch((v8 >> 3))
    {
      case 1u:
        if ((v8 & 7) != 0) {
          goto LABEL_185;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            goto LABEL_160;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_173;
        }
      case 2u:
      case 3u:
      case 4u:
        goto LABEL_172;
      case 5u:
        if ((v8 & 7) != 0) {
          goto LABEL_185;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_160;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_173;
        }
      case 6u:
        if ((v8 & 7) != 0) {
          goto LABEL_185;
        }
        unsigned int v33 = 0;
        while (1)
        {
          uint64_t v34 = *v2;
          uint64_t v35 = *(void *)&a1[v34];
          unint64_t v36 = v35 + 1;
          if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
            goto LABEL_160;
          }
          int v37 = *(char *)(*(void *)&a1[*v5] + v35);
          *(void *)&a1[v34] = v36;
          if (v37 < 0)
          {
            BOOL v22 = v33++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_173;
        }
      case 7u:
        if ((v8 & 7) != 0) {
          goto LABEL_185;
        }
        unsigned int v38 = 0;
        while (1)
        {
          uint64_t v39 = *v2;
          uint64_t v40 = *(void *)&a1[v39];
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
            goto LABEL_160;
          }
          int v42 = *(char *)(*(void *)&a1[*v5] + v40);
          *(void *)&a1[v39] = v41;
          if (v42 < 0)
          {
            BOOL v22 = v38++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_173;
        }
      case 8u:
        if ((v8 & 7) != 0) {
          goto LABEL_185;
        }
        unsigned int v43 = 0;
        while (1)
        {
          uint64_t v44 = *v2;
          uint64_t v45 = *(void *)&a1[v44];
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
            goto LABEL_160;
          }
          int v47 = *(char *)(*(void *)&a1[*v5] + v45);
          *(void *)&a1[v44] = v46;
          if (v47 < 0)
          {
            BOOL v22 = v43++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_173;
        }
      case 9u:
        if ((v8 & 7) != 0) {
          goto LABEL_185;
        }
        unsigned int v48 = 0;
        while (1)
        {
          uint64_t v49 = *v2;
          uint64_t v50 = *(void *)&a1[v49];
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
            goto LABEL_160;
          }
          int v52 = *(char *)(*(void *)&a1[*v5] + v50);
          *(void *)&a1[v49] = v51;
          if (v52 < 0)
          {
            BOOL v22 = v48++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_173;
        }
      case 0xAu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_185;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_80:
        if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
          goto LABEL_179;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        unint64_t v55 = 0;
        while (1)
        {
          uint64_t v56 = *v2;
          uint64_t v57 = *(void *)&a1[v56];
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)&a1[*v3]) {
            break;
          }
          char v59 = *(unsigned char *)(*(void *)&a1[*v5] + v57);
          *(void *)&a1[v56] = v58;
          v55 |= (unint64_t)(v59 & 0x7F) << v53;
          if ((v59 & 0x80) == 0) {
            goto LABEL_90;
          }
          v53 += 7;
          BOOL v13 = v54++ >= 9;
          if (v13)
          {
            unint64_t v55 = 0;
            int v60 = a1[*v4];
            goto LABEL_92;
          }
        }
        a1[*v4] = 1;
LABEL_90:
        int v60 = a1[*v4];
        if (a1[*v4]) {
          unint64_t v55 = 0;
        }
LABEL_92:
        int v61 = v55 & 7;
        if (v60 || v61 == 4)
        {
LABEL_179:
          int v94 = a1[*v4];
          PBReaderRecallMark();
          if (v94) {
            goto LABEL_185;
          }
LABEL_180:
          PBReaderRecallMark();
LABEL_173:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_181;
          }
          continue;
        }
        if ((v55 >> 3) == 3)
        {
          if (v61 == 2 && PBReaderPlaceMark())
          {
            [a1 position];
            [a1 length];
LABEL_109:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
            {
              char v68 = 0;
              unsigned int v69 = 0;
              unint64_t v70 = 0;
              while (1)
              {
                uint64_t v71 = *v2;
                uint64_t v72 = *(void *)&a1[v71];
                unint64_t v73 = v72 + 1;
                if (v72 == -1 || v73 > *(void *)&a1[*v3]) {
                  break;
                }
                char v74 = *(unsigned char *)(*(void *)&a1[*v5] + v72);
                *(void *)&a1[v71] = v73;
                v70 |= (unint64_t)(v74 & 0x7F) << v68;
                if ((v74 & 0x80) == 0) {
                  goto LABEL_119;
                }
                v68 += 7;
                BOOL v13 = v69++ >= 9;
                if (v13)
                {
                  unint64_t v70 = 0;
                  int v75 = a1[*v4];
                  goto LABEL_121;
                }
              }
              a1[*v4] = 1;
LABEL_119:
              int v75 = a1[*v4];
              if (a1[*v4]) {
                unint64_t v70 = 0;
              }
LABEL_121:
              int v76 = v70 & 7;
              if (v75 || v76 == 4) {
                break;
              }
              if ((v70 >> 3) == 1)
              {
                if (v76 == 2)
                {
                  if (!PBReaderPlaceMark())
                  {
LABEL_183:
                    PBReaderRecallMark();
                    goto LABEL_184;
                  }
LABEL_136:
                  while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                  {
                    unsigned int v83 = a1[*v4];
                    if (a1[*v4]) {
                      break;
                    }
                    while (1)
                    {
                      uint64_t v84 = *v2;
                      uint64_t v85 = *(void *)&a1[v84];
                      unint64_t v86 = v85 + 1;
                      if (v85 == -1 || v86 > *(void *)&a1[*v3]) {
                        break;
                      }
                      int v87 = *(char *)(*(void *)&a1[*v5] + v85);
                      *(void *)&a1[v84] = v86;
                      if (v87 < 0)
                      {
                        BOOL v13 = v83++ >= 9;
                        if (!v13) {
                          continue;
                        }
                      }
                      goto LABEL_136;
                    }
                    a1[*v4] = 1;
                  }
                  PBReaderRecallMark();
                }
                else
                {
                  if ((v70 & 7) != 0) {
                    goto LABEL_183;
                  }
                  while (1)
                  {
                    uint64_t v78 = *v2;
                    uint64_t v79 = *(void *)&a1[v78];
                    unint64_t v80 = v79 + 1;
                    if (v79 == -1 || v80 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v81 = *(char *)(*(void *)&a1[*v5] + v79);
                    *(void *)&a1[v78] = v80;
                    if (v81 < 0)
                    {
                      unsigned int v82 = v76++;
                      if (v82 <= 8) {
                        continue;
                      }
                    }
                    goto LABEL_109;
                  }
                  a1[*v4] = 1;
                }
              }
              else if ((PBReaderSkipValueWithTag() & 1) == 0)
              {
                goto LABEL_183;
              }
            }
            int v88 = a1[*v4];
            PBReaderRecallMark();
            if (!v88)
            {
              PBReaderRecallMark();
              goto LABEL_80;
            }
          }
        }
        else
        {
          if ((v55 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_184;
            }
            goto LABEL_80;
          }
          if ((v55 & 7) == 0)
          {
            unsigned int v63 = 0;
            do
            {
              uint64_t v64 = *v2;
              uint64_t v65 = *(void *)&a1[v64];
              unint64_t v66 = v65 + 1;
              if (v65 == -1 || v66 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_80;
              }
              int v67 = *(char *)(*(void *)&a1[*v5] + v65);
              *(void *)&a1[v64] = v66;
              if ((v67 & 0x80000000) == 0) {
                break;
              }
              BOOL v22 = v63++ > 8;
            }
            while (!v22);
            goto LABEL_80;
          }
        }
LABEL_184:
        PBReaderRecallMark();
LABEL_185:
        PBReaderRecallMark();
        return 0;
      case 0xBu:
        if ((v8 & 7) != 0) {
          goto LABEL_185;
        }
        unsigned int v89 = 0;
        while (1)
        {
          uint64_t v90 = *v2;
          uint64_t v91 = *(void *)&a1[v90];
          unint64_t v92 = v91 + 1;
          if (v91 == -1 || v92 > *(void *)&a1[*v3]) {
            goto LABEL_160;
          }
          int v93 = *(char *)(*(void *)&a1[*v5] + v91);
          *(void *)&a1[v90] = v92;
          if (v93 < 0)
          {
            BOOL v22 = v89++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_173;
        }
      case 0xCu:
        if (v15 == 2) {
          goto LABEL_172;
        }
        goto LABEL_185;
      case 0xDu:
        if (v15 == 2) {
          goto LABEL_172;
        }
        goto LABEL_185;
      case 0xEu:
        if (v15 == 2) {
          goto LABEL_172;
        }
        goto LABEL_185;
      case 0xFu:
        if (v15 == 2) {
          goto LABEL_172;
        }
        goto LABEL_185;
      case 0x10u:
        if (v15 == 2) {
          goto LABEL_172;
        }
        goto LABEL_185;
      case 0x11u:
        if (v15 == 2) {
          goto LABEL_172;
        }
        goto LABEL_185;
      case 0x12u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOPBTransitArtworkIsValid(a1)) {
          goto LABEL_180;
        }
        goto LABEL_185;
      default:
        if ((v8 >> 3) == 2047)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_185;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              break;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_173;
          }
LABEL_160:
          a1[*v4] = 1;
        }
        else
        {
LABEL_172:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_185;
          }
        }
        goto LABEL_173;
    }
  }
}

os_unfair_lock_s *_GEOPBTransitIncidentIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  int v2 = *(_DWORD *)(a1 + 136);
  if ((v2 & 0x3FA00) != 0) {
    return (os_unfair_lock_s *)1;
  }
  if ((v2 & 0x400) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 40);

  return GEOPBTransitArtworkIsDirty(v4);
}

os_unfair_lock_s *GEOPBTransitIncidentIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    int v2 = _GEOPBTransitIncidentIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return v2;
  }
  return result;
}

void sub_189C549CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitIncidentEntityReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          uint64_t v25 = objc_alloc_init(GEOPBTransitIncidentEntityFilter);
          if (!GEOPBTransitIncidentEntityFilterReadAllFrom((uint64_t)v25, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          unint64_t v26 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_36;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_38:
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v28 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v27;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_189C54FE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C55A14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C55C2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C55DA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C55F14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C562AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C56718(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C56884(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C56D78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C56EEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOPBTransitTimeRangeJSONRepresentation(unsigned int *a1)
{
  return _GEOPDTimeRangeDictionaryRepresentation(a1, 1);
}

id GEOPBTransitTimeRangeDictionaryRepresentation(unsigned int *a1)
{
  return _GEOPDTimeRangeDictionaryRepresentation(a1, 0);
}

void GEOPBTransitTimeRangeFromJSONRepresentation(void *a1, uint64_t a2)
{
}

void GEOPBTransitTimeRangeFromDictionaryRepresentation(void *a1, uint64_t a2)
{
}

void sub_189C5847C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitLineCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 56) readAll:1];
  [*(id *)(a1 + 88) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 72) readAll:1];
  [*(id *)(a1 + 112) readAll:1];
  int v2 = *(void **)(a1 + 64);

  return [v2 readAll:1];
}

uint64_t GEOPBTransitLineReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 124))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBTransitLineReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 128));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 120) = [v8 position];
  *(_DWORD *)(a1 + 124) = [v8 length];
  if (a3) {
    unsigned int v9 = (int *)&GEOPBTransitLineReadAllFrom_recursiveTag;
  }
  else {
    unsigned int v9 = (int *)&GEOPBTransitLineReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOPBTransitLineReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPBTransitLineCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 128));
  return Specified;
}

void sub_189C586A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPBTransitLineReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOPBTransitLineReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C5870C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitLineIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 3u:
        case 4u:
        case 0x1Eu:
        case 0x1Fu:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_86;
          }
          goto LABEL_102;
        case 5u:
        case 6u:
        case 8u:
        case 9u:
        case 0xCu:
        case 0xDu:
        case 0xEu:
        case 0x11u:
        case 0x13u:
        case 0x14u:
        case 0x15u:
        case 0x16u:
        case 0x17u:
        case 0x18u:
          goto LABEL_88;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_102;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_99;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_102;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_99;
          }
        case 0xBu:
          if (v15 == 2) {
            goto LABEL_88;
          }
          goto LABEL_102;
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_102;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_99;
          }
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_102;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_99;
          }
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_102;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_99;
          }
        case 0x19u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
            goto LABEL_102;
          }
          goto LABEL_86;
        case 0x1Au:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitTimeRangeIsValid(a1)) {
            goto LABEL_102;
          }
          goto LABEL_86;
        case 0x1Bu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitLineDisplayHintsIsValid(a1)) {
            goto LABEL_102;
          }
LABEL_86:
          PBReaderRecallMark();
          goto LABEL_99;
        case 0x1Cu:
          if (v15 == 2) {
            goto LABEL_88;
          }
          goto LABEL_102;
        case 0x1Du:
          if ((v8 & 7) != 0) {
            goto LABEL_102;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_99;
          }
        default:
          if ((v8 >> 3) == 2047)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_102;
            }
            unsigned int v17 = 0;
            while (1)
            {
              uint64_t v18 = *v2;
              uint64_t v19 = *(void *)&a1[v18];
              unint64_t v20 = v19 + 1;
              if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
                break;
              }
              int v21 = *(char *)(*(void *)&a1[*v5] + v19);
              *(void *)&a1[v18] = v20;
              if (v21 < 0)
              {
                BOOL v22 = v17++ > 8;
                if (!v22) {
                  continue;
                }
              }
              goto LABEL_99;
            }
LABEL_98:
            a1[*v4] = 1;
          }
          else
          {
LABEL_88:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_102:
              PBReaderRecallMark();
              return 0;
            }
          }
LABEL_99:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_100;
          }
          break;
      }
    }
  }
LABEL_100:
  BOOL v53 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v53;
}

BOOL GEOPBTransitTimeRangeIsValid(void *a1)
{
  uint64_t v6 = [a1 position];
  uint64_t v7 = [a1 length];
  int v5 = 0;
  uint64_t v4 = 0;
  BOOL AllFrom = GEOPBTransitTimeRangeReadAllFrom((uint64_t)&v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

BOOL GEOPBTransitLineDisplayHintsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

void sub_189C59230(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitLineIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  unsigned int v2 = *(_DWORD *)(a1 + 156);
  if ((v2 & 0x20000) != 0) {
    return 1;
  }
  if ((v2 & 0x400) != 0)
  {
    if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x4000) != 0)
  {
    if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 88))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x200) != 0)
  {
    if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x1000) == 0) {
    goto LABEL_14;
  }
  if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
    return 1;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 156);
LABEL_14:
  if ((v2 & 0x12900) != 0) {
    return 1;
  }
  return (v2 >> 15) & 1;
}

uint64_t GEOPBTransitTimeRangeWriteTo(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 8);
  if ((v2 & 2) != 0)
  {
    result = PBDataWriterWriteUint32Field();
    char v2 = *(unsigned char *)(v1 + 8);
  }
  if (v2)
  {
    return PBDataWriterWriteUint32Field();
  }
  return result;
}

os_unfair_lock_s *GEOPBTransitLineIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPBTransitLineIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 32);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189C59A54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C5A358(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitLineDisplayHintsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_34:
          *(unsigned char *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189C5AC38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitLineDisplayHintsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPBTransitLineDisplayHintsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C5AC9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C5B1C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitPaymentMethodReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 68) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 3) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v73 = v15 | v8;
        char v74 = v16 | v15 | v8;
        if ((v16 | v9)) {
          uint64_t v17 = 0;
        }
        else {
          uint64_t v17 = a3;
        }
        char v75 = (v17 == 0) | v16;
        BOOL v76 = v16;
        char v18 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_96;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_96:
      int v71 = 1;
      goto LABEL_97;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v76;
    if ((v75 & 1) == 0)
    {
      unsigned int v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 24;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_115;
        }
        char v65 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_93;
      case 2:
        if ((v9 & 1) == 0) {
          goto LABEL_74;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (2)
        {
          uint64_t v45 = *v18;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v20) + v46);
            *(void *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v28 = v43++ >= 9;
              if (v28)
              {
                uint64_t v44 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v44 = 0;
        }
LABEL_79:
        *(void *)(a1 + 32) = v44;
        goto LABEL_95;
      case 3:
        if ((v9 & 1) == 0) {
          goto LABEL_74;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        *(unsigned char *)(a1 + 68) |= 4u;
        while (2)
        {
          uint64_t v52 = *v18;
          uint64_t v53 = *(void *)(v3 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(v3 + *v20) + v53);
            *(void *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v28 = v50++ >= 9;
              if (v28)
              {
                LODWORD(v51) = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v51) = 0;
        }
LABEL_83:
        uint64_t v64 = 64;
        goto LABEL_88;
      case 4:
        if ((v9 & 1) == 0) {
          goto LABEL_74;
        }
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v51 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (2)
        {
          uint64_t v58 = *v18;
          uint64_t v59 = *(void *)(v3 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(v3 + *v20) + v59);
            *(void *)(v3 + v58) = v60;
            v51 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              BOOL v28 = v57++ >= 9;
              if (v28)
              {
                LODWORD(v51) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v51) = 0;
        }
LABEL_87:
        uint64_t v64 = 60;
LABEL_88:
        *(_DWORD *)(a1 + v64) = v51;
        goto LABEL_95;
      case 5:
        if (!v32) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x20) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 40;
LABEL_73:
          unint64_t v62 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          --v10;
LABEL_94:
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
          if (!(v74 & 1 | (v10 != 0))) {
            goto LABEL_96;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v65 = 4 * *(unsigned char *)(a1 + 68);
LABEL_93:
          v10 += v65 >> 7;
          goto LABEL_94;
        }
LABEL_115:
        int v71 = 0;
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_97:
        uint64_t v72 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        if (v73) {
LABEL_98:
        }
          *(unsigned char *)(a1 + v72[223]) |= 8u;
        if (v76 || (v71 & 1) == 0)
        {
          *(unsigned char *)(a1 + v72[223]) |= 0x10u;
          *(unsigned char *)(a1 + v72[223]) |= 0x20u;
          goto LABEL_109;
        }
        if (v17)
        {
          while (2)
          {
            while (1)
            {
              int v67 = *v17++;
              int v66 = v67;
              if (v67 == 1) {
                break;
              }
              if (v66 == 5)
              {
                char v68 = 32;
                goto LABEL_108;
              }
              if (!v66) {
                goto LABEL_109;
              }
            }
            char v68 = 16;
LABEL_108:
            *(unsigned char *)(a1 + v72[223]) |= v68;
            continue;
          }
        }
LABEL_109:
        if (v71) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v76)
        {
          unsigned int v69 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v73 & 1) == 0 || (*(unsigned char *)(a1 + 68) & 8) != 0)
        {
LABEL_74:
          char v63 = PBReaderSkipValueWithTag();
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v63 & 1) == 0)
          {
            int v71 = 0;
            goto LABEL_97;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v40 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v39;
          }
          int v41 = PBUnknownFieldAdd();
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v41)
          {
            int v71 = 0;
            uint64_t v72 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_98;
          }
        }
        goto LABEL_95;
    }
  }
}

void sub_189C5BEAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C5C7DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitPaymentMethodReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBTransitPaymentMethodReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPBTransitPaymentMethodReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPBTransitPaymentMethodReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPBTransitPaymentMethodReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189C5C968(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitPaymentMethodReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPBTransitPaymentMethodReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C5C9CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitPaymentMethodIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_51;
          }
          goto LABEL_47;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_51;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_48;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_51;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_48;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_51;
          }
          unsigned int v28 = 0;
          break;
        case 5u:
          if (v15 == 2) {
            goto LABEL_47;
          }
          goto LABEL_51;
        default:
LABEL_47:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_51:
          BOOL v33 = 0;
          goto LABEL_50;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_48;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_48:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
LABEL_50:
  PBReaderRecallMark();
  return v33;
}

void sub_189C5CED0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitPaymentMethodIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0x70) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189C5D2B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C5D67C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C5D970(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitPaymentMethodSuggestionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  char v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
  int v13 = ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 != 0;
        char v18 = v17 & ~(_BYTE)v11 | v7;
        char v19 = v17 | v11;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        if (((v17 | v11) | v8)) {
          int v21 = 0;
        }
        else {
          int v21 = a3;
        }
        int v84 = 1;
        char v22 = v17 & ~(_BYTE)v11 | v7;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_111;
        }
        char v82 = v18;
        char v85 = v19 | v18;
        char v86 = (v21 == 0) | v19;
        unsigned int v23 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
        char v83 = v19;
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v7;
LABEL_8:
        uint64_t v15 = v10;
        uint64_t v16 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v14;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v23)) {
      goto LABEL_109;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v20;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v32 = v26++ >= 9;
      if (v32)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    int v34 = v27 & 7;
    if (v33 || v34 == 4)
    {
LABEL_109:
      int v84 = 1;
      goto LABEL_110;
    }
    unint64_t v36 = v27 >> 3;
    BOOL v37 = v19;
    if ((v86 & 1) == 0)
    {
      uint64_t v38 = v21;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37 || (*(unsigned char *)(a1 + v12[225]) & 8) != 0) {
          goto LABEL_82;
        }
        if (v34 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_130;
          }
          unsigned int v23 = (int *)MEMORY[0x1E4F940C8];
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v23)) {
              break;
            }
            char v42 = 0;
            unsigned int v43 = 0;
            uint64_t v44 = 0;
            uint64_t v45 = (int *)MEMORY[0x1E4F940B8];
            while (1)
            {
              uint64_t v46 = *v20;
              uint64_t v47 = *(void *)(v3 + v46);
              unint64_t v48 = v47 + 1;
              if (v47 == -1 || v48 > *(void *)(v3 + *v6)) {
                break;
              }
              char v49 = *(unsigned char *)(*(void *)(v3 + *v45) + v47);
              *(void *)(v3 + v46) = v48;
              v44 |= (unint64_t)(v49 & 0x7F) << v42;
              if (v49 < 0)
              {
                v42 += 7;
                BOOL v32 = v43++ >= 9;
                if (!v32) {
                  continue;
                }
              }
              goto LABEL_53;
            }
            *(unsigned char *)(v3 + *v23) = 1;
LABEL_53:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v70 = 0;
          unsigned int v71 = 0;
          uint64_t v72 = 0;
          unsigned int v23 = (int *)MEMORY[0x1E4F940C8];
          while (1)
          {
            uint64_t v73 = *v20;
            uint64_t v74 = *(void *)(v3 + v73);
            unint64_t v75 = v74 + 1;
            if (v74 == -1 || v75 > *(void *)(v3 + *v6)) {
              break;
            }
            char v76 = *(unsigned char *)(*(void *)(v3 + *v24) + v74);
            *(void *)(v3 + v73) = v75;
            v72 |= (unint64_t)(v76 & 0x7F) << v70;
            if (v76 < 0)
            {
              v70 += 7;
              BOOL v32 = v71++ >= 9;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_104;
          }
          *(unsigned char *)(v3 + *v23) = 1;
LABEL_104:
          PBRepeatedUInt32Add();
        }
        char v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        char v19 = v83;
        goto LABEL_106;
      case 2:
        if (!v37) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + v12[225]) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_130;
          }
          char v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
          v9 += *(unsigned __int8 *)(a1 + 76) << 27 >> 31;
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_130;
        }
        uint64_t v53 = objc_alloc_init(GEOPBTransitPaymentMethodSuggestionDetails);
        if (GEOPBTransitPaymentMethodSuggestionDetailsReadAllFrom((uint64_t)v53, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          unint64_t v54 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v53;

          --v9;
          char v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
LABEL_95:
          char v19 = v83;
          unsigned int v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_106:
          uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
LABEL_107:
          if (!(v85 & 1 | (v9 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_109;
          }
          continue;
        }

LABEL_130:
        int v84 = 0;
        char v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        char v19 = v83;
LABEL_110:
        char v22 = v82;
LABEL_111:
        if (v22) {
LABEL_112:
        }
          *(unsigned char *)(a1 + v12[225]) |= 4u;
        if (v19 & 1 | ((v84 & 1) == 0))
        {
          *(unsigned char *)(a1 + v12[225]) |= 8u;
          *(unsigned char *)(a1 + v12[225]) |= 0x10u;
          goto LABEL_123;
        }
        if (v21)
        {
          while (1)
          {
            int v79 = *v21++;
            int v78 = v79;
            if (v79 == 1) {
              break;
            }
            if (v78 == 2)
            {
              char v77 = 16;
LABEL_119:
              *(unsigned char *)(a1 + v12[225]) |= v77;
            }
            else if (!v78)
            {
              goto LABEL_123;
            }
          }
          char v77 = 8;
          goto LABEL_119;
        }
LABEL_123:
        if (v84)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v19 & 1) == 0) {
            return v3;
          }
LABEL_127:
          unint64_t v80 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v19) {
            goto LABEL_127;
          }
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v57 = 0;
        *(unsigned char *)(a1 + v12[225]) |= 1u;
        unsigned int v23 = (int *)MEMORY[0x1E4F940C8];
        while (2)
        {
          uint64_t v58 = *v20;
          uint64_t v59 = *(void *)(v3 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(v3 + *v24) + v59);
            *(void *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              BOOL v32 = v56++ >= 9;
              if (v32)
              {
                LODWORD(v57) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v57) = 0;
        }
LABEL_87:
        uint64_t v69 = 68;
        goto LABEL_92;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v57 = 0;
        *(unsigned char *)(a1 + v12[225]) |= 2u;
        unsigned int v23 = (int *)MEMORY[0x1E4F940C8];
        while (2)
        {
          uint64_t v64 = *v20;
          uint64_t v65 = *(void *)(v3 + v64);
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(v3 + *v24) + v65);
            *(void *)(v3 + v64) = v66;
            v57 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              BOOL v32 = v63++ >= 9;
              if (v32)
              {
                LODWORD(v57) = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v57) = 0;
        }
LABEL_91:
        uint64_t v69 = 72;
LABEL_92:
        *(_DWORD *)(a1 + v69) = v57;
        goto LABEL_107;
      default:
        if ((v82 & 1) == 0 || (*(unsigned char *)(a1 + v12[225]) & 4) != 0)
        {
LABEL_82:
          char v68 = PBReaderSkipValueWithTag();
          uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
          char v19 = v83;
          char v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
          unsigned int v23 = (int *)MEMORY[0x1E4F940C8];
          if ((v68 & 1) == 0)
          {
            int v84 = 0;
            goto LABEL_110;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v50 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v51 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v50;
          }
          int v52 = PBUnknownFieldAdd();
          char v12 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
          char v19 = v83;
          unsigned int v23 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
          if (!v52)
          {
            int v84 = 0;
            goto LABEL_112;
          }
        }
        goto LABEL_107;
    }
  }
}

void sub_189C5E5B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C5F300(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitPaymentMethodSuggestionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBTransitPaymentMethodSuggestionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPBTransitPaymentMethodSuggestionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPBTransitPaymentMethodSuggestionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPBTransitPaymentMethodSuggestionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189C5F4A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitPaymentMethodSuggestionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPBTransitPaymentMethodSuggestionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C5F508(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitPaymentMethodSuggestionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_63;
            }
            while (1)
            {
LABEL_52:
              if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
                goto LABEL_31;
              }
              unsigned int v33 = a1[*v4];
              if (a1[*v4]) {
                goto LABEL_31;
              }
              while (1)
              {
                uint64_t v34 = *v2;
                uint64_t v35 = *(void *)&a1[v34];
                unint64_t v36 = v35 + 1;
                if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
                  break;
                }
                int v37 = *(char *)(*(void *)&a1[*v5] + v35);
                *(void *)&a1[v34] = v36;
                if (v37 < 0)
                {
                  BOOL v13 = v33++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_52;
              }
              a1[*v4] = 1;
            }
          }
          if ((v8 & 7) != 0) {
            goto LABEL_63;
          }
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_48;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              unsigned int v21 = v15++;
              if (v21 <= 8) {
                continue;
              }
            }
            goto LABEL_49;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitPaymentMethodSuggestionDetailsIsValid(a1)) {
            goto LABEL_63;
          }
LABEL_31:
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_63;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_48;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v27 = v22++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_49;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_63;
          }
          unsigned int v28 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_63:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v27 = v28++ > 8;
          if (!v27) {
            continue;
          }
        }
        goto LABEL_49;
      }
LABEL_48:
      a1[*v4] = 1;
LABEL_49:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOPBTransitPaymentMethodSuggestionDetailsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_41;
          }
          unsigned int v17 = 0;
          do
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_37;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0) {
              break;
            }
          }
          while (v17++ <= 8);
          goto LABEL_37;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_41;
          }
          goto LABEL_36;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAssetIsValid(a1)) {
            goto LABEL_41;
          }
LABEL_36:
          PBReaderRecallMark();
          goto LABEL_37;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_41:
            PBReaderRecallMark();
            return 0;
          }
LABEL_37:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_40;
          }
          break;
      }
    }
  }
LABEL_40:
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_189C5FD30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOPBTransitPaymentMethodSuggestionIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  if ((*(unsigned char *)(a1 + 76) & 0x28) != 0) {
    return (os_unfair_lock_s *)1;
  }
  if ((*(unsigned char *)(a1 + 76) & 0x10) == 0) {
    return 0;
  }
  id v3 = *(os_unfair_lock_s **)(a1 + 48);

  return GEOPBTransitPaymentMethodSuggestionDetailsIsDirty(v3);
}

os_unfair_lock_s *GEOPBTransitPaymentMethodSuggestionIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL v2 = _GEOPBTransitPaymentMethodSuggestionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return v2;
  }
  return result;
}

void sub_189C60140(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C604CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C607DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitPaymentMethodSuggestionDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 84)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFAFFFDFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 84) & 4) != 0)+ ((*(unsigned char *)(a1 + 84) & 2) != 0));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 3;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v61 = v18;
        char v62 = v19 | v18;
        if ((v19 | v9)) {
          unint64_t v20 = 0;
        }
        else {
          unint64_t v20 = a3;
        }
        char v63 = (v20 == 0) | v19;
        BOOL v64 = v19;
        int v21 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
        BOOL v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_95;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_95:
      int v59 = 1;
      goto LABEL_96;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v64;
    if ((v63 & 1) == 0)
    {
      unint64_t v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v9 & 1) == 0) {
          goto LABEL_80;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 84) |= 1u;
        while (1)
        {
          uint64_t v43 = *v21;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v7)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v23) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_83;
          }
          v40 += 7;
          BOOL v31 = v41++ >= 9;
          if (v31)
          {
            uint64_t v42 = 0;
            goto LABEL_85;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_83:
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v42 = 0;
        }
LABEL_85:
        *(void *)(a1 + 48) = v42;
        goto LABEL_94;
      case 2:
        if (!v35) {
          goto LABEL_80;
        }
        if ((*(unsigned char *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_115;
          }
          char v54 = 16 * *(unsigned char *)(a1 + 84);
          goto LABEL_92;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_115;
        }
        id v50 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_114;
        }
        PBReaderRecallMark();
        uint64_t v51 = 32;
        goto LABEL_73;
      case 3:
        if (!v35 || (*(unsigned char *)(a1 + 84) & 0x10) != 0) {
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_115;
        }
        id v50 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_114;
        }
        PBReaderRecallMark();
        -[GEOPBTransitPaymentMethodSuggestionDetails _addNoFlagsEducationalScreenPaymentBody:](a1, v50);
        goto LABEL_79;
      case 4:
        if (!v35) {
          goto LABEL_80;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_115;
          }
          char v54 = 2 * *(unsigned char *)(a1 + 84);
          goto LABEL_92;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_115;
        }
        id v50 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_114;
        }
        PBReaderRecallMark();
        uint64_t v51 = 64;
        goto LABEL_73;
      case 5:
        if (!v35) {
          goto LABEL_80;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_115;
          }
          char v54 = 4 * *(unsigned char *)(a1 + 84);
LABEL_92:
          v8 += v54 >> 7;
LABEL_93:
          unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_94:
          if (!(v62 & 1 | (v8 != 0))) {
            goto LABEL_95;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_115;
        }
        id v50 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v51 = 56;
LABEL_73:
          int v52 = *(void **)(a1 + v51);
          *(void *)(a1 + v51) = v50;

          --v8;
          goto LABEL_93;
        }
LABEL_114:

LABEL_115:
        int v59 = 0;
        unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_96:
        unint64_t v60 = &OBJC_IVAR___GEONonTiledAssets__flags;
        if (v61) {
LABEL_97:
        }
          *(unsigned char *)(a1 + v60[493]) |= 2u;
        if (v64 || (v59 & 1) == 0)
        {
          *(unsigned char *)(a1 + v60[493]) |= 8u;
          *(unsigned char *)(a1 + v60[493]) |= 0x10u;
          *(unsigned char *)(a1 + v60[493]) |= 0x40u;
          *(unsigned char *)(a1 + v60[493]) |= 0x20u;
          *(unsigned char *)(a1 + v60[493]) |= 4u;
        }
        else if (v20)
        {
          while (1)
          {
            int v56 = *v20++;
            char v55 = 8;
            switch(v56)
            {
              case 0:
                goto LABEL_108;
              case 2:
                goto LABEL_106;
              case 3:
                char v55 = 16;
                goto LABEL_106;
              case 4:
                char v55 = 64;
                goto LABEL_106;
              case 5:
                char v55 = 32;
                goto LABEL_106;
              case 6:
                char v55 = 4;
LABEL_106:
                *(unsigned char *)(a1 + v60[493]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_108:
        if (v59) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v64)
        {
          uint64_t v57 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 6:
        if (!v35 || (*(unsigned char *)(a1 + 84) & 4) != 0) {
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_115;
        }
        id v50 = objc_alloc_init(GEOAsset);
        if (!GEOAssetReadAllFrom((uint64_t)v50, (void *)v3)) {
          goto LABEL_114;
        }
        PBReaderRecallMark();
        -[GEOPBTransitPaymentMethodSuggestionDetails _addNoFlagsEducationalScreenAsset:](a1, v50);
LABEL_79:

        goto LABEL_93;
      default:
        if ((v61 & 1) == 0 || (*(unsigned char *)(a1 + 84) & 2) != 0)
        {
LABEL_80:
          char v53 = PBReaderSkipValueWithTag();
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v59 = 0;
            goto LABEL_96;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v48 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v47;
          }
          int v49 = PBUnknownFieldAdd();
          unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v49)
          {
            int v59 = 0;
            unint64_t v60 = &OBJC_IVAR___GEONonTiledAssets__flags;
            goto LABEL_97;
          }
        }
        goto LABEL_94;
    }
  }
}

void sub_189C611C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C61590(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C616F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C61864(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C627A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPBTransitPaymentMethodSuggestionDetailsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  [a1[4] readAll:1];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = a1[5];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  [a1[8] readAll:1];
  [a1[7] readAll:1];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = a1[3];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPBTransitPaymentMethodSuggestionDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBTransitPaymentMethodSuggestionDetailsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPBTransitPaymentMethodSuggestionDetailsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPBTransitPaymentMethodSuggestionDetailsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPBTransitPaymentMethodSuggestionDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPBTransitPaymentMethodSuggestionDetailsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189C62B08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitPaymentMethodSuggestionDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPBTransitPaymentMethodSuggestionDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C62B6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C62EA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitPaymentMethodSuggestionDetailsIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  int v2 = *(char *)(a1 + 84);
  if (v2 < 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 0x10) != 0) {
    return 1;
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 64))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 0x20) == 0) {
    goto LABEL_12;
  }
  if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
    return 1;
  }
  LOBYTE(v2) = *(unsigned char *)(a1 + 84);
LABEL_12:
  if ((v2 & 4) != 0) {
    return 1;
  }
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 40);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_27;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_27:

  return v3;
}

os_unfair_lock_s *GEOPBTransitPaymentMethodSuggestionDetailsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPBTransitPaymentMethodSuggestionDetailsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189C635EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C63B24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C63FD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitRoutingIncidentMessageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  long long v11 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
  int v12 = ((*(unsigned __int8 *)(a1 + 72) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 72) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 72) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v15 = v12 != 0;
        char v16 = v15 | v7;
        char v17 = v15 & ~(_BYTE)v7 | v8;
        long long v18 = (int *)MEMORY[0x1E4F940E8];
        if (((v15 | v7) | v9)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        int v20 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_95;
        }
        char v73 = v17;
        char v75 = v16 | v17;
        char v76 = (v19 == 0) | v16;
        int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        char v74 = v15 | v7;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_92;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v18;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_23;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_23:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_25:
    int v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_92:
      int v20 = 1;
      goto LABEL_93;
    }
    unint64_t v34 = v25 >> 3;
    BOOL v35 = v16;
    if ((v76 & 1) == 0)
    {
      unint64_t v36 = v19;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    if (v34 == 1) {
      break;
    }
    if (v34 == 2)
    {
      if (!v35 || (*(unsigned char *)(a1 + 72) & 4) != 0) {
        goto LABEL_72;
      }
      if (v32 == 2)
      {
        if (!PBReaderPlaceMark()) {
          goto LABEL_114;
        }
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        while (*(void *)(v3 + *v18) < *(void *)(v3 + *v6))
        {
          if (*(unsigned char *)(v3 + *v21)) {
            break;
          }
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v51 = 0;
          while (1)
          {
            uint64_t v52 = *v18;
            uint64_t v53 = *(void *)(v3 + v52);
            unint64_t v54 = v53 + 1;
            if (v53 == -1 || v54 > *(void *)(v3 + *v6)) {
              break;
            }
            char v55 = *(unsigned char *)(*(void *)(v3 + *v22) + v53);
            *(void *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v30 = v50++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_64;
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_64:
          PBRepeatedUInt32Add();
        }
        PBReaderRecallMark();
      }
      else
      {
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v63 = 0;
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        while (1)
        {
          uint64_t v64 = *v18;
          uint64_t v65 = *(void *)(v3 + v64);
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)(v3 + *v6)) {
            break;
          }
          char v67 = *(unsigned char *)(*(void *)(v3 + *v22) + v65);
          *(void *)(v3 + v64) = v66;
          v63 |= (unint64_t)(v67 & 0x7F) << v61;
          if (v67 < 0)
          {
            v61 += 7;
            BOOL v30 = v62++ >= 9;
            if (!v30) {
              continue;
            }
          }
          goto LABEL_90;
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_90:
        PBRepeatedUInt32Add();
      }
      goto LABEL_91;
    }
    if (v34 == 2047)
    {
      if (v9)
      {
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        while (1)
        {
          uint64_t v43 = *v18;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v6)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v22) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_77;
          }
          v40 += 7;
          BOOL v30 = v41++ >= 9;
          if (v30)
          {
            LODWORD(v42) = 0;
            goto LABEL_79;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_77:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v42) = 0;
        }
LABEL_79:
        *(_DWORD *)(a1 + 68) = v42;
        goto LABEL_73;
      }
LABEL_72:
      char v59 = PBReaderSkipValueWithTag();
      char v16 = v74;
      uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
      if (v59) {
        goto LABEL_73;
      }
      int v20 = 0;
LABEL_93:
      long long v11 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
      goto LABEL_94;
    }
    if ((v73 & 1) == 0 || (*(unsigned char *)(a1 + 72) & 2) != 0) {
      goto LABEL_72;
    }
    if (!*(void *)(a1 + 16))
    {
      id v56 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v57 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v56;
    }
    int v58 = PBUnknownFieldAdd();
    char v16 = v74;
    uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
    if (!v58)
    {
      int v20 = 0;
      long long v11 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
LABEL_96:
      *(unsigned char *)(a1 + v11[231]) |= 2u;
      goto LABEL_97;
    }
LABEL_73:
    if (!(v75 & 1 | (v10 != 0)) || *(void *)(v3 + *v18) >= *(void *)(v3 + *v6)) {
      goto LABEL_92;
    }
  }
  if (!v35) {
    goto LABEL_72;
  }
  if ((*(unsigned char *)(a1 + 72) & 8) == 0)
  {
    uint64_t v47 = PBReaderReadString();
    unint64_t v48 = *(void **)(a1 + 48);
    *(void *)(a1 + 48) = v47;

    --v10;
    char v16 = v74;
    uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
    goto LABEL_73;
  }
  char v60 = PBReaderSkipValueWithTag();
  uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
  if (v60)
  {
    v10 += *(unsigned __int8 *)(a1 + 72) << 28 >> 31;
LABEL_91:
    char v16 = v74;
    goto LABEL_73;
  }
LABEL_114:
  int v20 = 0;
  long long v11 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
  char v16 = v74;
LABEL_94:
  char v17 = v73;
LABEL_95:
  if (v17) {
    goto LABEL_96;
  }
LABEL_97:
  if (v16 & 1 | ((v20 & 1) == 0))
  {
    *(unsigned char *)(a1 + v11[231]) |= 8u;
    *(unsigned char *)(a1 + v11[231]) |= 4u;
    goto LABEL_107;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v69 = *v19++;
        int v68 = v69;
        if (v69 == 1) {
          break;
        }
        if (v68 == 2)
        {
          char v70 = 4;
          goto LABEL_106;
        }
        if (!v68) {
          goto LABEL_107;
        }
      }
      char v70 = 8;
LABEL_106:
      *(unsigned char *)(a1 + v11[231]) |= v70;
      continue;
    }
  }
LABEL_107:
  if (v20)
  {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
    if ((v16 & 1) == 0) {
      return v3;
    }
LABEL_111:
    unsigned int v71 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v16) {
      goto LABEL_111;
    }
  }
  return v3;
}

void sub_189C648D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C64DD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitRoutingIncidentMessageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBTransitRoutingIncidentMessageReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPBTransitRoutingIncidentMessageReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPBTransitRoutingIncidentMessageReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPBTransitRoutingIncidentMessageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189C652B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitRoutingIncidentMessageIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_53;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_53;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 1) {
        break;
      }
      if (v17 != 2)
      {
        if (v17 == 2047)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_55;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0 && v18++ <= 8) {
              continue;
            }
            goto LABEL_52;
          }
LABEL_40:
          a1[*v4] = 1;
          goto LABEL_52;
        }
        goto LABEL_38;
      }
      if (v15 != 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_55;
        }
        while (1)
        {
          uint64_t v24 = *v2;
          uint64_t v25 = *(void *)&a1[v24];
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
            goto LABEL_40;
          }
          int v27 = *(char *)(*(void *)&a1[*v5] + v25);
          *(void *)&a1[v24] = v26;
          if (v27 < 0)
          {
            unsigned int v28 = v15++;
            if (v28 <= 8) {
              continue;
            }
          }
          goto LABEL_52;
        }
      }
      if (!PBReaderPlaceMark())
      {
LABEL_55:
        PBReaderRecallMark();
        return 0;
      }
LABEL_42:
      while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
      {
        unsigned int v29 = a1[*v4];
        if (a1[*v4]) {
          break;
        }
        while (1)
        {
          uint64_t v30 = *v2;
          uint64_t v31 = *(void *)&a1[v30];
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
            break;
          }
          int v33 = *(char *)(*(void *)&a1[*v5] + v31);
          *(void *)&a1[v30] = v32;
          if (v33 < 0)
          {
            BOOL v13 = v29++ >= 9;
            if (!v13) {
              continue;
            }
          }
          goto LABEL_42;
        }
        a1[*v4] = 1;
      }
      PBReaderRecallMark();
LABEL_52:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_53;
      }
    }
    if (v15 != 2) {
      goto LABEL_55;
    }
LABEL_38:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_55;
    }
    goto LABEL_52;
  }
LABEL_53:
  BOOL v34 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v34;
}

void sub_189C6579C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitRoutingIncidentMessageIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 72) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189C659BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitScheduleLookupParametersReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 52) |= 1u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_61;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                uint64_t v20 = 0;
                goto LABEL_63;
              }
            }
            v3[*v6] = 1;
LABEL_61:
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_63:
            uint64_t v55 = 16;
            goto LABEL_72;
          case 2u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 52) |= 4u;
            while (2)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
                *(void *)&v3[v29] = v31;
                v20 |= (unint64_t)(v32 & 0x7F) << v27;
                if (v32 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    uint64_t v20 = 0;
                    goto LABEL_67;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_67:
            uint64_t v55 = 40;
            goto LABEL_72;
          case 3u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 52) |= 2u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
                *(void *)&v3[v35] = v37;
                v20 |= (unint64_t)(v38 & 0x7F) << v33;
                if (v38 < 0)
                {
                  v33 += 7;
                  BOOL v15 = v34++ >= 9;
                  if (v15)
                  {
                    uint64_t v20 = 0;
                    goto LABEL_71;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_71:
            uint64_t v55 = 24;
LABEL_72:
            *(void *)(a1 + v55) = v20;
            continue;
          case 4u:
            uint64_t v39 = PBReaderReadData();
            char v40 = *(void **)(a1 + 32);
            *(void *)(a1 + 32) = v39;

            continue;
          case 5u:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            *(unsigned char *)(a1 + 52) |= 8u;
            while (2)
            {
              uint64_t v44 = *v4;
              uint64_t v45 = *(void *)&v3[v44];
              unint64_t v46 = v45 + 1;
              if (v45 == -1 || v46 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v47 = *(unsigned char *)(*(void *)&v3[*v7] + v45);
                *(void *)&v3[v44] = v46;
                v43 |= (unint64_t)(v47 & 0x7F) << v41;
                if (v47 < 0)
                {
                  v41 += 7;
                  BOOL v15 = v42++ >= 9;
                  if (v15)
                  {
                    uint64_t v43 = 0;
                    goto LABEL_76;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v43 = 0;
            }
LABEL_76:
            BOOL v56 = v43 != 0;
            uint64_t v57 = 48;
            goto LABEL_81;
          case 6u:
            char v48 = 0;
            unsigned int v49 = 0;
            uint64_t v50 = 0;
            *(unsigned char *)(a1 + 52) |= 0x10u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unint64_t v26 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v25;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_84;
            }
            continue;
        }
        while (1)
        {
          uint64_t v51 = *v4;
          uint64_t v52 = *(void *)&v3[v51];
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)&v3[*v5]) {
            break;
          }
          char v54 = *(unsigned char *)(*(void *)&v3[*v7] + v52);
          *(void *)&v3[v51] = v53;
          v50 |= (unint64_t)(v54 & 0x7F) << v48;
          if ((v54 & 0x80) == 0) {
            goto LABEL_78;
          }
          v48 += 7;
          BOOL v15 = v49++ >= 9;
          if (v15)
          {
            uint64_t v50 = 0;
            goto LABEL_80;
          }
        }
        v3[*v6] = 1;
LABEL_78:
        if (v3[*v6]) {
          uint64_t v50 = 0;
        }
LABEL_80:
        BOOL v56 = v50 != 0;
        uint64_t v57 = 49;
LABEL_81:
        *(unsigned char *)(a1 + v57) = v56;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v58 = v3[*v6] == 0;
  }
  else
  {
LABEL_84:
    BOOL v58 = 0;
  }
  objc_sync_exit(v3);

  return v58;
}

void sub_189C66C90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitScheduleLookupParametersReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPBTransitScheduleLookupParametersReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C66D0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitScheduleLookupParametersIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 4u:
          if (v15 == 2) {
            goto LABEL_44;
          }
          goto LABEL_66;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v38 = 0;
          break;
        default:
LABEL_44:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_66:
          BOOL v43 = 0;
          goto LABEL_65;
      }
      while (1)
      {
        uint64_t v39 = *v2;
        uint64_t v40 = *(void *)&a1[v39];
        unint64_t v41 = v40 + 1;
        if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
          break;
        }
        int v42 = *(char *)(*(void *)&a1[*v5] + v40);
        *(void *)&a1[v39] = v41;
        if (v42 < 0)
        {
          BOOL v22 = v38++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_63;
      }
LABEL_62:
      a1[*v4] = 1;
LABEL_63:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v43 = a1[*v4] == 0;
LABEL_65:
  PBReaderRecallMark();
  return v43;
}

void sub_189C67B20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitStationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFBFFFCFFFALL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v75 = v17;
        char v76 = v8;
        char v77 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v78 = (v19 == 0) | v18;
        BOOL v79 = v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_106;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_106:
      int v73 = 1;
      goto LABEL_107;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v79;
    if ((v78 & 1) == 0)
    {
      uint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 3:
        if ((v76 & 1) == 0) {
          goto LABEL_84;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_87;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            uint64_t v41 = 0;
            goto LABEL_89;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_87:
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v41 = 0;
        }
LABEL_89:
        *(void *)(a1 + 32) = v41;
        goto LABEL_105;
      case 4:
        if (!v34) {
          goto LABEL_84;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_128;
          }
          char v67 = 8 * *(unsigned char *)(a1 + 76);
LABEL_98:
          v7 += v67 >> 7;
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_128;
        }
        BOOL v56 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v56, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v57 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v56;
LABEL_83:

          --v7;
LABEL_99:
          int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_105:
          if (!(v77 & 1 | (v7 != 0))) {
            goto LABEL_106;
          }
          continue;
        }
LABEL_127:

LABEL_128:
        int v73 = 0;
        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_107:
        char v74 = &OBJC_IVAR___GEONonTiledAssets__flags;
        if (v75) {
LABEL_108:
        }
          *(unsigned char *)(a1 + v74[515]) |= 8u;
        if (v79 || (v73 & 1) == 0)
        {
          *(unsigned char *)(a1 + v74[515]) |= 0x10u;
          *(unsigned char *)(a1 + v74[515]) |= 0x40u;
          *(unsigned char *)(a1 + v74[515]) |= 0x20u;
          goto LABEL_121;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              int v69 = *v19++;
              int v68 = v69;
              if (v69 > 11) {
                break;
              }
              if (v68 == 4)
              {
                char v70 = 16;
LABEL_119:
                *(unsigned char *)(a1 + v74[515]) |= v70;
                continue;
              }
              if (!v68) {
                goto LABEL_121;
              }
            }
            if (v68 == 13)
            {
              char v70 = 32;
            }
            else
            {
              if (v68 != 12) {
                continue;
              }
              char v70 = 64;
            }
            goto LABEL_119;
          }
        }
LABEL_121:
        if (v73) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v79)
        {
          unsigned int v71 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
      case 6:
      case 7:
      case 9:
      case 10:
      case 11:
        goto LABEL_56;
      case 8:
        if ((v76 & 1) == 0) {
          goto LABEL_84;
        }
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v48 = 0;
        *(unsigned char *)(a1 + 76) |= 4u;
        while (2)
        {
          uint64_t v60 = *v20;
          uint64_t v61 = *(void *)(v3 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(v3 + *v22) + v61);
            *(void *)(v3 + v60) = v62;
            v48 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              BOOL v30 = v59++ >= 9;
              if (v30)
              {
                LODWORD(v48) = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v48) = 0;
        }
LABEL_93:
        uint64_t v66 = 72;
        goto LABEL_104;
      case 12:
        if (!v34 || (*(unsigned char *)(a1 + 76) & 0x40) != 0) {
          goto LABEL_84;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_128;
        }
        BOOL v56 = objc_alloc_init(GEOPBTransitZoomRangeString);
        if (!GEOPBTransitZoomRangeStringReadAllFrom((uint64_t)v56, (void *)v3, v10 & 1)) {
          goto LABEL_127;
        }
        PBReaderRecallMark();
        -[GEOPBTransitStation _addNoFlagsZoomName:](a1, v56);

        goto LABEL_99;
      case 13:
        if (!v34) {
          goto LABEL_84;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) == 0)
        {
          uint64_t v64 = PBReaderReadString();
          uint64_t v57 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v64;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_128;
        }
        char v67 = 4 * *(unsigned char *)(a1 + 76);
        goto LABEL_98;
      default:
        if (v33 == 2047)
        {
          if (v76)
          {
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v48 = 0;
            *(unsigned char *)(a1 + 76) |= 2u;
            while (1)
            {
              uint64_t v49 = *v20;
              uint64_t v50 = *(void *)(v3 + v49);
              unint64_t v51 = v50 + 1;
              if (v50 == -1 || v51 > *(void *)(v3 + *v6)) {
                break;
              }
              char v52 = *(unsigned char *)(*(void *)(v3 + *v22) + v50);
              *(void *)(v3 + v49) = v51;
              v48 |= (unint64_t)(v52 & 0x7F) << v46;
              if ((v52 & 0x80) == 0) {
                goto LABEL_101;
              }
              v46 += 7;
              BOOL v30 = v47++ >= 9;
              if (v30)
              {
                LODWORD(v48) = 0;
                goto LABEL_103;
              }
            }
            *(unsigned char *)(v3 + *v21) = 1;
LABEL_101:
            if (*(unsigned char *)(v3 + *v21)) {
              LODWORD(v48) = 0;
            }
LABEL_103:
            uint64_t v66 = 68;
LABEL_104:
            *(_DWORD *)(a1 + v66) = v48;
            goto LABEL_105;
          }
LABEL_84:
          char v65 = PBReaderSkipValueWithTag();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v65 & 1) == 0)
          {
            int v73 = 0;
            goto LABEL_107;
          }
          goto LABEL_105;
        }
LABEL_56:
        if ((v75 & 1) == 0 || (*(unsigned char *)(a1 + 76) & 8) != 0) {
          goto LABEL_84;
        }
        if (!*(void *)(a1 + 16))
        {
          id v53 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          char v54 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v53;
        }
        int v55 = PBUnknownFieldAdd();
        int v21 = (int *)MEMORY[0x1E4F940C8];
        if (!v55)
        {
          int v73 = 0;
          char v74 = &OBJC_IVAR___GEONonTiledAssets__flags;
          goto LABEL_108;
        }
        goto LABEL_105;
    }
  }
}

void sub_189C68710(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C68AD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C69688(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPBTransitStationCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 24) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 48);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPBTransitStationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBTransitStationReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPBTransitStationReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPBTransitStationReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPBTransitStationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPBTransitStationCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189C69934(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitStationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPBTransitStationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C69998(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitStationIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_59;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_56;
          }
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_59;
          }
          goto LABEL_53;
        case 5u:
        case 6u:
        case 7u:
        case 9u:
        case 0xAu:
        case 0xBu:
          goto LABEL_55;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_59;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_56;
          }
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitZoomRangeStringIsValid(a1)) {
            goto LABEL_59;
          }
LABEL_53:
          PBReaderRecallMark();
          goto LABEL_56;
        case 0xDu:
          if (v15 == 2) {
            goto LABEL_55;
          }
          goto LABEL_59;
        default:
          if ((v8 >> 3) == 2047)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_59;
            }
            unsigned int v23 = 0;
            while (1)
            {
              uint64_t v24 = *v2;
              uint64_t v25 = *(void *)&a1[v24];
              unint64_t v26 = v25 + 1;
              if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
                break;
              }
              int v27 = *(char *)(*(void *)&a1[*v5] + v25);
              *(void *)&a1[v24] = v26;
              if (v27 < 0)
              {
                BOOL v22 = v23++ > 8;
                if (!v22) {
                  continue;
                }
              }
              goto LABEL_56;
            }
LABEL_49:
            a1[*v4] = 1;
          }
          else
          {
LABEL_55:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_59:
              PBReaderRecallMark();
              return 0;
            }
          }
LABEL_56:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_57;
          }
          break;
      }
    }
  }
LABEL_57:
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_189C69FBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitStationIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = *(unsigned __int8 *)(a1 + 76) > 0xFu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189C6A514(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C6AA04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C6AE5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitStopReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFF8FFFAFFFCFFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 92) >> 5) & 1)+ ((*(_WORD *)(a1 + 92) >> 3) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v77 = v17;
        char v78 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v79 = (v19 == 0) | v18;
        BOOL v80 = v18;
        int v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_120;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_120:
      int v75 = 1;
      goto LABEL_121;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v80;
    if ((v79 & 1) == 0)
    {
      uint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_94;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(_WORD *)(a1 + 92) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_97;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            uint64_t v41 = 0;
            goto LABEL_99;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_97:
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v41 = 0;
        }
LABEL_99:
        *(void *)(a1 + 32) = v41;
        goto LABEL_119;
      case 2:
      case 3:
      case 5:
      case 6:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
        goto LABEL_56;
      case 4:
        if (!v34) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 92) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_147;
          }
          __int16 v69 = *(_WORD *)(a1 + 92) << 11;
          goto LABEL_112;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_147;
        }
        BOOL v56 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v56, (void *)v3)) {
          goto LABEL_146;
        }
        PBReaderRecallMark();
        uint64_t v57 = 24;
        goto LABEL_75;
      case 7:
        if (!v34) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 92) & 0x80) == 0)
        {
          uint64_t v58 = PBReaderReadString();
          uint64_t v59 = 56;
          goto LABEL_92;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_147;
        }
        __int16 v69 = *(_WORD *)(a1 + 92) << 8;
        goto LABEL_112;
      case 14:
        if (!v34) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 92) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_147;
          }
          __int16 v69 = *(_WORD *)(a1 + 92) << 9;
LABEL_112:
          v7 += v69 >> 15;
LABEL_113:
          int v21 = (int *)MEMORY[0x1E4F940C8];
          BOOL v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_119;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_147;
        }
        BOOL v56 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v56, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v57 = 48;
LABEL_75:
          uint64_t v60 = *(void **)(a1 + v57);
          *(void *)(a1 + v57) = v56;
LABEL_93:

          --v7;
          goto LABEL_113;
        }
LABEL_146:

LABEL_147:
        int v75 = 0;
        char v76 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_122:
        if (v77) {
LABEL_123:
        }
          *(_WORD *)(a1 + v76[236]) |= 8u;
        if (v80 || (v75 & 1) == 0)
        {
          *(_WORD *)(a1 + v76[236]) |= 0x10u;
          *(_WORD *)(a1 + v76[236]) |= 0x80u;
          *(_WORD *)(a1 + v76[236]) |= 0x40u;
          *(_WORD *)(a1 + v76[236]) |= 0x100u;
          *(_WORD *)(a1 + v76[236]) |= 0x20u;
          goto LABEL_140;
        }
        if (v19)
        {
          while (1)
          {
            int v71 = *v19++;
            int v70 = v71;
            if (v71 > 13)
            {
              switch(v70)
              {
                case 14:
                  __int16 v72 = 64;
                  break;
                case 16:
                  __int16 v72 = 256;
                  break;
                case 17:
                  __int16 v72 = 32;
                  break;
                default:
                  continue;
              }
              goto LABEL_138;
            }
            if (v70 == 4) {
              break;
            }
            if (v70 == 7)
            {
              __int16 v72 = 128;
LABEL_138:
              *(_WORD *)(a1 + v76[236]) |= v72;
              continue;
            }
            if (!v70) {
              goto LABEL_140;
            }
          }
          __int16 v72 = 16;
          goto LABEL_138;
        }
LABEL_140:
        if (v75) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v80)
        {
          int v73 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_94;
        }
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 92) |= 2u;
        while (2)
        {
          uint64_t v63 = *v20;
          uint64_t v64 = *(void *)(v3 + v63);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(v3 + *v22) + v64);
            *(void *)(v3 + v63) = v65;
            v48 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              BOOL v30 = v62++ >= 9;
              if (v30)
              {
                LODWORD(v48) = 0;
                goto LABEL_103;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v48) = 0;
        }
LABEL_103:
        uint64_t v68 = 84;
        goto LABEL_118;
      case 16:
        if (!v34 || (*(_WORD *)(a1 + 92) & 0x100) != 0) {
          goto LABEL_94;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_147;
        }
        BOOL v56 = objc_alloc_init(GEOPBTransitZoomRangeString);
        if (!GEOPBTransitZoomRangeStringReadAllFrom((uint64_t)v56, (void *)v3, v10 & 1)) {
          goto LABEL_146;
        }
        PBReaderRecallMark();
        -[GEOPBTransitStop _addNoFlagsZoomName:](a1, v56);

        goto LABEL_113;
      case 17:
        if (!v34) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 92) & 0x20) == 0)
        {
          uint64_t v58 = PBReaderReadString();
          uint64_t v59 = 40;
LABEL_92:
          uint64_t v60 = *(void **)(a1 + v59);
          *(void *)(a1 + v59) = v58;
          goto LABEL_93;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_147;
        }
        __int16 v69 = *(_WORD *)(a1 + 92) << 10;
        goto LABEL_112;
      default:
        if (v33 == 2047)
        {
          if (v8)
          {
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v48 = 0;
            *(_WORD *)(a1 + 92) |= 4u;
            while (1)
            {
              uint64_t v49 = *v20;
              uint64_t v50 = *(void *)(v3 + v49);
              unint64_t v51 = v50 + 1;
              if (v50 == -1 || v51 > *(void *)(v3 + *v6)) {
                break;
              }
              char v52 = *(unsigned char *)(*(void *)(v3 + *v22) + v50);
              *(void *)(v3 + v49) = v51;
              v48 |= (unint64_t)(v52 & 0x7F) << v46;
              if ((v52 & 0x80) == 0) {
                goto LABEL_115;
              }
              v46 += 7;
              BOOL v30 = v47++ >= 9;
              if (v30)
              {
                LODWORD(v48) = 0;
                goto LABEL_117;
              }
            }
            *(unsigned char *)(v3 + *v21) = 1;
LABEL_115:
            if (*(unsigned char *)(v3 + *v21)) {
              LODWORD(v48) = 0;
            }
LABEL_117:
            uint64_t v68 = 88;
LABEL_118:
            *(_DWORD *)(a1 + v68) = v48;
            goto LABEL_119;
          }
        }
        else
        {
LABEL_56:
          if ((v77 & 1) != 0 && (*(_WORD *)(a1 + 92) & 8) == 0)
          {
            if (!*(void *)(a1 + 16))
            {
              id v53 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              char v54 = *(void **)(a1 + 16);
              *(void *)(a1 + 16) = v53;
            }
            int v55 = PBUnknownFieldAdd();
            int v21 = (int *)MEMORY[0x1E4F940C8];
            BOOL v22 = (int *)MEMORY[0x1E4F940B8];
            if (!v55)
            {
              int v75 = 0;
              char v76 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
              goto LABEL_123;
            }
            goto LABEL_119;
          }
        }
LABEL_94:
        char v67 = PBReaderSkipValueWithTag();
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        if ((v67 & 1) == 0)
        {
          int v75 = 0;
LABEL_121:
          char v76 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
          goto LABEL_122;
        }
LABEL_119:
        if (!(v78 & 1 | (v7 != 0))) {
          goto LABEL_120;
        }
        continue;
    }
  }
}

void sub_189C6B9A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C6BB14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C6BCF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C6C0B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C6CCD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPBTransitStopCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [a1[3] readAll:1];
  [a1[6] readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = a1[8];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPBTransitStopReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBTransitStopReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPBTransitStopReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPBTransitStopReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPBTransitStopReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPBTransitStopCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189C6CF8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitStopReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPBTransitStopReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C6CFF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitStopIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_64;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_55;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 2u:
        case 3u:
        case 5u:
        case 6u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
        case 0xDu:
          goto LABEL_61;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_64;
          }
          goto LABEL_59;
        case 7u:
          if (v15 == 2) {
            goto LABEL_61;
          }
          goto LABEL_64;
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
            goto LABEL_64;
          }
          goto LABEL_59;
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_64;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_55;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitZoomRangeStringIsValid(a1)) {
            goto LABEL_64;
          }
LABEL_59:
          PBReaderRecallMark();
          goto LABEL_62;
        case 0x11u:
          if (v15 == 2) {
            goto LABEL_61;
          }
          goto LABEL_64;
        default:
          if ((v8 >> 3) == 2047)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_64;
            }
            unsigned int v23 = 0;
            while (1)
            {
              uint64_t v24 = *v2;
              uint64_t v25 = *(void *)&a1[v24];
              unint64_t v26 = v25 + 1;
              if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
                break;
              }
              int v27 = *(char *)(*(void *)&a1[*v5] + v25);
              *(void *)&a1[v24] = v26;
              if (v27 < 0)
              {
                BOOL v22 = v23++ > 8;
                if (!v22) {
                  continue;
                }
              }
              goto LABEL_62;
            }
LABEL_55:
            a1[*v4] = 1;
          }
          else
          {
LABEL_61:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_64:
              PBReaderRecallMark();
              return 0;
            }
          }
LABEL_62:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_63;
          }
          break;
      }
    }
  }
LABEL_63:
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_189C6D6A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitStopIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  BOOL v2 = (*(_WORD *)(a1 + 92) & 0x3F0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_189C6DC78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C6E220(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C6E6AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitSystemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFDFFFAFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 80) & 4) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v76 = v17;
        char v77 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v78 = (v19 == 0) | v18;
        BOOL v79 = v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_106;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_106:
      int v74 = 1;
      goto LABEL_107;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v79;
    if ((v78 & 1) == 0)
    {
      uint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if ((int)v33 > 14) {
      break;
    }
    switch(v33)
    {
      case 1:
        if (v8)
        {
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v51 = 0;
          *(unsigned char *)(a1 + 80) |= 1u;
          char v6 = (int *)MEMORY[0x1E4F940E0];
          while (1)
          {
            uint64_t v52 = *v20;
            uint64_t v53 = *(void *)(v3 + v52);
            unint64_t v54 = v53 + 1;
            if (v53 == -1 || v54 > *(void *)(v3 + *v6)) {
              break;
            }
            char v55 = *(unsigned char *)(*(void *)(v3 + *v22) + v53);
            *(void *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if ((v55 & 0x80) == 0) {
              goto LABEL_92;
            }
            v49 += 7;
            BOOL v30 = v50++ >= 9;
            if (v30)
            {
              uint64_t v51 = 0;
              goto LABEL_94;
            }
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_92:
          if (*(unsigned char *)(v3 + *v21)) {
            uint64_t v51 = 0;
          }
LABEL_94:
          *(void *)(a1 + 32) = v51;
          goto LABEL_105;
        }
        break;
      case 5:
        if (v34)
        {
          if ((*(unsigned char *)(a1 + 80) & 0x40) != 0)
          {
            char v67 = PBReaderSkipValueWithTag();
            char v6 = (int *)MEMORY[0x1E4F940E0];
            if ((v67 & 1) == 0) {
              goto LABEL_131;
            }
            char v66 = 2 * *(unsigned char *)(a1 + 80);
            goto LABEL_103;
          }
          uint64_t v56 = PBReaderReadString();
          uint64_t v57 = 56;
LABEL_78:
          uint64_t v60 = *(void **)(a1 + v57);
          *(void *)(a1 + v57) = v56;

          --v7;
          int v21 = (int *)MEMORY[0x1E4F940C8];
          char v6 = (int *)MEMORY[0x1E4F940E0];
          goto LABEL_105;
        }
        break;
      case 0xD:
        if (v34)
        {
          if ((*(unsigned char *)(a1 + 80) & 0x20) != 0)
          {
            char v65 = PBReaderSkipValueWithTag();
            char v6 = (int *)MEMORY[0x1E4F940E0];
            if ((v65 & 1) == 0) {
              goto LABEL_131;
            }
            char v66 = 4 * *(unsigned char *)(a1 + 80);
            goto LABEL_103;
          }
          char v39 = PBReaderPlaceMark();
          char v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v39 & 1) == 0) {
            goto LABEL_131;
          }
          unsigned int v40 = objc_alloc_init(GEOStyleAttributes);
          if (!GEOStyleAttributesReadAllFrom((uint64_t)v40, (void *)v3)) {
            goto LABEL_130;
          }
          PBReaderRecallMark();
          uint64_t v41 = 48;
          goto LABEL_74;
        }
        break;
      default:
LABEL_79:
        if ((v76 & 1) != 0 && (*(unsigned char *)(a1 + 80) & 4) == 0)
        {
          if (!*(void *)(a1 + 16))
          {
            id v61 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v62 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v61;
          }
          int v63 = PBUnknownFieldAdd();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          char v6 = (int *)MEMORY[0x1E4F940E0];
          if (!v63)
          {
            int v74 = 0;
            int v75 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_109;
          }
          goto LABEL_105;
        }
        break;
    }
LABEL_85:
    char v64 = PBReaderSkipValueWithTag();
    int v21 = (int *)MEMORY[0x1E4F940C8];
    char v6 = (int *)MEMORY[0x1E4F940E0];
    if ((v64 & 1) == 0)
    {
      int v74 = 0;
LABEL_107:
      int v75 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
      goto LABEL_108;
    }
LABEL_105:
    if (!(v77 & 1 | (v7 != 0))) {
      goto LABEL_106;
    }
  }
  if (v33 != 15)
  {
    if (v33 == 16)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 80) & 0x10) != 0)
        {
          char v69 = PBReaderSkipValueWithTag();
          char v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v69 & 1) == 0) {
            goto LABEL_131;
          }
          char v66 = 8 * *(unsigned char *)(a1 + 80);
LABEL_103:
          v7 += v66 >> 7;
LABEL_104:
          int v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_105;
        }
        uint64_t v56 = PBReaderReadString();
        uint64_t v57 = 40;
        goto LABEL_78;
      }
    }
    else
    {
      if (v33 != 2047) {
        goto LABEL_79;
      }
      if (v8)
      {
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 80) |= 2u;
        char v6 = (int *)MEMORY[0x1E4F940E0];
        while (1)
        {
          uint64_t v45 = *v20;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
            break;
          }
          char v48 = *(unsigned char *)(*(void *)(v3 + *v22) + v46);
          *(void *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0) {
            goto LABEL_88;
          }
          v42 += 7;
          BOOL v30 = v43++ >= 9;
          if (v30)
          {
            LODWORD(v44) = 0;
            goto LABEL_90;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_88:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v44) = 0;
        }
LABEL_90:
        *(_DWORD *)(a1 + 76) = v44;
        goto LABEL_105;
      }
    }
    goto LABEL_85;
  }
  if (!v34) {
    goto LABEL_85;
  }
  if ((*(unsigned char *)(a1 + 80) & 8) != 0)
  {
    char v68 = PBReaderSkipValueWithTag();
    char v6 = (int *)MEMORY[0x1E4F940E0];
    if ((v68 & 1) == 0) {
      goto LABEL_131;
    }
    char v66 = 16 * *(unsigned char *)(a1 + 80);
    goto LABEL_103;
  }
  char v58 = PBReaderPlaceMark();
  char v6 = (int *)MEMORY[0x1E4F940E0];
  if ((v58 & 1) == 0) {
    goto LABEL_131;
  }
  unsigned int v40 = objc_alloc_init(GEOPBTransitArtwork);
  if (GEOPBTransitArtworkReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v41 = 24;
LABEL_74:
    uint64_t v59 = *(void **)(a1 + v41);
    *(void *)(a1 + v41) = v40;

    --v7;
    goto LABEL_104;
  }
LABEL_130:

LABEL_131:
  int v74 = 0;
  int v75 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
  int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_108:
  if ((v76 & 1) == 0) {
    goto LABEL_110;
  }
LABEL_109:
  *(unsigned char *)(a1 + v75[238]) |= 4u;
LABEL_110:
  if (v79 || (v74 & 1) == 0)
  {
    *(unsigned char *)(a1 + v75[238]) |= 0x40u;
    *(unsigned char *)(a1 + v75[238]) |= 0x20u;
    *(unsigned char *)(a1 + v75[238]) |= 8u;
    *(unsigned char *)(a1 + v75[238]) |= 0x10u;
    goto LABEL_124;
  }
  if (v19)
  {
    while (1)
    {
      while (1)
      {
        int v71 = *v19++;
        int v70 = v71;
        if (v71 <= 14) {
          break;
        }
        if (v70 == 15)
        {
          LOBYTE(v70) = 8;
          goto LABEL_122;
        }
        if (v70 == 16) {
          goto LABEL_122;
        }
      }
      if (v70 == 5) {
        break;
      }
      if (v70 == 13)
      {
        LOBYTE(v70) = 32;
LABEL_122:
        *(unsigned char *)(a1 + v75[238]) |= v70;
        continue;
      }
      if (!v70) {
        goto LABEL_124;
      }
    }
    LOBYTE(v70) = 64;
    goto LABEL_122;
  }
LABEL_124:
  if (v74) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v79)
  {
    __int16 v72 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189C6F0B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C6F21C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C6F384(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C6FC48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitSystemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBTransitSystemReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPBTransitSystemReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPBTransitSystemReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPBTransitSystemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 48) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189C6FE00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitSystemReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPBTransitSystemReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C6FE64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitSystemIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((int)(v8 >> 3) > 14)
      {
        switch(v17)
        {
          case 0xF:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
            {
LABEL_57:
              PBReaderRecallMark();
              return 0;
            }
            goto LABEL_51;
          case 0x10:
            if (v15 != 2) {
              goto LABEL_57;
            }
            break;
          case 0x7FF:
            if ((v8 & 7) != 0) {
              goto LABEL_57;
            }
            unsigned int v18 = 0;
            while (1)
            {
              uint64_t v19 = *v2;
              uint64_t v20 = *(void *)&a1[v19];
              unint64_t v21 = v20 + 1;
              if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
                break;
              }
              int v22 = *(char *)(*(void *)&a1[*v5] + v20);
              *(void *)&a1[v19] = v21;
              if (v22 < 0)
              {
                BOOL v23 = v18++ > 8;
                if (!v23) {
                  continue;
                }
              }
              goto LABEL_54;
            }
LABEL_45:
            a1[*v4] = 1;
            continue;
        }
      }
      else
      {
        switch(v17)
        {
          case 1:
            if ((v8 & 7) != 0) {
              goto LABEL_57;
            }
            unsigned int v24 = 0;
            while (1)
            {
              uint64_t v25 = *v2;
              uint64_t v26 = *(void *)&a1[v25];
              unint64_t v27 = v26 + 1;
              if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
                goto LABEL_45;
              }
              int v28 = *(char *)(*(void *)&a1[*v5] + v26);
              *(void *)&a1[v25] = v27;
              if (v28 < 0)
              {
                BOOL v23 = v24++ > 8;
                if (!v23) {
                  continue;
                }
              }
              goto LABEL_54;
            }
          case 5:
            if (v15 != 2) {
              goto LABEL_57;
            }
            break;
          case 0xD:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
              goto LABEL_57;
            }
LABEL_51:
            PBReaderRecallMark();
            continue;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_57;
      }
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

void sub_189C70384(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitSystemIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
  if (v2 > 0x1F) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOPBTransitSystemIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPBTransitSystemIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189C707D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C70BF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOPBTransitTimeRangeDescription(unsigned int *a1)
{
  unsigned int v2 = NSString;
  id v3 = _GEOPDTimeRangeDictionaryRepresentation(a1, 0);
  uint64_t v4 = [v2 stringWithFormat:@"GEOPBTransitTimeRange<%p> %@", a1, v3];

  return v4;
}

BOOL GEOPBTransitTimeRangeReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOPBTransitTimeRangeReadAllFrom(a1, a2);
}

BOOL GEOPBTransitTimeRangeReadAllFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    unsigned int v7 = (_DWORD *)(a1 + 4);
    unint64_t v8 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v3;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v4)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          unint64_t v11 = 0;
          int v17 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v17 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v17 || (v11 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v11 >> 3) == 2) {
        break;
      }
      if ((v11 >> 3) == 1)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 8) |= 2u;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            unint64_t v27 = v7;
            goto LABEL_38;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v8) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            break;
          }
          v19 += 7;
          BOOL v26 = v20++ > 8;
          if (v26)
          {
            LODWORD(v21) = 0;
            unint64_t v27 = v7;
            goto LABEL_41;
          }
        }
        unint64_t v27 = v7;
LABEL_39:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_41:
        *unint64_t v27 = v21;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_42:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v28 = 0;
    unsigned int v29 = 0;
    uint64_t v21 = 0;
    *(unsigned char *)(a1 + 8) |= 1u;
    while (1)
    {
      uint64_t v30 = *v3;
      uint64_t v31 = *(void *)(a2 + v30);
      unint64_t v32 = v31 + 1;
      if (v31 == -1 || v32 > *(void *)(a2 + *v4)) {
        break;
      }
      char v33 = *(unsigned char *)(*(void *)(a2 + *v8) + v31);
      *(void *)(a2 + v30) = v32;
      v21 |= (unint64_t)(v33 & 0x7F) << v28;
      if ((v33 & 0x80) == 0)
      {
        unint64_t v27 = (_DWORD *)a1;
        goto LABEL_39;
      }
      v28 += 7;
      BOOL v26 = v29++ > 8;
      if (v26)
      {
        LODWORD(v21) = 0;
        unint64_t v27 = (_DWORD *)a1;
        goto LABEL_41;
      }
    }
    unint64_t v27 = (_DWORD *)a1;
LABEL_38:
    *(unsigned char *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL GEOPBTransitTimeRangeEquals(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(_DWORD *)(a1 + 8) == (unint64_t)*(unsigned int *)(a2 + 8);
}

uint64_t GEOPBTransitTimeRangeHash()
{
  return PBHashBytes();
}

BOOL GEOPBTransitTriggerRegionReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_64;
            }
            unsigned int v18 = objc_alloc_init(GEOLatLng);
            if (GEOLatLngReadAllFrom((uint64_t)v18, v3))
            {
              PBReaderRecallMark();
              char v19 = *(void **)(a1 + 16);
              *(void *)(a1 + 16) = v18;

              continue;
            }

            goto LABEL_64;
          case 2u:
            char v22 = 0;
            unsigned int v23 = 0;
            uint64_t v24 = 0;
            *(unsigned char *)(a1 + 36) |= 4u;
            while (2)
            {
              uint64_t v25 = *v4;
              uint64_t v26 = *(void *)&v3[v25];
              unint64_t v27 = v26 + 1;
              if (v26 == -1 || v27 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v28 = *(unsigned char *)(*(void *)&v3[*v7] + v26);
                *(void *)&v3[v25] = v27;
                v24 |= (unint64_t)(v28 & 0x7F) << v22;
                if (v28 < 0)
                {
                  v22 += 7;
                  BOOL v15 = v23++ >= 9;
                  if (v15)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_51;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v24) = 0;
            }
LABEL_51:
            uint64_t v41 = 32;
            goto LABEL_60;
          case 3u:
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v24 = 0;
            *(unsigned char *)(a1 + 36) |= 2u;
            while (2)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
                *(void *)&v3[v31] = v33;
                v24 |= (unint64_t)(v34 & 0x7F) << v29;
                if (v34 < 0)
                {
                  v29 += 7;
                  BOOL v15 = v30++ >= 9;
                  if (v15)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v24) = 0;
            }
LABEL_55:
            uint64_t v41 = 28;
            goto LABEL_60;
          case 4u:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v24 = 0;
            *(unsigned char *)(a1 + 36) |= 1u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              uint64_t v21 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v20;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_64;
            }
            continue;
        }
        while (1)
        {
          uint64_t v37 = *v4;
          uint64_t v38 = *(void *)&v3[v37];
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)&v3[*v5]) {
            break;
          }
          char v40 = *(unsigned char *)(*(void *)&v3[*v7] + v38);
          *(void *)&v3[v37] = v39;
          v24 |= (unint64_t)(v40 & 0x7F) << v35;
          if ((v40 & 0x80) == 0) {
            goto LABEL_57;
          }
          v35 += 7;
          BOOL v15 = v36++ >= 9;
          if (v15)
          {
            LODWORD(v24) = 0;
            goto LABEL_59;
          }
        }
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6]) {
          LODWORD(v24) = 0;
        }
LABEL_59:
        uint64_t v41 = 24;
LABEL_60:
        *(_DWORD *)(a1 + v41) = v24;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_64:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_189C71FB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitTriggerRegionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPBTransitTriggerRegionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C72024(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitTriggerRegionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_53;
          }
          PBReaderRecallMark();
          continue;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v28 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_49:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_189C72BD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitVehiclePositionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = ((*(unsigned __int16 *)(a1 + 116) >> 4) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 116)), (uint16x4_t)0xFFF6FFF8FFF7FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 116) >> 6) & 1)+ ((*(_WORD *)(a1 + 116) >> 11) & 1)+ ((*(_WORD *)(a1 + 116) >> 5) & 1));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 4;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v75 = v18;
        char v76 = v19 | v18;
        if ((v19 | v9)) {
          unint64_t v20 = 0;
        }
        else {
          unint64_t v20 = a3;
        }
        int v21 = (int *)MEMORY[0x1E4F940E8];
        char v77 = (v20 == 0) | v19;
        BOOL v78 = v19;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_134;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_134:
      int v74 = 1;
      goto LABEL_135;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v78;
    if ((v77 & 1) == 0)
    {
      unsigned int v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v9 & 1) == 0) {
          goto LABEL_101;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 116) |= 2u;
        while (1)
        {
          uint64_t v43 = *v21;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v7)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v23) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_104;
          }
          v40 += 7;
          BOOL v31 = v41++ >= 9;
          if (v31)
          {
            uint64_t v42 = 0;
            goto LABEL_106;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_104:
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v42 = 0;
        }
LABEL_106:
        uint64_t v67 = 88;
        goto LABEL_111;
      case 2:
        if (!v35) {
          goto LABEL_101;
        }
        if ((*(_WORD *)(a1 + 116) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_155;
          }
          __int16 v68 = *(_WORD *)(a1 + 116) << 6;
          goto LABEL_126;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_155;
        }
        unsigned int v50 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v50, (void *)v3)) {
          goto LABEL_154;
        }
        PBReaderRecallMark();
        uint64_t v51 = 56;
        goto LABEL_99;
      case 3:
        if ((v9 & 1) == 0) {
          goto LABEL_101;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 116) |= 1u;
        while (2)
        {
          uint64_t v54 = *v21;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v23) + v55);
            *(void *)(v3 + v54) = v56;
            v42 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v31 = v53++ >= 9;
              if (v31)
              {
                uint64_t v42 = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v42 = 0;
        }
LABEL_110:
        uint64_t v67 = 80;
LABEL_111:
        *(void *)(a1 + v67) = v42;
        goto LABEL_133;
      case 4:
        if ((v9 & 1) == 0) {
          goto LABEL_101;
        }
        *(_WORD *)(a1 + 116) |= 4u;
        uint64_t v58 = *v21;
        unint64_t v59 = *(void *)(v3 + v58);
        if (v59 <= 0xFFFFFFFFFFFFFFFBLL && v59 + 4 <= *(void *)(v3 + *v7))
        {
          int v60 = *(_DWORD *)(*(void *)(v3 + *v23) + v59);
          *(void *)(v3 + v58) = v59 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v22) = 1;
          int v60 = 0;
        }
        uint64_t v69 = 108;
        goto LABEL_132;
      case 5:
        if ((v9 & 1) == 0) {
          goto LABEL_101;
        }
        *(_WORD *)(a1 + 116) |= 8u;
        uint64_t v61 = *v21;
        unint64_t v62 = *(void *)(v3 + v61);
        if (v62 <= 0xFFFFFFFFFFFFFFFBLL && v62 + 4 <= *(void *)(v3 + *v7))
        {
          int v60 = *(_DWORD *)(*(void *)(v3 + *v23) + v62);
          *(void *)(v3 + v61) = v62 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v22) = 1;
          int v60 = 0;
        }
        uint64_t v69 = 112;
LABEL_132:
        *(_DWORD *)(a1 + v69) = v60;
        goto LABEL_133;
      case 6:
        if (!v35) {
          goto LABEL_101;
        }
        if ((*(_WORD *)(a1 + 116) & 0x80) == 0)
        {
          uint64_t v63 = PBReaderReadString();
          uint64_t v64 = 40;
          goto LABEL_88;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_155;
        }
        __int16 v68 = *(_WORD *)(a1 + 116) << 8;
        goto LABEL_126;
      case 7:
        if (!v35) {
          goto LABEL_101;
        }
        if ((*(_WORD *)(a1 + 116) & 0x100) == 0)
        {
          uint64_t v63 = PBReaderReadString();
          uint64_t v64 = 48;
          goto LABEL_88;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_155;
        }
        __int16 v68 = *(_WORD *)(a1 + 116) << 7;
        goto LABEL_126;
      case 8:
        if (!v35) {
          goto LABEL_101;
        }
        if ((*(_WORD *)(a1 + 116) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_155;
          }
          __int16 v68 = 32 * *(_WORD *)(a1 + 116);
          goto LABEL_126;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_155;
        }
        unsigned int v50 = objc_alloc_init(GEOPBTransitShield);
        if (!GEOPBTransitShieldReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_154;
        }
        PBReaderRecallMark();
        uint64_t v51 = 64;
        goto LABEL_99;
      case 9:
        if (!v35) {
          goto LABEL_101;
        }
        if ((*(_WORD *)(a1 + 116) & 0x40) == 0)
        {
          uint64_t v63 = PBReaderReadString();
          uint64_t v64 = 32;
LABEL_88:
          char v65 = *(void **)(a1 + v64);
          *(void *)(a1 + v64) = v63;
          goto LABEL_100;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_155;
        }
        __int16 v68 = *(_WORD *)(a1 + 116) << 9;
        goto LABEL_126;
      case 10:
        if (!v35) {
          goto LABEL_101;
        }
        if ((*(_WORD *)(a1 + 116) & 0x800) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_155;
          }
          __int16 v68 = 16 * *(_WORD *)(a1 + 116);
          goto LABEL_126;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_155;
        }
        unsigned int v50 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v50, (void *)v3)) {
          goto LABEL_154;
        }
        PBReaderRecallMark();
        uint64_t v51 = 72;
        goto LABEL_99;
      case 11:
        if (!v35) {
          goto LABEL_101;
        }
        if ((*(_WORD *)(a1 + 116) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_155;
          }
          __int16 v68 = *(_WORD *)(a1 + 116) << 10;
LABEL_126:
          v8 += v68 >> 15;
LABEL_127:
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
LABEL_133:
          if (!(v76 & 1 | (v8 != 0))) {
            goto LABEL_134;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_155;
        }
        unsigned int v50 = objc_alloc_init(GEOPBTransitArtwork);
        if (GEOPBTransitArtworkReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v51 = 24;
LABEL_99:
          char v65 = *(void **)(a1 + v51);
          *(void *)(a1 + v51) = v50;
LABEL_100:

          --v8;
          goto LABEL_127;
        }
LABEL_154:

LABEL_155:
        int v74 = 0;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_135:
        if (v75) {
LABEL_136:
        }
          *(_WORD *)(a1 + 116) |= 0x10u;
        if (v78 || (v74 & 1) == 0)
        {
          *(_WORD *)(a1 + 116) |= 0x200u;
          *(_WORD *)(a1 + 116) |= 0x80u;
          *(_WORD *)(a1 + 116) |= 0x100u;
          *(_WORD *)(a1 + 116) |= 0x400u;
          *(_WORD *)(a1 + 116) |= 0x40u;
          *(_WORD *)(a1 + 116) |= 0x800u;
          *(_WORD *)(a1 + 116) |= 0x20u;
        }
        else if (v20)
        {
          while (1)
          {
            int v70 = *v20++;
            __int16 v71 = 512;
            switch(v70)
            {
              case 0:
                goto LABEL_148;
              case 2:
                goto LABEL_147;
              case 6:
                __int16 v71 = 128;
                goto LABEL_147;
              case 7:
                __int16 v71 = 256;
                goto LABEL_147;
              case 8:
                __int16 v71 = 1024;
                goto LABEL_147;
              case 9:
                __int16 v71 = 64;
                goto LABEL_147;
              case 10:
                __int16 v71 = 2048;
                goto LABEL_147;
              case 11:
                __int16 v71 = 32;
LABEL_147:
                *(_WORD *)(a1 + 116) |= v71;
                break;
              default:
                continue;
            }
          }
        }
LABEL_148:
        if (v74) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v78)
        {
          __int16 v72 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v75 & 1) == 0 || (*(_WORD *)(a1 + 116) & 0x10) != 0)
        {
LABEL_101:
          char v66 = PBReaderSkipValueWithTag();
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v66 & 1) == 0)
          {
            int v74 = 0;
            goto LABEL_135;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v48 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v47;
          }
          int v49 = PBUnknownFieldAdd();
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v49)
          {
            int v74 = 0;
            goto LABEL_136;
          }
        }
        goto LABEL_133;
    }
  }
}

void sub_189C739C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C73B38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C73CA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C73E18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C73F88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C740F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C74CE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitVehiclePositionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 56) readAll:1];
  [*(id *)(a1 + 64) readAll:1];
  [*(id *)(a1 + 72) readAll:1];
  unsigned int v2 = *(void **)(a1 + 24);

  return [v2 readAll:1];
}

unint64_t GEOPBTransitVehiclePositionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBTransitVehiclePositionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPBTransitVehiclePositionReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPBTransitVehiclePositionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPBTransitVehiclePositionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPBTransitVehiclePositionCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_189C74EF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitVehiclePositionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPBTransitVehiclePositionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C74F5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitVehiclePositionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_67;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_43;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_64;
          }
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_67;
          }
          goto LABEL_63;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_67;
          }
          unsigned int v27 = 0;
          break;
        case 4u:
        case 5u:
          if (v16 != 5) {
            goto LABEL_67;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFFBLL) {
            goto LABEL_44;
          }
          unint64_t v20 = v19 + 4;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_44;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 6u:
          if (v16 == 2) {
            goto LABEL_54;
          }
          goto LABEL_67;
        case 7u:
          if (v16 == 2) {
            goto LABEL_54;
          }
          goto LABEL_67;
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPBTransitShieldIsValid(a1)) {
            goto LABEL_67;
          }
          goto LABEL_63;
        case 9u:
          if (v16 == 2) {
            goto LABEL_54;
          }
          goto LABEL_67;
        case 0xAu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
            goto LABEL_67;
          }
          goto LABEL_63;
        case 0xBu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_67;
          }
LABEL_63:
          PBReaderRecallMark();
          continue;
        default:
LABEL_54:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_67:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v28 = *v2;
        uint64_t v29 = *(void *)&a1[v28];
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
          break;
        }
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v26 = v27++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_64;
      }
LABEL_43:
      uint64_t v14 = *v4;
LABEL_44:
      a1[v14] = 1;
LABEL_64:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

void sub_189C755F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitVehiclePositionIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  __int16 v2 = *(_WORD *)(a1 + 116);
  if ((v2 & 0x1380) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 116) & 0x400) != 0)
  {
    if (GEOPBTransitShieldIsDirty(*(void *)(a1 + 64))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 116);
  }
  if ((v2 & 0x840) != 0) {
    return 1;
  }
  if ((v2 & 0x20) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 24);

  return (uint64_t)GEOPBTransitArtworkIsDirty(v4);
}

os_unfair_lock_s *GEOPBTransitVehiclePositionIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPBTransitVehiclePositionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189C75C10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C76300(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C76698(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitZoomRangeStringReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v59 = v15 | v8;
        char v60 = v16 | v15 | v8;
        if ((v16 | v9)) {
          BOOL v17 = 0;
        }
        else {
          BOOL v17 = a3;
        }
        char v61 = (v17 == 0) | v16;
        BOOL v62 = v16;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_72;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_72:
      int v57 = 1;
LABEL_73:
      uint64_t v58 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
      goto LABEL_74;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v62;
    if ((v61 & 1) == 0)
    {
      BOOL v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 != 4) {
      break;
    }
    if (v32)
    {
      if ((*(unsigned char *)(a1 + 56) & 8) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_93;
        }
        char v51 = 16 * *(unsigned char *)(a1 + 56);
        goto LABEL_71;
      }
      uint64_t v44 = PBReaderReadString();
      uint64_t v45 = 32;
      goto LABEL_53;
    }
LABEL_60:
    char v50 = PBReaderSkipValueWithTag();
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v50 & 1) == 0)
    {
      int v57 = 0;
      goto LABEL_73;
    }
LABEL_61:
    if (!(v60 & 1 | (v10 != 0))) {
      goto LABEL_72;
    }
  }
  if (v31 != 3)
  {
    if (v31 == 1)
    {
      if (v9)
      {
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (1)
        {
          uint64_t v40 = *v18;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v20) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_64;
          }
          v37 += 7;
          BOOL v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_66;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_64:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_66:
        *(_DWORD *)(a1 + 52) = v39;
        goto LABEL_61;
      }
    }
    else if ((v59 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v48 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v47;
      }
      int v49 = PBUnknownFieldAdd();
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v49)
      {
        int v57 = 0;
        uint64_t v58 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        goto LABEL_75;
      }
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (!v32) {
    goto LABEL_60;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) == 0)
  {
    uint64_t v44 = PBReaderReadString();
    uint64_t v45 = 24;
LABEL_53:
    char v46 = *(void **)(a1 + v45);
    *(void *)(a1 + v45) = v44;

    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_61;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v51 = 32 * *(unsigned char *)(a1 + 56);
LABEL_71:
    v10 += v51 >> 7;
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_61;
  }
LABEL_93:
  int v57 = 0;
  uint64_t v58 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_74:
  if ((v59 & 1) == 0) {
    goto LABEL_76;
  }
LABEL_75:
  *(unsigned char *)(a1 + v58[241]) |= 2u;
LABEL_76:
  if (v62 || (v57 & 1) == 0)
  {
    *(unsigned char *)(a1 + v58[241]) |= 4u;
    *(unsigned char *)(a1 + v58[241]) |= 8u;
    goto LABEL_86;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        int v53 = *v17++;
        int v52 = v53;
        if (v53 == 3) {
          break;
        }
        if (v52 == 4)
        {
          char v54 = 8;
          goto LABEL_85;
        }
        if (!v52) {
          goto LABEL_86;
        }
      }
      char v54 = 4;
LABEL_85:
      *(unsigned char *)(a1 + v58[241]) |= v54;
      continue;
    }
  }
LABEL_86:
  if (v57) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v62)
  {
    uint64_t v55 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189C76DD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C77460(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitZoomRangeStringReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBTransitZoomRangeStringReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPBTransitZoomRangeStringReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPBTransitZoomRangeStringReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPBTransitZoomRangeStringReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189C775EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitZoomRangeStringReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPBTransitZoomRangeStringReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C77650(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C77820(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitZoomRangeStringIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189C77B5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C77E44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C7906C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryDynamicContextServerOverrideReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v7 != 0;
        BOOL v16 = v14 != 0;
        BOOL v17 = v16 | v8;
        if (v14) {
          BOOL v15 = 1;
        }
        if (v17) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = a3;
        }
        BOOL v19 = v18 == 0;
        if (v14) {
          BOOL v19 = 1;
        }
        BOOL v46 = v15;
        BOOL v47 = v19;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v21 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v22 = &OBJC_IVAR___GEONonTiledAssets__flags;
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_57;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      unint64_t v28 = *(void *)(v3 + v27);
      if (v28 == -1 || v28 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v28 + 1;
      v26 |= (unint64_t)(v29 & 0x7F) << v24;
      if ((v29 & 0x80) == 0) {
        goto LABEL_27;
      }
      v24 += 7;
      if (v25++ >= 9)
      {
        unint64_t v26 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_27:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v26 = 0;
    }
LABEL_29:
    if (v31 || (v26 & 7) == 4)
    {
LABEL_57:
      if (v16)
      {
        char v41 = 1;
        goto LABEL_66;
      }
      if (v18)
      {
        do
        {
          while (1)
          {
            int v43 = *v18++;
            int v42 = v43;
            if (v43 != 1 && v42 != 2) {
              break;
            }
            *(unsigned char *)(a1 + v22[576]) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_67;
    }
    unint64_t v33 = v26 >> 3;
    BOOL v34 = v16;
    if (!v47)
    {
      int v35 = v18;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 != 1)
    {
      if (!PBReaderSkipValueWithTag()) {
        goto LABEL_65;
      }
      goto LABEL_56;
    }
    if (v34 && (*(unsigned char *)(a1 + v22[576]) & 1) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_65;
      }
      BOOL v39 = v16;
      BOOL v16 = (BOOL)v21;
      uint64_t v40 = objc_alloc_init(GEOPDMapsIdentifier);
      if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v40, (void *)v3)) {
        goto LABEL_72;
      }
      PBReaderRecallMark();
      -[GEOPDPlaceSummaryDynamicContextServerOverride _addNoFlagsMapsId:](a1, v40);
      goto LABEL_52;
    }
LABEL_55:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_65:
      char v41 = 0;
      goto LABEL_66;
    }
LABEL_56:
    if (!v46) {
      goto LABEL_57;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + v22[576]) & 2) != 0) {
    goto LABEL_55;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_65;
  }
  BOOL v39 = v16;
  BOOL v16 = (BOOL)v21;
  uint64_t v40 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitString);
  if (GEOPDPlaceSummaryLayoutUnitStringReadAllFrom((uint64_t)v40, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDPlaceSummaryDynamicContextServerOverride _addNoFlagsServerDynamicContext:](a1, v40);
LABEL_52:

    char v21 = (int *)v16;
    BOOL v16 = v39;
    unsigned int v22 = &OBJC_IVAR___GEONonTiledAssets__flags;
    goto LABEL_56;
  }
LABEL_72:

  char v41 = 0;
  char v21 = (int *)v16;
  LODWORD(v16) = v39;
  unsigned int v22 = &OBJC_IVAR___GEONonTiledAssets__flags;
LABEL_66:
  *(unsigned char *)(a1 + v22[576]) |= 1u;
  *(unsigned char *)(a1 + v22[576]) |= 2u;
  if (v41)
  {
LABEL_67:
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
    if (!v16) {
      return v3;
    }
    goto LABEL_68;
  }
  unint64_t v3 = 0;
  if (v16)
  {
LABEL_68:
    uint64_t v44 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189C79880(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C7A2E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceSummaryDynamicContextServerOverrideCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 16);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 24);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDPlaceSummaryDynamicContextServerOverrideReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPlaceSummaryDynamicContextServerOverrideReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDPlaceSummaryDynamicContextServerOverrideReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDPlaceSummaryDynamicContextServerOverrideReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPlaceSummaryDynamicContextServerOverrideReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDPlaceSummaryDynamicContextServerOverrideCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189C7A610(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryDynamicContextServerOverrideReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDPlaceSummaryDynamicContextServerOverrideReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C7A674(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryDynamicContextServerOverrideIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitStringIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEOPDPlaceSummaryLayoutUnitStringIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2) {
            goto LABEL_56;
          }
          goto LABEL_47;
        case 2u:
          if (v14 == 2) {
            goto LABEL_47;
          }
          goto LABEL_56;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryFormatIsValid(a1)) {
            goto LABEL_56;
          }
          goto LABEL_52;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_43;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_53;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v22 = 0;
          break;
        case 6u:
          if (v14 == 2) {
            goto LABEL_47;
          }
          goto LABEL_56;
        case 7u:
          if (v14 == 2) {
            goto LABEL_47;
          }
          goto LABEL_56;
        case 8u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
            goto LABEL_56;
          }
LABEL_52:
          PBReaderRecallMark();
          continue;
        default:
LABEL_47:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_56:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v23 = *v2;
        unint64_t v24 = *(void *)&a1[v23];
        if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v25 = v24 + 1;
        int v26 = *(char *)(*(void *)&a1[*v5] + v24);
        *(void *)&a1[v23] = v25;
        if (v26 < 0)
        {
          BOOL v21 = v22++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_53;
      }
LABEL_43:
      a1[*v4] = 1;
LABEL_53:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_189C7AE58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceSummaryDynamicContextServerOverrideIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 44) & 7) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDPlaceSummaryLayoutUnitStringIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDPlaceSummaryDynamicContextServerOverrideIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDPlaceSummaryDynamicContextServerOverrideIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189C7B5E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryFormatReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      while (!v3[*v6])
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v17 = 0;
            unsigned int v18 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 28) |= 2u;
            while (1)
            {
              uint64_t v20 = *v4;
              unint64_t v21 = *(void *)&v3[v20];
              if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
                break;
              }
              char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
              *(void *)&v3[v20] = v21 + 1;
              v19 |= (unint64_t)(v22 & 0x7F) << v17;
              if ((v22 & 0x80) == 0) {
                goto LABEL_47;
              }
              v17 += 7;
              BOOL v14 = v18++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_49;
              }
            }
            v3[*v6] = 1;
LABEL_47:
            if (v3[*v6]) {
              LODWORD(v19) = 0;
            }
LABEL_49:
            uint64_t v35 = 20;
            goto LABEL_58;
          case 2u:
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 28) |= 4u;
            while (2)
            {
              uint64_t v25 = *v4;
              unint64_t v26 = *(void *)&v3[v25];
              if (v26 == -1 || v26 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v26);
                *(void *)&v3[v25] = v26 + 1;
                v19 |= (unint64_t)(v27 & 0x7F) << v23;
                if (v27 < 0)
                {
                  v23 += 7;
                  BOOL v14 = v24++ >= 9;
                  if (v14)
                  {
                    LODWORD(v19) = 0;
                    goto LABEL_53;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v19) = 0;
            }
LABEL_53:
            uint64_t v35 = 24;
            goto LABEL_58;
          case 3u:
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 28) |= 1u;
            while (2)
            {
              uint64_t v30 = *v4;
              unint64_t v31 = *(void *)&v3[v30];
              if (v31 == -1 || v31 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
                *(void *)&v3[v30] = v31 + 1;
                v19 |= (unint64_t)(v32 & 0x7F) << v28;
                if (v32 < 0)
                {
                  v28 += 7;
                  BOOL v14 = v29++ >= 9;
                  if (v14)
                  {
                    LODWORD(v19) = 0;
                    goto LABEL_57;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v19) = 0;
            }
LABEL_57:
            uint64_t v35 = 16;
LABEL_58:
            *(_DWORD *)(a1 + v35) = v19;
            goto LABEL_59;
          case 4u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_62;
            }
            unint64_t v33 = objc_alloc_init(GEOPDMapsIdentifier);
            if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v33, v3))
            {

              goto LABEL_62;
            }
            PBReaderRecallMark();
            BOOL v34 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v33;

LABEL_59:
            if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
              goto LABEL_60;
            }
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_62;
            }
            goto LABEL_59;
        }
      }
    }
LABEL_60:
    BOOL v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_62:
    BOOL v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_189C7C53C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryFormatReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDPlaceSummaryFormatReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C7C5B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryFormatIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            unint64_t v24 = *(void *)&a1[v23];
            if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            unint64_t v25 = v24 + 1;
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v27 = 0;
          break;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_53;
          }
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v28 = *v2;
        unint64_t v29 = *(void *)&a1[v28];
        if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v30 = v29 + 1;
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v21 = v27++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOPDPlaceSummaryLayoutLineReadAllFrom(unsigned char *a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v5[*v8]) {
          goto LABEL_51;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          unint64_t v14 = *(void *)&v5[v13];
          if (v14 == -1 || v14 >= *(void *)&v5[*v7]) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v16 = v11++ >= 9;
          if (v16)
          {
            unint64_t v12 = 0;
            int v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v17 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v17 || (v12 & 7) == 4) {
          goto LABEL_51;
        }
        unint64_t v19 = v12 >> 3;
        if ((v12 >> 3) == 3) {
          break;
        }
        if (v19 == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          a1[20] |= 1u;
          while (1)
          {
            uint64_t v30 = *v6;
            unint64_t v31 = *(void *)&v5[v30];
            if (v31 == -1 || v31 >= *(void *)&v5[*v7]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v5[*v9] + v31);
            *(void *)&v5[v30] = v31 + 1;
            v29 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0) {
              goto LABEL_46;
            }
            v27 += 7;
            BOOL v16 = v28++ >= 9;
            if (v16)
            {
              uint64_t v29 = 0;
              goto LABEL_48;
            }
          }
          v5[*v8] = 1;
LABEL_46:
          if (v5[*v8]) {
            uint64_t v29 = 0;
          }
LABEL_48:
          BOOL v33 = v29 != 0;
          uint64_t v34 = 16;
LABEL_49:
          a1[v34] = v33;
          goto LABEL_50;
        }
        if (v19 == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_53;
          }
          int v20 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnit);
          if (!GEOPDPlaceSummaryLayoutUnitReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_53;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addUnit:", v20, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_53;
        }
LABEL_50:
        if (*(void *)&v5[*v6] >= *(void *)&v5[*v7]) {
          goto LABEL_51;
        }
      }
      char v21 = 0;
      unsigned int v22 = 0;
      uint64_t v23 = 0;
      a1[20] |= 2u;
      while (1)
      {
        uint64_t v24 = *v6;
        unint64_t v25 = *(void *)&v5[v24];
        if (v25 == -1 || v25 >= *(void *)&v5[*v7]) {
          break;
        }
        char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v25);
        *(void *)&v5[v24] = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0) {
          goto LABEL_42;
        }
        v21 += 7;
        BOOL v16 = v22++ >= 9;
        if (v16)
        {
          uint64_t v23 = 0;
          goto LABEL_44;
        }
      }
      v5[*v8] = 1;
LABEL_42:
      if (v5[*v8]) {
        uint64_t v23 = 0;
      }
LABEL_44:
      BOOL v33 = v23 != 0;
      uint64_t v34 = 17;
      goto LABEL_49;
    }
LABEL_51:
    BOOL v35 = v5[*v8] == 0;
  }
  else
  {
LABEL_53:
    BOOL v35 = 0;
  }
  objc_sync_exit(v5);

  return v35;
}

void sub_189C7D92C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutLineReadFrom(unsigned char *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutLineReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C7D990(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutLineIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_44;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_44;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_46;
        }
        unsigned int v23 = 0;
        while (1)
        {
          uint64_t v24 = *v2;
          unint64_t v25 = *(void *)&a1[v24];
          if (v25 == -1 || v25 >= *(void *)&a1[*v3]) {
            goto LABEL_41;
          }
          unint64_t v26 = v25 + 1;
          int v27 = *(char *)(*(void *)&a1[*v5] + v25);
          *(void *)&a1[v24] = v26;
          if (v27 < 0)
          {
            BOOL v22 = v23++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_43;
        }
      }
      if (v16 == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_46;
      }
LABEL_43:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_44;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_46;
    }
    unsigned int v17 = 0;
    while (1)
    {
      uint64_t v18 = *v2;
      unint64_t v19 = *(void *)&a1[v18];
      if (v19 == -1 || v19 >= *(void *)&a1[*v3]) {
        break;
      }
      unint64_t v20 = v19 + 1;
      int v21 = *(char *)(*(void *)&a1[*v5] + v19);
      *(void *)&a1[v18] = v20;
      if (v21 < 0)
      {
        BOOL v22 = v17++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_43;
    }
LABEL_41:
    a1[*v4] = 1;
    goto LABEL_43;
  }
LABEL_44:
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDPlaceSummaryLayoutUnitIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      unint64_t v16 = v8 >> 3;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_188;
          }
          unsigned int v17 = 0;
          do
          {
            uint64_t v18 = *v2;
            unint64_t v19 = *(void *)&a1[v18];
            if (v19 == -1 || v19 >= *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_173;
            }
            unint64_t v20 = v19 + 1;
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0) {
              break;
            }
            BOOL v22 = v17++ > 8;
          }
          while (!v22);
          goto LABEL_173;
        case 2u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitNameIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 3u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitCategoryIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitDistanceIsValid(a1)) {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 5u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitPriceIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 6u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitHoursIsValid(a1)) {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 7u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitAddressIsValid(a1)) {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 8u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitRatingsIsValid(a1)) {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 9u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitTransitShieldsIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0xAu:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitUserGeneratedGuidesIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0xBu:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitCuratedGuidesIsValid(a1)) {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0xCu:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitEVChargersNumberIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0xDu:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitUGCUserSubmittedRecommendationsIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0xEu:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitStringIsValid(a1)) {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0xFu:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitServerOverrideIsValid(a1)) {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x10u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitContainmentIsValid(a1)) {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x11u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitRecentIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x12u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitHighlightMainIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x13u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitHighlightExtraIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x14u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitPublisherNameForGuideIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x15u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitNumPlacesInGuideIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x16u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitPublisherDescriptionIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x17u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitSecondaryNameIsValid(a1)) {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x18u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitFactoidIsValid(a1)) {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x19u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitArpRatingsIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x1Au:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitRealTimeEVChargerAvailabilityIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x1Bu:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitDetourTimeIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x1Cu:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitHikingDifficultyIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x1Du:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitHikingTrailLengthIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x1Eu:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitPhotoCarouselIsValid(a1)) {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x1Fu:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitUserNoteIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x20u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitInUserLibraryIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x21u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitHikeRouteFactoidElevationGainLossIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x22u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitHikeRouteTypeIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x23u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitHikeRouteDurationIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x24u:
          if (v14 == 2
            && PBReaderPlaceMark()
            && GEOPDPlaceSummaryLayoutUnitHikeRouteLengthIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_172;
          }
          goto LABEL_188;
        default:
          if (v16 == 101)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_188;
            }
            unsigned int v23 = 0;
            while (1)
            {
              uint64_t v24 = *v2;
              unint64_t v25 = *(void *)&a1[v24];
              if (v25 == -1 || v25 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v26 = v25 + 1;
              int v27 = *(char *)(*(void *)&a1[*v5] + v25);
              *(void *)&a1[v24] = v26;
              if (v27 < 0)
              {
                BOOL v22 = v23++ > 8;
                if (!v22) {
                  continue;
                }
              }
              goto LABEL_173;
            }
            a1[*v4] = 1;
          }
          else if (v16 == 102)
          {
            if (v14 != 2 || !PBReaderPlaceMark() || (GEOPDPlaceSummaryLayoutUnitIsValid(a1) & 1) == 0)
            {
LABEL_188:
              PBReaderRecallMark();
              return 0;
            }
LABEL_172:
            PBReaderRecallMark();
          }
          else if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
            goto LABEL_188;
          }
LABEL_173:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_187;
          }
          break;
      }
    }
  }
LABEL_187:
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_189C7F0D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v7 != 0;
        BOOL v16 = v14 != 0;
        if (v14) {
          char v17 = 1;
        }
        else {
          char v17 = v15;
        }
        if ((v14 != 0) | v8 & 1) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = a3;
        }
        BOOL v19 = v18 == 0;
        if (v14) {
          BOOL v19 = 1;
        }
        char v54 = v17;
        BOOL v55 = v19;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        unsigned int v23 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_72;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      unint64_t v28 = *(void *)(v3 + v27);
      if (v28 == -1 || v28 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v28);
      *(void *)(v3 + v27) = v28 + 1;
      v26 |= (unint64_t)(v29 & 0x7F) << v24;
      if ((v29 & 0x80) == 0) {
        goto LABEL_28;
      }
      v24 += 7;
      BOOL v30 = v25++ >= 9;
      if (v30)
      {
        unint64_t v26 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_30;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_28:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v26 = 0;
    }
LABEL_30:
    if (v31 || (v26 & 7) == 4)
    {
LABEL_72:
      if (v16)
      {
        char v48 = 1;
        goto LABEL_87;
      }
      if (!v18) {
        goto LABEL_88;
      }
      while (1)
      {
        int v51 = *v18++;
        int v50 = v51;
        if (v51 == 2) {
          break;
        }
        if (v50 == 3)
        {
          char v49 = 2;
LABEL_78:
          *(unsigned char *)(a1 + v23[252]) |= v49;
        }
        else if (!v50)
        {
          goto LABEL_88;
        }
      }
      char v49 = 4;
      goto LABEL_78;
    }
    unint64_t v33 = v26 >> 3;
    BOOL v34 = v16;
    if (!v55)
    {
      BOOL v35 = v18;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3) {
      break;
    }
    if (v33 == 2)
    {
      if (v34 && (*(unsigned char *)(a1 + v23[252]) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
        {
LABEL_84:
          char v48 = 0;
          goto LABEL_86;
        }
        uint64_t v45 = objc_alloc_init(GEOPDPlaceSummaryResultLayoutTemplatePair);
        if (!GEOPDPlaceSummaryResultLayoutTemplatePairReadAllFrom((uint64_t)v45, (void *)v3, v9 & 1)) {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        -[GEOPDPlaceSummaryLayoutMetadata _addNoFlagsLayoutTemplatePair:](a1, v45);
        goto LABEL_62;
      }
    }
    else
    {
      if (v33 != 1)
      {
        int v46 = PBReaderSkipValueWithTag();
        int v21 = (int *)MEMORY[0x1E4F940C8];
        if (!v46) {
          goto LABEL_83;
        }
        goto LABEL_71;
      }
      if (v8)
      {
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + v23[252]) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          unint64_t v43 = *(void *)(v3 + v42);
          if (v43 == -1 || v43 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v44 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v43 + 1;
          v41 |= (unint64_t)(v44 & 0x7F) << v39;
          if ((v44 & 0x80) == 0) {
            goto LABEL_68;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_70;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_68:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_70:
        *(_DWORD *)(a1 + 44) = v41;
        goto LABEL_71;
      }
    }
LABEL_65:
    char v47 = PBReaderSkipValueWithTag();
    int v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v47 & 1) == 0)
    {
LABEL_83:
      char v48 = 0;
      goto LABEL_87;
    }
LABEL_71:
    if ((v54 & 1) == 0) {
      goto LABEL_72;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + v23[252]) & 2) != 0) {
    goto LABEL_65;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_84;
  }
  uint64_t v45 = objc_alloc_init(GEOPDPlaceSummaryDynamicContextServerOverride);
  if (GEOPDPlaceSummaryDynamicContextServerOverrideReadAllFrom((uint64_t)v45, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDPlaceSummaryLayoutMetadata _addNoFlagsDyanmicContextServerOverride:](a1, v45);
LABEL_62:

    unsigned int v23 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
    int v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_71;
  }
LABEL_85:

  char v48 = 0;
  unsigned int v23 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
LABEL_86:
  int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_87:
  *(unsigned char *)(a1 + v23[252]) |= 4u;
  *(unsigned char *)(a1 + v23[252]) |= 2u;
  if (v48)
  {
LABEL_88:
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
    if (v16) {
      goto LABEL_89;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v16)
    {
LABEL_89:
      int v52 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_189C7F9BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C80570(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceSummaryLayoutMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 16);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDPlaceSummaryLayoutMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPlaceSummaryLayoutMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDPlaceSummaryLayoutMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDPlaceSummaryLayoutMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPlaceSummaryLayoutMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDPlaceSummaryLayoutMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189C8089C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDPlaceSummaryLayoutMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C80900(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutMetadataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_41;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_41;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryResultLayoutTemplatePairIsValid(a1)) {
          goto LABEL_43;
        }
LABEL_36:
        PBReaderRecallMark();
        goto LABEL_40;
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_43;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 == -1 || v19 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v20 = v19 + 1;
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_41;
      }
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryDynamicContextServerOverrideIsValid(a1))
    {
LABEL_43:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_36;
  }
LABEL_41:
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPDPlaceSummaryResultLayoutTemplatePairIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_52;
          }
LABEL_39:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v22 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              unint64_t v24 = *(void *)&a1[v23];
              if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v25 = v24 + 1;
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                BOOL v12 = v22++ >= 9;
                if (!v12) {
                  continue;
                }
              }
              goto LABEL_39;
            }
            a1[*v4] = 1;
          }
LABEL_35:
          PBReaderRecallMark();
          continue;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_52;
        }
        while (1)
        {
          uint64_t v17 = *v2;
          unint64_t v18 = *(void *)&a1[v17];
          if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v19 = v18 + 1;
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            unsigned int v21 = v14++;
            if (v21 <= 8) {
              continue;
            }
          }
          goto LABEL_49;
        }
        a1[*v4] = 1;
      }
      else
      {
        if (v16 == 2)
        {
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutTemplateIsValid(a1))
          {
LABEL_52:
            PBReaderRecallMark();
            return 0;
          }
          goto LABEL_35;
        }
        if (v16 == 1)
        {
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_52;
          }
          goto LABEL_35;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_52;
        }
      }
LABEL_49:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_189C81130(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceSummaryLayoutMetadataIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 48) & 0xE) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 48) & 2) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 16);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDPlaceSummaryDynamicContextServerOverrideIsDirty(*(os_unfair_lock_s **)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDPlaceSummaryLayoutMetadataIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDPlaceSummaryLayoutMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189C81918(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C81E60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutTemplateReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          unint64_t v16 = 0;
        }
        else {
          unint64_t v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v46 = v17;
        unint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_58;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_25;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_58:
      if (v15)
      {
        char v40 = 1;
        goto LABEL_70;
      }
      if (!v16) {
        goto LABEL_71;
      }
      while (1)
      {
        int v43 = *v16++;
        int v42 = v43;
        if (v43 == 1) {
          break;
        }
        if (v42 == 2)
        {
          char v41 = 1;
LABEL_64:
          *(unsigned char *)(a1 + 44) |= v41;
        }
        else if (!v42)
        {
          goto LABEL_71;
        }
      }
      char v41 = 2;
      goto LABEL_64;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v15;
    if (!v46)
    {
      char v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 2) {
      break;
    }
    if (v30 == 1)
    {
      if (!v31) {
        goto LABEL_50;
      }
      if ((*(unsigned char *)(a1 + 44) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_69:
          char v40 = 0;
          goto LABEL_70;
        }
        v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
      }
      else
      {
        uint64_t v36 = PBReaderReadString();
        int v37 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v36;

        --v9;
      }
    }
    else if (!PBReaderSkipValueWithTag())
    {
      goto LABEL_69;
    }
LABEL_51:
    if (v9) {
      char v39 = 1;
    }
    else {
      char v39 = v15;
    }
    if ((v39 & 1) == 0) {
      goto LABEL_58;
    }
  }
  if (!v31 || (*(unsigned char *)(a1 + 44) & 1) != 0)
  {
LABEL_50:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_69;
    }
    goto LABEL_51;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_69;
  }
  BOOL v38 = objc_alloc_init(GEOPDPlaceSummaryLayoutTemplateEntry);
  if (GEOPDPlaceSummaryLayoutTemplateEntryReadAllFrom((uint64_t)v38, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDPlaceSummaryLayoutTemplate _addNoFlagsTemplateEntry:](a1, v38);

    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_51;
  }

  char v40 = 0;
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_70:
  *(unsigned char *)(a1 + 44) |= 2u;
  *(unsigned char *)(a1 + 44) |= 1u;
  if (v40)
  {
LABEL_71:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v15) {
      goto LABEL_72;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v15)
    {
LABEL_72:
      char v44 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_189C82414(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C82CD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceSummaryLayoutTemplateCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 16);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDPlaceSummaryLayoutTemplateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPlaceSummaryLayoutTemplateReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDPlaceSummaryLayoutTemplateReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDPlaceSummaryLayoutTemplateReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPlaceSummaryLayoutTemplateReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDPlaceSummaryLayoutTemplateCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189C82F68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutTemplateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDPlaceSummaryLayoutTemplateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C82FCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutTemplateIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutTemplateEntryIsValid(a1)) {
          goto LABEL_29;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEOPDPlaceSummaryLayoutTemplateEntryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_63;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_48;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_49;
          }
        case 2u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOPDPlaceSummaryLayoutLineIsValid(a1)) {
            goto LABEL_32;
          }
          goto LABEL_63;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_63;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            unint64_t v24 = *(void *)&a1[v23];
            if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
              goto LABEL_48;
            }
            unint64_t v25 = v24 + 1;
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_49;
          }
        case 4u:
          if (v14 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_63:
              PBReaderRecallMark();
              return 0;
            }
LABEL_52:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v32 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v33 = *v2;
                unint64_t v34 = *(void *)&a1[v33];
                if (v34 == -1 || v34 >= *(void *)&a1[*v3]) {
                  break;
                }
                unint64_t v35 = v34 + 1;
                int v36 = *(char *)(*(void *)&a1[*v5] + v34);
                *(void *)&a1[v33] = v35;
                if (v36 < 0)
                {
                  BOOL v12 = v32++ >= 9;
                  if (!v12) {
                    continue;
                  }
                }
                goto LABEL_52;
              }
              a1[*v4] = 1;
            }
LABEL_32:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_63;
            }
            while (1)
            {
              uint64_t v27 = *v2;
              unint64_t v28 = *(void *)&a1[v27];
              if (v28 == -1 || v28 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v29 = v28 + 1;
              int v30 = *(char *)(*(void *)&a1[*v5] + v28);
              *(void *)&a1[v27] = v29;
              if (v30 < 0)
              {
                unsigned int v31 = v14++;
                if (v31 <= 8) {
                  continue;
                }
              }
              goto LABEL_49;
            }
LABEL_48:
            a1[*v4] = 1;
          }
LABEL_49:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_61;
          }
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_63;
          }
          goto LABEL_49;
      }
    }
  }
LABEL_61:
  BOOL v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

void sub_189C83778(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceSummaryLayoutTemplateIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 44) & 7) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 44) & 1) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 16);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDPlaceSummaryLayoutTemplateEntryIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDPlaceSummaryLayoutTemplateIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDPlaceSummaryLayoutTemplateIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189C83D78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C843C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutTemplateEntryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 68) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -3:
        char v7 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = (v10 & 1 | v11) != 0;
        if ((v14 | v7)) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        BOOL v16 = v14;
        uint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_106;
        }
        if (v15) {
          char v19 = v14;
        }
        else {
          char v19 = 1;
        }
        if (v8) {
          int v20 = 1;
        }
        else {
          int v20 = v14;
        }
        int v72 = v20;
        char v73 = v19;
        BOOL v21 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_106;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v17;
      unint64_t v26 = *(void *)(v3 + v25);
      if (v26 == -1 || v26 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v21) + v26);
      *(void *)(v3 + v25) = v26 + 1;
      v24 |= (unint64_t)(v27 & 0x7F) << v22;
      if ((v27 & 0x80) == 0) {
        goto LABEL_29;
      }
      v22 += 7;
      BOOL v28 = v23++ >= 9;
      if (v28)
      {
        unint64_t v24 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_31;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_29:
    int v29 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v24 = 0;
    }
LABEL_31:
    int v30 = v24 & 7;
    if (v29 || v30 == 4)
    {
LABEL_106:
      if (v16)
      {
        char v66 = 1;
        goto LABEL_108;
      }
      if (!v15) {
        goto LABEL_118;
      }
      while (1)
      {
        while (1)
        {
          int v68 = *v15++;
          int v67 = v68;
          if (v68 != 2) {
            break;
          }
          LOBYTE(v67) = 8;
LABEL_117:
          *(unsigned char *)(a1 + 68) |= v67;
        }
        if (v67 == 4) {
          goto LABEL_117;
        }
        if (!v67) {
          goto LABEL_118;
        }
      }
    }
    unint64_t v32 = v24 >> 3;
    BOOL v33 = v16;
    if ((v73 & 1) == 0)
    {
      unint64_t v34 = v15;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v7 & 1) == 0) {
          goto LABEL_81;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (1)
        {
          uint64_t v41 = *v17;
          unint64_t v42 = *(void *)(v3 + v41);
          if (v42 == -1 || v42 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v21) + v42);
          *(void *)(v3 + v41) = v42 + 1;
          v40 |= (unint64_t)(v43 & 0x7F) << v38;
          if ((v43 & 0x80) == 0) {
            goto LABEL_84;
          }
          v38 += 7;
          BOOL v28 = v39++ >= 9;
          if (v28)
          {
            LODWORD(v40) = 0;
            goto LABEL_86;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_84:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v40) = 0;
        }
LABEL_86:
        uint64_t v59 = 60;
        goto LABEL_91;
      case 2:
        if (!v33 || (*(unsigned char *)(a1 + 68) & 8) != 0) {
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_122;
        }
        BOOL v71 = v16;
        uint64_t v45 = objc_alloc_init(GEOPDPlaceSummaryLayoutLine);
        if (GEOPDPlaceSummaryLayoutLineReadAllFrom(v45, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDPlaceSummaryLayoutTemplateEntry _addNoFlagsLine:](a1, v45);

          BOOL v16 = v71;
LABEL_103:
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_104:
          if (!v72) {
            goto LABEL_106;
          }
LABEL_105:
          if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_106;
          }
          continue;
        }

        char v66 = 0;
        BOOL v16 = v71;
LABEL_124:
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_108:
        *(unsigned char *)(a1 + 68) |= 8u;
        *(unsigned char *)(a1 + 68) |= 4u;
        if (v66)
        {
LABEL_118:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_119;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if (!v16) {
          return v3;
        }
LABEL_119:
        uint64_t v69 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_81;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (2)
        {
          uint64_t v48 = *v17;
          unint64_t v49 = *(void *)(v3 + v48);
          if (v49 == -1 || v49 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v21) + v49);
            *(void *)(v3 + v48) = v49 + 1;
            v40 |= (unint64_t)(v50 & 0x7F) << v46;
            if (v50 < 0)
            {
              v46 += 7;
              BOOL v28 = v47++ >= 9;
              if (v28)
              {
                LODWORD(v40) = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v40) = 0;
        }
LABEL_90:
        uint64_t v59 = 64;
LABEL_91:
        *(_DWORD *)(a1 + v59) = v40;
        goto LABEL_104;
      case 4:
        if (!v33 || (*(unsigned char *)(a1 + 68) & 4) != 0)
        {
LABEL_81:
          char v58 = PBReaderSkipValueWithTag();
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v58 & 1) == 0)
          {
LABEL_121:
            char v66 = 0;
            goto LABEL_108;
          }
          goto LABEL_104;
        }
        if (v30 != 2)
        {
          char v60 = 0;
          unsigned int v61 = 0;
          uint64_t v62 = 0;
          while (1)
          {
            uint64_t v63 = *v17;
            unint64_t v64 = *(void *)(v3 + v63);
            if (v64 == -1 || v64 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v65 = *(unsigned char *)(*(void *)(v3 + *v21) + v64);
            *(void *)(v3 + v63) = v64 + 1;
            v62 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              BOOL v28 = v61++ >= 9;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_102;
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_102:
          PBRepeatedInt32Add();
          goto LABEL_103;
        }
        if (!PBReaderPlaceMark())
        {
LABEL_122:
          char v66 = 0;
          goto LABEL_124;
        }
        while (1)
        {
          int v51 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v54 = 0;
          while (1)
          {
            uint64_t v55 = *v17;
            unint64_t v56 = *(void *)(v3 + v55);
            if (v56 == -1 || v56 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v57 = *(unsigned char *)(*(void *)(v3 + *v21) + v56);
            *(void *)(v3 + v55) = v56 + 1;
            v54 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v28 = v53++ >= 9;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_80;
          }
          *(unsigned char *)(v3 + *v51) = 1;
LABEL_80:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if ((v72 & 1) == 0) {
          goto LABEL_106;
        }
        goto LABEL_105;
      default:
        int v44 = PBReaderSkipValueWithTag();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v44) {
          goto LABEL_121;
        }
        goto LABEL_104;
    }
  }
}

void sub_189C85190(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C86254(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceSummaryLayoutTemplateEntryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 40);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDPlaceSummaryLayoutTemplateEntryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPlaceSummaryLayoutTemplateEntryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDPlaceSummaryLayoutTemplateEntryReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDPlaceSummaryLayoutTemplateEntryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPlaceSummaryLayoutTemplateEntryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDPlaceSummaryLayoutTemplateEntryCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189C864E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutTemplateEntryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDPlaceSummaryLayoutTemplateEntryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C8654C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C867E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutTemplateEntryIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189C86DA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C87850(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutUnitReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 312));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 308);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 304)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unint64_t v11 = *(void *)(a1 + 324);
  uint32x4_t v12 = (uint32x4_t)vdupq_n_s32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A63AFF0), v13))
      + ((v11 >> 3) & 1);
  int32x4_t v15 = (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A63B020), v13);
  int v16 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A63B030), v13), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A63B000), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A63B010), v13))));
  v13.i32[0] = v11 >> 36;
  v13.i32[1] = v11 >> 5;
  *(int32x2_t *)v12.i8 = vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)vdupq_n_s64(v11), (uint64x2_t)xmmword_18A63B040)), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v12.i8, (uint32x2_t)0xFFFFFFF7FFFFFFF6), (int8x8_t)0x100000001)), vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v12.i8, (uint32x2_t)0xFFFFFFEAFFFFFFF9), (int8x8_t)0x100000001), (int32x2_t)vand_s8(*(int8x8_t *)v13.i8, (int8x8_t)0x100000001)));
  unsigned int v17 = v14
      + (WORD1(v11) & 1)
      + ((v11 >> 37) & 1)
      + (BYTE3(v11) & 1)
      + ((v11 >> 19) & 1)
      + (BYTE4(v11) & 1)
      + ((v11 >> 33) & 1)
      + vadd_s32(*(int32x2_t *)v12.i8, vdup_lane_s32(*(int32x2_t *)v12.i8, 1)).u32[0]
      + v16
      + vaddvq_s32(v15)
      + (v11 >> 31);
  while (2)
  {
    uint64_t v18 = 1;
    uint64_t v19 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v18 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        unsigned __int8 v20 = v10 | (v17 > 0x1B);
        if ((v20 | v8)) {
          BOOL v21 = 0;
        }
        else {
          BOOL v21 = a3;
        }
        BOOL v22 = v20;
        char v101 = (v21 == 0) | v20;
        unsigned int v23 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v25 = (int *)MEMORY[0x1E4F940B8];
        BOOL v100 = v20;
        break;
      default:
        ++v17;
LABEL_6:
        uint64_t v18 = v9;
        uint64_t v19 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v18;
        uint64_t v10 = v19;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v23) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v24)) {
      goto LABEL_323;
    }
    uint64_t v26 = 0;
    unsigned int v27 = 0;
    unint64_t v28 = 0;
    while (1)
    {
      uint64_t v29 = *v23;
      unint64_t v30 = *(void *)(v3 + v29);
      if (v30 == -1 || v30 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v25) + v30);
      *(void *)(v3 + v29) = v30 + 1;
      v28 |= (unint64_t)(v31 & 0x7F) << v26;
      if ((v31 & 0x80) == 0) {
        goto LABEL_23;
      }
      v26 += 7;
      BOOL v32 = v27++ >= 9;
      if (v32)
      {
        unint64_t v28 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v24) = 1;
LABEL_23:
    int v33 = *(unsigned __int8 *)(v3 + *v24);
    if (*(unsigned char *)(v3 + *v24)) {
      unint64_t v28 = 0;
    }
LABEL_25:
    if (v33 || (v28 & 7) == 4)
    {
LABEL_323:
      if (v22)
      {
        *(void *)(a1 + 324) |= 0x3FFFFFFFFCuLL;
      }
      else if (v21)
      {
        while (1)
        {
          int v96 = *v21++;
          int v95 = v96;
          uint64_t v97 = 0x400000;
          switch(v96)
          {
            case 0:
              goto LABEL_364;
            case 1:
              continue;
            case 2:
              goto LABEL_363;
            case 3:
              uint64_t v97 = 32;
              goto LABEL_363;
            case 4:
              uint64_t v97 = 512;
              goto LABEL_363;
            case 5:
              uint64_t v97 = 0x2000000;
              goto LABEL_363;
            case 6:
              uint64_t v97 = 0x100000;
              goto LABEL_363;
            case 7:
              uint64_t v97 = 4;
              goto LABEL_363;
            case 8:
              uint64_t v97 = 0x10000000;
              goto LABEL_363;
            case 9:
              uint64_t v97 = 0x400000000;
              goto LABEL_363;
            case 10:
              uint64_t v97 = 0x1000000000;
              goto LABEL_363;
            case 11:
              uint64_t v97 = 128;
              goto LABEL_363;
            case 12:
              uint64_t v97 = 1024;
              goto LABEL_363;
            case 13:
              uint64_t v97 = 0x800000000;
              goto LABEL_363;
            case 14:
              uint64_t v97 = 0x200000000;
              goto LABEL_363;
            case 15:
              uint64_t v97 = 0x100000000;
              goto LABEL_363;
            case 16:
              uint64_t v97 = 64;
              goto LABEL_363;
            case 17:
              uint64_t v97 = 0x40000000;
              goto LABEL_363;
            case 18:
              uint64_t v97 = 0x2000;
              goto LABEL_363;
            case 19:
              uint64_t v97 = 4096;
              goto LABEL_363;
            case 20:
              uint64_t v97 = 0x8000000;
              goto LABEL_363;
            case 21:
              uint64_t v97 = 0x800000;
              goto LABEL_363;
            case 22:
              uint64_t v97 = 0x4000000;
              goto LABEL_363;
            case 23:
              uint64_t v97 = 0x80000000;
              goto LABEL_363;
            case 24:
              uint64_t v97 = 2048;
              goto LABEL_363;
            case 25:
              uint64_t v97 = 16;
              goto LABEL_363;
            case 26:
              uint64_t v97 = 0x20000000;
              goto LABEL_363;
            case 27:
              uint64_t v97 = 256;
              goto LABEL_363;
            case 28:
              uint64_t v97 = 0x40000;
              goto LABEL_363;
            case 29:
              uint64_t v97 = 0x80000;
              goto LABEL_363;
            case 30:
              uint64_t v97 = 0x1000000;
              goto LABEL_363;
            case 31:
              uint64_t v97 = 0x2000000000;
              goto LABEL_363;
            case 32:
              uint64_t v97 = 0x200000;
              goto LABEL_363;
            case 33:
              uint64_t v97 = 0x8000;
              goto LABEL_363;
            case 34:
              uint64_t v97 = 0x20000;
              goto LABEL_363;
            case 35:
              uint64_t v97 = 0x4000;
              goto LABEL_363;
            case 36:
              uint64_t v97 = 0x10000;
              goto LABEL_363;
            default:
              if (v95 != 102) {
                continue;
              }
              uint64_t v97 = 8;
LABEL_363:
              *(void *)(a1 + 324) |= v97;
              break;
          }
        }
      }
LABEL_364:
      unint64_t v3 = *(unsigned char *)(v3 + *v24) == 0;
      if (!v22) {
        return v3;
      }
LABEL_365:
      char v98 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;

      return v3;
    }
    unint64_t v35 = v28 >> 3;
    BOOL v36 = v22;
    if ((v101 & 1) == 0)
    {
      BOOL v37 = v21;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_238;
        }
        uint64_t v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(void *)(a1 + 324) |= 2uLL;
        while (1)
        {
          uint64_t v44 = *v23;
          unint64_t v45 = *(void *)(v3 + v44);
          if (v45 == -1 || v45 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v25) + v45);
          *(void *)(v3 + v44) = v45 + 1;
          v43 |= (unint64_t)(v46 & 0x7F) << v41;
          if ((v46 & 0x80) == 0) {
            goto LABEL_241;
          }
          v41 += 7;
          BOOL v32 = v42++ >= 9;
          if (v32)
          {
            LODWORD(v43) = 0;
            goto LABEL_243;
          }
        }
        *(unsigned char *)(v3 + *v24) = 1;
LABEL_241:
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v43) = 0;
        }
LABEL_243:
        uint64_t v57 = 320;
        goto LABEL_248;
      case 2:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 326) & 0x40) != 0)
        {
          char v60 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v60 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 41;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitName);
        if (!GEOPDPlaceSummaryLayoutUnitNameReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 176;
        goto LABEL_227;
      case 3:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 324) & 0x20) != 0)
        {
          char v61 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v61 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 58;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitCategory);
        if (!GEOPDPlaceSummaryLayoutUnitCategoryReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 40;
        goto LABEL_227;
      case 4:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 325) & 2) != 0)
        {
          char v62 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v62 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 54;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitDistance);
        if (!GEOPDPlaceSummaryLayoutUnitDistanceReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 72;
        goto LABEL_227;
      case 5:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 327) & 2) != 0)
        {
          char v63 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v63 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 38;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitPrice);
        if (!GEOPDPlaceSummaryLayoutUnitPriceReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 200;
        goto LABEL_227;
      case 6:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 326) & 0x10) != 0)
        {
          char v64 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v64 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 43;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitHours);
        if (!GEOPDPlaceSummaryLayoutUnitHoursReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 160;
        goto LABEL_227;
      case 7:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 324) & 4) != 0)
        {
          char v65 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v65 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 61;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitAddress);
        if (!GEOPDPlaceSummaryLayoutUnitAddressReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 16;
        goto LABEL_227;
      case 8:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 327) & 0x10) != 0)
        {
          char v66 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v66 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 35;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitRatings);
        if (!GEOPDPlaceSummaryLayoutUnitRatingsReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 224;
        goto LABEL_227;
      case 9:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 328) & 4) != 0)
        {
          char v67 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v67 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 29;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitTransitShields);
        if (!GEOPDPlaceSummaryLayoutUnitTransitShieldsReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 272;
        goto LABEL_227;
      case 10:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 328) & 0x10) != 0)
        {
          char v68 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v68 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 27;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitUserGeneratedGuides);
        if (!GEOPDPlaceSummaryLayoutUnitUserGeneratedGuidesReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 288;
        goto LABEL_227;
      case 11:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 324) & 0x80) != 0)
        {
          char v69 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v69 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 56;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitCuratedGuides);
        if (!GEOPDPlaceSummaryLayoutUnitCuratedGuidesReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 56;
        goto LABEL_227;
      case 12:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 325) & 4) != 0)
        {
          char v70 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v70 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 53;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitEVChargersNumber);
        if (!GEOPDPlaceSummaryLayoutUnitEVChargersNumberReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 80;
        goto LABEL_227;
      case 13:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 328) & 8) != 0)
        {
          char v71 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v71 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 28;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitUGCUserSubmittedRecommendations);
        if (!GEOPDPlaceSummaryLayoutUnitUGCUserSubmittedRecommendationsReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 280;
        goto LABEL_227;
      case 14:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 328) & 2) != 0)
        {
          char v72 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v72 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 30;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitString);
        if (!GEOPDPlaceSummaryLayoutUnitStringReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 264;
        goto LABEL_227;
      case 15:
        if (!v36) {
          goto LABEL_238;
        }
        if (*(unsigned char *)(a1 + 328))
        {
          char v73 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v73 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 31;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitServerOverride);
        if (!GEOPDPlaceSummaryLayoutUnitServerOverrideReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 256;
        goto LABEL_227;
      case 16:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 324) & 0x40) != 0)
        {
          char v74 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v74 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 57;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitContainment);
        if (!GEOPDPlaceSummaryLayoutUnitContainmentReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 48;
        goto LABEL_227;
      case 17:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 327) & 0x40) != 0)
        {
          char v75 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v75 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 33;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitRecent);
        if (!GEOPDPlaceSummaryLayoutUnitRecentReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 240;
        goto LABEL_227;
      case 18:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 325) & 0x20) != 0)
        {
          char v76 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v76 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 50;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitHighlightMain);
        if (!GEOPDPlaceSummaryLayoutUnitHighlightMainReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 104;
        goto LABEL_227;
      case 19:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 325) & 0x10) != 0)
        {
          char v77 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v77 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 51;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitHighlightExtra);
        if (!GEOPDPlaceSummaryLayoutUnitHighlightExtraReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 96;
        goto LABEL_227;
      case 20:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 327) & 8) != 0)
        {
          char v78 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v78 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 36;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitPublisherNameForGuide);
        if (!GEOPDPlaceSummaryLayoutUnitPublisherNameForGuideReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 216;
        goto LABEL_227;
      case 21:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 326) & 0x80) != 0)
        {
          char v79 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v79 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 40;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitNumPlacesInGuide);
        if (!GEOPDPlaceSummaryLayoutUnitNumPlacesInGuideReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 184;
        goto LABEL_227;
      case 22:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 327) & 4) != 0)
        {
          char v80 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v80 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 37;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitPublisherDescription);
        if (!GEOPDPlaceSummaryLayoutUnitPublisherDescriptionReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 208;
        goto LABEL_227;
      case 23:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 327) & 0x80) != 0)
        {
          char v81 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v81 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 32;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitSecondaryName);
        if (!GEOPDPlaceSummaryLayoutUnitSecondaryNameReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 248;
        goto LABEL_227;
      case 24:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 325) & 8) != 0)
        {
          char v82 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v82 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 52;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitFactoid);
        if (!GEOPDPlaceSummaryLayoutUnitFactoidReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 88;
        goto LABEL_227;
      case 25:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 324) & 0x10) != 0)
        {
          char v83 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v83 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 59;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitArpRatings);
        if (!GEOPDPlaceSummaryLayoutUnitArpRatingsReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 32;
        goto LABEL_227;
      case 26:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 327) & 0x20) != 0)
        {
          char v84 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v84 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 34;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitRealTimeEVChargerAvailability);
        if (!GEOPDPlaceSummaryLayoutUnitRealTimeEVChargerAvailabilityReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 232;
        goto LABEL_227;
      case 27:
        if (!v36) {
          goto LABEL_238;
        }
        if (*(unsigned char *)(a1 + 325))
        {
          char v85 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v85 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 55;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitDetourTime);
        if (!GEOPDPlaceSummaryLayoutUnitDetourTimeReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 64;
        goto LABEL_227;
      case 28:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 326) & 4) != 0)
        {
          char v86 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v86 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 45;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitHikingDifficulty);
        if (!GEOPDPlaceSummaryLayoutUnitHikingDifficultyReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 144;
        goto LABEL_227;
      case 29:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 326) & 8) != 0)
        {
          char v87 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v87 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 44;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitHikingTrailLength);
        if (!GEOPDPlaceSummaryLayoutUnitHikingTrailLengthReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 152;
        goto LABEL_227;
      case 30:
        if (!v36) {
          goto LABEL_238;
        }
        if (*(unsigned char *)(a1 + 327))
        {
          char v88 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v88 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 39;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitPhotoCarousel);
        if (!GEOPDPlaceSummaryLayoutUnitPhotoCarouselReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 192;
        goto LABEL_227;
      case 31:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 328) & 0x20) != 0)
        {
          char v89 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v89 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 26;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitUserNote);
        if (!GEOPDPlaceSummaryLayoutUnitUserNoteReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 296;
        goto LABEL_227;
      case 32:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 326) & 0x20) != 0)
        {
          char v90 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v90 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 42;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitInUserLibrary);
        if (!GEOPDPlaceSummaryLayoutUnitInUserLibraryReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 168;
        goto LABEL_227;
      case 33:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 325) & 0x80) != 0)
        {
          char v91 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v91 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 48;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitHikeRouteFactoidElevationGainLoss);
        if (!GEOPDPlaceSummaryLayoutUnitHikeRouteFactoidElevationGainLossReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 120;
        goto LABEL_227;
      case 34:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 326) & 2) != 0)
        {
          char v92 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v92 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 46;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitHikeRouteType);
        if (!GEOPDPlaceSummaryLayoutUnitHikeRouteTypeReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 136;
        goto LABEL_227;
      case 35:
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 325) & 0x40) != 0)
        {
          char v93 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v93 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 49;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitHikeRouteDuration);
        if (!GEOPDPlaceSummaryLayoutUnitHikeRouteDurationReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 112;
        goto LABEL_227;
      case 36:
        if (!v36) {
          goto LABEL_238;
        }
        if (*(unsigned char *)(a1 + 326))
        {
          char v94 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v94 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 47;
LABEL_321:
          v7 += v59 >> 63;
          goto LABEL_322;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitHikeRouteLength);
        if (GEOPDPlaceSummaryLayoutUnitHikeRouteLengthReadAllFrom((uint64_t)v47, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v48 = 128;
LABEL_227:
          unint64_t v49 = *(void **)(a1 + v48);
          *(void *)(a1 + v48) = v47;

          --v7;
          BOOL v22 = v100;
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_322:
          uint64_t v25 = (int *)MEMORY[0x1E4F940B8];
          if (!v22 && v7 == 0) {
            goto LABEL_323;
          }
          continue;
        }
LABEL_367:

        BOOL v22 = v100;
LABEL_368:
        unint64_t v3 = 0;
        *(void *)(a1 + 324) |= 0x3FFFFFFFFCuLL;
        if (v22) {
          goto LABEL_365;
        }
        return v3;
      default:
        if (v35 == 101)
        {
          if (v8)
          {
            uint64_t v50 = 0;
            unsigned int v51 = 0;
            uint64_t v43 = 0;
            *(void *)(a1 + 324) |= 1uLL;
            while (1)
            {
              uint64_t v52 = *v23;
              unint64_t v53 = *(void *)(v3 + v52);
              if (v53 == -1 || v53 >= *(void *)(v3 + *v6)) {
                break;
              }
              char v54 = *(unsigned char *)(*(void *)(v3 + *v25) + v53);
              *(void *)(v3 + v52) = v53 + 1;
              v43 |= (unint64_t)(v54 & 0x7F) << v50;
              if ((v54 & 0x80) == 0) {
                goto LABEL_245;
              }
              v50 += 7;
              BOOL v32 = v51++ >= 9;
              if (v32)
              {
                LODWORD(v43) = 0;
                goto LABEL_247;
              }
            }
            *(unsigned char *)(v3 + *v24) = 1;
LABEL_245:
            if (*(unsigned char *)(v3 + *v24)) {
              LODWORD(v43) = 0;
            }
LABEL_247:
            uint64_t v57 = 316;
LABEL_248:
            *(_DWORD *)(a1 + v57) = v43;
            goto LABEL_322;
          }
LABEL_238:
          char v56 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v56 & 1) == 0) {
            goto LABEL_368;
          }
          goto LABEL_322;
        }
        if (v35 != 102)
        {
          int v55 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if (!v55) {
            goto LABEL_368;
          }
          goto LABEL_322;
        }
        if (!v36) {
          goto LABEL_238;
        }
        if ((*(unsigned char *)(a1 + 324) & 8) != 0)
        {
          char v58 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v58 & 1) == 0) {
            goto LABEL_368;
          }
          uint64_t v59 = *(void *)(a1 + 324) << 60;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_368;
        }
        unsigned int v47 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnit);
        if (!GEOPDPlaceSummaryLayoutUnitReadAllFrom()) {
          goto LABEL_367;
        }
        PBReaderRecallMark();
        uint64_t v48 = 24;
        goto LABEL_227;
    }
  }
}

void sub_189C896EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C89864(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C899DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C89B54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C89CC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C89E40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C89FB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8A12C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8A29C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8A414(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8A58C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8A700(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8A874(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8A9E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8AB54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8ACCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8AE44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8AFBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8B134(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8B2AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8B424(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8B59C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8B710(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8B888(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8BA00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8BB78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8BCF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8BE68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8BFE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8C150(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8C2C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8C440(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8C5B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8C730(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8C918(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C8EF98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceSummaryLayoutUnitCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 176) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 72) readAll:1];
  [*(id *)(a1 + 200) readAll:1];
  [*(id *)(a1 + 160) readAll:1];
  [*(id *)(a1 + 16) readAll:1];
  [*(id *)(a1 + 224) readAll:1];
  [*(id *)(a1 + 272) readAll:1];
  [*(id *)(a1 + 288) readAll:1];
  [*(id *)(a1 + 56) readAll:1];
  [*(id *)(a1 + 80) readAll:1];
  [*(id *)(a1 + 280) readAll:1];
  [*(id *)(a1 + 264) readAll:1];
  [*(id *)(a1 + 256) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 240) readAll:1];
  [*(id *)(a1 + 104) readAll:1];
  [*(id *)(a1 + 96) readAll:1];
  [*(id *)(a1 + 216) readAll:1];
  [*(id *)(a1 + 184) readAll:1];
  [*(id *)(a1 + 208) readAll:1];
  [*(id *)(a1 + 248) readAll:1];
  [*(id *)(a1 + 88) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 232) readAll:1];
  [*(id *)(a1 + 64) readAll:1];
  [*(id *)(a1 + 144) readAll:1];
  [*(id *)(a1 + 152) readAll:1];
  [*(id *)(a1 + 192) readAll:1];
  [*(id *)(a1 + 296) readAll:1];
  [*(id *)(a1 + 168) readAll:1];
  [*(id *)(a1 + 120) readAll:1];
  [*(id *)(a1 + 136) readAll:1];
  [*(id *)(a1 + 112) readAll:1];
  [*(id *)(a1 + 128) readAll:1];
  BOOL v2 = *(void **)(a1 + 24);

  return [v2 readAll:1];
}

unint64_t GEOPDPlaceSummaryLayoutUnitReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 308))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPlaceSummaryLayoutUnitReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 312));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 304) = [v8 position];
  *(_DWORD *)(a1 + 308) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDPlaceSummaryLayoutUnitReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDPlaceSummaryLayoutUnitReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPlaceSummaryLayoutUnitReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDPlaceSummaryLayoutUnitCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 312));
  return Specified;
}

void sub_189C8F3A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutUnitReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDPlaceSummaryLayoutUnitReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C8F40C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitNameIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitCategoryIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitDistanceIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v13 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v15 = 0;
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDPlaceSummaryLayoutUnitPriceIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitHoursIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          while (1)
          {
            uint64_t v22 = *v2;
            unint64_t v23 = *(void *)&a1[v22];
            if (v23 == -1 || v23 >= *(void *)&a1[*v3]) {
              goto LABEL_37;
            }
            unint64_t v24 = v23 + 1;
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              unsigned int v26 = v14++;
              if (v26 <= 8) {
                continue;
              }
            }
            goto LABEL_49;
          }
        }
        if (!PBReaderPlaceMark())
        {
LABEL_52:
          PBReaderRecallMark();
          return 0;
        }
LABEL_39:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v27 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v28 = *v2;
            unint64_t v29 = *(void *)&a1[v28];
            if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
              break;
            }
            unint64_t v30 = v29 + 1;
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v12 = v27++ >= 9;
              if (!v12) {
                continue;
              }
            }
            goto LABEL_39;
          }
          a1[*v4] = 1;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((v8 >> 3) == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              break;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0 && v16++ <= 8) {
              continue;
            }
            goto LABEL_49;
          }
LABEL_37:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_52;
        }
      }
LABEL_49:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOPDPlaceSummaryLayoutUnitAddressIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v13 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v15 = 0;
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDPlaceSummaryLayoutUnitRatingsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v13 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v15 = 0;
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDPlaceSummaryLayoutUnitTransitShieldsIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitUserGeneratedGuidesIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitCuratedGuidesIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v13 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v15 = 0;
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDPlaceSummaryLayoutUnitEVChargersNumberIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitUGCUserSubmittedRecommendationsIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitServerOverrideIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v13 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v15 = 0;
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDPlaceSummaryLayoutUnitContainmentIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v13 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v15 = 0;
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDPlaceSummaryLayoutUnitRecentIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitHighlightMainIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitHighlightExtraIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitPublisherNameForGuideIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitNumPlacesInGuideIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitPublisherDescriptionIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitSecondaryNameIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v16 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v16;
}

BOOL GEOPDPlaceSummaryLayoutUnitFactoidIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v13 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v15 = 0;
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDPlaceSummaryLayoutUnitArpRatingsIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitRealTimeEVChargerAvailabilityIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitDetourTimeIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitHikingDifficultyIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitHikingTrailLengthIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitPhotoCarouselIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v13 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v15 = 0;
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDPlaceSummaryLayoutUnitUserNoteIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitInUserLibraryIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteFactoidElevationGainLossIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteTypeIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteDurationIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteLengthIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

void sub_189C92EC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceSummaryLayoutUnitIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 312));
  uint64_t v2 = *(void *)(a1 + 324);
  if ((v2 & 0x5C125006A4) != 0) {
    return 1;
  }
  if ((v2 & 0x200000000) != 0)
  {
    if (GEOPDPlaceSummaryLayoutUnitStringIsDirty(*(void *)(a1 + 264))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 324);
  }
  if ((v2 & 0x21EDAFF950) != 0) {
    return 1;
  }
  if ((v2 & 8) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 24);

  return (uint64_t)GEOPDPlaceSummaryLayoutUnitIsDirty(v4);
}

os_unfair_lock_s *GEOPDPlaceSummaryLayoutUnitIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDPlaceSummaryLayoutUnitIsDirty(v1);
    os_unfair_lock_unlock(v1 + 78);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189C93AC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitAddressReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_30;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            LODWORD(v19) = 0;
          }
LABEL_32:
          *(_DWORD *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_189C954B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitAddressReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitAddressReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C95514(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitArpRatingsReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    id v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C959DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitArpRatingsReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitArpRatingsReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C95A38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitCategoryReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C95D54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitCategoryReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitCategoryReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C95DB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitContainmentReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_30;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            LODWORD(v19) = 0;
          }
LABEL_32:
          *(_DWORD *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_189C965AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitContainmentReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitContainmentReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C96610(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitCuratedGuidesReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_30;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            LODWORD(v19) = 0;
          }
LABEL_32:
          *(_DWORD *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_189C96D98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitCuratedGuidesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitCuratedGuidesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C96DFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitDetourTimeReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    id v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C972C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitDetourTimeReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitDetourTimeReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C97320(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitDistanceReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 16) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_30;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            uint64_t v19 = 0;
          }
LABEL_32:
          *(void *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_189C978FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitDistanceReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitDistanceReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C97960(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitEVChargersNumberReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    id v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C97E28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitEVChargersNumberReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitEVChargersNumberReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C97E84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitFactoidReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_30;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            LODWORD(v19) = 0;
          }
LABEL_32:
          *(_DWORD *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_189C98460(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitFactoidReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitFactoidReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C984C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHighlightExtraReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    id v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C9898C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHighlightExtraReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitHighlightExtraReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C989E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHighlightMainReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C98D04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHighlightMainReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitHighlightMainReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C98D60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteDurationReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C9907C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteDurationReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitHikeRouteDurationReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C990D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteFactoidElevationGainLossReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C993F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteFactoidElevationGainLossReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitHikeRouteFactoidElevationGainLossReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C99450(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteLengthReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C9976C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteLengthReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitHikeRouteLengthReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C997C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteTypeReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C99AE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteTypeReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitHikeRouteTypeReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C99B40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikingDifficultyReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C99E5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikingDifficultyReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitHikingDifficultyReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C99EB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikingTrailLengthReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C9A1D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikingTrailLengthReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitHikingTrailLengthReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C9A230(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHoursReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        int v16 = v10 & 7;
        if (v15 || v16 == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          if (v16 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_59;
            }
            while (*(void *)&v3[*v4] < *(void *)&v3[*v5] && !v3[*v6])
            {
              char v24 = 0;
              unsigned int v25 = 0;
              uint64_t v26 = 0;
              while (1)
              {
                uint64_t v27 = *v4;
                unint64_t v28 = *(void *)&v3[v27];
                if (v28 == -1 || v28 >= *(void *)&v3[*v5]) {
                  break;
                }
                char v29 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
                *(void *)&v3[v27] = v28 + 1;
                v26 |= (unint64_t)(v29 & 0x7F) << v24;
                if (v29 < 0)
                {
                  v24 += 7;
                  BOOL v14 = v25++ >= 9;
                  if (!v14) {
                    continue;
                  }
                }
                goto LABEL_40;
              }
              v3[*v6] = 1;
LABEL_40:
              PBRepeatedInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v32 = 0;
            while (1)
            {
              uint64_t v33 = *v4;
              unint64_t v34 = *(void *)&v3[v33];
              if (v34 == -1 || v34 >= *(void *)&v3[*v5]) {
                break;
              }
              char v35 = *(unsigned char *)(*(void *)&v3[*v7] + v34);
              *(void *)&v3[v33] = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                BOOL v14 = v31++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_56;
            }
            v3[*v6] = 1;
LABEL_56:
            PBRepeatedInt32Add();
          }
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 36) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            unint64_t v22 = *(void *)&v3[v21];
            if (v22 == -1 || v22 >= *(void *)&v3[*v5]) {
              break;
            }
            char v23 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0) {
              goto LABEL_44;
            }
            v18 += 7;
            BOOL v14 = v19++ >= 9;
            if (v14)
            {
              LODWORD(v20) = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_46:
          *(_DWORD *)(a1 + 32) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_59;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_59:
    BOOL v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_189C9B144(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHoursReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitHoursReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C9B1AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitInUserLibraryReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    id v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C9B7C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitInUserLibraryReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitInUserLibraryReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C9B824(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitNameReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C9BB40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitNameReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitNameReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C9BB9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitNumPlacesInGuideReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C9BEB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitNumPlacesInGuideReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitNumPlacesInGuideReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C9BF14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitPhotoCarouselReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_30;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            LODWORD(v19) = 0;
          }
LABEL_32:
          *(_DWORD *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_189C9C4F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitPhotoCarouselReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitPhotoCarouselReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C9C554(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitPriceReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    id v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C9CA1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitPriceReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitPriceReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C9CA78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitPublisherDescriptionReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C9CD94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitPublisherDescriptionReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitPublisherDescriptionReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C9CDF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitPublisherNameForGuideReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C9D10C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitPublisherNameForGuideReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitPublisherNameForGuideReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C9D168(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitRatingsReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_30;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            uint64_t v19 = 0;
          }
LABEL_32:
          *(unsigned char *)(a1 + 8) = v19 != 0;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_189C9D74C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitRatingsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitRatingsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C9D7B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitRealTimeEVChargerAvailabilityReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    id v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C9DC80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitRealTimeEVChargerAvailabilityReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitRealTimeEVChargerAvailabilityReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C9DCDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitRecentReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189C9DFF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitRecentReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitRecentReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189C9E054(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitSecondaryNameReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v17 = PBReaderReadString();
          unsigned int v18 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v17;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    BOOL v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_189C9E4B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitSecondaryNameReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitSecondaryNameReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C9E518(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitServerOverrideReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_30;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            LODWORD(v19) = 0;
          }
LABEL_32:
          *(_DWORD *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_189C9EC68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitServerOverrideReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitServerOverrideReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C9ECCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C9F0F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutUnitStringReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 84)), (uint16x4_t)0xFFFCFFFEFFF9FFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 84) >> 6) & 1)+ ((*(_WORD *)(a1 + 84) >> 3) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          BOOL v16 = 0;
        }
        else {
          BOOL v16 = a3;
        }
        char v60 = (v16 == 0) | v15;
        char v17 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v59 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_100;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_100:
      if (v15)
      {
        char v53 = 1;
        goto LABEL_113;
      }
      if (v16)
      {
        while (1)
        {
          int v54 = *v16++;
          __int16 v55 = 128;
          switch(v54)
          {
            case 0:
              goto LABEL_114;
            case 1:
              goto LABEL_109;
            case 2:
              __int16 v55 = 32;
              goto LABEL_109;
            case 3:
              __int16 v55 = 4;
              goto LABEL_109;
            case 6:
              __int16 v55 = 16;
              goto LABEL_109;
            case 7:
              __int16 v55 = 64;
              goto LABEL_109;
            case 8:
              __int16 v55 = 8;
LABEL_109:
              *(_WORD *)(a1 + 84) |= v55;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_114;
    }
    unint64_t v29 = v22 >> 3;
    BOOL v30 = v15;
    if ((v60 & 1) == 0)
    {
      unsigned int v31 = v16;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30) {
          goto LABEL_79;
        }
        if ((*(_WORD *)(a1 + 84) & 0x80) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 56;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_112;
        }
        __int16 v52 = *(_WORD *)(a1 + 84) << 8;
        goto LABEL_97;
      case 2:
        if (!v30) {
          goto LABEL_79;
        }
        if ((*(_WORD *)(a1 + 84) & 0x20) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 40;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_112;
        }
        __int16 v52 = *(_WORD *)(a1 + 84) << 10;
        goto LABEL_97;
      case 3:
        if (!v30 || (*(_WORD *)(a1 + 84) & 4) != 0) {
          goto LABEL_79;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_112;
        }
        char v58 = objc_alloc_init(GEOPDPlaceSummaryFormat);
        if (!GEOPDPlaceSummaryFormatReadAllFrom((uint64_t)v58, (void *)v3)) {
          goto LABEL_111;
        }
        PBReaderRecallMark();
        -[GEOPDPlaceSummaryLayoutUnitString _addNoFlagsFormat:](a1, v58);
        goto LABEL_78;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_79;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 84) |= 1u;
        while (2)
        {
          uint64_t v41 = *v17;
          unint64_t v42 = *(void *)(v3 + v41);
          if (v42 == -1 || v42 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(v3 + *v19) + v42);
            *(void *)(v3 + v41) = v42 + 1;
            v40 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              BOOL v26 = v39++ >= 9;
              if (v26)
              {
                LODWORD(v40) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v40) = 0;
        }
LABEL_84:
        *(_DWORD *)(a1 + 76) = v40;
        goto LABEL_99;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_79;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 84) |= 2u;
        while (2)
        {
          uint64_t v47 = *v17;
          unint64_t v48 = *(void *)(v3 + v47);
          if (v48 == -1 || v48 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v19) + v48);
            *(void *)(v3 + v47) = v48 + 1;
            v46 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              BOOL v26 = v45++ >= 9;
              if (v26)
              {
                uint64_t v46 = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v46 = 0;
        }
LABEL_88:
        *(unsigned char *)(a1 + 80) = v46 != 0;
        goto LABEL_99;
      case 6:
        if (!v30) {
          goto LABEL_79;
        }
        if ((*(_WORD *)(a1 + 84) & 0x10) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 32;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_112;
        }
        __int16 v52 = *(_WORD *)(a1 + 84) << 11;
        goto LABEL_97;
      case 7:
        if (!v30) {
          goto LABEL_79;
        }
        if ((*(_WORD *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_112;
          }
          __int16 v52 = *(_WORD *)(a1 + 84) << 9;
LABEL_97:
          v7 += v52 >> 15;
        }
        else
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 48;
LABEL_72:
          uint64_t v50 = *(void **)(a1 + v36);
          *(void *)(a1 + v36) = v35;

          --v7;
        }
        goto LABEL_98;
      case 8:
        if (!v30 || (*(_WORD *)(a1 + 84) & 8) != 0)
        {
LABEL_79:
          char v51 = PBReaderSkipValueWithTag();
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v59;
          if ((v51 & 1) == 0)
          {
LABEL_110:
            char v53 = 0;
            goto LABEL_113;
          }
LABEL_99:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_100;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_112;
        }
        char v58 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v58, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDPlaceSummaryLayoutUnitString _addNoFlagsStyleAttributes:](a1, v58);
LABEL_78:

LABEL_98:
          char v15 = v59;
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_99;
        }
LABEL_111:

LABEL_112:
        char v53 = 0;
        char v15 = v59;
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_113:
        *(_WORD *)(a1 + 84) |= 0x80u;
        *(_WORD *)(a1 + 84) |= 0x20u;
        *(_WORD *)(a1 + 84) |= 4u;
        *(_WORD *)(a1 + 84) |= 0x10u;
        *(_WORD *)(a1 + 84) |= 0x40u;
        *(_WORD *)(a1 + 84) |= 8u;
        if (v53)
        {
LABEL_114:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_115;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_115:
            char v56 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v37 = PBReaderSkipValueWithTag();
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v59;
        if (!v37) {
          goto LABEL_110;
        }
        goto LABEL_99;
    }
  }
}

void sub_189C9FA94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C9FC04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CA00A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CA0218(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CA0388(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CA117C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceSummaryLayoutUnitStringCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 16);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 24);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDPlaceSummaryLayoutUnitStringReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPlaceSummaryLayoutUnitStringReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDPlaceSummaryLayoutUnitStringReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDPlaceSummaryLayoutUnitStringReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPlaceSummaryLayoutUnitStringReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDPlaceSummaryLayoutUnitStringCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189CA14AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutUnitStringReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDPlaceSummaryLayoutUnitStringReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CA1510(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CA1878(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitStringIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(_WORD *)(a1 + 84) & 0x1FC) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_189CA1F9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitTransitShieldsReadAllFrom(uint64_t a1, void *a2)
{
  BOOL v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    id v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189CA276C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitTransitShieldsReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitTransitShieldsReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189CA27C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitUGCUserSubmittedRecommendationsReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189CA2AE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitUGCUserSubmittedRecommendationsReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitUGCUserSubmittedRecommendationsReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189CA2B40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitUserGeneratedGuidesReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189CA2E5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitUserGeneratedGuidesReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitUserGeneratedGuidesReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189CA2EB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitUserNoteReadAllFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189CA31D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitUserNoteReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOPDPlaceSummaryLayoutUnitUserNoteReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189CA3230(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CA3778(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CA4C58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceSummaryResultLayoutTemplatePairCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 48);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  return [*(id *)(a1 + 40) readAll:1];
}

unint64_t GEOPDPlaceSummaryResultLayoutTemplatePairReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPlaceSummaryResultLayoutTemplatePairReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDPlaceSummaryResultLayoutTemplatePairReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDPlaceSummaryResultLayoutTemplatePairReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPlaceSummaryResultLayoutTemplatePairReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDPlaceSummaryResultLayoutTemplatePairCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189CA4F04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryResultLayoutTemplatePairReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDPlaceSummaryResultLayoutTemplatePairReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CA4F68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CA51C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceSummaryResultLayoutTemplatePairIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v2 = *(unsigned char *)(a1 + 68);
  if ((v2 & 0xC) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 68) & 2) != 0)
  {
    if (GEOPDPlaceSummaryLayoutTemplateIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 68);
  }
  return v2 & 1;
}

os_unfair_lock_s *GEOPDPlaceSummaryResultLayoutTemplatePairIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDPlaceSummaryResultLayoutTemplatePairIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189CA5790(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CA5E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  *(void *)(v33 - 120) = v32;
  std::vector<geo::TransitEdgePiece>::__destroy_vector::operator()[abi:ne180100]((void ***)(v33 - 120));

  _Unwind_Resume(a1);
}

void sub_189CA5FEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__n128 __Block_byref_object_copy__3_0(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[3] = result;
  return result;
}

void sub_189CA62D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CA6418(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CA652C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_189CA66B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189CA6798(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<geo::TransitEdgePiece>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  id v1 = *a1;
  char v2 = (id *)**a1;
  if (v2)
  {
    uint64_t v4 = (id *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {

        uint64_t v6 = *(v4 - 4);
        v4 -= 4;
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t *std::vector<geo::TransitEdgePiece>::__swap_out_circular_buffer(uint64_t *result, void *a2)
{
  uint64_t v3 = *result;
  uint64_t v2 = result[1];
  uint64_t v4 = a2[1];
  while (v2 != v3)
  {
    uint64_t v5 = *(void *)(v2 - 32);
    v2 -= 32;
    *(void *)uint64_t v2 = 0;
    *(void *)(v4 - 32) = v5;
    v4 -= 32;
    uint64_t v6 = *(void *)(v2 + 8);
    uint64_t v7 = *(void *)(v2 + 16);
    *(void *)(v2 + 16) = 0;
    *(void *)(v4 + 8) = v6;
    *(void *)(v4 + 16) = v7;
    LODWORD(v6) = *(_DWORD *)(v2 + 24);
    *(unsigned char *)(v4 + 28) = *(unsigned char *)(v2 + 28);
    *(_DWORD *)(v4 + 24) = v6;
  }
  a2[1] = v4;
  uint64_t v8 = *result;
  uint64_t *result = v4;
  a2[1] = v8;
  uint64_t v9 = result[1];
  result[1] = a2[2];
  a2[2] = v9;
  uint64_t v10 = result[2];
  result[2] = a2[3];
  a2[3] = v10;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<geo::TransitEdgePiece>>(unint64_t a1)
{
  if (a1 >> 59) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(32 * a1);
}

uint64_t std::__split_buffer<geo::TransitEdgePiece>::~__split_buffer(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 32;
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

id std::vector<geo::TransitEdgePiece>::__construct_one_at_end[abi:ne180100]<geo::TransitEdgePiece const&>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  id v5 = *(id *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void **)(a2 + 16);
  *(void *)uint64_t v4 = v5;
  *(void *)(v4 + 8) = v6;
  id result = v7;
  *(void *)(v4 + 16) = result;
  char v9 = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(v4 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(v4 + 28) = v9;
  *(void *)(a1 + 8) = v4 + 32;
  return result;
}

uint64_t std::vector<geo::TransitEdgePiece>::__push_back_slow_path<geo::TransitEdgePiece const&>(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = (a1[1] - *a1) >> 5;
  unint64_t v3 = v2 + 1;
  if ((unint64_t)(v2 + 1) >> 59) {
    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v6 = a1 + 2;
  uint64_t v7 = a1[2] - *a1;
  if (v7 >> 4 > v3) {
    unint64_t v3 = v7 >> 4;
  }
  if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v8 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v8 = v3;
  }
  v14[4] = v6;
  if (v8) {
    unint64_t v8 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<geo::TransitEdgePiece>>(v8);
  }
  else {
    uint64_t v9 = 0;
  }
  unint64_t v10 = v8 + 32 * v2;
  v14[0] = v8;
  v14[1] = v10;
  v14[3] = v8 + 32 * v9;
  *(void *)unint64_t v10 = *(id *)a2;
  *(void *)(v10 + 8) = *(void *)(a2 + 8);
  *(void *)(v10 + 16) = *(id *)(a2 + 16);
  int v11 = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(v10 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(v10 + 24) = v11;
  v14[2] = v10 + 32;
  std::vector<geo::TransitEdgePiece>::__swap_out_circular_buffer(a1, v14);
  uint64_t v12 = a1[1];
  std::__split_buffer<geo::TransitEdgePiece>::~__split_buffer((uint64_t)v14);
  return v12;
}

void std::vector<GEOLocationCoordinate3D>::reserve(void **a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a1) >> 3) < a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v5 = ((unsigned char *)a1[1] - (unsigned char *)*a1) / 24;
    uint64_t v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>(v3, a2);
    uint64_t v7 = &v6[24 * v5];
    uint64_t v9 = &v6[24 * v8];
    int v11 = (char *)*a1;
    unint64_t v10 = (char *)a1[1];
    uint64_t v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        long long v13 = *(_OWORD *)(v10 - 24);
        *((void *)v12 - 1) = *((void *)v10 - 1);
        *(_OWORD *)(v12 - 24) = v13;
        v12 -= 24;
        v10 -= 24;
      }
      while (v10 != v11);
      unint64_t v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void sub_189CA81F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CA82D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189CA83B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CA8D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54)
{
  _Block_object_dispose(&a49, 8);
  _Unwind_Resume(a1);
}

void sub_189CA9B34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, void *a10, void *a11, void *a12, uint64_t a13, void *a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *__p,uint64_t a34)
{
  _Unwind_Resume(a1);
}

void sub_189CA9EC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CAA0B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CAA264(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CAA330(_Unwind_Exception *exception_object)
{
}

void sub_189CAA51C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CAA734(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CAA7F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189CAAC20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_189CAAED4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CAB01C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CAB3A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CABA00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CABEB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CAC068(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CAC13C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CAC4D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CAC7F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CAC8E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CACA0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CACDA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CAD034(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CAD144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189CAD298(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL25GEOGetGEOComposedRouteLogv_block_invoke_0()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOComposedRoute");
  id v1 = (void *)_MergedGlobals_256;
  _MergedGlobals_256 = (uint64_t)v0;
}

void sub_189CADA40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVectorTileRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  unsigned int v10 = ((*(_DWORD *)(a1 + 100) >> 15) & 1) + ((*(_DWORD *)(a1 + 100) >> 13) & 1) + ((*(_DWORD *)(a1 + 100) >> 14) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v7 | (v10 > 1);
  if (v7 & 1 | (v10 > 1) | v8 & 1) {
    long long v13 = 0;
  }
  else {
    long long v13 = a3;
  }
  long long v14 = (int *)MEMORY[0x1E4F940E8];
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
  BOOL v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_208;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      BOOL v24 = v18++ >= 9;
      if (v24)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_208:
      if (v12)
      {
        char v119 = 1;
        goto LABEL_222;
      }
      if (!v13) {
        goto LABEL_223;
      }
      while (1)
      {
        while (1)
        {
          int v121 = *v13++;
          int v120 = v121;
          if (v121 <= 10) {
            break;
          }
          if (v120 == 14)
          {
            int v122 = 0x4000;
LABEL_218:
            *(_DWORD *)(a1 + 100) |= v122;
          }
          else if (v120 == 11)
          {
            int v122 = 0x2000;
            goto LABEL_218;
          }
        }
        if (v120 == 6)
        {
          int v122 = 0x8000;
          goto LABEL_218;
        }
        if (!v120) {
          goto LABEL_223;
        }
      }
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      unint64_t v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        *(_DWORD *)(a1 + 100) |= 0x80u;
        while (1)
        {
          uint64_t v36 = *v14;
          uint64_t v37 = *(void *)(v3 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(v3 + *v6)) {
            break;
          }
          char v39 = *(unsigned char *)(*(void *)(v3 + *v16) + v37);
          *(void *)(v3 + v36) = v38;
          v35 |= (unint64_t)(v39 & 0x7F) << v33;
          if ((v39 & 0x80) == 0) {
            goto LABEL_149;
          }
          v33 += 7;
          BOOL v24 = v34++ >= 9;
          if (v24)
          {
            LODWORD(v35) = 0;
            goto LABEL_151;
          }
        }
        *(unsigned char *)(v3 + *v15) = 1;
LABEL_149:
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_151:
        uint64_t v114 = 84;
        goto LABEL_184;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v35 = 0;
        *(_DWORD *)(a1 + 100) |= 0x100u;
        while (2)
        {
          uint64_t v43 = *v14;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(v3 + *v16) + v44);
            *(void *)(v3 + v43) = v45;
            v35 |= (unint64_t)(v46 & 0x7F) << v41;
            if (v46 < 0)
            {
              v41 += 7;
              BOOL v24 = v42++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_155;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_155:
        uint64_t v114 = 88;
        goto LABEL_184;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v35 = 0;
        *(_DWORD *)(a1 + 100) |= 0x200u;
        while (2)
        {
          uint64_t v49 = *v14;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v16) + v50);
            *(void *)(v3 + v49) = v51;
            v35 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              BOOL v24 = v48++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_159;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_159:
        uint64_t v114 = 92;
        goto LABEL_184;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v35 = 0;
        *(_DWORD *)(a1 + 100) |= 0x40u;
        while (2)
        {
          uint64_t v55 = *v14;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v16) + v56);
            *(void *)(v3 + v55) = v57;
            v35 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v24 = v54++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_163;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_163:
        uint64_t v114 = 80;
        goto LABEL_184;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v35 = 0;
        *(_DWORD *)(a1 + 100) |= 0x20u;
        while (2)
        {
          uint64_t v61 = *v14;
          uint64_t v62 = *(void *)(v3 + v61);
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(v3 + *v16) + v62);
            *(void *)(v3 + v61) = v63;
            v35 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              BOOL v24 = v60++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_167;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_167:
        uint64_t v114 = 76;
        goto LABEL_184;
      case 6:
        if (!v28) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 101) & 0x80) == 0)
        {
          uint64_t v65 = PBReaderReadString();
          uint64_t v66 = 32;
          goto LABEL_129;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_228;
        }
        int v117 = (int)(*(_DWORD *)(a1 + 100) << 16) >> 31;
        goto LABEL_200;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v69 = 0;
        *(_DWORD *)(a1 + 100) |= 0x400u;
        while (2)
        {
          uint64_t v70 = *v14;
          uint64_t v71 = *(void *)(v3 + v70);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(v3 + *v16) + v71);
            *(void *)(v3 + v70) = v72;
            v69 |= (unint64_t)(v73 & 0x7F) << v67;
            if (v73 < 0)
            {
              v67 += 7;
              BOOL v24 = v68++ >= 9;
              if (v24)
              {
                uint64_t v69 = 0;
                goto LABEL_171;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          uint64_t v69 = 0;
        }
LABEL_171:
        BOOL v115 = v69 != 0;
        uint64_t v116 = 96;
        goto LABEL_193;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v76 = 0;
        *(_DWORD *)(a1 + 100) |= 1u;
        while (2)
        {
          uint64_t v77 = *v14;
          uint64_t v78 = *(void *)(v3 + v77);
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v80 = *(unsigned char *)(*(void *)(v3 + *v16) + v78);
            *(void *)(v3 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              BOOL v24 = v75++ >= 9;
              if (v24)
              {
                uint64_t v76 = 0;
                goto LABEL_175;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          uint64_t v76 = 0;
        }
LABEL_175:
        *(void *)(a1 + 40) = v76;
        goto LABEL_207;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v81 = 0;
        unsigned int v82 = 0;
        uint64_t v35 = 0;
        *(_DWORD *)(a1 + 100) |= 0x10u;
        while (2)
        {
          uint64_t v83 = *v14;
          uint64_t v84 = *(void *)(v3 + v83);
          unint64_t v85 = v84 + 1;
          if (v84 == -1 || v85 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v86 = *(unsigned char *)(*(void *)(v3 + *v16) + v84);
            *(void *)(v3 + v83) = v85;
            v35 |= (unint64_t)(v86 & 0x7F) << v81;
            if (v86 < 0)
            {
              v81 += 7;
              BOOL v24 = v82++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_179;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_179:
        uint64_t v114 = 72;
        goto LABEL_184;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v87 = 0;
        unsigned int v88 = 0;
        uint64_t v35 = 0;
        *(_DWORD *)(a1 + 100) |= 8u;
        while (2)
        {
          uint64_t v89 = *v14;
          uint64_t v90 = *(void *)(v3 + v89);
          unint64_t v91 = v90 + 1;
          if (v90 == -1 || v91 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v92 = *(unsigned char *)(*(void *)(v3 + *v16) + v90);
            *(void *)(v3 + v89) = v91;
            v35 |= (unint64_t)(v92 & 0x7F) << v87;
            if (v92 < 0)
            {
              v87 += 7;
              BOOL v24 = v88++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_183;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_183:
        uint64_t v114 = 68;
LABEL_184:
        *(_DWORD *)(a1 + v114) = v35;
        goto LABEL_207;
      case 11:
        if (!v28) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 101) & 0x20) == 0)
        {
          uint64_t v65 = PBReaderReadString();
          uint64_t v66 = 16;
          goto LABEL_129;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_228;
        }
        int v117 = (int)(*(_DWORD *)(a1 + 100) << 18) >> 31;
        goto LABEL_200;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        *(_DWORD *)(a1 + 100) |= 4u;
        uint64_t v93 = *v14;
        unint64_t v94 = *(void *)(v3 + v93);
        if (v94 <= 0xFFFFFFFFFFFFFFFBLL && v94 + 4 <= *(void *)(v3 + *v6))
        {
          int v95 = *(_DWORD *)(*(void *)(v3 + *v16) + v94);
          *(void *)(v3 + v93) = v94 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v15) = 1;
          int v95 = 0;
        }
        uint64_t v118 = 64;
        goto LABEL_206;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        *(_DWORD *)(a1 + 100) |= 2u;
        uint64_t v96 = *v14;
        unint64_t v97 = *(void *)(v3 + v96);
        if (v97 <= 0xFFFFFFFFFFFFFFFBLL && v97 + 4 <= *(void *)(v3 + *v6))
        {
          int v95 = *(_DWORD *)(*(void *)(v3 + *v16) + v97);
          *(void *)(v3 + v96) = v97 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v15) = 1;
          int v95 = 0;
        }
        uint64_t v118 = 60;
LABEL_206:
        *(_DWORD *)(a1 + v118) = v95;
        goto LABEL_207;
      case 14:
        if (!v28) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 101) & 0x40) == 0)
        {
          uint64_t v65 = PBReaderReadString();
          uint64_t v66 = 24;
LABEL_129:
          char v98 = *(void **)(a1 + v66);
          *(void *)(a1 + v66) = v65;

          --v9;
          goto LABEL_201;
        }
        if (PBReaderSkipValueWithTag())
        {
          int v117 = (int)(*(_DWORD *)(a1 + 100) << 17) >> 31;
LABEL_200:
          v9 += v117;
LABEL_201:
          BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_207:
          if (!(v12 & 1 | (v9 != 0))) {
            goto LABEL_208;
          }
          continue;
        }
LABEL_228:
        char v119 = 0;
        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_222:
        *(_DWORD *)(a1 + 100) |= 0x8000u;
        *(_DWORD *)(a1 + 100) |= 0x2000u;
        *(_DWORD *)(a1 + 100) |= 0x4000u;
        if (v119)
        {
LABEL_223:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_224;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v12)
          {
LABEL_224:
            int v123 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v99 = 0;
        unsigned int v100 = 0;
        uint64_t v101 = 0;
        *(_DWORD *)(a1 + 100) |= 0x800u;
        while (2)
        {
          uint64_t v102 = *v14;
          uint64_t v103 = *(void *)(v3 + v102);
          unint64_t v104 = v103 + 1;
          if (v103 == -1 || v104 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v105 = *(unsigned char *)(*(void *)(v3 + *v16) + v103);
            *(void *)(v3 + v102) = v104;
            v101 |= (unint64_t)(v105 & 0x7F) << v99;
            if (v105 < 0)
            {
              v99 += 7;
              BOOL v24 = v100++ >= 9;
              if (v24)
              {
                uint64_t v101 = 0;
                goto LABEL_188;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          uint64_t v101 = 0;
        }
LABEL_188:
        BOOL v115 = v101 != 0;
        uint64_t v116 = 97;
        goto LABEL_193;
      case 16:
        if (v8)
        {
          char v106 = 0;
          unsigned int v107 = 0;
          uint64_t v108 = 0;
          *(_DWORD *)(a1 + 100) |= 0x1000u;
          while (1)
          {
            uint64_t v109 = *v14;
            uint64_t v110 = *(void *)(v3 + v109);
            unint64_t v111 = v110 + 1;
            if (v110 == -1 || v111 > *(void *)(v3 + *v6)) {
              break;
            }
            char v112 = *(unsigned char *)(*(void *)(v3 + *v16) + v110);
            *(void *)(v3 + v109) = v111;
            v108 |= (unint64_t)(v112 & 0x7F) << v106;
            if ((v112 & 0x80) == 0) {
              goto LABEL_190;
            }
            v106 += 7;
            BOOL v24 = v107++ >= 9;
            if (v24)
            {
              uint64_t v108 = 0;
              goto LABEL_192;
            }
          }
          *(unsigned char *)(v3 + *v15) = 1;
LABEL_190:
          if (*(unsigned char *)(v3 + *v15)) {
            uint64_t v108 = 0;
          }
LABEL_192:
          BOOL v115 = v108 != 0;
          uint64_t v116 = 98;
LABEL_193:
          *(unsigned char *)(a1 + v116) = v115;
        }
        else
        {
LABEL_146:
          char v113 = PBReaderSkipValueWithTag();
          BOOL v15 = (int *)MEMORY[0x1E4F940C8];
          if ((v113 & 1) == 0)
          {
LABEL_221:
            char v119 = 0;
            goto LABEL_222;
          }
        }
        goto LABEL_207;
      default:
        int v40 = PBReaderSkipValueWithTag();
        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v40) {
          goto LABEL_221;
        }
        goto LABEL_207;
    }
  }
}

void sub_189CAEB00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CAED78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CAFAD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVectorTileRequestReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOVectorTileRequestReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 48) = [v6 position];
      *(_DWORD *)(a1 + 52) = [v6 length];
      unint64_t Specified = GEOVectorTileRequestReadSpecified(a1, (unint64_t)v6, (int *)&GEOVectorTileRequestReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)char v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189CAFC54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CB059C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CB0C28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CB1A4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }

  _Unwind_Resume(a1);
}

void sub_189CB1B50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CB1BA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CB1BF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CB1C74(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_189CB1D0C(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_189CB1DA4(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_189CB1E3C(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_189CB1F1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189CB1FDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189CB20F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_189CB2190(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CB2288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_189CB2328(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CB2420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_189CB24C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CB25B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_189CB2658(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CB2750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_189CB27F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CB28BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CB2BC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_189CB2DB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object)
{
  _Unwind_Resume(a1);
}

void sub_189CB2E9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_189CB2F7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL GEOVLBuildReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v17 = 0;
            unsigned int v18 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 28) |= 1u;
            while (2)
            {
              uint64_t v20 = *v4;
              unint64_t v21 = *(void *)&v3[v20];
              if (v21 == -1 || v21 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
                *(void *)&v3[v20] = v21 + 1;
                v19 |= (unint64_t)(v22 & 0x7F) << v17;
                if (v22 < 0)
                {
                  v17 += 7;
                  BOOL v14 = v18++ >= 9;
                  if (v14)
                  {
                    uint64_t v19 = 0;
                    goto LABEL_53;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v19 = 0;
            }
LABEL_53:
            *(void *)(a1 + 8) = v19;
            continue;
          case 2u:
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            *(unsigned char *)(a1 + 28) |= 4u;
            while (1)
            {
              uint64_t v26 = *v4;
              unint64_t v27 = *(void *)&v3[v26];
              if (v27 == -1 || v27 >= *(void *)&v3[*v5]) {
                break;
              }
              char v28 = *(unsigned char *)(*(void *)&v3[*v7] + v27);
              *(void *)&v3[v26] = v27 + 1;
              v25 |= (unint64_t)(v28 & 0x7F) << v23;
              if ((v28 & 0x80) == 0) {
                goto LABEL_55;
              }
              v23 += 7;
              BOOL v14 = v24++ >= 9;
              if (v14)
              {
                LODWORD(v25) = 0;
                goto LABEL_57;
              }
            }
            v3[*v6] = 1;
LABEL_55:
            if (v3[*v6]) {
              LODWORD(v25) = 0;
            }
LABEL_57:
            uint64_t v39 = 20;
            goto LABEL_66;
          case 3u:
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v25 = 0;
            *(unsigned char *)(a1 + 28) |= 8u;
            while (2)
            {
              uint64_t v31 = *v4;
              unint64_t v32 = *(void *)&v3[v31];
              if (v32 == -1 || v32 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
                *(void *)&v3[v31] = v32 + 1;
                v25 |= (unint64_t)(v33 & 0x7F) << v29;
                if (v33 < 0)
                {
                  v29 += 7;
                  BOOL v14 = v30++ >= 9;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
                    goto LABEL_61;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v25) = 0;
            }
LABEL_61:
            uint64_t v39 = 24;
            goto LABEL_66;
          case 4u:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v25 = 0;
            *(unsigned char *)(a1 + 28) |= 2u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_69;
            }
            continue;
        }
        while (1)
        {
          uint64_t v36 = *v4;
          unint64_t v37 = *(void *)&v3[v36];
          if (v37 == -1 || v37 >= *(void *)&v3[*v5]) {
            break;
          }
          char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
          *(void *)&v3[v36] = v37 + 1;
          v25 |= (unint64_t)(v38 & 0x7F) << v34;
          if ((v38 & 0x80) == 0) {
            goto LABEL_63;
          }
          v34 += 7;
          BOOL v14 = v35++ >= 9;
          if (v14)
          {
            LODWORD(v25) = 0;
            goto LABEL_65;
          }
        }
        v3[*v6] = 1;
LABEL_63:
        if (v3[*v6]) {
          LODWORD(v25) = 0;
        }
LABEL_65:
        uint64_t v39 = 16;
LABEL_66:
        *(_DWORD *)(a1 + v39) = v25;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_69:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_189CB39B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLBuildReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOVLBuildReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CB3A24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLBuildIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v13 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v15 = 0;
          while (1)
          {
            uint64_t v16 = *v2;
            unint64_t v17 = *(void *)&a1[v16];
            if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            unint64_t v18 = v17 + 1;
            int v19 = *(char *)(*(void *)&a1[*v5] + v17);
            *(void *)&a1[v16] = v18;
            if (v19 < 0)
            {
              BOOL v20 = v15++ > 8;
              if (!v20) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            unint64_t v23 = *(void *)&a1[v22];
            if (v23 == -1 || v23 >= *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            unint64_t v24 = v23 + 1;
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v20 = v21++ > 8;
              if (!v20) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v26 = 0;
          while (1)
          {
            uint64_t v27 = *v2;
            unint64_t v28 = *(void *)&a1[v27];
            if (v28 == -1 || v28 >= *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            unint64_t v29 = v28 + 1;
            int v30 = *(char *)(*(void *)&a1[*v5] + v28);
            *(void *)&a1[v27] = v29;
            if (v30 < 0)
            {
              BOOL v20 = v26++ > 8;
              if (!v20) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v31 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          BOOL v36 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        uint64_t v32 = *v2;
        unint64_t v33 = *(void *)&a1[v32];
        if (v33 == -1 || v33 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v34 = v33 + 1;
        int v35 = *(char *)(*(void *)&a1[*v5] + v33);
        *(void *)&a1[v32] = v34;
        if (v35 < 0)
        {
          BOOL v20 = v31++ > 8;
          if (!v20) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v36 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v36;
}

void sub_189CB4498(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CB4824(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CB4BB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CB57F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLDataTileReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOVLDataTileReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CB5858(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLDataTileIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOTileCoordinateIsValid(a1)) {
            goto LABEL_81;
          }
          goto LABEL_22;
        case 2u:
          if (v14 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_81;
            }
            while (1)
            {
              uint64_t v16 = *v2;
              unint64_t v17 = *(void *)&a1[v16];
              if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
                goto LABEL_46;
              }
              unint64_t v18 = v17 + 1;
              int v19 = *(char *)(*(void *)&a1[*v5] + v17);
              *(void *)&a1[v16] = v18;
              if (v19 < 0)
              {
                unsigned int v20 = v14++;
                if (v20 <= 8) {
                  continue;
                }
              }
              goto LABEL_47;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_81;
          }
LABEL_50:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v31 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v32 = *v2;
              unint64_t v33 = *(void *)&a1[v32];
              if (v33 == -1 || v33 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v34 = v33 + 1;
              int v35 = *(char *)(*(void *)&a1[*v5] + v33);
              *(void *)&a1[v32] = v34;
              if (v35 < 0)
              {
                BOOL v12 = v31++ >= 9;
                if (!v12) {
                  continue;
                }
              }
              goto LABEL_50;
            }
            a1[*v4] = 1;
          }
          goto LABEL_22;
        case 3u:
          if (v14 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_81;
            }
            while (1)
            {
              uint64_t v21 = *v2;
              unint64_t v22 = *(void *)&a1[v21];
              if (v22 == -1 || v22 >= *(void *)&a1[*v3]) {
                goto LABEL_46;
              }
              unint64_t v23 = v22 + 1;
              int v24 = *(char *)(*(void *)&a1[*v5] + v22);
              *(void *)&a1[v21] = v23;
              if (v24 < 0)
              {
                unsigned int v25 = v14++;
                if (v25 <= 8) {
                  continue;
                }
              }
              goto LABEL_47;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_81;
          }
LABEL_60:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v36 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v37 = *v2;
              unint64_t v38 = *(void *)&a1[v37];
              if (v38 == -1 || v38 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v39 = v38 + 1;
              int v40 = *(char *)(*(void *)&a1[*v5] + v38);
              *(void *)&a1[v37] = v39;
              if (v40 < 0)
              {
                BOOL v12 = v36++ >= 9;
                if (!v12) {
                  continue;
                }
              }
              goto LABEL_60;
            }
            a1[*v4] = 1;
          }
          goto LABEL_22;
        case 4u:
          if (v14 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_81:
              PBReaderRecallMark();
              return 0;
            }
LABEL_70:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v41 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v42 = *v2;
                unint64_t v43 = *(void *)&a1[v42];
                if (v43 == -1 || v43 >= *(void *)&a1[*v3]) {
                  break;
                }
                unint64_t v44 = v43 + 1;
                int v45 = *(char *)(*(void *)&a1[*v5] + v43);
                *(void *)&a1[v42] = v44;
                if (v45 < 0)
                {
                  BOOL v12 = v41++ >= 9;
                  if (!v12) {
                    continue;
                  }
                }
                goto LABEL_70;
              }
              a1[*v4] = 1;
            }
LABEL_22:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_81;
            }
            while (1)
            {
              uint64_t v26 = *v2;
              unint64_t v27 = *(void *)&a1[v26];
              if (v27 == -1 || v27 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v28 = v27 + 1;
              int v29 = *(char *)(*(void *)&a1[*v5] + v27);
              *(void *)&a1[v26] = v28;
              if (v29 < 0)
              {
                unsigned int v30 = v14++;
                if (v30 <= 8) {
                  continue;
                }
              }
              goto LABEL_47;
            }
LABEL_46:
            a1[*v4] = 1;
          }
LABEL_47:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_79;
          }
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_81;
          }
          goto LABEL_47;
      }
    }
  }
LABEL_79:
  BOOL v46 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v46;
}

void sub_189CB5F58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLDataTileIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  BOOL v2 = (*(unsigned char *)(a1 + 108) & 0x1F) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return v2;
}

void sub_189CB62E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CB6698(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CB6844(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CB7FDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOVLMetadataTileCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  [a1[6] readAll:1];
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v2 = a1[5];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v26;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v26 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v25 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v4);
  }

  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v7 = a1[7];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v22;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v21 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
    }
    while (v9);
  }

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v12 = a1[8];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v18;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v18 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v17 + 1) + 8 * v16++), "readAll:", 1, (void)v17);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
    }
    while (v14);
  }
}

unint64_t GEOVLMetadataTileReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOVLMetadataTileReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CB8280(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLMetadataTileIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOTileCoordinateIsValid(a1)) {
            goto LABEL_36;
          }
          goto LABEL_58;
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOVLBuildIsValid(a1)) {
            goto LABEL_58;
          }
          goto LABEL_36;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOVLPrecisionIsValid(a1)) {
            goto LABEL_58;
          }
          goto LABEL_36;
        case 4u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOVLDataTileIsValid(a1)) {
            goto LABEL_36;
          }
          goto LABEL_58;
        case 5u:
          if (v14 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_58:
              PBReaderRecallMark();
              return 0;
            }
LABEL_47:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v21 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v22 = *v2;
                unint64_t v23 = *(void *)&a1[v22];
                if (v23 == -1 || v23 >= *(void *)&a1[*v3]) {
                  break;
                }
                unint64_t v24 = v23 + 1;
                int v25 = *(char *)(*(void *)&a1[*v5] + v23);
                *(void *)&a1[v22] = v24;
                if (v25 < 0)
                {
                  BOOL v12 = v21++ >= 9;
                  if (!v12) {
                    continue;
                  }
                }
                goto LABEL_47;
              }
              a1[*v4] = 1;
            }
LABEL_36:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_58;
            }
            while (1)
            {
              uint64_t v16 = *v2;
              unint64_t v17 = *(void *)&a1[v16];
              if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v18 = v17 + 1;
              int v19 = *(char *)(*(void *)&a1[*v5] + v17);
              *(void *)&a1[v16] = v18;
              if (v19 < 0)
              {
                unsigned int v20 = v14++;
                if (v20 <= 8) {
                  continue;
                }
              }
              goto LABEL_37;
            }
            a1[*v4] = 1;
          }
LABEL_37:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_57;
          }
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_58;
          }
          goto LABEL_37;
      }
    }
  }
LABEL_57:
  BOOL v26 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v26;
}

BOOL GEOVLPrecisionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark())
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
LABEL_29:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v21 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v22 = *v2;
              unint64_t v23 = *(void *)&a1[v22];
              if (v23 == -1 || v23 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v24 = v23 + 1;
              int v25 = *(char *)(*(void *)&a1[*v5] + v23);
              *(void *)&a1[v22] = v24;
              if (v25 < 0)
              {
                BOOL v12 = v21++ >= 9;
                if (!v12) {
                  continue;
                }
              }
              goto LABEL_29;
            }
            a1[*v4] = 1;
          }
          PBReaderRecallMark();
        }
        else
        {
          if ((v8 & 7) != 0) {
            goto LABEL_43;
          }
          while (1)
          {
            uint64_t v16 = *v2;
            unint64_t v17 = *(void *)&a1[v16];
            if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
              break;
            }
            unint64_t v18 = v17 + 1;
            int v19 = *(char *)(*(void *)&a1[*v5] + v17);
            *(void *)&a1[v16] = v18;
            if (v19 < 0)
            {
              unsigned int v20 = v14++;
              if (v20 <= 8) {
                continue;
              }
            }
            goto LABEL_40;
          }
          a1[*v4] = 1;
        }
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v26 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v26;
}

void sub_189CB8C34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLMetadataTileIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  BOOL v2 = (*(unsigned char *)(a1 + 84) & 0x3F) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_189CB9264(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLPrecisionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOVLPrecisionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CB9AFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void GeoCodecsVMP4DecodingOptions::~GeoCodecsVMP4DecodingOptions(GeoCodecsVMP4DecodingOptions *this)
{
  if (*((char *)this + 23) < 0) {
    operator delete(*(void **)this);
  }
}

void sub_189CB9E98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CB9F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_189CB9FD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_189CBA06C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_189CBA108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_189CBA1A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_189CBA240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_189CBA2DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_189CBAD34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189CBAE04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189CBAEA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189CBAFEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CBB084(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void GEORoadEdgeFlip(void *a1)
{
  id v2 = a1;
  uint64_t v1 = [v2 get];
  *(int8x16_t *)(v1 + 8) = vextq_s8(*(int8x16_t *)(v1 + 8), *(int8x16_t *)(v1 + 8), 8uLL);
  *(int8x16_t *)(v1 + 24) = vextq_s8(*(int8x16_t *)(v1 + 24), *(int8x16_t *)(v1 + 24), 8uLL);
  *(int8x16_t *)(v1 + 40) = vextq_s8(*(int8x16_t *)(v1 + 40), *(int8x16_t *)(v1 + 40), 8uLL);
}

void sub_189CBB100(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189CBB370(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CBB47C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189CBB594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189CBB680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{
  _Unwind_Resume(a1);
}

void sub_189CBB724(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189CBBA14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id GEOVectorTransitLineAlongLink(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 containingTile];
  uint64_t v5 = v4;
  if (v4)
  {
    char v6 = [v4 transitLines];
    uint64_t v7 = [v5 transitLinkLineIndices];
    unint64_t v8 = 0;
    if (v6)
    {
      uint64_t v9 = v7;
      if (v7)
      {
        uint64_t v10 = *(void *)[v3 transitIndexRange];
        if (v10 + a2 >= (unint64_t)[v5 transitLinkLineIndicesCount]
          || (unint64_t v11 = *(void *)(v9 + 8 * (v10 + a2)), v11 >= [v5 transitLineCount]))
        {
          unint64_t v8 = 0;
        }
        else
        {
          unint64_t v8 = [v6 objectAtIndex:v11];
        }
      }
    }
  }
  else
  {
    unint64_t v8 = 0;
  }

  return v8;
}

void sub_189CBBB30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

float GEOBuildingFootprintBaseHeight(void *a1, unint64_t a2)
{
  id v3 = a1;
  float v4 = geo::codec::buildingFootprintBaseHeight([v3 get], a2);

  return v4;
}

void sub_189CBBBA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

float GEOBuildingFootprintExtrusionHeight(void *a1, unint64_t a2)
{
  id v3 = a1;
  float v4 = geo::codec::buildingFootprintExtrusionHeight([v3 get], a2);

  return v4;
}

void sub_189CBBC00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *GEOMultiSectionFeaturePoints(void *a1, unint64_t a2, void *a3)
{
  id v5 = a1;
  char v6 = geo::codec::multiSectionFeaturePoints((void *)[v5 get], a2, a3);

  return v6;
}

void sub_189CBBC60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t GEOMultiSectionFeatureElevations(void *a1, unint64_t a2, void *a3)
{
  id v5 = a1;
  uint64_t v6 = geo::codec::multiSectionFeatureElevations([v5 get], a2, a3);

  return v6;
}

void sub_189CBBCC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *GEOMultiSectionFeaturePointsWithElevation(void *a1, unint64_t a2, void *a3, void *a4)
{
  id v7 = a1;
  unint64_t v8 = geo::codec::multiSectionFeaturePointsWithElevation((void *)[v7 get], a2, a3, a4);

  return v8;
}

void sub_189CBBD28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *GEOMultiSectionFeatureGetGEOVectorTilePoints(void *a1, unint64_t a2, void *a3)
{
  id v5 = a1;
  uint64_t v6 = geo::codec::multiSectionFeaturePoints((void *)[v5 get], a2, a3);

  return v6;
}

void sub_189CBBD88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id GEOBuildingFootprintFeatureAtIndex(void *a1, unint64_t a2)
{
  id v3 = a1;
  if ([v3 totalBuildingFootprintsCount] <= a2)
  {
    id v5 = 0;
  }
  else
  {
    if ([v3 nonOverlappingBuildingFootprintsCount] <= a2)
    {
      uint64_t v6 = [v3 nonOverlappingBuildingFootprintsCount];
      float v4 = [v3 overlapBuildingFootprints];
      [v4 objectAtIndex:a2 - v6];
    }
    else
    {
      float v4 = [v3 buildingFootprints];
      [v4 objectAtIndex:a2];
    id v5 = };
  }

  return v5;
}

void sub_189CBBE54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t GEOTransitLinkPoints(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  uint64_t v6 = geo::codec::transitLinkPoints([v5 get], a2, a3);

  return v6;
}

void sub_189CBBEC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

geo::codec *GEOMultiSectionFeatureCharacteristicPoints(void *a1, GeoCodecsRoadFeature *a2)
{
  id v3 = a1;
  float v4 = (std::__shared_weak_count **)[v3 getRoad];
  uint64_t v6 = geo::codec::multiSectionFeatureCharacteristicPoints(v4, a2, v5);

  return v6;
}

void sub_189CBBF18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t GEOFeatureGetLocalizedLabelCount(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 get];
  if (v2) {
    uint64_t v3 = *(unsigned __int8 *)(v2 + 73);
  }
  else {
    uint64_t v3 = 0;
  }

  return v3;
}

void sub_189CBBF68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void GEOFeatureGetLocalizedLabel(void *a1, unint64_t a2, unint64_t *a3, unint64_t *a4)
{
  id v7 = a1;
  unint64_t v8 = [v7 containingTile];
  uint64_t v9 = v8;
  if (v8)
  {
    [v8 vectorTilePtr];
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v11 = 0;
  }
  geo::codec::vectorTileGetLocalizedLabel(&v10, objc_msgSend(v7, "labelCount", v10), objc_msgSend(v7, "labelOffset"), a2, a3, a4);
  if (v11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
  }
}

void sub_189CBC028(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void GEOFeatureGetLocalizedShield(void *a1, unint64_t a2, unint64_t *a3, void *a4, void *a5)
{
  id v9 = a1;
  geo::codec::featureGetLocalizedShield([v9 get], a2, a3, a4, a5);
}

void sub_189CBC0C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t getIndexforMultiSectionFeature(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = [v3 getRoad];
  uint64_t v6 = 1022611261 * ((unint64_t)(v5 - [v4 getRoad]) >> 3);

  return v6;
}

void sub_189CBC148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void GEOFeatureGetNativeLabel(void *a1, unint64_t a2, unint64_t *a3, unint64_t *a4)
{
  id v7 = a1;
  geo::codec::featureGetLocalizedLabel((uint64_t *)[v7 get], a2, a3, a4);
}

void sub_189CBC1C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id GEOVectorTileRetain(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1) {
    id v3 = v1;
  }

  return v2;
}

void GEOVectorTileRelease(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    id v2 = v1;

    id v1 = v2;
  }
}

id GEOMultiSectionFeatureRetain(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (v1)
  {
    id v3 = [v1 feature];
    id v4 = [v3 containingTile];

    id v5 = v2;
  }

  return v2;
}

void sub_189CBC2D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void GEOMultiSectionFeatureRelease(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    id v4 = v1;
    id v2 = [v1 feature];
    id v3 = [v2 containingTile];
    GEOVectorTileRelease(v3);

    id v1 = v4;
  }
}

void sub_189CBC35C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

_DWORD *GEOMultiSectionFeatureBounds(void *a1)
{
  id v1 = a1;
  id v2 = geo::codec::multiSectionFeatureBounds((float *)[v1 get]);

  return v2;
}

void sub_189CBC3B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void GEOFeatureGetNativeShield(void *a1, unint64_t a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  geo::codec::featureGetNativeShield([v9 get], a2, a3, a4, a5);
}

void sub_189CBC434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

BOOL GEOMultiSectionFeatureIsSameRoad(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = (geo::codec *)[v3 getRoad];
  uint64_t v6 = (const GeoCodecsRoadFeature *)[v4 getRoad];
  BOOL IsSameRoad = geo::codec::multiSectionFeatureIsSameRoad(v5, v6, v7);

  return IsSameRoad;
}

void sub_189CBC4B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void GEOMultiSectionFeatureGetSectionData(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  uint64_t v8 = 0;
  geo::codec::multiSectionFeatureGetSectionData([v7 get], &v8, a3, a4);
  *a2 = v8;
}

void sub_189CBC530(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{
  _Unwind_Resume(a1);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<-[GEOVectorTile lines]::$_1 &&>>(void **a1)
{
  id v1 = (void *)**a1;
  uint64_t v2 = [objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:0xCF3CF3CF3CF3CF3DLL* ((uint64_t)(*(void *)(*(void *)(*v1 + 8) + 40) - *(void *)(*(void *)(*v1 + 8) + 32)) >> 3)];
  id v3 = *(void **)(*v1 + 24);
  *(void *)(*v1 + 24) = v2;

  uint64_t v4 = *(void *)(*v1 + 8);
  uint64_t v5 = *(void *)(v4 + 32);
  for (uint64_t i = *(void *)(v4 + 40); v5 != i; v5 += 168)
  {
    id v7 = *(void **)(*v1 + 24);
    uint64_t v8 = [[GEOMultiSectionFeature alloc] initWithRoad:v5 withVectorTile:*v1];
    [v7 addObject:v8];
  }
}

void sub_189CBC6D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<-[GEOVectorTile coastlines]::$_2 &&>>(void **a1)
{
  id v1 = (void *)**a1;
  uint64_t v2 = [objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:0x4EC4EC4EC4EC4EC5* ((uint64_t)(*(void *)(*(void *)(*v1 + 8) + 72) - *(void *)(*(void *)(*v1 + 8) + 64)) >> 3)];
  id v3 = *(void **)(*v1 + 32);
  *(void *)(*v1 + 32) = v2;

  uint64_t v4 = *(void *)(*v1 + 8);
  uint64_t v5 = *(void *)(v4 + 64);
  for (uint64_t i = *(void *)(v4 + 72); v5 != i; v5 += 104)
  {
    id v7 = *(void **)(*v1 + 32);
    id v8 = [[GEOMultiSectionFeature alloc] init:v5 withVectorTile:*v1];
    [v7 addObject:v8];
  }
}

void sub_189CBC7B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<-[GEOVectorTile buildingFootprints]::$_3 &&>>(void **a1)
{
  id v1 = (void *)**a1;
  uint64_t v2 = [objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:0xF0F0F0F0F0F0F0F1* ((uint64_t)(*(void *)(*(void *)(*v1 + 8) + 288) - *(void *)(*(void *)(*v1 + 8) + 280)) >> 3)];
  id v3 = *(void **)(*v1 + 40);
  *(void *)(*v1 + 40) = v2;

  uint64_t v4 = *(void *)(*v1 + 8);
  uint64_t v5 = *(void *)(v4 + 280);
  for (uint64_t i = *(void *)(v4 + 288); v5 != i; v5 += 136)
  {
    id v7 = *(void **)(*v1 + 40);
    id v8 = [[GEOBuildingFootprintFeature alloc] init:v5 withVectorTile:*v1];
    [v7 addObject:v8];
  }
}

void sub_189CBC88C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<-[GEOVectorTile junctionsWithoutFeature]::$_4 &&>>(uint64_t ***a1)
{
  id v1 = **a1;
  uint64_t v2 = [objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:*(void *)(*(void *)(*v1 + 8) + 696)];
  id v3 = *(void **)(*v1 + 72);
  *(void *)(*v1 + 72) = v2;

  uint64_t v4 = *v1;
  if (*(void *)(*(void *)(*v1 + 8) + 696))
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0;
    do
    {
      id v7 = *(void **)(v4 + 72);
      id v8 = [[GEOConnectivityJunction alloc] init:*(void *)(*(void *)(*v1 + 8) + 688) + v5];
      [v7 addObject:v8];

      ++v6;
      uint64_t v4 = *v1;
      v5 += 32;
    }
    while (v6 < *(void *)(*(void *)(*v1 + 8) + 696));
  }
}

void sub_189CBC968(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<-[GEOVectorTile transitLines]::$_5 &&>>(void **a1)
{
  id v1 = (void *)**a1;
  uint64_t v2 = [objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:0x4EC4EC4EC4EC4EC5* ((uint64_t)(*(void *)(*(void *)(*v1 + 8) + 1288) - *(void *)(*(void *)(*v1 + 8) + 1280)) >> 3)];
  id v3 = *(void **)(*v1 + 48);
  *(void *)(*v1 + 48) = v2;

  uint64_t v4 = *(void *)(*v1 + 8);
  uint64_t v5 = *(void *)(v4 + 1280);
  for (uint64_t i = *(void *)(v4 + 1288); v5 != i; v5 += 104)
  {
    id v7 = *(void **)(*v1 + 48);
    id v8 = [[GEOVectorTransitLine alloc] init:v5 withVectorTile:*v1];
    [v7 addObject:v8];
  }
}

void sub_189CBCA50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<-[GEOVectorTile transitLinks]::$_6 &&>>(void **a1)
{
  id v1 = (void *)**a1;
  uint64_t v2 = [objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:0xD37A6F4DE9BD37A7* ((uint64_t)(*(void *)(*(void *)(*v1 + 8) + 1352) - *(void *)(*(void *)(*v1 + 8) + 1344)) >> 3)];
  id v3 = *(void **)(*v1 + 56);
  *(void *)(*v1 + 56) = v2;

  uint64_t v4 = *(void *)(*v1 + 8);
  uint64_t v5 = *(void *)(v4 + 1344);
  for (uint64_t i = *(void *)(v4 + 1352); v5 != i; v5 += 184)
  {
    id v7 = *(void **)(*v1 + 56);
    id v8 = [[GEOTransitLink alloc] init:v5 withVectorTile:*v1];
    [v7 addObject:v8];
  }
}

void sub_189CBCB38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<-[GEOVectorTile overlapBuildingFootprints]::$_7 &&>>(void **a1)
{
  id v1 = (void *)**a1;
  uint64_t v2 = [objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:0xF0F0F0F0F0F0F0F1* ((uint64_t)(*(void *)(*(void *)(*v1 + 8) + 384) - *(void *)(*(void *)(*v1 + 8) + 376)) >> 3)];
  id v3 = *(void **)(*v1 + 64);
  *(void *)(*v1 + 64) = v2;

  uint64_t v4 = *(void *)(*v1 + 8);
  uint64_t v5 = *(void *)(v4 + 376);
  for (uint64_t i = *(void *)(v4 + 384); v5 != i; v5 += 136)
  {
    id v7 = *(void **)(*v1 + 64);
    id v8 = [[GEOBuildingFootprintFeature alloc] init:v5 withVectorTile:*v1];
    [v7 addObject:v8];
  }
}

void sub_189CBCC10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CBCCEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CBCDF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_189CBCFB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189CBD370(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CBD838(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t std::hash<GEORoadEdge * {__strong}>::operator()(void *a1)
{
  v19[2] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = [v1 road];
  id v3 = [v2 feature];
  uint64_t v4 = [v3 containingTile];
  uint64_t v5 = [v4 tileKey];
  uint64_t v6 = *(void *)v5;
  uint64_t v7 = *(void *)v5 << 32;
  unint64_t v8 = BYTE4(*(void *)v5) | ((((*(void *)v5 >> 40) | (*(unsigned __int16 *)(v5 + 8) << 24)) & 0x3FFFFFF) << 8) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned __int16 *)(v5 + 8) >> 2) << 34) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned char *)(v5 + 10) & 0xF) << 48) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned char *)(v5 + 10) >> 4) << 52);
  *(void *)((char *)v19 + 1) = v7 & 0xFFFFC00000000000 | ((unint64_t)((*(void *)v5 >> 8) & 0x3F) << 40);
  LOBYTE(v19[0]) = v6;
  *((void *)&v9 + 1) = v8;
  *(void *)&long long v9 = v7;
  v18[0] = v19[0];
  v18[1] = v9 >> 56;
  unint64_t v10 = GEOTileKeyHash(v18);

  unint64_t v11 = [v1 road];
  uint64_t v12 = [v11 sectionOffset];

  uint64_t v13 = [v1 vertexIndexA];
  uint64_t v14 = [v1 vertexIndexB];

  unint64_t v15 = (((v10 + 2654435769u) << 6) + ((v10 + 2654435769u) >> 2) + v12 + 2654435769) ^ (v10 + 2654435769u);
  unint64_t v16 = ((v15 << 6) + (v15 >> 2) + v13 + 2654435769) ^ v15;
  return ((v16 << 6) + (v16 >> 2) + v14 + 2654435769) ^ v16;
}

void sub_189CBDA8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL std::equal_to<GEORoadEdge * {__strong}>::operator()(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = [v3 road];
  uint64_t v6 = [v5 feature];
  uint64_t v7 = [v6 containingTile];
  uint64_t v8 = [v7 tileKey];
  *(void *)unint64_t v24 = *(void *)v8;
  *(_DWORD *)&v24[7] = *(_DWORD *)(v8 + 7);

  long long v9 = [v4 road];
  unint64_t v10 = [v9 feature];
  unint64_t v11 = [v10 containingTile];
  uint64_t v12 = [v11 tileKey];
  *(void *)unint64_t v23 = *(void *)v12;
  *(_DWORD *)&v23[7] = *(_DWORD *)(v12 + 7);

  uint64_t v13 = [v3 junctionIndexA];
  if (v13 == [v4 junctionIndexA]
    && (uint64_t v14 = [v3 junctionIndexB], v14 == objc_msgSend(v4, "junctionIndexB"))
    && (uint64_t v15 = [v3 vertexIndexA], v15 == objc_msgSend(v4, "vertexIndexA"))
    && (uint64_t v16 = [v3 vertexIndexB], v16 == objc_msgSend(v4, "vertexIndexB")))
  {
    unint64_t v17 = [v3 road];
    uint64_t v18 = [v17 sectionOffset];
    int v19 = [v4 road];
    BOOL v21 = v18 == [v19 sectionOffset]
       && *(void *)v24 == *(void *)v23
       && *(void *)&v24[3] == *(void *)&v23[3];
  }
  else
  {
    BOOL v21 = 0;
  }

  return v21;
}

void sub_189CBDCC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CBDE2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CBDF84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189CBE098(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CBE1C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CBE278(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CBE354(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CBE3F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CBE444(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CBE504(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CBE5D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CBE7D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CBE928(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189CBEAB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189CBEDE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CBEFE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CBF128(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CBF26C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CBF3B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CBF4F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CBFDEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CBFF30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CC00A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CC0214(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAnalyticMetadataCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = a1[16];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  [a1[5] readAll:1];
  return [a1[15] readAll:1];
}

uint64_t GEOPDAnalyticMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOPDAnalyticMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CC1B18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAnalyticMetadataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2) {
            goto LABEL_116;
          }
          goto LABEL_112;
        case 2u:
          if (v16 == 2) {
            goto LABEL_112;
          }
          goto LABEL_116;
        case 3u:
          if (v16 == 2) {
            goto LABEL_112;
          }
          goto LABEL_116;
        case 4u:
          if (v16 == 2) {
            goto LABEL_112;
          }
          goto LABEL_116;
        case 5u:
          if (v16 == 2) {
            goto LABEL_112;
          }
          goto LABEL_116;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_116;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_109;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_113;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_116;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_109;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_113;
          }
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSessionIDIsValid(a1)) {
            goto LABEL_116;
          }
          goto LABEL_88;
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_116;
          }
          unsigned int v29 = 0;
          while (1)
          {
            uint64_t v30 = *v2;
            uint64_t v31 = *(void *)&a1[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
              goto LABEL_109;
            }
            int v33 = *(char *)(*(void *)&a1[*v5] + v31);
            *(void *)&a1[v30] = v32;
            if (v33 < 0)
            {
              BOOL v23 = v29++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_113;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_116;
          }
          unsigned int v34 = 0;
          while (1)
          {
            uint64_t v35 = *v2;
            uint64_t v36 = *(void *)&a1[v35];
            unint64_t v37 = v36 + 1;
            if (v36 == -1 || v37 > *(void *)&a1[*v3]) {
              goto LABEL_109;
            }
            int v38 = *(char *)(*(void *)&a1[*v5] + v36);
            *(void *)&a1[v35] = v37;
            if (v38 < 0)
            {
              BOOL v23 = v34++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_113;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_116;
          }
          unsigned int v39 = 0;
          while (1)
          {
            uint64_t v40 = *v2;
            uint64_t v41 = *(void *)&a1[v40];
            unint64_t v42 = v41 + 1;
            if (v41 == -1 || v42 > *(void *)&a1[*v3]) {
              goto LABEL_109;
            }
            int v43 = *(char *)(*(void *)&a1[*v5] + v41);
            *(void *)&a1[v40] = v42;
            if (v43 < 0)
            {
              BOOL v23 = v39++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_113;
          }
        case 0xDu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOGeoServiceTagIsValid(a1)) {
            goto LABEL_116;
          }
          goto LABEL_88;
        case 0xEu:
          if (v16 == 2) {
            goto LABEL_112;
          }
          goto LABEL_116;
        case 0xFu:
          if (v16 == 2) {
            goto LABEL_112;
          }
          goto LABEL_116;
        case 0x10u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOAbAssignInfoIsValid(a1)) {
            goto LABEL_116;
          }
          goto LABEL_88;
        case 0x11u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocalTimeIsValid(a1)) {
            goto LABEL_116;
          }
LABEL_88:
          PBReaderRecallMark();
          continue;
        case 0x12u:
          if (v16 != 1) {
            goto LABEL_116;
          }
          uint64_t v44 = *v2;
          unint64_t v45 = *(void *)&a1[v44];
          if (v45 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_110;
          }
          unint64_t v46 = v45 + 8;
          if (v46 > *(void *)&a1[*v3]) {
            goto LABEL_110;
          }
          *(void *)&a1[v44] = v46;
          continue;
        case 0x13u:
          if ((v8 & 7) != 0) {
            goto LABEL_116;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            uint64_t v49 = *(void *)&a1[v48];
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
              goto LABEL_109;
            }
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v23 = v47++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_113;
          }
        case 0x14u:
          if ((v8 & 7) != 0) {
            goto LABEL_116;
          }
          unsigned int v52 = 0;
          break;
        case 0x15u:
          if (v16 == 2) {
            goto LABEL_112;
          }
          goto LABEL_116;
        default:
LABEL_112:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_116:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v53 = *v2;
        uint64_t v54 = *(void *)&a1[v53];
        unint64_t v55 = v54 + 1;
        if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
          break;
        }
        int v56 = *(char *)(*(void *)&a1[*v5] + v54);
        *(void *)&a1[v53] = v55;
        if (v56 < 0)
        {
          BOOL v23 = v52++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_113;
      }
LABEL_109:
      uint64_t v14 = *v4;
LABEL_110:
      a1[v14] = 1;
LABEL_113:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v57 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v57;
}

void sub_189CC295C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CC3468(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CC371C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CC3980(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CC3AC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CC3C08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CC4384(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CC44F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CC4A24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CC54A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CC55E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CC5B28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CC6220(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CC6364(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDClientMetadataCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  [a1[20] readAll:1];
  [a1[25] readAll:1];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v2 = a1[26];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  [a1[31] readAll:1];
  [a1[19] readAll:1];
  return [a1[18] readAll:1];
}

unint64_t GEOPDClientMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDClientMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CC981C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDClientMetadataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_258:
    BOOL v134 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v134;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_258;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v13 = v7++ >= 9;
      if (v13)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4) {
      goto LABEL_258;
    }
    unint64_t v17 = v8 >> 3;
    switch((v8 >> 3))
    {
      case 1u:
        if (v15 != 2) {
          goto LABEL_261;
        }
        goto LABEL_174;
      case 2u:
      case 6u:
      case 7u:
      case 0xEu:
        goto LABEL_174;
      case 3u:
        if (v15 == 2) {
          goto LABEL_174;
        }
        goto LABEL_261;
      case 4u:
        if (v15 == 2) {
          goto LABEL_174;
        }
        goto LABEL_261;
      case 5u:
        if (v15 == 2) {
          goto LABEL_174;
        }
        goto LABEL_261;
      case 8u:
        if ((v8 & 7) != 0) {
          goto LABEL_261;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            goto LABEL_199;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0)
          {
            BOOL v23 = v18++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_204;
        }
      case 9u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOAdditionalEnabledMarketsIsValid(a1)) {
          goto LABEL_261;
        }
        goto LABEL_203;
      case 0xAu:
        if ((v8 & 7) != 0) {
          goto LABEL_261;
        }
        unsigned int v24 = 0;
        while (1)
        {
          uint64_t v25 = *v2;
          uint64_t v26 = *(void *)&a1[v25];
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
            goto LABEL_199;
          }
          int v28 = *(char *)(*(void *)&a1[*v5] + v26);
          *(void *)&a1[v25] = v27;
          if (v28 < 0)
          {
            BOOL v23 = v24++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_204;
        }
      case 0xBu:
        if ((v8 & 7) != 0) {
          goto LABEL_261;
        }
        unsigned int v29 = 0;
        while (1)
        {
          uint64_t v30 = *v2;
          uint64_t v31 = *(void *)&a1[v30];
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
            goto LABEL_199;
          }
          int v33 = *(char *)(*(void *)&a1[*v5] + v31);
          *(void *)&a1[v30] = v32;
          if (v33 < 0)
          {
            BOOL v23 = v29++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_204;
        }
      case 0xCu:
        if ((v8 & 7) != 0) {
          goto LABEL_261;
        }
        unsigned int v34 = 0;
        while (1)
        {
          uint64_t v35 = *v2;
          uint64_t v36 = *(void *)&a1[v35];
          unint64_t v37 = v36 + 1;
          if (v36 == -1 || v37 > *(void *)&a1[*v3]) {
            goto LABEL_199;
          }
          int v38 = *(char *)(*(void *)&a1[*v5] + v36);
          *(void *)&a1[v35] = v37;
          if (v38 < 0)
          {
            BOOL v23 = v34++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_204;
        }
      case 0xDu:
      case 0xFu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1)) {
          goto LABEL_261;
        }
        goto LABEL_203;
      case 0x10u:
        if ((v8 & 7) != 0) {
          goto LABEL_261;
        }
        unsigned int v39 = 0;
        while (1)
        {
          uint64_t v40 = *v2;
          uint64_t v41 = *(void *)&a1[v40];
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)&a1[*v3]) {
            goto LABEL_199;
          }
          int v43 = *(char *)(*(void *)&a1[*v5] + v41);
          *(void *)&a1[v40] = v42;
          if (v43 < 0)
          {
            BOOL v23 = v39++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_204;
        }
      case 0x11u:
        if (v15 == 2) {
          goto LABEL_174;
        }
        goto LABEL_261;
      case 0x12u:
        if (v15 != 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_261;
          }
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_199;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              unsigned int v48 = v15++;
              if (v48 <= 8) {
                continue;
              }
            }
            goto LABEL_204;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_261;
        }
LABEL_209:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v109 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v110 = *v2;
            uint64_t v111 = *(void *)&a1[v110];
            unint64_t v112 = v111 + 1;
            if (v111 == -1 || v112 > *(void *)&a1[*v3]) {
              break;
            }
            int v113 = *(char *)(*(void *)&a1[*v5] + v111);
            *(void *)&a1[v110] = v112;
            if (v113 < 0)
            {
              BOOL v13 = v109++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_209;
          }
          a1[*v4] = 1;
        }
        goto LABEL_203;
      case 0x13u:
        if ((v8 & 7) != 0) {
          goto LABEL_261;
        }
        unsigned int v49 = 0;
        while (1)
        {
          uint64_t v50 = *v2;
          uint64_t v51 = *(void *)&a1[v50];
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)&a1[*v3]) {
            goto LABEL_199;
          }
          int v53 = *(char *)(*(void *)&a1[*v5] + v51);
          *(void *)&a1[v50] = v52;
          if (v53 < 0)
          {
            BOOL v23 = v49++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_204;
        }
      case 0x14u:
        if (v15 != 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_261;
          }
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              goto LABEL_199;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              unsigned int v58 = v15++;
              if (v58 <= 8) {
                continue;
              }
            }
            goto LABEL_204;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_261;
        }
LABEL_219:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v114 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v115 = *v2;
            uint64_t v116 = *(void *)&a1[v115];
            unint64_t v117 = v116 + 1;
            if (v116 == -1 || v117 > *(void *)&a1[*v3]) {
              break;
            }
            int v118 = *(char *)(*(void *)&a1[*v5] + v116);
            *(void *)&a1[v115] = v117;
            if (v118 < 0)
            {
              BOOL v13 = v114++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_219;
          }
          a1[*v4] = 1;
        }
        goto LABEL_203;
      case 0x15u:
        if (v15 == 2) {
          goto LABEL_174;
        }
        goto LABEL_261;
      case 0x16u:
        if ((v8 & 7) != 0) {
          goto LABEL_261;
        }
        unsigned int v59 = 0;
        while (1)
        {
          uint64_t v60 = *v2;
          uint64_t v61 = *(void *)&a1[v60];
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)&a1[*v3]) {
            goto LABEL_199;
          }
          int v63 = *(char *)(*(void *)&a1[*v5] + v61);
          *(void *)&a1[v60] = v62;
          if (v63 < 0)
          {
            BOOL v23 = v59++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_204;
        }
      case 0x17u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizationCapabilitiesIsValid(a1)) {
          goto LABEL_261;
        }
        goto LABEL_203;
      case 0x18u:
        if (v15 == 2) {
          goto LABEL_174;
        }
        goto LABEL_261;
      case 0x19u:
        if ((v8 & 7) != 0) {
          goto LABEL_261;
        }
        unsigned int v64 = 0;
        while (1)
        {
          uint64_t v65 = *v2;
          uint64_t v66 = *(void *)&a1[v65];
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)&a1[*v3]) {
            goto LABEL_199;
          }
          int v68 = *(char *)(*(void *)&a1[*v5] + v66);
          *(void *)&a1[v65] = v67;
          if (v68 < 0)
          {
            BOOL v23 = v64++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_204;
        }
      case 0x1Au:
        if (v15 != 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_261;
          }
          while (1)
          {
            uint64_t v69 = *v2;
            uint64_t v70 = *(void *)&a1[v69];
            unint64_t v71 = v70 + 1;
            if (v70 == -1 || v71 > *(void *)&a1[*v3]) {
              goto LABEL_199;
            }
            int v72 = *(char *)(*(void *)&a1[*v5] + v70);
            *(void *)&a1[v69] = v71;
            if (v72 < 0)
            {
              unsigned int v73 = v15++;
              if (v73 <= 8) {
                continue;
              }
            }
            goto LABEL_204;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_261;
        }
LABEL_229:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v119 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v120 = *v2;
            uint64_t v121 = *(void *)&a1[v120];
            unint64_t v122 = v121 + 1;
            if (v121 == -1 || v122 > *(void *)&a1[*v3]) {
              break;
            }
            int v123 = *(char *)(*(void *)&a1[*v5] + v121);
            *(void *)&a1[v120] = v122;
            if (v123 < 0)
            {
              BOOL v13 = v119++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_229;
          }
          a1[*v4] = 1;
        }
        goto LABEL_203;
      case 0x1Bu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_261;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_140:
        if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
          goto LABEL_206;
        }
        char v74 = 0;
        unsigned int v75 = 0;
        unint64_t v76 = 0;
        while (1)
        {
          uint64_t v77 = *v2;
          uint64_t v78 = *(void *)&a1[v77];
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)&a1[*v3]) {
            break;
          }
          char v80 = *(unsigned char *)(*(void *)&a1[*v5] + v78);
          *(void *)&a1[v77] = v79;
          v76 |= (unint64_t)(v80 & 0x7F) << v74;
          if ((v80 & 0x80) == 0) {
            goto LABEL_150;
          }
          v74 += 7;
          BOOL v13 = v75++ >= 9;
          if (v13)
          {
            unint64_t v76 = 0;
            uint64_t v81 = *v4;
            int v82 = a1[v81];
            goto LABEL_152;
          }
        }
        a1[*v4] = 1;
LABEL_150:
        uint64_t v81 = *v4;
        int v82 = a1[v81];
        if (a1[v81]) {
          unint64_t v76 = 0;
        }
LABEL_152:
        int v83 = v76 & 7;
        if (v82 || v83 == 4)
        {
LABEL_206:
          int v108 = a1[*v4];
          PBReaderRecallMark();
          if (v108) {
            goto LABEL_261;
          }
LABEL_203:
          PBReaderRecallMark();
LABEL_204:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_258;
          }
          continue;
        }
        if ((v76 >> 3) != 1)
        {
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_260;
          }
          goto LABEL_140;
        }
        if (v83 == 1)
        {
          uint64_t v85 = *v2;
          unint64_t v86 = *(void *)&a1[v85];
          if (v86 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v87 = v86 + 8, v87 <= *(void *)&a1[*v3])) {
            *(void *)&a1[v85] = v87;
          }
          else {
            a1[v81] = 1;
          }
          goto LABEL_140;
        }
LABEL_260:
        PBReaderRecallMark();
LABEL_261:
        PBReaderRecallMark();
        return 0;
      case 0x1Cu:
        if (v15 != 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_261;
          }
          while (1)
          {
            uint64_t v88 = *v2;
            uint64_t v89 = *(void *)&a1[v88];
            unint64_t v90 = v89 + 1;
            if (v89 == -1 || v90 > *(void *)&a1[*v3]) {
              goto LABEL_199;
            }
            int v91 = *(char *)(*(void *)&a1[*v5] + v89);
            *(void *)&a1[v88] = v90;
            if (v91 < 0)
            {
              unsigned int v92 = v15++;
              if (v92 <= 8) {
                continue;
              }
            }
            goto LABEL_204;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_261;
        }
LABEL_239:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v124 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v125 = *v2;
            uint64_t v126 = *(void *)&a1[v125];
            unint64_t v127 = v126 + 1;
            if (v126 == -1 || v127 > *(void *)&a1[*v3]) {
              break;
            }
            int v128 = *(char *)(*(void *)&a1[*v5] + v126);
            *(void *)&a1[v125] = v127;
            if (v128 < 0)
            {
              BOOL v13 = v124++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_239;
          }
          a1[*v4] = 1;
        }
        goto LABEL_203;
      case 0x1Du:
        if (v15 == 2) {
          goto LABEL_174;
        }
        goto LABEL_261;
      case 0x1Eu:
        if (v15 == 2) {
          goto LABEL_174;
        }
        goto LABEL_261;
      case 0x1Fu:
        if ((v8 & 7) != 0) {
          goto LABEL_261;
        }
        unsigned int v93 = 0;
        while (1)
        {
          uint64_t v94 = *v2;
          uint64_t v95 = *(void *)&a1[v94];
          unint64_t v96 = v95 + 1;
          if (v95 == -1 || v96 > *(void *)&a1[*v3]) {
            goto LABEL_199;
          }
          int v97 = *(char *)(*(void *)&a1[*v5] + v95);
          *(void *)&a1[v94] = v96;
          if (v97 < 0)
          {
            BOOL v23 = v93++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_204;
        }
      case 0x20u:
        if ((v8 & 7) != 0) {
          goto LABEL_261;
        }
        unsigned int v98 = 0;
        while (1)
        {
          uint64_t v99 = *v2;
          uint64_t v100 = *(void *)&a1[v99];
          unint64_t v101 = v100 + 1;
          if (v100 == -1 || v101 > *(void *)&a1[*v3]) {
            goto LABEL_199;
          }
          int v102 = *(char *)(*(void *)&a1[*v5] + v100);
          *(void *)&a1[v99] = v101;
          if (v102 < 0)
          {
            BOOL v23 = v98++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_204;
        }
      case 0x21u:
        if (v15 != 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_261;
          }
          while (1)
          {
            uint64_t v103 = *v2;
            uint64_t v104 = *(void *)&a1[v103];
            unint64_t v105 = v104 + 1;
            if (v104 == -1 || v105 > *(void *)&a1[*v3]) {
              break;
            }
            int v106 = *(char *)(*(void *)&a1[*v5] + v104);
            *(void *)&a1[v103] = v105;
            if (v106 < 0)
            {
              unsigned int v107 = v15++;
              if (v107 <= 8) {
                continue;
              }
            }
            goto LABEL_204;
          }
LABEL_199:
          a1[*v4] = 1;
          goto LABEL_204;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_261;
        }
LABEL_249:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v129 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v130 = *v2;
            uint64_t v131 = *(void *)&a1[v130];
            unint64_t v132 = v131 + 1;
            if (v131 == -1 || v132 > *(void *)&a1[*v3]) {
              break;
            }
            int v133 = *(char *)(*(void *)&a1[*v5] + v131);
            *(void *)&a1[v130] = v132;
            if (v133 < 0)
            {
              BOOL v13 = v129++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_249;
          }
          a1[*v4] = 1;
        }
        goto LABEL_203;
      default:
        if (v17 == 100)
        {
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOABSecondPartyPlaceRequestClientMetaDataIsValid(a1)) {
            goto LABEL_261;
          }
        }
        else
        {
          if (v17 != 101)
          {
LABEL_174:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_261;
            }
            goto LABEL_204;
          }
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOABBranchInfoIsValid(a1)) {
            goto LABEL_261;
          }
        }
        goto LABEL_203;
    }
  }
}

void sub_189CCBC40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CCBEF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CCC038(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMapsIdentifierReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDMapsIdentifierReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CCC558(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMapsSuggestionsTouristInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          *(unsigned char *)(a1 + 24) |= 1u;
          uint64_t v18 = *v4;
          unint64_t v19 = *(void *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
            *(void *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v20 = 0;
          }
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_31;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_31:
    BOOL v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_189CCCD18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDShardedIdReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDShardedIdReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CCDC44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackBooleanFieldReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              uint64_t v26 = &OBJC_IVAR___GEORPFeedbackBooleanField__edited;
              goto LABEL_40;
            }
            v27 += 7;
            BOOL v25 = v28++ > 8;
            if (v25)
            {
              uint64_t v20 = 0;
              uint64_t v26 = &OBJC_IVAR___GEORPFeedbackBooleanField__edited;
              goto LABEL_42;
            }
          }
          uint64_t v26 = &OBJC_IVAR___GEORPFeedbackBooleanField__edited;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 12) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              uint64_t v26 = &OBJC_IVAR___GEORPFeedbackBooleanField__original;
              goto LABEL_39;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              uint64_t v20 = 0;
              uint64_t v26 = &OBJC_IVAR___GEORPFeedbackBooleanField__original;
              goto LABEL_42;
            }
          }
          uint64_t v26 = &OBJC_IVAR___GEORPFeedbackBooleanField__original;
        }
LABEL_40:
        if (v3[*v6]) {
          uint64_t v20 = 0;
        }
LABEL_42:
        *(unsigned char *)(a1 + *v26) = v20 != 0;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_189CCE84C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackBooleanFieldReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackBooleanFieldReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CCE8B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackBooleanFieldIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_189CCF03C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackCoordinateFieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        unsigned __int8 v14 = v10 | (v11 > 2);
        if ((v14 | v8)) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        BOOL v16 = v14;
        char v48 = (v15 == 0) | v14;
        uint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        BOOL v47 = v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_73;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_73:
      if (v16)
      {
        char v42 = 1;
        goto LABEL_85;
      }
      if (v15)
      {
        while (1)
        {
          int v43 = *v15++;
          char v44 = 8;
          switch(v43)
          {
            case 0:
              goto LABEL_86;
            case 1:
              goto LABEL_80;
            case 2:
              char v44 = 2;
              goto LABEL_80;
            case 3:
              char v44 = 1;
              goto LABEL_80;
            case 4:
              char v44 = 4;
LABEL_80:
              *(unsigned char *)(a1 + 60) |= v44;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_86;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v16;
    if ((v48 & 1) == 0)
    {
      char v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_60;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_82;
          }
          uint64_t v36 = objc_alloc_init(GEOLatLng);
          if (GEOLatLngReadAllFrom((uint64_t)v36, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v37 = 40;
            goto LABEL_59;
          }
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_82;
        }
        char v41 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_70;
      case 2:
        if (!v31) {
          goto LABEL_60;
        }
        if ((*(unsigned char *)(a1 + 60) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_82;
          }
          char v41 = *(unsigned char *)(a1 + 60) << 6;
          goto LABEL_70;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_82;
        }
        uint64_t v36 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v36, (void *)v3)) {
          goto LABEL_83;
        }
        PBReaderRecallMark();
        uint64_t v37 = 24;
        goto LABEL_59;
      case 3:
        if (!v31) {
          goto LABEL_60;
        }
        if (*(unsigned char *)(a1 + 60))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_82;
          }
          v7 -= *(unsigned char *)(a1 + 60) & 1;
          goto LABEL_71;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_82;
        }
        uint64_t v36 = objc_alloc_init(GEORPFeedbackTileFeatureInfo);
        if (!GEORPFeedbackTileFeatureInfoReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1)) {
          goto LABEL_83;
        }
        PBReaderRecallMark();
        uint64_t v37 = 16;
        goto LABEL_59;
      case 4:
        if (!v31)
        {
LABEL_60:
          char v40 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v40 & 1) == 0)
          {
LABEL_81:
            char v42 = 0;
            goto LABEL_85;
          }
LABEL_72:
          if (!v16 && v7 == 0) {
            goto LABEL_73;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_82:
            char v42 = 0;
            goto LABEL_84;
          }
          char v41 = 32 * *(unsigned char *)(a1 + 60);
LABEL_70:
          v7 += v41 >> 7;
          goto LABEL_71;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_82;
        }
        uint64_t v36 = objc_alloc_init(GEORPFeedbackTileFeatureInfo);
        if (GEORPFeedbackTileFeatureInfoReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v37 = 32;
LABEL_59:
          unsigned int v39 = *(void **)(a1 + v37);
          *(void *)(a1 + v37) = v36;

          --v7;
          BOOL v16 = v47;
LABEL_71:
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_72;
        }
LABEL_83:

        char v42 = 0;
        BOOL v16 = v47;
LABEL_84:
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
        *(unsigned char *)(a1 + 60) |= 8u;
        *(unsigned char *)(a1 + 60) |= 2u;
        *(unsigned char *)(a1 + 60) |= 1u;
        *(unsigned char *)(a1 + 60) |= 4u;
        if (v42)
        {
LABEL_86:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_87;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_87:
            uint64_t v45 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v38 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v38) {
          goto LABEL_81;
        }
        goto LABEL_72;
    }
  }
}

void sub_189CCF7E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CCF958(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CCFAC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CD00E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackCoordinateFieldCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 16) readAll:1];
  id v2 = *(void **)(a1 + 32);

  return [v2 readAll:1];
}

unint64_t GEORPFeedbackCoordinateFieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackCoordinateFieldReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackCoordinateFieldReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackCoordinateFieldReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackCoordinateFieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPFeedbackCoordinateFieldCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189CD02F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackCoordinateFieldReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackCoordinateFieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CD0354(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackCoordinateFieldIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!a1[*v4])
      {
        char v6 = 0;
        unsigned int v7 = 0;
        unint64_t v8 = 0;
        while (1)
        {
          uint64_t v9 = *v2;
          uint64_t v10 = *(void *)&a1[v9];
          unint64_t v11 = v10 + 1;
          if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
            break;
          }
          char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
          *(void *)&a1[v9] = v11;
          v8 |= (unint64_t)(v12 & 0x7F) << v6;
          if ((v12 & 0x80) == 0) {
            goto LABEL_12;
          }
          v6 += 7;
          if (v7++ >= 9)
          {
            unint64_t v8 = 0;
            int v14 = a1[*v4];
            goto LABEL_14;
          }
        }
        a1[*v4] = 1;
LABEL_12:
        int v14 = a1[*v4];
        if (a1[*v4]) {
          unint64_t v8 = 0;
        }
LABEL_14:
        int v15 = v8 & 7;
        if (v14) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = v15 == 4;
        }
        if (!v16)
        {
          switch((v8 >> 3))
          {
            case 1u:
            case 2u:
              if (v15 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1)) {
                goto LABEL_26;
              }
              goto LABEL_30;
            case 3u:
            case 4u:
              if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackTileFeatureInfoIsValid(a1)) {
                goto LABEL_30;
              }
LABEL_26:
              PBReaderRecallMark();
LABEL_28:
              if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
                break;
              }
              continue;
            default:
              if (PBReaderSkipValueWithTag()) {
                goto LABEL_28;
              }
LABEL_30:
              PBReaderRecallMark();
              return 0;
          }
        }
      }
      break;
    }
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackTileFeatureInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) != 1) {
        goto LABEL_25;
      }
      if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeatureHandleIsValid(a1))
      {
LABEL_28:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v15 != 2) {
      goto LABEL_28;
    }
LABEL_25:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_28;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189CD0918(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPFeedbackCoordinateFieldIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v2 = *(unsigned char *)(a1 + 60);
  if ((v2 & 0x1A) != 0) {
    return 1;
  }
  if (*(unsigned char *)(a1 + 60))
  {
    if (GEORPFeedbackTileFeatureInfoIsDirty(*(void *)(a1 + 16))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 60);
  }
  if ((v2 & 4) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 32);

  return GEORPFeedbackTileFeatureInfoIsDirty(v4);
}

os_unfair_lock_s *GEORPFeedbackCoordinateFieldIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEORPFeedbackCoordinateFieldIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189CD0D38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackDoubleFieldReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 24) |= 1u;
          uint64_t v21 = *v4;
          unint64_t v22 = *(void *)&v3[v21];
          if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v22 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v20 = 0;
          }
          uint64_t v23 = &OBJC_IVAR___GEORPFeedbackDoubleField__edited;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_36;
            }
            continue;
          }
          *(unsigned char *)(a1 + 24) |= 2u;
          uint64_t v18 = *v4;
          unint64_t v19 = *(void *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
            *(void *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v20 = 0;
          }
          uint64_t v23 = &OBJC_IVAR___GEORPFeedbackDoubleField__original;
        }
        *(void *)(a1 + *v23) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v24 = v3[*v6] == 0;
  }
  else
  {
LABEL_36:
    BOOL v24 = 0;
  }
  objc_sync_exit(v3);

  return v24;
}

void sub_189CD1618(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackDoubleFieldReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackDoubleFieldReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CD167C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackDoubleFieldIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v16 != 1) {
          goto LABEL_30;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v20 = v19 + 8, v20 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v18] = v20;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_30:
        BOOL v21 = 0;
        goto LABEL_29;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_29:
  PBReaderRecallMark();
  return v21;
}

void sub_189CD1E3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackDynamicFormReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFFFFFEFFFCFFFDLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 3);
        if ((v14 | v8)) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        LODWORD(v16) = v14;
        char v48 = (v15 == 0) | v14;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_70;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_70:
      if (v16)
      {
        char v42 = 1;
        goto LABEL_82;
      }
      if (v15)
      {
        while (1)
        {
          int v43 = *v15++;
          char v44 = 16;
          switch(v43)
          {
            case 0:
              goto LABEL_83;
            case 1:
              goto LABEL_78;
            case 2:
              char v44 = 8;
              goto LABEL_78;
            case 3:
              char v44 = 4;
              goto LABEL_78;
            case 4:
              char v44 = 1;
              goto LABEL_78;
            case 5:
              char v44 = 2;
LABEL_78:
              *(unsigned char *)(a1 + 68) |= v44;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_83;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v48 & 1) == 0)
    {
      char v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_59;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 48;
          goto LABEL_58;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_80;
        }
        char v41 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_67;
      case 2:
        if (!v31 || (*(unsigned char *)(a1 + 68) & 8) != 0) {
          goto LABEL_59;
        }
        int v47 = (int)v16;
        PBReaderReadString();
        int v16 = (GEORPFeedbackFormField *)objc_claimAutoreleasedReturnValue();
        if (v16) {
          -[GEORPFeedbackDynamicForm _addNoFlagsUserPaths:](a1, v16);
        }
        goto LABEL_51;
      case 3:
        if (!v31 || (*(unsigned char *)(a1 + 68) & 4) != 0) {
          goto LABEL_59;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_80;
        }
        int v47 = (int)v16;
        int v16 = objc_alloc_init(GEORPFeedbackFormField);
        if (GEORPFeedbackFormFieldReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEORPFeedbackDynamicForm _addNoFlagsFormFields:](a1, v16);
LABEL_51:

          LODWORD(v16) = v47;
LABEL_68:
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_69:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_70;
          }
          continue;
        }

        char v42 = 0;
        LOBYTE(v16) = v47;
LABEL_81:
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_82:
        *(unsigned char *)(a1 + 68) |= 0x10u;
        *(unsigned char *)(a1 + 68) |= 8u;
        *(unsigned char *)(a1 + 68) |= 4u;
        *(unsigned char *)(a1 + 68) |= 1u;
        *(unsigned char *)(a1 + 68) |= 2u;
        if (v42)
        {
LABEL_83:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_84;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_84:
            uint64_t v45 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 4:
        if (!v31) {
          goto LABEL_59;
        }
        if ((*(unsigned char *)(a1 + 68) & 1) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 16;
          goto LABEL_58;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_80;
        }
        v7 -= *(unsigned char *)(a1 + 68) & 1;
        goto LABEL_68;
      case 5:
        if (v31)
        {
          if ((*(unsigned char *)(a1 + 68) & 2) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_80:
              char v42 = 0;
              goto LABEL_81;
            }
            char v41 = *(unsigned char *)(a1 + 68) << 6;
LABEL_67:
            v7 += v41 >> 7;
          }
          else
          {
            uint64_t v36 = PBReaderReadString();
            uint64_t v37 = 24;
LABEL_58:
            unsigned int v39 = *(void **)(a1 + v37);
            *(void *)(a1 + v37) = v36;

            --v7;
          }
          goto LABEL_68;
        }
LABEL_59:
        char v40 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if ((v40 & 1) == 0)
        {
LABEL_79:
          char v42 = 0;
          goto LABEL_82;
        }
        goto LABEL_69;
      default:
        int v38 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v38) {
          goto LABEL_79;
        }
        goto LABEL_69;
    }
  }
}

void sub_189CD25A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CD2964(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CD2D24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CD2E90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CD375C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPFeedbackDynamicFormCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEORPFeedbackDynamicFormReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackDynamicFormReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORPFeedbackDynamicFormReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORPFeedbackDynamicFormReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackDynamicFormReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPFeedbackDynamicFormCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189CD39EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackDynamicFormReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackDynamicFormReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CD3A50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackDynamicFormIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_33;
          }
          goto LABEL_30;
        case 2u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_33;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackFormFieldIsValid(a1)) {
            goto LABEL_33;
          }
          PBReaderRecallMark();
          goto LABEL_31;
        case 4u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_33;
        case 5u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_33;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_33:
            PBReaderRecallMark();
            return 0;
          }
LABEL_31:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_32;
          }
          break;
      }
    }
  }
LABEL_32:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackFormFieldIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_48;
          }
          unsigned int v17 = 0;
          do
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_44;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0) {
              break;
            }
          }
          while (v17++ <= 8);
          goto LABEL_44;
        case 2u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPFeedbackFieldValueIsValid(a1)) {
            goto LABEL_35;
          }
          goto LABEL_48;
        case 3u:
          if (v15 == 2) {
            goto LABEL_43;
          }
          goto LABEL_48;
        case 4u:
          if (v15 == 2) {
            goto LABEL_43;
          }
          goto LABEL_48;
        case 5u:
          if (v15 == 2) {
            goto LABEL_43;
          }
          goto LABEL_48;
        case 6u:
          if (v15 == 2) {
            goto LABEL_43;
          }
          goto LABEL_48;
        default:
          if ((v8 >> 3) == 1000)
          {
            if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackFormFieldAnnotationsIsValid(a1))
            {
LABEL_48:
              PBReaderRecallMark();
              return 0;
            }
LABEL_35:
            PBReaderRecallMark();
          }
          else
          {
LABEL_43:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
          }
LABEL_44:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_47;
          }
          break;
      }
    }
  }
LABEL_47:
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_189CD4290(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackDynamicFormIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0x3F) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189CD48EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CD4EB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFieldAnnotationsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v46 = v17;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_63;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_25;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_63:
      if (v15)
      {
        char v41 = 1;
        goto LABEL_72;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            int v43 = *v16++;
            int v42 = v43;
            if (v43 != 1 && v42 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_73;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v15;
    if (!v46)
    {
      int v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 != 2)
    {
      if (v31 != 1)
      {
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_71;
        }
        goto LABEL_54;
      }
      if (!v32) {
        goto LABEL_53;
      }
      if (*(unsigned char *)(a1 + 44))
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_71;
        }
        v7 -= *(unsigned char *)(a1 + 44) & 1;
        goto LABEL_54;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_71;
      }
      uint64_t v37 = objc_alloc_init(GEORPFeedbackTextField);
      if (!GEORPFeedbackTextFieldReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1)) {
        goto LABEL_78;
      }
      PBReaderRecallMark();
      uint64_t v38 = 16;
      goto LABEL_50;
    }
    if (!v32)
    {
LABEL_53:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_71;
      }
      goto LABEL_54;
    }
    if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_71:
      char v41 = 0;
      goto LABEL_72;
    }
    v7 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
LABEL_54:
    if (v7) {
      char v40 = 1;
    }
    else {
      char v40 = v15;
    }
    if ((v40 & 1) == 0) {
      goto LABEL_63;
    }
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_71;
  }
  uint64_t v37 = objc_alloc_init(GEORPFeedbackTextListField);
  if (GEORPFeedbackTextListFieldReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    uint64_t v38 = 24;
LABEL_50:
    unsigned int v39 = *(void **)(a1 + v38);
    *(void *)(a1 + v38) = v37;

    --v7;
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_54;
  }
LABEL_78:

  char v41 = 0;
  uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v41)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (!v15) {
      return v3;
    }
    goto LABEL_74;
  }
  unint64_t v3 = 0;
  if (v15)
  {
LABEL_74:
    char v44 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189CD54AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CD5974(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFieldAnnotationsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackFieldAnnotationsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackFieldAnnotationsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackFieldAnnotationsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackFieldAnnotationsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 16) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189CD5B30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFieldAnnotationsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackFieldAnnotationsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CD5B94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFieldAnnotationsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackTextFieldIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackTextListFieldIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackTextFieldIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v15 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackTextListFieldIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2) {
          goto LABEL_32;
        }
LABEL_26:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_32;
        }
        goto LABEL_29;
      }
      if (v17 == 1)
      {
        if (v15 != 2) {
          goto LABEL_32;
        }
        goto LABEL_26;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_32:
        BOOL v18 = 0;
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2) {
      goto LABEL_32;
    }
    goto LABEL_26;
  }
LABEL_30:
  BOOL v18 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v18;
}

void sub_189CD62A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPFeedbackFieldAnnotationsIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v2 = *(unsigned char *)(a1 + 44);
  if ((v2 & 4) != 0) {
    return 1;
  }
  if (*(unsigned char *)(a1 + 44))
  {
    if (GEORPFeedbackTextFieldIsDirty(*(void *)(a1 + 16))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 44);
  }
  if ((v2 & 2) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 24);

  return GEORPFeedbackTextListFieldIsDirty(v4);
}

os_unfair_lock_s *GEORPFeedbackFieldAnnotationsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEORPFeedbackFieldAnnotationsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189CD65D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CD8B14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFieldOptionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  int v9 = 0;
  unsigned int v10 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFDFFFELL) & 0xFF01FF01FF01FF01));
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      int v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 | (v10 > 2);
  if ((v12 | v8)) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = a3;
  }
  LODWORD(v14) = v12;
  int v15 = (int *)MEMORY[0x1E4F940E8];
  char v56 = (v13 == 0) | v12;
  int v16 = (int *)MEMORY[0x1E4F940C8];
  unint64_t v17 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v16)) {
      goto LABEL_82;
    }
    char v18 = 0;
    unsigned int v19 = 0;
    unint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = *v15;
      uint64_t v22 = *(void *)(v3 + v21);
      unint64_t v23 = v22 + 1;
      if (v22 == -1 || v23 > *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v17) + v22);
      *(void *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0) {
        goto LABEL_24;
      }
      v18 += 7;
      BOOL v25 = v19++ >= 9;
      if (v25)
      {
        unint64_t v20 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v16) = 1;
LABEL_24:
    int v26 = *(unsigned __int8 *)(v3 + *v16);
    if (*(unsigned char *)(v3 + *v16)) {
      unint64_t v20 = 0;
    }
LABEL_26:
    if (v26 || (v20 & 7) == 4)
    {
LABEL_82:
      if (v14)
      {
        char v49 = 1;
        goto LABEL_95;
      }
      if (v13)
      {
        while (1)
        {
          int v51 = *v13++;
          int v50 = v51;
          char v52 = 8;
          switch(v51)
          {
            case 0:
              goto LABEL_96;
            case 1:
              continue;
            case 2:
              goto LABEL_90;
            case 3:
              char v52 = 4;
              goto LABEL_90;
            case 4:
              char v52 = 16;
              goto LABEL_90;
            default:
              if (v50 != 1000) {
                continue;
              }
              char v52 = 2;
LABEL_90:
              *(unsigned char *)(a1 + 64) |= v52;
              break;
          }
        }
      }
      goto LABEL_96;
    }
    unint64_t v28 = v20 >> 3;
    BOOL v29 = (char)v14;
    if ((v56 & 1) == 0)
    {
      unint64_t v30 = v13;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_67;
        }
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (1)
        {
          uint64_t v37 = *v15;
          uint64_t v38 = *(void *)(v3 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(v3 + *v6)) {
            break;
          }
          char v40 = *(unsigned char *)(*(void *)(v3 + *v17) + v38);
          *(void *)(v3 + v37) = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if ((v40 & 0x80) == 0) {
            goto LABEL_70;
          }
          v34 += 7;
          BOOL v25 = v35++ >= 9;
          if (v25)
          {
            LODWORD(v36) = 0;
            goto LABEL_72;
          }
        }
        *(unsigned char *)(v3 + *v16) = 1;
LABEL_70:
        if (*(unsigned char *)(v3 + *v16)) {
          LODWORD(v36) = 0;
        }
LABEL_72:
        *(_DWORD *)(a1 + 60) = v36;
        goto LABEL_81;
      case 2:
        if (!v29) {
          goto LABEL_67;
        }
        if ((*(unsigned char *)(a1 + 64) & 8) == 0)
        {
          uint64_t v42 = PBReaderReadString();
          uint64_t v43 = 32;
          goto LABEL_58;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_92;
        }
        char v48 = 16 * *(unsigned char *)(a1 + 64);
        goto LABEL_79;
      case 3:
        if (!v29) {
          goto LABEL_67;
        }
        if ((*(unsigned char *)(a1 + 64) & 4) == 0)
        {
          uint64_t v42 = PBReaderReadString();
          uint64_t v43 = 24;
LABEL_58:
          char v44 = *(void **)(a1 + v43);
          *(void *)(a1 + v43) = v42;

          --v7;
          goto LABEL_80;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_92:
          char v49 = 0;
          goto LABEL_94;
        }
        char v48 = 32 * *(unsigned char *)(a1 + 64);
        goto LABEL_79;
      case 4:
        if (!v29 || (*(unsigned char *)(a1 + 64) & 0x10) != 0) {
          goto LABEL_67;
        }
        int v55 = (int)v14;
        uint64_t v45 = PBReaderReadString();
        if (v45) {
          -[GEORPFeedbackFieldOption _addNoFlagsTag:](a1, v45);
        }

        goto LABEL_64;
      default:
        if (v28 != 1000)
        {
          int v46 = PBReaderSkipValueWithTag();
          int v16 = (int *)MEMORY[0x1E4F940C8];
          if (!v46) {
            goto LABEL_91;
          }
LABEL_81:
          if (!(v14 & 1 | (v7 != 0))) {
            goto LABEL_82;
          }
          continue;
        }
        if (!v29)
        {
LABEL_67:
          char v47 = PBReaderSkipValueWithTag();
          int v16 = (int *)MEMORY[0x1E4F940C8];
          if ((v47 & 1) == 0)
          {
LABEL_91:
            char v49 = 0;
            goto LABEL_95;
          }
          goto LABEL_81;
        }
        if ((*(unsigned char *)(a1 + 64) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_92;
          }
          char v48 = *(unsigned char *)(a1 + 64) << 6;
LABEL_79:
          v7 += v48 >> 7;
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_92;
        }
        int v55 = (int)v14;
        int v14 = objc_alloc_init(GEORPFeedbackFieldOptionAnnotations);
        if (GEORPFeedbackFieldOptionAnnotationsReadAllFrom((uint64_t)v14, (void *)v3))
        {
          PBReaderRecallMark();
          char v41 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v14;

          --v7;
LABEL_64:
          LODWORD(v14) = v55;
LABEL_80:
          int v16 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_81;
        }

        char v49 = 0;
        LOBYTE(v14) = v55;
LABEL_94:
        int v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
        *(unsigned char *)(a1 + 64) |= 8u;
        *(unsigned char *)(a1 + 64) |= 4u;
        *(unsigned char *)(a1 + 64) |= 0x10u;
        *(unsigned char *)(a1 + 64) |= 2u;
        if (v49)
        {
LABEL_96:
          unint64_t v3 = *(unsigned char *)(v3 + *v16) == 0;
          if (v14) {
            goto LABEL_97;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v14)
          {
LABEL_97:
            int v53 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
    }
  }
}

void sub_189CD92B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CD9424(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CD97E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CDB928(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFieldOptionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackFieldOptionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    int v9 = (int *)&GEORPFeedbackFieldOptionReadAllFrom_recursiveTag;
  }
  else {
    int v9 = (int *)&GEORPFeedbackFieldOptionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackFieldOptionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 16) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189CDBAD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFieldOptionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackFieldOptionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CDBB34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFieldOptionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_43;
          }
          unsigned int v17 = 0;
          do
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_38;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0) {
              break;
            }
          }
          while (v17++ <= 8);
          goto LABEL_38;
        case 2u:
          if (v15 == 2) {
            goto LABEL_37;
          }
          goto LABEL_43;
        case 3u:
          if (v15 == 2) {
            goto LABEL_37;
          }
          goto LABEL_43;
        case 4u:
          if (v15 == 2) {
            goto LABEL_37;
          }
          goto LABEL_43;
        default:
          if ((v8 >> 3) == 1000)
          {
            if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackFieldOptionAnnotationsIsValid(a1))
            {
LABEL_43:
              PBReaderRecallMark();
              return 0;
            }
            PBReaderRecallMark();
          }
          else
          {
LABEL_37:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_43;
            }
          }
LABEL_38:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_41;
          }
          break;
      }
    }
  }
LABEL_41:
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORPFeedbackFieldOptionAnnotationsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

void sub_189CDC204(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFieldOptionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 64) & 0x3E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189CDC68C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFieldOptionAnnotationsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    BOOL v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_189CDCEB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFieldOptionAnnotationsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackFieldOptionAnnotationsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CDCF14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CDD6C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFieldValueReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 192));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 188);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 184)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = *(_DWORD *)(a1 + 200);
  uint32x4_t v12 = (uint32x4_t)vdupq_n_s32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A63B7B0), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A63B7C0), v13)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A63B790), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A63B7A0), v13))), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A63B7D0), v13)))+ ((v11 >> 2) & 1);
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        unsigned __int8 v17 = v10 | (v14 > 0xF);
        if ((v17 | v8)) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = a3;
        }
        BOOL v19 = v17;
        BOOL v20 = (int *)MEMORY[0x1E4F940E8];
        char v60 = (v18 == 0) | v17;
        int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        BOOL v59 = v17;
        break;
      default:
        ++v14;
LABEL_6:
        uint64_t v15 = v9;
        uint64_t v16 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_205;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_23;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_23:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_25:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_205:
      if (v19)
      {
        char v53 = 1;
        goto LABEL_235;
      }
      if (v18)
      {
        while (1)
        {
          int v55 = *v18++;
          int v54 = v55;
          int v56 = 0x4000;
          switch(v55)
          {
            case 0:
              goto LABEL_236;
            case 1:
            case 9:
              continue;
            case 2:
              goto LABEL_230;
            case 3:
              int v56 = 2048;
              goto LABEL_230;
            case 4:
              int v56 = 0x8000;
              goto LABEL_230;
            case 5:
              int v56 = 0x10000;
              goto LABEL_230;
            case 6:
              int v56 = 16;
              goto LABEL_230;
            case 7:
              int v56 = 512;
              goto LABEL_230;
            case 8:
              int v56 = 8;
              goto LABEL_230;
            case 10:
              int v56 = 1024;
              goto LABEL_230;
            case 11:
              int v56 = 0x100000;
              goto LABEL_230;
            case 12:
              int v56 = 256;
              goto LABEL_230;
            case 13:
              int v56 = 0x80000;
              goto LABEL_230;
            case 14:
              int v56 = 32;
              goto LABEL_230;
            case 15:
              int v56 = 64;
              goto LABEL_230;
            case 16:
              int v56 = 128;
              goto LABEL_230;
            case 17:
              int v56 = 0x20000;
              goto LABEL_230;
            case 18:
              int v56 = 2;
              goto LABEL_230;
            case 19:
              int v56 = 0x200000;
              goto LABEL_230;
            case 20:
              int v56 = 0x2000;
              goto LABEL_230;
            case 21:
              int v56 = 0x40000;
              goto LABEL_230;
            case 22:
              int v56 = 4096;
              goto LABEL_230;
            default:
              if (v54 != 1000) {
                continue;
              }
              int v56 = 4;
LABEL_230:
              *(_DWORD *)(a1 + 200) |= v56;
              break;
          }
        }
      }
      goto LABEL_236;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v19;
    if ((v60 & 1) == 0)
    {
      unsigned int v35 = v18;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_158;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(_DWORD *)(a1 + 200) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_161;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_163;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_161:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_163:
        *(_DWORD *)(a1 + 196) = v41;
        goto LABEL_204;
      case 2:
        if (!v34) {
          goto LABEL_158;
        }
        if ((*(unsigned char *)(a1 + 201) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          int v52 = (int)(*(_DWORD *)(a1 + 200) << 17) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackSingleSelectField);
        if (!GEORPFeedbackSingleSelectFieldReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        uint64_t v47 = 120;
        goto LABEL_148;
      case 3:
        if (!v34) {
          goto LABEL_158;
        }
        if ((*(unsigned char *)(a1 + 201) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          int v52 = (int)(*(_DWORD *)(a1 + 200) << 20) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackMultiSelectField);
        if (!GEORPFeedbackMultiSelectFieldReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        uint64_t v47 = 96;
        goto LABEL_148;
      case 4:
        if (!v34) {
          goto LABEL_158;
        }
        if ((*(unsigned char *)(a1 + 201) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          int v52 = (int)(*(_DWORD *)(a1 + 200) << 16) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackTextField);
        if (!GEORPFeedbackTextFieldReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        uint64_t v47 = 128;
        goto LABEL_148;
      case 5:
        if (!v34) {
          goto LABEL_158;
        }
        if (*(unsigned char *)(a1 + 202))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          int v52 = (int)(*(_DWORD *)(a1 + 200) << 15) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackTextListField);
        if (!GEORPFeedbackTextListFieldReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        uint64_t v47 = 136;
        goto LABEL_148;
      case 6:
        if (!v34) {
          goto LABEL_158;
        }
        if ((*(unsigned char *)(a1 + 200) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          int v52 = (int)(*(_DWORD *)(a1 + 200) << 27) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackTimestamp);
        if (!GEORPFeedbackTimestampReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        uint64_t v47 = 40;
        goto LABEL_148;
      case 7:
        if (!v34) {
          goto LABEL_158;
        }
        if ((*(unsigned char *)(a1 + 201) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          int v52 = (int)(*(_DWORD *)(a1 + 200) << 22) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackCoordinateField);
        if (!GEORPFeedbackCoordinateFieldReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        uint64_t v47 = 80;
        goto LABEL_148;
      case 8:
        if (!v34) {
          goto LABEL_158;
        }
        if ((*(unsigned char *)(a1 + 200) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          int v52 = (int)(*(_DWORD *)(a1 + 200) << 28) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackBooleanField);
        if (!GEORPFeedbackBooleanFieldReadAllFrom((uint64_t)v46, (void *)v3)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        uint64_t v47 = 32;
        goto LABEL_148;
      case 9:
        goto LABEL_51;
      case 10:
        if (!v34) {
          goto LABEL_158;
        }
        if ((*(unsigned char *)(a1 + 201) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          int v52 = (int)(*(_DWORD *)(a1 + 200) << 21) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackLongField);
        if (!GEORPFeedbackLongFieldReadAllFrom((uint64_t)v46, (void *)v3)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        uint64_t v47 = 88;
        goto LABEL_148;
      case 11:
        if (!v34) {
          goto LABEL_158;
        }
        if ((*(unsigned char *)(a1 + 202) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          int v52 = (int)(*(_DWORD *)(a1 + 200) << 11) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackULongField);
        if (!GEORPFeedbackULongFieldReadAllFrom((uint64_t)v46, (void *)v3)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        uint64_t v47 = 168;
        goto LABEL_148;
      case 12:
        if (!v34) {
          goto LABEL_158;
        }
        if (*(unsigned char *)(a1 + 201))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          int v52 = (int)(*(_DWORD *)(a1 + 200) << 23) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackIntField);
        if (!GEORPFeedbackIntFieldReadAllFrom((uint64_t)v46, (void *)v3)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        uint64_t v47 = 72;
        goto LABEL_148;
      case 13:
        if (!v34) {
          goto LABEL_158;
        }
        if ((*(unsigned char *)(a1 + 202) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          int v52 = (int)(*(_DWORD *)(a1 + 200) << 12) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackUIntField);
        if (!GEORPFeedbackUIntFieldReadAllFrom((uint64_t)v46, (void *)v3)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        uint64_t v47 = 160;
        goto LABEL_148;
      case 14:
        if (!v34) {
          goto LABEL_158;
        }
        if ((*(unsigned char *)(a1 + 200) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          int v52 = (int)(*(_DWORD *)(a1 + 200) << 26) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackDoubleField);
        if (!GEORPFeedbackDoubleFieldReadAllFrom((uint64_t)v46, (void *)v3)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        uint64_t v47 = 48;
        goto LABEL_148;
      case 15:
        if (!v34) {
          goto LABEL_158;
        }
        if ((*(unsigned char *)(a1 + 200) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          int v52 = (int)(*(_DWORD *)(a1 + 200) << 25) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackFloatField);
        if (!GEORPFeedbackFloatFieldReadAllFrom((uint64_t)v46, (void *)v3)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        uint64_t v47 = 56;
        goto LABEL_148;
      case 16:
        if (!v34 || (*(unsigned char *)(a1 + 200) & 0x80) != 0) {
          goto LABEL_156;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackBusinessHours);
        if (!GEORPFeedbackBusinessHoursReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        -[GEORPFeedbackFieldValue _addNoFlagsHoursField:](a1, v46);
        goto LABEL_155;
      case 17:
        if (!v34) {
          goto LABEL_158;
        }
        if ((*(unsigned char *)(a1 + 202) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          int v52 = (int)(*(_DWORD *)(a1 + 200) << 14) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackTileFeatureInfo);
        if (!GEORPFeedbackTileFeatureInfoReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        uint64_t v47 = 144;
        goto LABEL_148;
      case 18:
        if (!v34) {
          goto LABEL_158;
        }
        if ((*(unsigned char *)(a1 + 200) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          int v52 = (int)(*(_DWORD *)(a1 + 200) << 30) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPAmenityCorrections);
        if (!GEORPAmenityCorrectionsReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        uint64_t v47 = 16;
        goto LABEL_148;
      case 19:
        if (!v34) {
          goto LABEL_158;
        }
        if ((*(unsigned char *)(a1 + 202) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          int v52 = (int)(*(_DWORD *)(a1 + 200) << 10) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackULongListField);
        if (!GEORPFeedbackULongListFieldReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        uint64_t v47 = 176;
        goto LABEL_148;
      case 20:
        if (!v34) {
          goto LABEL_158;
        }
        if ((*(unsigned char *)(a1 + 201) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          int v52 = (int)(*(_DWORD *)(a1 + 200) << 18) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackRouteStep);
        if (!GEORPFeedbackRouteStepReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        uint64_t v47 = 112;
        goto LABEL_148;
      case 21:
        if (!v34) {
          goto LABEL_158;
        }
        if ((*(unsigned char *)(a1 + 202) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          int v52 = (int)(*(_DWORD *)(a1 + 200) << 13) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackTransitLine);
        if (!GEORPFeedbackTransitLineReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_233;
        }
        PBReaderRecallMark();
        uint64_t v47 = 152;
        goto LABEL_148;
      case 22:
        if (!v34 || (*(unsigned char *)(a1 + 201) & 0x10) != 0)
        {
LABEL_156:
          char v50 = PBReaderSkipValueWithTag();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v50 & 1) == 0) {
            goto LABEL_231;
          }
          goto LABEL_204;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        int v46 = objc_alloc_init(GEORPFeedbackPhotoMetadata);
        if (GEORPFeedbackPhotoMetadataReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEORPFeedbackFieldValue _addNoFlagsPhotoMetadata:](a1, v46);
LABEL_155:

LABEL_149:
          BOOL v19 = v59;
LABEL_203:
          int v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
LABEL_204:
          if (!v19 && v7 == 0) {
            goto LABEL_205;
          }
          continue;
        }
LABEL_233:

        char v53 = 0;
        BOOL v19 = v59;
LABEL_234:
        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_235:
        *(_DWORD *)(a1 + 200) |= 0x4000u;
        *(_DWORD *)(a1 + 200) |= 0x800u;
        *(_DWORD *)(a1 + 200) |= 0x8000u;
        *(_DWORD *)(a1 + 200) |= 0x10000u;
        *(_DWORD *)(a1 + 200) |= 0x10u;
        *(_DWORD *)(a1 + 200) |= 0x200u;
        *(_DWORD *)(a1 + 200) |= 8u;
        *(_DWORD *)(a1 + 200) |= 0x400u;
        *(_DWORD *)(a1 + 200) |= 0x100000u;
        *(_DWORD *)(a1 + 200) |= 0x100u;
        *(_DWORD *)(a1 + 200) |= 0x80000u;
        *(_DWORD *)(a1 + 200) |= 0x20u;
        *(_DWORD *)(a1 + 200) |= 0x40u;
        *(_DWORD *)(a1 + 200) |= 0x80u;
        *(_DWORD *)(a1 + 200) |= 0x20000u;
        *(_DWORD *)(a1 + 200) |= 2u;
        *(_DWORD *)(a1 + 200) |= 0x200000u;
        *(_DWORD *)(a1 + 200) |= 0x2000u;
        *(_DWORD *)(a1 + 200) |= 0x40000u;
        *(_DWORD *)(a1 + 200) |= 0x1000u;
        *(_DWORD *)(a1 + 200) |= 4u;
        if (v53)
        {
LABEL_236:
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if (v19) {
            goto LABEL_237;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v19)
          {
LABEL_237:
            int v57 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        if (v33 != 1000)
        {
LABEL_51:
          int v48 = PBReaderSkipValueWithTag();
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v48) {
            goto LABEL_231;
          }
          goto LABEL_204;
        }
        if (!v34)
        {
LABEL_158:
          char v51 = PBReaderSkipValueWithTag();
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v51 & 1) == 0)
          {
LABEL_231:
            char v53 = 0;
            goto LABEL_235;
          }
          goto LABEL_204;
        }
        if ((*(unsigned char *)(a1 + 200) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_232;
          }
          int v46 = objc_alloc_init(GEORPFeedbackFieldAnnotations);
          if (!GEORPFeedbackFieldAnnotationsReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
            goto LABEL_233;
          }
          PBReaderRecallMark();
          uint64_t v47 = 24;
LABEL_148:
          char v49 = *(void **)(a1 + v47);
          *(void *)(a1 + v47) = v46;

          --v7;
          goto LABEL_149;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_232:
          char v53 = 0;
          goto LABEL_234;
        }
        int v52 = (int)(*(_DWORD *)(a1 + 200) << 29) >> 31;
LABEL_202:
        v7 += v52;
        goto LABEL_203;
    }
  }
}

void sub_189CDEAF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CDEC70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CDEDE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CDEF58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CDF0D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CDF244(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CDF3BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CDF534(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CDF6A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CDF820(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CDF990(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CDFB04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CDFC70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CE0038(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CE01A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CE0320(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CE0490(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CE0608(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CE077C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CE0B40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CE2714(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackFieldValueCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  [a1[15] readAll:1];
  [a1[12] readAll:1];
  [a1[16] readAll:1];
  [a1[17] readAll:1];
  [a1[5] readAll:1];
  [a1[10] readAll:1];
  [a1[4] readAll:1];
  [a1[11] readAll:1];
  [a1[21] readAll:1];
  [a1[9] readAll:1];
  [a1[20] readAll:1];
  [a1[6] readAll:1];
  [a1[7] readAll:1];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = a1[8];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v4);
  }

  [a1[18] readAll:1];
  [a1[2] readAll:1];
  [a1[22] readAll:1];
  [a1[14] readAll:1];
  [a1[19] readAll:1];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = a1[13];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * v11++), "readAll:", 1, (void)v13);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v9);
  }

  return [a1[3] readAll:1];
}

unint64_t GEORPFeedbackFieldValueReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 188))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackFieldValueReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 192));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 184) = [v8 position];
  *(_DWORD *)(a1 + 188) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackFieldValueReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackFieldValueReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackFieldValueReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPFeedbackFieldValueCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 192));
  return Specified;
}

void sub_189CE2B80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFieldValueReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackFieldValueReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CE2BE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFieldValueIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_118;
          }
          unsigned int v17 = 0;
          do
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_114;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0) {
              break;
            }
          }
          while (v17++ <= 8);
          goto LABEL_114;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackSingleSelectFieldIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackMultiSelectFieldIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackTextFieldIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackTextListFieldIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackTimestampIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackCoordinateFieldIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackBooleanFieldIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 9u:
          goto LABEL_32;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackLongFieldIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackULongFieldIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackIntFieldIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackUIntFieldIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackDoubleFieldIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackFloatFieldIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackBusinessHoursIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 0x11u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackTileFeatureInfoIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 0x12u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAmenityCorrectionsIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 0x13u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackULongListFieldIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 0x14u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackRouteStepIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 0x15u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackTransitLineIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_113;
        case 0x16u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPFeedbackPhotoMetadataIsValid(a1)) {
            goto LABEL_113;
          }
          goto LABEL_118;
        default:
          if ((v8 >> 3) == 1000)
          {
            if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackFieldAnnotationsIsValid(a1))
            {
LABEL_118:
              PBReaderRecallMark();
              return 0;
            }
LABEL_113:
            PBReaderRecallMark();
          }
          else
          {
LABEL_32:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_118;
            }
          }
LABEL_114:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_117;
          }
          break;
      }
    }
  }
LABEL_117:
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORPFeedbackSingleSelectFieldIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackFieldOptionIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackMultiSelectFieldIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackFieldOptionIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackTimestampIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPTimestampIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackLongFieldIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEORPFeedbackULongFieldIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEORPFeedbackIntFieldIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEORPFeedbackUIntFieldIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEORPFeedbackFloatFieldIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v16 != 5) {
          goto LABEL_30;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v20 = v19 + 4, v20 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v18] = v20;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_30:
        BOOL v21 = 0;
        goto LABEL_29;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_29:
  PBReaderRecallMark();
  return v21;
}

BOOL GEORPFeedbackULongListFieldIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_77;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_77;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_79;
          }
LABEL_56:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v38 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v39 = *v2;
              uint64_t v40 = *(void *)&a1[v39];
              unint64_t v41 = v40 + 1;
              if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
                break;
              }
              int v42 = *(char *)(*(void *)&a1[*v5] + v40);
              *(void *)&a1[v39] = v41;
              if (v42 < 0)
              {
                BOOL v13 = v38++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_56;
            }
            a1[*v4] = 1;
          }
          goto LABEL_75;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_79;
        }
        while (1)
        {
          uint64_t v23 = *v2;
          uint64_t v24 = *(void *)&a1[v23];
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
            goto LABEL_44;
          }
          int v26 = *(char *)(*(void *)&a1[*v5] + v24);
          *(void *)&a1[v23] = v25;
          if (v26 < 0)
          {
            unsigned int v27 = v15++;
            if (v27 <= 8) {
              continue;
            }
          }
          goto LABEL_76;
        }
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_79;
          }
LABEL_46:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v33 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v34 = *v2;
              uint64_t v35 = *(void *)&a1[v34];
              unint64_t v36 = v35 + 1;
              if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
                break;
              }
              int v37 = *(char *)(*(void *)&a1[*v5] + v35);
              *(void *)&a1[v34] = v36;
              if (v37 < 0)
              {
                BOOL v13 = v33++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_46;
            }
            a1[*v4] = 1;
          }
LABEL_75:
          PBReaderRecallMark();
          goto LABEL_76;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_79;
        }
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            goto LABEL_44;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            unsigned int v22 = v15++;
            if (v22 <= 8) {
              continue;
            }
          }
          goto LABEL_76;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_79;
      }
LABEL_76:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_77;
      }
    }
    if (v15 == 2)
    {
      if (!PBReaderPlaceMark())
      {
LABEL_79:
        PBReaderRecallMark();
        return 0;
      }
LABEL_66:
      while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
      {
        unsigned int v43 = a1[*v4];
        if (a1[*v4]) {
          break;
        }
        while (1)
        {
          uint64_t v44 = *v2;
          uint64_t v45 = *(void *)&a1[v44];
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
            break;
          }
          int v47 = *(char *)(*(void *)&a1[*v5] + v45);
          *(void *)&a1[v44] = v46;
          if (v47 < 0)
          {
            BOOL v13 = v43++ >= 9;
            if (!v13) {
              continue;
            }
          }
          goto LABEL_66;
        }
        a1[*v4] = 1;
      }
      goto LABEL_75;
    }
    if ((v8 & 7) != 0) {
      goto LABEL_79;
    }
    while (1)
    {
      uint64_t v28 = *v2;
      uint64_t v29 = *(void *)&a1[v28];
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
        break;
      }
      int v31 = *(char *)(*(void *)&a1[*v5] + v29);
      *(void *)&a1[v28] = v30;
      if (v31 < 0)
      {
        unsigned int v32 = v15++;
        if (v32 <= 8) {
          continue;
        }
      }
      goto LABEL_76;
    }
LABEL_44:
    a1[*v4] = 1;
    goto LABEL_76;
  }
LABEL_77:
  BOOL v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

BOOL GEORPFeedbackRouteStepIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_51;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_43;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_48;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_51;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_43;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_48;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_51;
          }
          unsigned int v28 = 0;
          break;
        case 4u:
          if (v15 == 2) {
            goto LABEL_47;
          }
          goto LABEL_51;
        case 5u:
          if (v15 == 2) {
            goto LABEL_47;
          }
          goto LABEL_51;
        default:
LABEL_47:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_51:
          BOOL v33 = 0;
          goto LABEL_50;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_48;
      }
LABEL_43:
      a1[*v4] = 1;
LABEL_48:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
LABEL_50:
  PBReaderRecallMark();
  return v33;
}

BOOL GEORPFeedbackTransitLineIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2) {
          goto LABEL_32;
        }
LABEL_26:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_32;
        }
        goto LABEL_29;
      }
      if (v17 == 1)
      {
        if (v15 != 2) {
          goto LABEL_32;
        }
        goto LABEL_26;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_32:
        BOOL v18 = 0;
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2) {
      goto LABEL_32;
    }
    goto LABEL_26;
  }
LABEL_30:
  BOOL v18 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v18;
}

BOOL GEORPFeedbackPhotoMetadataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v15 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

void sub_189CE51C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackFieldValueIsDirty(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 192));
  int v2 = *(_DWORD *)(a1 + 200);
  if ((v2 & 0x400000) != 0) {
    return 1;
  }
  if ((v2 & 0x4000) != 0)
  {
    if (GEORPFeedbackSingleSelectFieldIsDirty(*(os_unfair_lock_s **)(a1 + 120))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 200);
  }
  if ((v2 & 0x800) != 0)
  {
    if (GEORPFeedbackMultiSelectFieldIsDirty(*(os_unfair_lock_s **)(a1 + 96))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 200);
  }
  if ((v2 & 0x8000) != 0)
  {
    if (GEORPFeedbackTextFieldIsDirty(*(void *)(a1 + 128))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 200);
  }
  if ((v2 & 0x10000) != 0)
  {
    if (GEORPFeedbackTextListFieldIsDirty(*(void *)(a1 + 136))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 200);
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEORPFeedbackTimestampIsDirty(*(void *)(a1 + 40))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 200);
  }
  if ((v2 & 0x200) == 0) {
    goto LABEL_20;
  }
  if ((GEORPFeedbackCoordinateFieldIsDirty(*(os_unfair_lock_s **)(a1 + 80)) & 1) == 0)
  {
    int v2 = *(_DWORD *)(a1 + 200);
LABEL_20:
    if ((v2 & 0x1805E8) != 0) {
      return 1;
    }
    if ((v2 & 0x20000) != 0)
    {
      if (GEORPFeedbackTileFeatureInfoIsDirty(*(void *)(a1 + 144))) {
        return 1;
      }
      int v2 = *(_DWORD *)(a1 + 200);
    }
    if ((v2 & 2) != 0)
    {
      if (GEORPAmenityCorrectionsIsDirty(*(void *)(a1 + 16))) {
        return 1;
      }
      int v2 = *(_DWORD *)(a1 + 200);
    }
    if ((v2 & 0x200000) != 0)
    {
      if (GEORPFeedbackULongListFieldIsDirty(*(void *)(a1 + 176))) {
        return 1;
      }
      int v2 = *(_DWORD *)(a1 + 200);
    }
    if ((v2 & 0x2000) != 0)
    {
      if (GEORPFeedbackRouteStepIsDirty(*(void *)(a1 + 112))) {
        return 1;
      }
      int v2 = *(_DWORD *)(a1 + 200);
    }
    if ((v2 & 0x40000) != 0)
    {
      if (GEORPFeedbackTransitLineIsDirty(*(void *)(a1 + 152))) {
        return 1;
      }
      int v2 = *(_DWORD *)(a1 + 200);
    }
    if ((v2 & 0x1000) != 0) {
      return 1;
    }
    if ((v2 & 4) != 0)
    {
      if (GEORPFeedbackFieldAnnotationsIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
        return 1;
      }
      int v2 = *(_DWORD *)(a1 + 200);
    }
    if ((v2 & 0x80) != 0)
    {
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      id v5 = *(id *)(a1 + 64);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v17;
LABEL_45:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v17 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEORPFeedbackBusinessHoursIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1) + 8 * v9))) {
            goto LABEL_63;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
            if (v7) {
              goto LABEL_45;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 200);
    }
    if ((v2 & 0x1000) == 0) {
      return 0;
    }
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v5 = *(id *)(a1 + 104);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
    if (!v3)
    {
LABEL_64:

      return v3;
    }
    uint64_t v10 = *(void *)v13;
LABEL_56:
    uint64_t v11 = 0;
    while (1)
    {
      if (*(void *)v13 != v10) {
        objc_enumerationMutation(v5);
      }
      if (GEORPFeedbackPhotoMetadataIsDirty(*(void *)(*((void *)&v12 + 1) + 8 * v11))) {
        break;
      }
      if (v3 == ++v11)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
        if (v3) {
          goto LABEL_56;
        }
        goto LABEL_64;
      }
    }
LABEL_63:
    uint64_t v3 = 1;
    goto LABEL_64;
  }
  return 1;
}

os_unfair_lock_s *GEORPFeedbackFieldValueIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPFeedbackFieldValueIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 48);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189CE5E90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFloatFieldReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 16) |= 1u;
          uint64_t v21 = *v4;
          unint64_t v22 = *(void *)&v3[v21];
          if (v22 <= 0xFFFFFFFFFFFFFFFBLL && v22 + 4 <= *(void *)&v3[*v5])
          {
            int v20 = *(_DWORD *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v22 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v20 = 0;
          }
          unsigned int v23 = &OBJC_IVAR___GEORPFeedbackFloatField__edited;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_36;
            }
            continue;
          }
          *(unsigned char *)(a1 + 16) |= 2u;
          uint64_t v18 = *v4;
          unint64_t v19 = *(void *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(void *)&v3[*v5])
          {
            int v20 = *(_DWORD *)(*(void *)&v3[*v7] + v19);
            *(void *)&v3[v18] = v19 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v20 = 0;
          }
          unsigned int v23 = &OBJC_IVAR___GEORPFeedbackFloatField__original;
        }
        *(_DWORD *)(a1 + *v23) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v24 = v3[*v6] == 0;
  }
  else
  {
LABEL_36:
    BOOL v24 = 0;
  }
  objc_sync_exit(v3);

  return v24;
}

void sub_189CE7044(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFloatFieldReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackFloatFieldReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CE70A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CE82D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFormFieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFEFFFAFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 80) & 0x20) != 0)+ ((*(unsigned char *)(a1 + 80) & 2) != 0));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        char v60 = (v16 == 0) | v15;
        long long v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v59 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_94;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_94:
      if (v15)
      {
        char v51 = 1;
        goto LABEL_109;
      }
      if (v16)
      {
        while (1)
        {
          int v54 = *v16++;
          int v53 = v54;
          char v52 = 64;
          switch(v54)
          {
            case 0:
              goto LABEL_110;
            case 1:
              continue;
            case 2:
              goto LABEL_104;
            case 3:
              char v52 = 8;
              goto LABEL_104;
            case 4:
              char v52 = 4;
              goto LABEL_104;
            case 5:
              char v52 = 16;
              goto LABEL_104;
            case 6:
              char v52 = 32;
              goto LABEL_104;
            default:
              if (v53 != 1000) {
                continue;
              }
              char v52 = 2;
LABEL_104:
              *(unsigned char *)(a1 + 80) |= v52;
              break;
          }
        }
      }
      goto LABEL_110;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v60 & 1) == 0)
    {
      int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_75;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 80) |= 1u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_78;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_80;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_78:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_80:
        *(_DWORD *)(a1 + 76) = v38;
        goto LABEL_93;
      case 2:
        if (!v31) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_108;
          }
          char v50 = 2 * *(unsigned char *)(a1 + 80);
LABEL_91:
          v7 += v50 >> 7;
          goto LABEL_92;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_108;
        }
        int v57 = objc_alloc_init(GEORPFeedbackFieldValue);
        if (GEORPFeedbackFieldValueReadAllFrom((uint64_t)v57, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v43 = 56;
LABEL_56:
          uint64_t v44 = *(void **)(a1 + v43);
          *(void *)(a1 + v43) = v57;
LABEL_67:

          --v7;
LABEL_92:
          char v15 = v59;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_93:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_94;
          }
          continue;
        }
LABEL_107:

LABEL_108:
        char v51 = 0;
        char v15 = v59;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_109:
        *(unsigned char *)(a1 + 80) |= 0x40u;
        *(unsigned char *)(a1 + 80) |= 8u;
        *(unsigned char *)(a1 + 80) |= 4u;
        *(unsigned char *)(a1 + 80) |= 0x10u;
        *(unsigned char *)(a1 + 80) |= 0x20u;
        *(unsigned char *)(a1 + 80) |= 2u;
        if (v51)
        {
LABEL_110:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_111;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_111:
            int v55 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 3:
        if (!v31) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 80) & 8) == 0)
        {
          uint64_t v45 = PBReaderReadString();
          uint64_t v46 = 32;
          goto LABEL_66;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_108;
        }
        char v50 = 16 * *(unsigned char *)(a1 + 80);
        goto LABEL_91;
      case 4:
        if (!v31) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 80) & 4) == 0)
        {
          uint64_t v45 = PBReaderReadString();
          uint64_t v46 = 24;
          goto LABEL_66;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_108;
        }
        char v50 = 32 * *(unsigned char *)(a1 + 80);
        goto LABEL_91;
      case 5:
        if (!v31) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x10) == 0)
        {
          uint64_t v45 = PBReaderReadString();
          uint64_t v46 = 40;
LABEL_66:
          uint64_t v44 = *(void **)(a1 + v46);
          *(void *)(a1 + v46) = v45;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_108;
        }
        char v50 = 8 * *(unsigned char *)(a1 + 80);
        goto LABEL_91;
      case 6:
        if (!v31 || (*(unsigned char *)(a1 + 80) & 0x20) != 0) {
          goto LABEL_75;
        }
        int v47 = PBReaderReadString();
        if (v47)
        {
          unsigned int v58 = v47;
          -[GEORPFeedbackFormField _addNoFlagsTag:](a1, v47);
          int v47 = v58;
        }

        goto LABEL_92;
      default:
        if (v30 != 1000)
        {
          int v48 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v59;
          if (!v48) {
            goto LABEL_106;
          }
          goto LABEL_93;
        }
        if (!v31)
        {
LABEL_75:
          char v49 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v59;
          if ((v49 & 1) == 0)
          {
LABEL_106:
            char v51 = 0;
            goto LABEL_109;
          }
          goto LABEL_93;
        }
        if ((*(unsigned char *)(a1 + 80) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_108;
          }
          char v50 = *(unsigned char *)(a1 + 80) << 6;
          goto LABEL_91;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_108;
        }
        int v57 = objc_alloc_init(GEORPFeedbackFormFieldAnnotations);
        if (!GEORPFeedbackFormFieldAnnotationsReadAllFrom((uint64_t)v57, (void *)v3)) {
          goto LABEL_107;
        }
        PBReaderRecallMark();
        uint64_t v43 = 16;
        goto LABEL_56;
    }
  }
}

void sub_189CE8BD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CE8D44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CE8EB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CE9024(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CE93E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CEA56C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFormFieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackFormFieldReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackFormFieldReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackFormFieldReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackFormFieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 56) readAll:1];
    [*(id *)(a1 + 16) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189CEA728(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFormFieldReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackFormFieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CEA78C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFormFieldAnnotationsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

void sub_189CEABE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackFormFieldIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  if (*(char *)(a1 + 80) < 0) {
    return 1;
  }
  unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
  if ((v2 & 0x40) != 0)
  {
    if (GEORPFeedbackFieldValueIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
  }
  if ((v2 & 0x3C) != 0) {
    return 1;
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEORPFeedbackFormFieldIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPFeedbackFormFieldIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189CEB190(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFormFieldAnnotationsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          unint64_t v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    BOOL v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_189CEB924(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFormFieldAnnotationsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackFormFieldAnnotationsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CEB988(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackIntFieldReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 1u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              char v26 = &OBJC_IVAR___GEORPFeedbackIntField__edited;
              goto LABEL_40;
            }
            v27 += 7;
            BOOL v25 = v28++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              char v26 = &OBJC_IVAR___GEORPFeedbackIntField__edited;
              goto LABEL_42;
            }
          }
          char v26 = &OBJC_IVAR___GEORPFeedbackIntField__edited;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              char v26 = &OBJC_IVAR___GEORPFeedbackIntField__original;
              goto LABEL_39;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              char v26 = &OBJC_IVAR___GEORPFeedbackIntField__original;
              goto LABEL_42;
            }
          }
          char v26 = &OBJC_IVAR___GEORPFeedbackIntField__original;
        }
LABEL_40:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_42:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_189CEC250(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackIntFieldReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackIntFieldReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CEC2B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLongFieldReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              char v26 = &OBJC_IVAR___GEORPFeedbackLongField__edited;
              goto LABEL_40;
            }
            v27 += 7;
            BOOL v25 = v28++ > 8;
            if (v25)
            {
              uint64_t v20 = 0;
              char v26 = &OBJC_IVAR___GEORPFeedbackLongField__edited;
              goto LABEL_42;
            }
          }
          char v26 = &OBJC_IVAR___GEORPFeedbackLongField__edited;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              char v26 = &OBJC_IVAR___GEORPFeedbackLongField__original;
              goto LABEL_39;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              uint64_t v20 = 0;
              char v26 = &OBJC_IVAR___GEORPFeedbackLongField__original;
              goto LABEL_42;
            }
          }
          char v26 = &OBJC_IVAR___GEORPFeedbackLongField__original;
        }
LABEL_40:
        if (v3[*v6]) {
          uint64_t v20 = 0;
        }
LABEL_42:
        *(void *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_189CECCCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLongFieldReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackLongFieldReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CECD30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CED274(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackMultiSelectFieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v7 != 0;
        char v16 = (v14 != 0) | v8;
        if (v14) {
          BOOL v15 = 1;
        }
        BOOL v47 = v15;
        if (v16) {
          BOOL v17 = 0;
        }
        else {
          BOOL v17 = a3;
        }
        uint64_t v18 = v14 != 0;
        BOOL v19 = v17 == 0;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        if (v14) {
          BOOL v19 = 1;
        }
        BOOL v48 = v19;
        uint64_t v22 = &OBJC_IVAR___GEONonTiledAssets__flags;
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_57;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_27;
      }
      v24 += 7;
      if (v25++ >= 9)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_27:
    int v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v26 = 0;
    }
LABEL_29:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_57:
      if (v18)
      {
        char v42 = 1;
        goto LABEL_66;
      }
      if (v17)
      {
        do
        {
          while (1)
          {
            int v44 = *v17++;
            int v43 = v44;
            if (v44 != 1 && v43 != 2) {
              break;
            }
            *(unsigned char *)(a1 + v22[900]) |= v43;
          }
        }
        while (v43);
      }
      goto LABEL_67;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v18;
    if (!v48)
    {
      char v36 = v17;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    if (v34 == 2) {
      break;
    }
    if (v34 != 1)
    {
      if (!PBReaderSkipValueWithTag()) {
        goto LABEL_65;
      }
      goto LABEL_56;
    }
    if (v35 && (*(unsigned char *)(a1 + v22[900]) & 1) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_65;
      }
      uint64_t v40 = v21;
      unint64_t v41 = (GEORPFeedbackFieldOption *)v18;
      uint64_t v18 = objc_alloc_init(GEORPFeedbackFieldOption);
      if (!GEORPFeedbackFieldOptionReadAllFrom(v18, (void *)v3, v9 & 1)) {
        goto LABEL_72;
      }
      PBReaderRecallMark();
      -[GEORPFeedbackMultiSelectField _addNoFlagsOptions:](a1, (void *)v18);
      goto LABEL_52;
    }
LABEL_55:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_65:
      char v42 = 0;
      goto LABEL_66;
    }
LABEL_56:
    if (!v47) {
      goto LABEL_57;
    }
  }
  if (!v35 || (*(unsigned char *)(a1 + v22[900]) & 2) != 0) {
    goto LABEL_55;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_65;
  }
  uint64_t v40 = v21;
  unint64_t v41 = (GEORPFeedbackFieldOption *)v18;
  uint64_t v18 = objc_alloc_init(GEORPFeedbackFieldOption);
  if (GEORPFeedbackFieldOptionReadAllFrom(v18, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEORPFeedbackMultiSelectField _addNoFlagsSelected:](a1, (void *)v18);
LABEL_52:

    uint64_t v18 = (uint64_t)v41;
    uint64_t v21 = v40;
    uint64_t v22 = &OBJC_IVAR___GEONonTiledAssets__flags;
    goto LABEL_56;
  }
LABEL_72:

  char v42 = 0;
  LODWORD(v18) = v41;
  uint64_t v21 = v40;
  uint64_t v22 = &OBJC_IVAR___GEONonTiledAssets__flags;
LABEL_66:
  *(unsigned char *)(a1 + v22[900]) |= 1u;
  *(unsigned char *)(a1 + v22[900]) |= 2u;
  if (v42)
  {
LABEL_67:
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
    if (!v18) {
      return v3;
    }
    goto LABEL_68;
  }
  unint64_t v3 = 0;
  if (v18)
  {
LABEL_68:
    uint64_t v45 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189CEDA84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CEE4A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPFeedbackMultiSelectFieldCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 16);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 24);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEORPFeedbackMultiSelectFieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackMultiSelectFieldReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackMultiSelectFieldReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackMultiSelectFieldReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackMultiSelectFieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPFeedbackMultiSelectFieldCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189CEE7D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackMultiSelectFieldReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackMultiSelectFieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CEE834(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CEEAD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackMultiSelectFieldIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 44) & 7) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEORPFeedbackFieldOptionIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEORPFeedbackMultiSelectFieldIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPFeedbackMultiSelectFieldIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189CEF098(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CEF550(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackPhotoMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    long long v14 = 0;
  }
  else {
    long long v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  long long v16 = (int *)MEMORY[0x1E4F940E8];
  long long v17 = (int *)MEMORY[0x1E4F940C8];
  long long v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_62;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        char v41 = 1;
        goto LABEL_72;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            int v43 = *v14++;
            int v42 = v43;
            if (v43 != 1 && v42 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_73;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v15)
    {
      unint64_t v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 != 2)
    {
      if (v29 != 1)
      {
        int v38 = PBReaderSkipValueWithTag();
        long long v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v38) {
          goto LABEL_70;
        }
        goto LABEL_58;
      }
      if (v30)
      {
        if ((*(unsigned char *)(a1 + 44) & 1) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 16;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_71;
        }
        v9 -= *(unsigned char *)(a1 + 44) & 1;
LABEL_57:
        long long v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_58:
        if (v9) {
          char v40 = 1;
        }
        else {
          char v40 = v13;
        }
        if ((v40 & 1) == 0) {
          goto LABEL_62;
        }
        continue;
      }
LABEL_51:
      char v39 = PBReaderSkipValueWithTag();
      long long v17 = (int *)MEMORY[0x1E4F940C8];
      if ((v39 & 1) == 0)
      {
LABEL_70:
        char v41 = 0;
        goto LABEL_72;
      }
      goto LABEL_58;
    }
    break;
  }
  if (!v30) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0)
  {
    uint64_t v35 = PBReaderReadString();
    uint64_t v36 = 24;
LABEL_48:
    int v37 = *(void **)(a1 + v36);
    *(void *)(a1 + v36) = v35;

    long long v17 = (int *)MEMORY[0x1E4F940C8];
    --v9;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_57;
  }
LABEL_71:
  char v41 = 0;
  long long v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v41)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if (!v13) {
      return v3;
    }
    goto LABEL_74;
  }
  unint64_t v3 = 0;
  if (v13)
  {
LABEL_74:
    int v44 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189CEFA90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CEFE5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackPhotoMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackPhotoMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackPhotoMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackPhotoMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackPhotoMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189CEFFEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackPhotoMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackPhotoMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CF0050(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF01E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackPhotoMetadataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189CF0480(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF095C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackRouteStepReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 56) >> 4) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    long long v14 = 0;
  }
  else {
    long long v14 = a3;
  }
  BOOL v15 = (int *)MEMORY[0x1E4F940E8];
  if (v12) {
    BOOL v16 = 1;
  }
  else {
    BOOL v16 = v14 == 0;
  }
  BOOL v68 = v16;
  long long v17 = (int *)MEMORY[0x1E4F940C8];
  long long v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_99;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v15;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_99:
      if (v13)
      {
        char v62 = 1;
        goto LABEL_110;
      }
      if (!v14) {
        goto LABEL_111;
      }
      while (1)
      {
        int v64 = *v14++;
        int v63 = v64;
        if (v64 == 4) {
          break;
        }
        if (v63 == 5)
        {
          char v65 = 16;
LABEL_108:
          *(unsigned char *)(a1 + 56) |= v65;
        }
        else if (!v63)
        {
          goto LABEL_111;
        }
      }
      char v65 = 8;
      goto LABEL_108;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v68)
    {
      unint64_t v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (1)
        {
          uint64_t v38 = *v15;
          uint64_t v39 = *(void *)(v3 + v38);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(v3 + *v6)) {
            break;
          }
          char v41 = *(unsigned char *)(*(void *)(v3 + *v18) + v39);
          *(void *)(v3 + v38) = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0) {
            goto LABEL_77;
          }
          v35 += 7;
          BOOL v26 = v36++ >= 9;
          if (v26)
          {
            LODWORD(v37) = 0;
            goto LABEL_79;
          }
        }
        *(unsigned char *)(v3 + *v17) = 1;
LABEL_77:
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v37) = 0;
        }
LABEL_79:
        uint64_t v59 = 44;
        goto LABEL_88;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v37 = 0;
        *(unsigned char *)(a1 + 56) |= 2u;
        while (2)
        {
          uint64_t v45 = *v15;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v18) + v46);
            *(void *)(v3 + v4std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = v47;
            v37 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              BOOL v26 = v44++ >= 9;
              if (v26)
              {
                LODWORD(v37) = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v37) = 0;
        }
LABEL_83:
        uint64_t v59 = 48;
        goto LABEL_88;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v37 = 0;
        *(unsigned char *)(a1 + 56) |= 4u;
        while (2)
        {
          uint64_t v51 = *v15;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v18) + v52);
            *(void *)(v3 + v51) = v53;
            v37 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v26 = v50++ >= 9;
              if (v26)
              {
                LODWORD(v37) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v37) = 0;
        }
LABEL_87:
        uint64_t v59 = 52;
LABEL_88:
        *(_DWORD *)(a1 + v59) = v37;
        goto LABEL_95;
      case 4:
        if (!v30) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 56) & 8) == 0)
        {
          uint64_t v55 = PBReaderReadString();
          uint64_t v56 = 16;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_116;
        }
        char v60 = 16 * *(unsigned char *)(a1 + 56);
        goto LABEL_93;
      case 5:
        if (!v30)
        {
LABEL_74:
          char v58 = PBReaderSkipValueWithTag();
          long long v17 = (int *)MEMORY[0x1E4F940C8];
          if ((v58 & 1) == 0)
          {
LABEL_109:
            char v62 = 0;
            goto LABEL_110;
          }
          goto LABEL_95;
        }
        if ((*(unsigned char *)(a1 + 56) & 0x10) == 0)
        {
          uint64_t v55 = PBReaderReadString();
          uint64_t v56 = 24;
LABEL_73:
          int v57 = *(void **)(a1 + v56);
          *(void *)(a1 + v56) = v55;

          --v9;
LABEL_94:
          long long v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
          if (v9) {
            char v61 = 1;
          }
          else {
            char v61 = v13;
          }
          if ((v61 & 1) == 0) {
            goto LABEL_99;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v60 = 8 * *(unsigned char *)(a1 + 56);
LABEL_93:
          v9 += v60 >> 7;
          goto LABEL_94;
        }
LABEL_116:
        char v62 = 0;
        long long v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_110:
        *(unsigned char *)(a1 + 56) |= 8u;
        *(unsigned char *)(a1 + 56) |= 0x10u;
        if (v62)
        {
LABEL_111:
          unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
          if (v13) {
            goto LABEL_112;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v13)
          {
LABEL_112:
            uint64_t v66 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v42 = PBReaderSkipValueWithTag();
        long long v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v42) {
          goto LABEL_109;
        }
        goto LABEL_95;
    }
  }
}

void sub_189CF10F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF1734(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackRouteStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackRouteStepReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackRouteStepReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackRouteStepReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackRouteStepReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189CF18C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackRouteStepReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackRouteStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CF1928(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF1B28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackRouteStepIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189CF1EEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF23E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackSingleSelectFieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          BOOL v16 = 0;
        }
        else {
          BOOL v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v45 = v17;
        long long v18 = (int *)MEMORY[0x1E4F940E8];
        char v19 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_61;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_25;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_61:
      if (v15)
      {
        char v40 = 1;
        goto LABEL_70;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            int v42 = *v16++;
            int v41 = v42;
            if (v42 != 1 && v41 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v41;
          }
        }
        while (v41);
      }
      goto LABEL_71;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v15;
    if (!v45)
    {
      int v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 != 2)
    {
      if (v31 != 1)
      {
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_69;
        }
        goto LABEL_54;
      }
      if (!v32 || (*(unsigned char *)(a1 + 44) & 1) != 0)
      {
LABEL_53:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_69;
        }
        goto LABEL_54;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_69;
      }
      uint64_t v37 = objc_alloc_init(GEORPFeedbackFieldOption);
      if (!GEORPFeedbackFieldOptionReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1)) {
        goto LABEL_76;
      }
      PBReaderRecallMark();
      -[GEORPFeedbackSingleSelectField _addNoFlagsOptions:](a1, v37);

      goto LABEL_50;
    }
    if (!v32) {
      goto LABEL_53;
    }
    if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_69:
      char v40 = 0;
      goto LABEL_70;
    }
    v7 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
LABEL_54:
    if (v7) {
      char v39 = 1;
    }
    else {
      char v39 = v15;
    }
    if ((v39 & 1) == 0) {
      goto LABEL_61;
    }
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_69;
  }
  uint64_t v37 = objc_alloc_init(GEORPFeedbackFieldOption);
  if (GEORPFeedbackFieldOptionReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    uint64_t v38 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v37;

    --v7;
LABEL_50:
    char v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_54;
  }
LABEL_76:

  char v40 = 0;
  char v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_70:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v40)
  {
LABEL_71:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (!v15) {
      return v3;
    }
    goto LABEL_72;
  }
  unint64_t v3 = 0;
  if (v15)
  {
LABEL_72:
    char v43 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189CF2C18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF3278(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackSingleSelectFieldCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 16);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  return [*(id *)(a1 + 24) readAll:1];
}

unint64_t GEORPFeedbackSingleSelectFieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackSingleSelectFieldReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORPFeedbackSingleSelectFieldReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORPFeedbackSingleSelectFieldReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackSingleSelectFieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPFeedbackSingleSelectFieldCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189CF3524(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackSingleSelectFieldReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackSingleSelectFieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CF3588(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF37AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackSingleSelectFieldIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v2 = *(unsigned char *)(a1 + 44);
  if ((v2 & 5) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) != 0)
  {
    if (GEORPFeedbackFieldOptionIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 44);
  }
  if ((v2 & 1) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 16);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEORPFeedbackFieldOptionIsDirty(*(void *)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_19;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_19:

  return v3;
}

os_unfair_lock_s *GEORPFeedbackSingleSelectFieldIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPFeedbackSingleSelectFieldIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189CF3CC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF4114(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTextFieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    int v14 = 0;
  }
  else {
    int v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v16 = (int *)MEMORY[0x1E4F940E8];
  BOOL v17 = (int *)MEMORY[0x1E4F940C8];
  long long v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_62;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        char v41 = 1;
        goto LABEL_74;
      }
      if (!v14) {
        goto LABEL_75;
      }
      while (1)
      {
        int v43 = *v14++;
        int v42 = v43;
        if (v43 == 1) {
          break;
        }
        if (v42 == 2)
        {
          char v44 = 1;
LABEL_71:
          *(unsigned char *)(a1 + 44) |= v44;
        }
        else if (!v42)
        {
          goto LABEL_75;
        }
      }
      char v44 = 2;
      goto LABEL_71;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v15)
    {
      unint64_t v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 != 2)
    {
      if (v29 != 1)
      {
        int v38 = PBReaderSkipValueWithTag();
        BOOL v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v38) {
          goto LABEL_72;
        }
        goto LABEL_58;
      }
      if (v30)
      {
        if ((*(unsigned char *)(a1 + 44) & 2) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 24;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_73;
        }
        v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
LABEL_57:
        BOOL v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_58:
        if (v9) {
          char v40 = 1;
        }
        else {
          char v40 = v13;
        }
        if ((v40 & 1) == 0) {
          goto LABEL_62;
        }
        continue;
      }
LABEL_51:
      char v39 = PBReaderSkipValueWithTag();
      BOOL v17 = (int *)MEMORY[0x1E4F940C8];
      if ((v39 & 1) == 0)
      {
LABEL_72:
        char v41 = 0;
        goto LABEL_74;
      }
      goto LABEL_58;
    }
    break;
  }
  if (!v30) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 44) & 1) == 0)
  {
    uint64_t v35 = PBReaderReadString();
    uint64_t v36 = 16;
LABEL_48:
    uint64_t v37 = *(void **)(a1 + v36);
    *(void *)(a1 + v36) = v35;

    BOOL v17 = (int *)MEMORY[0x1E4F940C8];
    --v9;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    v9 -= *(unsigned char *)(a1 + 44) & 1;
    goto LABEL_57;
  }
LABEL_73:
  char v41 = 0;
  BOOL v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_74:
  *(unsigned char *)(a1 + 44) |= 2u;
  *(unsigned char *)(a1 + 44) |= 1u;
  if (v41)
  {
LABEL_75:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if (v13) {
      goto LABEL_76;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v13)
    {
LABEL_76:
      BOOL v45 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_189CF465C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF4A2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTextFieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackTextFieldReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackTextFieldReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackTextFieldReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackTextFieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189CF4BBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTextFieldReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackTextFieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CF4C20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF4DB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackTextFieldIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189CF5050(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF53D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTextListFieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  int v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      int v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  BOOL v12 = v10 > 1;
  int v13 = v7 | v12;
  if (((v7 | v12) | v8)) {
    int v14 = 0;
  }
  else {
    int v14 = a3;
  }
  uint64_t v15 = (v14 == 0) | v13;
  char v42 = (v9 != 0) | v13;
  BOOL v16 = (int *)MEMORY[0x1E4F940E8];
  BOOL v17 = (int *)MEMORY[0x1E4F940C8];
  long long v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_55;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_24;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_24:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_26:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_55:
      if (v13)
      {
        char v37 = 1;
        goto LABEL_64;
      }
      if (v14)
      {
        while (1)
        {
          int v39 = *v14++;
          char v38 = 1;
          switch(v39)
          {
            case 0:
              goto LABEL_65;
            case 1:
              goto LABEL_61;
            case 2:
              char v38 = 4;
              goto LABEL_61;
            case 3:
              char v38 = 2;
LABEL_61:
              *(unsigned char *)(a1 + 52) |= v38;
              break;
            default:
              continue;
          }
        }
      }
LABEL_65:
      unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
      if ((v13 & 1) == 0) {
        return v3;
      }
      goto LABEL_66;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if ((v15 & 1) == 0)
    {
      unint64_t v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 == 3)
    {
      if (!v30 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
        goto LABEL_53;
      }
      uint64_t v35 = v15;
      uint64_t v36 = PBReaderReadString();
      if (v36) {
        -[GEORPFeedbackTextListField _addNoFlagsOriginal:](a1, v36);
      }
      goto LABEL_52;
    }
    if (v29 == 2)
    {
      if (!v30 || (*(unsigned char *)(a1 + 52) & 4) != 0) {
        goto LABEL_53;
      }
      uint64_t v35 = v15;
      uint64_t v36 = PBReaderReadString();
      if (v36) {
        -[GEORPFeedbackTextListField _addNoFlagsRemoved:](a1, v36);
      }
LABEL_52:

      uint64_t v15 = v35;
      BOOL v17 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_54;
    }
    if (v29 == 1 && v30 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      uint64_t v35 = v15;
      uint64_t v36 = PBReaderReadString();
      if (v36) {
        -[GEORPFeedbackTextListField _addNoFlagsAdded:](a1, v36);
      }
      goto LABEL_52;
    }
LABEL_53:
    if (PBReaderSkipValueWithTag())
    {
LABEL_54:
      if ((v42 & 1) == 0) {
        goto LABEL_55;
      }
      continue;
    }
    break;
  }
  char v37 = 0;
LABEL_64:
  *(unsigned char *)(a1 + 52) |= 1u;
  *(unsigned char *)(a1 + 52) |= 4u;
  *(unsigned char *)(a1 + 52) |= 2u;
  if (v37) {
    goto LABEL_65;
  }
  unint64_t v3 = 0;
  if (v13)
  {
LABEL_66:
    char v40 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189CF5BA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF5F68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF6850(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTextListFieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackTextListFieldReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackTextListFieldReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackTextListFieldReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackTextListFieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189CF69E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTextListFieldReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackTextListFieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CF6A44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF6D94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackTextListFieldIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189CF7324(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF78B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTileFeatureInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          BOOL v16 = 0;
        }
        else {
          BOOL v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v46 = v17;
        long long v18 = (int *)MEMORY[0x1E4F940E8];
        char v19 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_58;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_25;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_58:
      if (v15)
      {
        char v41 = 1;
        goto LABEL_68;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            int v43 = *v16++;
            int v42 = v43;
            if (v43 != 1 && v42 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_69;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v15;
    if (!v46)
    {
      int v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 != 2) {
      break;
    }
    if (!v32) {
      goto LABEL_50;
    }
    if ((*(unsigned char *)(a1 + 44) & 2) != 0)
    {
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_67:
        char v41 = 0;
        goto LABEL_68;
      }
      v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    }
    else
    {
      uint64_t v38 = PBReaderReadString();
      int v39 = *(void **)(a1 + 24);
      *(void *)(a1 + 24) = v38;

      --v9;
    }
LABEL_51:
    if (v9) {
      char v40 = 1;
    }
    else {
      char v40 = v15;
    }
    if ((v40 & 1) == 0) {
      goto LABEL_58;
    }
  }
  if (v31 != 1)
  {
    if (!PBReaderSkipValueWithTag()) {
      goto LABEL_67;
    }
    goto LABEL_51;
  }
  if (!v32 || (*(unsigned char *)(a1 + 44) & 1) != 0)
  {
LABEL_50:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_67;
    }
    goto LABEL_51;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_67;
  }
  char v37 = objc_alloc_init(GEORPFeatureHandle);
  if (GEORPFeatureHandleReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEORPFeedbackTileFeatureInfo _addNoFlagsFeatureHandle:](a1, v37);

    char v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_51;
  }

  char v41 = 0;
  char v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_68:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v41)
  {
LABEL_69:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (!v15) {
      return v3;
    }
    goto LABEL_70;
  }
  unint64_t v3 = 0;
  if (v15)
  {
LABEL_70:
    char v44 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189CF80B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF8718(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPFeedbackTileFeatureInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 16);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEORPFeedbackTileFeatureInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackTileFeatureInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORPFeedbackTileFeatureInfoReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORPFeedbackTileFeatureInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackTileFeatureInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPFeedbackTileFeatureInfoCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189CF89AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTileFeatureInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackTileFeatureInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CF8A10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF8C44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackTileFeatureInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189CF9004(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF943C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTimestampReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          BOOL v16 = 0;
        }
        else {
          BOOL v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v47 = v17;
        long long v18 = (int *)MEMORY[0x1E4F940E8];
        char v19 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_63;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_25;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_63:
      if (v15)
      {
        char v41 = 1;
        goto LABEL_74;
      }
      if (!v16) {
        goto LABEL_75;
      }
      while (1)
      {
        int v43 = *v16++;
        int v42 = v43;
        if (v43 == 1) {
          break;
        }
        if (v42 == 2)
        {
          char v44 = 1;
LABEL_72:
          *(unsigned char *)(a1 + 44) |= v44;
        }
        else if (!v42)
        {
          goto LABEL_75;
        }
      }
      char v44 = 2;
      goto LABEL_72;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v15;
    if (!v47)
    {
      int v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 != 2)
    {
      if (v31 != 1)
      {
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_73;
        }
        goto LABEL_54;
      }
      if (!v32) {
        goto LABEL_53;
      }
      if ((*(unsigned char *)(a1 + 44) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_73;
        }
        v7 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
        goto LABEL_54;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_73;
      }
      char v37 = objc_alloc_init(GEORPTimestamp);
      if (!GEORPTimestampReadAllFrom((uint64_t)v37, (void *)v3)) {
        goto LABEL_80;
      }
      PBReaderRecallMark();
      uint64_t v38 = 24;
      goto LABEL_50;
    }
    if (!v32)
    {
LABEL_53:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_73;
      }
      goto LABEL_54;
    }
    if ((*(unsigned char *)(a1 + 44) & 1) == 0) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_73:
      char v41 = 0;
      goto LABEL_74;
    }
    v7 -= *(unsigned char *)(a1 + 44) & 1;
LABEL_54:
    if (v7) {
      char v40 = 1;
    }
    else {
      char v40 = v15;
    }
    if ((v40 & 1) == 0) {
      goto LABEL_63;
    }
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_73;
  }
  char v37 = objc_alloc_init(GEORPTimestamp);
  if (GEORPTimestampReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v38 = 16;
LABEL_50:
    int v39 = *(void **)(a1 + v38);
    *(void *)(a1 + v38) = v37;

    --v7;
    char v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_54;
  }
LABEL_80:

  char v41 = 0;
  char v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_74:
  *(unsigned char *)(a1 + 44) |= 2u;
  *(unsigned char *)(a1 + 44) |= 1u;
  if (v41)
  {
LABEL_75:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v15) {
      goto LABEL_76;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v15)
    {
LABEL_76:
      BOOL v45 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_189CF9A40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CF9ED8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTimestampReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackTimestampReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackTimestampReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackTimestampReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackTimestampReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 16) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189CFA094(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTimestampReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackTimestampReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CFA0F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CFA288(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackTimestampIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189CFA528(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CFA8D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTransitLineReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v7 | (v10 > 1);
  if (v7 & 1 | (v10 > 1) | v8 & 1) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = a3;
  }
  int v14 = (int *)MEMORY[0x1E4F940E8];
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
  BOOL v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_63;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      if (v18++ >= 9)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v1std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_63:
      if (v12)
      {
        char v39 = 1;
        goto LABEL_72;
      }
      if (v13)
      {
        while (1)
        {
          int v40 = *v13++;
          char v41 = 1;
          switch(v40)
          {
            case 0:
              goto LABEL_73;
            case 1:
              goto LABEL_69;
            case 2:
              char v41 = 2;
              goto LABEL_69;
            case 3:
              char v41 = 4;
LABEL_69:
              *(unsigned char *)(a1 + 52) |= v41;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_73;
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      int v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    if (v27 == 3)
    {
      if (!v28) {
        goto LABEL_52;
      }
      if ((*(unsigned char *)(a1 + 52) & 4) == 0)
      {
        uint64_t v33 = PBReaderReadString();
        uint64_t v34 = 32;
LABEL_49:
        int v35 = *(void **)(a1 + v34);
        *(void *)(a1 + v34) = v33;

        --v9;
        goto LABEL_61;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_71;
      }
      char v38 = 32 * *(unsigned char *)(a1 + 52);
LABEL_60:
      v9 += v38 >> 7;
      goto LABEL_61;
    }
    if (v27 != 2)
    {
      if (v27 != 1)
      {
        int v36 = PBReaderSkipValueWithTag();
        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v36) {
          goto LABEL_70;
        }
        goto LABEL_62;
      }
      if (v28)
      {
        if ((*(unsigned char *)(a1 + 52) & 1) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 16;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_71;
        }
        v9 -= *(unsigned char *)(a1 + 52) & 1;
LABEL_61:
        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_62:
        if (!(v12 & 1 | (v9 != 0))) {
          goto LABEL_63;
        }
        continue;
      }
LABEL_52:
      char v37 = PBReaderSkipValueWithTag();
      BOOL v15 = (int *)MEMORY[0x1E4F940C8];
      if ((v37 & 1) == 0)
      {
LABEL_70:
        char v39 = 0;
        goto LABEL_72;
      }
      goto LABEL_62;
    }
    break;
  }
  if (!v28) {
    goto LABEL_52;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0)
  {
    uint64_t v33 = PBReaderReadString();
    uint64_t v34 = 24;
    goto LABEL_49;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v38 = *(unsigned char *)(a1 + 52) << 6;
    goto LABEL_60;
  }
LABEL_71:
  char v39 = 0;
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + 52) |= 1u;
  *(unsigned char *)(a1 + 52) |= 2u;
  *(unsigned char *)(a1 + 52) |= 4u;
  if (v39)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
    if ((v12 & 1) == 0) {
      return v3;
    }
    goto LABEL_74;
  }
  unint64_t v3 = 0;
  if (v12)
  {
LABEL_74:
    int v42 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189CFAEAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CFB01C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CFB4DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTransitLineReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackTransitLineReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackTransitLineReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackTransitLineReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackTransitLineReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189CFB66C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTransitLineReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackTransitLineReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CFB6D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CFB87C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackTransitLineIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189CFBB54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackUIntFieldReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 1u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              unint64_t v26 = &OBJC_IVAR___GEORPFeedbackUIntField__edited;
              goto LABEL_40;
            }
            v27 += 7;
            BOOL v25 = v28++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              unint64_t v26 = &OBJC_IVAR___GEORPFeedbackUIntField__edited;
              goto LABEL_42;
            }
          }
          unint64_t v26 = &OBJC_IVAR___GEORPFeedbackUIntField__edited;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              unint64_t v26 = &OBJC_IVAR___GEORPFeedbackUIntField__original;
              goto LABEL_39;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              unint64_t v26 = &OBJC_IVAR___GEORPFeedbackUIntField__original;
              goto LABEL_42;
            }
          }
          unint64_t v26 = &OBJC_IVAR___GEORPFeedbackUIntField__original;
        }
LABEL_40:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_42:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_189CFC408(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackUIntFieldReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackUIntFieldReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CFC46C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackULongFieldReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              unint64_t v26 = &OBJC_IVAR___GEORPFeedbackULongField__edited;
              goto LABEL_40;
            }
            v27 += 7;
            BOOL v25 = v28++ > 8;
            if (v25)
            {
              uint64_t v20 = 0;
              unint64_t v26 = &OBJC_IVAR___GEORPFeedbackULongField__edited;
              goto LABEL_42;
            }
          }
          unint64_t v26 = &OBJC_IVAR___GEORPFeedbackULongField__edited;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              unint64_t v26 = &OBJC_IVAR___GEORPFeedbackULongField__original;
              goto LABEL_39;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              uint64_t v20 = 0;
              unint64_t v26 = &OBJC_IVAR___GEORPFeedbackULongField__original;
              goto LABEL_42;
            }
          }
          unint64_t v26 = &OBJC_IVAR___GEORPFeedbackULongField__original;
        }
LABEL_40:
        if (v3[*v6]) {
          uint64_t v20 = 0;
        }
LABEL_42:
        *(void *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_189CFCE84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackULongFieldReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackULongFieldReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CFCEE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CFD49C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackULongListFieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 92);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 88)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 100) >> 2) & 1)
      + (*(unsigned char *)(a1 + 100) & 1)
      + ((*(unsigned __int8 *)(a1 + 100) >> 1) & 1);
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 1);
  if (v9 & 1 | (v10 > 1) | v8 & 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  char v14 = (int *)MEMORY[0x1E4F940E8];
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(v3 + *v6))
  {
    char v81 = (v7 != 0) | v12;
    int v16 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(v3 + *v15)) {
        break;
      }
      char v17 = 0;
      unsigned int v18 = 0;
      unint64_t v19 = 0;
      while (1)
      {
        uint64_t v20 = *v14;
        uint64_t v21 = *(void *)(v3 + v20);
        unint64_t v22 = v21 + 1;
        if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
          break;
        }
        char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
        *(void *)(v3 + v20) = v22;
        v19 |= (unint64_t)(v23 & 0x7F) << v17;
        if ((v23 & 0x80) == 0) {
          goto LABEL_24;
        }
        v17 += 7;
        BOOL v24 = v18++ >= 9;
        if (v24)
        {
          unint64_t v19 = 0;
          int v25 = *(unsigned __int8 *)(v3 + *v15);
          goto LABEL_26;
        }
      }
      *(unsigned char *)(v3 + *v1std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = 1;
LABEL_24:
      int v25 = *(unsigned __int8 *)(v3 + *v15);
      if (*(unsigned char *)(v3 + *v15)) {
        unint64_t v19 = 0;
      }
LABEL_26:
      int v26 = v19 & 7;
      if (v25 || v26 == 4) {
        break;
      }
      unint64_t v28 = v19 >> 3;
      BOOL v29 = v12;
      if (!((v13 == 0) | v12 & 1))
      {
        uint64_t v30 = v13;
        do
        {
          int v32 = *v30++;
          int v31 = v32;
          BOOL v29 = v32 != 0;
          if (v32) {
            BOOL v33 = v31 == v28;
          }
          else {
            BOOL v33 = 1;
          }
        }
        while (!v33);
      }
      switch(v28)
      {
        case 3:
          if (v29 && (*(unsigned char *)(a1 + 100) & 2) == 0)
          {
            if (v26 != 2)
            {
              char v62 = 0;
              unsigned int v63 = 0;
              uint64_t v64 = 0;
              while (1)
              {
                uint64_t v65 = *v14;
                uint64_t v66 = *(void *)(v3 + v65);
                unint64_t v67 = v66 + 1;
                if (v66 == -1 || v67 > *(void *)(v3 + *v6)) {
                  goto LABEL_113;
                }
                char v68 = *(unsigned char *)(*(void *)(v3 + *v16) + v66);
                *(void *)(v3 + v6std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = v67;
                v64 |= (unint64_t)(v68 & 0x7F) << v62;
                if (v68 < 0)
                {
                  v62 += 7;
                  BOOL v24 = v63++ >= 9;
                  if (!v24) {
                    continue;
                  }
                }
                goto LABEL_114;
              }
            }
            if (!PBReaderPlaceMark()) {
              goto LABEL_129;
            }
            while (*(void *)(v3 + *v14) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v15))
            {
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              while (1)
              {
                uint64_t v44 = *v14;
                uint64_t v45 = *(void *)(v3 + v44);
                unint64_t v46 = v45 + 1;
                if (v45 == -1 || v46 > *(void *)(v3 + *v6)) {
                  break;
                }
                char v47 = *(unsigned char *)(*(void *)(v3 + *v16) + v45);
                *(void *)(v3 + v44) = v46;
                v43 |= (unint64_t)(v47 & 0x7F) << v41;
                if (v47 < 0)
                {
                  v41 += 7;
                  BOOL v24 = v42++ >= 9;
                  if (!v24) {
                    continue;
                  }
                }
                goto LABEL_69;
              }
              *(unsigned char *)(v3 + *v1std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = 1;
LABEL_69:
              PBRepeatedUInt64Add();
            }
LABEL_91:
            PBReaderRecallMark();
            continue;
          }
          break;
        case 2:
          if (v29 && (*(unsigned char *)(a1 + 100) & 4) == 0)
          {
            if (v26 != 2)
            {
              char v69 = 0;
              unsigned int v70 = 0;
              uint64_t v71 = 0;
              while (1)
              {
                uint64_t v72 = *v14;
                uint64_t v73 = *(void *)(v3 + v72);
                unint64_t v74 = v73 + 1;
                if (v73 == -1 || v74 > *(void *)(v3 + *v6)) {
                  break;
                }
                char v75 = *(unsigned char *)(*(void *)(v3 + *v16) + v73);
                *(void *)(v3 + v72) = v74;
                v71 |= (unint64_t)(v75 & 0x7F) << v69;
                if (v75 < 0)
                {
                  v69 += 7;
                  BOOL v24 = v70++ >= 9;
                  if (!v24) {
                    continue;
                  }
                }
                goto LABEL_114;
              }
LABEL_113:
              *(unsigned char *)(v3 + *v1std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = 1;
LABEL_114:
              PBRepeatedUInt64Add();
              continue;
            }
            if (!PBReaderPlaceMark()) {
              goto LABEL_129;
            }
            while (*(void *)(v3 + *v14) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v15))
            {
              char v48 = 0;
              unsigned int v49 = 0;
              uint64_t v50 = 0;
              while (1)
              {
                uint64_t v51 = *v14;
                uint64_t v52 = *(void *)(v3 + v51);
                unint64_t v53 = v52 + 1;
                if (v52 == -1 || v53 > *(void *)(v3 + *v6)) {
                  break;
                }
                char v54 = *(unsigned char *)(*(void *)(v3 + *v16) + v52);
                *(void *)(v3 + v51) = v53;
                v50 |= (unint64_t)(v54 & 0x7F) << v48;
                if (v54 < 0)
                {
                  v48 += 7;
                  BOOL v24 = v49++ >= 9;
                  if (!v24) {
                    continue;
                  }
                }
                goto LABEL_84;
              }
              *(unsigned char *)(v3 + *v1std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = 1;
LABEL_84:
              PBRepeatedUInt64Add();
            }
            goto LABEL_91;
          }
          break;
        case 1:
          if (v29 && (*(unsigned char *)(a1 + 100) & 1) == 0)
          {
            if (v26 != 2)
            {
              char v55 = 0;
              unsigned int v56 = 0;
              uint64_t v57 = 0;
              while (1)
              {
                uint64_t v58 = *v14;
                uint64_t v59 = *(void *)(v3 + v58);
                unint64_t v60 = v59 + 1;
                if (v59 == -1 || v60 > *(void *)(v3 + *v6)) {
                  goto LABEL_113;
                }
                char v61 = *(unsigned char *)(*(void *)(v3 + *v16) + v59);
                *(void *)(v3 + v58) = v60;
                v57 |= (unint64_t)(v61 & 0x7F) << v55;
                if (v61 < 0)
                {
                  v55 += 7;
                  BOOL v24 = v56++ >= 9;
                  if (!v24) {
                    continue;
                  }
                }
                goto LABEL_114;
              }
            }
            if (!PBReaderPlaceMark()) {
              goto LABEL_129;
            }
            while (*(void *)(v3 + *v14) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v15))
            {
              char v34 = 0;
              unsigned int v35 = 0;
              uint64_t v36 = 0;
              while (1)
              {
                uint64_t v37 = *v14;
                uint64_t v38 = *(void *)(v3 + v37);
                unint64_t v39 = v38 + 1;
                if (v38 == -1 || v39 > *(void *)(v3 + *v6)) {
                  break;
                }
                char v40 = *(unsigned char *)(*(void *)(v3 + *v16) + v38);
                *(void *)(v3 + v37) = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  BOOL v24 = v35++ >= 9;
                  if (!v24) {
                    continue;
                  }
                }
                goto LABEL_54;
              }
              *(unsigned char *)(v3 + *v1std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = 1;
LABEL_54:
              PBRepeatedUInt64Add();
            }
            goto LABEL_91;
          }
          break;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_129;
          }
          continue;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_129:
        char v76 = 0;
        goto LABEL_117;
      }
    }
    while ((v81 & 1) != 0 && *(void *)(v3 + *v14) < *(void *)(v3 + *v6));
  }
  if ((v12 & 1) == 0)
  {
    if (v13)
    {
      while (1)
      {
        int v78 = *v13++;
        char v77 = 1;
        switch(v78)
        {
          case 0:
            goto LABEL_126;
          case 1:
            goto LABEL_124;
          case 2:
            char v77 = 4;
            goto LABEL_124;
          case 3:
            char v77 = 2;
LABEL_124:
            *(unsigned char *)(a1 + 100) |= v77;
            break;
          default:
            continue;
        }
      }
    }
    goto LABEL_126;
  }
  char v76 = 1;
LABEL_117:
  *(unsigned char *)(a1 + 100) |= 1u;
  *(unsigned char *)(a1 + 100) |= 4u;
  *(unsigned char *)(a1 + 100) |= 2u;
  if (v76)
  {
LABEL_126:
    unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
    if (v12) {
      goto LABEL_127;
    }
    return v3;
  }
  unint64_t v3 = 0;
  if ((v12 & 1) == 0) {
    return v3;
  }
LABEL_127:
  unint64_t v79 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = 0;

  return v3;
}

void sub_189CFDFE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CFE36C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CFEC04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackULongListFieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 92))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackULongListFieldReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = [v8 position];
  *(_DWORD *)(a1 + 92) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPFeedbackULongListFieldReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPFeedbackULongListFieldReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackULongListFieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_189CFED94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackULongListFieldReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackULongListFieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189CFEDF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CFF014(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackULongListFieldIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  BOOL v2 = (*(unsigned char *)(a1 + 100) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return v2;
}

void sub_189CFF374(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189CFF93C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAddressReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        char v14 = v10 | (v11 > 1);
        if (v10 & 1 | (v11 > 1) | v8 & 1) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        int v16 = (int *)MEMORY[0x1E4F940E8];
        char v17 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v18 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_65;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_25:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_65:
      if (v14)
      {
        char v41 = 1;
        goto LABEL_73;
      }
      if (v15)
      {
        while (1)
        {
          int v42 = *v15++;
          char v43 = 4;
          switch(v42)
          {
            case 0:
              goto LABEL_74;
            case 1:
              goto LABEL_71;
            case 2:
              char v43 = 2;
              goto LABEL_71;
            case 3:
              char v43 = 1;
LABEL_71:
              *(unsigned char *)(a1 + 52) |= v43;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_74;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      int v31 = v15;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 == 3) {
      break;
    }
    if (v29 != 2)
    {
      if (v29 != 1)
      {
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_72;
        }
        goto LABEL_64;
      }
      if (!v30) {
        goto LABEL_55;
      }
      if ((*(unsigned char *)(a1 + 52) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_72;
        }
        char v40 = 32 * *(unsigned char *)(a1 + 52);
LABEL_63:
        v7 += v40 >> 7;
        goto LABEL_64;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_72;
      }
      unsigned int v35 = objc_alloc_init(GEOAddress);
      if (!GEOAddressReadAllFrom((uint64_t)v35, (void *)v3, v9 & 1)) {
        goto LABEL_79;
      }
      PBReaderRecallMark();
      uint64_t v36 = 32;
      goto LABEL_49;
    }
    if (!v30)
    {
LABEL_55:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_72;
      }
      goto LABEL_64;
    }
    if ((*(unsigned char *)(a1 + 52) & 2) != 0)
    {
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_72:
        char v41 = 0;
        goto LABEL_73;
      }
      char v40 = *(unsigned char *)(a1 + 52) << 6;
      goto LABEL_63;
    }
    uint64_t v38 = PBReaderReadString();
    unint64_t v39 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v38;

    --v7;
LABEL_64:
    if (!(v14 & 1 | (v7 != 0))) {
      goto LABEL_65;
    }
  }
  if (!v30) {
    goto LABEL_55;
  }
  if (*(unsigned char *)(a1 + 52))
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_72;
    }
    v7 -= *(unsigned char *)(a1 + 52) & 1;
    goto LABEL_64;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_72;
  }
  unsigned int v35 = objc_alloc_init(GEOPDAddressObject);
  if (GEOPDAddressObjectReadAllFrom((uint64_t)v35, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v36 = 16;
LABEL_49:
    uint64_t v37 = *(void **)(a1 + v36);
    *(void *)(a1 + v36) = v35;

    --v7;
    char v17 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_64;
  }
LABEL_79:

  char v41 = 0;
  char v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_73:
  *(unsigned char *)(a1 + 52) |= 4u;
  *(unsigned char *)(a1 + 52) |= 2u;
  *(unsigned char *)(a1 + 52) |= 1u;
  if (v41)
  {
LABEL_74:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if ((v14 & 1) == 0) {
      return v3;
    }
    goto LABEL_75;
  }
  unint64_t v3 = 0;
  if (v14)
  {
LABEL_75:
    uint64_t v44 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189CFFFE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D00158(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D006B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAddressReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPAddressReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPAddressReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPAddressReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPAddressReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189D0085C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAddressReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPAddressReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D008C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAddressIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_32;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_32;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2) {
          goto LABEL_33;
        }
      }
      else if (v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOAddressIsValid(a1)) {
          goto LABEL_33;
        }
LABEL_28:
        PBReaderRecallMark();
        goto LABEL_31;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_33;
      }
LABEL_31:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_32;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAdamAppIdentifierIsValid(a1))
    {
LABEL_33:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_28;
  }
LABEL_32:
  BOOL v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

void sub_189D00C74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPAddressIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if (GEOAddressIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 52);
  }
  if ((v2 & 2) == 0) {
    return v2 & 1;
  }
  return 1;
}

os_unfair_lock_s *GEORPAddressIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPAddressIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189D00FB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D013C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAuxiliaryControlReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v50 = v17;
        BOOL v18 = (int *)MEMORY[0x1E4F940E8];
        char v19 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v20 = (int *)MEMORY[0x1E4F940B8];
        unint64_t v21 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_64;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v18;
      uint64_t v26 = *(void *)(v3 + v25);
      unint64_t v27 = v26 + 1;
      if (v26 == -1 || v27 > *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v20) + v26);
      *(void *)(v3 + v2std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0) {
        goto LABEL_25;
      }
      v22 += 7;
      if (v23++ >= 9)
      {
        unint64_t v24 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v30 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v24 = 0;
    }
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_64:
      if (v15)
      {
        char v44 = 1;
        goto LABEL_78;
      }
      if (!v16) {
        goto LABEL_79;
      }
      while (1)
      {
        int v46 = *v16++;
        int v45 = v46;
        if (v46 == 1) {
          break;
        }
        if (v45 == 2)
        {
          char v47 = 1;
LABEL_73:
          *(unsigned char *)(a1 + v21[351]) |= v47;
        }
        else if (!v45)
        {
          goto LABEL_79;
        }
      }
      char v47 = 2;
      goto LABEL_73;
    }
    unint64_t v32 = v24 >> 3;
    BOOL v33 = v15;
    if (!v50)
    {
      BOOL v34 = v16;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    if (v32 == 2) {
      break;
    }
    if (v32 != 1)
    {
      int v41 = PBReaderSkipValueWithTag();
      char v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v41) {
        goto LABEL_74;
      }
      goto LABEL_60;
    }
    if (v33)
    {
      if ((*(unsigned char *)(a1 + v21[351]) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_75;
        }
        v7 += *(unsigned __int8 *)(a1 + v21[351]) << 30 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_75;
        }
        uint64_t v38 = objc_alloc_init(GEORPWatchAuxiliaryControl);
        if (!GEORPWatchAuxiliaryControlReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1)) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        uint64_t v39 = 24;
LABEL_50:
        char v40 = *(void **)(a1 + v39);
        *(void *)(a1 + v39) = v38;

        --v7;
        unint64_t v21 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
      }
LABEL_59:
      char v19 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_60;
    }
LABEL_53:
    char v42 = PBReaderSkipValueWithTag();
    char v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v42 & 1) == 0)
    {
LABEL_74:
      char v44 = 0;
      goto LABEL_78;
    }
LABEL_60:
    if (v7) {
      char v43 = 1;
    }
    else {
      char v43 = v15;
    }
    if ((v43 & 1) == 0) {
      goto LABEL_64;
    }
  }
  if (!v33) {
    goto LABEL_53;
  }
  if (*(unsigned char *)(a1 + v21[351]))
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_75:
      char v44 = 0;
      goto LABEL_77;
    }
    v7 -= *(unsigned char *)(a1 + v21[351]) & 1;
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_75;
  }
  uint64_t v38 = objc_alloc_init(GEORPCarPlayAuxiliaryControl);
  if (GEORPCarPlayAuxiliaryControlReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    uint64_t v39 = 16;
    goto LABEL_50;
  }
LABEL_76:

  char v44 = 0;
  unint64_t v21 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
LABEL_77:
  char v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_78:
  *(unsigned char *)(a1 + v21[351]) |= 2u;
  *(unsigned char *)(a1 + v21[351]) |= 1u;
  if (v44)
  {
LABEL_79:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v15) {
      goto LABEL_80;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v15)
    {
LABEL_80:
      char v48 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_189D019D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D01E6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAuxiliaryControlReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPAuxiliaryControlReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPAuxiliaryControlReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPAuxiliaryControlReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPAuxiliaryControlReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 16) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189D02024(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAuxiliaryControlReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPAuxiliaryControlReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D02088(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAuxiliaryControlIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPWatchAuxiliaryControlIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCarPlayAuxiliaryControlIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPWatchAuxiliaryControlIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2) {
          goto LABEL_32;
        }
LABEL_26:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_32;
        }
        goto LABEL_29;
      }
      if (v17 == 1)
      {
        if (v15 != 2) {
          goto LABEL_32;
        }
        goto LABEL_26;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_32:
        BOOL v18 = 0;
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2) {
      goto LABEL_32;
    }
    goto LABEL_26;
  }
LABEL_30:
  BOOL v18 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v18;
}

BOOL GEORPCarPlayAuxiliaryControlIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOCarInfoIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189D027A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPAuxiliaryControlIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v2 = *(unsigned char *)(a1 + 44);
  if ((v2 & 4) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) != 0)
  {
    if (GEORPWatchAuxiliaryControlIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 44);
  }
  return v2 & 1;
}

os_unfair_lock_s *GEORPAuxiliaryControlIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPAuxiliaryControlIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189D02AAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPButtonReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_32;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v22) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          char v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189D0343C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPButtonReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPButtonReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D034A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPButtonIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          BOOL v23 = 0;
          goto LABEL_36;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

BOOL GEORPCarPlayAuxiliaryControlReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          unint64_t v20 = objc_alloc_init(GEOCarInfo);
          if (!GEOCarInfoReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          int v21 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v22 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v22 = 0;
  }
  objc_sync_exit(v5);

  return v22;
}

void sub_189D03EF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCarPlayAuxiliaryControlReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPCarPlayAuxiliaryControlReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D03F5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPClientCapabilitiesReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 16) |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_58;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                uint64_t v20 = 0;
                goto LABEL_60;
              }
            }
            v3[*v6] = 1;
LABEL_58:
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_60:
            BOOL v53 = v20 != 0;
            uint64_t v54 = 12;
            goto LABEL_73;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            *(unsigned char *)(a1 + 16) |= 8u;
            while (2)
            {
              uint64_t v28 = *v4;
              uint64_t v29 = *(void *)&v3[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
                *(void *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    uint64_t v27 = 0;
                    goto LABEL_64;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v27 = 0;
            }
LABEL_64:
            BOOL v53 = v27 != 0;
            uint64_t v54 = 14;
            goto LABEL_73;
          case 3u:
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            *(unsigned char *)(a1 + 16) |= 4u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
                *(void *)&v3[v35] = v37;
                v34 |= (unint64_t)(v38 & 0x7F) << v32;
                if (v38 < 0)
                {
                  v32 += 7;
                  BOOL v15 = v33++ >= 9;
                  if (v15)
                  {
                    uint64_t v34 = 0;
                    goto LABEL_68;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v34 = 0;
            }
LABEL_68:
            BOOL v53 = v34 != 0;
            uint64_t v54 = 13;
            goto LABEL_73;
          case 4u:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            *(unsigned char *)(a1 + 16) |= 0x10u;
            while (2)
            {
              uint64_t v42 = *v4;
              uint64_t v43 = *(void *)&v3[v42];
              unint64_t v44 = v43 + 1;
              if (v43 == -1 || v44 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v45 = *(unsigned char *)(*(void *)&v3[*v7] + v43);
                *(void *)&v3[v42] = v44;
                v41 |= (unint64_t)(v45 & 0x7F) << v39;
                if (v45 < 0)
                {
                  v39 += 7;
                  BOOL v15 = v40++ >= 9;
                  if (v15)
                  {
                    uint64_t v41 = 0;
                    goto LABEL_72;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v41 = 0;
            }
LABEL_72:
            BOOL v53 = v41 != 0;
            uint64_t v54 = 15;
LABEL_73:
            *(unsigned char *)(a1 + v54) = v53;
            continue;
          case 5u:
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v48 = 0;
            *(unsigned char *)(a1 + 16) |= 1u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_81;
            }
            continue;
        }
        while (1)
        {
          uint64_t v49 = *v4;
          uint64_t v50 = *(void *)&v3[v49];
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)&v3[*v5]) {
            break;
          }
          char v52 = *(unsigned char *)(*(void *)&v3[*v7] + v50);
          *(void *)&v3[v49] = v51;
          v48 |= (unint64_t)(v52 & 0x7F) << v46;
          if ((v52 & 0x80) == 0) {
            goto LABEL_77;
          }
          v46 += 7;
          BOOL v15 = v47++ >= 9;
          if (v15)
          {
            LODWORD(v48) = 0;
            goto LABEL_79;
          }
        }
        v3[*v6] = 1;
LABEL_77:
        if (v3[*v6]) {
          LODWORD(v48) = 0;
        }
LABEL_79:
        *(_DWORD *)(a1 + 8) = v48;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v55 = v3[*v6] == 0;
  }
  else
  {
LABEL_81:
    BOOL v55 = 0;
  }
  objc_sync_exit(v3);

  return v55;
}

void sub_189D04FC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPClientCapabilitiesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPClientCapabilitiesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D05040(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPClientCapabilitiesIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v37 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_65:
          BOOL v42 = 0;
          goto LABEL_64;
      }
      while (1)
      {
        uint64_t v38 = *v2;
        uint64_t v39 = *(void *)&a1[v38];
        unint64_t v40 = v39 + 1;
        if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
          break;
        }
        int v41 = *(char *)(*(void *)&a1[*v5] + v39);
        *(void *)&a1[v38] = v40;
        if (v41 < 0)
        {
          BOOL v21 = v37++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_62;
      }
LABEL_61:
      a1[*v4] = 1;
LABEL_62:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v42 = a1[*v4] == 0;
LABEL_64:
  PBReaderRecallMark();
  return v42;
}

void sub_189D05BC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedCoordinateReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          unsigned int v16 = 0;
        }
        else {
          unsigned int v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v50 = v17;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        int v20 = (int *)MEMORY[0x1E4F940B8];
        BOOL v21 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_64;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v18;
      uint64_t v26 = *(void *)(v3 + v25);
      unint64_t v27 = v26 + 1;
      if (v26 == -1 || v27 > *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v20) + v26);
      *(void *)(v3 + v2std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0) {
        goto LABEL_25;
      }
      v22 += 7;
      if (v23++ >= 9)
      {
        unint64_t v24 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v30 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v24 = 0;
    }
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_64:
      if (v15)
      {
        char v44 = 1;
        goto LABEL_78;
      }
      if (!v16) {
        goto LABEL_79;
      }
      while (1)
      {
        int v46 = *v16++;
        int v45 = v46;
        if (v46 == 1) {
          break;
        }
        if (v45 == 2)
        {
          char v47 = 1;
LABEL_73:
          *(unsigned char *)(a1 + v21[355]) |= v47;
        }
        else if (!v45)
        {
          goto LABEL_79;
        }
      }
      char v47 = 2;
      goto LABEL_73;
    }
    unint64_t v32 = v24 >> 3;
    BOOL v33 = v15;
    if (!v50)
    {
      uint64_t v34 = v16;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    if (v32 == 2) {
      break;
    }
    if (v32 != 1)
    {
      int v41 = PBReaderSkipValueWithTag();
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v41) {
        goto LABEL_74;
      }
      goto LABEL_60;
    }
    if (v33)
    {
      if ((*(unsigned char *)(a1 + v21[355]) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_75;
        }
        v7 += *(unsigned __int8 *)(a1 + v21[355]) << 30 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_75;
        }
        uint64_t v38 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v38, (void *)v3)) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        uint64_t v39 = 24;
LABEL_50:
        unint64_t v40 = *(void **)(a1 + v39);
        *(void *)(a1 + v39) = v38;

        --v7;
        BOOL v21 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
      }
LABEL_59:
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_60;
    }
LABEL_53:
    char v42 = PBReaderSkipValueWithTag();
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v42 & 1) == 0)
    {
LABEL_74:
      char v44 = 0;
      goto LABEL_78;
    }
LABEL_60:
    if (v7) {
      char v43 = 1;
    }
    else {
      char v43 = v15;
    }
    if ((v43 & 1) == 0) {
      goto LABEL_64;
    }
  }
  if (!v33) {
    goto LABEL_53;
  }
  if (*(unsigned char *)(a1 + v21[355]))
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_75:
      char v44 = 0;
      goto LABEL_77;
    }
    v7 -= *(unsigned char *)(a1 + v21[355]) & 1;
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_75;
  }
  uint64_t v38 = objc_alloc_init(GEOLatLng);
  if (GEOLatLngReadAllFrom((uint64_t)v38, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v39 = 16;
    goto LABEL_50;
  }
LABEL_76:

  char v44 = 0;
  BOOL v21 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
LABEL_77:
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_78:
  *(unsigned char *)(a1 + v21[355]) |= 2u;
  *(unsigned char *)(a1 + v21[355]) |= 1u;
  if (v44)
  {
LABEL_79:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v15) {
      goto LABEL_80;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v15)
    {
LABEL_80:
      uint64_t v48 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_189D061D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D066A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedCoordinateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPCorrectedCoordinateReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPCorrectedCoordinateReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPCorrectedCoordinateReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPCorrectedCoordinateReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 16) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189D06858(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedCoordinateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPCorrectedCoordinateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D068BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedCoordinateIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189D06C1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedCoordinateIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189D06F44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D07598(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedFieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v7 | (v10 > 1);
  if (v7 & 1 | (v10 > 1) | v8 & 1) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = a3;
  }
  int v14 = (int *)MEMORY[0x1E4F940E8];
  int v15 = (int *)MEMORY[0x1E4F940C8];
  unsigned int v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_85;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      BOOL v24 = v18++ >= 9;
      if (v24)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v1std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_85:
      if (v12)
      {
        char v53 = 1;
        goto LABEL_93;
      }
      if (v13)
      {
        while (1)
        {
          int v54 = *v13++;
          char v55 = 8;
          switch(v54)
          {
            case 0:
              goto LABEL_94;
            case 2:
              goto LABEL_91;
            case 3:
              char v55 = 16;
              goto LABEL_91;
            case 4:
              char v55 = 4;
LABEL_91:
              *(unsigned char *)(a1 + 60) |= v55;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_94;
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      uint64_t v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_66;
        }
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (1)
        {
          uint64_t v36 = *v14;
          uint64_t v37 = *(void *)(v3 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(v3 + *v6)) {
            break;
          }
          char v39 = *(unsigned char *)(*(void *)(v3 + *v16) + v37);
          *(void *)(v3 + v36) = v38;
          v35 |= (unint64_t)(v39 & 0x7F) << v33;
          if ((v39 & 0x80) == 0) {
            goto LABEL_69;
          }
          v33 += 7;
          BOOL v24 = v34++ >= 9;
          if (v24)
          {
            LODWORD(v3std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = 0;
            goto LABEL_71;
          }
        }
        *(unsigned char *)(v3 + *v1std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = 1;
LABEL_69:
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v3std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = 0;
        }
LABEL_71:
        *(_DWORD *)(a1 + 52) = v35;
        goto LABEL_84;
      case 2:
        if (!v28) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 24;
          goto LABEL_57;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_99;
        }
        char v52 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_82;
      case 3:
        if (!v28) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 32;
          goto LABEL_57;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_99;
        }
        char v52 = 8 * *(unsigned char *)(a1 + 60);
        goto LABEL_82;
      case 4:
        if (!v28) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 16;
LABEL_57:
          char v43 = *(void **)(a1 + v42);
          *(void *)(a1 + v42) = v41;

          --v9;
          goto LABEL_83;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v52 = 32 * *(unsigned char *)(a1 + 60);
LABEL_82:
          v9 += v52 >> 7;
LABEL_83:
          int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_84:
          if (!(v12 & 1 | (v9 != 0))) {
            goto LABEL_85;
          }
          continue;
        }
LABEL_99:
        char v53 = 0;
        int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_93:
        *(unsigned char *)(a1 + 60) |= 8u;
        *(unsigned char *)(a1 + 60) |= 0x10u;
        *(unsigned char *)(a1 + 60) |= 4u;
        if (v53)
        {
LABEL_94:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_95;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v12)
          {
LABEL_95:
            unsigned int v56 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 5:
        if (v8)
        {
          char v44 = 0;
          unsigned int v45 = 0;
          uint64_t v46 = 0;
          *(unsigned char *)(a1 + 60) |= 2u;
          while (1)
          {
            uint64_t v47 = *v14;
            uint64_t v48 = *(void *)(v3 + v47);
            unint64_t v49 = v48 + 1;
            if (v48 == -1 || v49 > *(void *)(v3 + *v6)) {
              break;
            }
            char v50 = *(unsigned char *)(*(void *)(v3 + *v16) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if ((v50 & 0x80) == 0) {
              goto LABEL_73;
            }
            v44 += 7;
            BOOL v24 = v45++ >= 9;
            if (v24)
            {
              uint64_t v46 = 0;
              goto LABEL_75;
            }
          }
          *(unsigned char *)(v3 + *v1std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = 1;
LABEL_73:
          if (*(unsigned char *)(v3 + *v15)) {
            uint64_t v46 = 0;
          }
LABEL_75:
          *(unsigned char *)(a1 + 56) = v46 != 0;
        }
        else
        {
LABEL_66:
          char v51 = PBReaderSkipValueWithTag();
          int v15 = (int *)MEMORY[0x1E4F940C8];
          if ((v51 & 1) == 0)
          {
LABEL_92:
            char v53 = 0;
            goto LABEL_93;
          }
        }
        goto LABEL_84;
      default:
        int v40 = PBReaderSkipValueWithTag();
        int v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v40) {
          goto LABEL_92;
        }
        goto LABEL_84;
    }
  }
}

void sub_189D07D18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D07E84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D086B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedFieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPCorrectedFieldReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPCorrectedFieldReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPCorrectedFieldReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPCorrectedFieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189D08840(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedFieldReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPCorrectedFieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D088A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedFieldIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_42;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_43;
          }
        case 2u:
          if (v15 == 2) {
            goto LABEL_32;
          }
          goto LABEL_46;
        case 3u:
          if (v15 == 2) {
            goto LABEL_32;
          }
          goto LABEL_46;
        case 4u:
          if (v15 == 2) {
            goto LABEL_32;
          }
          goto LABEL_46;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_32:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          BOOL v28 = 0;
          goto LABEL_45;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
LABEL_45:
  PBReaderRecallMark();
  return v28;
}

void sub_189D08D38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedFieldIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x3C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189D090C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedFlagReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 16) |= 2u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0) {
              goto LABEL_50;
            }
            v26 += 7;
            BOOL v15 = v27++ >= 9;
            if (v15)
            {
              uint64_t v28 = 0;
              goto LABEL_52;
            }
          }
          v3[*v6] = 1;
LABEL_50:
          if (v3[*v6]) {
            uint64_t v28 = 0;
          }
LABEL_52:
          BOOL v40 = v28 != 0;
          uint64_t v41 = 12;
        }
        else
        {
          if (v18 != 2)
          {
            if (v18 == 1)
            {
              char v19 = 0;
              unsigned int v20 = 0;
              uint64_t v21 = 0;
              *(unsigned char *)(a1 + 16) |= 1u;
              while (1)
              {
                uint64_t v22 = *v4;
                uint64_t v23 = *(void *)&v3[v22];
                unint64_t v24 = v23 + 1;
                if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                  break;
                }
                char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
                *(void *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if ((v25 & 0x80) == 0) {
                  goto LABEL_46;
                }
                v19 += 7;
                BOOL v15 = v20++ >= 9;
                if (v15)
                {
                  LODWORD(v21) = 0;
                  goto LABEL_48;
                }
              }
              v3[*v6] = 1;
LABEL_46:
              if (v3[*v6]) {
                LODWORD(v21) = 0;
              }
LABEL_48:
              *(_DWORD *)(a1 + 8) = v21;
            }
            else if (!PBReaderSkipValueWithTag())
            {
              goto LABEL_60;
            }
            continue;
          }
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v35 = 0;
          *(unsigned char *)(a1 + 16) |= 4u;
          while (1)
          {
            uint64_t v36 = *v4;
            uint64_t v37 = *(void *)&v3[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&v3[*v5]) {
              break;
            }
            char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
            *(void *)&v3[v36] = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if ((v39 & 0x80) == 0) {
              goto LABEL_54;
            }
            v33 += 7;
            BOOL v15 = v34++ >= 9;
            if (v15)
            {
              uint64_t v35 = 0;
              goto LABEL_56;
            }
          }
          v3[*v6] = 1;
LABEL_54:
          if (v3[*v6]) {
            uint64_t v35 = 0;
          }
LABEL_56:
          BOOL v40 = v35 != 0;
          uint64_t v41 = 13;
        }
        *(unsigned char *)(a1 + v41) = v40;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_189D09E40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedFlagReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPCorrectedFlagReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D09EA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedFlagIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_189D0A78C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedLabelReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFBFFFAFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 80) & 4) != 0));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          unint64_t v16 = 0;
        }
        else {
          unint64_t v16 = a3;
        }
        char v64 = (v16 == 0) | v15;
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v63 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_100;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_100:
      if (v15)
      {
        char v57 = 1;
        goto LABEL_112;
      }
      if (v16)
      {
        while (1)
        {
          int v58 = *v16++;
          char v59 = 64;
          switch(v58)
          {
            case 0:
              goto LABEL_113;
            case 1:
              goto LABEL_108;
            case 2:
              char v59 = 8;
              goto LABEL_108;
            case 3:
              char v59 = 32;
              goto LABEL_108;
            case 4:
              char v59 = 16;
              goto LABEL_108;
            case 5:
              char v59 = 4;
LABEL_108:
              *(unsigned char *)(a1 + 80) |= v59;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_113;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v64 & 1) == 0)
    {
      int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x40) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 48;
          goto LABEL_45;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        char v56 = 2 * *(unsigned char *)(a1 + 80);
        goto LABEL_97;
      case 2:
        if (!v31) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 8) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 24;
LABEL_45:
          char v39 = *(void **)(a1 + v37);
          *(void *)(a1 + v37) = v36;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        char v56 = 16 * *(unsigned char *)(a1 + 80);
        goto LABEL_97;
      case 3:
        if (!v31) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_111;
          }
          char v56 = 4 * *(unsigned char *)(a1 + 80);
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_111;
        }
        char v62 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v62, (void *)v3)) {
          goto LABEL_110;
        }
        PBReaderRecallMark();
        uint64_t v40 = 40;
        goto LABEL_61;
      case 4:
        if (!v31 || (*(unsigned char *)(a1 + 80) & 0x10) != 0) {
          goto LABEL_79;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_111;
        }
        char v62 = objc_alloc_init(GEORPFeatureHandle);
        if (!GEORPFeatureHandleReadAllFrom((uint64_t)v62, (void *)v3)) {
          goto LABEL_110;
        }
        PBReaderRecallMark();
        -[GEORPCorrectedLabel _addNoFlagsFeatureHandle:](a1, v62);

        goto LABEL_98;
      case 5:
        if (!v31) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_111;
          }
          char v56 = 32 * *(unsigned char *)(a1 + 80);
LABEL_97:
          v7 += v56 >> 7;
LABEL_98:
          char v15 = v63;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_99:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_100;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_111;
        }
        char v62 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v62, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v40 = 16;
LABEL_61:
          char v39 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v62;
LABEL_62:

          --v7;
          goto LABEL_98;
        }
LABEL_110:

LABEL_111:
        char v57 = 0;
        char v15 = v63;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_112:
        *(unsigned char *)(a1 + 80) |= 0x40u;
        *(unsigned char *)(a1 + 80) |= 8u;
        *(unsigned char *)(a1 + 80) |= 0x20u;
        *(unsigned char *)(a1 + 80) |= 0x10u;
        *(unsigned char *)(a1 + 80) |= 4u;
        if (v57)
        {
LABEL_113:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_114;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_114:
            unint64_t v60 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_79;
        }
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(unsigned char *)(a1 + 80) |= 1u;
        while (2)
        {
          uint64_t v44 = *v17;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(v3 + *v19) + v45);
            *(void *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v27 = v42++ >= 9;
              if (v27)
              {
                uint64_t v43 = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v43 = 0;
        }
LABEL_84:
        *(void *)(a1 + 56) = v43;
        goto LABEL_99;
      case 7:
        if (v8)
        {
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v50 = 0;
          *(unsigned char *)(a1 + 80) |= 2u;
          while (1)
          {
            uint64_t v51 = *v17;
            uint64_t v52 = *(void *)(v3 + v51);
            unint64_t v53 = v52 + 1;
            if (v52 == -1 || v53 > *(void *)(v3 + *v6)) {
              break;
            }
            char v54 = *(unsigned char *)(*(void *)(v3 + *v19) + v52);
            *(void *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if ((v54 & 0x80) == 0) {
              goto LABEL_86;
            }
            v48 += 7;
            BOOL v27 = v49++ >= 9;
            if (v27)
            {
              uint64_t v50 = 0;
              goto LABEL_88;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_86:
          if (*(unsigned char *)(v3 + *v18)) {
            uint64_t v50 = 0;
          }
LABEL_88:
          *(unsigned char *)(a1 + 76) = v50 != 0;
        }
        else
        {
LABEL_79:
          char v55 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v63;
          if ((v55 & 1) == 0)
          {
LABEL_109:
            char v57 = 0;
            goto LABEL_112;
          }
        }
        goto LABEL_99;
      default:
        int v38 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v63;
        if (!v38) {
          goto LABEL_109;
        }
        goto LABEL_99;
    }
  }
}

void sub_189D0B0F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D0B25C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D0B3C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D0B788(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D0C238(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPCorrectedLabelCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  [a1[5] readAll:1];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v2 = a1[4];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  return [a1[2] readAll:1];
}

unint64_t GEORPCorrectedLabelReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPCorrectedLabelReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORPCorrectedLabelReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORPCorrectedLabelReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPCorrectedLabelReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPCorrectedLabelCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189D0C4F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedLabelReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPCorrectedLabelReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D0C558(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedLabelIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_55;
          }
          goto LABEL_22;
        case 2u:
          if (v15 == 2) {
            goto LABEL_22;
          }
          goto LABEL_55;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1)) {
            goto LABEL_55;
          }
          goto LABEL_35;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeatureHandleIsValid(a1)) {
            goto LABEL_55;
          }
          goto LABEL_35;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_55;
          }
LABEL_35:
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_55;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_52;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_53;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_55;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_22:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_55:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_53;
      }
LABEL_52:
      a1[*v4] = 1;
LABEL_53:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEORPFeatureHandleIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_86;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_77;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_78;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_86;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_77;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_78;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_86;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_77;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_78;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_86;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_77;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_78;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_86;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_77;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_78;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_86;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_77;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_78;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_86;
          }
          unsigned int v48 = 0;
          break;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeatureHandleStyleAttributeIsValid(a1)) {
            goto LABEL_86;
          }
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_86:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v49 = *v2;
        uint64_t v50 = *(void *)&a1[v49];
        unint64_t v51 = v50 + 1;
        if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
          break;
        }
        int v52 = *(char *)(*(void *)&a1[*v5] + v50);
        *(void *)&a1[v49] = v51;
        if (v52 < 0)
        {
          BOOL v22 = v48++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_78;
      }
LABEL_77:
      a1[*v4] = 1;
LABEL_78:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v53 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v53;
}

void sub_189D0CFA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedLabelIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = *(unsigned __int8 *)(a1 + 80) > 3u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_189D0D530(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D0DBC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedSearchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFAFFFCFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 76) & 8) != 0));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          unint64_t v16 = 0;
        }
        else {
          unint64_t v16 = a3;
        }
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        char v63 = (v16 == 0) | v15;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v62 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_104;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_104:
      if (v15)
      {
        char v56 = 1;
        goto LABEL_117;
      }
      if (v16)
      {
        while (1)
        {
          int v58 = *v16++;
          char v57 = 16;
          switch(v58)
          {
            case 0:
              goto LABEL_118;
            case 1:
              goto LABEL_112;
            case 2:
              char v57 = 32;
              goto LABEL_112;
            case 5:
              char v57 = 64;
              goto LABEL_112;
            case 6:
              char v57 = 4;
              goto LABEL_112;
            case 7:
              char v57 = 8;
LABEL_112:
              *(unsigned char *)(a1 + 76) |= v57;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_118;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v63 & 1) == 0)
    {
      int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_80;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_116;
          }
          char v61 = objc_alloc_init(GEOPlaceSearchRequest);
          if (GEOPlaceSearchRequestReadAllFrom((uint64_t)v61, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            uint64_t v36 = 32;
            goto LABEL_78;
          }
          goto LABEL_115;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_116;
        }
        char v55 = 8 * *(unsigned char *)(a1 + 76);
        goto LABEL_101;
      case 2:
        if (!v31) {
          goto LABEL_80;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_116;
          }
          char v55 = 4 * *(unsigned char *)(a1 + 76);
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_116;
        }
        char v61 = objc_alloc_init(GEOPlaceSearchResponse);
        if (!GEOPlaceSearchResponseReadAllFrom((uint64_t)v61, (void *)v3, v9 & 1)) {
          goto LABEL_115;
        }
        PBReaderRecallMark();
        uint64_t v36 = 40;
        goto LABEL_78;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_80;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (2)
        {
          uint64_t v41 = *v17;
          uint64_t v42 = *(void *)(v3 + v41);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(v3 + *v19) + v42);
            *(void *)(v3 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              BOOL v27 = v39++ >= 9;
              if (v27)
              {
                LODWORD(v40) = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v40) = 0;
        }
LABEL_85:
        uint64_t v54 = 72;
        goto LABEL_90;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_80;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (2)
        {
          uint64_t v47 = *v17;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v19) + v48);
            *(void *)(v3 + v47) = v49;
            v40 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              BOOL v27 = v46++ >= 9;
              if (v27)
              {
                LODWORD(v40) = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v40) = 0;
        }
LABEL_89:
        uint64_t v54 = 68;
LABEL_90:
        *(_DWORD *)(a1 + v54) = v40;
        goto LABEL_103;
      case 5:
        if (!v31) {
          goto LABEL_80;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x40) == 0)
        {
          uint64_t v51 = PBReaderReadString();
          int v52 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v51;
          goto LABEL_79;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_116;
        }
        char v55 = 2 * *(unsigned char *)(a1 + 76);
        goto LABEL_101;
      case 6:
        if (!v31) {
          goto LABEL_80;
        }
        if ((*(unsigned char *)(a1 + 76) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_116;
          }
          char v55 = 32 * *(unsigned char *)(a1 + 76);
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_116;
        }
        char v61 = objc_alloc_init(GEOPDPlaceRequest);
        if (!GEOPDPlaceRequestReadAllFrom((uint64_t)v61, (void *)v3, v9 & 1)) {
          goto LABEL_115;
        }
        PBReaderRecallMark();
        uint64_t v36 = 16;
        goto LABEL_78;
      case 7:
        if (!v31)
        {
LABEL_80:
          char v53 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v62;
          if ((v53 & 1) == 0)
          {
LABEL_114:
            char v56 = 0;
            goto LABEL_117;
          }
LABEL_103:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_104;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 76) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_116;
          }
          char v55 = 16 * *(unsigned char *)(a1 + 76);
LABEL_101:
          v7 += v55 >> 7;
LABEL_102:
          char v15 = v62;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_103;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_116;
        }
        char v61 = objc_alloc_init(GEOPDPlaceResponse);
        if (GEOPDPlaceResponseReadAllFrom((uint64_t)v61, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v36 = 24;
LABEL_78:
          int v52 = *(void **)(a1 + v36);
          *(void *)(a1 + v36) = v61;
LABEL_79:

          --v7;
          goto LABEL_102;
        }
LABEL_115:

LABEL_116:
        char v56 = 0;
        char v15 = v62;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_117:
        *(unsigned char *)(a1 + 76) |= 0x10u;
        *(unsigned char *)(a1 + 76) |= 0x20u;
        *(unsigned char *)(a1 + 76) |= 0x40u;
        *(unsigned char *)(a1 + 76) |= 4u;
        *(unsigned char *)(a1 + 76) |= 8u;
        if (v56)
        {
LABEL_118:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_119;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_119:
            char v59 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v37 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v62;
        if (!v37) {
          goto LABEL_114;
        }
        goto LABEL_103;
    }
  }
}

void sub_189D0E574(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D0E7C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D0E930(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D0EAA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D0F2F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPCorrectedSearchCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 16) readAll:1];
  BOOL v2 = *(void **)(a1 + 24);

  return [v2 readAll:1];
}

unint64_t GEORPCorrectedSearchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPCorrectedSearchReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPCorrectedSearchReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPCorrectedSearchReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPCorrectedSearchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPCorrectedSearchCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189D0F504(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedSearchReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPCorrectedSearchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D0F568(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedSearchIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPlaceSearchRequestIsValid(a1)) {
            goto LABEL_54;
          }
          goto LABEL_57;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPlaceSearchResponseIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_54;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_43;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_55;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v23 = 0;
          break;
        case 5u:
          if (v15 == 2) {
            goto LABEL_45;
          }
          goto LABEL_57;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRequestIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_54;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceResponseIsValid(a1)) {
            goto LABEL_57;
          }
LABEL_54:
          PBReaderRecallMark();
          continue;
        default:
LABEL_45:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_55;
      }
LABEL_43:
      a1[*v4] = 1;
LABEL_55:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_189D0FAD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPCorrectedSearchIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  int v2 = *(char *)(a1 + 76);
  if (v2 < 0) {
    return 1;
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEOPlaceSearchRequestIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 76);
  }
  if ((v2 & 0x20) == 0) {
    goto LABEL_8;
  }
  if (GEOPlaceSearchResponseIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
    return 1;
  }
  LOBYTE(v2) = *(unsigned char *)(a1 + 76);
LABEL_8:
  if ((v2 & 0x40) != 0) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    if (GEOPDPlaceRequestIsDirty(*(os_unfair_lock_s **)(a1 + 16))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 76);
  }
  if ((v2 & 8) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 24);

  return (uint64_t)GEOPDPlaceResponseIsDirty(v4);
}

os_unfair_lock_s *GEORPCorrectedSearchIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPCorrectedSearchIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEORPCorrectedSearchClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (!a3)
  {
    unint64_t v11 = [a1 placeSearchRequest];
    [v11 clearSensitiveFields:a2];

    goto LABEL_10;
  }
  if ([a1 hasPlaceSearchRequest]
    && ([a1 placeSearchRequest],
        char v6 = objc_claimAutoreleasedReturnValue(),
        unsigned int v7 = GEOPlaceSearchRequestHasSensitiveFields(v6),
        v6,
        v7))
  {
    unint64_t v8 = [a1 placeSearchRequest];
    uint64_t v9 = (void *)[v8 copy];

    uint64_t v10 = [v9 location];
    [v10 clearSensitiveFields:a2];

    [a1 setPlaceSearchRequest:v9];
  }
  else
  {
    uint64_t v9 = [a1 placeSearchRequest];
    [v9 clearSensitiveFields:a2];
  }

  if (![a1 hasPlaceSearchResponse]
    || ([a1 placeSearchResponse],
        char v12 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOPlaceSearchResponseHasSensitiveFields(v12),
        v12,
        !HasSensitiveFields))
  {
LABEL_10:
    unint64_t v16 = [a1 placeSearchResponse];
    [v16 clearSensitiveFields:a2];

    if (!a3) {
      goto LABEL_14;
    }
    goto LABEL_11;
  }
  int v14 = [a1 placeSearchResponse];
  int v15 = (void *)[v14 copy];

  GEOPlaceSearchResponseClearSensitiveFields((uint64_t)v15, a2, 0);
  [a1 setPlaceSearchResponse:v15];

LABEL_11:
  if ([a1 hasPlaceRequest])
  {
    unsigned int v17 = [a1 placeRequest];
    int v18 = GEOPDPlaceRequestHasSensitiveFields(v17, a2);

    if (v18)
    {
      uint64_t v19 = [a1 placeRequest];
      id v20 = (id)[v19 copy];

      GEOPDPlaceRequestClearSensitiveFields(v20, a2, 0);
      [a1 setPlaceRequest:v20];
      goto LABEL_15;
    }
  }
LABEL_14:
  id v20 = [a1 placeRequest];
  [v20 clearSensitiveFields:a2];
LABEL_15:
}

uint64_t GEORPCorrectedSearchHasSensitiveFields(void *a1, uint64_t a2)
{
  if (!a1) {
    return 0;
  }
  uint64_t v4 = [a1 placeSearchRequest];
  if (GEOPlaceSearchRequestHasSensitiveFields(v4))
  {
    uint64_t HasSensitiveFields = 1;
  }
  else
  {
    char v6 = [a1 placeSearchResponse];
    if (GEOPlaceSearchResponseHasSensitiveFields(v6))
    {
      uint64_t HasSensitiveFields = 1;
    }
    else
    {
      unsigned int v7 = [a1 placeRequest];
      uint64_t HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v7, a2);
    }
  }

  return HasSensitiveFields;
}

void sub_189D1032C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D1091C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCurrentEnvironmentManifestURLsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -3:
        char v7 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        char v14 = v10 | (v11 > 1);
        if (v10 & 1 | (v11 > 1) | v7 & 1) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        unint64_t v16 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
        int v18 = (int *)MEMORY[0x1E4F940B8];
        uint64_t v19 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_61;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v16;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v18) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_61:
      if (v14)
      {
        char v42 = 1;
        goto LABEL_73;
      }
      if (v15)
      {
        while (1)
        {
          int v44 = *v15++;
          char v43 = 1;
          switch(v44)
          {
            case 0:
              goto LABEL_74;
            case 1:
              goto LABEL_67;
            case 2:
              char v43 = 2;
              goto LABEL_67;
            case 3:
              char v43 = 4;
LABEL_67:
              *(unsigned char *)(a1 + v19[359]) |= v43;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_74;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      int v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 3) {
      break;
    }
    if (v30 == 2)
    {
      if (v31)
      {
        if ((*(unsigned char *)(a1 + v19[359]) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_70:
            char v42 = 0;
            goto LABEL_72;
          }
          v8 += *(unsigned __int8 *)(a1 + v19[359]) << 30 >> 31;
        }
        else
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 24;
LABEL_50:
          unsigned int v39 = *(void **)(a1 + v37);
          *(void *)(a1 + v37) = v36;

          --v8;
        }
        goto LABEL_59;
      }
    }
    else
    {
      if (v30 != 1)
      {
        int v40 = PBReaderSkipValueWithTag();
        unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v40) {
          goto LABEL_69;
        }
        goto LABEL_60;
      }
      if (v31)
      {
        if ((*(unsigned char *)(a1 + v19[359]) & 1) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 16;
          goto LABEL_50;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_70;
        }
        v8 -= *(unsigned char *)(a1 + v19[359]) & 1;
LABEL_59:
        unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_60;
      }
    }
LABEL_53:
    char v41 = PBReaderSkipValueWithTag();
    unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
    if ((v41 & 1) == 0)
    {
LABEL_69:
      char v42 = 0;
      goto LABEL_73;
    }
LABEL_60:
    if (!(v14 & 1 | (v8 != 0))) {
      goto LABEL_61;
    }
  }
  if (!v31 || (*(unsigned char *)(a1 + v19[359]) & 4) != 0) {
    goto LABEL_53;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_70;
  }
  char v38 = objc_alloc_init(GEORPManifestURL);
  if (GEORPManifestURLReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEORPCurrentEnvironmentManifestURLs _addNoFlagsUrl:](a1, v38);

    uint64_t v19 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
    goto LABEL_59;
  }

  char v42 = 0;
  uint64_t v19 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
LABEL_72:
  unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_73:
  *(unsigned char *)(a1 + v19[359]) |= 1u;
  *(unsigned char *)(a1 + v19[359]) |= 2u;
  *(unsigned char *)(a1 + v19[359]) |= 4u;
  if (v42)
  {
LABEL_74:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if ((v14 & 1) == 0) {
      return v3;
    }
    goto LABEL_75;
  }
  unint64_t v3 = 0;
  if (v14)
  {
LABEL_75:
    char v45 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189D10F78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D110E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D11A20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPCurrentEnvironmentManifestURLsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEORPCurrentEnvironmentManifestURLsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPCurrentEnvironmentManifestURLsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORPCurrentEnvironmentManifestURLsReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORPCurrentEnvironmentManifestURLsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPCurrentEnvironmentManifestURLsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPCurrentEnvironmentManifestURLsCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189D11CB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCurrentEnvironmentManifestURLsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPCurrentEnvironmentManifestURLsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D11D14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCurrentEnvironmentManifestURLsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPManifestURLIsValid(a1))
        {
LABEL_31:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 2)
        {
          if (v15 != 2) {
            goto LABEL_31;
          }
        }
        else if (v17 == 1 && v15 != 2)
        {
          goto LABEL_31;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_31;
        }
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

BOOL GEORPManifestURLIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v15 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

void sub_189D12310(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPCurrentEnvironmentManifestURLsIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 52) & 0xF) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 32);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEORPManifestURLIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEORPCurrentEnvironmentManifestURLsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPCurrentEnvironmentManifestURLsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189D12834(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D12EC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFF8FFFCFFF9FFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 5) & 1)+ ((*(_WORD *)(a1 + 88) >> 3) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          unint64_t v16 = 0;
        }
        else {
          unint64_t v16 = a3;
        }
        char v70 = (v16 == 0) | v15;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        BOOL v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v69 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_120;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_120:
      if (v15)
      {
        char v63 = 1;
        goto LABEL_133;
      }
      if (v16)
      {
        while (1)
        {
          int v64 = *v16++;
          __int16 v65 = 128;
          switch(v64)
          {
            case 0:
              goto LABEL_134;
            case 2:
              goto LABEL_129;
            case 3:
              __int16 v65 = 64;
              goto LABEL_129;
            case 4:
              __int16 v65 = 16;
              goto LABEL_129;
            case 6:
              __int16 v65 = 256;
              goto LABEL_129;
            case 7:
              __int16 v65 = 32;
              goto LABEL_129;
            case 10:
              __int16 v65 = 8;
LABEL_129:
              *(_WORD *)(a1 + 88) |= v65;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_134;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v70 & 1) == 0)
    {
      int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_92;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 88) |= 2u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_95;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_97;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_95:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_97:
        uint64_t v61 = 80;
        goto LABEL_106;
      case 2:
        if (!v31) {
          goto LABEL_92;
        }
        if ((*(_WORD *)(a1 + 88) & 0x80) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 48;
          goto LABEL_51;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_132;
        }
        __int16 v62 = *(_WORD *)(a1 + 88) << 8;
        goto LABEL_117;
      case 3:
        if (!v31) {
          goto LABEL_92;
        }
        if ((*(_WORD *)(a1 + 88) & 0x40) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 40;
LABEL_51:
          char v45 = *(void **)(a1 + v44);
          *(void *)(a1 + v44) = v43;
          goto LABEL_91;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_132;
        }
        __int16 v62 = *(_WORD *)(a1 + 88) << 9;
        goto LABEL_117;
      case 4:
        if (!v31) {
          goto LABEL_92;
        }
        if ((*(_WORD *)(a1 + 88) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_132;
          }
          __int16 v62 = *(_WORD *)(a1 + 88) << 11;
          goto LABEL_117;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_132;
        }
        char v68 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v68, (void *)v3)) {
          goto LABEL_131;
        }
        PBReaderRecallMark();
        uint64_t v46 = 24;
        goto LABEL_90;
      case 6:
        if (!v31 || (*(_WORD *)(a1 + 88) & 0x100) != 0) {
          goto LABEL_92;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_132;
        }
        char v68 = objc_alloc_init(GEOPDPlace);
        if (!GEOPDPlaceReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_131;
        }
        PBReaderRecallMark();
        -[GEORPDetails _addNoFlagsPlace:](a1, v68);

        goto LABEL_118;
      case 7:
        if (!v31) {
          goto LABEL_92;
        }
        if ((*(_WORD *)(a1 + 88) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_132;
          }
          __int16 v62 = *(_WORD *)(a1 + 88) << 10;
          goto LABEL_117;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_132;
        }
        char v68 = objc_alloc_init(GEORPUpdatedLabel);
        if (!GEORPUpdatedLabelReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_131;
        }
        PBReaderRecallMark();
        uint64_t v46 = 32;
        goto LABEL_90;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_92;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (2)
        {
          uint64_t v50 = *v17;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v19) + v51);
            *(void *)(v3 + v50) = v52;
            v38 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              BOOL v27 = v49++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_101:
        uint64_t v61 = 76;
        goto LABEL_106;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_92;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 88) |= 4u;
        while (2)
        {
          uint64_t v56 = *v17;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v19) + v57);
            *(void *)(v3 + v56) = v58;
            v38 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              BOOL v27 = v55++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_105:
        uint64_t v61 = 84;
LABEL_106:
        *(_DWORD *)(a1 + v61) = v38;
        goto LABEL_119;
      case 10:
        if (!v31)
        {
LABEL_92:
          char v60 = PBReaderSkipValueWithTag();
          BOOL v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v69;
          if ((v60 & 1) == 0)
          {
LABEL_130:
            char v63 = 0;
            goto LABEL_133;
          }
LABEL_119:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_120;
          }
          continue;
        }
        if ((*(_WORD *)(a1 + 88) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_132;
          }
          __int16 v62 = *(_WORD *)(a1 + 88) << 12;
LABEL_117:
          v7 += v62 >> 15;
LABEL_118:
          char v15 = v69;
          BOOL v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_119;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_132;
        }
        char v68 = objc_alloc_init(GEORPButton);
        if (GEORPButtonReadAllFrom((uint64_t)v68, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v46 = 16;
LABEL_90:
          char v45 = *(void **)(a1 + v46);
          *(void *)(a1 + v46) = v68;
LABEL_91:

          --v7;
          goto LABEL_118;
        }
LABEL_131:

LABEL_132:
        char v63 = 0;
        char v15 = v69;
        BOOL v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_133:
        *(_WORD *)(a1 + 88) |= 0x80u;
        *(_WORD *)(a1 + 88) |= 0x40u;
        *(_WORD *)(a1 + 88) |= 0x10u;
        *(_WORD *)(a1 + 88) |= 0x100u;
        *(_WORD *)(a1 + 88) |= 0x20u;
        *(_WORD *)(a1 + 88) |= 8u;
        if (v63)
        {
LABEL_134:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_135;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_135:
            uint64_t v66 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v47 = PBReaderSkipValueWithTag();
        BOOL v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v69;
        if (!v47) {
          goto LABEL_130;
        }
        goto LABEL_119;
    }
  }
}

void sub_189D139A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D13B10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D13C80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D14044(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D145C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D153D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPDetailsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  [a1[3] readAll:1];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v2 = a1[7];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  [a1[4] readAll:1];
  return [a1[2] readAll:1];
}

unint64_t GEORPDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPDetailsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORPDetailsReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORPDetailsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPDetailsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189D156A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D1570C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDetailsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_68;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 2u:
          if (v15 == 2) {
            goto LABEL_35;
          }
          goto LABEL_68;
        case 3u:
          if (v15 == 2) {
            goto LABEL_35;
          }
          goto LABEL_68;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1)) {
            goto LABEL_68;
          }
          goto LABEL_65;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1)) {
            goto LABEL_68;
          }
          goto LABEL_65;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPUpdatedLabelIsValid(a1)) {
            goto LABEL_68;
          }
          goto LABEL_65;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_68;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_68;
          }
          unsigned int v28 = 0;
          break;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPButtonIsValid(a1)) {
            goto LABEL_68;
          }
LABEL_65:
          PBReaderRecallMark();
          continue;
        default:
LABEL_35:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_68:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_66;
      }
LABEL_61:
      a1[*v4] = 1;
LABEL_66:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEORPUpdatedLabelIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
          goto LABEL_29;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189D15FA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPDetailsIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  __int16 v2 = *(_WORD *)(a1 + 88);
  if ((v2 & 0x3D0) != 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEORPUpdatedLabelIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 0x100) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 56);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_20;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_20:

  return v3;
}

os_unfair_lock_s *GEORPDetailsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPDetailsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189D167F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D171AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsEventReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 96)), (uint16x4_t)0xFFF6FFF7FFF8FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 96) >> 6) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          unint64_t v16 = 0;
        }
        else {
          unint64_t v16 = a3;
        }
        char v88 = (v16 == 0) | v15;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v87 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_146;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_146:
      if (v15)
      {
        char v81 = 1;
        goto LABEL_159;
      }
      if (v16)
      {
        while (1)
        {
          int v83 = *v16++;
          __int16 v82 = 256;
          switch(v83)
          {
            case 0:
              goto LABEL_160;
            case 3:
              goto LABEL_154;
            case 5:
              __int16 v82 = 128;
              goto LABEL_154;
            case 8:
              __int16 v82 = 512;
              goto LABEL_154;
            case 10:
              __int16 v82 = 1024;
              goto LABEL_154;
            case 11:
              __int16 v82 = 64;
LABEL_154:
              *(_WORD *)(a1 + 96) |= v82;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_160;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v88 & 1) == 0)
    {
      int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_106;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 96) |= 0x20u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_109;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_111;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_109:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_111:
        uint64_t v79 = 92;
        goto LABEL_128;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_106;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 96) |= 2u;
        while (2)
        {
          uint64_t v45 = *v17;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v19) + v46);
            *(void *)(v3 + v4std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = v47;
            v38 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              BOOL v27 = v44++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_115:
        uint64_t v79 = 76;
        goto LABEL_128;
      case 3:
        if (!v31) {
          goto LABEL_106;
        }
        if ((*(_WORD *)(a1 + 96) & 0x100) == 0)
        {
          uint64_t v49 = PBReaderReadData();
          uint64_t v50 = 40;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_158;
        }
        __int16 v80 = *(_WORD *)(a1 + 96) << 7;
        goto LABEL_143;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_106;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 96) |= 4u;
        while (2)
        {
          uint64_t v53 = *v17;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v19) + v54);
            *(void *)(v3 + v53) = v55;
            v38 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              BOOL v27 = v52++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_119;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_119:
        uint64_t v79 = 80;
        goto LABEL_128;
      case 5:
        if (!v31) {
          goto LABEL_106;
        }
        if ((*(_WORD *)(a1 + 96) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_158;
          }
          __int16 v80 = *(_WORD *)(a1 + 96) << 8;
LABEL_143:
          v7 += v80 >> 15;
          goto LABEL_144;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_158;
        }
        unint64_t v86 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v86, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v57 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v86;
LABEL_97:

          --v7;
LABEL_144:
          char v15 = v87;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_145:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_146;
          }
          continue;
        }

LABEL_158:
        char v81 = 0;
        char v15 = v87;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_159:
        *(_WORD *)(a1 + 96) |= 0x100u;
        *(_WORD *)(a1 + 96) |= 0x80u;
        *(_WORD *)(a1 + 96) |= 0x200u;
        *(_WORD *)(a1 + 96) |= 0x400u;
        *(_WORD *)(a1 + 96) |= 0x40u;
        if (v81)
        {
LABEL_160:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_161;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_161:
            uint64_t v84 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_106;
        }
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 96) |= 8u;
        while (2)
        {
          uint64_t v61 = *v17;
          uint64_t v62 = *(void *)(v3 + v61);
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(v3 + *v19) + v62);
            *(void *)(v3 + v61) = v63;
            v38 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              BOOL v27 = v60++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_123;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_123:
        uint64_t v79 = 84;
        goto LABEL_128;
      case 8:
        if (!v31) {
          goto LABEL_106;
        }
        if ((*(_WORD *)(a1 + 96) & 0x200) == 0)
        {
          uint64_t v49 = PBReaderReadData();
          uint64_t v50 = 48;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_158;
        }
        __int16 v80 = *(_WORD *)(a1 + 96) << 6;
        goto LABEL_143;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_106;
        }
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 96) |= 0x10u;
        while (2)
        {
          uint64_t v67 = *v17;
          uint64_t v68 = *(void *)(v3 + v67);
          unint64_t v69 = v68 + 1;
          if (v68 == -1 || v69 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v70 = *(unsigned char *)(*(void *)(v3 + *v19) + v68);
            *(void *)(v3 + v67) = v69;
            v38 |= (unint64_t)(v70 & 0x7F) << v65;
            if (v70 < 0)
            {
              v65 += 7;
              BOOL v27 = v66++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_127;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_127:
        uint64_t v79 = 88;
LABEL_128:
        *(_DWORD *)(a1 + v79) = v38;
        goto LABEL_145;
      case 10:
        if (!v31) {
          goto LABEL_106;
        }
        if ((*(_WORD *)(a1 + 96) & 0x400) == 0)
        {
          uint64_t v49 = PBReaderReadString();
          uint64_t v50 = 56;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_158;
        }
        __int16 v80 = 32 * *(_WORD *)(a1 + 96);
        goto LABEL_143;
      case 11:
        if (!v31) {
          goto LABEL_106;
        }
        if ((*(_WORD *)(a1 + 96) & 0x40) == 0)
        {
          uint64_t v49 = PBReaderReadString();
          uint64_t v50 = 24;
LABEL_96:
          uint64_t v57 = *(void **)(a1 + v50);
          *(void *)(a1 + v50) = v49;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_158;
        }
        __int16 v80 = *(_WORD *)(a1 + 96) << 9;
        goto LABEL_143;
      case 12:
        if (v8)
        {
          char v71 = 0;
          unsigned int v72 = 0;
          uint64_t v73 = 0;
          *(_WORD *)(a1 + 96) |= 1u;
          while (1)
          {
            uint64_t v74 = *v17;
            uint64_t v75 = *(void *)(v3 + v74);
            unint64_t v76 = v75 + 1;
            if (v75 == -1 || v76 > *(void *)(v3 + *v6)) {
              break;
            }
            char v77 = *(unsigned char *)(*(void *)(v3 + *v19) + v75);
            *(void *)(v3 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if ((v77 & 0x80) == 0) {
              goto LABEL_130;
            }
            v71 += 7;
            BOOL v27 = v72++ >= 9;
            if (v27)
            {
              uint64_t v73 = 0;
              goto LABEL_132;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_130:
          if (*(unsigned char *)(v3 + *v18)) {
            uint64_t v73 = 0;
          }
LABEL_132:
          *(void *)(a1 + 16) = v73;
        }
        else
        {
LABEL_106:
          char v78 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v87;
          if ((v78 & 1) == 0)
          {
LABEL_156:
            char v81 = 0;
            goto LABEL_159;
          }
        }
        goto LABEL_145;
      default:
        int v58 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v87;
        if (!v58) {
          goto LABEL_156;
        }
        goto LABEL_145;
    }
  }
}

void sub_189D17E20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D18004(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D1910C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D19278(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D1A9D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsEventReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPDirectionsEventReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPDirectionsEventReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPDirectionsEventReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPDirectionsEventReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189D1AB80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsEventReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPDirectionsEventReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D1ABE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDirectionsEventIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_84;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_80;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_81;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_84;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_80;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_81;
          }
        case 3u:
          if (v15 == 2) {
            goto LABEL_70;
          }
          goto LABEL_84;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_84;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_80;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_81;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_84;
          }
          PBReaderRecallMark();
          continue;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_84;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_80;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_81;
          }
        case 8u:
          if (v15 == 2) {
            goto LABEL_70;
          }
          goto LABEL_84;
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_84;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_80;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_81;
          }
        case 0xAu:
          if (v15 == 2) {
            goto LABEL_70;
          }
          goto LABEL_84;
        case 0xBu:
          if (v15 == 2) {
            goto LABEL_70;
          }
          goto LABEL_84;
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_84;
          }
          unsigned int v43 = 0;
          break;
        default:
LABEL_70:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_84:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v44 = *v2;
        uint64_t v45 = *(void *)&a1[v44];
        unint64_t v46 = v45 + 1;
        if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
          break;
        }
        int v47 = *(char *)(*(void *)&a1[*v5] + v45);
        *(void *)&a1[v44] = v46;
        if (v47 < 0)
        {
          BOOL v22 = v43++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_81;
      }
LABEL_80:
      a1[*v4] = 1;
LABEL_81:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

void sub_189D1B2E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDirectionsEventIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(_WORD *)(a1 + 96) & 0xFC0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_189D1B860(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D1C04C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsProblemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFF9FFFEFFFDFFFALL), (int8x8_t)0x1000100010001))+ (HIBYTE(*(_WORD *)(a1 + 92)) & 1)+ ((*(_WORD *)(a1 + 92) >> 4) & 1)+ ((*(_WORD *)(a1 + 92) >> 5) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 4;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          unint64_t v16 = 0;
        }
        else {
          unint64_t v16 = a3;
        }
        char v64 = (v16 == 0) | v15;
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v63 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_112;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_112:
      if (v15)
      {
        char v57 = 1;
        goto LABEL_127;
      }
      if (v16)
      {
        while (1)
        {
          int v59 = *v16++;
          __int16 v58 = 8;
          switch(v59)
          {
            case 0:
              goto LABEL_128;
            case 3:
              goto LABEL_122;
            case 4:
              __int16 v58 = 64;
              goto LABEL_122;
            case 10:
              __int16 v58 = 4;
              goto LABEL_122;
            case 11:
              __int16 v58 = 128;
              goto LABEL_122;
            case 14:
              __int16 v58 = 256;
              goto LABEL_122;
            case 15:
              __int16 v58 = 16;
              goto LABEL_122;
            case 16:
              __int16 v58 = 32;
LABEL_122:
              *(_WORD *)(a1 + 92) |= v58;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_128;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v64 & 1) == 0)
    {
      int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 3:
        if (!v31) {
          goto LABEL_90;
        }
        if ((*(_WORD *)(a1 + 92) & 8) == 0)
        {
          uint64_t v36 = PBReaderReadData();
          uint64_t v37 = 24;
          goto LABEL_43;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_126;
        }
        __int16 v56 = *(_WORD *)(a1 + 92) << 12;
        goto LABEL_109;
      case 4:
        if (!v31) {
          goto LABEL_90;
        }
        if ((*(_WORD *)(a1 + 92) & 0x40) == 0)
        {
          uint64_t v36 = PBReaderReadData();
          uint64_t v37 = 48;
LABEL_43:
          unsigned int v38 = *(void **)(a1 + v37);
          *(void *)(a1 + v37) = v36;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_126;
        }
        __int16 v56 = *(_WORD *)(a1 + 92) << 9;
        goto LABEL_109;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_90;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 92) |= 2u;
        while (2)
        {
          uint64_t v43 = *v17;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(v3 + *v19) + v44);
            *(void *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v27 = v41++ >= 9;
              if (v27)
              {
                LODWORD(v42) = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v42) = 0;
        }
LABEL_95:
        uint64_t v55 = 88;
        goto LABEL_100;
      case 10:
        if (!v31 || (*(_WORD *)(a1 + 92) & 4) != 0) {
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_126;
        }
        uint64_t v62 = objc_alloc_init(GEOTransitSuggestedRoute);
        if (!GEOTransitSuggestedRouteReadAllFrom((uint64_t)v62, (void *)v3, v9 & 1)) {
          goto LABEL_125;
        }
        PBReaderRecallMark();
        -[GEORPDirectionsProblem _addNoFlagsClientSuggestedRoute:](a1, v62);
        goto LABEL_89;
      case 11:
        if (!v31 || (*(_WORD *)(a1 + 92) & 0x80) != 0) {
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_126;
        }
        uint64_t v62 = objc_alloc_init(GEORPSuggestedRouteIndex);
        if (!GEORPSuggestedRouteIndexReadAllFrom((uint64_t)v62, (void *)v3)) {
          goto LABEL_125;
        }
        PBReaderRecallMark();
        -[GEORPDirectionsProblem _addNoFlagsProblematicRouteIndex:](a1, v62);
        goto LABEL_89;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_90;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 92) |= 1u;
        while (2)
        {
          uint64_t v49 = *v17;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v19) + v50);
            *(void *)(v3 + v49) = v51;
            v42 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              BOOL v27 = v48++ >= 9;
              if (v27)
              {
                LODWORD(v42) = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v42) = 0;
        }
LABEL_99:
        uint64_t v55 = 84;
LABEL_100:
        *(_DWORD *)(a1 + v5std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = v42;
        goto LABEL_111;
      case 14:
        if (!v31) {
          goto LABEL_90;
        }
        if ((*(_WORD *)(a1 + 92) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_126;
          }
          __int16 v56 = *(_WORD *)(a1 + 92) << 7;
          goto LABEL_109;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_126;
        }
        uint64_t v62 = objc_alloc_init(GEORPUserSearchInput);
        if (!GEORPUserSearchInputReadAllFrom((uint64_t)v62, (void *)v3, v9 & 1)) {
          goto LABEL_125;
        }
        PBReaderRecallMark();
        uint64_t v53 = 64;
        goto LABEL_82;
      case 15:
        if (!v31) {
          goto LABEL_90;
        }
        if ((*(_WORD *)(a1 + 92) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_126;
          }
          __int16 v56 = *(_WORD *)(a1 + 92) << 11;
LABEL_109:
          v7 += v56 >> 15;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_126;
          }
          uint64_t v62 = objc_alloc_init(GEORPUserSearchInput);
          if (!GEORPUserSearchInputReadAllFrom((uint64_t)v62, (void *)v3, v9 & 1)) {
            goto LABEL_125;
          }
          PBReaderRecallMark();
          uint64_t v53 = 32;
LABEL_82:
          unsigned int v38 = *(void **)(a1 + v53);
          *(void *)(a1 + v53) = v62;
LABEL_83:

          --v7;
        }
        goto LABEL_110;
      case 16:
        if (!v31 || (*(_WORD *)(a1 + 92) & 0x20) != 0)
        {
LABEL_90:
          char v54 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v63;
          if ((v54 & 1) == 0)
          {
LABEL_124:
            char v57 = 0;
            goto LABEL_127;
          }
LABEL_111:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_112;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_126;
        }
        uint64_t v62 = objc_alloc_init(GEORPInstructionCorrection);
        if (GEORPInstructionCorrectionReadAllFrom((uint64_t)v62, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEORPDirectionsProblem _addNoFlagsInstructionCorrection:](a1, v62);
LABEL_89:

LABEL_110:
          char v15 = v63;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_111;
        }
LABEL_125:

LABEL_126:
        char v57 = 0;
        char v15 = v63;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_127:
        *(_WORD *)(a1 + 92) |= 8u;
        *(_WORD *)(a1 + 92) |= 0x40u;
        *(_WORD *)(a1 + 92) |= 4u;
        *(_WORD *)(a1 + 92) |= 0x80u;
        *(_WORD *)(a1 + 92) |= 0x100u;
        *(_WORD *)(a1 + 92) |= 0x10u;
        *(_WORD *)(a1 + 92) |= 0x20u;
        if (v57)
        {
LABEL_128:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_129;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_129:
            unsigned int v60 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v39 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v63;
        if (!v39) {
          goto LABEL_124;
        }
        goto LABEL_111;
    }
  }
}

void sub_189D1CB0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D1CCF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D1D0B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D1D4E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D1D650(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D1D7C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D1E914(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPDirectionsProblemCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v2 = a1[2];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v26;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v26 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v25 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v4);
  }

  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v7 = a1[7];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v22;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v21 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
    }
    while (v9);
  }

  [a1[8] readAll:1];
  [a1[4] readAll:1];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v12 = a1[5];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v18;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v18 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v17 + 1) + 8 * v16++), "readAll:", 1, (void)v17);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
    }
    while (v14);
  }
}

unint64_t GEORPDirectionsProblemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPDirectionsProblemReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPDirectionsProblemReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPDirectionsProblemReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPDirectionsProblemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPDirectionsProblemCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189D1ED00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsProblemReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPDirectionsProblemReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D1ED64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDirectionsProblemIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 3u:
          if (v15 != 2) {
            goto LABEL_59;
          }
          goto LABEL_26;
        case 4u:
          if (v15 == 2) {
            goto LABEL_26;
          }
          goto LABEL_59;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_59;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_52;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_57;
          }
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitSuggestedRouteIsValid(a1)) {
            goto LABEL_59;
          }
          goto LABEL_56;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPSuggestedRouteIndexIsValid(a1)) {
            goto LABEL_59;
          }
          goto LABEL_56;
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_59;
          }
          unsigned int v23 = 0;
          break;
        case 0xEu:
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPUserSearchInputIsValid(a1)) {
            goto LABEL_59;
          }
          goto LABEL_56;
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPInstructionCorrectionIsValid(a1)) {
            goto LABEL_59;
          }
LABEL_56:
          PBReaderRecallMark();
          continue;
        default:
LABEL_26:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_59:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_57;
      }
LABEL_52:
      a1[*v4] = 1;
LABEL_57:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEORPSuggestedRouteIndexIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 5)
      {
        if (v15 != 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_44;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              unsigned int v28 = v15++;
              if (v28 <= 8) {
                continue;
              }
            }
            goto LABEL_58;
          }
        }
        if (!PBReaderPlaceMark())
        {
LABEL_61:
          PBReaderRecallMark();
          return 0;
        }
LABEL_48:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v34 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v35 = *v2;
            uint64_t v36 = *(void *)&a1[v35];
            unint64_t v37 = v36 + 1;
            if (v36 == -1 || v37 > *(void *)&a1[*v3]) {
              break;
            }
            int v38 = *(char *)(*(void *)&a1[*v5] + v36);
            *(void *)&a1[v35] = v37;
            if (v38 < 0)
            {
              BOOL v13 = v34++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_48;
          }
          a1[*v4] = 1;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 3)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v29 = 0;
          while (1)
          {
            uint64_t v30 = *v2;
            uint64_t v31 = *(void *)&a1[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
              goto LABEL_44;
            }
            int v33 = *(char *)(*(void *)&a1[*v5] + v31);
            *(void *)&a1[v30] = v32;
            if (v33 < 0)
            {
              BOOL v23 = v29++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_58;
          }
        }
        if (v17 == 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_58;
          }
LABEL_44:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_61;
        }
      }
LABEL_58:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v39 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v39;
}

BOOL GEORPUserSearchInputIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_48;
          }
          goto LABEL_22;
        case 2u:
          if (v15 == 2) {
            goto LABEL_22;
          }
          goto LABEL_48;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1)) {
            goto LABEL_48;
          }
          goto LABEL_35;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteEntryIsValid(a1)) {
            goto LABEL_48;
          }
          goto LABEL_35;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_48;
          }
LABEL_35:
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_48;
          }
          unsigned int v17 = 0;
          break;
        default:
LABEL_22:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_48:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_36;
      }
      a1[*v4] = 1;
LABEL_36:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORPInstructionCorrectionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_51;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_48;
          }
        case 2u:
          if (v15 == 2) {
            goto LABEL_47;
          }
          goto LABEL_51;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPhotoWithMetadataIsValid(a1)) {
            goto LABEL_51;
          }
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_51;
          }
          unsigned int v23 = 0;
          break;
        case 5u:
          if (v15 == 2) {
            goto LABEL_47;
          }
          goto LABEL_51;
        case 6u:
          if (v15 == 2) {
            goto LABEL_47;
          }
          goto LABEL_51;
        case 7u:
          if (v15 == 2) {
            goto LABEL_47;
          }
          goto LABEL_51;
        default:
LABEL_47:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_51:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_48;
      }
LABEL_41:
      a1[*v4] = 1;
LABEL_48:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_189D1FDFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPDirectionsProblemIsDirty(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  __int16 v2 = *(_WORD *)(a1 + 92);
  if ((v2 & 0x2CC) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 92) & 0x100) != 0)
  {
    if (GEORPUserSearchInputIsDirty(*(os_unfair_lock_s **)(a1 + 64))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 92);
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEORPUserSearchInputIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 92);
  }
  if ((v2 & 0x20) == 0)
  {
    if ((v2 & 4) == 0) {
      return 0;
    }
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v5 = *(id *)(a1 + 16);
    uint64_t v6 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)v17;
LABEL_15:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v17 != v8) {
          objc_enumerationMutation(v5);
        }
        if (GEOTransitSuggestedRouteIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1) + 8 * v9))) {
          break;
        }
        if (v7 == ++v9)
        {
          uint64_t v7 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
          if (v7) {
            goto LABEL_15;
          }
          goto LABEL_21;
        }
      }
    }
    else
    {
LABEL_21:

      if ((*(_WORD *)(a1 + 92) & 0x20) == 0) {
        return 0;
      }
      long long v14 = 0u;
      long long v15 = 0u;
      long long v12 = 0u;
      long long v13 = 0u;
      id v5 = *(id *)(a1 + 40);
      uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
      if (!v3)
      {
LABEL_32:

        return v3;
      }
      uint64_t v10 = *(void *)v13;
LABEL_24:
      uint64_t v11 = 0;
      while (1)
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v5);
        }
        if (GEORPInstructionCorrectionIsDirty(*(os_unfair_lock_s **)(*((void *)&v12 + 1) + 8 * v11))) {
          break;
        }
        if (v3 == ++v11)
        {
          uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
          if (v3) {
            goto LABEL_24;
          }
          goto LABEL_32;
        }
      }
    }
    uint64_t v3 = 1;
    goto LABEL_32;
  }
  return 1;
}

os_unfair_lock_s *GEORPDirectionsProblemIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPDirectionsProblemIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189D20944(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeatureHandleReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 60) |= 1u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_75;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_77;
              }
            }
            v3[*v6] = 1;
LABEL_75:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_77:
            uint64_t v61 = 32;
            goto LABEL_102;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 60) |= 2u;
            while (2)
            {
              uint64_t v27 = *v4;
              uint64_t v28 = *(void *)&v3[v27];
              unint64_t v29 = v28 + 1;
              if (v28 == -1 || v29 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
                *(void *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_81;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_81:
            uint64_t v61 = 36;
            goto LABEL_102;
          case 3u:
            char v31 = 0;
            unsigned int v32 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 60) |= 4u;
            while (2)
            {
              uint64_t v33 = *v4;
              uint64_t v34 = *(void *)&v3[v33];
              unint64_t v35 = v34 + 1;
              if (v34 == -1 || v35 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v36 = *(unsigned char *)(*(void *)&v3[*v7] + v34);
                *(void *)&v3[v33] = v35;
                v20 |= (unint64_t)(v36 & 0x7F) << v31;
                if (v36 < 0)
                {
                  v31 += 7;
                  BOOL v15 = v32++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_85;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_85:
            uint64_t v61 = 40;
            goto LABEL_102;
          case 4u:
            char v37 = 0;
            unsigned int v38 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 60) |= 8u;
            while (2)
            {
              uint64_t v39 = *v4;
              uint64_t v40 = *(void *)&v3[v39];
              unint64_t v41 = v40 + 1;
              if (v40 == -1 || v41 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v42 = *(unsigned char *)(*(void *)&v3[*v7] + v40);
                *(void *)&v3[v39] = v41;
                v20 |= (unint64_t)(v42 & 0x7F) << v37;
                if (v42 < 0)
                {
                  v37 += 7;
                  BOOL v15 = v38++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_89;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_89:
            uint64_t v61 = 44;
            goto LABEL_102;
          case 5u:
            char v43 = 0;
            unsigned int v44 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 60) |= 0x20u;
            while (2)
            {
              uint64_t v45 = *v4;
              uint64_t v46 = *(void *)&v3[v45];
              unint64_t v47 = v46 + 1;
              if (v46 == -1 || v47 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v48 = *(unsigned char *)(*(void *)&v3[*v7] + v46);
                *(void *)&v3[v45] = v47;
                v20 |= (unint64_t)(v48 & 0x7F) << v43;
                if (v48 < 0)
                {
                  v43 += 7;
                  BOOL v15 = v44++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_93;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_93:
            uint64_t v61 = 52;
            goto LABEL_102;
          case 6u:
            char v49 = 0;
            unsigned int v50 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 60) |= 0x10u;
            while (2)
            {
              uint64_t v51 = *v4;
              uint64_t v52 = *(void *)&v3[v51];
              unint64_t v53 = v52 + 1;
              if (v52 == -1 || v53 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v54 = *(unsigned char *)(*(void *)&v3[*v7] + v52);
                *(void *)&v3[v51] = v53;
                v20 |= (unint64_t)(v54 & 0x7F) << v49;
                if (v54 < 0)
                {
                  v49 += 7;
                  BOOL v15 = v50++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_97;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_97:
            uint64_t v61 = 48;
            goto LABEL_102;
          case 7u:
            char v55 = 0;
            unsigned int v56 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 60) |= 0x40u;
            break;
          case 8u:
            if (!PBReaderPlaceMark()) {
              goto LABEL_105;
            }
            -[GEORPFeatureHandle _reserveStyleAttributes:](a1, 1uLL);
            if (!GEORPFeatureHandleStyleAttributeReadAllFrom((_DWORD *)(*(void *)(a1 + 8) + 8 * *(void *)(a1 + 16)), (uint64_t)v3))goto LABEL_105; {
            PBReaderRecallMark();
            }
            ++*(void *)(a1 + 16);
            continue;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_105;
            }
            continue;
        }
        while (1)
        {
          uint64_t v57 = *v4;
          uint64_t v58 = *(void *)&v3[v57];
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)&v3[*v5]) {
            break;
          }
          char v60 = *(unsigned char *)(*(void *)&v3[*v7] + v58);
          *(void *)&v3[v57] = v59;
          v20 |= (unint64_t)(v60 & 0x7F) << v55;
          if ((v60 & 0x80) == 0) {
            goto LABEL_99;
          }
          v55 += 7;
          BOOL v15 = v56++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_101;
          }
        }
        v3[*v6] = 1;
LABEL_99:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_101:
        uint64_t v61 = 56;
LABEL_102:
        *(_DWORD *)(a1 + v61) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v62 = v3[*v6] == 0;
  }
  else
  {
LABEL_105:
    BOOL v62 = 0;
  }
  objc_sync_exit(v3);

  return v62;
}

void sub_189D255C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeatureHandleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeatureHandleReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D2564C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeatureHandleStyleAttributeIsValid(void *a1)
{
  uint64_t v5 = [a1 position];
  uint64_t v6 = [a1 length];
  BOOL v2 = GEORPFeatureHandleStyleAttributeReadAllFrom(&v4, (uint64_t)a1);
  PBReaderRecallMark();
  return v2;
}

uint64_t GEORPFeatureHandleStyleAttributeWriteTo()
{
  PBDataWriterWriteInt32Field();

  return PBDataWriterWriteInt32Field();
}

id GEORPFeatureHandleStyleAttributeDescription(unsigned int *a1)
{
  BOOL v2 = NSString;
  id v3 = _GEORPFeatureHandleStyleAttributeDictionaryRepresentation(a1);
  int v4 = [v2 stringWithFormat:@"GEORPFeatureHandleStyleAttribute<%p> %@", a1, v3];

  return v4;
}

id _GEORPFeatureHandleStyleAttributeDictionaryRepresentation(unsigned int *a1)
{
  BOOL v2 = [MEMORY[0x1E4F1CA60] dictionary];
  id v3 = [NSNumber numberWithInt:*a1];
  [v2 setObject:v3 forKey:@"key"];

  int v4 = [NSNumber numberWithInt:a1[1]];
  [v2 setObject:v4 forKey:@"value"];

  return v2;
}

void _GEORPFeatureHandleStyleAttributeFromDictionaryRepresentation(void *a1, _DWORD *a2)
{
  id v3 = a1;
  int v4 = [v3 objectForKeyedSubscript:@"key"];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    *a2 = [v4 intValue];
  }

  id v5 = [v3 objectForKeyedSubscript:@"value"];

  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    a2[1] = [v5 intValue];
  }
}

BOOL GEORPFeatureHandleStyleAttributeReadFrom(_DWORD *a1, uint64_t a2)
{
  return GEORPFeatureHandleStyleAttributeReadAllFrom(a1, a2);
}

BOOL GEORPFeatureHandleStyleAttributeReadAllFrom(_DWORD *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  int v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = a1 + 1;
    char v8 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v3;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v4)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          unint64_t v11 = 0;
          int v17 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *vstd::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = 1;
LABEL_12:
      int v17 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v17 || (v11 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v11 >> 3) == 1) {
        break;
      }
      if ((v11 >> 3) == 2)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            uint64_t v27 = v7;
            goto LABEL_38;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v8) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            break;
          }
          v19 += 7;
          BOOL v26 = v20++ > 8;
          if (v26)
          {
            LODWORD(v21) = 0;
            uint64_t v27 = v7;
            goto LABEL_41;
          }
        }
        uint64_t v27 = v7;
LABEL_39:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_41:
        *uint64_t v27 = v21;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_42:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v28 = 0;
    unsigned int v29 = 0;
    uint64_t v21 = 0;
    while (1)
    {
      uint64_t v30 = *v3;
      uint64_t v31 = *(void *)(a2 + v30);
      unint64_t v32 = v31 + 1;
      if (v31 == -1 || v32 > *(void *)(a2 + *v4)) {
        break;
      }
      char v33 = *(unsigned char *)(*(void *)(a2 + *v8) + v31);
      *(void *)(a2 + v30) = v32;
      v21 |= (unint64_t)(v33 & 0x7F) << v28;
      if ((v33 & 0x80) == 0)
      {
        uint64_t v27 = a1;
        goto LABEL_39;
      }
      v28 += 7;
      BOOL v26 = v29++ > 8;
      if (v26)
      {
        LODWORD(v21) = 0;
        uint64_t v27 = a1;
        goto LABEL_41;
      }
    }
    uint64_t v27 = a1;
LABEL_38:
    *(unsigned char *)(a2 + *vstd::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = 1;
    goto LABEL_39;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL GEORPFeatureHandleStyleAttributeEquals(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t GEORPFeatureHandleStyleAttributeHash()
{
  return PBHashBytes();
}

void sub_189D26784(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPInstructionCorrectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFBFFFEFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 76) & 0x40) != 0));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        int v17 = (int *)MEMORY[0x1E4F940E8];
        char v18 = (int *)MEMORY[0x1E4F940C8];
        char v63 = (v16 == 0) | v15;
        char v19 = (int *)MEMORY[0x1E4F940B8];
        char v62 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_98;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_98:
      if (v15)
      {
        char v56 = 1;
        goto LABEL_110;
      }
      if (v16)
      {
        while (1)
        {
          int v57 = *v16++;
          char v58 = 4;
          switch(v57)
          {
            case 0:
              goto LABEL_111;
            case 2:
              goto LABEL_106;
            case 3:
              char v58 = 16;
              goto LABEL_106;
            case 5:
              char v58 = 32;
              goto LABEL_106;
            case 6:
              char v58 = 8;
              goto LABEL_106;
            case 7:
              char v58 = 64;
LABEL_106:
              *(unsigned char *)(a1 + 76) |= v58;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_111;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v63 & 1) == 0)
    {
      unint64_t v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_77;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_79;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_77:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_79:
        uint64_t v54 = 68;
        goto LABEL_84;
      case 2:
        if (!v31) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 76) & 4) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 16;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_109;
        }
        char v55 = 32 * *(unsigned char *)(a1 + 76);
        goto LABEL_95;
      case 3:
        if (!v31) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_109;
          }
          char v55 = 8 * *(unsigned char *)(a1 + 76);
LABEL_95:
          v7 += v55 >> 7;
LABEL_96:
          char v15 = v62;
          char v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_97:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_98;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_109;
        }
        uint64_t v61 = objc_alloc_init(GEORPPhotoWithMetadata);
        if (GEORPPhotoWithMetadataReadAllFrom((uint64_t)v61, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v46 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v61;
LABEL_73:

          --v7;
          goto LABEL_96;
        }

LABEL_109:
        char v56 = 0;
        char v15 = v62;
        char v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_110:
        *(unsigned char *)(a1 + 76) |= 4u;
        *(unsigned char *)(a1 + 76) |= 0x10u;
        *(unsigned char *)(a1 + 76) |= 0x20u;
        *(unsigned char *)(a1 + 76) |= 8u;
        *(unsigned char *)(a1 + 76) |= 0x40u;
        if (v56)
        {
LABEL_111:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_112;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_112:
            unint64_t v59 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (2)
        {
          uint64_t v49 = *v17;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v19) + v50);
            *(void *)(v3 + v49) = v51;
            v38 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              BOOL v27 = v48++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_83:
        uint64_t v54 = 72;
LABEL_84:
        *(_DWORD *)(a1 + v54) = v38;
        goto LABEL_97;
      case 5:
        if (!v31) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) == 0)
        {
          uint64_t v44 = PBReaderReadData();
          uint64_t v45 = 40;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_109;
        }
        char v55 = 4 * *(unsigned char *)(a1 + 76);
        goto LABEL_95;
      case 6:
        if (!v31) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 76) & 8) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 24;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_109;
        }
        char v55 = 16 * *(unsigned char *)(a1 + 76);
        goto LABEL_95;
      case 7:
        if (!v31)
        {
LABEL_74:
          char v53 = PBReaderSkipValueWithTag();
          char v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v62;
          if ((v53 & 1) == 0)
          {
LABEL_107:
            char v56 = 0;
            goto LABEL_110;
          }
          goto LABEL_97;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x40) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 48;
LABEL_72:
          uint64_t v46 = *(void **)(a1 + v45);
          *(void *)(a1 + v4std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = v44;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_109;
        }
        char v55 = 2 * *(unsigned char *)(a1 + 76);
        goto LABEL_95;
      default:
        int v43 = PBReaderSkipValueWithTag();
        char v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v62;
        if (!v43) {
          goto LABEL_107;
        }
        goto LABEL_97;
    }
  }
}

void sub_189D27098(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D2727C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D273E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D27550(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D27D04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPInstructionCorrectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPInstructionCorrectionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPInstructionCorrectionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPInstructionCorrectionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPInstructionCorrectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189D27EA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPInstructionCorrectionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPInstructionCorrectionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D27F0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPhotoWithMetadataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2) {
            goto LABEL_34;
          }
          goto LABEL_24;
        case 2u:
        case 4u:
        case 5u:
          if (v16 != 1) {
            goto LABEL_34;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v20 = v19 + 8, v20 <= *(void *)&a1[*v3])) {
            *(void *)&a1[v18] = v20;
          }
          else {
            a1[v14] = 1;
          }
          goto LABEL_31;
        case 3u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_34;
          }
          PBReaderRecallMark();
          goto LABEL_31;
        default:
LABEL_24:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_34:
            PBReaderRecallMark();
            return 0;
          }
LABEL_31:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_32;
          }
          break;
      }
    }
  }
LABEL_32:
  BOOL v21 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v21;
}

void sub_189D28378(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPInstructionCorrectionIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 76);
  if ((v2 & 0x84) != 0) {
    return 1;
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEORPPhotoWithMetadataIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 76);
  }
  if ((v2 & 0x28) != 0) {
    return 1;
  }
  return (v2 >> 6) & 1;
}

os_unfair_lock_s *GEORPInstructionCorrectionIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPInstructionCorrectionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189D28844(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D28E1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPManifestURLReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = a3;
  }
  int v15 = (int *)MEMORY[0x1E4F940E8];
  int v16 = (int *)MEMORY[0x1E4F940C8];
  if (v12) {
    BOOL v17 = 1;
  }
  else {
    BOOL v17 = v14 == 0;
  }
  uint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v16)) {
      goto LABEL_62;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v15;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v16) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v16);
    if (*(unsigned char *)(v3 + *v16)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        char v41 = 1;
        goto LABEL_72;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            int v43 = *v14++;
            int v42 = v43;
            if (v43 != 1 && v42 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_73;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v17)
    {
      BOOL v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 != 2)
    {
      if (v29 != 1)
      {
        int v38 = PBReaderSkipValueWithTag();
        int v16 = (int *)MEMORY[0x1E4F940C8];
        if (!v38) {
          goto LABEL_70;
        }
        goto LABEL_58;
      }
      if (v30)
      {
        if ((*(unsigned char *)(a1 + 44) & 1) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 16;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_71;
        }
        v9 -= *(unsigned char *)(a1 + 44) & 1;
LABEL_57:
        int v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_58:
        if (v9) {
          char v40 = 1;
        }
        else {
          char v40 = v13;
        }
        if ((v40 & 1) == 0) {
          goto LABEL_62;
        }
        continue;
      }
LABEL_51:
      char v39 = PBReaderSkipValueWithTag();
      int v16 = (int *)MEMORY[0x1E4F940C8];
      if ((v39 & 1) == 0)
      {
LABEL_70:
        char v41 = 0;
        goto LABEL_72;
      }
      goto LABEL_58;
    }
    break;
  }
  if (!v30) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0)
  {
    uint64_t v35 = PBReaderReadString();
    uint64_t v36 = 24;
LABEL_48:
    unsigned int v37 = *(void **)(a1 + v36);
    *(void *)(a1 + v36) = v35;

    int v16 = (int *)MEMORY[0x1E4F940C8];
    --v9;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_57;
  }
LABEL_71:
  char v41 = 0;
  int v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v41)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v16) == 0;
    if (!v13) {
      return v3;
    }
    goto LABEL_74;
  }
  unint64_t v3 = 0;
  if (v13)
  {
LABEL_74:
    uint64_t v44 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189D2935C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D29780(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPManifestURLReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPManifestURLReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPManifestURLReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPManifestURLReadAllFrom_initialTag;
  }
  unint64_t v6 = GEORPManifestURLReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v6;
}

void sub_189D2990C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPManifestURLReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t v4 = GEORPManifestURLReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return v4;
}

void sub_189D29970(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D29B00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPManifestURLIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189D29DB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D2A130(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPMapLocationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFCFFFEFFFFLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 2;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        char v55 = (v16 == 0) | v15;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v19 = (int *)MEMORY[0x1E4F940B8];
        unsigned int v20 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        char v54 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_76;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v19) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_76:
      if (v15)
      {
        char v49 = 1;
        goto LABEL_89;
      }
      if (v16)
      {
        while (1)
        {
          int v51 = *v16++;
          char v50 = 4;
          switch(v51)
          {
            case 0:
              goto LABEL_90;
            case 1:
              goto LABEL_83;
            case 2:
              char v50 = 2;
              goto LABEL_83;
            case 5:
              char v50 = 16;
              goto LABEL_83;
            case 6:
              char v50 = 8;
LABEL_83:
              *(unsigned char *)(a1 + v20[367]) |= v50;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_90;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v15;
    if ((v55 & 1) == 0)
    {
      int v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + v20[367]) & 4) == 0)
        {
          uint64_t v37 = PBReaderReadData();
          uint64_t v38 = 24;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_86;
        }
        char v48 = 32 * *(unsigned char *)(a1 + v20[367]);
        goto LABEL_71;
      case 2:
        if (!v32) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + v20[367]) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_86;
          }
          char v48 = *(unsigned char *)(a1 + v20[367]) << 6;
          goto LABEL_71;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        char v39 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_87;
        }
        PBReaderRecallMark();
        uint64_t v40 = 16;
        goto LABEL_56;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_61;
        }
        *(unsigned char *)(a1 + v20[367]) |= 1u;
        uint64_t v41 = *v17;
        unint64_t v42 = *(void *)(v3 + v41);
        if (v42 <= 0xFFFFFFFFFFFFFFFBLL && v42 + 4 <= *(void *)(v3 + *v6))
        {
          int v43 = *(_DWORD *)(*(void *)(v3 + *v19) + v42);
          *(void *)(v3 + v41) = v42 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          int v43 = 0;
        }
        *(_DWORD *)(a1 + 60) = v43;
        goto LABEL_75;
      case 5:
        if (!v32) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + v20[367]) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_86;
          }
          char v48 = 8 * *(unsigned char *)(a1 + v20[367]);
LABEL_71:
          v7 += v48 >> 7;
LABEL_72:
          char v15 = v54;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_75:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_76;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        char v39 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v39, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v40 = 40;
LABEL_56:
          uint64_t v45 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
          unsigned int v20 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
          goto LABEL_72;
        }
LABEL_87:

        char v49 = 0;
        unsigned int v20 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
LABEL_88:
        char v15 = v54;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_89:
        *(unsigned char *)(a1 + v20[367]) |= 4u;
        *(unsigned char *)(a1 + v20[367]) |= 2u;
        *(unsigned char *)(a1 + v20[367]) |= 0x10u;
        *(unsigned char *)(a1 + v20[367]) |= 8u;
        if (v49)
        {
LABEL_90:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_91;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_91:
            char v52 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 6:
        if (!v32)
        {
LABEL_61:
          char v47 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v54;
          if ((v47 & 1) == 0)
          {
LABEL_85:
            char v49 = 0;
            goto LABEL_89;
          }
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + v20[367]) & 8) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 32;
LABEL_60:
          uint64_t v46 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          --v7;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_86:
          char v49 = 0;
          goto LABEL_88;
        }
        char v48 = 16 * *(unsigned char *)(a1 + v20[367]);
        goto LABEL_71;
      default:
        int v44 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v54;
        if (!v44) {
          goto LABEL_85;
        }
        goto LABEL_75;
    }
  }
}

void sub_189D2A924(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D2AAF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D2AC60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D2B328(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPMapLocationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPMapLocationReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPMapLocationReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPMapLocationReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPMapLocationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 16) readAll:1];
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189D2B4E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPMapLocationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPMapLocationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D2B544(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPMapLocationIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2) {
            goto LABEL_39;
          }
          goto LABEL_34;
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_39;
          }
          goto LABEL_32;
        case 3u:
          if (v16 != 5) {
            goto LABEL_39;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v20 = v19 + 4, v20 <= *(void *)&a1[*v3])) {
            *(void *)&a1[v18] = v20;
          }
          else {
            a1[v14] = 1;
          }
          goto LABEL_35;
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
            goto LABEL_39;
          }
LABEL_32:
          PBReaderRecallMark();
          goto LABEL_35;
        case 6u:
          if (v16 == 2) {
            goto LABEL_34;
          }
          goto LABEL_39;
        default:
LABEL_34:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_39:
            PBReaderRecallMark();
            return 0;
          }
LABEL_35:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_38;
          }
          break;
      }
    }
  }
LABEL_38:
  BOOL v21 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v21;
}

void sub_189D2B9C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPMapLocationIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 64) & 0x3E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189D2BDD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D2C39C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPMerchantLookupContextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 124);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 120)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint16x4_t v11 = (uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 140));
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)(*(void *)&vshl_u16(v11, (uint16x4_t)0xFFF7FFF5FFF8FFF6) & 0xFF01FF01FF01FF01))
                         + ((*(_WORD *)(a1 + 140) >> 12) & 1)
                         + ((*(_WORD *)(a1 + 140) >> 7) & 1)
                         + ((*(_WORD *)(a1 + 140) >> 5) & 1))
      + (unsigned __int16)vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16(v11, (uint16x4_t)0xFFFAFFFCFFF3FFF2), (int8x8_t)0x1000100010001));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v15 = v12 > 7;
        char v16 = v10 | v15;
        if (((v10 | v15) | v8)) {
          BOOL v17 = 0;
        }
        else {
          BOOL v17 = a3;
        }
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        char v75 = (v17 == 0) | v16;
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        char v74 = v10 | v15;
        break;
      default:
        ++v12;
LABEL_6:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_151;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_151:
      if (v16)
      {
        char v68 = 1;
        goto LABEL_153;
      }
      if (v17)
      {
        while (1)
        {
          int v69 = *v17++;
          __int16 v70 = 256;
          switch(v69)
          {
            case 0:
              goto LABEL_169;
            case 2:
              goto LABEL_168;
            case 3:
              __int16 v70 = 1024;
              goto LABEL_168;
            case 4:
              __int16 v70 = 2048;
              goto LABEL_168;
            case 5:
              __int16 v70 = 512;
              goto LABEL_168;
            case 6:
              __int16 v70 = 4096;
              goto LABEL_168;
            case 7:
              __int16 v70 = 128;
              goto LABEL_168;
            case 8:
              __int16 v70 = 32;
              goto LABEL_168;
            case 10:
              __int16 v70 = 0x4000;
              goto LABEL_168;
            case 11:
              __int16 v70 = 0x2000;
              goto LABEL_168;
            case 12:
              __int16 v70 = 16;
              goto LABEL_168;
            case 16:
              __int16 v70 = 64;
LABEL_168:
              *(_WORD *)(a1 + 140) |= v70;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_169;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v16;
    if ((v75 & 1) == 0)
    {
      int v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_109;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(_WORD *)(a1 + 140) |= 1u;
        while (1)
        {
          uint64_t v40 = *v18;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v20) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_112;
          }
          v37 += 7;
          BOOL v28 = v38++ >= 9;
          if (v28)
          {
            uint64_t v39 = 0;
            goto LABEL_114;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_112:
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v39 = 0;
        }
LABEL_114:
        *(void *)(a1 + 64) = v39;
        goto LABEL_147;
      case 2:
        if (!v32) {
          goto LABEL_109;
        }
        if ((*(_WORD *)(a1 + 140) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_174;
          }
          __int16 v67 = *(_WORD *)(a1 + 140) << 7;
          goto LABEL_145;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_174;
        }
        uint64_t v73 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v73, (void *)v3)) {
          goto LABEL_173;
        }
        PBReaderRecallMark();
        uint64_t v44 = 48;
        goto LABEL_107;
      case 3:
        if (!v32) {
          goto LABEL_109;
        }
        if ((*(_WORD *)(a1 + 140) & 0x400) == 0)
        {
          uint64_t v45 = PBReaderReadString();
          uint64_t v46 = 72;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_174;
        }
        __int16 v67 = 32 * *(_WORD *)(a1 + 140);
        goto LABEL_145;
      case 4:
        if (!v32) {
          goto LABEL_109;
        }
        if ((*(_WORD *)(a1 + 140) & 0x800) == 0)
        {
          uint64_t v45 = PBReaderReadString();
          uint64_t v46 = 80;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_174;
        }
        __int16 v67 = 16 * *(_WORD *)(a1 + 140);
        goto LABEL_145;
      case 5:
        if (!v32) {
          goto LABEL_109;
        }
        if ((*(_WORD *)(a1 + 140) & 0x200) == 0)
        {
          uint64_t v45 = PBReaderReadString();
          uint64_t v46 = 56;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_174;
        }
        __int16 v67 = *(_WORD *)(a1 + 140) << 6;
        goto LABEL_145;
      case 6:
        if (!v32) {
          goto LABEL_109;
        }
        if ((*(_WORD *)(a1 + 140) & 0x1000) == 0)
        {
          uint64_t v45 = PBReaderReadString();
          uint64_t v46 = 88;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_174;
        }
        __int16 v67 = 8 * *(_WORD *)(a1 + 140);
        goto LABEL_145;
      case 7:
        if (!v32) {
          goto LABEL_109;
        }
        if ((*(_WORD *)(a1 + 140) & 0x80) == 0)
        {
          uint64_t v45 = PBReaderReadString();
          uint64_t v46 = 40;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_174;
        }
        __int16 v67 = *(_WORD *)(a1 + 140) << 8;
        goto LABEL_145;
      case 8:
        if (!v32) {
          goto LABEL_109;
        }
        if ((*(_WORD *)(a1 + 140) & 0x20) == 0)
        {
          uint64_t v45 = PBReaderReadString();
          uint64_t v46 = 24;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_174;
        }
        __int16 v67 = *(_WORD *)(a1 + 140) << 10;
        goto LABEL_145;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_109;
        }
        *(_WORD *)(a1 + 140) |= 2u;
        uint64_t v47 = *v18;
        unint64_t v48 = *(void *)(v3 + v47);
        if (v48 <= 0xFFFFFFFFFFFFFFF7 && v48 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v49 = *(void *)(*(void *)(v3 + *v20) + v48);
          *(void *)(v3 + v47) = v48 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v49 = 0;
        }
        *(void *)(a1 + 104) = v49;
        goto LABEL_147;
      case 10:
        if (!v32) {
          goto LABEL_109;
        }
        if ((*(_WORD *)(a1 + 140) & 0x4000) == 0)
        {
          uint64_t v45 = PBReaderReadString();
          uint64_t v46 = 112;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_174;
        }
        __int16 v67 = 2 * *(_WORD *)(a1 + 140);
        goto LABEL_145;
      case 11:
        if (!v32) {
          goto LABEL_109;
        }
        if ((*(_WORD *)(a1 + 140) & 0x2000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_174;
          }
          __int16 v67 = 4 * *(_WORD *)(a1 + 140);
          goto LABEL_145;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_174;
        }
        uint64_t v73 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v73, (void *)v3, v9 & 1)) {
          goto LABEL_173;
        }
        PBReaderRecallMark();
        uint64_t v44 = 96;
        goto LABEL_107;
      case 12:
        if (!v32) {
          goto LABEL_109;
        }
        if ((*(_WORD *)(a1 + 140) & 0x10) == 0)
        {
          uint64_t v45 = PBReaderReadString();
          uint64_t v46 = 16;
LABEL_83:
          char v50 = *(void **)(a1 + v46);
          *(void *)(a1 + v46) = v45;
          goto LABEL_108;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_174;
        }
        __int16 v67 = *(_WORD *)(a1 + 140) << 11;
        goto LABEL_145;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_109;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v53 = 0;
        *(_WORD *)(a1 + 140) |= 8u;
        while (2)
        {
          uint64_t v54 = *v18;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v20) + v55);
            *(void *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              BOOL v28 = v52++ >= 9;
              if (v28)
              {
                uint64_t v53 = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v53 = 0;
        }
LABEL_118:
        *(unsigned char *)(a1 + 136) = v53 != 0;
        goto LABEL_147;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_109;
        }
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v60 = 0;
        *(_WORD *)(a1 + 140) |= 4u;
        while (2)
        {
          uint64_t v61 = *v18;
          uint64_t v62 = *(void *)(v3 + v61);
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(v3 + *v20) + v62);
            *(void *)(v3 + v61) = v63;
            v60 |= (unint64_t)(v64 & 0x7F) << v58;
            if (v64 < 0)
            {
              v58 += 7;
              BOOL v28 = v59++ >= 9;
              if (v28)
              {
                LODWORD(v60) = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v60) = 0;
        }
LABEL_122:
        *(_DWORD *)(a1 + 132) = v60;
        goto LABEL_147;
      case 16:
        if (!v32)
        {
LABEL_109:
          char v66 = PBReaderSkipValueWithTag();
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          char v16 = v74;
          if ((v66 & 1) == 0)
          {
LABEL_172:
            char v68 = 0;
            goto LABEL_153;
          }
LABEL_147:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_151;
          }
          continue;
        }
        if ((*(_WORD *)(a1 + 140) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_174;
          }
          __int16 v67 = *(_WORD *)(a1 + 140) << 9;
LABEL_145:
          v7 += v67 >> 15;
LABEL_146:
          char v16 = v74;
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_147;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_174;
        }
        uint64_t v73 = objc_alloc_init(GEOPDBankTransactionInformation);
        if (GEOPDBankTransactionInformationReadAllFrom((uint64_t)v73, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v44 = 32;
LABEL_107:
          char v50 = *(void **)(a1 + v44);
          *(void *)(a1 + v44) = v73;
LABEL_108:

          --v7;
          goto LABEL_146;
        }
LABEL_173:

LABEL_174:
        char v68 = 0;
        char v16 = v74;
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_153:
        *(_WORD *)(a1 + 140) |= 0x100u;
        *(_WORD *)(a1 + 140) |= 0x400u;
        *(_WORD *)(a1 + 140) |= 0x800u;
        *(_WORD *)(a1 + 140) |= 0x200u;
        *(_WORD *)(a1 + 140) |= 0x1000u;
        *(_WORD *)(a1 + 140) |= 0x80u;
        *(_WORD *)(a1 + 140) |= 0x20u;
        *(_WORD *)(a1 + 140) |= 0x4000u;
        *(_WORD *)(a1 + 140) |= 0x2000u;
        *(_WORD *)(a1 + 140) |= 0x10u;
        *(_WORD *)(a1 + 140) |= 0x40u;
        if (v68)
        {
LABEL_169:
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v16) {
            goto LABEL_170;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v16 & 1) == 0) {
          return v3;
        }
LABEL_170:
        char v71 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      default:
        int v65 = PBReaderSkipValueWithTag();
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        char v16 = v74;
        if (!v65) {
          goto LABEL_172;
        }
        goto LABEL_147;
    }
  }
}

void sub_189D2D150(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D2D2BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D2D428(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D2D594(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D2D700(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D2D868(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D2DA4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D2DBB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D2DD20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D2E110(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D2EF60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPMerchantLookupContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 124))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPMerchantLookupContextReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 128));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 120) = [v8 position];
  *(_DWORD *)(a1 + 124) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPMerchantLookupContextReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPMerchantLookupContextReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPMerchantLookupContextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 48) readAll:1];
    [*(id *)(a1 + 96) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 128));
  return Specified;
}

void sub_189D2F12C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPMerchantLookupContextReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPMerchantLookupContextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D2F190(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPMerchantLookupContextIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_82;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_71;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_79;
          }
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_82;
          }
          goto LABEL_78;
        case 3u:
          if (v16 == 2) {
            goto LABEL_73;
          }
          goto LABEL_82;
        case 4u:
          if (v16 == 2) {
            goto LABEL_73;
          }
          goto LABEL_82;
        case 5u:
          if (v16 == 2) {
            goto LABEL_73;
          }
          goto LABEL_82;
        case 6u:
          if (v16 == 2) {
            goto LABEL_73;
          }
          goto LABEL_82;
        case 7u:
          if (v16 == 2) {
            goto LABEL_73;
          }
          goto LABEL_82;
        case 8u:
          if (v16 == 2) {
            goto LABEL_73;
          }
          goto LABEL_82;
        case 9u:
          if (v16 != 1) {
            goto LABEL_82;
          }
          uint64_t v24 = *v2;
          unint64_t v25 = *(void *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_72;
          }
          unint64_t v26 = v25 + 8;
          if (v26 > *(void *)&a1[*v3]) {
            goto LABEL_72;
          }
          *(void *)&a1[v24] = v26;
          continue;
        case 0xAu:
          if (v16 == 2) {
            goto LABEL_73;
          }
          goto LABEL_82;
        case 0xBu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1)) {
            goto LABEL_82;
          }
          goto LABEL_78;
        case 0xCu:
          if (v16 == 2) {
            goto LABEL_73;
          }
          goto LABEL_82;
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_82;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_71;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v23 = v27++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_79;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_82;
          }
          unsigned int v32 = 0;
          break;
        case 0x10u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDBankTransactionInformationIsValid(a1)) {
            goto LABEL_82;
          }
LABEL_78:
          PBReaderRecallMark();
          continue;
        default:
LABEL_73:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_82:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v23 = v32++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_79;
      }
LABEL_71:
      uint64_t v14 = *v4;
LABEL_72:
      a1[v14] = 1;
LABEL_79:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

void sub_189D2F8E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPMerchantLookupContextIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  __int16 v2 = *(_WORD *)(a1 + 140);
  if ((v2 & 0xDFA0) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 140) & 0x2000) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 96))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 140);
  }
  if ((v2 & 0x10) != 0) {
    return 1;
  }
  if ((v2 & 0x40) == 0) {
    return 0;
  }
  unint64_t v4 = *(os_unfair_lock_s **)(a1 + 32);

  return (uint64_t)GEOPDBankTransactionInformationIsDirty(v4);
}

os_unfair_lock_s *GEORPMerchantLookupContextIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPMerchantLookupContextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 32);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEORPMerchantLookupContextClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3)
  {
    if ([a1 hasTransactionLocation]
      && ([a1 transactionLocation],
          id v5 = objc_claimAutoreleasedReturnValue(),
          int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
          v5,
          HasSensitiveFields))
    {
      unsigned int v7 = [a1 transactionLocation];
      unint64_t v8 = (_DWORD *)[v7 copy];

      GEOLocationClearSensitiveFields(v8);
      [a1 setTransactionLocation:v8];
    }
    else
    {
      unint64_t v8 = [a1 transactionLocation];
      [v8 clearSensitiveFields:a2];
    }

    if ([a1 hasMerchantBankTransactionInfo])
    {
      uint64_t v10 = [a1 merchantBankTransactionInfo];
      int v11 = GEOPDBankTransactionInformationHasSensitiveFields(v10);

      if (v11)
      {
        char v12 = [a1 merchantBankTransactionInfo];
        id v13 = (id)[v12 copy];

        GEOPDBankTransactionInformationClearSensitiveFields((uint64_t)v13, a2, 0);
        [a1 setMerchantBankTransactionInfo:v13];
        goto LABEL_11;
      }
    }
  }
  else
  {
    uint64_t v9 = [a1 transactionLocation];
    [v9 clearSensitiveFields:a2];
  }
  id v13 = [a1 merchantBankTransactionInfo];
  [v13 clearSensitiveFields:a2];
LABEL_11:
}

uint64_t GEORPMerchantLookupContextHasSensitiveFields(void *a1)
{
  if (!a1) {
    return 0;
  }
  __int16 v2 = [a1 transactionLocation];
  if (GEOLocationHasSensitiveFields((uint64_t)v2))
  {
    uint64_t HasSensitiveFields = 1;
  }
  else
  {
    unint64_t v4 = [a1 merchantBankTransactionInfo];
    uint64_t HasSensitiveFields = GEOPDBankTransactionInformationHasSensitiveFields(v4);
  }
  return HasSensitiveFields;
}

void sub_189D3020C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPMerchantLookupCorrectionsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    unint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 12) |= 4u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              unsigned int v27 = &OBJC_IVAR___GEORPMerchantLookupCorrections__isOtherIssue;
              goto LABEL_49;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              uint64_t v21 = 0;
              unsigned int v27 = &OBJC_IVAR___GEORPMerchantLookupCorrections__isOtherIssue;
              goto LABEL_51;
            }
          }
          unsigned int v27 = &OBJC_IVAR___GEORPMerchantLookupCorrections__isOtherIssue;
LABEL_48:
          v3[*v6] = 1;
        }
        else if (v18 == 2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 12) |= 2u;
          while (1)
          {
            uint64_t v36 = *v4;
            uint64_t v37 = *(void *)&v3[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&v3[*v5])
            {
              unsigned int v27 = &OBJC_IVAR___GEORPMerchantLookupCorrections__isMerchantIncorrect;
              goto LABEL_48;
            }
            char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
            *(void *)&v3[v36] = v38;
            v21 |= (unint64_t)(v39 & 0x7F) << v34;
            if ((v39 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v26 = v35++ > 8;
            if (v26)
            {
              uint64_t v21 = 0;
              unsigned int v27 = &OBJC_IVAR___GEORPMerchantLookupCorrections__isMerchantIncorrect;
              goto LABEL_51;
            }
          }
          unsigned int v27 = &OBJC_IVAR___GEORPMerchantLookupCorrections__isMerchantIncorrect;
        }
        else
        {
          if (v18 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_58;
            }
            continue;
          }
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              unsigned int v27 = &OBJC_IVAR___GEORPMerchantLookupCorrections__isCategoryIncorrect;
              goto LABEL_48;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              uint64_t v21 = 0;
              unsigned int v27 = &OBJC_IVAR___GEORPMerchantLookupCorrections__isCategoryIncorrect;
              goto LABEL_51;
            }
          }
          unsigned int v27 = &OBJC_IVAR___GEORPMerchantLookupCorrections__isCategoryIncorrect;
        }
LABEL_49:
        if (v3[*v6]) {
          uint64_t v21 = 0;
        }
LABEL_51:
        *(unsigned char *)(a1 + *v27) = v21 != 0;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_58:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_189D312E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPMerchantLookupCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPMerchantLookupCorrectionsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D31344(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPMerchantLookupCorrectionsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEORPNavigationSettingsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    unint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(_WORD *)(a1 + 52) |= 4u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_87;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                uint64_t v20 = 0;
                goto LABEL_89;
              }
            }
            v3[*v6] = 1;
LABEL_87:
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_89:
            uint64_t v81 = 32;
            goto LABEL_110;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v20 = 0;
            *(_WORD *)(a1 + 52) |= 1u;
            while (2)
            {
              uint64_t v27 = *v4;
              uint64_t v28 = *(void *)&v3[v27];
              unint64_t v29 = v28 + 1;
              if (v28 == -1 || v29 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
                *(void *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    uint64_t v20 = 0;
                    goto LABEL_93;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_93:
            uint64_t v81 = 8;
            goto LABEL_110;
          case 3u:
            char v31 = 0;
            unsigned int v32 = 0;
            uint64_t v33 = 0;
            *(_WORD *)(a1 + 52) |= 0x40u;
            while (2)
            {
              uint64_t v34 = *v4;
              uint64_t v35 = *(void *)&v3[v34];
              unint64_t v36 = v35 + 1;
              if (v35 == -1 || v36 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v37 = *(unsigned char *)(*(void *)&v3[*v7] + v35);
                *(void *)&v3[v34] = v36;
                v33 |= (unint64_t)(v37 & 0x7F) << v31;
                if (v37 < 0)
                {
                  v31 += 7;
                  BOOL v15 = v32++ >= 9;
                  if (v15)
                  {
                    uint64_t v33 = 0;
                    goto LABEL_97;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v33 = 0;
            }
LABEL_97:
            BOOL v82 = v33 != 0;
            uint64_t v83 = 46;
            goto LABEL_119;
          case 4u:
            char v38 = 0;
            unsigned int v39 = 0;
            uint64_t v40 = 0;
            *(_WORD *)(a1 + 52) |= 0x20u;
            while (2)
            {
              uint64_t v41 = *v4;
              uint64_t v42 = *(void *)&v3[v41];
              unint64_t v43 = v42 + 1;
              if (v42 == -1 || v43 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v44 = *(unsigned char *)(*(void *)&v3[*v7] + v42);
                *(void *)&v3[v41] = v43;
                v40 |= (unint64_t)(v44 & 0x7F) << v38;
                if (v44 < 0)
                {
                  v38 += 7;
                  BOOL v15 = v39++ >= 9;
                  if (v15)
                  {
                    uint64_t v40 = 0;
                    goto LABEL_101;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v40 = 0;
            }
LABEL_101:
            BOOL v82 = v40 != 0;
            uint64_t v83 = 45;
            goto LABEL_119;
          case 5u:
            char v45 = 0;
            unsigned int v46 = 0;
            uint64_t v47 = 0;
            *(_WORD *)(a1 + 52) |= 0x100u;
            while (2)
            {
              uint64_t v48 = *v4;
              uint64_t v49 = *(void *)&v3[v48];
              unint64_t v50 = v49 + 1;
              if (v49 == -1 || v50 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v51 = *(unsigned char *)(*(void *)&v3[*v7] + v49);
                *(void *)&v3[v48] = v50;
                v47 |= (unint64_t)(v51 & 0x7F) << v45;
                if (v51 < 0)
                {
                  v45 += 7;
                  BOOL v15 = v46++ >= 9;
                  if (v15)
                  {
                    uint64_t v47 = 0;
                    goto LABEL_105;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v47 = 0;
            }
LABEL_105:
            BOOL v82 = v47 != 0;
            uint64_t v83 = 48;
            goto LABEL_119;
          case 6u:
            char v52 = 0;
            unsigned int v53 = 0;
            uint64_t v20 = 0;
            *(_WORD *)(a1 + 52) |= 2u;
            while (2)
            {
              uint64_t v54 = *v4;
              uint64_t v55 = *(void *)&v3[v54];
              unint64_t v56 = v55 + 1;
              if (v55 == -1 || v56 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v57 = *(unsigned char *)(*(void *)&v3[*v7] + v55);
                *(void *)&v3[v54] = v56;
                v20 |= (unint64_t)(v57 & 0x7F) << v52;
                if (v57 < 0)
                {
                  v52 += 7;
                  BOOL v15 = v53++ >= 9;
                  if (v15)
                  {
                    uint64_t v20 = 0;
                    goto LABEL_109;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_109:
            uint64_t v81 = 16;
LABEL_110:
            *(void *)(a1 + v81) = v20;
            continue;
          case 7u:
            char v58 = 0;
            unsigned int v59 = 0;
            uint64_t v60 = 0;
            *(_WORD *)(a1 + 52) |= 0x10u;
            while (2)
            {
              uint64_t v61 = *v4;
              uint64_t v62 = *(void *)&v3[v61];
              unint64_t v63 = v62 + 1;
              if (v62 == -1 || v63 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v64 = *(unsigned char *)(*(void *)&v3[*v7] + v62);
                *(void *)&v3[v61] = v63;
                v60 |= (unint64_t)(v64 & 0x7F) << v58;
                if (v64 < 0)
                {
                  v58 += 7;
                  BOOL v15 = v59++ >= 9;
                  if (v15)
                  {
                    uint64_t v60 = 0;
                    goto LABEL_114;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v60 = 0;
            }
LABEL_114:
            BOOL v82 = v60 != 0;
            uint64_t v83 = 44;
            goto LABEL_119;
          case 8u:
            uint64_t v65 = PBReaderReadString();
            char v66 = *(void **)(a1 + 24);
            *(void *)(a1 + 24) = v65;

            continue;
          case 9u:
            char v67 = 0;
            unsigned int v68 = 0;
            uint64_t v69 = 0;
            *(_WORD *)(a1 + 52) |= 0x80u;
            while (2)
            {
              uint64_t v70 = *v4;
              uint64_t v71 = *(void *)&v3[v70];
              unint64_t v72 = v71 + 1;
              if (v71 == -1 || v72 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v73 = *(unsigned char *)(*(void *)&v3[*v7] + v71);
                *(void *)&v3[v70] = v72;
                v69 |= (unint64_t)(v73 & 0x7F) << v67;
                if (v73 < 0)
                {
                  v67 += 7;
                  BOOL v15 = v68++ >= 9;
                  if (v15)
                  {
                    uint64_t v69 = 0;
                    goto LABEL_118;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v69 = 0;
            }
LABEL_118:
            BOOL v82 = v69 != 0;
            uint64_t v83 = 47;
LABEL_119:
            *(unsigned char *)(a1 + v83) = v82;
            continue;
          case 0xAu:
            char v74 = 0;
            unsigned int v75 = 0;
            uint64_t v76 = 0;
            *(_WORD *)(a1 + 52) |= 8u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_127;
            }
            continue;
        }
        while (1)
        {
          uint64_t v77 = *v4;
          uint64_t v78 = *(void *)&v3[v77];
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)&v3[*v5]) {
            break;
          }
          char v80 = *(unsigned char *)(*(void *)&v3[*v7] + v78);
          *(void *)&v3[v77] = v79;
          v76 |= (unint64_t)(v80 & 0x7F) << v74;
          if ((v80 & 0x80) == 0) {
            goto LABEL_123;
          }
          v74 += 7;
          BOOL v15 = v75++ >= 9;
          if (v15)
          {
            LODWORD(v76) = 0;
            goto LABEL_125;
          }
        }
        v3[*v6] = 1;
LABEL_123:
        if (v3[*v6]) {
          LODWORD(v76) = 0;
        }
LABEL_125:
        *(_DWORD *)(a1 + 40) = v76;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v84 = v3[*v6] == 0;
  }
  else
  {
LABEL_127:
    BOOL v84 = 0;
  }
  objc_sync_exit(v3);

  return v84;
}

void sub_189D33100(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPNavigationSettingsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPNavigationSettingsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D3318C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPNavigationSettingsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_98;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_98;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_98;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_98;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_98;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_98;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_98;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 8u:
          if (v15 == 2) {
            goto LABEL_76;
          }
          goto LABEL_98;
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_98;
          }
          unsigned int v53 = 0;
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              BOOL v22 = v53++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_98;
          }
          unsigned int v58 = 0;
          break;
        default:
LABEL_76:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_98:
          BOOL v63 = 0;
          goto LABEL_97;
      }
      while (1)
      {
        uint64_t v59 = *v2;
        uint64_t v60 = *(void *)&a1[v59];
        unint64_t v61 = v60 + 1;
        if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
          break;
        }
        int v62 = *(char *)(*(void *)&a1[*v5] + v60);
        *(void *)&a1[v59] = v61;
        if (v62 < 0)
        {
          BOOL v22 = v58++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_95;
      }
LABEL_94:
      a1[*v4] = 1;
LABEL_95:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v63 = a1[*v4] == 0;
LABEL_97:
  PBReaderRecallMark();
  return v63;
}

void sub_189D342F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPNotificationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    int v14 = 0;
  }
  else {
    int v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  int v16 = (int *)MEMORY[0x1E4F940E8];
  unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_62;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        char v41 = 1;
        goto LABEL_74;
      }
      if (!v14) {
        goto LABEL_75;
      }
      while (1)
      {
        int v43 = *v14++;
        int v42 = v43;
        if (v43 == 1) {
          break;
        }
        if (v42 == 2)
        {
          char v44 = 1;
LABEL_71:
          *(unsigned char *)(a1 + 44) |= v44;
        }
        else if (!v42)
        {
          goto LABEL_75;
        }
      }
      char v44 = 2;
      goto LABEL_71;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v15)
    {
      unint64_t v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 != 2)
    {
      if (v29 != 1)
      {
        int v38 = PBReaderSkipValueWithTag();
        unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v38) {
          goto LABEL_72;
        }
        goto LABEL_58;
      }
      if (v30)
      {
        if ((*(unsigned char *)(a1 + 44) & 2) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 24;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_73;
        }
        v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
LABEL_57:
        unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_58:
        if (v9) {
          char v40 = 1;
        }
        else {
          char v40 = v13;
        }
        if ((v40 & 1) == 0) {
          goto LABEL_62;
        }
        continue;
      }
LABEL_51:
      char v39 = PBReaderSkipValueWithTag();
      unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
      if ((v39 & 1) == 0)
      {
LABEL_72:
        char v41 = 0;
        goto LABEL_74;
      }
      goto LABEL_58;
    }
    break;
  }
  if (!v30) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 44) & 1) == 0)
  {
    uint64_t v35 = PBReaderReadString();
    uint64_t v36 = 16;
LABEL_48:
    int v37 = *(void **)(a1 + v36);
    *(void *)(a1 + v36) = v35;

    unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
    --v9;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    v9 -= *(unsigned char *)(a1 + 44) & 1;
    goto LABEL_57;
  }
LABEL_73:
  char v41 = 0;
  unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_74:
  *(unsigned char *)(a1 + 44) |= 2u;
  *(unsigned char *)(a1 + 44) |= 1u;
  if (v41)
  {
LABEL_75:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if (v13) {
      goto LABEL_76;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v13)
    {
LABEL_76:
      uint64_t v45 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_189D34840(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D34C68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPNotificationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPNotificationReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPNotificationReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPNotificationReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPNotificationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189D34DF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPNotificationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPNotificationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D34E5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPNotificationIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v15 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

void sub_189D351A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPNotificationIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189D35448(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPersonalizedMapsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        unint64_t v20 = v12 >> 3;
        if ((v12 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_53;
          }
          unsigned int v28 = objc_alloc_init(GEORPAddress);
          if (!GEORPAddressReadAllFrom((uint64_t)v28, v5, a3))
          {

            goto LABEL_53;
          }
          PBReaderRecallMark();
          unint64_t v29 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v28;
        }
        else
        {
          if (v20 == 2)
          {
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 24) |= 2u;
            while (1)
            {
              uint64_t v32 = *v6;
              uint64_t v33 = *(void *)&v5[v32];
              unint64_t v34 = v33 + 1;
              if (v33 == -1 || v34 > *(void *)&v5[*v7]) {
                break;
              }
              char v35 = *(unsigned char *)(*(void *)&v5[*v9] + v33);
              *(void *)&v5[v32] = v34;
              v23 |= (unint64_t)(v35 & 0x7F) << v30;
              if ((v35 & 0x80) == 0) {
                goto LABEL_46;
              }
              v30 += 7;
              BOOL v17 = v31++ >= 9;
              if (v17)
              {
                LODWORD(v23) = 0;
                goto LABEL_48;
              }
            }
            v5[*v8] = 1;
LABEL_46:
            if (v5[*v8]) {
              LODWORD(v23) = 0;
            }
LABEL_48:
            uint64_t v36 = 20;
          }
          else
          {
            if (v20 != 1)
            {
              if (!PBReaderSkipValueWithTag()) {
                goto LABEL_53;
              }
              continue;
            }
            char v21 = 0;
            unsigned int v22 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 24) |= 1u;
            while (1)
            {
              uint64_t v24 = *v6;
              uint64_t v25 = *(void *)&v5[v24];
              unint64_t v26 = v25 + 1;
              if (v25 == -1 || v26 > *(void *)&v5[*v7]) {
                break;
              }
              char v27 = *(unsigned char *)(*(void *)&v5[*v9] + v25);
              *(void *)&v5[v24] = v26;
              v23 |= (unint64_t)(v27 & 0x7F) << v21;
              if ((v27 & 0x80) == 0) {
                goto LABEL_42;
              }
              v21 += 7;
              BOOL v17 = v22++ >= 9;
              if (v17)
              {
                LODWORD(v23) = 0;
                goto LABEL_44;
              }
            }
            v5[*v8] = 1;
LABEL_42:
            if (v5[*v8]) {
              LODWORD(v23) = 0;
            }
LABEL_44:
            uint64_t v36 = 16;
          }
          *(_DWORD *)(a1 + v36) = v23;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v37 = v5[*v8] == 0;
  }
  else
  {
LABEL_53:
    BOOL v37 = 0;
  }
  objc_sync_exit(v5);

  return v37;
}

void sub_189D36368(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPersonalizedMapsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPPersonalizedMapsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D363CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPersonalizedMapsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAddressIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
        }
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_46;
        }
      }
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

void sub_189D36C70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPhotoWithMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 68) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 68) >> 4) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          char v16 = 0;
        }
        else {
          char v16 = a3;
        }
        unint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        if (v14) {
          BOOL v18 = 1;
        }
        else {
          BOOL v18 = v16 == 0;
        }
        BOOL v59 = v18;
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_82;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_82:
      if (v15)
      {
        char v51 = 1;
LABEL_93:
        uint64_t v55 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        goto LABEL_94;
      }
      if (!v16) {
        goto LABEL_95;
      }
      while (1)
      {
        int v53 = *v16++;
        int v52 = v53;
        if (v53 == 1) {
          break;
        }
        if (v52 == 3)
        {
          char v54 = 16;
LABEL_91:
          *(unsigned char *)(a1 + 68) |= v54;
        }
        else if (!v52)
        {
          goto LABEL_95;
        }
      }
      char v54 = 8;
      goto LABEL_91;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v15;
    if (!v59)
    {
      uint64_t v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_63;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          uint64_t v37 = PBReaderReadData();
          int v38 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v37;
          goto LABEL_54;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_101;
        }
        char v48 = 16 * *(unsigned char *)(a1 + 68);
        goto LABEL_69;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_63;
        }
        *(unsigned char *)(a1 + 68) |= 1u;
        uint64_t v40 = *v17;
        unint64_t v41 = *(void *)(v3 + v40);
        if (v41 <= 0xFFFFFFFFFFFFFFF7 && v41 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v42 = *(void *)(*(void *)(v3 + *v20) + v41);
          *(void *)(v3 + v40) = v41 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v42 = 0;
        }
        uint64_t v49 = 16;
        goto LABEL_77;
      case 3:
        if (!v32) {
          goto LABEL_63;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_101;
          }
          char v48 = 8 * *(unsigned char *)(a1 + 68);
LABEL_69:
          v9 += v48 >> 7;
          goto LABEL_70;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        unsigned int v58 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v58, (void *)v3))
        {
          PBReaderRecallMark();
          int v38 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v58;
LABEL_54:

          --v9;
LABEL_70:
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_78:
          if (v9) {
            char v50 = 1;
          }
          else {
            char v50 = v15;
          }
          if ((v50 & 1) == 0) {
            goto LABEL_82;
          }
          continue;
        }

LABEL_101:
        char v51 = 0;
        uint64_t v55 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_94:
        *(unsigned char *)(a1 + v55[373]) |= 8u;
        *(unsigned char *)(a1 + v55[373]) |= 0x10u;
        if (v51)
        {
LABEL_95:
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v15) {
            goto LABEL_96;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_96:
            unint64_t v56 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_63;
        }
        *(unsigned char *)(a1 + 68) |= 2u;
        uint64_t v43 = *v17;
        unint64_t v44 = *(void *)(v3 + v43);
        if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v42 = *(void *)(*(void *)(v3 + *v20) + v44);
          *(void *)(v3 + v43) = v44 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v42 = 0;
        }
        uint64_t v49 = 40;
        goto LABEL_77;
      case 5:
        if (v8)
        {
          *(unsigned char *)(a1 + 68) |= 4u;
          uint64_t v45 = *v17;
          unint64_t v46 = *(void *)(v3 + v45);
          if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(void *)(v3 + *v6))
          {
            uint64_t v42 = *(void *)(*(void *)(v3 + *v20) + v46);
            *(void *)(v3 + v4std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = v46 + 8;
          }
          else
          {
            *(unsigned char *)(v3 + *v19) = 1;
            uint64_t v42 = 0;
          }
          uint64_t v49 = 48;
LABEL_77:
          *(void *)(a1 + v49) = v42;
          goto LABEL_78;
        }
LABEL_63:
        char v47 = PBReaderSkipValueWithTag();
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if (v47) {
          goto LABEL_78;
        }
LABEL_92:
        char v51 = 0;
        goto LABEL_93;
      default:
        int v39 = PBReaderSkipValueWithTag();
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v39) {
          goto LABEL_92;
        }
        goto LABEL_78;
    }
  }
}

void sub_189D3746C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D37BFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPhotoWithMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPPhotoWithMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPPhotoWithMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPPhotoWithMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPPhotoWithMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189D37DA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPhotoWithMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPPhotoWithMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D37E04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D37FF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPhotoWithMetadataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189D383F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D38A20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPlaceInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 2);
        if ((v14 | v8)) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        LODWORD(v16) = v14;
        char v50 = (v15 == 0) | v14;
        unint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        BOOL v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_70;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_70:
      if (v16)
      {
        char v44 = 1;
        goto LABEL_82;
      }
      if (v15)
      {
        while (1)
        {
          int v45 = *v15++;
          char v46 = 1;
          switch(v45)
          {
            case 0:
              goto LABEL_83;
            case 1:
              goto LABEL_77;
            case 2:
              char v46 = 2;
              goto LABEL_77;
            case 3:
              char v46 = 4;
              goto LABEL_77;
            case 4:
              char v46 = 8;
LABEL_77:
              *(unsigned char *)(a1 + 60) |= v46;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_83;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v50 & 1) == 0)
    {
      BOOL v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 60) & 1) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_79;
          }
          int v49 = (int)v16;
          char v16 = objc_alloc_init(GEOPDPlaceRequest);
          if (GEOPDPlaceRequestReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            uint64_t v36 = 16;
            goto LABEL_49;
          }
          goto LABEL_80;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_79;
        }
        v7 -= *(unsigned char *)(a1 + 60) & 1;
        goto LABEL_68;
      case 2:
        if (!v31) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 60) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_79;
          }
          char v43 = *(unsigned char *)(a1 + 60) << 6;
LABEL_67:
          v7 += v43 >> 7;
LABEL_68:
          BOOL v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_69:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_70;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_79;
        }
        int v49 = (int)v16;
        char v16 = objc_alloc_init(GEOPDPlaceResponse);
        if (GEOPDPlaceResponseReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v36 = 24;
LABEL_49:
          int v38 = *(void **)(a1 + v36);
          *(void *)(a1 + v36) = v16;

          --v7;
          LODWORD(v16) = v49;
          goto LABEL_68;
        }
LABEL_80:

        char v44 = 0;
        LOBYTE(v16) = v49;
LABEL_81:
        BOOL v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_82:
        *(unsigned char *)(a1 + 60) |= 1u;
        *(unsigned char *)(a1 + 60) |= 2u;
        *(unsigned char *)(a1 + 60) |= 4u;
        *(unsigned char *)(a1 + 60) |= 8u;
        if (v44)
        {
LABEL_83:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_84;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_84:
            char v47 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 3:
        if (!v31) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 32;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_79;
        }
        char v43 = 32 * *(unsigned char *)(a1 + 60);
        goto LABEL_67;
      case 4:
        if (!v31)
        {
LABEL_57:
          char v42 = PBReaderSkipValueWithTag();
          BOOL v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v42 & 1) == 0)
          {
LABEL_78:
            char v44 = 0;
            goto LABEL_82;
          }
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 40;
LABEL_56:
          unint64_t v41 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_79:
          char v44 = 0;
          goto LABEL_81;
        }
        char v43 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_67;
      default:
        int v37 = PBReaderSkipValueWithTag();
        BOOL v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v37) {
          goto LABEL_78;
        }
        goto LABEL_69;
    }
  }
}

void sub_189D39178(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D392E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D39458(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D39A5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPlaceInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPPlaceInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPPlaceInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPPlaceInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPPlaceInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 16) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189D39C18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPlaceInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPPlaceInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D39C7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPlaceInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDPlaceRequestIsValid(a1)) {
            goto LABEL_26;
          }
          goto LABEL_33;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceResponseIsValid(a1)) {
            goto LABEL_33;
          }
LABEL_26:
          PBReaderRecallMark();
          goto LABEL_31;
        case 3u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_33;
        case 4u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_33;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_33:
            PBReaderRecallMark();
            return 0;
          }
LABEL_31:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_32;
          }
          break;
      }
    }
  }
LABEL_32:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189D3A084(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPlaceInfoIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 60);
  if ((v2 & 0x10) != 0) {
    return 1;
  }
  if (v2)
  {
    if (GEOPDPlaceRequestIsDirty(*(os_unfair_lock_s **)(a1 + 16))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 60);
  }
  if ((v2 & 2) != 0)
  {
    if (GEOPDPlaceResponseIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 60);
  }
  if ((v2 & 4) == 0) {
    return (v2 >> 3) & 1;
  }
  return 1;
}

os_unfair_lock_s *GEORPPlaceInfoIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPPlaceInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEORPPlaceInfoClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasPlaceRequest]
    && ([a1 placeRequest],
        id v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    unsigned int v7 = [a1 placeRequest];
    id v8 = (id)[v7 copy];

    GEOPDPlaceRequestClearSensitiveFields(v8, a2, 0);
    [a1 setPlaceRequest:v8];
  }
  else
  {
    id v8 = [a1 placeRequest];
    [v8 clearSensitiveFields:a2];
  }
}

void *GEORPPlaceInfoHasSensitiveFields(void *result, uint64_t a2)
{
  if (result)
  {
    id v3 = [result placeRequest];
    uint64_t HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_189D3A5BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPlaceProblemReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    unint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 4u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              char v27 = &OBJC_IVAR___GEORPPlaceProblem__problematicDepartureSequenceIndex;
              goto LABEL_49;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              char v27 = &OBJC_IVAR___GEORPPlaceProblem__problematicDepartureSequenceIndex;
              goto LABEL_51;
            }
          }
          char v27 = &OBJC_IVAR___GEORPPlaceProblem__problematicDepartureSequenceIndex;
LABEL_48:
          v3[*v6] = 1;
        }
        else if (v18 == 2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (1)
          {
            uint64_t v36 = *v4;
            uint64_t v37 = *(void *)&v3[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&v3[*v5])
            {
              char v27 = &OBJC_IVAR___GEORPPlaceProblem__componentValueIndex;
              goto LABEL_48;
            }
            char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
            *(void *)&v3[v36] = v38;
            v21 |= (unint64_t)(v39 & 0x7F) << v34;
            if ((v39 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v26 = v35++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              char v27 = &OBJC_IVAR___GEORPPlaceProblem__componentValueIndex;
              goto LABEL_51;
            }
          }
          char v27 = &OBJC_IVAR___GEORPPlaceProblem__componentValueIndex;
        }
        else
        {
          if (v18 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_58;
            }
            continue;
          }
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              char v27 = &OBJC_IVAR___GEORPPlaceProblem__componentIndex;
              goto LABEL_48;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              char v27 = &OBJC_IVAR___GEORPPlaceProblem__componentIndex;
              goto LABEL_51;
            }
          }
          char v27 = &OBJC_IVAR___GEORPPlaceProblem__componentIndex;
        }
LABEL_49:
        if (v3[*v6]) {
          LODWORD(v21) = 0;
        }
LABEL_51:
        *(_DWORD *)(a1 + *v27) = v21;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_58:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_189D3B120(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPlaceProblemReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPPlaceProblemReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D3B184(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPlaceProblemIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_189D3BB28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPProblemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          unint64_t v16 = 0;
        }
        else {
          unint64_t v16 = a3;
        }
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_110;
        }
        char v78 = (v16 == 0) | v15;
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v77 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_110;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    int v29 = v22 & 7;
    if (v28 || v29 == 4)
    {
LABEL_110:
      if (v15)
      {
        char v71 = 1;
        goto LABEL_112;
      }
      if (v16)
      {
        while (1)
        {
          int v73 = *v16++;
          char v72 = 4;
          switch(v73)
          {
            case 0:
              goto LABEL_121;
            case 2:
              goto LABEL_119;
            case 4:
              char v72 = 16;
              goto LABEL_119;
            case 5:
              char v72 = 8;
LABEL_119:
              *(unsigned char *)(a1 + 76) |= v72;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_121;
    }
    unint64_t v31 = v22 >> 3;
    BOOL v32 = v15;
    if ((v78 & 1) == 0)
    {
      BOOL v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_81;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (1)
        {
          uint64_t v40 = *v17;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v19) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_84;
          }
          v37 += 7;
          BOOL v27 = v38++ >= 9;
          if (v27)
          {
            LODWORD(v39) = 0;
            goto LABEL_86;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_84:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v39) = 0;
        }
LABEL_86:
        uint64_t v62 = 72;
        goto LABEL_91;
      case 2:
        if (!v32 || (*(unsigned char *)(a1 + 76) & 4) != 0) {
          goto LABEL_81;
        }
        if (v29 != 2)
        {
          char v64 = 0;
          unsigned int v65 = 0;
          uint64_t v66 = 0;
          while (1)
          {
            uint64_t v67 = *v17;
            uint64_t v68 = *(void *)(v3 + v67);
            unint64_t v69 = v68 + 1;
            if (v68 == -1 || v69 > *(void *)(v3 + *v6)) {
              break;
            }
            char v70 = *(unsigned char *)(*(void *)(v3 + *v19) + v68);
            *(void *)(v3 + v67) = v69;
            v66 |= (unint64_t)(v70 & 0x7F) << v64;
            if (v70 < 0)
            {
              v64 += 7;
              BOOL v27 = v65++ >= 9;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_106;
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_106:
          PBRepeatedInt32Add();
          goto LABEL_107;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_126;
        }
        while (1)
        {
          int v45 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          while (1)
          {
            uint64_t v49 = *v17;
            uint64_t v50 = *(void *)(v3 + v49);
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)(v3 + *v6)) {
              break;
            }
            char v52 = *(unsigned char *)(*(void *)(v3 + *v19) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v27 = v47++ >= 9;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_61;
          }
          *(unsigned char *)(v3 + *v4std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = 1;
LABEL_61:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v77;
        goto LABEL_108;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_81;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (2)
        {
          uint64_t v55 = *v17;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v19) + v56);
            *(void *)(v3 + v5std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = v57;
            v39 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v27 = v54++ >= 9;
              if (v27)
              {
                LODWORD(v39) = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v39) = 0;
        }
LABEL_90:
        uint64_t v62 = 68;
LABEL_91:
        *(_DWORD *)(a1 + v62) = v39;
        goto LABEL_108;
      case 4:
        if (!v32) {
          goto LABEL_81;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_126;
          }
          char v63 = 8 * *(unsigned char *)(a1 + 76);
          goto LABEL_96;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_126;
        }
        uint64_t v76 = objc_alloc_init(GEORPProblemCorrections);
        if (!GEORPProblemCorrectionsReadAllFrom((uint64_t)v76, (void *)v3, v9 & 1)) {
          goto LABEL_125;
        }
        PBReaderRecallMark();
        uint64_t v59 = 48;
        goto LABEL_80;
      case 5:
        if (!v32)
        {
LABEL_81:
          char v61 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v77;
          if ((v61 & 1) == 0)
          {
LABEL_124:
            char v71 = 0;
            goto LABEL_112;
          }
LABEL_108:
          if (!(v15 & 1 | (v7 != 0)) || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_110;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 76) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_126;
          }
          char v63 = 16 * *(unsigned char *)(a1 + 76);
LABEL_96:
          v7 += v63 >> 7;
LABEL_107:
          char v15 = v77;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_108;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_126;
        }
        uint64_t v76 = objc_alloc_init(GEORPProblemContext);
        if (GEORPProblemContextReadAllFrom((uint64_t)v76, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v59 = 40;
LABEL_80:
          uint64_t v60 = *(void **)(a1 + v59);
          *(void *)(a1 + v59) = v76;

          --v7;
          goto LABEL_107;
        }
LABEL_125:

LABEL_126:
        char v71 = 0;
        char v15 = v77;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_112:
        *(unsigned char *)(a1 + 76) |= 4u;
        *(unsigned char *)(a1 + 76) |= 0x10u;
        *(unsigned char *)(a1 + 76) |= 8u;
        if (v71)
        {
LABEL_121:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_122;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v15 & 1) == 0) {
          return v3;
        }
LABEL_122:
        char v74 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      default:
        int v44 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v77;
        if (!v44) {
          goto LABEL_124;
        }
        goto LABEL_108;
    }
  }
}

void sub_189D3DCDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D3DE48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D3F854(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPProblemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPProblemReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPProblemReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPProblemReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPProblemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 48) readAll:1];
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189D3FA10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPProblemReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPProblemReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D3FA74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPProblemIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_67;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_44;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_53;
          }
        case 2u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_67:
              PBReaderRecallMark();
              return 0;
            }
LABEL_56:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v33 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v34 = *v2;
                uint64_t v35 = *(void *)&a1[v34];
                unint64_t v36 = v35 + 1;
                if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
                  break;
                }
                int v37 = *(char *)(*(void *)&a1[*v5] + v35);
                *(void *)&a1[v34] = v36;
                if (v37 < 0)
                {
                  BOOL v13 = v33++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_56;
              }
              a1[*v4] = 1;
            }
LABEL_52:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_67;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              uint64_t v24 = *(void *)&a1[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                break;
              }
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                unsigned int v27 = v15++;
                if (v27 <= 8) {
                  continue;
                }
              }
              goto LABEL_53;
            }
LABEL_44:
            a1[*v4] = 1;
          }
LABEL_53:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_65;
          }
          break;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_67;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_44;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_53;
          }
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPProblemCorrectionsIsValid(a1)) {
            goto LABEL_67;
          }
          goto LABEL_52;
        case 5u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPProblemContextIsValid(a1)) {
            goto LABEL_52;
          }
          goto LABEL_67;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_67;
          }
          goto LABEL_53;
      }
    }
  }
LABEL_65:
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEORPProblemCorrectionsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPCorrectedFieldIsValid(a1)) {
            goto LABEL_69;
          }
          goto LABEL_74;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCorrectedLabelIsValid(a1)) {
            goto LABEL_74;
          }
          goto LABEL_69;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCorrectedCoordinateIsValid(a1)) {
            goto LABEL_74;
          }
          goto LABEL_69;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCorrectedSearchIsValid(a1)) {
            goto LABEL_74;
          }
          goto LABEL_69;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPMapLocationIsValid(a1)) {
            goto LABEL_74;
          }
          goto LABEL_69;
        case 6u:
          if (v15 == 2) {
            goto LABEL_40;
          }
          goto LABEL_74;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPlaceProblemIsValid(a1)) {
            goto LABEL_74;
          }
          goto LABEL_69;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPDirectionsProblemIsValid(a1)) {
            goto LABEL_74;
          }
          goto LABEL_69;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPhotoWithMetadataIsValid(a1)) {
            goto LABEL_74;
          }
          goto LABEL_69;
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_74;
          }
          unsigned int v17 = 0;
          break;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCorrectedFlagIsValid(a1)) {
            goto LABEL_74;
          }
          goto LABEL_69;
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPMerchantLookupCorrectionsIsValid(a1)) {
            goto LABEL_74;
          }
LABEL_69:
          PBReaderRecallMark();
          continue;
        default:
LABEL_40:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_74:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_70;
      }
      a1[*v4] = 1;
LABEL_70:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORPProblemContextIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOSessionIDIsValid(a1)) {
            goto LABEL_123;
          }
          goto LABEL_126;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_126;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_124;
          }
        case 3u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPlaceIsValid(a1)) {
            goto LABEL_126;
          }
          goto LABEL_123;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPMapLocationIsValid(a1)) {
            goto LABEL_126;
          }
          goto LABEL_123;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPVisibleTileSetIsValid(a1)) {
            goto LABEL_126;
          }
          goto LABEL_123;
        case 7u:
          if (v16 == 2) {
            goto LABEL_84;
          }
          goto LABEL_126;
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1)) {
            goto LABEL_126;
          }
          goto LABEL_123;
        case 9u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEODirectionsRequestIsValid(a1)) {
            goto LABEL_126;
          }
          goto LABEL_123;
        case 0xAu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEODirectionsResponseIsValid(a1)) {
            goto LABEL_126;
          }
          goto LABEL_123;
        case 0xCu:
          if (v16 == 2) {
            goto LABEL_84;
          }
          goto LABEL_126;
        case 0xDu:
          if (v16 != 1) {
            goto LABEL_126;
          }
          uint64_t v24 = *v2;
          unint64_t v25 = *(void *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_95;
          }
          unint64_t v26 = v25 + 8;
          if (v26 > *(void *)&a1[*v3]) {
            goto LABEL_95;
          }
          *(void *)&a1[v24] = v26;
          continue;
        case 0xEu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPAuxiliaryControlIsValid(a1)) {
            goto LABEL_126;
          }
          goto LABEL_123;
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_126;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v23 = v27++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_124;
          }
        case 0x10u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPTransitLineTileInfoIsValid(a1)) {
            goto LABEL_126;
          }
          goto LABEL_123;
        case 0x12u:
        case 0x18u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPPlaceInfoIsValid(a1)) {
            goto LABEL_126;
          }
          goto LABEL_123;
        case 0x13u:
          if (v16 == 2) {
            goto LABEL_84;
          }
          goto LABEL_126;
        case 0x14u:
          if ((v8 & 7) != 0) {
            goto LABEL_126;
          }
          unsigned int v32 = 0;
          break;
        case 0x15u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOABAssignmentResponseIsValid(a1)) {
            goto LABEL_126;
          }
          goto LABEL_123;
        case 0x16u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPSuggestionListIsValid(a1)) {
            goto LABEL_126;
          }
          goto LABEL_123;
        case 0x17u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPCurrentEnvironmentManifestURLsIsValid(a1)) {
            goto LABEL_126;
          }
          goto LABEL_123;
        case 0x19u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOServicesStateIsValid(a1)) {
            goto LABEL_126;
          }
          goto LABEL_123;
        case 0x1Au:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPPersonalizedMapsIsValid(a1)) {
            goto LABEL_126;
          }
          goto LABEL_123;
        case 0x1Bu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPNavigationSettingsIsValid(a1)) {
            goto LABEL_126;
          }
          goto LABEL_123;
        case 0x1Cu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPMerchantLookupContextIsValid(a1)) {
            goto LABEL_126;
          }
LABEL_123:
          PBReaderRecallMark();
          continue;
        default:
LABEL_84:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_126:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v23 = v32++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_124;
      }
LABEL_94:
      uint64_t v14 = *v4;
LABEL_95:
      a1[v14] = 1;
LABEL_124:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

void sub_189D40AFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPProblemIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v2 = *(unsigned char *)(a1 + 76);
  if ((v2 & 0x24) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 76) & 0x10) != 0)
  {
    if (GEORPProblemCorrectionsIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 76);
  }
  if ((v2 & 8) == 0) {
    return 0;
  }
  unint64_t v4 = *(os_unfair_lock_s **)(a1 + 40);

  return (uint64_t)GEORPProblemContextIsDirty(v4);
}

os_unfair_lock_s *GEORPProblemIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPProblemIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEORPProblemClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3)
  {
    if ([a1 hasProblemCorrections]
      && ([a1 problemCorrections],
          id v5 = objc_claimAutoreleasedReturnValue(),
          unsigned int v6 = GEORPProblemCorrectionsHasSensitiveFields(v5, a2),
          v5,
          v6))
    {
      unsigned int v7 = [a1 problemCorrections];
      unint64_t v8 = (void *)[v7 copy];

      uint64_t v9 = [v8 correctedSearch];
      [v9 clearSensitiveFields:a2];

      [a1 setProblemCorrections:v8];
    }
    else
    {
      unint64_t v8 = [a1 problemCorrections];
      [v8 clearSensitiveFields:a2];
    }

    if ([a1 hasProblemContext])
    {
      unint64_t v11 = [a1 problemContext];
      int HasSensitiveFields = GEORPProblemContextHasSensitiveFields((uint64_t)v11, a2);

      if (HasSensitiveFields)
      {
        BOOL v13 = [a1 problemContext];
        uint64_t v14 = (id *)[v13 copy];

        GEORPProblemContextClearSensitiveFields(v14, a2, 0);
        [a1 setProblemContext:v14];
        goto LABEL_11;
      }
    }
  }
  else
  {
    uint64_t v10 = [a1 problemCorrections];
    [v10 clearSensitiveFields:a2];
  }
  uint64_t v14 = [a1 problemContext];
  [v14 clearSensitiveFields:a2];
LABEL_11:
}

uint64_t GEORPProblemHasSensitiveFields(void *a1, uint64_t a2)
{
  if (!a1) {
    return 0;
  }
  unint64_t v4 = [a1 problemCorrections];
  if (GEORPProblemCorrectionsHasSensitiveFields(v4, a2))
  {
    uint64_t HasSensitiveFields = 1;
  }
  else
  {
    unsigned int v6 = [a1 problemContext];
    uint64_t HasSensitiveFields = GEORPProblemContextHasSensitiveFields((uint64_t)v6, a2);
  }
  return HasSensitiveFields;
}

void *GEORPProblemCorrectionsHasSensitiveFields(void *result, uint64_t a2)
{
  if (result)
  {
    id v3 = [result correctedSearch];
    uint64_t HasSensitiveFields = GEORPCorrectedSearchHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

uint64_t GEORPProblemContextHasSensitiveFields(uint64_t result, uint64_t a2)
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  if (result)
  {
    id v3 = (void *)result;
    unint64_t v4 = [(id)result placeInfo];
    if (GEORPPlaceInfoHasSensitiveFields(v4, a2))
    {
LABEL_3:

      return 1;
    }
    id v5 = [v3 merchantLookupContext];
    char HasSensitiveFields = GEORPMerchantLookupContextHasSensitiveFields(v5);

    if (HasSensitiveFields) {
      return 1;
    }
    long long v38 = 0u;
    long long v39 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    unint64_t v4 = [v3 directionsRequests];
    uint64_t v7 = [v4 countByEnumeratingWithState:&v36 objects:v43 count:16];
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = *(void *)v37;
LABEL_9:
      uint64_t v10 = 0;
      while (1)
      {
        if (*(void *)v37 != v9) {
          objc_enumerationMutation(v4);
        }
        if (GEODirectionsRequestHasSensitiveFields(*(void *)(*((void *)&v36 + 1) + 8 * v10))) {
          goto LABEL_3;
        }
        if (v8 == ++v10)
        {
          uint64_t v8 = [v4 countByEnumeratingWithState:&v36 objects:v43 count:16];
          if (v8) {
            goto LABEL_9;
          }
          break;
        }
      }
    }

    long long v34 = 0u;
    long long v35 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    unint64_t v4 = [v3 directionsResponses];
    uint64_t v11 = [v4 countByEnumeratingWithState:&v32 objects:v42 count:16];
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = *(void *)v33;
LABEL_17:
      uint64_t v14 = 0;
      while (1)
      {
        if (*(void *)v33 != v13) {
          objc_enumerationMutation(v4);
        }
        if (GEODirectionsResponseHasSensitiveFields(*(void **)(*((void *)&v32 + 1) + 8 * v14))) {
          goto LABEL_3;
        }
        if (v12 == ++v14)
        {
          uint64_t v12 = [v4 countByEnumeratingWithState:&v32 objects:v42 count:16];
          if (v12) {
            goto LABEL_17;
          }
          break;
        }
      }
    }

    long long v30 = 0u;
    long long v31 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    unint64_t v4 = [v3 autocompleteSuggestionLists];
    uint64_t v15 = [v4 countByEnumeratingWithState:&v28 objects:v41 count:16];
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = *(void *)v29;
LABEL_25:
      uint64_t v18 = 0;
      while (1)
      {
        if (*(void *)v29 != v17) {
          objc_enumerationMutation(v4);
        }
        if (GEORPSuggestionListHasSensitiveFields(*(void **)(*((void *)&v28 + 1) + 8 * v18), a2)) {
          goto LABEL_3;
        }
        if (v16 == ++v18)
        {
          uint64_t v16 = [v4 countByEnumeratingWithState:&v28 objects:v41 count:16];
          if (v16) {
            goto LABEL_25;
          }
          break;
        }
      }
    }

    long long v26 = 0u;
    long long v27 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    uint64_t v19 = objc_msgSend(v3, "directionsWaypointPlaceInfos", 0);
    uint64_t v20 = [v19 countByEnumeratingWithState:&v24 objects:v40 count:16];
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = *(void *)v25;
      while (2)
      {
        uint64_t v23 = 0;
        do
        {
          if (*(void *)v25 != v22) {
            objc_enumerationMutation(v19);
          }
          if (GEORPPlaceInfoHasSensitiveFields(*(void **)(*((void *)&v24 + 1) + 8 * v23), a2))
          {

            return 1;
          }
          ++v23;
        }
        while (v21 != v23);
        uint64_t v21 = [v19 countByEnumeratingWithState:&v24 objects:v40 count:16];
        if (v21) {
          continue;
        }
        break;
      }
    }

    return 0;
  }
  return result;
}

void GEORPProblemCorrectionsClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasCorrectedSearch]
    && ([a1 correctedSearch],
        id v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEORPCorrectedSearchHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    uint64_t v7 = [a1 correctedSearch];
    id v8 = (id)[v7 copy];

    GEORPCorrectedSearchClearSensitiveFields(v8, a2, 0);
    [a1 setCorrectedSearch:v8];
  }
  else
  {
    id v8 = [a1 correctedSearch];
    [v8 clearSensitiveFields:a2];
  }
}

void GEORPProblemContextClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  -[GEORPProblemContext _readDirectionsRequests]((uint64_t)a1);
  if ([a1[9] count])
  {
    unint64_t v6 = 0;
    do
    {
      uint64_t v7 = [a1[9] objectAtIndexedSubscript:v6];
      id v8 = (void *)v7;
      if (a3 && GEODirectionsRequestHasSensitiveFields(v7))
      {
        uint64_t v9 = (id *)[v8 copy];
        GEODirectionsRequestClearSensitiveFields(v9, a2, 0);
        [a1[9] replaceObjectAtIndex:v6 withObject:v9];
      }
      else
      {
        [v8 clearSensitiveFields:a2];
      }

      ++v6;
    }
    while (v6 < [a1[9] count]);
  }
  -[GEORPProblemContext _readDirectionsResponses]((uint64_t)a1);
  if ([a1[10] count])
  {
    unint64_t v10 = 0;
    do
    {
      uint64_t v11 = [a1[10] objectAtIndexedSubscript:v10];
      uint64_t v12 = v11;
      if (a3 && GEODirectionsResponseHasSensitiveFields(v11))
      {
        uint64_t v13 = (void *)[v12 copy];
        GEODirectionsResponseClearSensitiveFields((uint64_t)v13, a2, 0);
        [a1[10] replaceObjectAtIndex:v10 withObject:v13];
      }
      else
      {
        [v12 clearSensitiveFields:a2];
      }

      ++v10;
    }
    while (v10 < [a1[10] count]);
  }
  if ((a3 & 1) != 0
    && [a1 hasPlaceInfo]
    && ([a1 placeInfo],
        uint64_t v14 = objc_claimAutoreleasedReturnValue(),
        unsigned int v15 = GEORPPlaceInfoHasSensitiveFields(v14, a2),
        v14,
        v15))
  {
    uint64_t v16 = [a1 placeInfo];
    uint64_t v17 = (void *)[v16 copy];

    uint64_t v18 = [v17 placeRequest];
    [v18 clearSensitiveFields:a2];

    [a1 setPlaceInfo:v17];
  }
  else
  {
    uint64_t v17 = [a1 placeInfo];
    [v17 clearSensitiveFields:a2];
  }

  -[GEORPProblemContext _readAutocompleteSuggestionLists]((uint64_t)a1);
  if ([a1[4] count])
  {
    unint64_t v19 = 0;
    do
    {
      uint64_t v20 = [a1[4] objectAtIndexedSubscript:v19];
      uint64_t v21 = v20;
      if (a3 && GEORPSuggestionListHasSensitiveFields(v20, a2))
      {
        uint64_t v22 = (void *)[v21 copy];
        uint64_t v23 = [v22 autocompleteRequest];
        [v23 clearSensitiveFields:a2];

        [a1[4] replaceObjectAtIndex:v19 withObject:v22];
      }
      else
      {
        [v21 clearSensitiveFields:a2];
      }

      ++v19;
    }
    while (v19 < [a1[4] count]);
  }
  -[GEORPProblemContext _readDirectionsWaypointPlaceInfos]((uint64_t)a1);
  if ([a1[11] count])
  {
    unint64_t v24 = 0;
    do
    {
      long long v25 = [a1[11] objectAtIndexedSubscript:v24];
      long long v26 = v25;
      if (a3 && GEORPPlaceInfoHasSensitiveFields(v25, a2))
      {
        long long v27 = (void *)[v26 copy];
        long long v28 = [v27 placeRequest];
        [v28 clearSensitiveFields:a2];

        [a1[11] replaceObjectAtIndex:v24 withObject:v27];
      }
      else
      {
        [v26 clearSensitiveFields:a2];
      }

      ++v24;
    }
    while (v24 < [a1[11] count]);
  }
  if ((a3 & 1) != 0
    && [a1 hasMerchantLookupContext]
    && ([a1 merchantLookupContext],
        long long v29 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEORPMerchantLookupContextHasSensitiveFields(v29),
        v29,
        HasSensitiveFields))
  {
    long long v31 = [a1 merchantLookupContext];
    id v32 = (id)[v31 copy];

    GEORPMerchantLookupContextClearSensitiveFields(v32, a2, 0);
    [a1 setMerchantLookupContext:v32];
  }
  else
  {
    id v32 = [a1 merchantLookupContext];
    [v32 clearSensitiveFields:a2];
  }
}

void sub_189D41A48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D41F78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPProblemCollectionRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = *(unsigned __int16 *)(a1 + 108);
  unsigned int v12 = ((v11 >> 9) & 1)
      + ((v11 >> 8) & 1)
      + ((v11 >> 1) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v11), (uint16x4_t)0xFFFCFFFBFFFAFFFDLL), (int8x8_t)0x1000100010001))+ (v11 & 1)+ ((v11 >> 7) & 1)+ ((v11 >> 2) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v15 = v10 | (v12 > 7);
        if ((v15 | v8)) {
          uint64_t v16 = 0;
        }
        else {
          uint64_t v16 = a3;
        }
        LODWORD(v17) = v15;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        char v52 = (v16 == 0) | v15;
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_6:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_104;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_104:
      if (v17)
      {
        char v45 = 1;
        goto LABEL_123;
      }
      if (v16)
      {
        while (1)
        {
          int v47 = *v16++;
          int v46 = v47;
          __int16 v48 = 64;
          switch(v47)
          {
            case 0:
              goto LABEL_124;
            case 1:
              goto LABEL_118;
            case 2:
              __int16 v48 = 8;
              goto LABEL_118;
            case 3:
              __int16 v48 = 32;
              goto LABEL_118;
            case 4:
              __int16 v48 = 1;
              goto LABEL_118;
            case 5:
              __int16 v48 = 16;
              goto LABEL_118;
            case 6:
              __int16 v48 = 128;
              goto LABEL_118;
            case 7:
              __int16 v48 = 4;
              goto LABEL_118;
            case 8:
              __int16 v48 = 256;
              goto LABEL_118;
            case 9:
              __int16 v48 = 512;
              goto LABEL_118;
            default:
              if (v46 != 201) {
                continue;
              }
              __int16 v48 = 2;
LABEL_118:
              *(_WORD *)(a1 + 108) |= v48;
              break;
          }
        }
      }
      goto LABEL_124;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = (char)v17;
    if ((v52 & 1) == 0)
    {
      long long v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32 || (*(_WORD *)(a1 + 108) & 0x40) != 0) {
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_120;
        }
        int v51 = (int)v17;
        uint64_t v17 = objc_alloc_init(GEORPProblem);
        if (!GEORPProblemReadAllFrom((uint64_t)v17, (void *)v3, v9 & 1)) {
          goto LABEL_121;
        }
        PBReaderRecallMark();
        -[GEORPProblemCollectionRequest _addNoFlagsRequestElement:](a1, v17);

        goto LABEL_78;
      case 2:
        if (!v32) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 108) & 8) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 40;
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_120;
        }
        __int16 v44 = *(_WORD *)(a1 + 108) << 12;
        goto LABEL_101;
      case 3:
        if (!v32) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 108) & 0x20) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 56;
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_120;
        }
        __int16 v44 = *(_WORD *)(a1 + 108) << 10;
        goto LABEL_101;
      case 4:
        if (!v32) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 108) & 1) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 16;
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_120;
        }
        v7 -= *(_WORD *)(a1 + 108) & 1;
        goto LABEL_102;
      case 5:
        if (!v32) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 108) & 0x10) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 48;
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_120;
        }
        __int16 v44 = *(_WORD *)(a1 + 108) << 11;
        goto LABEL_101;
      case 6:
        if (!v32) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 108) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_120;
          }
          __int16 v44 = *(_WORD *)(a1 + 108) << 8;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_120;
        }
        int v51 = (int)v17;
        uint64_t v17 = objc_alloc_init(GEORPUserCredentials);
        if (!GEORPUserCredentialsReadAllFrom((uint64_t)v17, (void *)v3, v9 & 1)) {
          goto LABEL_121;
        }
        PBReaderRecallMark();
        uint64_t v37 = 72;
        goto LABEL_77;
      case 7:
        if (!v32) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 108) & 4) == 0)
        {
          uint64_t v38 = PBReaderReadData();
          uint64_t v39 = 32;
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_120;
        }
        __int16 v44 = *(_WORD *)(a1 + 108) << 13;
        goto LABEL_101;
      case 8:
        if (!v32) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 108) & 0x100) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 80;
LABEL_71:
          uint64_t v40 = *(void **)(a1 + v39);
          *(void *)(a1 + v39) = v38;

          --v7;
          goto LABEL_102;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_120;
        }
        __int16 v44 = *(_WORD *)(a1 + 108) << 7;
        goto LABEL_101;
      case 9:
        if (!v32) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 108) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_120:
            char v45 = 0;
            goto LABEL_122;
          }
          __int16 v44 = *(_WORD *)(a1 + 108) << 6;
LABEL_101:
          v7 += v44 >> 15;
          goto LABEL_102;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_120;
        }
        int v51 = (int)v17;
        uint64_t v17 = objc_alloc_init(GEOLocation);
        if (GEOLocationReadAllFrom((uint64_t)v17, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v37 = 88;
LABEL_77:
          uint64_t v41 = *(void **)(a1 + v37);
          *(void *)(a1 + v37) = v17;

          --v7;
LABEL_78:
          LODWORD(v17) = v51;
LABEL_102:
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_103:
          if (!(v17 & 1 | (v7 != 0))) {
            goto LABEL_104;
          }
          continue;
        }
LABEL_121:

        char v45 = 0;
        LOBYTE(v17) = v51;
LABEL_122:
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_123:
        *(_WORD *)(a1 + 108) |= 0x40u;
        *(_WORD *)(a1 + 108) |= 8u;
        *(_WORD *)(a1 + 108) |= 0x20u;
        *(_WORD *)(a1 + 108) |= 1u;
        *(_WORD *)(a1 + 108) |= 0x10u;
        *(_WORD *)(a1 + 108) |= 0x80u;
        *(_WORD *)(a1 + 108) |= 4u;
        *(_WORD *)(a1 + 108) |= 0x100u;
        *(_WORD *)(a1 + 108) |= 0x200u;
        *(_WORD *)(a1 + 108) |= 2u;
        if (v45)
        {
LABEL_124:
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v17) {
            goto LABEL_125;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v17)
          {
LABEL_125:
            uint64_t v49 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        if (v31 != 201)
        {
          int v42 = PBReaderSkipValueWithTag();
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v42) {
            goto LABEL_119;
          }
          goto LABEL_103;
        }
        if (!v32)
        {
LABEL_81:
          char v43 = PBReaderSkipValueWithTag();
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v43 & 1) == 0)
          {
LABEL_119:
            char v45 = 0;
            goto LABEL_123;
          }
          goto LABEL_103;
        }
        if ((*(_WORD *)(a1 + 108) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_120;
          }
          __int16 v44 = *(_WORD *)(a1 + 108) << 14;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_120;
        }
        int v51 = (int)v17;
        uint64_t v17 = objc_alloc_init(GEORPDebugSettings);
        if (!GEORPDebugSettingsReadAllFrom((uint64_t)v17, (void *)v3)) {
          goto LABEL_121;
        }
        PBReaderRecallMark();
        uint64_t v37 = 24;
        goto LABEL_77;
    }
  }
}

void sub_189D42C74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D42DE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D42F54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D430C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D43234(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D433A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D43510(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D43680(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D437EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D44414(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPProblemCollectionRequestCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = a1[8];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  [a1[9] readAll:1];
  [a1[11] readAll:1];
  return [a1[3] readAll:1];
}

unint64_t GEORPProblemCollectionRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPProblemCollectionRequestReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORPProblemCollectionRequestReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORPProblemCollectionRequestReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPProblemCollectionRequestReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPProblemCollectionRequestCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_189D446E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPProblemCollectionRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPProblemCollectionRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D44748(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPProblemCollectionRequestIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPProblemIsValid(a1)) {
            goto LABEL_47;
          }
          goto LABEL_51;
        case 2u:
          if (v15 == 2) {
            goto LABEL_48;
          }
          goto LABEL_51;
        case 3u:
          if (v15 == 2) {
            goto LABEL_48;
          }
          goto LABEL_51;
        case 4u:
          if (v15 == 2) {
            goto LABEL_48;
          }
          goto LABEL_51;
        case 5u:
          if (v15 == 2) {
            goto LABEL_48;
          }
          goto LABEL_51;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPUserCredentialsIsValid(a1)) {
            goto LABEL_51;
          }
          goto LABEL_47;
        case 7u:
          if (v15 == 2) {
            goto LABEL_48;
          }
          goto LABEL_51;
        case 8u:
          if (v15 == 2) {
            goto LABEL_48;
          }
          goto LABEL_51;
        case 9u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOLocationIsValid(a1)) {
            goto LABEL_47;
          }
          goto LABEL_51;
        default:
          if ((v8 >> 3) == 201)
          {
            if (v15 != 2 || !PBReaderPlaceMark() || !GEORPDebugSettingsIsValid(a1))
            {
LABEL_51:
              PBReaderRecallMark();
              return 0;
            }
LABEL_47:
            PBReaderRecallMark();
          }
          else
          {
LABEL_48:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_51;
            }
          }
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_50;
          }
          break;
      }
    }
  }
LABEL_50:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPUserCredentialsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v15 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

void sub_189D44F1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPProblemCollectionRequestIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  __int16 v2 = *(_WORD *)(a1 + 108);
  if ((v2 & 0x479) != 0) {
    return 1;
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEORPUserCredentialsIsDirty(*(void *)(a1 + 72))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 0x104) != 0) {
    return 1;
  }
  if ((v2 & 0x200) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 88))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 2) != 0) {
    return 1;
  }
  if ((v2 & 0x40) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 64);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEORPProblemIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_24;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_24:

  return v3;
}

os_unfair_lock_s *GEORPProblemCollectionRequestIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPProblemCollectionRequestIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEORPProblemCollectionRequestClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  -[GEORPProblemCollectionRequest _readRequestElements]((uint64_t)a1);
  if ([a1[8] count])
  {
    unint64_t v6 = 0;
    do
    {
      unsigned int v7 = [a1[8] objectAtIndexedSubscript:v6];
      long long v8 = v7;
      if (a3 && GEORPProblemHasSensitiveFields(v7, a2))
      {
        long long v9 = (void *)[v8 copy];
        GEORPProblemClearSensitiveFields(v9, a2, 0);
        [a1[8] replaceObjectAtIndex:v6 withObject:v9];
      }
      else
      {
        [v8 clearSensitiveFields:a2];
      }

      ++v6;
    }
    while (v6 < [a1[8] count]);
  }
  if ((a3 & 1) != 0
    && [a1 hasUserLocation]
    && ([a1 userLocation],
        long long v10 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v10),
        v10,
        HasSensitiveFields))
  {
    char v12 = [a1 userLocation];
    uint64_t v13 = (_DWORD *)[v12 copy];

    GEOLocationClearSensitiveFields(v13);
    [a1 setUserLocation:v13];
  }
  else
  {
    uint64_t v13 = [a1 userLocation];
    [v13 clearSensitiveFields:a2];
  }
}

uint64_t GEORPProblemCollectionRequestHasSensitiveFields(void *a1, uint64_t a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  uint64_t v4 = [a1 userLocation];
  char HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v4);

  if (HasSensitiveFields) {
    return 1;
  }
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  unsigned int v7 = objc_msgSend(a1, "requestElements", 0);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    while (2)
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        if (GEORPProblemHasSensitiveFields(*(void **)(*((void *)&v13 + 1) + 8 * v11), a2))
        {
          uint64_t v6 = 1;
          goto LABEL_15;
        }
        ++v11;
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
      if (v9) {
        continue;
      }
      break;
    }
  }
  uint64_t v6 = 0;
LABEL_15:

  return v6;
}

void sub_189D45A70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPProblemCollectionResponseReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          uint64_t v25 = PBReaderReadString();
          unint64_t v26 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189D46B08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPProblemCollectionResponseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPProblemCollectionResponseReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D46B6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPProblemCollectionResponseIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          BOOL v23 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

void sub_189D475C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEORPProblemContextReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 216));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 212);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 208)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unint64_t v11 = (const float *)(a1 + 228);
  uint32x4_t v12 = (uint32x4_t)vld1q_dup_f32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A63BCB0), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A63BCC0), v13)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A63BC90), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A63BCA0), v13))), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A63BCD0), v13)));
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        unsigned __int8 v17 = v10 | (v14 > 0xF);
        if ((v17 | v8)) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = a3;
        }
        BOOL v19 = v17;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v77 = (v18 == 0) | v17;
        int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        BOOL v76 = v17;
        break;
      default:
        ++v14;
LABEL_6:
        uint64_t v15 = v9;
        uint64_t v16 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_218;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_23;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_23:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_25:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_218:
      if (v19)
      {
        char v71 = 1;
        goto LABEL_247;
      }
      if (v18)
      {
        while (1)
        {
          int v72 = *v18++;
          int v73 = 0x20000;
          switch(v72)
          {
            case 0:
              goto LABEL_248;
            case 3:
              goto LABEL_241;
            case 4:
              int v73 = 0x4000;
              goto LABEL_241;
            case 6:
              int v73 = 0x1000000;
              goto LABEL_241;
            case 7:
              int v73 = 0x400000;
              goto LABEL_241;
            case 8:
              int v73 = 0x100000;
              goto LABEL_241;
            case 9:
              int v73 = 512;
              goto LABEL_241;
            case 10:
              int v73 = 1024;
              goto LABEL_241;
            case 12:
              int v73 = 4096;
              goto LABEL_241;
            case 14:
              int v73 = 64;
              goto LABEL_241;
            case 16:
              int v73 = 0x800000;
              goto LABEL_241;
            case 18:
              int v73 = 0x80000;
              goto LABEL_241;
            case 19:
              int v73 = 0x2000;
              goto LABEL_241;
            case 21:
              int v73 = 128;
              goto LABEL_241;
            case 22:
              int v73 = 32;
              goto LABEL_241;
            case 23:
              int v73 = 256;
              goto LABEL_241;
            case 24:
              int v73 = 2048;
              goto LABEL_241;
            case 25:
              int v73 = 0x200000;
              goto LABEL_241;
            case 26:
              int v73 = 0x40000;
              goto LABEL_241;
            case 27:
              int v73 = 0x10000;
              goto LABEL_241;
            case 28:
              int v73 = 0x8000;
LABEL_241:
              *(_DWORD *)(a1 + 228) |= v73;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_248;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v19;
    if ((v77 & 1) == 0)
    {
      int v35 = v18;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_169;
        }
        if (!PBReaderPlaceMark() || (GEOSessionIDReadAllFrom((void *)(a1 + 16), v3) & 1) == 0) {
          goto LABEL_245;
        }
        PBReaderRecallMark();
        *(_DWORD *)(a1 + 228) |= 1u;
        goto LABEL_213;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_169;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(_DWORD *)(a1 + 228) |= 0x10u;
        while (2)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
            *(void *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v30 = v40++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_174;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_174:
        *(_DWORD *)(a1 + 224) = v41;
        goto LABEL_214;
      case 3:
        if (!v34) {
          goto LABEL_169;
        }
        if ((*(unsigned char *)(a1 + 230) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_244;
          }
          int v70 = (int)(*(_DWORD *)(a1 + 228) << 14) >> 31;
          goto LABEL_211;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_244;
        }
        int v46 = objc_alloc_init(GEOPlace);
        if (!GEOPlaceReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_243;
        }
        PBReaderRecallMark();
        uint64_t v47 = 136;
        goto LABEL_167;
      case 4:
        if (!v34) {
          goto LABEL_169;
        }
        if ((*(unsigned char *)(a1 + 229) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_244;
          }
          int v70 = (int)(*(_DWORD *)(a1 + 228) << 17) >> 31;
          goto LABEL_211;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_244;
        }
        int v46 = objc_alloc_init(GEORPMapLocation);
        if (!GEORPMapLocationReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_243;
        }
        PBReaderRecallMark();
        uint64_t v47 = 112;
        goto LABEL_167;
      case 6:
        if (!v34 || (*(unsigned char *)(a1 + 231) & 1) != 0) {
          goto LABEL_169;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_245;
        }
        int v46 = objc_alloc_init(GEORPVisibleTileSet);
        if (!GEORPVisibleTileSetReadAllFrom((uint64_t)v46, (void *)v3)) {
          goto LABEL_243;
        }
        PBReaderRecallMark();
        -[GEORPProblemContext _addNoFlagsVisibleTileSet:](a1, v46);
        goto LABEL_146;
      case 7:
        if (!v34) {
          goto LABEL_169;
        }
        if ((*(unsigned char *)(a1 + 230) & 0x40) == 0)
        {
          uint64_t v49 = PBReaderReadString();
          uint64_t v50 = 184;
          goto LABEL_117;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_244;
        }
        int v70 = (int)(*(_DWORD *)(a1 + 228) << 9) >> 31;
        goto LABEL_211;
      case 8:
        if (!v34) {
          goto LABEL_169;
        }
        if ((*(unsigned char *)(a1 + 230) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_244;
          }
          int v70 = (int)(*(_DWORD *)(a1 + 228) << 11) >> 31;
          goto LABEL_211;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_244;
        }
        int v46 = objc_alloc_init(GEOPDPlace);
        if (!GEOPDPlaceReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_243;
        }
        PBReaderRecallMark();
        uint64_t v47 = 168;
        goto LABEL_167;
      case 9:
        if (!v34 || (*(unsigned char *)(a1 + 229) & 2) != 0) {
          goto LABEL_169;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_245;
        }
        int v46 = objc_alloc_init(GEODirectionsRequest);
        if (!GEODirectionsRequestReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_243;
        }
        PBReaderRecallMark();
        -[GEORPProblemContext _addNoFlagsDirectionsRequest:](a1, v46);
        goto LABEL_146;
      case 10:
        if (!v34 || (*(unsigned char *)(a1 + 229) & 4) != 0) {
          goto LABEL_169;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_245;
        }
        int v46 = objc_alloc_init(GEODirectionsResponse);
        if (!GEODirectionsResponseReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_243;
        }
        PBReaderRecallMark();
        -[GEORPProblemContext _addNoFlagsDirectionsResponse:](a1, v46);
        goto LABEL_146;
      case 12:
        if (!v34) {
          goto LABEL_169;
        }
        if ((*(unsigned char *)(a1 + 229) & 0x10) == 0)
        {
          uint64_t v49 = PBReaderReadString();
          uint64_t v50 = 96;
          goto LABEL_117;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_244;
        }
        int v70 = (int)(*(_DWORD *)(a1 + 228) << 19) >> 31;
        goto LABEL_211;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_169;
        }
        *(_DWORD *)(a1 + 228) |= 2u;
        uint64_t v51 = *v20;
        unint64_t v52 = *(void *)(v3 + v51);
        if (v52 <= 0xFFFFFFFFFFFFFFF7 && v52 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v53 = *(void *)(*(void *)(v3 + *v22) + v52);
          *(void *)(v3 + v51) = v52 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          uint64_t v53 = 0;
        }
        *(void *)(a1 + 48) = v53;
        goto LABEL_214;
      case 14:
        if (!v34 || (*(unsigned char *)(a1 + 228) & 0x40) != 0) {
          goto LABEL_169;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_245;
        }
        int v46 = objc_alloc_init(GEORPAuxiliaryControl);
        if (!GEORPAuxiliaryControlReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_243;
        }
        PBReaderRecallMark();
        -[GEORPProblemContext _addNoFlagsAuxiliaryControl:](a1, v46);
        goto LABEL_146;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_169;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0;
        *(_DWORD *)(a1 + 228) |= 4u;
        while (2)
        {
          uint64_t v57 = *v20;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v22) + v58);
            *(void *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              BOOL v30 = v55++ >= 9;
              if (v30)
              {
                uint64_t v56 = 0;
                goto LABEL_178;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v56 = 0;
        }
LABEL_178:
        *(void *)(a1 + 144) = v56;
        goto LABEL_214;
      case 16:
        if (!v34) {
          goto LABEL_169;
        }
        if ((*(unsigned char *)(a1 + 230) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_244;
          }
          int v70 = (int)(*(_DWORD *)(a1 + 228) << 8) >> 31;
          goto LABEL_211;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_244;
        }
        int v46 = objc_alloc_init(GEORPTransitLineTileInfo);
        if (!GEORPTransitLineTileInfoReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_243;
        }
        PBReaderRecallMark();
        uint64_t v47 = 192;
        goto LABEL_167;
      case 18:
        if (!v34) {
          goto LABEL_169;
        }
        if ((*(unsigned char *)(a1 + 230) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_244;
          }
          int v70 = (int)(*(_DWORD *)(a1 + 228) << 12) >> 31;
          goto LABEL_211;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_244;
        }
        int v46 = objc_alloc_init(GEORPPlaceInfo);
        if (!GEORPPlaceInfoReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_243;
        }
        PBReaderRecallMark();
        uint64_t v47 = 160;
        goto LABEL_167;
      case 19:
        if (!v34) {
          goto LABEL_169;
        }
        if ((*(unsigned char *)(a1 + 229) & 0x20) == 0)
        {
          uint64_t v49 = PBReaderReadString();
          uint64_t v50 = 104;
LABEL_117:
          char v61 = *(void **)(a1 + v50);
          *(void *)(a1 + v50) = v49;
          goto LABEL_168;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_244;
        }
        int v70 = (int)(*(_DWORD *)(a1 + 228) << 18) >> 31;
        goto LABEL_211;
      case 20:
        if ((v8 & 1) == 0) {
          goto LABEL_169;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0;
        *(_DWORD *)(a1 + 228) |= 8u;
        while (2)
        {
          uint64_t v65 = *v20;
          uint64_t v66 = *(void *)(v3 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(v3 + *v22) + v66);
            *(void *)(v3 + v6std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              BOOL v30 = v63++ >= 9;
              if (v30)
              {
                LODWORD(v64) = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v64) = 0;
        }
LABEL_182:
        *(_DWORD *)(a1 + 220) = -(v64 & 1) ^ ((int)v64 >> 1);
        goto LABEL_214;
      case 21:
        if (!v34) {
          goto LABEL_169;
        }
        if ((*(unsigned char *)(a1 + 228) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_244;
          }
          int v70 = (int)(*(_DWORD *)(a1 + 228) << 24) >> 31;
          goto LABEL_211;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_244;
        }
        int v46 = objc_alloc_init(GEOABAssignmentResponse);
        if (!GEOABAssignmentResponseReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_243;
        }
        PBReaderRecallMark();
        uint64_t v47 = 56;
        goto LABEL_167;
      case 22:
        if (!v34 || (*(unsigned char *)(a1 + 228) & 0x20) != 0) {
          goto LABEL_169;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_245;
        }
        int v46 = objc_alloc_init(GEORPSuggestionList);
        if (!GEORPSuggestionListReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_243;
        }
        PBReaderRecallMark();
        -[GEORPProblemContext _addNoFlagsAutocompleteSuggestionList:](a1, v46);
        goto LABEL_146;
      case 23:
        if (!v34) {
          goto LABEL_169;
        }
        if (*(unsigned char *)(a1 + 229))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_244;
          }
          int v70 = (int)(*(_DWORD *)(a1 + 228) << 23) >> 31;
          goto LABEL_211;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_244;
        }
        int v46 = objc_alloc_init(GEORPCurrentEnvironmentManifestURLs);
        if (!GEORPCurrentEnvironmentManifestURLsReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_243;
        }
        PBReaderRecallMark();
        uint64_t v47 = 64;
        goto LABEL_167;
      case 24:
        if (!v34 || (*(unsigned char *)(a1 + 229) & 8) != 0) {
          goto LABEL_169;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
        {
LABEL_245:
          char v71 = 0;
          goto LABEL_246;
        }
        int v46 = objc_alloc_init(GEORPPlaceInfo);
        if (!GEORPPlaceInfoReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_243;
        }
        PBReaderRecallMark();
        -[GEORPProblemContext _addNoFlagsDirectionsWaypointPlaceInfo:](a1, v46);
LABEL_146:

        goto LABEL_212;
      case 25:
        if (!v34) {
          goto LABEL_169;
        }
        if ((*(unsigned char *)(a1 + 230) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_244;
          }
          int v70 = (int)(*(_DWORD *)(a1 + 228) << 10) >> 31;
          goto LABEL_211;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_244;
        }
        int v46 = objc_alloc_init(GEOServicesState);
        if (!GEOServicesStateReadAllFrom((uint64_t)v46, (void *)v3)) {
          goto LABEL_243;
        }
        PBReaderRecallMark();
        uint64_t v47 = 176;
        goto LABEL_167;
      case 26:
        if (!v34) {
          goto LABEL_169;
        }
        if ((*(unsigned char *)(a1 + 230) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_244;
          }
          int v70 = (int)(*(_DWORD *)(a1 + 228) << 13) >> 31;
          goto LABEL_211;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_244;
        }
        int v46 = objc_alloc_init(GEORPPersonalizedMaps);
        if (!GEORPPersonalizedMapsReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_243;
        }
        PBReaderRecallMark();
        uint64_t v47 = 152;
        goto LABEL_167;
      case 27:
        if (!v34) {
          goto LABEL_169;
        }
        if (*(unsigned char *)(a1 + 230))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_244;
          }
          int v70 = (int)(*(_DWORD *)(a1 + 228) << 15) >> 31;
          goto LABEL_211;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_244;
        }
        int v46 = objc_alloc_init(GEORPNavigationSettings);
        if (!GEORPNavigationSettingsReadAllFrom((uint64_t)v46, (void *)v3)) {
          goto LABEL_243;
        }
        PBReaderRecallMark();
        uint64_t v47 = 128;
        goto LABEL_167;
      case 28:
        if (!v34)
        {
LABEL_169:
          char v69 = PBReaderSkipValueWithTag();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v69 & 1) == 0)
          {
LABEL_242:
            char v71 = 0;
            goto LABEL_247;
          }
LABEL_214:
          if (!v19 && v7 == 0) {
            goto LABEL_218;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 229) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_244;
          }
          int v70 = (int)(*(_DWORD *)(a1 + 228) << 16) >> 31;
LABEL_211:
          v7 += v70;
LABEL_212:
          BOOL v19 = v76;
LABEL_213:
          int v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_214;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_244;
        }
        int v46 = objc_alloc_init(GEORPMerchantLookupContext);
        if (GEORPMerchantLookupContextReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v47 = 120;
LABEL_167:
          char v61 = *(void **)(a1 + v47);
          *(void *)(a1 + v47) = v46;
LABEL_168:

          --v7;
          goto LABEL_212;
        }
LABEL_243:

LABEL_244:
        char v71 = 0;
        BOOL v19 = v76;
LABEL_246:
        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_247:
        *(_DWORD *)(a1 + 228) |= 0x20000u;
        *(_DWORD *)(a1 + 228) |= 0x4000u;
        *(_DWORD *)(a1 + 228) |= 0x1000000u;
        *(_DWORD *)(a1 + 228) |= 0x400000u;
        *(_DWORD *)(a1 + 228) |= 0x100000u;
        *(_DWORD *)(a1 + 228) |= 0x200u;
        *(_DWORD *)(a1 + 228) |= 0x400u;
        *(_DWORD *)(a1 + 228) |= 0x1000u;
        *(_DWORD *)(a1 + 228) |= 0x40u;
        *(_DWORD *)(a1 + 228) |= 0x800000u;
        *(_DWORD *)(a1 + 228) |= 0x80000u;
        *(_DWORD *)(a1 + 228) |= 0x2000u;
        *(_DWORD *)(a1 + 228) |= 0x80u;
        *(_DWORD *)(a1 + 228) |= 0x20u;
        *(_DWORD *)(a1 + 228) |= 0x100u;
        *(_DWORD *)(a1 + 228) |= 0x800u;
        *(_DWORD *)(a1 + 228) |= 0x200000u;
        *(_DWORD *)(a1 + 228) |= 0x40000u;
        *(_DWORD *)(a1 + 228) |= 0x10000u;
        *(_DWORD *)(a1 + 228) |= 0x8000u;
        if (v71)
        {
LABEL_248:
          uint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if (v19) {
            goto LABEL_249;
          }
        }
        else
        {
          uint64_t v3 = 0;
          if (v19)
          {
LABEL_249:
            char v74 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v48 = PBReaderSkipValueWithTag();
        int v21 = (int *)MEMORY[0x1E4F940C8];
        if (!v48) {
          goto LABEL_242;
        }
        goto LABEL_214;
    }
  }
}

void sub_189D48B00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D48C78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D49040(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D491B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D49328(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D496F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D49AB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D49CAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D4A0F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D4A268(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D4A3DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D4A5D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D4A744(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D4AB0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D4AC84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D4B04C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D4B1C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D4B334(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D4B4A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D4D640(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPProblemContextCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v63 = *MEMORY[0x1E4F143B8];
  [a1[17] readAll:1];
  [a1[14] readAll:1];
  long long v55 = 0u;
  long long v56 = 0u;
  long long v53 = 0u;
  long long v54 = 0u;
  id v2 = a1[25];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v53 objects:v62 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v54;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v54 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v53 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v53 objects:v62 count:16];
    }
    while (v4);
  }

  [a1[21] readAll:1];
  long long v51 = 0u;
  long long v52 = 0u;
  long long v49 = 0u;
  long long v50 = 0u;
  id v7 = a1[9];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v49 objects:v61 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v50;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v50 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v49 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v49 objects:v61 count:16];
    }
    while (v9);
  }

  long long v47 = 0u;
  long long v48 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  id v12 = a1[10];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v45 objects:v60 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v46;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v46 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v45 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v45 objects:v60 count:16];
    }
    while (v14);
  }

  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  id v17 = a1[5];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v41 objects:v59 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v42;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v42 != v20) {
          objc_enumerationMutation(v17);
        }
        [*(id *)(*((void *)&v41 + 1) + 8 * v21++) readAll:1];
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v41 objects:v59 count:16];
    }
    while (v19);
  }

  [a1[24] readAll:1];
  [a1[20] readAll:1];
  [a1[7] readAll:1];
  long long v39 = 0u;
  long long v40 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  id v22 = a1[4];
  uint64_t v23 = [v22 countByEnumeratingWithState:&v37 objects:v58 count:16];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)v38;
    do
    {
      uint64_t v26 = 0;
      do
      {
        if (*(void *)v38 != v25) {
          objc_enumerationMutation(v22);
        }
        [*(id *)(*((void *)&v37 + 1) + 8 * v26++) readAll:1];
      }
      while (v24 != v26);
      uint64_t v24 = [v22 countByEnumeratingWithState:&v37 objects:v58 count:16];
    }
    while (v24);
  }

  [a1[8] readAll:1];
  long long v35 = 0u;
  long long v36 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id v27 = a1[11];
  uint64_t v28 = [v27 countByEnumeratingWithState:&v33 objects:v57 count:16];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = *(void *)v34;
    do
    {
      uint64_t v31 = 0;
      do
      {
        if (*(void *)v34 != v30) {
          objc_enumerationMutation(v27);
        }
        objc_msgSend(*(id *)(*((void *)&v33 + 1) + 8 * v31++), "readAll:", 1, (void)v33);
      }
      while (v29 != v31);
      uint64_t v29 = [v27 countByEnumeratingWithState:&v33 objects:v57 count:16];
    }
    while (v29);
  }

  [a1[22] readAll:1];
  [a1[19] readAll:1];
  [a1[16] readAll:1];
  return [a1[15] readAll:1];
}

uint64_t GEORPProblemContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 212))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPProblemContextReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 216));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 208) = [v8 position];
  *(_DWORD *)(a1 + 212) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPProblemContextReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPProblemContextReadAllFrom_initialTag;
  }
  uint64_t Specified = GEORPProblemContextReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPProblemContextCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 216));
  return Specified;
}

void sub_189D4DC98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEORPProblemContextReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEORPProblemContextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D4DCFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPVisibleTileSetIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPVisibleTileKeyIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
        }
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_46;
        }
      }
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEORPTransitLineTileInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_38;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_38;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2) {
          goto LABEL_40;
        }
LABEL_32:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_40;
        }
        goto LABEL_37;
      }
      if (v17 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_40;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_37;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_40:
        BOOL v24 = 0;
        goto LABEL_39;
      }
LABEL_37:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_38;
      }
    }
    if (v15 != 2) {
      goto LABEL_40;
    }
    goto LABEL_32;
  }
LABEL_38:
  BOOL v24 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v24;
}

BOOL GEORPSuggestionListIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_36;
          }
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPSuggestionEntryIsValid(a1)) {
            goto LABEL_36;
          }
          goto LABEL_33;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRequestIsValid(a1)) {
            goto LABEL_36;
          }
          goto LABEL_33;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceResponseIsValid(a1)) {
            goto LABEL_36;
          }
LABEL_33:
          PBReaderRecallMark();
          goto LABEL_34;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_36:
            PBReaderRecallMark();
            return 0;
          }
LABEL_34:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_35;
          }
          break;
      }
    }
  }
LABEL_35:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189D4EB80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPProblemContextIsDirty(uint64_t a1)
{
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 216));
  int v2 = *(_DWORD *)(a1 + 228);
  if ((v2 & 0x2000000) != 0) {
    return 1;
  }
  if ((v2 & 0x20000) != 0)
  {
    if (GEOPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 136))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 228);
  }
  if ((v2 & 0x4000) != 0)
  {
    if (GEORPMapLocationIsDirty(*(void *)(a1 + 112))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 228);
  }
  if ((v2 & 0x1400000) == 0)
  {
    if ((v2 & 0x100000) == 0) {
      goto LABEL_12;
    }
    if ((GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 168)) & 1) == 0)
    {
      int v2 = *(_DWORD *)(a1 + 228);
LABEL_12:
      if ((v2 & 0x1640) != 0) {
        return 1;
      }
      if ((v2 & 0x800000) != 0)
      {
        if (GEORPTransitLineTileInfoIsDirty(*(void *)(a1 + 192))) {
          return 1;
        }
        int v2 = *(_DWORD *)(a1 + 228);
      }
      if ((v2 & 0x80000) != 0)
      {
        if (GEORPPlaceInfoIsDirty(*(os_unfair_lock_s **)(a1 + 160))) {
          return 1;
        }
        int v2 = *(_DWORD *)(a1 + 228);
      }
      if ((v2 & 0x2000) != 0) {
        return 1;
      }
      if ((v2 & 0x80) != 0)
      {
        if (GEOABAssignmentResponseIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
          return 1;
        }
        int v2 = *(_DWORD *)(a1 + 228);
      }
      if ((v2 & 0x20) != 0) {
        return 1;
      }
      if ((v2 & 0x100) != 0)
      {
        if (GEORPCurrentEnvironmentManifestURLsIsDirty(*(os_unfair_lock_s **)(a1 + 64))) {
          return 1;
        }
        int v2 = *(_DWORD *)(a1 + 228);
      }
      if ((v2 & 0x250800) != 0) {
        return 1;
      }
      if ((v2 & 0x8000) != 0)
      {
        if (GEORPMerchantLookupContextIsDirty(*(os_unfair_lock_s **)(a1 + 120))) {
          return 1;
        }
        int v2 = *(_DWORD *)(a1 + 228);
      }
      if ((v2 & 0x200) != 0)
      {
        long long v42 = 0u;
        long long v43 = 0u;
        long long v40 = 0u;
        long long v41 = 0u;
        id v5 = *(id *)(a1 + 72);
        uint64_t v6 = [v5 countByEnumeratingWithState:&v40 objects:v48 count:16];
        if (v6)
        {
          uint64_t v7 = v6;
          uint64_t v8 = *(void *)v41;
LABEL_36:
          uint64_t v9 = 0;
          while (1)
          {
            if (*(void *)v41 != v8) {
              objc_enumerationMutation(v5);
            }
            if (GEODirectionsRequestIsDirty(*(os_unfair_lock_s **)(*((void *)&v40 + 1) + 8 * v9))) {
              goto LABEL_84;
            }
            if (v7 == ++v9)
            {
              uint64_t v7 = [v5 countByEnumeratingWithState:&v40 objects:v48 count:16];
              if (v7) {
                goto LABEL_36;
              }
              break;
            }
          }
        }

        int v2 = *(_DWORD *)(a1 + 228);
      }
      if ((v2 & 0x400) != 0)
      {
        long long v38 = 0u;
        long long v39 = 0u;
        long long v36 = 0u;
        long long v37 = 0u;
        id v5 = *(id *)(a1 + 80);
        uint64_t v10 = [v5 countByEnumeratingWithState:&v36 objects:v47 count:16];
        if (v10)
        {
          uint64_t v11 = v10;
          uint64_t v12 = *(void *)v37;
LABEL_46:
          uint64_t v13 = 0;
          while (1)
          {
            if (*(void *)v37 != v12) {
              objc_enumerationMutation(v5);
            }
            if (GEODirectionsResponseIsDirty(*(os_unfair_lock_s **)(*((void *)&v36 + 1) + 8 * v13))) {
              goto LABEL_84;
            }
            if (v11 == ++v13)
            {
              uint64_t v11 = [v5 countByEnumeratingWithState:&v36 objects:v47 count:16];
              if (v11) {
                goto LABEL_46;
              }
              break;
            }
          }
        }

        int v2 = *(_DWORD *)(a1 + 228);
      }
      if ((v2 & 0x40) != 0)
      {
        long long v34 = 0u;
        long long v35 = 0u;
        long long v32 = 0u;
        long long v33 = 0u;
        id v5 = *(id *)(a1 + 40);
        uint64_t v14 = [v5 countByEnumeratingWithState:&v32 objects:v46 count:16];
        if (v14)
        {
          uint64_t v15 = v14;
          uint64_t v16 = *(void *)v33;
LABEL_56:
          uint64_t v17 = 0;
          while (1)
          {
            if (*(void *)v33 != v16) {
              objc_enumerationMutation(v5);
            }
            if (GEORPAuxiliaryControlIsDirty(*(os_unfair_lock_s **)(*((void *)&v32 + 1) + 8 * v17))) {
              goto LABEL_84;
            }
            if (v15 == ++v17)
            {
              uint64_t v15 = [v5 countByEnumeratingWithState:&v32 objects:v46 count:16];
              if (v15) {
                goto LABEL_56;
              }
              break;
            }
          }
        }

        int v2 = *(_DWORD *)(a1 + 228);
      }
      if ((v2 & 0x20) != 0)
      {
        long long v30 = 0u;
        long long v31 = 0u;
        long long v28 = 0u;
        long long v29 = 0u;
        id v5 = *(id *)(a1 + 32);
        uint64_t v18 = [v5 countByEnumeratingWithState:&v28 objects:v45 count:16];
        if (v18)
        {
          uint64_t v19 = v18;
          uint64_t v20 = *(void *)v29;
LABEL_66:
          uint64_t v21 = 0;
          while (1)
          {
            if (*(void *)v29 != v20) {
              objc_enumerationMutation(v5);
            }
            if (GEORPSuggestionListIsDirty(*(os_unfair_lock_s **)(*((void *)&v28 + 1) + 8 * v21))) {
              goto LABEL_84;
            }
            if (v19 == ++v21)
            {
              uint64_t v19 = [v5 countByEnumeratingWithState:&v28 objects:v45 count:16];
              if (v19) {
                goto LABEL_66;
              }
              break;
            }
          }
        }

        int v2 = *(_DWORD *)(a1 + 228);
      }
      if ((v2 & 0x800) == 0) {
        return 0;
      }
      long long v26 = 0u;
      long long v27 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      id v5 = *(id *)(a1 + 88);
      uint64_t v3 = [v5 countByEnumeratingWithState:&v24 objects:v44 count:16];
      if (!v3)
      {
LABEL_85:

        return v3;
      }
      uint64_t v22 = *(void *)v25;
LABEL_77:
      uint64_t v23 = 0;
      while (1)
      {
        if (*(void *)v25 != v22) {
          objc_enumerationMutation(v5);
        }
        if (GEORPPlaceInfoIsDirty(*(os_unfair_lock_s **)(*((void *)&v24 + 1) + 8 * v23))) {
          break;
        }
        if (v3 == ++v23)
        {
          uint64_t v3 = [v5 countByEnumeratingWithState:&v24 objects:v44 count:16];
          if (v3) {
            goto LABEL_77;
          }
          goto LABEL_85;
        }
      }
LABEL_84:
      uint64_t v3 = 1;
      goto LABEL_85;
    }
  }
  return 1;
}

os_unfair_lock_s *GEORPProblemContextIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPProblemContextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 54);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void *GEORPSuggestionListHasSensitiveFields(void *result, uint64_t a2)
{
  if (result)
  {
    uint64_t v3 = [result autocompleteRequest];
    uint64_t HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void GEORPSuggestionListClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasAutocompleteRequest]
    && ([a1 autocompleteRequest],
        id v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    uint64_t v7 = [a1 autocompleteRequest];
    id v8 = (id)[v7 copy];

    GEOPDPlaceRequestClearSensitiveFields(v8, a2, 0);
    [a1 setAutocompleteRequest:v8];
  }
  else
  {
    id v8 = [a1 autocompleteRequest];
    [v8 clearSensitiveFields:a2];
  }
}

void sub_189D502B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D513F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPProblemCorrectionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 108);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 104)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint16x4_t v11 = (uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 120));
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16(v11, (uint16x4_t)0xFFF9FFFEFFFDFFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 120) >> 6) & 1)+ ((*(_WORD *)(a1 + 120) >> 1) & 1)+ ((*(_WORD *)(a1 + 120) >> 11) & 1))+ (unsigned __int16)vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16(v11, (uint16x4_t)0xFFF7FFFCFFF6FFF8), (int8x8_t)0x1000100010001));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        unsigned __int8 v15 = v10 | (v12 > 7);
        if ((v15 | v8)) {
          uint64_t v16 = 0;
        }
        else {
          uint64_t v16 = a3;
        }
        BOOL v17 = v15;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        char v58 = (v16 == 0) | v15;
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        BOOL v57 = v15;
        break;
      default:
        ++v12;
LABEL_6:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_128;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_128:
      if (v17)
      {
        char v52 = 1;
        goto LABEL_147;
      }
      if (v16)
      {
        while (1)
        {
          int v53 = *v16++;
          __int16 v54 = 8;
          switch(v53)
          {
            case 0:
              goto LABEL_148;
            case 1:
              goto LABEL_142;
            case 2:
              __int16 v54 = 32;
              goto LABEL_142;
            case 3:
              __int16 v54 = 4;
              goto LABEL_142;
            case 4:
              __int16 v54 = 128;
              goto LABEL_142;
            case 5:
              __int16 v54 = 64;
              goto LABEL_142;
            case 6:
              __int16 v54 = 2;
              goto LABEL_142;
            case 8:
              __int16 v54 = 2048;
              goto LABEL_142;
            case 9:
              __int16 v54 = 256;
              goto LABEL_142;
            case 10:
              __int16 v54 = 1024;
              goto LABEL_142;
            case 15:
              __int16 v54 = 16;
              goto LABEL_142;
            case 16:
              __int16 v54 = 512;
LABEL_142:
              *(_WORD *)(a1 + 120) |= v54;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_148;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v17;
    if ((v58 & 1) == 0)
    {
      long long v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32 || (*(_WORD *)(a1 + 120) & 8) != 0) {
          goto LABEL_103;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_144;
        }
        long long v37 = objc_alloc_init(GEORPCorrectedField);
        if (!GEORPCorrectedFieldReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1)) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        -[GEORPProblemCorrections _addNoFlagsCorrectedField:](a1, v37);
        goto LABEL_95;
      case 2:
        if (!v32) {
          goto LABEL_103;
        }
        if ((*(_WORD *)(a1 + 120) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_144;
          }
          __int16 v51 = *(_WORD *)(a1 + 120) << 10;
          goto LABEL_125;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_144;
        }
        long long v37 = objc_alloc_init(GEORPCorrectedLabel);
        if (!GEORPCorrectedLabelReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1)) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        uint64_t v38 = 48;
        goto LABEL_101;
      case 3:
        if (!v32) {
          goto LABEL_103;
        }
        if ((*(_WORD *)(a1 + 120) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_144;
          }
          __int16 v51 = *(_WORD *)(a1 + 120) << 13;
          goto LABEL_125;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_144;
        }
        long long v37 = objc_alloc_init(GEORPCorrectedCoordinate);
        if (!GEORPCorrectedCoordinateReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1)) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        uint64_t v38 = 24;
        goto LABEL_101;
      case 4:
        if (!v32) {
          goto LABEL_103;
        }
        if ((*(_WORD *)(a1 + 120) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_144;
          }
          __int16 v51 = *(_WORD *)(a1 + 120) << 8;
          goto LABEL_125;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_144;
        }
        long long v37 = objc_alloc_init(GEORPCorrectedSearch);
        if (!GEORPCorrectedSearchReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1)) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        uint64_t v38 = 64;
        goto LABEL_101;
      case 5:
        if (!v32) {
          goto LABEL_103;
        }
        if ((*(_WORD *)(a1 + 120) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_144;
          }
          __int16 v51 = *(_WORD *)(a1 + 120) << 9;
          goto LABEL_125;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_144;
        }
        long long v37 = objc_alloc_init(GEORPMapLocation);
        if (!GEORPMapLocationReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1)) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        uint64_t v38 = 56;
        goto LABEL_101;
      case 6:
        if (!v32) {
          goto LABEL_103;
        }
        if ((*(_WORD *)(a1 + 120) & 2) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          long long v40 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v39;

          --v7;
          goto LABEL_126;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_144;
        }
        __int16 v51 = *(_WORD *)(a1 + 120) << 14;
        goto LABEL_125;
      case 8:
        if (!v32) {
          goto LABEL_103;
        }
        if ((*(_WORD *)(a1 + 120) & 0x800) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_144;
          }
          __int16 v51 = 16 * *(_WORD *)(a1 + 120);
          goto LABEL_125;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_144;
        }
        long long v37 = objc_alloc_init(GEORPPlaceProblem);
        if (!GEORPPlaceProblemReadAllFrom((uint64_t)v37, (void *)v3)) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        uint64_t v38 = 96;
        goto LABEL_101;
      case 9:
        if (!v32) {
          goto LABEL_103;
        }
        if ((*(_WORD *)(a1 + 120) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_144;
          }
          __int16 v51 = *(_WORD *)(a1 + 120) << 7;
          goto LABEL_125;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_144;
        }
        long long v37 = objc_alloc_init(GEORPDirectionsProblem);
        if (!GEORPDirectionsProblemReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1)) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        uint64_t v38 = 72;
        goto LABEL_101;
      case 10:
        if (!v32 || (*(_WORD *)(a1 + 120) & 0x400) != 0) {
          goto LABEL_103;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_144;
        }
        long long v37 = objc_alloc_init(GEORPPhotoWithMetadata);
        if (!GEORPPhotoWithMetadataReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1)) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        -[GEORPProblemCorrections _addNoFlagsPhotoWithMetadata:](a1, v37);
        goto LABEL_95;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_103;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + 120) |= 1u;
        while (2)
        {
          uint64_t v45 = *v18;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v20) + v46);
            *(void *)(v3 + v4std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v28 = v43++ >= 9;
              if (v28)
              {
                uint64_t v44 = 0;
                goto LABEL_108;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v44 = 0;
        }
LABEL_108:
        *(unsigned char *)(a1 + 116) = v44 != 0;
        goto LABEL_127;
      case 15:
        if (!v32 || (*(_WORD *)(a1 + 120) & 0x10) != 0) {
          goto LABEL_103;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_144;
        }
        long long v37 = objc_alloc_init(GEORPCorrectedFlag);
        if (!GEORPCorrectedFlagReadAllFrom((uint64_t)v37, (void *)v3)) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        -[GEORPProblemCorrections _addNoFlagsCorrectedFlag:](a1, v37);
LABEL_95:

        goto LABEL_102;
      case 16:
        if (!v32)
        {
LABEL_103:
          char v50 = PBReaderSkipValueWithTag();
          uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v50 & 1) == 0)
          {
LABEL_143:
            char v52 = 0;
            goto LABEL_147;
          }
LABEL_127:
          if (!v17 && v7 == 0) {
            goto LABEL_128;
          }
          continue;
        }
        if ((*(_WORD *)(a1 + 120) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_144:
            char v52 = 0;
            goto LABEL_146;
          }
          __int16 v51 = *(_WORD *)(a1 + 120) << 6;
LABEL_125:
          v7 += v51 >> 15;
          goto LABEL_126;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_144;
        }
        long long v37 = objc_alloc_init(GEORPMerchantLookupCorrections);
        if (GEORPMerchantLookupCorrectionsReadAllFrom((uint64_t)v37, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v38 = 80;
LABEL_101:
          uint64_t v49 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          --v7;
LABEL_102:
          BOOL v17 = v57;
LABEL_126:
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_127;
        }
LABEL_145:

        char v52 = 0;
        BOOL v17 = v57;
LABEL_146:
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_147:
        *(_WORD *)(a1 + 120) |= 8u;
        *(_WORD *)(a1 + 120) |= 0x20u;
        *(_WORD *)(a1 + 120) |= 4u;
        *(_WORD *)(a1 + 120) |= 0x80u;
        *(_WORD *)(a1 + 120) |= 0x40u;
        *(_WORD *)(a1 + 120) |= 2u;
        *(_WORD *)(a1 + 120) |= 0x800u;
        *(_WORD *)(a1 + 120) |= 0x100u;
        *(_WORD *)(a1 + 120) |= 0x400u;
        *(_WORD *)(a1 + 120) |= 0x10u;
        *(_WORD *)(a1 + 120) |= 0x200u;
        if (v52)
        {
LABEL_148:
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v17) {
            goto LABEL_149;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v17)
          {
LABEL_149:
            long long v55 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v41 = PBReaderSkipValueWithTag();
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v41) {
          goto LABEL_143;
        }
        goto LABEL_127;
    }
  }
}

void sub_189D52350(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D524C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D52630(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D527A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D52910(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D52A80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D52BEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D52D5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D5318C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D53550(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D5466C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPProblemCorrectionsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v2 = a1[4];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v26 objects:v32 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v27;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v27 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v26 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v26 objects:v32 count:16];
    }
    while (v4);
  }

  [a1[6] readAll:1];
  [a1[3] readAll:1];
  [a1[8] readAll:1];
  [a1[7] readAll:1];
  [a1[12] readAll:1];
  [a1[9] readAll:1];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v7 = a1[11];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v22 objects:v31 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v23;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v23 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v22 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v22 objects:v31 count:16];
    }
    while (v9);
  }

  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v12 = a1[5];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v18 objects:v30 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v19;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v19 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v18 + 1) + 8 * v16++), "readAll:", 1, (void)v18);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v18 objects:v30 count:16];
    }
    while (v14);
  }

  return [a1[10] readAll:1];
}

unint64_t GEORPProblemCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 108))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPProblemCorrectionsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 104) = [v8 position];
  *(_DWORD *)(a1 + 108) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPProblemCorrectionsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPProblemCorrectionsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPProblemCorrectionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPProblemCorrectionsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 112));
  return Specified;
}

void sub_189D54AAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPProblemCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPProblemCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D54B10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D54F58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPProblemCorrectionsIsDirty(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  __int16 v2 = *(_WORD *)(a1 + 120);
  if ((v2 & 0x1008) != 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEORPCorrectedLabelIsDirty(*(void *)(a1 + 48))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 120);
  }
  if ((v2 & 4) != 0)
  {
    if (GEORPCorrectedCoordinateIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 120);
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEORPCorrectedSearchIsDirty(*(os_unfair_lock_s **)(a1 + 64))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 120);
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEORPMapLocationIsDirty(*(void *)(a1 + 56))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 120);
  }
  if ((v2 & 0x802) == 0)
  {
    if ((v2 & 0x100) != 0)
    {
      if (GEORPDirectionsProblemIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
        return 1;
      }
      __int16 v2 = *(_WORD *)(a1 + 120);
    }
    if ((v2 & 0x610) == 0)
    {
      if ((v2 & 8) != 0)
      {
        long long v18 = 0u;
        long long v19 = 0u;
        long long v16 = 0u;
        long long v17 = 0u;
        id v5 = *(id *)(a1 + 32);
        uint64_t v6 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
        if (v6)
        {
          uint64_t v7 = v6;
          uint64_t v8 = *(void *)v17;
LABEL_24:
          uint64_t v9 = 0;
          while (1)
          {
            if (*(void *)v17 != v8) {
              objc_enumerationMutation(v5);
            }
            if (GEORPCorrectedFieldIsDirty(*(void *)(*((void *)&v16 + 1) + 8 * v9))) {
              goto LABEL_42;
            }
            if (v7 == ++v9)
            {
              uint64_t v7 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
              if (v7) {
                goto LABEL_24;
              }
              break;
            }
          }
        }

        __int16 v2 = *(_WORD *)(a1 + 120);
      }
      if ((v2 & 0x400) == 0) {
        return 0;
      }
      long long v14 = 0u;
      long long v15 = 0u;
      long long v12 = 0u;
      long long v13 = 0u;
      id v5 = *(id *)(a1 + 88);
      uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
      if (!v3)
      {
LABEL_43:

        return v3;
      }
      uint64_t v10 = *(void *)v13;
LABEL_35:
      uint64_t v11 = 0;
      while (1)
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v5);
        }
        if (GEORPPhotoWithMetadataIsDirty(*(void *)(*((void *)&v12 + 1) + 8 * v11))) {
          break;
        }
        if (v3 == ++v11)
        {
          uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
          if (v3) {
            goto LABEL_35;
          }
          goto LABEL_43;
        }
      }
LABEL_42:
      uint64_t v3 = 1;
      goto LABEL_43;
    }
  }
  return 1;
}

os_unfair_lock_s *GEORPProblemCorrectionsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPProblemCorrectionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 28);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189D55B80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D56534(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPProblemOptInRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFFFFFEFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 2;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          long long v16 = 0;
        }
        else {
          long long v16 = a3;
        }
        char v56 = (v16 == 0) | v15;
        long long v17 = (int *)MEMORY[0x1E4F940E8];
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        long long v19 = (int *)MEMORY[0x1E4F940B8];
        char v55 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_80;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_80:
      if (v15)
      {
        char v49 = 1;
        goto LABEL_91;
      }
      if (v16)
      {
        while (1)
        {
          int v50 = *v16++;
          char v51 = 4;
          switch(v50)
          {
            case 0:
              goto LABEL_92;
            case 1:
              goto LABEL_87;
            case 3:
              char v51 = 8;
              goto LABEL_87;
            case 4:
              char v51 = 2;
              goto LABEL_87;
            case 5:
              char v51 = 16;
LABEL_87:
              *(unsigned char *)(a1 + 64) |= v51;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_92;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v56 & 1) == 0)
    {
      BOOL v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_63;
        }
        if ((*(unsigned char *)(a1 + 64) & 4) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 24;
          goto LABEL_61;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_90;
        }
        char v48 = 32 * *(unsigned char *)(a1 + 64);
        goto LABEL_77;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_63;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (2)
        {
          uint64_t v42 = *v17;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(v3 + *v19) + v43);
            *(void *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v27 = v40++ >= 9;
              if (v27)
              {
                uint64_t v41 = 0;
                goto LABEL_68;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v41 = 0;
        }
LABEL_68:
        *(unsigned char *)(a1 + 60) = v41 != 0;
        goto LABEL_79;
      case 3:
        if (!v31) {
          goto LABEL_63;
        }
        if ((*(unsigned char *)(a1 + 64) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_90;
          }
          char v48 = 16 * *(unsigned char *)(a1 + 64);
LABEL_77:
          v7 += v48 >> 7;
LABEL_78:
          char v15 = v55;
          long long v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_79:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_80;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_90;
        }
        __int16 v54 = objc_alloc_init(GEORPUserCredentials);
        if (GEORPUserCredentialsReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v46 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v54;
LABEL_62:

          --v7;
          goto LABEL_78;
        }

LABEL_90:
        char v49 = 0;
        char v15 = v55;
        long long v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_91:
        *(unsigned char *)(a1 + 64) |= 4u;
        *(unsigned char *)(a1 + 64) |= 8u;
        *(unsigned char *)(a1 + 64) |= 2u;
        *(unsigned char *)(a1 + 64) |= 0x10u;
        if (v49)
        {
LABEL_92:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_93;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_93:
            char v52 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 4:
        if (!v31) {
          goto LABEL_63;
        }
        if ((*(unsigned char *)(a1 + 64) & 2) == 0)
        {
          uint64_t v36 = PBReaderReadData();
          uint64_t v37 = 16;
          goto LABEL_61;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_90;
        }
        char v48 = *(unsigned char *)(a1 + 64) << 6;
        goto LABEL_77;
      case 5:
        if (!v31)
        {
LABEL_63:
          char v47 = PBReaderSkipValueWithTag();
          long long v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v55;
          if ((v47 & 1) == 0)
          {
LABEL_88:
            char v49 = 0;
            goto LABEL_91;
          }
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 64) & 0x10) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 40;
LABEL_61:
          uint64_t v46 = *(void **)(a1 + v37);
          *(void *)(a1 + v37) = v36;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_90;
        }
        char v48 = 8 * *(unsigned char *)(a1 + 64);
        goto LABEL_77;
      default:
        int v38 = PBReaderSkipValueWithTag();
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v55;
        if (!v38) {
          goto LABEL_88;
        }
        goto LABEL_79;
    }
  }
}

void sub_189D56D88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D56EF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D57064(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D57704(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPProblemOptInRequestReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPProblemOptInRequestReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 48) = [v6 position];
      *(_DWORD *)(a1 + 52) = [v6 length];
      unint64_t Specified = GEORPProblemOptInRequestReadSpecified(a1, (unint64_t)v6, (int *)&GEORPProblemOptInRequestReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189D57880(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D57D3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D5805C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D58F80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D59398(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPProblemRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = *(unsigned __int16 *)(a1 + 108);
  unsigned int v12 = ((v11 >> 6) & 1)
      + ((v11 >> 1) & 1)
      + ((v11 >> 3) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v11), (uint16x4_t)0xFFFCFFFEFFF9FFF8), (int8x8_t)0x1000100010001))+ (v11 & 1)+ ((v11 >> 9) & 1)+ ((v11 >> 5) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v15 = v10 | (v12 > 7);
        if ((v15 | v8)) {
          long long v16 = 0;
        }
        else {
          long long v16 = a3;
        }
        LODWORD(v17) = v15;
        char v52 = (v16 == 0) | v15;
        long long v18 = (int *)MEMORY[0x1E4F940E8];
        long long v19 = (int *)MEMORY[0x1E4F940C8];
        char v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_6:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_109;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_109:
      if (v17)
      {
        char v45 = 1;
        goto LABEL_128;
      }
      if (v16)
      {
        while (1)
        {
          int v47 = *v16++;
          int v46 = v47;
          __int16 v48 = 128;
          switch(v47)
          {
            case 0:
              goto LABEL_129;
            case 1:
              goto LABEL_123;
            case 2:
            case 3:
            case 4:
            case 5:
            case 7:
            case 8:
              continue;
            case 6:
              __int16 v48 = 256;
              goto LABEL_123;
            case 9:
              __int16 v48 = 1;
              goto LABEL_123;
            case 10:
              __int16 v48 = 4;
              goto LABEL_123;
            case 11:
              __int16 v48 = 16;
              goto LABEL_123;
            case 12:
              __int16 v48 = 512;
              goto LABEL_123;
            case 13:
              __int16 v48 = 32;
              goto LABEL_123;
            case 14:
              __int16 v48 = 2;
              goto LABEL_123;
            case 15:
              __int16 v48 = 64;
              goto LABEL_123;
            default:
              if (v46 != 202) {
                continue;
              }
              __int16 v48 = 8;
LABEL_123:
              *(_WORD *)(a1 + 108) |= v48;
              break;
          }
        }
      }
      goto LABEL_129;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = (char)v17;
    if ((v52 & 1) == 0)
    {
      int v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_84;
        }
        if ((*(_WORD *)(a1 + 108) & 0x80) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_125;
          }
          int v51 = (int)v17;
          long long v17 = objc_alloc_init(GEORPProblem);
          if (GEORPProblemReadAllFrom((uint64_t)v17, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            uint64_t v37 = 72;
            goto LABEL_79;
          }
          goto LABEL_126;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_125;
        }
        __int16 v44 = *(_WORD *)(a1 + 108) << 8;
        goto LABEL_106;
      case 2:
      case 3:
      case 4:
      case 5:
      case 7:
      case 8:
        goto LABEL_48;
      case 6:
        if (!v32) {
          goto LABEL_84;
        }
        if ((*(_WORD *)(a1 + 108) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_125;
          }
          __int16 v44 = *(_WORD *)(a1 + 108) << 7;
          goto LABEL_106;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_125;
        }
        int v51 = (int)v17;
        long long v17 = objc_alloc_init(GEORPUserCredentials);
        if (!GEORPUserCredentialsReadAllFrom((uint64_t)v17, (void *)v3, v9 & 1)) {
          goto LABEL_126;
        }
        PBReaderRecallMark();
        uint64_t v37 = 80;
        goto LABEL_79;
      case 9:
        if (!v32) {
          goto LABEL_84;
        }
        if (*(_WORD *)(a1 + 108))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_125;
          }
          v7 -= *(_WORD *)(a1 + 108) & 1;
          goto LABEL_107;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_125;
        }
        int v51 = (int)v17;
        long long v17 = objc_alloc_init(GEOPDAnalyticMetadata);
        if (!GEOPDAnalyticMetadataReadAllFrom((uint64_t)v17, (void *)v3, v9 & 1)) {
          goto LABEL_126;
        }
        PBReaderRecallMark();
        uint64_t v37 = 16;
        goto LABEL_79;
      case 10:
        if (!v32) {
          goto LABEL_84;
        }
        if ((*(_WORD *)(a1 + 108) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_125;
          }
          __int16 v44 = *(_WORD *)(a1 + 108) << 13;
          goto LABEL_106;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_125;
        }
        int v51 = (int)v17;
        long long v17 = objc_alloc_init(GEOPDClientMetadata);
        if (!GEOPDClientMetadataReadAllFrom((uint64_t)v17, (void *)v3, v9 & 1)) {
          goto LABEL_126;
        }
        PBReaderRecallMark();
        uint64_t v37 = 32;
        goto LABEL_79;
      case 11:
        if (!v32) {
          goto LABEL_84;
        }
        if ((*(_WORD *)(a1 + 108) & 0x10) == 0)
        {
          uint64_t v39 = PBReaderReadData();
          uint64_t v40 = 48;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_125;
        }
        __int16 v44 = *(_WORD *)(a1 + 108) << 11;
        goto LABEL_106;
      case 12:
        if (!v32) {
          goto LABEL_84;
        }
        if ((*(_WORD *)(a1 + 108) & 0x200) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 88;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_125;
        }
        __int16 v44 = *(_WORD *)(a1 + 108) << 6;
        goto LABEL_106;
      case 13:
        if (!v32) {
          goto LABEL_84;
        }
        if ((*(_WORD *)(a1 + 108) & 0x20) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 56;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_125;
        }
        __int16 v44 = *(_WORD *)(a1 + 108) << 10;
        goto LABEL_106;
      case 14:
        if (!v32) {
          goto LABEL_84;
        }
        if ((*(_WORD *)(a1 + 108) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_125;
          }
          __int16 v44 = *(_WORD *)(a1 + 108) << 14;
LABEL_106:
          v7 += v44 >> 15;
LABEL_107:
          long long v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_108:
          if (!(v17 & 1 | (v7 != 0))) {
            goto LABEL_109;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_125;
        }
        int v51 = (int)v17;
        long long v17 = objc_alloc_init(GEORPClientCapabilities);
        if (GEORPClientCapabilitiesReadAllFrom((uint64_t)v17, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v37 = 24;
LABEL_79:
          uint64_t v41 = *(void **)(a1 + v37);
          *(void *)(a1 + v37) = v17;

          --v7;
          LODWORD(v17) = v51;
          goto LABEL_107;
        }
LABEL_126:

        char v45 = 0;
        LOBYTE(v17) = v51;
LABEL_127:
        long long v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_128:
        *(_WORD *)(a1 + 108) |= 0x80u;
        *(_WORD *)(a1 + 108) |= 0x100u;
        *(_WORD *)(a1 + 108) |= 1u;
        *(_WORD *)(a1 + 108) |= 4u;
        *(_WORD *)(a1 + 108) |= 0x10u;
        *(_WORD *)(a1 + 108) |= 0x200u;
        *(_WORD *)(a1 + 108) |= 0x20u;
        *(_WORD *)(a1 + 108) |= 2u;
        *(_WORD *)(a1 + 108) |= 0x40u;
        *(_WORD *)(a1 + 108) |= 8u;
        if (v45)
        {
LABEL_129:
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v17) {
            goto LABEL_130;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v17)
          {
LABEL_130:
            char v49 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 15:
        if (!v32) {
          goto LABEL_84;
        }
        if ((*(_WORD *)(a1 + 108) & 0x40) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 64;
LABEL_83:
          uint64_t v42 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
          goto LABEL_107;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_125;
        }
        __int16 v44 = *(_WORD *)(a1 + 108) << 9;
        goto LABEL_106;
      default:
        if (v31 != 202)
        {
LABEL_48:
          int v38 = PBReaderSkipValueWithTag();
          long long v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v38) {
            goto LABEL_124;
          }
          goto LABEL_108;
        }
        if (!v32)
        {
LABEL_84:
          char v43 = PBReaderSkipValueWithTag();
          long long v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v43 & 1) == 0)
          {
LABEL_124:
            char v45 = 0;
            goto LABEL_128;
          }
          goto LABEL_108;
        }
        if ((*(_WORD *)(a1 + 108) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_125;
          }
          int v51 = (int)v17;
          long long v17 = objc_alloc_init(GEORPDebugSettings);
          if (!GEORPDebugSettingsReadAllFrom((uint64_t)v17, (void *)v3)) {
            goto LABEL_126;
          }
          PBReaderRecallMark();
          uint64_t v37 = 40;
          goto LABEL_79;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_125:
          char v45 = 0;
          goto LABEL_127;
        }
        __int16 v44 = *(_WORD *)(a1 + 108) << 12;
        goto LABEL_106;
    }
  }
}

void sub_189D59EF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D5A068(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D5A1D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D5A344(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D5A4B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D5A620(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D5A790(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D5A900(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D5AA70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D5B500(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPProblemRequestCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 72) readAll:1];
  [*(id *)(a1 + 80) readAll:1];
  [*(id *)(a1 + 16) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  __int16 v2 = *(void **)(a1 + 40);

  return [v2 readAll:1];
}

unint64_t GEORPProblemRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPProblemRequestReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPProblemRequestReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPProblemRequestReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPProblemRequestReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPProblemRequestCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_189D5B730(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPProblemRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPProblemRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D5B794(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPProblemRequestIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPProblemIsValid(a1)) {
            goto LABEL_50;
          }
          goto LABEL_55;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 7u:
        case 8u:
          goto LABEL_52;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPUserCredentialsIsValid(a1)) {
            goto LABEL_55;
          }
          goto LABEL_50;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAnalyticMetadataIsValid(a1)) {
            goto LABEL_55;
          }
          goto LABEL_50;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDClientMetadataIsValid(a1)) {
            goto LABEL_55;
          }
          goto LABEL_50;
        case 0xBu:
          if (v15 == 2) {
            goto LABEL_52;
          }
          goto LABEL_55;
        case 0xCu:
          if (v15 == 2) {
            goto LABEL_52;
          }
          goto LABEL_55;
        case 0xDu:
          if (v15 == 2) {
            goto LABEL_52;
          }
          goto LABEL_55;
        case 0xEu:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPClientCapabilitiesIsValid(a1)) {
            goto LABEL_50;
          }
          goto LABEL_55;
        case 0xFu:
          if (v15 == 2) {
            goto LABEL_52;
          }
          goto LABEL_55;
        default:
          if ((v8 >> 3) == 202)
          {
            if (v15 != 2 || !PBReaderPlaceMark() || !GEORPDebugSettingsIsValid(a1))
            {
LABEL_55:
              PBReaderRecallMark();
              return 0;
            }
LABEL_50:
            PBReaderRecallMark();
          }
          else
          {
LABEL_52:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_55;
            }
          }
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_54;
          }
          break;
      }
    }
  }
LABEL_54:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189D5BD50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPProblemRequestIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 108);
  if ((v2 & 0x400) != 0) {
    return 1;
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEORPProblemIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 108);
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEORPUserCredentialsIsDirty(*(void *)(a1 + 80))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 108);
  }
  if (v2)
  {
    if (GEOPDAnalyticMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 16))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 108);
  }
  if ((v2 & 4) == 0) {
    goto LABEL_14;
  }
  if (GEOPDClientMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
    return 1;
  }
  unsigned int v2 = *(unsigned __int16 *)(a1 + 108);
LABEL_14:
  if ((v2 & 0x272) != 0) {
    return 1;
  }
  return (v2 >> 3) & 1;
}

os_unfair_lock_s *GEORPProblemRequestIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPProblemRequestIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEORPProblemRequestClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3)
  {
    if ([a1 hasProblem]
      && ([a1 problem],
          id v5 = objc_claimAutoreleasedReturnValue(),
          int HasSensitiveFields = GEORPProblemHasSensitiveFields(v5, a2),
          v5,
          HasSensitiveFields))
    {
      unsigned int v7 = [a1 problem];
      unint64_t v8 = (void *)[v7 copy];

      GEORPProblemClearSensitiveFields(v8, a2, 0);
      [a1 setProblem:v8];
    }
    else
    {
      unint64_t v8 = [a1 problem];
      [v8 clearSensitiveFields:a2];
    }

    if ([a1 hasClientMetadata])
    {
      uint64_t v10 = [a1 clientMetadata];
      int v11 = GEOPDClientMetadataHasSensitiveFields(v10);

      if (v11)
      {
        char v12 = [a1 clientMetadata];
        uint64_t v13 = (id *)[v12 copy];

        GEOPDClientMetadataClearSensitiveFields(v13, a2, 0);
        [a1 setClientMetadata:v13];
        goto LABEL_11;
      }
    }
  }
  else
  {
    uint64_t v9 = [a1 problem];
    [v9 clearSensitiveFields:a2];
  }
  uint64_t v13 = [a1 clientMetadata];
  [v13 clearSensitiveFields:a2];
LABEL_11:
}

uint64_t GEORPProblemRequestHasSensitiveFields(void *a1, uint64_t a2)
{
  if (!a1) {
    return 0;
  }
  uint64_t v4 = [a1 problem];
  if (GEORPProblemHasSensitiveFields(v4, a2))
  {
    uint64_t HasSensitiveFields = 1;
  }
  else
  {
    char v6 = [a1 clientMetadata];
    uint64_t HasSensitiveFields = GEOPDClientMetadataHasSensitiveFields(v6);
  }
  return HasSensitiveFields;
}

void sub_189D5C514(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPProblemResponseReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0) {
              goto LABEL_44;
            }
            v26 += 7;
            BOOL v15 = v27++ >= 9;
            if (v15)
            {
              uint64_t v28 = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6]) {
            uint64_t v28 = 0;
          }
LABEL_46:
          *(unsigned char *)(a1 + 20) = v28 != 0;
        }
        else if (v18 == 2)
        {
          uint64_t v33 = PBReaderReadString();
          int v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        else if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_40;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_42;
            }
          }
          v3[*v6] = 1;
LABEL_40:
          if (v3[*v6]) {
            LODWORD(v21) = 0;
          }
LABEL_42:
          *(_DWORD *)(a1 + 16) = v21;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_49;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189D5D728(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPProblemResponseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPProblemResponseReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D5D78C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPProblemResponseIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_41;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_41;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2) {
          goto LABEL_43;
        }
      }
      else if (v17 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_43;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0)
          {
            BOOL v23 = v18++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_40;
        }
LABEL_37:
        a1[*v4] = 1;
        goto LABEL_40;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_43:
        BOOL v29 = 0;
        goto LABEL_42;
      }
LABEL_40:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_41;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_43;
    }
    unsigned int v24 = 0;
    while (1)
    {
      uint64_t v25 = *v2;
      uint64_t v26 = *(void *)&a1[v25];
      unint64_t v27 = v26 + 1;
      if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
        goto LABEL_37;
      }
      int v28 = *(char *)(*(void *)&a1[*v5] + v26);
      *(void *)&a1[v25] = v27;
      if (v28 < 0)
      {
        BOOL v23 = v24++ > 8;
        if (!v23) {
          continue;
        }
      }
      goto LABEL_40;
    }
  }
LABEL_41:
  BOOL v29 = a1[*v4] == 0;
LABEL_42:
  PBReaderRecallMark();
  return v29;
}

void sub_189D5E018(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPProblemStatusReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFDFFFCFFFBLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 2;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        char v59 = (v16 == 0) | v15;
        unint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v58 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_90;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_90:
      if (v15)
      {
        char v52 = 1;
        goto LABEL_101;
      }
      if (v16)
      {
        while (1)
        {
          int v53 = *v16++;
          char v54 = 16;
          switch(v53)
          {
            case 0:
              goto LABEL_102;
            case 1:
              goto LABEL_97;
            case 4:
              char v54 = 32;
              goto LABEL_97;
            case 5:
              char v54 = 8;
              goto LABEL_97;
            case 6:
              char v54 = 4;
LABEL_97:
              *(unsigned char *)(a1 + 72) |= v54;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_102;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v59 & 1) == 0)
    {
      char v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x10) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v36;
          goto LABEL_70;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_100;
        }
        char v51 = 8 * *(unsigned char *)(a1 + 72);
        goto LABEL_85;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_71;
        }
        *(unsigned char *)(a1 + 72) |= 1u;
        uint64_t v39 = *v17;
        unint64_t v40 = *(void *)(v3 + v39);
        if (v40 <= 0xFFFFFFFFFFFFFFF7 && v40 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v41 = *(void *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v40 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v41 = 0;
        }
        *(void *)(a1 + 16) = v41;
        goto LABEL_89;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_71;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 72) |= 2u;
        while (2)
        {
          uint64_t v45 = *v17;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v19) + v46);
            *(void *)(v3 + v4std::__function::__value_func<std::unordered_set<unsigned long long> ()(void)>::~__value_func[abi:ne180100]((void *)this + 5) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v27 = v43++ >= 9;
              if (v27)
              {
                LODWORD(v44) = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v44) = 0;
        }
LABEL_76:
        *(_DWORD *)(a1 + 68) = v44;
        goto LABEL_89;
      case 4:
        if (!v31) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_100;
          }
          char v51 = 4 * *(unsigned char *)(a1 + 72);
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_100;
        }
        BOOL v57 = objc_alloc_init(GEORPResolution);
        if (!GEORPResolutionReadAllFrom((uint64_t)v57, (void *)v3, v9 & 1)) {
          goto LABEL_99;
        }
        PBReaderRecallMark();
        uint64_t v49 = 48;
        goto LABEL_69;
      case 5:
        if (!v31) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 72) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_100;
          }
          char v51 = 16 * *(unsigned char *)(a1 + 72);
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_100;
        }
        BOOL v57 = objc_alloc_init(GEORPNotification);
        if (!GEORPNotificationReadAllFrom((uint64_t)v57, (void *)v3, v9 & 1)) {
          goto LABEL_99;
        }
        PBReaderRecallMark();
        uint64_t v49 = 32;
        goto LABEL_69;
      case 6:
        if (!v31)
        {
LABEL_71:
          char v50 = PBReaderSkipValueWithTag();
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v58;
          if ((v50 & 1) == 0)
          {
LABEL_98:
            char v52 = 0;
            goto LABEL_101;
          }
LABEL_89:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_90;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 72) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_100;
          }
          char v51 = 32 * *(unsigned char *)(a1 + 72);
LABEL_85:
          v7 += v51 >> 7;
LABEL_86:
          char v15 = v58;
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_89;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_100;
        }
        BOOL v57 = objc_alloc_init(GEORPDetails);
        if (GEORPDetailsReadAllFrom((uint64_t)v57, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v49 = 24;
LABEL_69:
          uint64_t v37 = *(void **)(a1 + v49);
          *(void *)(a1 + v49) = v57;
LABEL_70:

          --v7;
          goto LABEL_86;
        }
LABEL_99:

LABEL_100:
        char v52 = 0;
        char v15 = v58;
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_101:
        *(unsigned char *)(a1 + 72) |= 0x10u;
        *(unsigned char *)(a1 + 72) |= 0x20u;
        *(unsigned char *)(a1 + 72) |= 8u;
        *(unsigned char *)(a1 + 72) |= 4u;
        if (v52)
        {
LABEL_102:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_103;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_103:
            char v55 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v38 = PBReaderSkipValueWithTag();
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v58;
        if (!v38) {
          goto LABEL_98;
        }
        goto LABEL_89;
    }
  }
}

void sub_189D5EB40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D5ECAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D5EE1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D5F674(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPProblemStatusReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPProblemStatusReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPProblemStatusReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPProblemStatusReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPProblemStatusReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 48) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189D5F840(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPProblemStatusReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPProblemStatusReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189D5F8A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPProblemStatusIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2) {
            goto LABEL_51;
          }
          goto LABEL_20;
        case 2u:
          if (v16 != 1) {
            goto LABEL_51;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_47;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_47;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_51;
          }
          unsigned int v21 = 0;
          break;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPResolutionIsValid(a1)) {
            goto LABEL_51;
          }
          goto LABEL_45;
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPNotificationIsValid(a1)) {
            goto LABEL_51;
          }
          goto LABEL_45;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPDetailsIsValid(a1)) {
            goto LABEL_51;
          }
LABEL_45:
          PBReaderRecallMark();
          continue;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_51:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v22 = *v2;
        uint64_t v23 = *(void *)&a1[v22];
        unint64_t v24 = v23 + 1;
        if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
          break;
        }
        int v25 = *(char *)(*(void *)&a1[*v5] + v23);
        *(void *)&a1[v22] = v24;
        if (v25 < 0 && v21++ <= 8) {
          continue;
        }
        goto LABEL_48;
      }
      uint64_t v14 = *v4;
LABEL_47:
      a1[v14] = 1;
LABEL_48:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEORPResolutionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 1) {
            goto LABEL_59;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_55;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_55;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 3u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1)) {
            goto LABEL_59;
          }
          goto LABEL_32;
        case 4u:
          if (v16 == 2) {
            goto LABEL_44;
          }
          goto LABEL_59;
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1)) {
            goto LABEL_59;
          }
LABEL_32:
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_59;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_54;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_56;
          }
        case 7u:
          if (v16 == 2) {
            goto LABEL_44;
          }
          goto LABEL_59;
        case 8u:
          if (v16 == 2) {
            goto LABEL_44;
          }
          goto LABEL_59;
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_59;
          }
          unsigned int v27 = 0;
          break;
        default:
LABEL_44:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_59:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v28 = *v2;
        uint64_t v29 = *(void *)&a1[v28];
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
          break;
        }
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v26 = v27++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_56;
      }
LABEL_54:
      uint64_t v14 = *v4;
LABEL_55:
      a1[v14] = 1;
LABEL_56:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

void sub_189D600FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPProblemStatusIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v2 = *(unsigned char *)(a1 + 72);
  if ((v2 & 0x50) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 72) & 0x20) != 0)
  {
    if (GEORPResolutionIsDirty(*(void *)(a1 + 48))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 72);
  }
  if ((v2 & 8) == 0) {
    goto LABEL_9;
  }
  if (GEORPNotificationIsDirty(*(void *)(a1 + 32))) {
    return 1;
  }
  char v2 = *(unsigned char *)(a1 + 72);
LABEL_9:
  if ((v2 & 4) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 24);

  return (uint64_t)GEORPDetailsIsDirty(v4);
}

os_unfair_lock_s *GEORPProblemStatusIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPProblemStatusIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189D605F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D60BD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPProblemStatusRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFFDFFFCFFF9FFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 2) & 1)+ ((*(_WORD *)(a1 + 88) >> 1) & 1)+ ((*(_WORD *)(a1 + 88) >> 5) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 4;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        char v58 = (v16 == 0) | v15;
        unint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v57 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_103;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_103:
      if (v15)
      {
        char v50 = 1;
        goto LABEL_118;
      }
      if (v16)
      {
        while (1)
        {
          int v52 = *v16++;
          __int16 v51 = 128;
          switch(v52)
          {
            case 0:
              goto LABEL_119;
            case 1:
              goto LABEL_113;
            case 2:
              __int16 v51 = 64;
              goto LABEL_113;
            case 3:
              __int16 v51 = 16;
              goto LABEL_113;
            case 4:
              __int16 v51 = 8;
              goto LABEL_113;
            case 5:
              __int16 v51 = 4;
              goto LABEL_113;
            case 6:
              __int16 v51 = 2;
              goto LABEL_113;
            case 7:
              __int16 v51 = 32;
LABEL_113:
              *(_WORD *)(a1 + 88) |= v51;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_119;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v58 & 1) == 0)
    {
      BOOL v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_82;
        }
        if ((*(_WORD *)(a1 + 88) & 0x80) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_117;
          }
          char v55 = objc_alloc_init(GEORPUserCredentials);
          if (GEORPUserCredentialsReadAllFrom((uint64_t)v55, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            uint64_t v36 = 64;
            goto LABEL_72;
          }
          goto LABEL_116;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_117;
        }
        __int16 v49 = *(_WORD *)(a1 + 88) << 8;
        goto LABEL_100;
      case 2:
        if (!v31) {
          goto LABEL_82;
        }
        if ((*(_WORD *)(a1 + 88) & 0x40) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = *(void **)(a1 + 56);
          *(void *)(a1 + 56) = v38;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_117;
        }
        __int16 v49 = *(_WORD *)(a1 + 88) << 9;
        goto LABEL_100;
      case 3:
        if (!v31 || (*(_WORD *)(a1 + 88) & 0x10) != 0) {
          goto LABEL_82;
        }
        unint64_t v40 = PBReaderReadString();
        if (v40)
        {
          char v56 = v40;
          -[GEORPProblemStatusRequest _addNoFlagsProblemId:](a1, v40);
          unint64_t v40 = v56;
        }

        goto LABEL_101;
      case 4:
        if (!v31) {
          goto LABEL_82;
        }
        if ((*(_WORD *)(a1 + 88) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_117;
          }
          __int16 v49 = *(_WORD *)(a1 + 88) << 12;
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_117;
        }
        char v55 = objc_alloc_init(GEORPClientCapabilities);
        if (!GEORPClientCapabilitiesReadAllFrom((uint64_t)v55, (void *)v3)) {
          goto LABEL_116;
        }
        PBReaderRecallMark();
        uint64_t v36 = 32;
        goto LABEL_72;
      case 5:
        if (!v31) {
          goto LABEL_82;
        }
        if ((*(_WORD *)(a1 + 88) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_117;
          }
          __int16 v49 = *(_WORD *)(a1 + 88) << 13;
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_117;
        }
        char v55 = objc_alloc_init(GEOPDAnalyticMetadata);
        if (!GEOPDAnalyticMetadataReadAllFrom((uint64_t)v55, (void *)v3, v9 & 1)) {
          goto LABEL_116;
        }
        PBReaderRecallMark();
        uint64_t v36 = 24;
        goto LABEL_72;
      case 6:
        if (!v31) {
          goto LABEL_82;
        }
        if ((*(_WORD *)(a1 + 88) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_117;
          }
          __int16 v49 = *(_WORD *)(a1 + 88) << 14;
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_117;
        }
        char v55 = objc_alloc_init(GEOABSecondPartyPlaceRequestClientMetaData);
        if (!GEOABSecondPartyPlaceRequestClientMetaDataReadAllFrom((uint64_t)v55, (void *)v3, v9 & 1)) {
          goto LABEL_116;
        }
        PBReaderRecallMark();
        uint64_t v36 = 16;
        goto LABEL_72;
      case 7:
        if (!v31) {
          goto LABEL_82;
        }
        if ((*(_WORD *)(a1 + 88) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_117;
          }
          __int16 v49 = *(_WORD *)(a1 + 88) << 10;
LABEL_100:
          v7 += v49 >> 15;
LABEL_101:
          char v15 = v57;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_102:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_103;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_117;
        }
        char v55 = objc_alloc_init(GEOServicesState);
        if (GEOServicesStateReadAllFrom((uint64_t)v55, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v36 = 48;
LABEL_72:
          uint64_t v39 = *(void **)(a1 + v36);
          *(void *)(a1 + v36) = v55;
LABEL_73:

          --v7;
          goto LABEL_101;
        }
LABEL_116:

LABEL_117:
        char v50 = 0;
        char v15 = v57;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_118:
        *(_WORD *)(a1 + 88) |= 0x80u;
        *(_WORD *)(a1 + 88) |= 0x40u;
        *(_WORD *)(a1 + 88) |= 0x10u;
        *(_WORD *)(a1 + 88) |= 8u;
        *(_WORD *)(a1 + 88) |= 4u;
        *(_WORD *)(a1 + 88) |= 2u;
        *(_WORD *)(a1 + 88) |= 0x20u;
        if (v50)
        {
LABEL_119:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_120;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_120:
            int v53 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 8:
        if (v8)
        {
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v43 = 0;
          *(_WORD *)(a1 + 88) |= 1u;
          while (1)
          {
            uint64_t v44 = *v17;
            uint64_t v45 = *(void *)(v3 + v44);
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)(v3 + *v6)) {
              break;
            }
            char v47 = *(unsigned char *)(*(void *)(v3 + *v19) + v45);
            *(void *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if ((v47 & 0x80) == 0) {
              goto LABEL_85;
            }
            v41 += 7;
            BOOL v27 = v42++ >= 9;
            if (v27)
            {
              uint64_t v43 = 0;
              goto LABEL_87;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_85:
          if (*(unsigned char *)(v3 + *v18)) {
            uint64_t v43 = 0;
          }
LABEL_87:
          *(unsigned char *)(a1 + 84) = v43 != 0;
        }
        else
        {
LABEL_82:
          char v48 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v57;
          if ((v48 & 1) == 0)
          {
LABEL_115:
            char v50 = 0;
            goto LABEL_118;
          }
        }
        goto LABEL_102;
      default:
        int v37 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v57;
        if (!v37) {
          goto LABEL_115;
        }
        goto LABEL_102;
    }
  }
}

void sub_189D615F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D61760(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D61B24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D61C94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D61E04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D61F74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189D629E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}